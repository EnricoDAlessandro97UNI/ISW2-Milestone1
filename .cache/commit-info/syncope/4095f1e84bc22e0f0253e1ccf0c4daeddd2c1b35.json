{"sha":"4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQwOTVmMWU4NGJjMjJlMGYwMjUzZTFjY2YwYzRkYWVkZGQyYzFiMzU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-06T16:13:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-06T16:13:31Z"},"message":"[SYNCOPE-119] Renaming Role to Group","tree":{"sha":"bd9847cdc135db590f488cbb9475e5967fc498ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bd9847cdc135db590f488cbb9475e5967fc498ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f76826f6e521aa7ca227fdbe135f3a6771161eab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f76826f6e521aa7ca227fdbe135f3a6771161eab","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f76826f6e521aa7ca227fdbe135f3a6771161eab"}],"stats":{"total":13897,"additions":6707,"deletions":7190},"files":[{"sha":"a1e781d0bfd8d97eef70003ca54c9768a53bde8b","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeApplication.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.client.console.pages.Logout;\n import org.apache.syncope.client.console.pages.Reports;\n import org.apache.syncope.client.console.pages.Resources;\n-import org.apache.syncope.client.console.pages.Roles;\n+import org.apache.syncope.client.console.pages.Groups;\n import org.apache.syncope.client.console.pages.Schema;\n import org.apache.syncope.client.console.pages.Tasks;\n import org.apache.syncope.client.console.pages.Todo;\n@@ -177,13 +177,13 @@ public void onClick(final AjaxRequestTarget target) {\n                 ? IMG_NOTSEL\n                 : StringUtils.EMPTY) + \"users\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Page> rolesLink = new BookmarkablePageLink<>(\"roles\", Roles.class);\n+        BookmarkablePageLink<Page> groupsLink = new BookmarkablePageLink<>(\"groups\", Groups.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n-                rolesLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Roles\", \"list\"));\n-        page.add(rolesLink);\n-        rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                groupsLink, WebPage.ENABLE, xmlRolesReader.getEntitlement(\"Groups\", \"list\"));\n+        page.add(groupsLink);\n+        groupsLink.add(new Image(\"groupsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n-                : StringUtils.EMPTY) + \"roles\" + Constants.PNG_EXT)));\n+                : StringUtils.EMPTY) + \"groups\" + Constants.PNG_EXT)));\n \n         BookmarkablePageLink<Page> resourcesLink = new BookmarkablePageLink<>(\"resources\", Resources.class);\n         MetaDataRoleAuthorizationStrategy.authorize("},{"sha":"26764b4ef2354f6a8654bc8060923ae3b6c18234","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AttrLayoutType.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAttrLayoutType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,8 +26,8 @@ public enum AttrLayoutType {\n \n     ADMIN_USER(\"admin.user.layout\", Mode.ADMIN, AttributableType.USER),\n     SELF_USER(\"self.user.layout\", Mode.SELF, AttributableType.USER),\n-    ADMIN_ROLE(\"admin.role.layout\", Mode.ADMIN, AttributableType.ROLE),\n-    SELF_ROLE(\"self.role.layout\", Mode.SELF, AttributableType.ROLE),\n+    ADMIN_GROUP(\"admin.group.layout\", Mode.ADMIN, AttributableType.GROUP),\n+    SELF_GROUP(\"self.group.layout\", Mode.SELF, AttributableType.GROUP),\n     ADMIN_MEMBERSHIP(\"admin.membership.layout\", Mode.ADMIN, AttributableType.MEMBERSHIP),\n     SELF_MEMBERSHIP(\"self.membership.layout\", Mode.SELF, AttributableType.MEMBERSHIP);\n \n@@ -76,8 +76,8 @@ public static AttrLayoutType valueOf(final Mode mode, final AttributableType att\n                     result = ADMIN_MEMBERSHIP;\n                     break;\n \n-                case ROLE:\n-                    result = ADMIN_ROLE;\n+                case GROUP:\n+                    result = ADMIN_GROUP;\n                     break;\n \n                 default:\n@@ -92,8 +92,8 @@ public static AttrLayoutType valueOf(final Mode mode, final AttributableType att\n                     result = SELF_MEMBERSHIP;\n                     break;\n \n-                case ROLE:\n-                    result = SELF_ROLE;\n+                case GROUP:\n+                    result = SELF_GROUP;\n                     break;\n \n                 default:"},{"sha":"0b8391a2867b6d532743a6dd119eda2cc4d1bbb8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -50,19 +50,19 @@ public final class Constants {\n \n     public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n \n-    public static final String PREF_USER_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n+    public static final String PREF_USER_PLAIN_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n \n     public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS = \"user.derived.schema.paginator.rows\";\n \n     public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS = \"user.virtual.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_SCHEMA_PAGINATOR_ROWS = \"role.schema.paginator.rows\";\n+    public static final String PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"group.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS = \"role.derived.schema.paginator.rows\";\n+    public static final String PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS = \"group.derived.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS = \"role.virtual.schema.paginator.rows\";\n+    public static final String PREF_GROUP_VIR_SCHEMA_PAGINATOR_ROWS = \"group.virtual.schema.paginator.rows\";\n \n-    public static final String PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS = \"membership.schema.paginator.rows\";\n+    public static final String PREF_MEMBERSHIP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"membership.schema.paginator.rows\";\n \n     public static final String PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS = \"membership.derived.aschema.paginator.rows\";\n "},{"sha":"bc7d21bf71a74791390f126210f8294f1be92aa8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/GroupTreeBuilder.java","status":"renamed","additions":39,"deletions":27,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FGroupTreeBuilder.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,65 +26,77 @@\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeModel;\n import javax.swing.tree.TreeModel;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class RoleTreeBuilder {\n+public class GroupTreeBuilder {\n \n     @Autowired\n-    private RoleRestClient restClient;\n+    private GroupRestClient restClient;\n \n-    private final RoleTOComparator comparator = new RoleTOComparator();\n+    private final GroupTOComparator comparator = new GroupTOComparator();\n \n-    private List<RoleTO> allRoles;\n+    private List<GroupTO> allGroups;\n \n-    private List<RoleTO> getChildRoles(final long parentRoleId, final List<RoleTO> roles) {\n-        List<RoleTO> result = new ArrayList<RoleTO>();\n-        for (RoleTO role : roles) {\n-            if (role.getParent() == parentRoleId) {\n-                result.add(role);\n+    private List<GroupTO> getChildGroups(final long parentGroupId, final List<GroupTO> groups) {\n+        List<GroupTO> result = new ArrayList<>();\n+        for (GroupTO group : groups) {\n+            if (group.getParent() == parentGroupId) {\n+                result.add(group);\n             }\n         }\n \n         Collections.sort(result, comparator);\n         return result;\n     }\n \n-    private void populateSubtree(final DefaultMutableTreeNode subRoot, final List<RoleTO> roles) {\n-        RoleTO role = (RoleTO) subRoot.getUserObject();\n+    private void populateSubtree(final DefaultMutableTreeNode subRoot, final List<GroupTO> groups) {\n+        GroupTO group = (GroupTO) subRoot.getUserObject();\n \n         DefaultMutableTreeNode child;\n-        for (RoleTO subRoleTO : getChildRoles(role.getKey(), roles)) {\n-            child = new DefaultMutableTreeNode(subRoleTO);\n+        for (GroupTO subGroupTO : getChildGroups(group.getKey(), groups)) {\n+            child = new DefaultMutableTreeNode(subGroupTO);\n             subRoot.add(child);\n-            populateSubtree(child, roles);\n+            populateSubtree(child, groups);\n         }\n     }\n \n-    public List<RoleTO> getAllRoles() {\n-        return this.allRoles;\n+    public List<GroupTO> getAllGroups() {\n+        return this.allGroups;\n     }\n \n     public TreeModel build() {\n-        this.allRoles = this.restClient.list();\n-        return build(this.allRoles);\n+        this.allGroups = this.restClient.list();\n+        return build(this.allGroups);\n     }\n \n-    public TreeModel build(final List<RoleTO> roles) {\n-        DefaultMutableTreeNode fakeroot = new DefaultMutableTreeNode(new FakeRootRoleTO());\n+    public TreeModel build(final List<GroupTO> groups) {\n+        DefaultMutableTreeNode fakeroot = new DefaultMutableTreeNode(new FakeRootGroupTO());\n \n-        populateSubtree(fakeroot, roles);\n+        populateSubtree(fakeroot, groups);\n \n         return new DefaultTreeModel(fakeroot);\n     }\n \n-    private static class RoleTOComparator implements Comparator<RoleTO>, Serializable {\n+    public GroupTO findGroup(final long groupKey) {\n+        GroupTO found = null;\n+        if (getAllGroups() != null) {\n+            for (GroupTO groupTO : getAllGroups()) {\n+                if (groupTO.getKey() == groupKey) {\n+                    found = groupTO;\n+                }\n+            }\n+        }\n+        return found;\n+    }\n+\n+    private static class GroupTOComparator implements Comparator<GroupTO>, Serializable {\n \n         private static final long serialVersionUID = 7085057398406518811L;\n \n         @Override\n-        public int compare(final RoleTO r1, final RoleTO r2) {\n+        public int compare(final GroupTO r1, final GroupTO r2) {\n             if (r1.getKey() < r2.getKey()) {\n                 return -1;\n             }\n@@ -96,11 +108,11 @@ public int compare(final RoleTO r1, final RoleTO r2) {\n         }\n     }\n \n-    private static class FakeRootRoleTO extends RoleTO {\n+    private static class FakeRootGroupTO extends GroupTO {\n \n         private static final long serialVersionUID = 4839183625773925488L;\n \n-        public FakeRootRoleTO() {\n+        public FakeRootGroupTO() {\n             super();\n \n             setKey(0);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/RoleTreeBuilder.java"},{"sha":"27e062b49753cfc3ffad448dafc36cba7ab5e6a9","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/RoleUtils.java","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f76826f6e521aa7ca227fdbe135f3a6771161eab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f76826f6e521aa7ca227fdbe135f3a6771161eab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleUtils.java?ref=f76826f6e521aa7ca227fdbe135f3a6771161eab","patch":"@@ -1,36 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.commons;\n-\n-import org.apache.syncope.common.lib.to.RoleTO;\n-\n-public class RoleUtils {\n-\n-    public static RoleTO findRole(final RoleTreeBuilder roleTreeBuilder, final long roleKey) {\n-        RoleTO found = null;\n-        if (roleTreeBuilder.getAllRoles() != null) {\n-            for (RoleTO roleTO : roleTreeBuilder.getAllRoles()) {\n-                if (roleTO.getKey()== roleKey) {\n-                    found = roleTO;\n-                }\n-            }\n-        }\n-        return found;\n-    }\n-}"},{"sha":"47d00862e9e3c9ac3bf7d39a6711ccc2fc21082b","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,7 +24,7 @@\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public class StatusBean implements Serializable {\n@@ -46,7 +46,7 @@ public class StatusBean implements Serializable {\n     public StatusBean(final AbstractAttributableTO attributable, String resourceName) {\n         this.attributableKey = attributable.getKey();\n         this.attributableName = attributable instanceof UserTO\n-                ? ((UserTO) attributable).getUsername() : ((RoleTO) attributable).getName();\n+                ? ((UserTO) attributable).getUsername() : ((GroupTO) attributable).getName();\n         this.resourceName = resourceName;\n     }\n "},{"sha":"391d20288c69252c4d11b63b6546692ba8ce19a9","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -102,15 +102,15 @@ public StatusBean getStatusBean(\n             final AbstractAttributableTO attributable,\n             final String resourceName,\n             final ConnObjectTO objectTO,\n-            final boolean isRole) {\n+            final boolean isGroup) {\n \n         final StatusBean statusBean = new StatusBean(attributable, resourceName);\n \n         if (objectTO != null) {\n             final Boolean enabled = isEnabled(objectTO);\n \n             final Status status = enabled == null\n-                    ? (isRole ? Status.ACTIVE : Status.UNDEFINED)\n+                    ? (isGroup ? Status.ACTIVE : Status.UNDEFINED)\n                     : enabled\n                             ? Status.ACTIVE\n                             : Status.SUSPENDED;"},{"sha":"830f369058b4883dba338f0328eabff554a84024","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractBasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.client.console.rest.ConfigurationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n@@ -71,7 +71,7 @@ public class AbstractBasePage extends WebPage {\n     protected UserSelfRestClient userSelfRestClient;\n \n     @SpringBean\n-    protected RoleRestClient roleRestClient;\n+    protected GroupRestClient groupRestClient;\n \n     @SpringBean\n     protected TaskRestClient taskRestClient;"},{"sha":"b9b896855a64e814173f8227a8df95943a1f95de","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,7 +35,7 @@\n import org.apache.wicket.model.IModel;\n \n /**\n- * Show user or role status after performing a successful operation.\n+ * Show user or group status after performing a successful operation.\n  */\n public class BulkActionResultModalPage<T, S> extends BaseModalPage {\n "},{"sha":"9f8c7347bc8d262f19b4722425baccfd668dac49","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Configuration.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -156,8 +156,8 @@ public Configuration() {\n         // Layouts\n         add(new LayoutsPanel(\"adminUserLayoutPanel\", AttrLayoutType.ADMIN_USER, feedbackPanel));\n         add(new LayoutsPanel(\"selfUserLayoutPanel\", AttrLayoutType.SELF_USER, feedbackPanel));\n-        add(new LayoutsPanel(\"adminRoleLayoutPanel\", AttrLayoutType.ADMIN_ROLE, feedbackPanel));\n-        add(new LayoutsPanel(\"selfRoleLayoutPanel\", AttrLayoutType.SELF_ROLE, feedbackPanel));\n+        add(new LayoutsPanel(\"adminGroupLayoutPanel\", AttrLayoutType.ADMIN_GROUP, feedbackPanel));\n+        add(new LayoutsPanel(\"selfGroupLayoutPanel\", AttrLayoutType.SELF_GROUP, feedbackPanel));\n         add(new LayoutsPanel(\"adminMembershipLayoutPanel\", AttrLayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n         add(new LayoutsPanel(\"selfMembershipLayoutPanel\", AttrLayoutType.SELF_MEMBERSHIP, feedbackPanel));\n "},{"sha":"8b4daa9dc15418291ded1384729013a04075937f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupModalPage.java","status":"renamed","additions":32,"deletions":30,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,10 +23,10 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.client.console.panels.RolePanel;\n+import org.apache.syncope.client.console.panels.GroupPanel;\n import org.apache.syncope.common.lib.AttributableOperations;\n-import org.apache.syncope.common.lib.mod.RoleMod;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -39,9 +39,9 @@\n import org.apache.wicket.model.ResourceModel;\n \n /**\n- * Modal window with Role form.\n+ * Modal window with Group form.\n  */\n-public class RoleModalPage extends BaseModalPage {\n+public class GroupModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -1732493223434085205L;\n \n@@ -53,37 +53,39 @@ public class RoleModalPage extends BaseModalPage {\n \n     protected final boolean createFlag;\n \n-    protected final RolePanel rolePanel;\n+    protected final GroupPanel groupPanel;\n \n-    protected RoleTO originalRoleTO;\n+    protected GroupTO originalGroupTO;\n \n-    public RoleModalPage(final PageReference pageRef, final ModalWindow window, final RoleTO roleTO) {\n-        this(pageRef, window, roleTO, Mode.ADMIN);\n+    public GroupModalPage(final PageReference pageRef, final ModalWindow window, final GroupTO groupTO) {\n+        this(pageRef, window, groupTO, Mode.ADMIN);\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    public RoleModalPage(final PageReference pageRef, final ModalWindow window, final RoleTO roleTO, final Mode mode) {\n+    public GroupModalPage(\n+            final PageReference pageRef, final ModalWindow window, final GroupTO groupTO, final Mode mode) {\n+        \n         super();\n \n         this.pageRef = pageRef;\n         this.window = window;\n         this.mode = mode;\n \n-        this.createFlag = roleTO.getKey() == 0;\n+        this.createFlag = groupTO.getKey() == 0;\n         if (!createFlag) {\n-            originalRoleTO = SerializationUtils.clone(roleTO);\n+            originalGroupTO = SerializationUtils.clone(groupTO);\n         }\n \n-        final Form<RoleTO> form = new Form<RoleTO>(\"roleForm\");\n+        final Form<GroupTO> form = new Form<GroupTO>(\"groupForm\");\n         form.setMultiPart(true);\n \n-        add(new Label(\"displayName\", roleTO.getKey() == 0 ? \"\" : roleTO.getDisplayName()));\n+        add(new Label(\"displayName\", groupTO.getKey() == 0 ? \"\" : groupTO.getDisplayName()));\n \n-        form.setModel(new CompoundPropertyModel<RoleTO>(roleTO));\n+        form.setModel(new CompoundPropertyModel<GroupTO>(groupTO));\n \n-        this.rolePanel = new RolePanel.Builder(\"rolePanel\").form(form).roleTO(roleTO).\n-                roleModalPageMode(mode).pageRef(getPageReference()).build();\n-        form.add(rolePanel);\n+        this.groupPanel = new GroupPanel.Builder(\"groupPanel\").\n+                form(form).groupTO(groupTO).groupModalPageMode(mode).pageRef(getPageReference()).build();\n+        form.add(groupPanel);\n \n         final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n \n@@ -125,7 +127,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         cancel.setDefaultFormProcessing(false);\n         form.add(cancel);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getEntitlement(\"Roles\",\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getEntitlement(\"Groups\",\n                 createFlag\n                         ? \"create\"\n                         : \"update\"));\n@@ -134,22 +136,22 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n     }\n \n     protected void submitAction(final AjaxRequestTarget target, final Form<?> form) {\n-        final RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n-        final List<String> entitlementList = new ArrayList<String>(rolePanel.getSelectedEntitlements());\n-        roleTO.getEntitlements().clear();\n-        roleTO.getEntitlements().addAll(entitlementList);\n+        final GroupTO groupTO = (GroupTO) form.getDefaultModelObject();\n+        final List<String> entitlementList = new ArrayList<String>(groupPanel.getSelectedEntitlements());\n+        groupTO.getEntitlements().clear();\n+        groupTO.getEntitlements().addAll(entitlementList);\n \n-        RoleTO result;\n+        GroupTO result;\n         if (createFlag) {\n-            result = roleRestClient.create(roleTO);\n+            result = groupRestClient.create(groupTO);\n         } else {\n-            RoleMod roleMod = AttributableOperations.diff(roleTO, originalRoleTO);\n+            GroupMod groupMod = AttributableOperations.diff(groupTO, originalGroupTO);\n \n-            // update role just if it is changed\n-            if (roleMod.isEmpty()) {\n-                result = roleTO;\n+            // update group just if it is changed\n+            if (groupMod.isEmpty()) {\n+                result = groupTO;\n             } else {\n-                result = roleRestClient.update(originalRoleTO.getETagValue(), roleMod);\n+                result = groupRestClient.update(originalGroupTO.getETagValue(), groupMod);\n             }\n         }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/RoleModalPage.java"},{"sha":"97b7abfc37ab3abcb698e5fb9bfd385aa5dc786d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupSelectModalPage.java","status":"renamed","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,11 +20,11 @@\n \n import java.lang.reflect.Constructor;\n import javax.swing.tree.DefaultMutableTreeNode;\n-import org.apache.syncope.client.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.client.console.commons.GroupTreeBuilder;\n import org.apache.syncope.client.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansion;\n import org.apache.syncope.client.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansionModel;\n-import org.apache.syncope.client.console.wicket.markup.html.tree.TreeRoleProvider;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.client.console.wicket.markup.html.tree.TreeGroupProvider;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -39,19 +39,19 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class RoleSelectModalPage extends BaseModalPage {\n+public class GroupSelectModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 2106489458494696439L;\n \n     @SpringBean\n-    private RoleTreeBuilder roleTreeBuilder;\n+    private GroupTreeBuilder groupTreeBuilder;\n \n     private final NestedTree<DefaultMutableTreeNode> tree;\n \n-    public RoleSelectModalPage(final PageReference pageRef, final ModalWindow window, final Class<?> payloadClass) {\n+    public GroupSelectModalPage(final PageReference pageRef, final ModalWindow window, final Class<?> payloadClass) {\n         super();\n \n-        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeRoleProvider(roleTreeBuilder, true);\n+        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeGroupProvider(groupTreeBuilder, true);\n         final DefaultMutableTreeNodeExpansionModel treeModel = new DefaultMutableTreeNodeExpansionModel();\n \n         tree = new DefaultNestedTree<DefaultMutableTreeNode>(\"treeTable\", treeProvider, treeModel) {\n@@ -61,9 +61,9 @@ public RoleSelectModalPage(final PageReference pageRef, final ModalWindow window\n             @Override\n             protected Component newContentComponent(final String id, final IModel<DefaultMutableTreeNode> node) {\n                 final DefaultMutableTreeNode treeNode = node.getObject();\n-                final RoleTO roleTO = (RoleTO) treeNode.getUserObject();\n+                final GroupTO groupTO = (GroupTO) treeNode.getUserObject();\n \n-                return new Folder<DefaultMutableTreeNode>(id, RoleSelectModalPage.this.tree, node) {\n+                return new Folder<DefaultMutableTreeNode>(id, GroupSelectModalPage.this.tree, node) {\n \n                     private static final long serialVersionUID = 9046323319920426493L;\n \n@@ -74,7 +74,7 @@ protected boolean isClickable() {\n \n                     @Override\n                     protected IModel<?> newLabelModel(final IModel<DefaultMutableTreeNode> model) {\n-                        return new Model<>(roleTO.getDisplayName());\n+                        return new Model<>(groupTO.getDisplayName());\n                     }\n \n                     @Override\n@@ -83,11 +83,11 @@ protected void onClick(final AjaxRequestTarget target) {\n \n                         try {\n                             Constructor<?> constructor = payloadClass.getConstructor(Long.class);\n-                            Object payload = constructor.newInstance(roleTO.getKey());\n+                            Object payload = constructor.newInstance(groupTO.getKey());\n \n                             send(pageRef.getPage(), Broadcast.BREADTH, payload);\n                         } catch (Exception e) {\n-                            LOG.error(\"Could not send role select event\", e);\n+                            LOG.error(\"Could not send group select event\", e);\n                         }\n \n                         window.close(target);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/RoleSelectModalPage.java"},{"sha":"293e402436d35459dc534a3c1ae9f8faea3bdd4d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupTemplateModalPage.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupTemplateModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,32 +19,32 @@\n package org.apache.syncope.client.console.pages;\n \n import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n \n-public class RoleTemplateModalPage extends RoleModalPage {\n+public class GroupTemplateModalPage extends GroupModalPage {\n \n     private static final long serialVersionUID = -3849135555203409845L;\n \n     private final SyncTaskTO syncTaskTO;\n \n-    public RoleTemplateModalPage(final PageReference callerPageRef, final ModalWindow window,\n+    public GroupTemplateModalPage(final PageReference callerPageRef, final ModalWindow window,\n             final SyncTaskTO syncTaskTO) {\n \n-        super(callerPageRef, window, syncTaskTO.getRoleTemplate() == null\n-                ? new RoleTO()\n-                : syncTaskTO.getRoleTemplate(), Mode.TEMPLATE);\n+        super(callerPageRef, window, syncTaskTO.getGroupTemplate() == null\n+                ? new GroupTO()\n+                : syncTaskTO.getGroupTemplate(), Mode.TEMPLATE);\n \n         this.syncTaskTO = syncTaskTO;\n     }\n \n     @Override\n     protected void submitAction(final AjaxRequestTarget target, final Form form) {\n-        syncTaskTO.setRoleTemplate((RoleTO) form.getModelObject());\n+        syncTaskTO.setGroupTemplate((GroupTO) form.getModelObject());\n         taskRestClient.updateSyncTask(syncTaskTO);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/RoleTemplateModalPage.java"},{"sha":"2e9294049e46c2c1950ddbafd3a1e817be45138f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Groups.java","status":"renamed","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,12 +20,12 @@\n \n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n-import org.apache.syncope.client.console.panels.RoleSearchPanel;\n-import org.apache.syncope.client.console.panels.RoleSearchResultPanel;\n-import org.apache.syncope.client.console.panels.RoleSummaryPanel;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.panels.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.GroupSearchResultPanel;\n+import org.apache.syncope.client.console.panels.GroupSummaryPanel;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n-import org.apache.syncope.client.console.wicket.markup.html.tree.TreeRolePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.tree.TreeGroupPanel;\n import org.apache.wicket.Session;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n@@ -38,9 +38,9 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n- * Roles WebPage.\n+ * Groups WebPage.\n  */\n-public class Roles extends BasePage {\n+public class Groups extends BasePage {\n \n     private static final long serialVersionUID = -2147758241610831969L;\n \n@@ -49,41 +49,41 @@ public class Roles extends BasePage {\n     private static final int WIN_WIDTH = 800;\n \n     @SpringBean\n-    private RoleRestClient restClient;\n+    private GroupRestClient restClient;\n \n-    private final ModalWindow editRoleWin;\n+    private final ModalWindow editGroupWin;\n \n-    private final WebMarkupContainer roleTabsContainer;\n+    private final WebMarkupContainer groupTabsContainer;\n \n-    public Roles(final PageParameters parameters) {\n+    public Groups(final PageParameters parameters) {\n         super(parameters);\n \n-        roleTabsContainer = new WebMarkupContainer(\"roleTabsContainer\");\n-        roleTabsContainer.setOutputMarkupId(true);\n-        add(roleTabsContainer);\n+        groupTabsContainer = new WebMarkupContainer(\"groupTabsContainer\");\n+        groupTabsContainer.setOutputMarkupId(true);\n+        add(groupTabsContainer);\n \n-        editRoleWin = new ModalWindow(\"editRoleWin\");\n-        editRoleWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editRoleWin.setInitialHeight(WIN_HEIGHT);\n-        editRoleWin.setInitialWidth(WIN_WIDTH);\n-        editRoleWin.setCookieName(\"edit-role-modal\");\n-        add(editRoleWin);\n+        editGroupWin = new ModalWindow(\"editGroupWin\");\n+        editGroupWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editGroupWin.setInitialHeight(WIN_HEIGHT);\n+        editGroupWin.setInitialWidth(WIN_WIDTH);\n+        editGroupWin.setCookieName(\"edit-group-modal\");\n+        add(editGroupWin);\n \n-        final TreeRolePanel treePanel = new TreeRolePanel(\"treePanel\");\n+        final TreeGroupPanel treePanel = new TreeGroupPanel(\"treePanel\");\n         treePanel.setOutputMarkupId(true);\n-        roleTabsContainer.add(treePanel);\n+        groupTabsContainer.add(treePanel);\n \n-        final RoleSummaryPanel summaryPanel = new RoleSummaryPanel.Builder(\"summaryPanel\")\n-                .window(editRoleWin).callerPageRef(Roles.this.getPageReference()).build();\n-        roleTabsContainer.add(summaryPanel);\n+        final GroupSummaryPanel summaryPanel = new GroupSummaryPanel.Builder(\"summaryPanel\")\n+                .window(editGroupWin).callerPageRef(Groups.this.getPageReference()).build();\n+        groupTabsContainer.add(summaryPanel);\n \n-        editRoleWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+        editGroupWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                final RoleSummaryPanel summaryPanel = (RoleSummaryPanel) roleTabsContainer.get(\"summaryPanel\");\n+                final GroupSummaryPanel summaryPanel = (GroupSummaryPanel) groupTabsContainer.get(\"summaryPanel\");\n \n                 final TreeNodeClickUpdate data = new TreeNodeClickUpdate(target,\n                         summaryPanel == null || summaryPanel.getSelectedNode() == null\n@@ -102,13 +102,13 @@ public void onClose(final AjaxRequestTarget target) {\n         });\n \n         final AbstractSearchResultPanel searchResult =\n-                new RoleSearchResultPanel(\"searchResult\", true, null, getPageReference(), restClient);\n+                new GroupSearchResultPanel(\"searchResult\", true, null, getPageReference(), restClient);\n         add(searchResult);\n \n         final Form searchForm = new Form(\"searchForm\");\n         add(searchForm);\n \n-        final RoleSearchPanel searchPanel = new RoleSearchPanel.Builder(\"searchPanel\").build();\n+        final GroupSearchPanel searchPanel = new GroupSearchPanel.Builder(\"searchPanel\").build();\n         searchForm.add(searchPanel);\n \n         searchForm.add(new ClearIndicatingAjaxButton(\"search\", new ResourceModel(\"search\"), getPageReference()) {\n@@ -151,12 +151,12 @@ public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof TreeNodeClickUpdate) {\n             final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n \n-            final RoleSummaryPanel summaryPanel = new RoleSummaryPanel.Builder(\"summaryPanel\")\n-                    .window(editRoleWin).callerPageRef(Roles.this.getPageReference())\n+            final GroupSummaryPanel summaryPanel = new GroupSummaryPanel.Builder(\"summaryPanel\")\n+                    .window(editGroupWin).callerPageRef(Groups.this.getPageReference())\n                     .selectedNodeId(update.getSelectedNodeId()).build();\n \n-            roleTabsContainer.addOrReplace(summaryPanel);\n-            update.getTarget().add(roleTabsContainer);\n+            groupTabsContainer.addOrReplace(summaryPanel);\n+            update.getTarget().add(groupTabsContainer);\n         }\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java"},{"sha":"98d8862d28e897b5575b9bfd724863470d152080","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/NotificationModalPage.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,7 +25,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.LoggerCategoryPanel;\n-import org.apache.syncope.client.console.panels.RoleSearchPanel;\n+import org.apache.syncope.client.console.panels.GroupSearchPanel;\n import org.apache.syncope.client.console.panels.UserSearchPanel;\n import org.apache.syncope.client.console.rest.LoggerRestClient;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n@@ -108,26 +108,26 @@ public NotificationModalPage(final PageReference pageRef, final ModalWindow wind\n         form.add(aboutContainer);\n \n         final AjaxCheckBoxPanel checkAbout = new AjaxCheckBoxPanel(\"checkAbout\", \"checkAbout\", new Model<Boolean>(\n-                notificationTO.getUserAbout() == null && notificationTO.getRoleAbout() == null));\n+                notificationTO.getUserAbout() == null && notificationTO.getGroupAbout() == null));\n         aboutContainer.add(checkAbout);\n \n         final AjaxCheckBoxPanel checkUserAbout = new AjaxCheckBoxPanel(\"checkUserAbout\", \"checkUserAbout\",\n                 new Model<Boolean>(notificationTO.getUserAbout() != null));\n         aboutContainer.add(checkUserAbout);\n \n-        final AjaxCheckBoxPanel checkRoleAbout = new AjaxCheckBoxPanel(\"checkRoleAbout\", \"checkRoleAbout\",\n-                new Model<Boolean>(notificationTO.getRoleAbout() != null));\n-        aboutContainer.add(checkRoleAbout);\n+        final AjaxCheckBoxPanel checkGroupAbout = new AjaxCheckBoxPanel(\"checkGroupAbout\", \"checkGroupAbout\",\n+                new Model<Boolean>(notificationTO.getGroupAbout() != null));\n+        aboutContainer.add(checkGroupAbout);\n \n         final UserSearchPanel userAbout =\n                 new UserSearchPanel.Builder(\"userAbout\").fiql(notificationTO.getUserAbout()).build();\n         aboutContainer.add(userAbout);\n         userAbout.setEnabled(checkUserAbout.getModelObject());\n \n-        final RoleSearchPanel roleAbout =\n-                new RoleSearchPanel.Builder(\"roleAbout\").fiql(notificationTO.getRoleAbout()).build();\n-        aboutContainer.add(roleAbout);\n-        roleAbout.setEnabled(checkRoleAbout.getModelObject());\n+        final GroupSearchPanel groupAbout =\n+                new GroupSearchPanel.Builder(\"groupAbout\").fiql(notificationTO.getGroupAbout()).build();\n+        aboutContainer.add(groupAbout);\n+        groupAbout.setEnabled(checkGroupAbout.getModelObject());\n \n         checkAbout.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -137,9 +137,9 @@ public NotificationModalPage(final PageReference pageRef, final ModalWindow wind\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 if (checkAbout.getModelObject()) {\n                     checkUserAbout.setModelObject(Boolean.FALSE);\n-                    checkRoleAbout.setModelObject(Boolean.FALSE);\n+                    checkGroupAbout.setModelObject(Boolean.FALSE);\n                     userAbout.setEnabled(Boolean.FALSE);\n-                    roleAbout.setEnabled(Boolean.FALSE);\n+                    groupAbout.setEnabled(Boolean.FALSE);\n                 } else {\n                     checkAbout.setModelObject(Boolean.TRUE);\n                 }\n@@ -155,8 +155,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 if (checkUserAbout.getModelObject()) {\n                     checkAbout.setModelObject(!checkUserAbout.getModelObject());\n-                    checkRoleAbout.setModelObject(!checkUserAbout.getModelObject());\n-                    roleAbout.setEnabled(Boolean.FALSE);\n+                    checkGroupAbout.setModelObject(!checkUserAbout.getModelObject());\n+                    groupAbout.setEnabled(Boolean.FALSE);\n                 } else {\n                     checkUserAbout.setModelObject(Boolean.TRUE);\n                 }\n@@ -165,20 +165,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        checkRoleAbout.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+        checkGroupAbout.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (checkRoleAbout.getModelObject()) {\n+                if (checkGroupAbout.getModelObject()) {\n                     checkAbout.setModelObject(Boolean.FALSE);\n                     checkUserAbout.setModelObject(Boolean.FALSE);\n                     userAbout.setEnabled(Boolean.FALSE);\n                 } else {\n-                    checkRoleAbout.setModelObject(Boolean.TRUE);\n+                    checkGroupAbout.setModelObject(Boolean.TRUE);\n                 }\n-                roleAbout.setEnabled(Boolean.TRUE);\n+                groupAbout.setEnabled(Boolean.TRUE);\n                 target.add(aboutContainer);\n             }\n         });\n@@ -353,9 +353,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 notificationTO.setUserAbout(\n                         !checkAbout.getModelObject() && checkUserAbout.getModelObject() ? userAbout.buildFIQL() : null);\n-                notificationTO.setRoleAbout(\n+                notificationTO.setGroupAbout(\n                         !checkAbout.getModelObject()\n-                        && checkRoleAbout.getModelObject() ? roleAbout.buildFIQL() : null);\n+                        && checkGroupAbout.getModelObject() ? groupAbout.buildFIQL() : null);\n                 notificationTO.setRecipients(checkRecipients.getModelObject() ? recipients.buildFIQL() : null);\n                 notificationTO.getStaticRecipients().removeAll(Collections.singleton(null));\n "},{"sha":"8daecb72f319aa8242a01479d9251a33868b9f23","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PolicyModalPage.java","status":"modified","additions":23,"deletions":24,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.common.lib.to.AccountPolicyTO;\n import org.apache.syncope.common.lib.to.PasswordPolicyTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.SyncPolicyTO;\n import org.apache.syncope.common.lib.types.AccountPolicySpec;\n import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n@@ -235,10 +235,10 @@ public IModel<String> model(final String object) {\n                 new AjaxFallbackDefaultDataTable<>(\"resources\", resColumns, resDataProvider, 10);\n         form.add(resources);\n \n-        List<IColumn<RoleTO, String>> roleColumns = new ArrayList<>();\n-        roleColumns.add(new PropertyColumn<RoleTO, String>(new ResourceModel(\"key\", \"key\"), \"key\", \"key\"));\n-        roleColumns.add(new PropertyColumn<RoleTO, String>(new ResourceModel(\"name\", \"name\"), \"name\", \"name\"));\n-        roleColumns.add(new AbstractColumn<RoleTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n+        List<IColumn<GroupTO, String>> groupColumns = new ArrayList<>();\n+        groupColumns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(\"key\", \"key\"), \"key\", \"key\"));\n+        groupColumns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(\"name\", \"name\"), \"name\", \"name\"));\n+        groupColumns.add(new AbstractColumn<GroupTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -248,10 +248,10 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(final Item<ICellPopulator<RoleTO>> cellItem, final String componentId,\n-                    final IModel<RoleTO> model) {\n+            public void populateItem(final Item<ICellPopulator<GroupTO>> cellItem, final String componentId,\n+                    final IModel<GroupTO> model) {\n \n-                final RoleTO role = model.getObject();\n+                final GroupTO group = model.getObject();\n \n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n                 panel.add(new ActionLink() {\n@@ -266,52 +266,51 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new RoleModalPage(PolicyModalPage.this.getPageReference(), mwindow, role);\n+                                return new GroupModalPage(PolicyModalPage.this.getPageReference(), mwindow, group);\n                             }\n                         });\n \n                         mwindow.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Roles\");\n+                }, ActionLink.ActionType.EDIT, \"Groups\");\n \n                 cellItem.add(panel);\n             }\n         });\n-        ISortableDataProvider<RoleTO, String> roleDataProvider = new SortableDataProvider<RoleTO, String>() {\n+        ISortableDataProvider<GroupTO, String> groupDataProvider = new SortableDataProvider<GroupTO, String>() {\n \n             private static final long serialVersionUID = 8263758912838836438L;\n \n             @Override\n-            public Iterator<? extends RoleTO> iterator(final long first, final long count) {\n-                List<RoleTO> roles = new ArrayList<>();\n+            public Iterator<? extends GroupTO> iterator(final long first, final long count) {\n+                List<GroupTO> groups = new ArrayList<>();\n \n                 if (policyTO.getKey() > 0) {\n-                    for (Long roleId : policyRestClient.getPolicy(policyTO.getKey()).\n-                            getUsedByRoles().subList((int) first, (int) first + (int) count)) {\n+                    for (Long groupId : policyRestClient.getPolicy(policyTO.getKey()).getUsedByGroups().\n+                            subList((int) first, (int) first + (int) count)) {\n \n-                        roles.add(roleRestClient.read(roleId));\n+                        groups.add(groupRestClient.read(groupId));\n                     }\n                 }\n \n-                return roles.iterator();\n+                return groups.iterator();\n             }\n \n             @Override\n             public long size() {\n                 return policyTO.getKey() == 0\n                         ? 0\n-                        : policyRestClient.getPolicy(policyTO.getKey()).\n-                        getUsedByRoles().size();\n+                        : policyRestClient.getPolicy(policyTO.getKey()).getUsedByGroups().size();\n             }\n \n             @Override\n-            public IModel<RoleTO> model(final RoleTO object) {\n+            public IModel<GroupTO> model(final GroupTO object) {\n                 return new Model<>(object);\n             }\n         };\n-        final AjaxFallbackDefaultDataTable<RoleTO, String> roles =\n-                new AjaxFallbackDefaultDataTable<>(\"roles\", roleColumns, roleDataProvider, 10);\n-        form.add(roles);\n+        final AjaxFallbackDefaultDataTable<GroupTO, String> groups =\n+                new AjaxFallbackDefaultDataTable<>(\"groups\", groupColumns, groupDataProvider, 10);\n+        form.add(groups);\n \n         mwindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n@@ -320,7 +319,7 @@ public IModel<RoleTO> model(final RoleTO object) {\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(resources);\n-                target.add(roles);\n+                target.add(groups);\n                 if (isModalResult()) {\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                     feedbackPanel.refresh(target);"},{"sha":"6418d61bf4e9cb945e69bb4c1da85fe1a7e93f44","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.wrap.AbstractWrappable;\n@@ -83,7 +83,7 @@ public ProvisioningModalPage(\n         this.resourceTO = resourceTO;\n         this.typeRef = typeRef;\n \n-        statusUtils = new StatusUtils((UserTO.class.isAssignableFrom(typeRef) ? userRestClient : roleRestClient));\n+        statusUtils = new StatusUtils((UserTO.class.isAssignableFrom(typeRef) ? userRestClient : groupRestClient));\n \n         add(new Label(\"displayName\", StringUtils.EMPTY));\n \n@@ -199,7 +199,7 @@ public List<StatusBean> getStatusBeans() {\n             if (UserTO.class.isAssignableFrom(typeRef)) {\n                 subjects.addAll((List<T>) userRestClient.search(fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n             } else {\n-                subjects.addAll((List<T>) roleRestClient.search(fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n+                subjects.addAll((List<T>) groupRestClient.search(fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n             }\n \n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(\n@@ -209,11 +209,10 @@ public List<StatusBean> getStatusBeans() {\n             final LinkedHashMap<String, StatusBean> initialStatusBeanMap = new LinkedHashMap<>(connObjects.size());\n \n             for (ConnObjectWrapper entry : connObjects) {\n-                final StatusBean statusBean = statusUtils.getStatusBean(\n-                        entry.getAttributable(),\n+                final StatusBean statusBean = statusUtils.getStatusBean(entry.getAttributable(),\n                         entry.getResourceName(),\n                         entry.getConnObjectTO(),\n-                        RoleTO.class.isAssignableFrom(typeRef));\n+                        GroupTO.class.isAssignableFrom(typeRef));\n \n                 initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n                 statusBeans.add(statusBean);"},{"sha":"51852be66ace224ef487b612ef0bdb69473b5e7f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/PushTaskModalPage.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.RoleSearchPanel;\n+import org.apache.syncope.client.console.panels.GroupSearchPanel;\n import org.apache.syncope.client.console.panels.UserSearchPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n@@ -44,11 +44,11 @@ public class PushTaskModalPage extends AbstractSyncTaskModalPage {\n \n     private final UserSearchPanel userFilter;\n \n-    private final RoleSearchPanel roleFilter;\n+    private final GroupSearchPanel groupFilter;\n \n     private final AjaxCheckBoxPanel checkUserFilter;\n \n-    private final AjaxCheckBoxPanel checkRoleFilter;\n+    private final AjaxCheckBoxPanel checkGroupFilter;\n \n     @Override\n     protected List<String> getSyncActions() {\n@@ -75,21 +75,21 @@ public PushTaskModalPage(final ModalWindow window, final PushTaskTO taskTO, fina\n         filterContainer.setOutputMarkupId(true);\n \n         checkUserFilter = new AjaxCheckBoxPanel(\"checkUserFilter\", \"checkUserFilter\",\n-                new Model<Boolean>(taskTO.getUserFilter() != null));\n+                new Model<>(taskTO.getUserFilter() != null));\n         filterContainer.add(checkUserFilter);\n \n-        checkRoleFilter = new AjaxCheckBoxPanel(\"checkRoleFilter\", \"checkRoleFilter\",\n-                new Model<Boolean>(taskTO.getRoleFilter() != null));\n-        filterContainer.add(checkRoleFilter);\n+        checkGroupFilter = new AjaxCheckBoxPanel(\"checkGroupFilter\", \"checkGroupFilter\",\n+                new Model<>(taskTO.getGroupFilter() != null));\n+        filterContainer.add(checkGroupFilter);\n \n         userFilter = new UserSearchPanel.Builder(\"userFilter\").fiql(taskTO.getUserFilter()).build();\n         userFilter.setEnabled(checkUserFilter.getModelObject());\n \n         filterContainer.add(userFilter);\n \n-        roleFilter = new RoleSearchPanel.Builder(\"roleFilter\").fiql(taskTO.getRoleFilter()).build();\n-        roleFilter.setEnabled(checkRoleFilter.getModelObject());\n-        filterContainer.add(roleFilter);\n+        groupFilter = new GroupSearchPanel.Builder(\"groupFilter\").fiql(taskTO.getGroupFilter()).build();\n+        groupFilter.setEnabled(checkGroupFilter.getModelObject());\n+        filterContainer.add(groupFilter);\n \n         checkUserFilter.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -102,13 +102,13 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        checkRoleFilter.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+        checkGroupFilter.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                roleFilter.setEnabled(checkRoleFilter.getModelObject());\n+                groupFilter.setEnabled(checkGroupFilter.getModelObject());\n                 target.add(filterContainer);\n             }\n         });\n@@ -129,7 +129,7 @@ public void submitAction(final SchedTaskTO taskTO) {\n     private void setFilters(final PushTaskTO pushTaskTO) {\n         // set user filter if enabled\n         pushTaskTO.setUserFilter(checkUserFilter.getModelObject() ? userFilter.buildFIQL() : null);\n-        // set role filter if enabled\n-        pushTaskTO.setRoleFilter(checkRoleFilter.getModelObject() ? roleFilter.buildFIQL() : null);\n+        // set group filter if enabled\n+        pushTaskTO.setGroupFilter(checkGroupFilter.getModelObject() ? groupFilter.buildFIQL() : null);\n     }\n }"},{"sha":"36560b055e065f6fde1b373aa768e9111f3aba4e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ReportletConfModalPage.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,7 +27,7 @@\n import java.util.List;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.RoleSearchPanel;\n+import org.apache.syncope.client.console.panels.GroupSearchPanel;\n import org.apache.syncope.client.console.panels.UserSearchPanel;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -278,8 +278,8 @@ protected void populateItem(final ListItem<String> item) {\n                             fiql((String) wrapper.getPropertyValue(fieldName)).required(false).build();\n                     // This is needed in order to manually update this.reportletConf with search panel selections\n                     panel.setDefaultModel(new Model<String>(fieldName));\n-                } else if (String.class.equals(field.getType()) && annotation != null && annotation.roleSearch()) {\n-                    panel = new RoleSearchPanel.Builder(\"value\").\n+                } else if (String.class.equals(field.getType()) && annotation != null && annotation.groupSearch()) {\n+                    panel = new GroupSearchPanel.Builder(\"value\").\n                             fiql((String) wrapper.getPropertyValue(fieldName)).required(false).build();\n                     // This is needed in order to manually update this.reportletConf with search panel selections\n                     panel.setDefaultModel(new Model<String>(fieldName));\n@@ -305,16 +305,16 @@ protected void populateItem(final ListItem<String> item) {\n                                 choices = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n                                 break;\n \n-                            case RolePlainSchema:\n-                                choices = schemaRestClient.getPlainSchemaNames(AttributableType.ROLE);\n+                            case GroupPlainSchema:\n+                                choices = schemaRestClient.getPlainSchemaNames(AttributableType.GROUP);\n                                 break;\n \n-                            case RoleDerivedSchema:\n-                                choices = schemaRestClient.getDerSchemaNames(AttributableType.ROLE);\n+                            case GroupDerivedSchema:\n+                                choices = schemaRestClient.getDerSchemaNames(AttributableType.GROUP);\n                                 break;\n \n-                            case RoleVirtualSchema:\n-                                choices = schemaRestClient.getVirSchemaNames(AttributableType.ROLE);\n+                            case GroupVirtualSchema:\n+                                choices = schemaRestClient.getVirSchemaNames(AttributableType.GROUP);\n                                 break;\n \n                             case MembershipPlainSchema:"},{"sha":"0becc1aabf2a1ac9994090b74cc5753f0ce2dfd0","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResourceModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -76,7 +76,7 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n         // Resource mapping panels\n         //--------------------------------\n         form.add(new ResourceMappingPanel(\"umapping\", resourceTO, AttributableType.USER));\n-        form.add(new ResourceMappingPanel(\"rmapping\", resourceTO, AttributableType.ROLE));\n+        form.add(new ResourceMappingPanel(\"gmapping\", resourceTO, AttributableType.GROUP));\n         //--------------------------------\n \n         //--------------------------------\n@@ -116,11 +116,11 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     accountIdError = uAccountIdCount != 1;\n                 }\n \n-                if (resourceTO.getRmapping() == null || resourceTO.getRmapping().getItems().isEmpty()) {\n-                    resourceTO.setRmapping(null);\n+                if (resourceTO.getGmapping() == null || resourceTO.getGmapping().getItems().isEmpty()) {\n+                    resourceTO.setGmapping(null);\n                 } else {\n                     int rAccountIdCount = 0;\n-                    for (MappingItemTO item : resourceTO.getRmapping().getItems()) {\n+                    for (MappingItemTO item : resourceTO.getGmapping().getItems()) {\n                         if (item.isAccountid()) {\n                             rAccountIdCount++;\n                         }"},{"sha":"542cc82c31d6595767477022702b217968e12403","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Resources.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResources.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n@@ -305,13 +305,13 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public Page createPage() {\n                                 return new ProvisioningModalPage<>(\n-                                        getPageReference(), statusmodal, model.getObject(), RoleTO.class);\n+                                        getPageReference(), statusmodal, model.getObject(), GroupTO.class);\n                             }\n                         });\n \n                         statusmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.MANAGE_ROLES, \"Resources\");\n+                }, ActionLink.ActionType.MANAGE_GROUPS, \"Resources\");\n \n                 panel.add(new ActionLink() {\n "},{"sha":"e5017e3d4a0f129b4fecd447fbca811a8f79bee5","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModalPage.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.wicket.Component;\n@@ -56,7 +56,7 @@\n import org.apache.wicket.request.resource.ContextRelativeResource;\n \n /**\n- * Show user or role status after performing a successful operation.\n+ * Show user or group status after performing a successful operation.\n  */\n public class ResultStatusModalPage extends BaseModalPage {\n \n@@ -133,8 +133,8 @@ private ResultStatusModalPage(final Builder builder) {\n             fragment.add(new Label(\"info\",\n                     ((subject instanceof UserTO) && ((UserTO) subject).getUsername() != null)\n                             ? ((UserTO) subject).getUsername()\n-                            : ((subject instanceof RoleTO) && ((RoleTO) subject).getName() != null)\n-                                    ? ((RoleTO) subject).getName()\n+                            : ((subject instanceof GroupTO) && ((GroupTO) subject).getName() != null)\n+                                    ? ((GroupTO) subject).getName()\n                                     : String.valueOf(subject.getKey())));\n \n             final ListView<PropagationStatus> propRes = new ListView<PropagationStatus>(\"resources\",\n@@ -376,8 +376,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n     private Fragment getStatusIcon(final String id, final String resourceName, final ConnObjectTO objectTO) {\n         final Image image;\n         final String alt, title;\n-        switch (statusUtils.getStatusBean(\n-                subject, resourceName, objectTO, this.subject instanceof RoleTO).getStatus()) {\n+        switch (statusUtils.getStatusBean(subject, resourceName, objectTO, this.subject instanceof GroupTO).getStatus()) {\n \n             case ACTIVE:\n                 image = new Image(\"status\","},{"sha":"9bfba5405147db4511a5d73eaaddc795c22a8efa","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Schema.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -104,23 +104,23 @@ public class Schema extends BasePage {\n                     put(new SimpleEntry<>(AttributableType.CONFIGURATION, SchemaType.PLAIN),\n                             Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.USER, SchemaType.PLAIN),\n-                            Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS);\n+                            Constants.PREF_USER_PLAIN_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.USER, SchemaType.DERIVED),\n                             Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.USER, SchemaType.VIRTUAL),\n                             Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.MEMBERSHIP, SchemaType.PLAIN),\n-                            Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n+                            Constants.PREF_MEMBERSHIP_PLAIN_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.MEMBERSHIP, SchemaType.DERIVED),\n                             Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<>(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL),\n                             Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS);\n-                    put(new SimpleEntry<>(AttributableType.ROLE, SchemaType.PLAIN),\n-                            Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS);\n-                    put(new SimpleEntry<>(AttributableType.ROLE, SchemaType.DERIVED),\n-                            Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n-                    put(new SimpleEntry<>(AttributableType.ROLE, SchemaType.VIRTUAL),\n-                            Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS);\n+                    put(new SimpleEntry<>(AttributableType.GROUP, SchemaType.PLAIN),\n+                            Constants.PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS);\n+                    put(new SimpleEntry<>(AttributableType.GROUP, SchemaType.DERIVED),\n+                            Constants.PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS);\n+                    put(new SimpleEntry<>(AttributableType.GROUP, SchemaType.VIRTUAL),\n+                            Constants.PREF_GROUP_VIR_SCHEMA_PAGINATOR_ROWS);\n                 }\n             };\n "},{"sha":"cab0e04d1e37bbdb0fd1b84c2f9485efbaa50ff5","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java","status":"modified","additions":16,"deletions":19,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.wicket.PageReference;\n@@ -117,10 +117,10 @@ public StatusModalPage(\n         this.statusOnly = statusOnly;\n         this.subjectTO = subjectTO;\n \n-        statusUtils = new StatusUtils(subjectTO instanceof UserTO ? userRestClient : roleRestClient);\n+        statusUtils = new StatusUtils(subjectTO instanceof UserTO ? userRestClient : groupRestClient);\n \n         add(new Label(\"displayName\", subjectTO.getKey() + \" \"\n-                + (subjectTO instanceof UserTO ? ((UserTO) subjectTO).getUsername() : ((RoleTO) subjectTO).getName())));\n+                + (subjectTO instanceof UserTO ? ((UserTO) subjectTO).getUsername() : ((GroupTO) subjectTO).getName())));\n \n         columns = new ArrayList<>();\n         columns.add(new AbstractColumn<StatusBean, String>(\n@@ -194,7 +194,7 @@ public boolean isElementEnabled(final StatusBean element) {\n                 };\n         table.setOutputMarkupId(true);\n \n-        final String pageId = subjectTO instanceof RoleTO ? \"Roles\" : \"Users\";\n+        final String pageId = subjectTO instanceof GroupTO ? \"Groups\" : \"Users\";\n \n         final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n         addOrReplace(pwdMgtFragment);\n@@ -316,7 +316,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n                         } else {\n-                            roleRestClient.unlink(\n+                            groupRestClient.unlink(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -345,7 +345,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n                         } else {\n-                            roleRestClient.link(\n+                            groupRestClient.link(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -375,7 +375,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n                         } else {\n-                            bulkActionResult = roleRestClient.deprovision(\n+                            bulkActionResult = groupRestClient.deprovision(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -403,7 +403,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                 target, ResourceAssociationActionType.PROVISION, table.getModelObject());\n                     } else {\n                         try {\n-                            final BulkActionResult bulkActionResult = roleRestClient.provision(\n+                            final BulkActionResult bulkActionResult = groupRestClient.provision(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -433,7 +433,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n                         } else {\n-                            bulkActionResult = roleRestClient.unassign(\n+                            bulkActionResult = groupRestClient.unassign(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -460,7 +460,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                 target, ResourceAssociationActionType.ASSIGN, table.getModelObject());\n                     } else {\n                         try {\n-                            final BulkActionResult bulkActionResult = roleRestClient.assign(\n+                            final BulkActionResult bulkActionResult = groupRestClient.assign(\n                                     subjectTO.getETagValue(),\n                                     subjectTO.getKey(),\n                                     new ArrayList<>(table.getModelObject()));\n@@ -502,11 +502,10 @@ public List<StatusBean> getStatusBeans() {\n             final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n \n             for (ConnObjectWrapper entry : connObjects) {\n-                final StatusBean statusBean = statusUtils.getStatusBean(\n-                        subjectTO,\n+                final StatusBean statusBean = statusUtils.getStatusBean(subjectTO,\n                         entry.getResourceName(),\n                         entry.getConnObjectTO(),\n-                        subjectTO instanceof RoleTO);\n+                        subjectTO instanceof GroupTO);\n \n                 statusBeans.add(statusBean);\n                 resources.remove(entry.getResourceName());\n@@ -530,11 +529,10 @@ public List<StatusBean> getStatusBeans() {\n                 statusBeans.add(syncope);\n             } else {\n                 for (String resource : resources) {\n-                    final StatusBean statusBean = statusUtils.getStatusBean(\n-                            subjectTO,\n+                    final StatusBean statusBean = statusUtils.getStatusBean(subjectTO,\n                             resource,\n                             null,\n-                            subjectTO instanceof RoleTO);\n+                            subjectTO instanceof GroupTO);\n \n                     statusBean.setLinked(false);\n                     statusBeans.add(statusBean);\n@@ -625,11 +623,10 @@ private void loadBulkActionResultPage(\n         final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size());\n \n         for (ConnObjectWrapper entry : connObjects) {\n-            final StatusBean statusBean = statusUtils.getStatusBean(\n-                    subjectTO,\n+            final StatusBean statusBean = statusUtils.getStatusBean(subjectTO,\n                     entry.getResourceName(),\n                     entry.getConnObjectTO(),\n-                    subjectTO instanceof RoleTO);\n+                    subjectTO instanceof GroupTO);\n \n             statusBeans.add(statusBean);\n         }"},{"sha":"0835ca24f9c5e0c7e0b804d3799828af0c8f646b","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -156,7 +156,7 @@ protected Form setupEditPanel() {\n         //--------------------------------\n \n         //--------------------------------\n-        // Roles panel\n+        // Groups panel\n         //--------------------------------\n         form.add(new MembershipsPanel(\"memberships\", userTO, mode, null, getPageReference()));\n         //--------------------------------"},{"sha":"ba4411e0c43d0f8539cde8bdc78e3ce9478f76de","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchPanel.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -31,10 +31,10 @@\n import org.apache.syncope.client.console.rest.AuthRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.common.lib.search.RoleFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.SearchableFields;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n-import org.apache.syncope.common.lib.search.SyncopeFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.SyncopeProperty;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.ResourceTO;\n@@ -78,7 +78,7 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected IModel<List<SearchClause.Type>> types;\n \n-    protected IModel<List<String>> roleNames;\n+    protected IModel<List<String>> groupNames;\n \n     protected NotificationPanel searchFeedback;\n \n@@ -136,7 +136,7 @@ public boolean accept(final FeedbackMessage message) {\n         if (StringUtils.isNotBlank(fiql)) {\n             try {\n                 FiqlParser<SearchBean> fiqlParser = new FiqlParser<>(\n-                        SearchBean.class, SyncopeFiqlSearchConditionBuilder.CONTEXTUAL_PROPERTIES);\n+                        SearchBean.class, AbstractFiqlSearchConditionBuilder.CONTEXTUAL_PROPERTIES);\n                 List<SearchClause> parsed = getSearchClauses(fiqlParser.parse(fiql));\n \n                 this.searchClauses.clear();\n@@ -147,7 +147,7 @@ public boolean accept(final FeedbackMessage message) {\n         }\n \n         searchFormContainer.add(new SearchView(\"searchView\", searchClauses, searchFormContainer, required,\n-                types, anames, dnames, roleNames, resourceNames, entitlements));\n+                types, anames, dnames, groupNames, resourceNames, entitlements));\n         add(searchFormContainer);\n     }\n \n@@ -159,7 +159,7 @@ protected void populate() {\n             @Override\n             protected List<String> load() {\n                 return SearchableFields.get(\n-                        attributableType == AttributableType.USER ? SubjectType.USER : SubjectType.ROLE);\n+                        attributableType == AttributableType.USER ? SubjectType.USER : SubjectType.GROUP);\n             }\n         };\n \n@@ -216,9 +216,9 @@ private SearchClause getPrimitiveSearchClause(final SearchCondition<SearchBean>\n         String value = sc.getCondition().get(property);\n         searchClause.setValue(value);\n \n-        if (SpecialAttr.ROLES.toString().equals(property)) {\n+        if (SpecialAttr.GROUPS.toString().equals(property)) {\n             searchClause.setType(SearchClause.Type.MEMBERSHIP);\n-            for (String label : roleNames.getObject()) {\n+            for (String label : groupNames.getObject()) {\n                 if (value.equals(label.substring(0, label.indexOf(' ')))) {\n                     searchClause.setProperty(label);\n                 }\n@@ -298,7 +298,7 @@ private List<SearchClause> getSearchClauses(final SearchCondition<SearchBean> sc\n         return clauses;\n     }\n \n-    protected abstract SyncopeFiqlSearchConditionBuilder getSearchConditionBuilder();\n+    protected abstract AbstractFiqlSearchConditionBuilder getSearchConditionBuilder();\n \n     public String buildFIQL() {\n         LOG.debug(\"Generating FIQL from List<SearchClause>: {}\", searchClauses);\n@@ -307,7 +307,7 @@ public String buildFIQL() {\n             return StringUtils.EMPTY;\n         }\n \n-        SyncopeFiqlSearchConditionBuilder builder = getSearchConditionBuilder();\n+        AbstractFiqlSearchConditionBuilder builder = getSearchConditionBuilder();\n \n         CompleteCondition prevCondition;\n         CompleteCondition condition = null;\n@@ -317,17 +317,17 @@ public String buildFIQL() {\n             switch (searchClauses.get(i).getType()) {\n                 case ENTITLEMENT:\n                     condition = searchClauses.get(i).getComparator() == SearchClause.Comparator.EQUALS\n-                            ? ((RoleFiqlSearchConditionBuilder) builder).\n+                            ? ((GroupFiqlSearchConditionBuilder) builder).\n                             hasEntitlements(searchClauses.get(i).getProperty())\n-                            : ((RoleFiqlSearchConditionBuilder) builder).\n+                            : ((GroupFiqlSearchConditionBuilder) builder).\n                             hasNotEntitlements(searchClauses.get(i).getProperty());\n                     break;\n \n                 case MEMBERSHIP:\n-                    Long roleId = NumberUtils.toLong(searchClauses.get(i).getProperty().split(\" \")[0]);\n+                    Long groupId = NumberUtils.toLong(searchClauses.get(i).getProperty().split(\" \")[0]);\n                     condition = searchClauses.get(i).getComparator() == SearchClause.Comparator.EQUALS\n-                            ? ((UserFiqlSearchConditionBuilder) builder).hasRoles(roleId)\n-                            : ((UserFiqlSearchConditionBuilder) builder).hasNotRoles(roleId);\n+                            ? ((UserFiqlSearchConditionBuilder) builder).inGroups(groupId)\n+                            : ((UserFiqlSearchConditionBuilder) builder).notInGroups(groupId);\n                     break;\n \n                 case RESOURCE:"},{"sha":"98ada288d64b4cda4c66df097201c9f3de531797","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AttrTemplatesPanel.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.client.console.commons.SelectChoiceRenderer;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.NonI18nPalette;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -41,9 +41,9 @@ public class AttrTemplatesPanel extends Panel {\n \n     public enum Type {\n \n-        rPlainAttrTemplates,\n-        rDerAttrTemplates,\n-        rVirAttrTemplates,\n+        gPlainAttrTemplates,\n+        gDerAttrTemplates,\n+        gVirAttrTemplates,\n         mPlainAttrTemplates,\n         mDerAttrTemplates,\n         mVirAttrTemplates;\n@@ -55,26 +55,26 @@ public enum Type {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    private final RoleTO roleTO;\n+    private final GroupTO groupTO;\n \n     private final NonI18nPalette<String> rPlainAttrTemplates;\n \n     private final NonI18nPalette<String> rDerAttrTemplates;\n \n     private final NonI18nPalette<String> rVirAttrTemplates;\n \n-    public AttrTemplatesPanel(final String id, final RoleTO roleTO) {\n+    public AttrTemplatesPanel(final String id, final GroupTO groupTO) {\n         super(id);\n-        this.roleTO = roleTO;\n+        this.groupTO = groupTO;\n \n-        rPlainAttrTemplates = buildPalette(Type.rPlainAttrTemplates,\n-                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.PLAIN));\n+        rPlainAttrTemplates = buildPalette(Type.gPlainAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.GROUP, SchemaType.PLAIN));\n         this.add(rPlainAttrTemplates);\n-        rDerAttrTemplates = buildPalette(Type.rDerAttrTemplates,\n-                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.DERIVED));\n+        rDerAttrTemplates = buildPalette(Type.gDerAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.GROUP, SchemaType.DERIVED));\n         this.add(rDerAttrTemplates);\n-        rVirAttrTemplates = buildPalette(Type.rVirAttrTemplates,\n-                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.VIRTUAL));\n+        rVirAttrTemplates = buildPalette(Type.gVirAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.GROUP, SchemaType.VIRTUAL));\n         this.add(rVirAttrTemplates);\n \n         this.add(buildPalette(Type.mPlainAttrTemplates,\n@@ -91,7 +91,7 @@ private NonI18nPalette<String> buildPalette(final Type type, final List<String>\n         }\n         ListModel<String> availableSchemas = new ListModel<>(allSchemas);\n \n-        return new NonI18nPalette<String>(type.name(), new PropertyModel<List<String>>(roleTO, type.name()),\n+        return new NonI18nPalette<String>(type.name(), new PropertyModel<List<String>>(groupTO, type.name()),\n                 availableSchemas, new SelectChoiceRenderer<String>(), 8, false, true) {\n \n                     private static final long serialVersionUID = 2295567122085510330L;\n@@ -101,16 +101,16 @@ protected Recorder<String> newRecorderComponent() {\n                         final Recorder<String> recorder = super.newRecorderComponent();\n \n                         switch (type) {\n-                            case rPlainAttrTemplates:\n-                            case rDerAttrTemplates:\n-                            case rVirAttrTemplates:\n+                            case gPlainAttrTemplates:\n+                            case gDerAttrTemplates:\n+                            case gVirAttrTemplates:\n                                 recorder.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                                     private static final long serialVersionUID = -1107858522700306810L;\n \n                                     @Override\n                                     protected void onUpdate(final AjaxRequestTarget target) {\n-                                        send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(type, target));\n+                                        send(getPage(), Broadcast.BREADTH, new GroupAttrTemplatesChange(type, target));\n                                     }\n                                 });\n                                 break;\n@@ -126,15 +126,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     public Collection<String> getSelected(final Type type) {\n         Collection<String> selected;\n         switch (type) {\n-            case rPlainAttrTemplates:\n+            case gPlainAttrTemplates:\n                 selected = this.rPlainAttrTemplates.getModelCollection();\n                 break;\n \n-            case rDerAttrTemplates:\n+            case gDerAttrTemplates:\n                 selected = this.rDerAttrTemplates.getModelCollection();\n                 break;\n \n-            case rVirAttrTemplates:\n+            case gVirAttrTemplates:\n                 selected = this.rVirAttrTemplates.getModelCollection();\n                 break;\n \n@@ -145,13 +145,13 @@ public Collection<String> getSelected(final Type type) {\n         return selected;\n     }\n \n-    public static class RoleAttrTemplatesChange {\n+    public static class GroupAttrTemplatesChange {\n \n         private final Type type;\n \n         private final AjaxRequestTarget target;\n \n-        public RoleAttrTemplatesChange(final Type type, final AjaxRequestTarget target) {\n+        public GroupAttrTemplatesChange(final Type type, final AjaxRequestTarget target) {\n             this.type = type;\n             this.target = target;\n         }"},{"sha":"c8872b5b05b7f33a157f2abdb5be4f9b6a803335","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerAttrsPanel.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerAttrsPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,14 +21,14 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.panels.AttrTemplatesPanel.GroupAttrTemplatesChange;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.wicket.Component;\n@@ -62,7 +62,7 @@ public class DerAttrsPanel extends Panel {\n     private SchemaRestClient schemaRestClient;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     private final AttrTemplatesPanel attrTemplates;\n \n@@ -85,22 +85,22 @@ public <T extends AbstractAttributableTO> DerAttrsPanel(final String id, final T\n             protected List<String> load() {\n                 List<String> derSchemaNames;\n \n-                if (entityTO instanceof RoleTO) {\n-                    final RoleTO roleTO = (RoleTO) entityTO;\n+                if (entityTO instanceof GroupTO) {\n+                    final GroupTO groupTO = (GroupTO) entityTO;\n \n                     if (attrTemplates == null) {\n-                        derSchemaNames = roleTO.getRDerAttrTemplates();\n+                        derSchemaNames = groupTO.getGDerAttrTemplates();\n                     } else {\n                         derSchemaNames = new ArrayList<>(\n-                                attrTemplates.getSelected(AttrTemplatesPanel.Type.rDerAttrTemplates));\n-                        if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n-                            derSchemaNames.addAll(roleRestClient.read(roleTO.getParent()).getRDerAttrTemplates());\n+                                attrTemplates.getSelected(AttrTemplatesPanel.Type.gDerAttrTemplates));\n+                        if (groupTO.isInheritTemplates() && groupTO.getParent() != 0) {\n+                            derSchemaNames.addAll(groupRestClient.read(groupTO.getParent()).getGDerAttrTemplates());\n                         }\n                     }\n                 } else if (entityTO instanceof UserTO) {\n                     derSchemaNames = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n                 } else {\n-                    derSchemaNames = roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMDerAttrTemplates();\n+                    derSchemaNames = groupRestClient.read(((MembershipTO) entityTO).getGroupId()).getMDerAttrTemplates();\n                 }\n \n                 return derSchemaNames;\n@@ -196,9 +196,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n-        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n-            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n-            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rDerAttrTemplates) {\n+        if ((event.getPayload() instanceof GroupAttrTemplatesChange)) {\n+            final GroupAttrTemplatesChange update = (GroupAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.gDerAttrTemplates) {\n                 update.getTarget().add(this);\n             }\n         }"},{"sha":"4af9d2530a8106425d40ec8e0099ad46c5e50345","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDetailsPanel.java","status":"renamed","additions":77,"deletions":77,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,15 +20,15 @@\n \n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtil;\n-import org.apache.syncope.client.console.pages.RoleSelectModalPage;\n+import org.apache.syncope.client.console.pages.GroupSelectModalPage;\n import org.apache.syncope.client.console.pages.UserOwnerSelectModalPage;\n-import org.apache.syncope.client.console.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.client.console.panels.AttrTemplatesPanel.GroupAttrTemplatesChange;\n import org.apache.syncope.client.console.panels.AttrTemplatesPanel.Type;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.wicket.Page;\n@@ -48,32 +48,32 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class RoleDetailsPanel extends Panel {\n+public class GroupDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(RoleDetailsPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(GroupDetailsPanel.class);\n \n     @SpringBean\n     private UserRestClient userRestClient;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     private final Fragment parentFragment;\n \n     private final WebMarkupContainer ownerContainer;\n \n     private final OwnerModel userOwnerModel;\n \n-    private final OwnerModel roleOwnerModel;\n+    private final OwnerModel groupOwnerModel;\n \n     private ParentModel parentModel;\n \n-    public RoleDetailsPanel(final String id, final RoleTO roleTO, final boolean templateMode) {\n+    public GroupDetailsPanel(final String id, final GroupTO groupTO, final boolean templateMode) {\n         super(id);\n \n         ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n@@ -84,10 +84,10 @@ public RoleDetailsPanel(final String id, final RoleTO roleTO, final boolean temp\n         userOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         userOwnerSelectWin.setCookieName(\"create-userOwnerSelect-modal\");\n         this.add(userOwnerSelectWin);\n-        final ModalWindow roleOwnerSelectWin = new ModalWindow(\"roleOwnerSelectWin\");\n-        roleOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        roleOwnerSelectWin.setCookieName(\"create-roleOwnerSelect-modal\");\n-        this.add(roleOwnerSelectWin);\n+        final ModalWindow groupOwnerSelectWin = new ModalWindow(\"groupOwnerSelectWin\");\n+        groupOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        groupOwnerSelectWin.setCookieName(\"create-groupOwnerSelect-modal\");\n+        this.add(groupOwnerSelectWin);\n         final ModalWindow parentSelectWin = new ModalWindow(\"parentSelectWin\");\n         parentSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         parentSelectWin.setCookieName(\"create-parentSelect-modal\");\n@@ -96,7 +96,7 @@ public RoleDetailsPanel(final String id, final RoleTO roleTO, final boolean temp\n         if (templateMode) {\n             parentFragment = new Fragment(\"parent\", \"parentFragment\", this);\n \n-            parentModel = new ParentModel(roleTO);\n+            parentModel = new ParentModel(groupTO);\n             @SuppressWarnings(\"unchecked\")\n             final AjaxTextFieldPanel parent = new AjaxTextFieldPanel(\"parent\", \"parent\", parentModel);\n             parent.setReadOnly(true);\n@@ -114,7 +114,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         @Override\n                         public Page createPage() {\n-                            return new RoleSelectModalPage(getPage().getPageReference(), parentSelectWin,\n+                            return new GroupSelectModalPage(getPage().getPageReference(), parentSelectWin,\n                                     ParentSelectPayload.class);\n                         }\n                     });\n@@ -140,7 +140,7 @@ public void onClick(final AjaxRequestTarget target) {\n         this.add(parentFragment);\n \n         final AjaxTextFieldPanel name =\n-                new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(roleTO, \"key\"));\n+                new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(groupTO, \"key\"));\n \n         final WebMarkupContainer jexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"jexlHelp\");\n \n@@ -154,7 +154,7 @@ public void onClick(final AjaxRequestTarget target) {\n         }\n         this.add(name);\n \n-        userOwnerModel = new OwnerModel(roleTO, AttributableType.USER);\n+        userOwnerModel = new OwnerModel(groupTO, AttributableType.USER);\n         @SuppressWarnings(\"unchecked\")\n         final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", userOwnerModel);\n         userOwner.setReadOnly(true);\n@@ -191,13 +191,13 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n         ownerContainer.add(userOwnerReset);\n \n-        roleOwnerModel = new OwnerModel(roleTO, AttributableType.ROLE);\n+        groupOwnerModel = new OwnerModel(groupTO, AttributableType.GROUP);\n         @SuppressWarnings(\"unchecked\")\n-        final AjaxTextFieldPanel roleOwner = new AjaxTextFieldPanel(\"roleOwner\", \"roleOwner\", roleOwnerModel);\n-        roleOwner.setReadOnly(true);\n-        roleOwner.setOutputMarkupId(true);\n-        ownerContainer.add(roleOwner);\n-        final AjaxLink<Void> roleOwnerSelect = new IndicatingAjaxLink<Void>(\"roleOwnerSelect\") {\n+        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", groupOwnerModel);\n+        groupOwner.setReadOnly(true);\n+        groupOwner.setOutputMarkupId(true);\n+        ownerContainer.add(groupOwner);\n+        final AjaxLink<Void> groupOwnerSelect = new IndicatingAjaxLink<Void>(\"groupOwnerSelect\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -209,48 +209,48 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new RoleSelectModalPage(getPage().getPageReference(), parentSelectWin,\n-                                RoleOwnerSelectPayload.class);\n+                        return new GroupSelectModalPage(getPage().getPageReference(), parentSelectWin,\n+                                GroupOwnerSelectPayload.class);\n                     }\n                 });\n                 parentSelectWin.show(target);\n             }\n         };\n-        ownerContainer.add(roleOwnerSelect);\n-        final IndicatingAjaxLink<Void> roleOwnerReset = new IndicatingAjaxLink<Void>(\"roleOwnerReset\") {\n+        ownerContainer.add(groupOwnerSelect);\n+        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                roleOwnerModel.setObject(null);\n-                target.add(roleOwner);\n+                groupOwnerModel.setObject(null);\n+                target.add(groupOwner);\n             }\n         };\n-        ownerContainer.add(roleOwnerReset);\n+        ownerContainer.add(groupOwnerReset);\n \n         final AjaxCheckBoxPanel inhOwner = new AjaxCheckBoxPanel(\"inheritOwner\", \"inheritOwner\",\n-                new PropertyModel<Boolean>(roleTO, \"inheritOwner\"));\n+                new PropertyModel<Boolean>(groupTO, \"inheritOwner\"));\n         this.add(inhOwner);\n \n         final AjaxCheckBoxPanel inhTemplates = new AjaxCheckBoxPanel(\"inheritTemplates\", \"inheritTemplates\",\n-                new PropertyModel<Boolean>(roleTO, \"inheritTemplates\"));\n+                new PropertyModel<Boolean>(groupTO, \"inheritTemplates\"));\n         inhTemplates.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rPlainAttrTemplates, target));\n-                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rDerAttrTemplates, target));\n-                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rVirAttrTemplates, target));\n+                send(getPage(), Broadcast.BREADTH, new GroupAttrTemplatesChange(Type.gPlainAttrTemplates, target));\n+                send(getPage(), Broadcast.BREADTH, new GroupAttrTemplatesChange(Type.gDerAttrTemplates, target));\n+                send(getPage(), Broadcast.BREADTH, new GroupAttrTemplatesChange(Type.gVirAttrTemplates, target));\n             }\n         });\n         this.add(inhTemplates);\n     }\n \n     /**\n-     * This is waiting for events from opened modal windows: first to get the selected user / role, then to update the\n+     * This is waiting for events from opened modal windows: first to get the selected user / group, then to update the\n      * respective text panel.\n      *\n      * {@inheritDoc }\n@@ -260,13 +260,13 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n \n         if (event.getPayload() instanceof ParentSelectPayload) {\n-            parentModel.setObject(((ParentSelectPayload) event.getPayload()).getRoleId());\n+            parentModel.setObject(((ParentSelectPayload) event.getPayload()).getGroupId());\n         }\n         if (event.getPayload() instanceof UserOwnerSelectPayload) {\n             userOwnerModel.setObject(((UserOwnerSelectPayload) event.getPayload()).getUserId());\n         }\n-        if (event.getPayload() instanceof RoleOwnerSelectPayload) {\n-            roleOwnerModel.setObject(((RoleOwnerSelectPayload) event.getPayload()).getRoleId());\n+        if (event.getPayload() instanceof GroupOwnerSelectPayload) {\n+            groupOwnerModel.setObject(((GroupOwnerSelectPayload) event.getPayload()).getGroupId());\n         }\n \n         if (event.getPayload() instanceof AjaxRequestTarget) {\n@@ -279,12 +279,12 @@ private class OwnerModel implements IModel {\n \n         private static final long serialVersionUID = -3865621970810102714L;\n \n-        private final RoleTO roleTO;\n+        private final GroupTO groupTO;\n \n         private final AttributableType type;\n \n-        public OwnerModel(final RoleTO roleTO, final AttributableType type) {\n-            this.roleTO = roleTO;\n+        public OwnerModel(final GroupTO groupTO, final AttributableType type) {\n+            this.groupTO = groupTO;\n             this.type = type;\n         }\n \n@@ -294,33 +294,33 @@ public Object getObject() {\n \n             switch (type) {\n                 case USER:\n-                    if (roleTO.getUserOwner() != null) {\n+                    if (groupTO.getUserOwner() != null) {\n                         UserTO user = null;\n                         try {\n-                            user = userRestClient.read(roleTO.getUserOwner());\n+                            user = userRestClient.read(groupTO.getUserOwner());\n                         } catch (Exception e) {\n-                            LOG.warn(\"Could not find user with id {}, ignoring\", roleTO.getUserOwner(), e);\n+                            LOG.warn(\"Could not find user with id {}, ignoring\", groupTO.getUserOwner(), e);\n                         }\n                         if (user == null) {\n-                            roleTO.setUserOwner(null);\n+                            groupTO.setUserOwner(null);\n                         } else {\n                             object = user.getKey() + \" \" + user.getUsername();\n                         }\n                     }\n                     break;\n \n-                case ROLE:\n-                    RoleTO role = null;\n-                    if (roleTO.getRoleOwner() != null) {\n+                case GROUP:\n+                    GroupTO group = null;\n+                    if (groupTO.getGroupOwner() != null) {\n                         try {\n-                            role = roleRestClient.read(roleTO.getRoleOwner());\n+                            group = groupRestClient.read(groupTO.getGroupOwner());\n                         } catch (Exception e) {\n-                            LOG.warn(\"Could not find role with id {}, ignoring\", roleTO.getRoleOwner(), e);\n+                            LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getGroupOwner(), e);\n                         }\n-                        if (role == null) {\n-                            roleTO.setRoleOwner(null);\n+                        if (group == null) {\n+                            groupTO.setGroupOwner(null);\n                         } else {\n-                            object = role.getDisplayName();\n+                            object = group.getDisplayName();\n                         }\n                     }\n                     break;\n@@ -336,11 +336,11 @@ public Object getObject() {\n         public void setObject(final Object object) {\n             switch (type) {\n                 case USER:\n-                    roleTO.setUserOwner((Long) object);\n+                    groupTO.setUserOwner((Long) object);\n                     break;\n \n-                case ROLE:\n-                    roleTO.setRoleOwner((Long) object);\n+                case GROUP:\n+                    groupTO.setGroupOwner((Long) object);\n                     break;\n \n                 case MEMBERSHIP:\n@@ -358,24 +358,24 @@ private class ParentModel implements IModel {\n \n         private static final long serialVersionUID = 1006546156848990721L;\n \n-        private final RoleTO roleTO;\n+        private final GroupTO groupTO;\n \n-        public ParentModel(final RoleTO roleTO) {\n-            this.roleTO = roleTO;\n+        public ParentModel(final GroupTO groupTO) {\n+            this.groupTO = groupTO;\n         }\n \n         @Override\n         public Object getObject() {\n             Object object = null;\n-            if (roleTO.getParent() != 0) {\n-                RoleTO parent = null;\n+            if (groupTO.getParent() != 0) {\n+                GroupTO parent = null;\n                 try {\n-                    parent = roleRestClient.read(roleTO.getParent());\n+                    parent = groupRestClient.read(groupTO.getParent());\n                 } catch (Exception e) {\n-                    LOG.warn(\"Could not find role with id {}, ignoring\", roleTO.getParent(), e);\n+                    LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getParent(), e);\n                 }\n                 if (parent == null) {\n-                    roleTO.setParent(0);\n+                    groupTO.setParent(0);\n                 } else {\n                     object = parent.getDisplayName();\n                 }\n@@ -385,7 +385,7 @@ public Object getObject() {\n \n         @Override\n         public void setObject(final Object object) {\n-            roleTO.setParent((object instanceof Long) ? ((Long) object) : 0);\n+            groupTO.setParent((object instanceof Long) ? ((Long) object) : 0);\n         }\n \n         @Override\n@@ -407,29 +407,29 @@ public Long getUserId() {\n         }\n     }\n \n-    public static class RoleOwnerSelectPayload {\n+    public static class GroupOwnerSelectPayload {\n \n-        private final Long roleId;\n+        private final Long groupId;\n \n-        public RoleOwnerSelectPayload(final Long roleId) {\n-            this.roleId = roleId;\n+        public GroupOwnerSelectPayload(final Long groupId) {\n+            this.groupId = groupId;\n         }\n \n-        public Long getRoleId() {\n-            return roleId;\n+        public Long getGroupId() {\n+            return groupId;\n         }\n     }\n \n     public static class ParentSelectPayload {\n \n-        private final Long roleId;\n+        private final Long groupId;\n \n-        public ParentSelectPayload(final Long roleId) {\n-            this.roleId = roleId;\n+        public ParentSelectPayload(final Long groupId) {\n+            this.groupId = groupId;\n         }\n \n-        public Long getRoleId() {\n-            return roleId;\n+        public Long getGroupId() {\n+            return groupId;\n         }\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDetailsPanel.java"},{"sha":"7cbf47e4d68f82199a3a01284ad15408e7df2644","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupPanel.java","status":"renamed","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.client.console.rest.AuthRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -39,7 +39,7 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class RolePanel extends Panel {\n+public class GroupPanel extends Panel {\n \n     private static final long serialVersionUID = 4216376097320768369L;\n \n@@ -59,7 +59,7 @@ public static class Builder implements Serializable {\n \n         private Form form;\n \n-        private RoleTO roleTO;\n+        private GroupTO groupTO;\n \n         private Mode mode;\n \n@@ -74,12 +74,12 @@ public Builder form(final Form form) {\n             return this;\n         }\n \n-        public Builder roleTO(final RoleTO roleTO) {\n-            this.roleTO = roleTO;\n+        public Builder groupTO(final GroupTO groupTO) {\n+            this.groupTO = groupTO;\n             return this;\n         }\n \n-        public Builder roleModalPageMode(final Mode mode) {\n+        public Builder groupModalPageMode(final Mode mode) {\n             this.mode = mode;\n             return this;\n         }\n@@ -89,54 +89,54 @@ public Builder pageRef(final PageReference pageReference) {\n             return this;\n         }\n \n-        public RolePanel build() {\n-            return new RolePanel(this);\n+        public GroupPanel build() {\n+            return new GroupPanel(this);\n         }\n     }\n \n-    private RolePanel(final Builder builder) {\n+    private GroupPanel(final Builder builder) {\n         super(builder.id);\n \n-        this.add(new RoleDetailsPanel(\"details\", builder.roleTO, builder.mode == Mode.TEMPLATE));\n+        this.add(new GroupDetailsPanel(\"details\", builder.groupTO, builder.mode == Mode.TEMPLATE));\n \n-        if (builder.pageReference == null || builder.roleTO.getKey() == 0) {\n+        if (builder.pageReference == null || builder.groupTO.getKey() == 0) {\n             this.add(new Label(\"statuspanel\", \"\"));\n         } else {\n             StatusPanel statusPanel = new StatusPanel(\n-                    \"statuspanel\", builder.roleTO, new ArrayList<StatusBean>(), builder.pageReference);\n+                    \"statuspanel\", builder.groupTO, new ArrayList<StatusBean>(), builder.pageReference);\n             statusPanel.setOutputMarkupId(true);\n             MetaDataRoleAuthorizationStrategy.authorize(\n                     statusPanel, RENDER, xmlRolesReader.getEntitlement(\"Resources\", \"getConnectorObject\"));\n             this.add(statusPanel);\n         }\n \n-        this.add(new AnnotatedBeanPanel(\"systeminformation\", builder.roleTO));\n+        this.add(new AnnotatedBeanPanel(\"systeminformation\", builder.groupTO));\n \n         //--------------------------------\n         // Attribute templates panel\n         //--------------------------------\n-        AttrTemplatesPanel attrTemplates = new AttrTemplatesPanel(\"templates\", builder.roleTO);\n+        AttrTemplatesPanel attrTemplates = new AttrTemplatesPanel(\"templates\", builder.groupTO);\n         this.add(attrTemplates);\n \n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n         this.add(new PlainAttrsPanel(\n-                \"plainAttrs\", builder.roleTO, builder.form, builder.mode, attrTemplates));\n+                \"plainAttrs\", builder.groupTO, builder.form, builder.mode, attrTemplates));\n \n         final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\"inheritPlainAttrs\", \"inheritPlainAttrs\",\n-                new PropertyModel<Boolean>(builder.roleTO, \"inheritPlainAttrs\"));\n+                new PropertyModel<Boolean>(builder.groupTO, \"inheritPlainAttrs\"));\n         inhAttributes.setOutputMarkupId(true);\n         this.add(inhAttributes);\n         //--------------------------------\n \n         //--------------------------------\n         // Derived attributes panel\n         //--------------------------------\n-        this.add(new DerAttrsPanel(\"derAttrs\", builder.roleTO, attrTemplates));\n+        this.add(new DerAttrsPanel(\"derAttrs\", builder.groupTO, attrTemplates));\n \n         final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\"inheritDerAttrs\",\n-                \"inheritDerAttrs\", new PropertyModel<Boolean>(builder.roleTO, \"inheritDerAttrs\"));\n+                \"inheritDerAttrs\", new PropertyModel<Boolean>(builder.groupTO, \"inheritDerAttrs\"));\n         inhDerivedAttributes.setOutputMarkupId(true);\n         this.add(inhDerivedAttributes);\n         //--------------------------------\n@@ -145,25 +145,25 @@ private RolePanel(final Builder builder) {\n         // Virtual attributes panel\n         //--------------------------------\n         this.add(new VirAttrsPanel(\n-                \"virAttrs\", builder.roleTO, builder.mode == Mode.TEMPLATE, attrTemplates));\n+                \"virAttrs\", builder.groupTO, builder.mode == Mode.TEMPLATE, attrTemplates));\n \n         final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirAttrs\",\n-                \"inheritVirAttrs\", new PropertyModel<Boolean>(builder.roleTO, \"inheritVirAttrs\"));\n+                \"inheritVirAttrs\", new PropertyModel<Boolean>(builder.groupTO, \"inheritVirAttrs\"));\n         inhVirtualAttributes.setOutputMarkupId(true);\n         this.add(inhVirtualAttributes);\n         //--------------------------------\n \n         //--------------------------------\n         // Resources panel\n         //--------------------------------\n-        this.add(new ResourcesPanel.Builder(\"resources\").attributableTO(builder.roleTO).build().\n+        this.add(new ResourcesPanel.Builder(\"resources\").attributableTO(builder.groupTO).build().\n                 setOutputMarkupId(true));\n         //--------------------------------\n \n         //--------------------------------\n         // Entitlements\n         //--------------------------------\n-        ListModel<String> selectedEntitlements = new ListModel<String>(builder.roleTO.getEntitlements());\n+        ListModel<String> selectedEntitlements = new ListModel<String>(builder.groupTO.getEntitlements());\n \n         List<String> allEntitlements = authRestClient.getAllEntitlements();\n         if (allEntitlements != null && !allEntitlements.isEmpty()) {\n@@ -177,7 +177,7 @@ private RolePanel(final Builder builder) {\n         //--------------------------------\n         // Security panel\n         //--------------------------------\n-        this.add(new RoleSecurityPanel(\"security\", builder.roleTO).setOutputMarkupId(true));\n+        this.add(new GroupSecurityPanel(\"security\", builder.groupTO).setOutputMarkupId(true));\n         //--------------------------------\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RolePanel.java"},{"sha":"d13ab9423f9b6b6884bd9cb93b2edf651a50919c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchPanel.java","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,11 +23,11 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.search.SyncopeFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.wicket.model.LoadableDetachableModel;\n \n-public class RoleSearchPanel extends AbstractSearchPanel {\n+public class GroupSearchPanel extends AbstractSearchPanel {\n \n     private static final long serialVersionUID = 5757183539269316263L;\n \n@@ -55,13 +55,13 @@ public Builder required(final boolean required) {\n             return this;\n         }\n \n-        public RoleSearchPanel build() {\n-            return new RoleSearchPanel(this);\n+        public GroupSearchPanel build() {\n+            return new GroupSearchPanel(this);\n         }\n     }\n \n-    private RoleSearchPanel(final Builder builder) {\n-        super(builder.id, AttributableType.ROLE, builder.fiql, builder.required);\n+    private GroupSearchPanel(final Builder builder) {\n+        super(builder.id, AttributableType.GROUP, builder.fiql, builder.required);\n     }\n \n     @Override\n@@ -82,7 +82,7 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.roleNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -94,8 +94,8 @@ protected List<String> load() {\n     }\n \n     @Override\n-    protected SyncopeFiqlSearchConditionBuilder getSearchConditionBuilder() {\n-        return SyncopeClient.getRoleSearchConditionBuilder();\n+    protected AbstractFiqlSearchConditionBuilder getSearchConditionBuilder() {\n+        return SyncopeClient.getGroupSearchConditionBuilder();\n     }\n \n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchPanel.java"},{"sha":"a7dac82df30ab2ee1db7f78fa918fb18e18e5bce","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,15 +24,15 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.ResultStatusModalPage;\n-import org.apache.syncope.client.console.pages.RoleModalPage;\n+import org.apache.syncope.client.console.pages.GroupModalPage;\n import org.apache.syncope.client.console.pages.StatusModalPage;\n import org.apache.syncope.client.console.rest.AbstractSubjectRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -45,13 +45,13 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class RoleSearchResultPanel extends AbstractSearchResultPanel {\n+public class GroupSearchResultPanel extends AbstractSearchResultPanel {\n \n     private static final long serialVersionUID = -1180593361914008764L;\n \n-    private final static String PAGEID = \"Roles\";\n+    private final static String PAGEID = \"Groups\";\n \n-    public <T extends AbstractAttributableTO> RoleSearchResultPanel(final String id, final boolean filtered,\n+    public <T extends AbstractAttributableTO> GroupSearchResultPanel(final String id, final boolean filtered,\n             final String fiql, final PageReference callerRef, final AbstractSubjectRestClient restClient) {\n \n         super(id, filtered, fiql, callerRef, restClient);\n@@ -93,8 +93,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new StatusModalPage<RoleTO>(\n-                                        page.getPageReference(), statusmodal, (RoleTO) model.getObject());\n+                                return new StatusModalPage<GroupTO>(\n+                                        page.getPageReference(), statusmodal, (GroupTO) model.getObject());\n                             }\n                         });\n \n@@ -114,8 +114,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new RoleModalPage(\n-                                        page.getPageReference(), editmodal, (RoleTO) model.getObject());\n+                                return new GroupModalPage(\n+                                        page.getPageReference(), editmodal, (GroupTO) model.getObject());\n                             }\n                         });\n \n@@ -130,7 +130,7 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            final RoleTO roleTO = (RoleTO) restClient.\n+                            final GroupTO groupTO = (GroupTO) restClient.\n                                     delete(model.getObject().getETagValue(), model.getObject().getKey());\n \n                             page.setModalResult(true);\n@@ -141,7 +141,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                 @Override\n                                 public Page createPage() {\n-                                    return new ResultStatusModalPage.Builder(editmodal, roleTO).build();\n+                                    return new ResultStatusModalPage.Builder(editmodal, groupTO).build();\n                                 }\n                             });\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java"},{"sha":"4e0e1f9a1eebe0654a461a7227813dd35ff95fcb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSecurityPanel.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -41,12 +41,12 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class RoleSecurityPanel extends Panel {\n+public class GroupSecurityPanel extends Panel {\n \n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(RoleSecurityPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(GroupSecurityPanel.class);\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n@@ -57,7 +57,7 @@ public class RoleSecurityPanel extends Panel {\n \n     private IModel<Map<Long, String>> accountPolicies = null;\n \n-    public <T extends AbstractAttributableTO> RoleSecurityPanel(final String id, final T entityTO) {\n+    public <T extends AbstractAttributableTO> GroupSecurityPanel(final String id, final T entityTO) {\n         super(id);\n \n         setOutputMarkupId(true);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSecurityPanel.java"},{"sha":"f9a56e69fae07b8b39eeaef7e8068a990c203527","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSummaryPanel.java","status":"renamed","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,12 +20,12 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.commons.XMLRolesReader;\n-import org.apache.syncope.client.console.pages.RoleModalPage;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.pages.GroupModalPage;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -37,22 +37,22 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class RoleSummaryPanel extends Panel {\n+public class GroupSummaryPanel extends Panel {\n \n     private static final long serialVersionUID = 643769814985593156L;\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(RoleSummaryPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupSummaryPanel.class);\n \n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n     @SpringBean\n-    private RoleRestClient restClient;\n+    private GroupRestClient restClient;\n \n-    private RoleTO selectedNode;\n+    private GroupTO selectedNode;\n \n     public static class Builder implements Serializable {\n \n@@ -70,27 +70,27 @@ public Builder(final String id) {\n             this.id = id;\n         }\n \n-        public RoleSummaryPanel.Builder window(final ModalWindow window) {\n+        public GroupSummaryPanel.Builder window(final ModalWindow window) {\n             this.window = window;\n             return this;\n         }\n \n-        public RoleSummaryPanel.Builder callerPageRef(final PageReference callerPageRef) {\n+        public GroupSummaryPanel.Builder callerPageRef(final PageReference callerPageRef) {\n             this.callerPageRef = callerPageRef;\n             return this;\n         }\n \n-        public RoleSummaryPanel.Builder selectedNodeId(final Long selectedNodeId) {\n+        public GroupSummaryPanel.Builder selectedNodeId(final Long selectedNodeId) {\n             this.selectedNodeId = selectedNodeId;\n             return this;\n         }\n \n-        public RoleSummaryPanel build() {\n-            return new RoleSummaryPanel(this);\n+        public GroupSummaryPanel build() {\n+            return new GroupSummaryPanel(this);\n         }\n     }\n \n-    private RoleSummaryPanel(final Builder builder) {\n+    private GroupSummaryPanel(final Builder builder) {\n         super(builder.id);\n \n         if (builder.selectedNodeId == null || builder.selectedNodeId == 0) {\n@@ -105,10 +105,10 @@ private RoleSummaryPanel(final Builder builder) {\n             }\n         }\n \n-        Fragment fragment = new Fragment(\"roleSummaryPanel\",\n+        Fragment fragment = new Fragment(\"groupSummaryPanel\",\n                 builder.selectedNodeId == null\n                         ? \"fakerootFrag\"\n-                        : (builder.selectedNodeId == 0 ? \"rootPanel\" : \"roleViewPanel\"),\n+                        : (builder.selectedNodeId == 0 ? \"rootPanel\" : \"groupViewPanel\"),\n                 this);\n \n         if (builder.selectedNodeId != null) {\n@@ -130,24 +130,24 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new RoleModalPage(builder.callerPageRef, builder.window, new RoleTO());\n+                                return new GroupModalPage(builder.callerPageRef, builder.window, new GroupTO());\n                             }\n                         });\n \n                         builder.window.show(target);\n                     }\n-                }, ActionLink.ActionType.CREATE, xmlRolesReader.getEntitlement(\"Roles\", \"create\"));\n+                }, ActionLink.ActionType.CREATE, xmlRolesReader.getEntitlement(\"Groups\", \"create\"));\n             } else {\n-                RoleTabPanel roleTabPanel =\n-                        new RoleTabPanel(\"nodeViewPanel\", selectedNode, builder.window, builder.callerPageRef);\n-                roleTabPanel.setOutputMarkupId(true);\n-                fragment.add(roleTabPanel);\n+                GroupTabPanel groupTabPanel =\n+                        new GroupTabPanel(\"nodeViewPanel\", selectedNode, builder.window, builder.callerPageRef);\n+                groupTabPanel.setOutputMarkupId(true);\n+                fragment.add(groupTabPanel);\n             }\n         }\n         add(fragment);\n     }\n \n-    public RoleTO getSelectedNode() {\n+    public GroupTO getSelectedNode() {\n         return selectedNode;\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSummaryPanel.java"},{"sha":"9615554d87040a548c2190e154f01957d21a9670","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupTabPanel.java","status":"renamed","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,17 +22,17 @@\n import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.XMLRolesReader;\n import org.apache.syncope.client.console.pages.ResultStatusModalPage;\n-import org.apache.syncope.client.console.pages.RoleModalPage;\n-import org.apache.syncope.client.console.pages.Roles;\n+import org.apache.syncope.client.console.pages.GroupModalPage;\n+import org.apache.syncope.client.console.pages.Groups;\n import org.apache.syncope.client.console.pages.StatusModalPage;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -46,21 +46,21 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class RoleTabPanel extends Panel {\n+public class GroupTabPanel extends Panel {\n \n     private static final long serialVersionUID = 859236186975983959L;\n \n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     @SpringBean\n     private UserRestClient userRestClient;\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    public RoleTabPanel(final String id, final RoleTO selectedNode, final ModalWindow window,\n+    public GroupTabPanel(final String id, final GroupTO selectedNode, final ModalWindow window,\n             final PageReference pageRef) {\n \n         super(id);\n@@ -82,15 +82,15 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        RoleTO roleTO = new RoleTO();\n-                        roleTO.setParent(selectedNode.getKey());\n-                        return new RoleModalPage(pageRef, window, roleTO);\n+                        GroupTO groupTO = new GroupTO();\n+                        groupTO.setParent(selectedNode.getKey());\n+                        return new GroupModalPage(pageRef, window, groupTO);\n                     }\n                 });\n \n                 window.show(target);\n             }\n-        }, ActionLink.ActionType.CREATE, xmlRolesReader.getEntitlement(\"Roles\", \"create\"));\n+        }, ActionLink.ActionType.CREATE, xmlRolesReader.getEntitlement(\"Groups\", \"create\"));\n         links.addWithRoles(new ActionLink() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n@@ -103,13 +103,13 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new StatusModalPage<RoleTO>(pageRef, window, roleRestClient.read(selectedNode.getKey()));\n+                        return new StatusModalPage<GroupTO>(pageRef, window, groupRestClient.read(selectedNode.getKey()));\n                     }\n                 });\n \n                 window.show(target);\n             }\n-        }, ActionLink.ActionType.MANAGE_RESOURCES, xmlRolesReader.getEntitlement(\"Roles\", \"update\"));\n+        }, ActionLink.ActionType.MANAGE_RESOURCES, xmlRolesReader.getEntitlement(\"Groups\", \"update\"));\n         links.addWithRoles(new ActionLink() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n@@ -122,51 +122,51 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        RoleTO roleTO = roleRestClient.read(selectedNode.getKey());\n-                        return new RoleModalPage(pageRef, window, roleTO);\n+                        GroupTO groupTO = groupRestClient.read(selectedNode.getKey());\n+                        return new GroupModalPage(pageRef, window, groupTO);\n                     }\n                 });\n \n                 window.show(target);\n             }\n-        }, ActionLink.ActionType.EDIT, xmlRolesReader.getEntitlement(\"Roles\", \"update\"));\n+        }, ActionLink.ActionType.EDIT, xmlRolesReader.getEntitlement(\"Groups\", \"update\"));\n         links.addWithRoles(new ActionLink() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    final RoleTO roleTO = roleRestClient.delete(selectedNode.getETagValue(), selectedNode.getKey());\n+                    final GroupTO groupTO = groupRestClient.delete(selectedNode.getETagValue(), selectedNode.getKey());\n \n-                    ((Roles) pageRef.getPage()).setModalResult(true);\n+                    ((Groups) pageRef.getPage()).setModalResult(true);\n \n                     window.setPageCreator(new ModalWindow.PageCreator() {\n \n                         private static final long serialVersionUID = -7834632442532690940L;\n \n                         @Override\n                         public Page createPage() {\n-                            return new ResultStatusModalPage.Builder(window, roleTO).build();\n+                            return new ResultStatusModalPage.Builder(window, groupTO).build();\n                         }\n                     });\n \n                     window.show(target);\n                 } catch (SyncopeClientException e) {\n                     error(getString(Constants.OPERATION_ERROR) + \": \" + e.getMessage());\n-                    ((Roles) pageRef.getPage()).getFeedbackPanel().refresh(target);\n+                    ((Groups) pageRef.getPage()).getFeedbackPanel().refresh(target);\n                 }\n             }\n-        }, ActionLink.ActionType.DELETE, xmlRolesReader.getEntitlement(\"Roles\", \"delete\"));\n+        }, ActionLink.ActionType.DELETE, xmlRolesReader.getEntitlement(\"Groups\", \"delete\"));\n \n-        final Form form = new Form(\"roleForm\");\n+        final Form form = new Form(\"groupForm\");\n         form.setModel(new CompoundPropertyModel(selectedNode));\n         form.setOutputMarkupId(true);\n \n-        final RolePanel rolePanel = new RolePanel.Builder(\"rolePanel\").form(form).roleTO(selectedNode).\n-                roleModalPageMode(Mode.ADMIN).build();\n-        rolePanel.setEnabled(false);\n-        form.add(rolePanel);\n+        final GroupPanel groupPanel = new GroupPanel.Builder(\"groupPanel\").\n+                form(form).groupTO(selectedNode).groupModalPageMode(Mode.ADMIN).build();\n+        groupPanel.setEnabled(false);\n+        form.add(groupPanel);\n \n         final WebMarkupContainer userListContainer = new WebMarkupContainer(\"userListContainer\");\n \n@@ -181,7 +181,7 @@ public Page createPage() {\n             protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n                 userListContainer.replace(new UserSearchResultPanel(\"userList\",\n                         true,\n-                        SyncopeClient.getUserSearchConditionBuilder().hasRoles(selectedNode.getKey()).query(),\n+                        SyncopeClient.getUserSearchConditionBuilder().inGroups(selectedNode.getKey()).query(),\n                         pageRef,\n                         userRestClient));\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleTabPanel.java"},{"sha":"9136462a856859367a3688231c2f76a5156d565a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MembershipsPanel.java","status":"modified","additions":24,"deletions":25,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,18 +24,17 @@\n import java.util.Set;\n import javax.swing.tree.DefaultMutableTreeNode;\n import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.client.console.commons.RoleTreeBuilder;\n-import org.apache.syncope.client.console.commons.RoleUtils;\n+import org.apache.syncope.client.console.commons.GroupTreeBuilder;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.pages.MembershipModalPage;\n import org.apache.syncope.client.console.pages.UserModalPage;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatingOnConfirmAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansion;\n import org.apache.syncope.client.console.wicket.markup.html.tree.DefaultMutableTreeNodeExpansionModel;\n-import org.apache.syncope.client.console.wicket.markup.html.tree.TreeRoleProvider;\n+import org.apache.syncope.client.console.wicket.markup.html.tree.TreeGroupProvider;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n@@ -63,7 +62,7 @@ public class MembershipsPanel extends Panel {\n     private static final long serialVersionUID = -2559791301973107191L;\n \n     @SpringBean\n-    private RoleTreeBuilder roleTreeBuilder;\n+    private GroupTreeBuilder groupTreeBuilder;\n \n     private final ListView<MembershipTO> membView;\n \n@@ -89,7 +88,7 @@ public MembershipsPanel(final String id, final UserTO userTO, final Mode mode,\n         membWin.setCookieName(\"create-membership-modal\");\n         add(membWin);\n \n-        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeRoleProvider(roleTreeBuilder, true);\n+        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeGroupProvider(groupTreeBuilder, true);\n         final DefaultMutableTreeNodeExpansionModel treeModel = new DefaultMutableTreeNodeExpansionModel();\n \n         tree = new DefaultNestedTree<DefaultMutableTreeNode>(\"treeTable\", treeProvider, treeModel) {\n@@ -99,7 +98,7 @@ public MembershipsPanel(final String id, final UserTO userTO, final Mode mode,\n             @Override\n             protected Component newContentComponent(final String id, final IModel<DefaultMutableTreeNode> node) {\n                 final DefaultMutableTreeNode treeNode = node.getObject();\n-                final RoleTO roleTO = (RoleTO) treeNode.getUserObject();\n+                final GroupTO groupTO = (GroupTO) treeNode.getUserObject();\n \n                 return new Folder<DefaultMutableTreeNode>(id, MembershipsPanel.this.tree, node) {\n \n@@ -112,12 +111,12 @@ protected boolean isClickable() {\n \n                     @Override\n                     protected IModel<?> newLabelModel(final IModel<DefaultMutableTreeNode> model) {\n-                        return new Model<String>(roleTO.getDisplayName());\n+                        return new Model<String>(groupTO.getDisplayName());\n                     }\n \n                     @Override\n                     protected void onClick(final AjaxRequestTarget target) {\n-                        if (roleTO.getKey() > 0) {\n+                        if (groupTO.getKey() > 0) {\n                             membWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                                 private static final long serialVersionUID = 7661763358801821185L;\n@@ -127,13 +126,13 @@ public Page createPage() {\n                                     PageReference pageRef = getPage().getPageReference();\n \n                                     for (MembershipTO membTO : membView.getList()) {\n-                                        if (membTO.getRoleId() == roleTO.getKey()) {\n+                                        if (membTO.getGroupId() == groupTO.getKey()) {\n                                             return new MembershipModalPage(pageRef, membWin, membTO, mode);\n                                         }\n                                     }\n                                     MembershipTO membTO = new MembershipTO();\n-                                    membTO.setRoleId(roleTO.getKey());\n-                                    membTO.setRoleName(roleTO.getName());\n+                                    membTO.setGroupId(groupTO.getKey());\n+                                    membTO.setGroupName(groupTO.getName());\n \n                                     return new MembershipModalPage(pageRef, membWin, membTO, mode);\n                                 }\n@@ -160,8 +159,8 @@ public Page createPage() {\n                     protected void populateItem(final ListItem<MembershipTO> item) {\n                         final MembershipTO membershipTO = (MembershipTO) item.getDefaultModelObject();\n \n-                        item.add(new Label(\"roleId\", new Model<Long>(membershipTO.getRoleId())));\n-                        item.add(new Label(\"roleName\", new Model<String>(membershipTO.getRoleName())));\n+                        item.add(new Label(\"groupId\", new Model<Long>(membershipTO.getGroupId())));\n+                        item.add(new Label(\"groupName\", new Model<String>(membershipTO.getGroupName())));\n \n                         AjaxLink editLink = new ClearIndicatingAjaxLink(\"editLink\", pageRef) {\n \n@@ -195,15 +194,15 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                                 ((UserModalPage) getPage()).getUserTO().getMemberships().remove(membershipTO);\n                                 target.add(membershipsContainer);\n \n-                                RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membershipTO.getRoleId());\n-                                Set<String> resourcesToRemove = roleTO == null\n-                                        ? Collections.<String>emptySet() : roleTO.getResources();\n+                                GroupTO groupTO = groupTreeBuilder.findGroup(membershipTO.getGroupId());\n+                                Set<String> resourcesToRemove = groupTO == null\n+                                        ? Collections.<String>emptySet() : groupTO.getResources();\n                                 if (!resourcesToRemove.isEmpty()) {\n-                                    Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n+                                    Set<String> resourcesAssignedViaMembership = new HashSet<>();\n                                     for (MembershipTO membTO : userTO.getMemberships()) {\n-                                        roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n-                                        if (roleTO != null) {\n-                                            resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                        groupTO = groupTreeBuilder.findGroup(membTO.getGroupId());\n+                                        if (groupTO != null) {\n+                                            resourcesAssignedViaMembership.addAll(groupTO.getResources());\n                                         }\n                                     }\n                                     resourcesToRemove.removeAll(resourcesAssignedViaMembership);\n@@ -236,11 +235,11 @@ public void onClose(final AjaxRequestTarget target) {\n                         Set<Long> diff = new HashSet<Long>(updatedUserTO.getMembershipMap().keySet());\n                         diff.removeAll(userTO.getMembershipMap().keySet());\n \n-                        Set<String> resourcesToAdd = new HashSet<String>();\n+                        Set<String> resourcesToAdd = new HashSet<>();\n                         for (Long diffMembId : diff) {\n-                            long roleId = updatedUserTO.getMembershipMap().get(diffMembId).getRoleId();\n-                            RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, roleId);\n-                            resourcesToAdd.addAll(roleTO.getResources());\n+                            long groupId = updatedUserTO.getMembershipMap().get(diffMembId).getGroupId();\n+                            GroupTO groupTO = groupTreeBuilder.findGroup(groupId);\n+                            resourcesToAdd.addAll(groupTO.getResources());\n                             StatusUtils.update(\n                                     userTO, statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n                         }"},{"sha":"1cf25ef5dd3dde9135a49b8831519b9ba1fe1902","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainAttrsPanel.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainAttrsPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -34,9 +34,9 @@\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.client.console.commons.JexlHelpUtil;\n import org.apache.syncope.client.console.commons.Mode;\n-import org.apache.syncope.client.console.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.client.console.panels.AttrTemplatesPanel.GroupAttrTemplatesChange;\n import org.apache.syncope.client.console.rest.ConfigurationRestClient;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -54,7 +54,7 @@\n import org.apache.syncope.common.lib.to.ConfTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.AttributableType;\n@@ -81,7 +81,7 @@ public class PlainAttrsPanel extends Panel {\n     private ConfigurationRestClient confRestClient;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     private final AbstractAttributableTO entityTO;\n \n@@ -147,18 +147,18 @@ private void setSchemas() {\n         AttrTO attrLayout = null;\n         List<PlainSchemaTO> schemaTOs;\n \n-        if (entityTO instanceof RoleTO) {\n-            final RoleTO roleTO = (RoleTO) entityTO;\n+        if (entityTO instanceof GroupTO) {\n+            final GroupTO groupTO = (GroupTO) entityTO;\n \n-            attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.ROLE));\n-            schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n+            attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.GROUP));\n+            schemaTOs = schemaRestClient.getSchemas(AttributableType.GROUP);\n             Set<String> allowed;\n             if (attrTemplates == null) {\n-                allowed = new HashSet<>(roleTO.getRPlainAttrTemplates());\n+                allowed = new HashSet<>(groupTO.getGPlainAttrTemplates());\n             } else {\n-                allowed = new HashSet<>(attrTemplates.getSelected(AttrTemplatesPanel.Type.rPlainAttrTemplates));\n-                if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n-                    allowed.addAll(roleRestClient.read(roleTO.getParent()).getRPlainAttrTemplates());\n+                allowed = new HashSet<>(attrTemplates.getSelected(AttrTemplatesPanel.Type.gPlainAttrTemplates));\n+                if (groupTO.isInheritTemplates() && groupTO.getParent() != 0) {\n+                    allowed.addAll(groupRestClient.read(groupTO.getParent()).getGPlainAttrTemplates());\n                 }\n             }\n             schemaRestClient.filter(schemaTOs, allowed, true);\n@@ -169,7 +169,7 @@ private void setSchemas() {\n             attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.MEMBERSHIP));\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n             Set<String> allowed = new HashSet<>(\n-                    roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMPlainAttrTemplates());\n+                    groupRestClient.read(((MembershipTO) entityTO).getGroupId()).getMPlainAttrTemplates());\n             schemaRestClient.filter(schemaTOs, allowed, true);\n         } else {\n             schemas = new TreeMap<>();\n@@ -383,9 +383,9 @@ private List<String> getEnumeratedValues(final PlainSchemaTO schemaTO) {\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n-        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n-            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n-            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rPlainAttrTemplates) {\n+        if ((event.getPayload() instanceof GroupAttrTemplatesChange)) {\n+            final GroupAttrTemplatesChange update = (GroupAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.gPlainAttrTemplates) {\n                 setSchemas();\n                 setAttrs();\n                 update.getTarget().add(this);"},{"sha":"a55be9fc8411ce80e1870220a88feae27bfffd1a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PolicyBeanPanel.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPolicyBeanPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,6 +21,7 @@\n import java.beans.PropertyDescriptor;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -58,6 +59,9 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.util.ClassUtils;\n+import org.springframework.util.ReflectionUtils;\n+import org.springframework.util.ReflectionUtils.FieldCallback;\n+import org.springframework.util.ReflectionUtils.FieldFilter;\n \n public class PolicyBeanPanel extends Panel {\n \n@@ -84,13 +88,13 @@ protected List<String> load() {\n         }\n     };\n \n-    final IModel<List<String>> roleSchemas = new LoadableDetachableModel<List<String>>() {\n+    final IModel<List<String>> groupSchemas = new LoadableDetachableModel<List<String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n-            return schemaRestClient.getPlainSchemaNames(AttributableType.ROLE);\n+            return schemaRestClient.getPlainSchemaNames(AttributableType.GROUP);\n         }\n     };\n \n@@ -108,9 +112,10 @@ public PolicyBeanPanel(final String id, final PolicySpec policy) {\n         super(id);\n \n         final List<FieldWrapper> items = new ArrayList<>();\n+        ReflectionUtils.doWithFields(policy.getClass(), new FieldCallback() {\n \n-        for (Field field : policy.getClass().getDeclaredFields()) {\n-            if (!\"serialVersionUID\".equals(field.getName())) {\n+            @Override\n+            public void doWith(final Field field) throws IllegalArgumentException, IllegalAccessException {\n                 FieldWrapper fieldWrapper = new FieldWrapper();\n                 fieldWrapper.setName(field.getName());\n                 fieldWrapper.setType(field.getType());\n@@ -123,7 +128,14 @@ public PolicyBeanPanel(final String id, final PolicySpec policy) {\n \n                 items.add(fieldWrapper);\n             }\n-        }\n+        },\n+                new FieldFilter() {\n+\n+                    @Override\n+                    public boolean matches(final Field field) {\n+                        return !Modifier.isStatic(field.getModifiers()) && !\"serialVersionUID\".equals(field.getName());\n+                    }\n+                });\n \n         final ListView<FieldWrapper> policies = new AltListView<FieldWrapper>(\"policies\", items) {\n \n@@ -185,7 +197,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n                         if (field.getSchemaList() != null) {\n                             final List<String> values = new ArrayList<>();\n                             if (field.getName().charAt(0) == 'r') {\n-                                values.addAll(roleSchemas.getObject());\n+                                values.addAll(groupSchemas.getObject());\n \n                                 if (field.getSchemaList().extended()) {\n                                     values.add(\"name\");"},{"sha":"39404216dc17856e4396ce4da0448887524944b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -120,7 +120,7 @@ public class ResourceMappingPanel extends Panel {\n     private final ResourceTO resourceTO;\n \n     /**\n-     * User / role.\n+     * User / group.\n      */\n     private final AttributableType attrType;\n \n@@ -145,11 +145,11 @@ private MappingTO getMapping() {\n             }\n             result = this.resourceTO.getUmapping();\n         }\n-        if (AttributableType.ROLE == this.attrType) {\n-            if (this.resourceTO.getRmapping() == null) {\n-                this.resourceTO.setRmapping(new MappingTO());\n+        if (AttributableType.GROUP == this.attrType) {\n+            if (this.resourceTO.getGmapping() == null) {\n+                this.resourceTO.setGmapping(new MappingTO());\n             }\n-            result = this.resourceTO.getRmapping();\n+            result = this.resourceTO.getGmapping();\n         }\n \n         return result;\n@@ -160,7 +160,7 @@ private MappingTO getMapping() {\n      *\n      * @param id panel id\n      * @param resourceTO external resource\n-     * @param attrType USER / ROLE\n+     * @param attrType USER / GROUP\n      */\n     public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final AttributableType attrType) {\n         super(id);\n@@ -324,8 +324,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new AjaxDropDownChoicePanel<AttributableType>(\"entities\",\n                                 new ResourceModel(\"entities\", \"entities\").getObject(), new Model<AttributableType>(\n                                         entity));\n-                entitiesPanel.setChoices(attrType == AttributableType.ROLE\n-                        ? Collections.<AttributableType>singletonList(AttributableType.ROLE)\n+                entitiesPanel.setChoices(attrType == AttributableType.GROUP\n+                        ? Collections.<AttributableType>singletonList(AttributableType.GROUP)\n                         : Arrays.asList(AttributableType.values()));\n                 entitiesPanel.setStyleSheet(DEF_FIELD_STYLE);\n                 entitiesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -512,7 +512,7 @@ private void setEnabled() {\n \n         boolean enabled = objectClasses.isEmpty()\n                 || (AttributableType.USER == attrType && objectClasses.contains(ConnIdObjectClassTO.ACCOUNT))\n-                || (AttributableType.ROLE == attrType && objectClasses.contains(ConnIdObjectClassTO.GROUP));\n+                || (AttributableType.GROUP == attrType && objectClasses.contains(ConnIdObjectClassTO.GROUP));\n         this.mappingContainer.setEnabled(enabled);\n         this.mappingContainer.setVisible(enabled);\n         this.accountLinkContainer.setEnabled(enabled);\n@@ -563,28 +563,28 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n             switch (type) {\n                 // user attribute names\n                 case UserPlainSchema:\n-                case RolePlainSchema:\n+                case GroupPlainSchema:\n                 case MembershipPlainSchema:\n                     toBeUpdated.setChoices(schemaRestClient.getPlainSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserDerivedSchema:\n-                case RoleDerivedSchema:\n+                case GroupDerivedSchema:\n                 case MembershipDerivedSchema:\n                     toBeUpdated.setChoices(schemaRestClient.getDerSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserVirtualSchema:\n-                case RoleVirtualSchema:\n+                case GroupVirtualSchema:\n                 case MembershipVirtualSchema:\n                     toBeUpdated.setChoices(schemaRestClient.getVirSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserId:\n                 case Password:\n                 case Username:\n-                case RoleId:\n-                case RoleName:\n+                case GroupId:\n+                case GroupName:\n                 default:\n                     toBeUpdated.setRequired(false);\n                     toBeUpdated.setEnabled(false);\n@@ -606,7 +606,7 @@ private void setAccountId(final IntMappingType type, final AjaxCheckBoxPanel acc\n         if (type != null && type.getAttributableType() != null) {\n             switch (type) {\n                 case UserVirtualSchema:\n-                case RoleVirtualSchema:\n+                case GroupVirtualSchema:\n                 case MembershipVirtualSchema:\n                 // Virtual accountId is not permitted\n                 case Password:"},{"sha":"6dd1d067e5446d431527ab916c7d245b69d2ada7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourcesPanel.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourcesPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,8 +25,7 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.RoleTreeBuilder;\n-import org.apache.syncope.client.console.commons.RoleUtils;\n+import org.apache.syncope.client.console.commons.GroupTreeBuilder;\n import org.apache.syncope.client.console.commons.SelectChoiceRenderer;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n@@ -35,7 +34,7 @@\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -56,7 +55,7 @@ public class ResourcesPanel extends Panel {\n     private ResourceRestClient resourceRestClient;\n \n     @SpringBean\n-    private RoleTreeBuilder roleTreeBuilder;\n+    private GroupTreeBuilder groupTreeBuilder;\n \n     private final AbstractSubjectTO subjectTO;\n \n@@ -109,7 +108,7 @@ private ResourcesPanel(final Builder builder) {\n             resourcesPalette = new AjaxRecordingPalettePanel<>(\"resourcesPalette\",\n                     new PropertyModel<List<String>>(subjectTO, \"resources\"),\n                     new ListModel<>(allResources), builder.statusPanel);\n-        } else if (subjectTO instanceof RoleTO) {\n+        } else if (subjectTO instanceof GroupTO) {\n             resourcesPalette = new AjaxPalettePanel<>(\"resourcesPalette\",\n                     new PropertyModel<List<String>>(subjectTO, \"resources\"), new ListModel<>(allResources));\n         }\n@@ -149,14 +148,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                             if (subjectTO instanceof UserTO) {\n                                 UserTO userTO = (UserTO) subjectTO;\n \n-                                Set<String> resourcesToRemove = new HashSet<String>(previousResources);\n+                                Set<String> resourcesToRemove = new HashSet<>(previousResources);\n                                 resourcesToRemove.removeAll(userTO.getResources());\n                                 if (!resourcesToRemove.isEmpty()) {\n-                                    Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n+                                    Set<String> resourcesAssignedViaMembership = new HashSet<>();\n                                     for (MembershipTO membTO : userTO.getMemberships()) {\n-                                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n-                                        if (roleTO != null) {\n-                                            resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                        GroupTO groupTO = groupTreeBuilder.findGroup(membTO.getGroupId());\n+                                        if (groupTO != null) {\n+                                            resourcesAssignedViaMembership.addAll(groupTO.getResources());\n                                         }\n                                     }\n                                     resourcesToRemove.removeAll(resourcesAssignedViaMembership);"},{"sha":"c081cd3b3bf13931e6bcd570f5fb6dd80b3bd35e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SearchView.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSearchView.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -52,7 +52,7 @@ public class SearchView extends ListView<SearchClause> {\n \n     private final IModel<List<String>> dnames;\n \n-    private final IModel<List<String>> roleNames;\n+    private final IModel<List<String>> groupNames;\n \n     private final IModel<List<String>> resourceNames;\n \n@@ -64,7 +64,7 @@ public SearchView(final String id, final List<? extends SearchClause> list,\n             final IModel<List<SearchClause.Type>> types,\n             final IModel<List<String>> anames,\n             final IModel<List<String>> dnames,\n-            final IModel<List<String>> roleNames,\n+            final IModel<List<String>> groupNames,\n             final IModel<List<String>> resourceNames,\n             final IModel<List<String>> entitlements) {\n \n@@ -75,7 +75,7 @@ public SearchView(final String id, final List<? extends SearchClause> list,\n         this.types = types;\n         this.anames = anames;\n         this.dnames = dnames;\n-        this.roleNames = roleNames;\n+        this.groupNames = groupNames;\n         this.resourceNames = resourceNames;\n         this.entitlements = entitlements;\n     }\n@@ -290,7 +290,7 @@ public String getIdValue(final SearchClause.Comparator object, int index) {\n                     break;\n \n                 case MEMBERSHIP:\n-                    property.setChoices(roleNames);\n+                    property.setChoices(groupNames);\n                     property.setChoiceRenderer(new IChoiceRenderer<String>() {\n \n                         private static final long serialVersionUID = -4288397951948436434L;"},{"sha":"efa5a3dbf9de538fdb27048317cdc57efc5d163a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SelectOnlyUserSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSelectOnlyUserSearchResultPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -79,7 +79,7 @@ public void populateItem(final Item<ICellPopulator<AbstractAttributableTO>> cell\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         send(pageRef.getPage(), Broadcast.BREADTH,\n-                                new RoleDetailsPanel.UserOwnerSelectPayload(rowModel.getObject().getKey()));\n+                                new GroupDetailsPanel.UserOwnerSelectPayload(rowModel.getObject().getKey()));\n                         window.close(target);\n                     }\n                 }, ActionLink.ActionType.SELECT, \"Users\");"},{"sha":"fb740656788b708faad0d86b2976f5f90977c866","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/StatusPanel.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStatusPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.pages.ConnObjectModalPage;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -38,7 +38,7 @@\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -78,7 +78,7 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n     private UserRestClient userRestClient;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     private final ModalWindow connObjectWin;\n \n@@ -107,7 +107,7 @@ public <T extends AbstractAttributableTO> StatusPanel(\n         connObjectWin.setCookieName(\"connobject-modal\");\n         add(connObjectWin);\n \n-        statusUtils = new StatusUtils(subject instanceof RoleTO ? roleRestClient : userRestClient);\n+        statusUtils = new StatusUtils(subject instanceof GroupTO ? groupRestClient : userRestClient);\n \n         connObjects = statusUtils.getConnectorObjects(subject);\n \n@@ -128,20 +128,19 @@ public <T extends AbstractAttributableTO> StatusPanel(\n                 }\n             }\n             syncope.setStatus(syncopeStatus);\n-        } else if (subject instanceof RoleTO) {\n-            syncope.setAccountLink(((RoleTO) subject).getDisplayName());\n+        } else if (subject instanceof GroupTO) {\n+            syncope.setAccountLink(((GroupTO) subject).getDisplayName());\n             syncope.setStatus(Status.ACTIVE);\n         }\n \n         statusBeans.add(syncope);\n         initialStatusBeanMap.put(syncope.getResourceName(), syncope);\n \n         for (ConnObjectWrapper entry : connObjects) {\n-            final StatusBean statusBean = statusUtils.getStatusBean(\n-                    entry.getAttributable(),\n+            final StatusBean statusBean = statusUtils.getStatusBean(entry.getAttributable(),\n                     entry.getResourceName(),\n                     entry.getConnObjectTO(),\n-                    subject instanceof RoleTO);\n+                    subject instanceof GroupTO);\n \n             initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n             statusBeans.add(statusBean);\n@@ -161,7 +160,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(checkGroup);\n \n         CheckGroupSelector groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n-        if (subject instanceof RoleTO) {\n+        if (subject instanceof GroupTO) {\n             groupSelector.setVisible(false);\n         }\n         add(groupSelector);\n@@ -175,7 +174,7 @@ protected void populateItem(final ListItem<StatusBean> item) {\n                 item.add(statusUtils.getStatusImage(\"icon\", item.getModelObject().getStatus()));\n \n                 final Check<StatusBean> check = new Check<StatusBean>(\"check\", item.getModel(), checkGroup);\n-                if (subject instanceof RoleTO) {\n+                if (subject instanceof GroupTO) {\n                     check.setVisible(false);\n                 }\n                 item.add(check);"},{"sha":"55617164863f767f2f5201b9bd5fbbe1f0026b10","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SyncTasksPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.RoleTemplateModalPage;\n+import org.apache.syncope.client.console.pages.GroupTemplateModalPage;\n import org.apache.syncope.client.console.pages.SyncTaskModalPage;\n import org.apache.syncope.client.console.pages.UserTemplateModalPage;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n@@ -70,8 +70,7 @@ protected List<IColumn<AbstractTaskTO, String>> getColumns() {\n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        syncTaskscolumns.add(\n-                new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n+        syncTaskscolumns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n                     private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -137,13 +136,13 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                     @Override\n                                     public Page createPage() {\n-                                        return new RoleTemplateModalPage(pageRef, window, taskTO);\n+                                        return new GroupTemplateModalPage(pageRef, window, taskTO);\n                                     }\n                                 });\n \n                                 window.show(target);\n                             }\n-                        }, ActionLink.ActionType.ROLE_TEMPLATE, TASKS);\n+                        }, ActionLink.ActionType.GROUP_TEMPLATE, TASKS);\n \n                         panel.add(new ActionLink() {\n "},{"sha":"6618728a22bc301b193d6ecb5e0f43c276ce2e69","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,10 +21,10 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.search.SyncopeFiqlSearchConditionBuilder;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -34,7 +34,7 @@ public class UserSearchPanel extends AbstractSearchPanel {\n     private static final long serialVersionUID = -1769527800450203738L;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     public static class Builder implements Serializable {\n \n@@ -87,17 +87,17 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.roleNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                List<RoleTO> roleTOs = roleRestClient.list();\n+                List<GroupTO> groupTOs = groupRestClient.list();\n \n-                List<String> result = new ArrayList<String>(roleTOs.size());\n-                for (RoleTO role : roleTOs) {\n-                    result.add(role.getDisplayName());\n+                List<String> result = new ArrayList<>(groupTOs.size());\n+                for (GroupTO group : groupTOs) {\n+                    result.add(group.getDisplayName());\n                 }\n \n                 return result;\n@@ -106,7 +106,7 @@ protected List<String> load() {\n     }\n \n     @Override\n-    protected SyncopeFiqlSearchConditionBuilder getSearchConditionBuilder() {\n+    protected AbstractFiqlSearchConditionBuilder getSearchConditionBuilder() {\n         return SyncopeClient.getUserSearchConditionBuilder();\n     }\n "},{"sha":"4a3e10332add3439505f1ed9d29e2e5e05684922","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirAttrsPanel.java","status":"modified","additions":15,"deletions":16,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirAttrsPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,16 +26,16 @@\n import java.util.Set;\n import java.util.TreeMap;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.panels.AttrTemplatesPanel.GroupAttrTemplatesChange;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n@@ -69,7 +69,7 @@ public class VirAttrsPanel extends Panel {\n     private SchemaRestClient schemaRestClient;\n \n     @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private GroupRestClient groupRestClient;\n \n     private final AttrTemplatesPanel attrTemplates;\n \n@@ -105,18 +105,17 @@ private void filter(final List<VirSchemaTO> schemaTOs, final Set<String> allowed\n             protected List<String> load() {\n                 List<VirSchemaTO> schemaTOs;\n \n-                if (entityTO instanceof RoleTO) {\n-                    final RoleTO roleTO = (RoleTO) entityTO;\n+                if (entityTO instanceof GroupTO) {\n+                    final GroupTO groupTO = (GroupTO) entityTO;\n \n-                    schemaTOs = schemaRestClient.getVirSchemas(AttributableType.ROLE);\n+                    schemaTOs = schemaRestClient.getVirSchemas(AttributableType.GROUP);\n                     Set<String> allowed;\n                     if (attrTemplates == null) {\n-                        allowed = new HashSet<String>(roleTO.getRVirAttrTemplates());\n+                        allowed = new HashSet<>(groupTO.getGVirAttrTemplates());\n                     } else {\n-                        allowed = new HashSet<String>(attrTemplates.getSelected(\n-                                AttrTemplatesPanel.Type.rVirAttrTemplates));\n-                        if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n-                            allowed.addAll(roleRestClient.read(roleTO.getParent()).getRVirAttrTemplates());\n+                        allowed = new HashSet<>(attrTemplates.getSelected(AttrTemplatesPanel.Type.gVirAttrTemplates));\n+                        if (groupTO.isInheritTemplates() && groupTO.getParent() != 0) {\n+                            allowed.addAll(groupRestClient.read(groupTO.getParent()).getGVirAttrTemplates());\n                         }\n                     }\n                     filter(schemaTOs, allowed);\n@@ -125,7 +124,7 @@ protected List<String> load() {\n                 } else {\n                     schemaTOs = schemaRestClient.getVirSchemas(AttributableType.MEMBERSHIP);\n                     Set<String> allowed = new HashSet<String>(\n-                            roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMVirAttrTemplates());\n+                            groupRestClient.read(((MembershipTO) entityTO).getGroupId()).getMVirAttrTemplates());\n                     filter(schemaTOs, allowed);\n                 }\n \n@@ -285,9 +284,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n-        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n-            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n-            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rVirAttrTemplates) {\n+        if ((event.getPayload() instanceof GroupAttrTemplatesChange)) {\n+            final GroupAttrTemplatesChange update = (GroupAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.gVirAttrTemplates) {\n                 update.getTarget().add(this);\n             }\n         }"},{"sha":"91634f21c5df4c03b51bb60597b37f777895a9c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"renamed","additions":54,"deletions":54,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,161 +23,161 @@\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n-import org.apache.syncope.common.lib.mod.RoleMod;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.types.SubjectType;\n import org.apache.syncope.common.lib.wrap.ResourceName;\n import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n-import org.apache.syncope.common.rest.api.service.RoleService;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n \n /**\n- * Console client for invoking Rest Role's services.\n+ * Console client for invoking Rest Group's services.\n  */\n @Component\n-public class RoleRestClient extends AbstractSubjectRestClient {\n+public class GroupRestClient extends AbstractSubjectRestClient {\n \n     private static final long serialVersionUID = -8549081557283519638L;\n \n     @Override\n     public int count() {\n-        return getService(RoleService.class).list(1, 1).getTotalCount();\n+        return getService(GroupService.class).list(1, 1).getTotalCount();\n     }\n \n-    public List<RoleTO> list() {\n-        return getService(RoleService.class).list(1, 1000).getResult();\n+    public List<GroupTO> list() {\n+        return getService(GroupService.class).list(1, 1000).getResult();\n     }\n \n     @Override\n-    public List<RoleTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(RoleService.class).list(page, size, toOrderBy(sort)).getResult();\n+    public List<GroupTO> list(final int page, final int size, final SortParam<String> sort) {\n+        return getService(GroupService.class).list(page, size, toOrderBy(sort)).getResult();\n     }\n \n     @Override\n     public int searchCount(final String fiql) {\n-        return getService(RoleService.class).search(fiql, 1, 1).getTotalCount();\n+        return getService(GroupService.class).search(fiql, 1, 1).getTotalCount();\n     }\n \n     @Override\n-    public List<RoleTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(RoleService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+    public List<GroupTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n+        return getService(GroupService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n     }\n \n     @Override\n     public ConnObjectTO getConnectorObject(final String resourceName, final Long id) {\n-        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.ROLE, id);\n+        return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.GROUP, id);\n     }\n \n-    public RoleTO create(final RoleTO roleTO) {\n-        Response response = getService(RoleService.class).create(roleTO);\n-        return response.readEntity(RoleTO.class);\n+    public GroupTO create(final GroupTO groupTO) {\n+        Response response = getService(GroupService.class).create(groupTO);\n+        return response.readEntity(GroupTO.class);\n     }\n \n-    public RoleTO read(final Long id) {\n-        return getAnonymousService(RoleService.class).read(id);\n+    public GroupTO read(final Long id) {\n+        return getAnonymousService(GroupService.class).read(id);\n     }\n \n-    public RoleTO update(final String etag, final RoleMod roleMod) {\n-        RoleTO result;\n+    public GroupTO update(final String etag, final GroupMod groupMod) {\n+        GroupTO result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.update(roleMod.getKey(), roleMod).readEntity(RoleTO.class);\n-            resetClient(RoleService.class);\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n     @Override\n-    public RoleTO delete(final String etag, final Long id) {\n-        RoleTO result;\n+    public GroupTO delete(final String etag, final Long id) {\n+        GroupTO result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.delete(id).readEntity(RoleTO.class);\n-            resetClient(RoleService.class);\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.delete(id).readEntity(GroupTO.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n     @Override\n     public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(RoleService.class).bulk(action);\n+        return getService(GroupService.class).bulk(action);\n     }\n \n-    public void unlink(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public void unlink(final String etag, final long groupId, final List<StatusBean> statuses) {\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            service.bulkDeassociation(roleId, ResourceDeassociationActionType.UNLINK,\n+            GroupService service = getService(etag, GroupService.class);\n+            service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNLINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class));\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n     }\n \n-    public void link(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public void link(final String etag, final long groupId, final List<StatusBean> statuses) {\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            service.bulkAssociation(roleId, ResourceAssociationActionType.LINK,\n+            GroupService service = getService(etag, GroupService.class);\n+            service.bulkAssociation(groupId, ResourceAssociationActionType.LINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class));\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n     }\n \n-    public BulkActionResult deprovision(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public BulkActionResult deprovision(final String etag, final long groupId, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.bulkDeassociation(roleId, ResourceDeassociationActionType.DEPROVISION,\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.DEPROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class)).\n                     readEntity(BulkActionResult.class);\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n-    public BulkActionResult provision(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public BulkActionResult provision(final String etag, final long groupId, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.bulkAssociation(roleId, ResourceAssociationActionType.PROVISION,\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkAssociation(groupId, ResourceAssociationActionType.PROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class)).\n                     readEntity(BulkActionResult.class);\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n-    public BulkActionResult unassign(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public BulkActionResult unassign(final String etag, final long groupId, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.bulkDeassociation(roleId, ResourceDeassociationActionType.UNASSIGN,\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class)).\n                     readEntity(BulkActionResult.class);\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n-    public BulkActionResult assign(final String etag, final long roleId, final List<StatusBean> statuses) {\n+    public BulkActionResult assign(final String etag, final long groupId, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            RoleService service = getService(etag, RoleService.class);\n-            result = service.bulkAssociation(roleId, ResourceAssociationActionType.ASSIGN,\n+            GroupService service = getService(etag, GroupService.class);\n+            result = service.bulkAssociation(groupId, ResourceAssociationActionType.ASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceName.class)).\n                     readEntity(BulkActionResult.class);\n-            resetClient(RoleService.class);\n+            resetClient(GroupService.class);\n         }\n         return result;\n     }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java"},{"sha":"2c4421184d243afe87a1a71c5162c1e1db8100ae","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -88,7 +88,7 @@ public BulkActionResult bulkAssociationAction(\n             final ResourceDeassociationActionType type, final List<SubjectKey> subjtectIds) {\n \n         return getService(ResourceService.class).bulkDeassociation(resourceName,\n-                UserTO.class.isAssignableFrom(typeRef) ? SubjectType.USER : SubjectType.ROLE,\n+                UserTO.class.isAssignableFrom(typeRef) ? SubjectType.USER : SubjectType.GROUP,\n                 type, subjtectIds);\n     }\n }"},{"sha":"3e7cc445b2e3f7b878b92e48e174929fcf33f467","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,7 +32,7 @@ public enum ActionType {\n         CREATE(\"create\"),\n         EDIT(\"read\"),\n         USER_TEMPLATE(\"read\"),\n-        ROLE_TEMPLATE(\"read\"),\n+        GROUP_TEMPLATE(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n         SEARCH(\"read\"),\n@@ -54,7 +54,7 @@ public enum ActionType {\n         PROVISION(\"update\"),\n         MANAGE_RESOURCES(\"update\"),\n         MANAGE_USERS(\"update\"),\n-        MANAGE_ROLES(\"update\");\n+        MANAGE_GROUPS(\"update\");\n \n         private final String actionId;\n "},{"sha":"35e4a65b2367aa38c4e4d1a63eb7f3051392bf2d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -51,12 +51,12 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         super.add(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelManageRoles\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelRoleTemplate\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelGroupTemplate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n@@ -149,10 +149,10 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n-            case MANAGE_ROLES:\n-                fragment = new Fragment(\"panelManageRoles\", \"fragmentManageRoles\", this);\n+            case MANAGE_GROUPS:\n+                fragment = new Fragment(\"panelManageGroups\", \"fragmentManageGroups\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"manageRolesLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"manageGroupsLink\", pageRef) {\n \n                     private static final long serialVersionUID = -6957616042924610293L;\n \n@@ -219,10 +219,10 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n \n-            case ROLE_TEMPLATE:\n-                fragment = new Fragment(\"panelRoleTemplate\", \"fragmentRoleTemplate\", this);\n+            case GROUP_TEMPLATE:\n+                fragment = new Fragment(\"panelGroupTemplate\", \"fragmentGroupTemplate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"roleTemplateLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"groupTemplateLink\", pageRef) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -500,8 +500,8 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n                 break;\n \n-            case MANAGE_ROLES:\n-                super.addOrReplace(new Fragment(\"panelManageRoles\", \"emptyFragment\", this));\n+            case MANAGE_GROUPS:\n+                super.addOrReplace(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n                 break;\n \n             case CREATE:"},{"sha":"6615b14475249f7d61c42d2a676282abd33d1c07","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -124,7 +124,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                         final byte[] uploadedBytes = uploadedFile.getBytes();\n                         final String uploaded = new String(\n                                 Base64.encodeBase64(uploadedBytes),\n-                                SyncopeConstants.DEFAULT_ENCODING);\n+                                SyncopeConstants.DEFAULT_CHARSET);\n                         field.setModelObject(uploaded);\n                         target.add(field);\n "},{"sha":"fa962bc2b9576cb241cee603f4ef950a8a0fc9aa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/DefaultMutableTreeNodeExpansion.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FDefaultMutableTreeNodeExpansion.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,7 +24,7 @@\n import java.util.Iterator;\n import java.util.Set;\n import javax.swing.tree.DefaultMutableTreeNode;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.MetaDataKey;\n import org.apache.wicket.Session;\n \n@@ -57,38 +57,38 @@ public void collapseAll() {\n \n     @Override\n     public boolean add(final DefaultMutableTreeNode node) {\n-        RoleTO roleTO = (RoleTO) node.getUserObject();\n+        GroupTO groupTO = (GroupTO) node.getUserObject();\n         boolean isAdded;\n         if (inverse) {\n-            isAdded = ids.remove(roleTO.getKey());\n+            isAdded = ids.remove(groupTO.getKey());\n         } else {\n-            isAdded = ids.add(roleTO.getKey());\n+            isAdded = ids.add(groupTO.getKey());\n         }\n         return isAdded;\n     }\n \n     @Override\n     public boolean remove(final Object object) {\n         DefaultMutableTreeNode node = (DefaultMutableTreeNode) object;\n-        RoleTO roleTO = (RoleTO) node.getUserObject();\n+        GroupTO groupTO = (GroupTO) node.getUserObject();\n         boolean isRemoved;\n         if (inverse) {\n-            isRemoved = ids.add(roleTO.getKey());\n+            isRemoved = ids.add(groupTO.getKey());\n         } else {\n-            isRemoved = ids.remove(roleTO.getKey());\n+            isRemoved = ids.remove(groupTO.getKey());\n         }\n         return isRemoved;\n     }\n \n     @Override\n     public boolean contains(final Object object) {\n         DefaultMutableTreeNode node = (DefaultMutableTreeNode) object;\n-        RoleTO roleTO = (RoleTO) node.getUserObject();\n+        GroupTO groupTO = (GroupTO) node.getUserObject();\n         boolean isContained;\n         if (inverse) {\n-            isContained = !ids.contains(roleTO.getKey());\n+            isContained = !ids.contains(groupTO.getKey());\n         } else {\n-            isContained = ids.contains(roleTO.getKey());\n+            isContained = ids.contains(groupTO.getKey());\n         }\n         return isContained;\n     }"},{"sha":"0638a73730be0e05354afe728e666c92c29fd04c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupPanel.java","status":"renamed","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.console.wicket.markup.html.tree;\n \n import javax.swing.tree.DefaultMutableTreeNode;\n-import org.apache.syncope.client.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.client.console.commons.GroupTreeBuilder;\n import org.apache.syncope.client.console.commons.XMLRolesReader;\n-import org.apache.syncope.client.console.pages.Roles.TreeNodeClickUpdate;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.client.console.pages.Groups.TreeNodeClickUpdate;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -39,12 +39,12 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class TreeRolePanel extends Panel {\n+public class TreeGroupPanel extends Panel {\n \n     private static final long serialVersionUID = 1762003213871836869L;\n \n     @SpringBean\n-    private RoleTreeBuilder roleTreeBuilder;\n+    private GroupTreeBuilder groupTreeBuilder;\n \n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n@@ -53,7 +53,7 @@ public class TreeRolePanel extends Panel {\n \n     private NestedTree<DefaultMutableTreeNode> tree;\n \n-    public TreeRolePanel(final String id) {\n+    public TreeGroupPanel(final String id) {\n         super(id);\n \n         treeContainer = new WebMarkupContainer(\"treeContainer\");\n@@ -63,7 +63,7 @@ public TreeRolePanel(final String id) {\n     }\n \n     private void updateTree() {\n-        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeRoleProvider(roleTreeBuilder, true);\n+        final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeGroupProvider(groupTreeBuilder, true);\n         final DefaultMutableTreeNodeExpansionModel treeModel = new DefaultMutableTreeNodeExpansionModel();\n \n         tree = new DefaultNestedTree<DefaultMutableTreeNode>(\"treeTable\", treeProvider, treeModel) {\n@@ -73,9 +73,9 @@ private void updateTree() {\n             @Override\n             protected Component newContentComponent(final String id, final IModel<DefaultMutableTreeNode> node) {\n                 final DefaultMutableTreeNode treeNode = node.getObject();\n-                final RoleTO roleTO = (RoleTO) treeNode.getUserObject();\n+                final GroupTO groupTO = (GroupTO) treeNode.getUserObject();\n \n-                return new Folder<DefaultMutableTreeNode>(id, TreeRolePanel.this.tree, node) {\n+                return new Folder<DefaultMutableTreeNode>(id, TreeGroupPanel.this.tree, node) {\n \n                     private static final long serialVersionUID = 9046323319920426493L;\n \n@@ -86,14 +86,14 @@ protected boolean isClickable() {\n \n                     @Override\n                     protected IModel<?> newLabelModel(final IModel<DefaultMutableTreeNode> model) {\n-                        return new Model<>(roleTO.getDisplayName());\n+                        return new Model<>(groupTO.getDisplayName());\n                     }\n \n                     @Override\n                     protected void onClick(final AjaxRequestTarget target) {\n                         super.onClick(target);\n \n-                        send(getPage(), Broadcast.BREADTH, new TreeNodeClickUpdate(target, roleTO.getKey()));\n+                        send(getPage(), Broadcast.BREADTH, new TreeNodeClickUpdate(target, groupTO.getKey()));\n                     }\n                 };\n             }\n@@ -103,7 +103,7 @@ protected void onClick(final AjaxRequestTarget target) {\n \n         DefaultMutableTreeNodeExpansion.get().expandAll();\n \n-        MetaDataRoleAuthorizationStrategy.authorize(tree, ENABLE, xmlRolesReader.getEntitlement(\"Roles\", \"read\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(tree, ENABLE, xmlRolesReader.getEntitlement(\"Groups\", \"read\"));\n \n         treeContainer.addOrReplace(tree);\n     }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeRolePanel.java"},{"sha":"c0b55c375c6826ef1503c8c83772de208d5ea2a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupProvider.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupProvider.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,21 +19,21 @@\n package org.apache.syncope.client.console.wicket.markup.html.tree;\n \n import javax.swing.tree.DefaultMutableTreeNode;\n-import org.apache.syncope.client.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.client.console.commons.GroupTreeBuilder;\n import org.apache.wicket.extensions.markup.html.repeater.util.TreeModelProvider;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-public class TreeRoleProvider extends TreeModelProvider<DefaultMutableTreeNode> {\n+public class TreeGroupProvider extends TreeModelProvider<DefaultMutableTreeNode> {\n \n     private static final long serialVersionUID = -7741964777100892335L;\n \n-    public TreeRoleProvider(final RoleTreeBuilder roleTreeBuilder) {\n-        this(roleTreeBuilder, false);\n+    public TreeGroupProvider(final GroupTreeBuilder groupTreeBuilder) {\n+        this(groupTreeBuilder, false);\n     }\n \n-    public TreeRoleProvider(final RoleTreeBuilder roleTreeBuilder, final boolean rootVisible) {\n-        super(roleTreeBuilder.build(), rootVisible);\n+    public TreeGroupProvider(final GroupTreeBuilder groupTreeBuilde, final boolean rootVisible) {\n+        super(groupTreeBuilde.build(), rootVisible);\n     }\n \n     @Override","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/tree/TreeRoleProvider.java"},{"sha":"0978141cf4c0df83296c2226b70a2e80047b8c8d","filename":"client/console/src/main/resources/META-INF/resources/css/style.css","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fstyle.css?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@ body {\n   margin: 0px 5px;\n   margin-top: 5px;\n }\n-#roletabs {\n+#grouptabs {\n   margin: 0px 5px;\n   margin-top: 5px;\n }\n@@ -258,7 +258,7 @@ div#executions table td, div#executions table th { border: 1px solid #eee; paddi\n   color: #9C0;\n }\n \n-#navigationPane .roles {\n+#navigationPane .groups {\n   color: #F90;\n }\n \n@@ -347,13 +347,13 @@ td.action{\n   text-align: right;\n }\n \n-.role-tree {\n+.group-tree {\n   width: 30%;\n   display: block;\n   float: left;\n }\n \n-.roleTable {\n+.groupTable {\n   line-height: 1.5em;\n }\n "},{"sha":"9669486ce123cd439f6fc52ddb52af71a929a9de","filename":"client/console/src/main/resources/META-INF/resources/img/actions/groups-icon.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Factions%2Fgroups-icon.png?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/META-INF/resources/img/actions/roles-icon.png"},{"sha":"fba8be7bcf36476308b3440547685f402d55da82","filename":"client/console/src/main/resources/META-INF/resources/img/menu/groups.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fgroups.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fgroups.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fgroups.png?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/META-INF/resources/img/menu/roles.png"},{"sha":"9b64b4be48060c7c7dd8c709be4c02e7bf8de4a2","filename":"client/console/src/main/resources/META-INF/resources/img/menu/notsel/groups.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fnotsel%2Fgroups.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fnotsel%2Fgroups.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fimg%2Fmenu%2Fnotsel%2Fgroups.png?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/META-INF/resources/img/menu/notsel/roles.png"},{"sha":"8de4a1da25cc7146c841767938ec41ddb045a5b6","filename":"client/console/src/main/resources/authorizations.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -66,25 +66,25 @@ under the License.\n     </action>\n   </page>\n \n-  <page id=\"Roles\">\n+  <page id=\"Groups\">\n     <action id=\"list\">\n-      <entitlement>ROLE_LIST</entitlement>\n+      <entitlement>GROUP_LIST</entitlement>\n     </action>\n \n     <action id=\"create\">\n-      <entitlement>ROLE_CREATE</entitlement>\n+      <entitlement>GROUP_CREATE</entitlement>\n     </action>\n \n     <action id=\"read\">\n-      <entitlement>ROLE_READ</entitlement>\n+      <entitlement>GROUP_READ</entitlement>\n     </action>\n \n     <action id=\"update\">\n-      <entitlement>ROLE_UPDATE</entitlement>\n+      <entitlement>GROUP_UPDATE</entitlement>\n     </action>\n \n     <action id=\"delete\">\n-      <entitlement>ROLE_DELETE</entitlement>\n+      <entitlement>GROUP_DELETE</entitlement>\n     </action>\n   </page>\n "},{"sha":"1acb7b4d39723c088002309f0d65f97594dbfbe9","filename":"client/console/src/main/resources/consoleContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -68,7 +68,7 @@ under the License.\n     <property name=\"authorizations\" value=\"authorizations.xml\"/>\n   </bean>\n \n-  <bean id=\"roleTreeBuilder\" class=\"org.apache.syncope.client.console.commons.RoleTreeBuilder\"/>\n+  <bean id=\"groupTreeBuilder\" class=\"org.apache.syncope.client.console.commons.GroupTreeBuilder\"/>\n \n   <bean id=\"syncopeClientFactory\" class=\"org.apache.syncope.client.lib.SyncopeClientFactoryBean\">\n     <property name=\"address\" value=\"${scheme}://${host}:${port}/${rootPath}\"/>"},{"sha":"a5fe51189830e90d65d6ab2a855d999c43305ae8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n users=Users\n-roles=Roles\n+groups=Groups\n configuration=Configuration\n resources=Resources\n connectors=Connectors"},{"sha":"1f1e827c9df7d6956dcea1b05027f9c351ee97af","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n users=Utenti\n-roles=Ruoli\n+groups=Gruppi\n configuration=Configurazione\n resources=Risorse\n connectors=Connettori"},{"sha":"de966d2d268464ce7124c99cb4ea97cae767bc84","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n users=Usu\\u00e1rios\n-roles=Fun\\u00e7\\u00f5es\n+groups=Grupos\n configuration=Configura\\u00e7\\u00f5es\n resources=Recursos\n connectors=Conectores"},{"sha":"8b7349b18fe85d6675d8908ddddadc844f2fdac8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -88,8 +88,8 @@\n           </span>\n         </li>\n         <li><span>\n-            <a href=\"#\" wicket:id=\"roles\"><img wicket:id=\"rolesIcon\" alt=\"Roles\" width=\"80\" height=\"80\" /><br />\n-              <wicket:message key=\"roles\"/>\n+            <a href=\"#\" wicket:id=\"groups\"><img wicket:id=\"groupsIcon\" alt=\"Groups\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"groups\"/>\n             </a>\n           </span>\n         </li>"},{"sha":"58a0241994154ed77c4993e756027dded63e4068","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration.html","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -47,8 +47,8 @@\n             <a href=\"#adminUser\"><span><wicket:message key=\"adminUser\"/></span></a>\n           </li>\n           <li><a href=\"#selfUser\"><span><wicket:message key=\"selfUser\"/></span></a></li>\n-          <li><a href=\"#adminRole\"><span><wicket:message key=\"adminRole\"/></span></a></li>\n-          <li><a href=\"#selfRole\"><span><wicket:message key=\"selfRole\"/></span></a></li>\n+          <li><a href=\"#adminGroup\"><span><wicket:message key=\"adminGroup\"/></span></a></li>\n+          <li><a href=\"#selfGroup\"><span><wicket:message key=\"selfGroup\"/></span></a></li>\n           <li><a href=\"#adminMembership\"><span><wicket:message key=\"adminMembership\"/></span></a></li>\n           <li><a href=\"#selfMembership\"><span><wicket:message key=\"selfMembership\"/></span></a></li>\n         </ul>\n@@ -58,11 +58,11 @@\n         <div id=\"selfUser\" style=\"border-width: 1px;border-top-width: 0px;\">\n           <span wicket:id=\"selfUserLayoutPanel\">[self user layout panel]</span>\n         </div>\n-        <div id=\"adminRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"adminRoleLayoutPanel\">[admin role layout panel]</span>\n+        <div id=\"adminGroup\" style=\"border-width: 1px;border-top-width: 0px;\">\n+          <span wicket:id=\"adminGroupLayoutPanel\">[admin group layout panel]</span>\n         </div>\n-        <div id=\"selfRole\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"selfRoleLayoutPanel\">[self role layout panel]</span>\n+        <div id=\"selfGroup\" style=\"border-width: 1px;border-top-width: 0px;\">\n+          <span wicket:id=\"selfGroupLayoutPanel\">[self group layout panel]</span>\n         </div>\n         <div id=\"adminMembership\" style=\"border-width: 1px;border-top-width: 0px;\">\n           <span wicket:id=\"adminMembershipLayoutPanel\">[admin membership layout panel]</span>"},{"sha":"dea3e7832cdcfd5fb5e4cee86c322f377928da2a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -41,8 +41,8 @@ content=Text\n layouts=Layouts\n adminUser=Administrator User Form\n selfUser=Self User Form\n-adminRole=Administrator Role Form\n-selfRole=Self Role Form\n+adminGroup=Administrator Group Form\n+selfGroup=Self Group Form\n adminMembership=Administrator Membership Form\n selfMembership=Self Membership Form\n ext=Extensions"},{"sha":"36140b2616b7288dbcb8ee91f694f89db6a5ff41","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -41,8 +41,8 @@ content=Testo\n layouts=Layouts\n adminUser=Form Amministrazione Utente\n selfUser=Form Utente\n-adminRole=Form Amministrazione Ruolo\n-selfRole=Form Ruolo\n+adminGroup=Form Amministrazione Gruppo\n+selfGroup=Form Gruppo\n adminMembership=Form Amministrazione Membership\n selfMembership=Form Membership\n ext=Estensioni"},{"sha":"a39ea6105b50d98f7b45b32ec5f3310a7dc9e727","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Configuration_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -41,8 +41,8 @@ content=Texto\n layouts=Layouts\n adminUser=Forma do usu\\u00e1rio de administra\\u00e7\\u00e3o\n selfUser=Forma Usu\\u00e1rio\n-adminRole=Forma Fun\\u00e7\\u00e3o de administra\\u00e7\\u00e3o\n-selfRole=Form Fun\\u00e7\\u00e3o\n+adminGroup=Forma de grupo de administra\\u00e7\\u00e3o\n+selfGroup=Form Grupo\n adminMembership=Forma de membro de administra\\u00e7\\u00e3o\n selfMembership=Forma Membro\n ext=Extens\\u00f5es"},{"sha":"bbcd878eeb9a0ac0fc55b1392287c07f8d78ef18","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/GroupModalPage.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@\n       <p class=\"ui-widget ui-corner-all ui-widget-header\">\n         <wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"displayName\"/>\n       </p>\n-      <form wicket:id=\"roleForm\">\n+      <form wicket:id=\"groupForm\">\n         <div id=\"tabs\">\n           <div style=\"display: block; clear: both\">\n             <ul>\n@@ -36,7 +36,7 @@\n               <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n             </ul>\n           </div>\n-          <div wicket:id=\"rolePanel\"></div>\n+          <div wicket:id=\"groupPanel\"></div>\n         </div>\n         <div style=\"bottom:0;margin:10px\">\n           <input type=\"submit\"","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RoleModalPage.html"},{"sha":"4ffa2fb68c1d6661413d86239972475c72ffd654","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/GroupModalPage.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n required_alert=All form fields are required.\n-title=Role\n+title=Group\n details=Details\n plainAttrs=Plain attributes\n tab3=Derived attributes\n@@ -26,9 +26,9 @@ security=Security\n add=+\n drop=-\n error=Generic error occurred during the operation\n-firstResourcesList=Role's resources\n+firstResourcesList=Group's resources\n secondResourcesList=Available resources\n-firstEntitlementsList=Role's entitlements\n+firstEntitlementsList=Group's entitlements\n secondEntitlementsList=Available entitlements\n derAttrs=Derived Attributes\n derAttrToRemove=Delete","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RoleModalPage.properties"},{"sha":"1c6efec25120ce59e961fad69558171040144aba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/GroupModalPage_it.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n required_alert=All form fields are required.\n-title=Ruolo\n+title=Gruppo\n details=Dettagli\n plainAttrs=Attributi normali\n tab3=Attributi derivati\n@@ -28,7 +28,7 @@ drop=-\n error=Errore generico durante l'operazione\n firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n-firstResourcesList=Risorse ruolo\n+firstResourcesList=Risorse gruppo\n secondResourcesList=Risorse disponibili\n derAttrs=Attributi derivati\n derAttrToRemove=Elimina\n@@ -47,4 +47,4 @@ inheritDerAttrs=Eredita attributi derivati\n inheritVirAttrs=Eredita attributi virtuali\n templates=Modelo\n secondEntitlementsList=Entitlement disponibili\n-firstEntitlementsList=Entitlement ruolo\n+firstEntitlementsList=Entitlement gruppo","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RoleModalPage_it.properties"},{"sha":"064958566d562596d14e3ed26f4f3c3592bbf02e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/GroupModalPage_pt_BR.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n-title=Fun\\u00e7\\u00e3o\n+title=Grupo\n details=Detalhes\n plainAttrs=Atributos Normal\n tab3=Atributos Derivados\n@@ -26,9 +26,9 @@ security=Seguran\\u00e7a\n add=+\n drop=-\n error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n-firstResourcesList=Recursos de fun\\u00e7\\u00f5es\n+firstResourcesList=Recursos de grupos\n secondResourcesList=Recursos dispon\\u00edveis\n-firstEntitlementsList=Direitos de fun\\u00e7\\u00f5es\n+firstEntitlementsList=Direitos de grupos\n secondEntitlementsList=Direitos dispon\\u00edveis\n derAttrs=Atributos derivados\n derAttrToRemove=Exluir","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RoleModalPage_pt_BR.properties"},{"sha":"203ffa92c9dcc725fbcd241eb78814a5cfcd8d45","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/GroupSelectModalPage.html","status":"renamed","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupSelectModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,7 +16,9 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:extend>\n-  <div wicket:id=\"treeTable\"\n-       style=\"width: 100%;display:block;margin:auto;\" class=\"roleTable role-tree\"/>\n-</wicket:extend>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"treeTable\"\n+         style=\"width: 100%;display:block;margin:auto;\" class=\"groupTable group-tree\"/>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RoleSelectModalPage.html"},{"sha":"a335c2877002554f4341791d67291235ba49b1c9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Groups.html","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,18 +19,18 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:head>\n     <style>\n-      div.role-tree div.wicket-tree-table a {\n+      div.group-tree div.wicket-tree-table a {\n         color:black;\n       }\n     </style>\n     <script type=\"text/javascript\">\n       $(document).ready(function() {\n-        $(\"#roletabs\").tabs();\n+        $(\"#grouptabs\").tabs();\n       });\n     </script>\n   </wicket:head>\n   <wicket:extend>\n-    <div id=\"roletabs\">\n+    <div id=\"grouptabs\">\n       <ul>\n         <li class=\"tabs-selected\">\n           <a href=\"#tabs-tree\">\n@@ -47,11 +47,11 @@\n       </ul>\n \n       <div id=\"tabs-tree\" >\n-        <div wicket:id=\"roleTabsContainer\">\n+        <div wicket:id=\"groupTabsContainer\">\n           <span wicket:id=\"treePanel\"></span>\n           <span wicket:id=\"summaryPanel\"></span>\n         </div>\n-        <div wicket:id=\"editRoleWin\">[Show modal window for create/editing role]</div>\n+        <div wicket:id=\"editGroupWin\">[Show modal window for create/editing group]</div>\n       </div>\n \n       <div id=\"tabs-search\">","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles.html"},{"sha":"bfe9385361f6b2cdd70e136379cf0ecf84440b1b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Groups.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles.properties"},{"sha":"76e69f7f11b5c8b40e3ca6b297b4d6afcdc8b94b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Groups_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles_it.properties"},{"sha":"8d8040135508d8429f6651eb7985add9e0f1edbd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Groups_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroups_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles_pt_BR.properties"},{"sha":"bd02e508e000105a1bc94711d01d148a9e59e0e4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/MembershipModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -17,7 +17,7 @@\n tab1=Plain attributes\n tab2=Derived attributes\n tab3=Virtual attributes\n-title=Roles\n+title=Groups\n add=+\n drop=-\n edit=Edit"},{"sha":"ebcfd3c5a94d8d27e60186bd87acac06a1b8d411","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/MembershipModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -17,7 +17,7 @@\n tab1=Attributi normali\n tab2=Attributi derivati\n tab3=Attributi virtuali\n-title=Ruoli\n+title=Gruppi\n add=+\n drop=-\n edit=Edit"},{"sha":"15e115d27cd3e4906db895a33adb16be9c3394b4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/MembershipModalPage_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -17,7 +17,7 @@\n tab1=Atributos Normal\n tab2=Atributos Derivados\n tab3=Atributos Virtuais\n-title=Fun\\u00e7\\u00f5es\n+title=Grupos\n add=+\n drop=-\n edit=Alterar"},{"sha":"655778bc11b16a2f2c09ff76b479e38e0d709eae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/NotificationModalPage.html","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -159,21 +159,21 @@\n               </div>\n               <div class=\"tablerow\" style=\"width: auto;\">\n                 <div class=\"tablecolumn_field\" style=\"width: auto; padding-right: 5px;\">\n-                  <span wicket:id=\"checkRoleAbout\">[checkRoleAbout]</span>\n+                  <span wicket:id=\"checkGroupAbout\">[checkGroupAbout]</span>\n                 </div>\n                 <div class=\"tablecolumn_label\" style=\"width: auto;\">\n-                  <label for=\"checkRoleAbout\"><wicket:message key=\"checkRoleAbout\"/></label>\n+                  <label for=\"checkGroupAbout\"><wicket:message key=\"checkGroupAbout\"/></label>\n                 </div>\n               </div>\n               <div id=\"userFilter\">\n                 <div id=\"title\">\n-                  <label for=\"roleFilter\"><wicket:message key=\"roleFilter\"/></label>\n+                  <label for=\"groupFilter\"><wicket:message key=\"groupFilter\"/></label>\n                 </div>\n                 <div id=\"warning\">\n-                  <label for=\"roleFilter\"><wicket:message key=\"roleFilterWarning\"/></label>\n+                  <label for=\"groupFilter\"><wicket:message key=\"groupFilterWarning\"/></label>\n                 </div>\n                 <div id=\"condition\">\n-                  <span wicket:id=\"roleAbout\"/>\n+                  <span wicket:id=\"groupAbout\"/>\n                 </div>\n               </div>\n             </span>"},{"sha":"99b7dca8ea759a60302cd906ff59457d27fffd07","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/NotificationModalPage.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,8 +33,8 @@ userFilter=User filter\n userFilterWarning=Do not use this filter unless events are not targeted at users\n userNotifications=User notifications\n userNotificationsWarning=Do not select this checkbox unless events are not targeted at users\n-roleFilter=Role filter\n-roleFilterWarning=Do not use this filter unless events are not targeted at roles\n+groupFilter=Group filter\n+groupFilterWarning=Do not use this filter unless events are not targeted at groups\n isActive=Enabled\n checkUserAbout=Users\n-checkRoleAbout=Roles\n+checkGroupAbout=Groups"},{"sha":"6015c91d5fd35cd2e57f4f8ba60c0cd89d3ca8f7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/NotificationModalPage_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,8 +33,8 @@ userFilter=Filtro utenti\n userFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente utenti\n userNotifications=Notifiche utente\n userNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente utenti\n-roleFilter=Filtro ruoli\n-roleFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente i ruoli\n+groupFilter=Filtro gruppi\n+groupFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente i ruoli\n isActive=Abilitata\n checkUserAbout=Utenti\n-checkRoleAbout=Ruoli\n+checkGroupAbout=Gruppi"},{"sha":"867b98bb2cc7c7b142425ce3fea396d12a60ec5e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/NotificationModalPage_pt_BR.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,12 +29,12 @@ recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n checkRecipients=Buscar Destinat\\u00e1rios\n checkAbout=Todos\n-userFilter=User filter\n+userFilter=Filtro de Usu\\u00e1rio\n userFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n userNotifications=Notifica\\u00e7\\u00f5es do usu\\u00e1rio\n userNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n-roleNotifications=Notifica\\u00e7\\u00f5es do fun\\u00e7\\u00f5es\n-roleNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n isActive=Ativada\n checkUserAbout=Usu\\u00e1rio\n-checkRoleAbout=Fun\\u00e7\\u00e3o\n+checkGroupAbout=Grupos\n+groupFilter=Filtro de Grupo\n+groupFilterWarning=N\\u00e3o use este filtro, a menos que os eventos n\\u00e3o s\\u00e3o dirigidas a grupos"},{"sha":"786c4e3e9a794d85cee29b442738317baa86532e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PolicyModalPage.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,7 +27,7 @@\n             <li class=\"tabs-selected\"><a href=\"#info\"><span><wicket:message key=\"policyInfo\"/></span></a></li>\n             <li><a href=\"#specification\"><span><wicket:message key=\"policySpecification\"/></span></a></li>\n             <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n-            <li><a href=\"#roles\"><span><wicket:message key=\"roles\"/></span></a></li>\n+            <li><a href=\"#groups\"><span><wicket:message key=\"groups\"/></span></a></li>\n           </ul>\n \n           <div id=\"info\">\n@@ -86,9 +86,9 @@\n             </div>\n           </div>\n \n-          <div id=\"roles\">\n+          <div id=\"groups\">\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit;\">\n-              <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"roles\"/>\n+              <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"groups\"/>\n             </div>\n           </div>\n         </div>\n@@ -104,6 +104,6 @@\n       </form>\n     </div>\n \n-    <div wicket:id=\"metaEditModalWin\">[Show modal window for meta editing (resources, roles)]</div>    \n+    <div wicket:id=\"metaEditModalWin\">[Show modal window for meta editing (resources, groups)]</div>    \n   </wicket:extend>\n </html>"},{"sha":"e98ca25c88ec84eac226d2450cfb9c7f73a1b5e3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PolicyModalPage.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -67,9 +67,9 @@ permittedLoginRetries=Maximum number of subsequent failed logins\n # Sync policy specification properties\n #-----------------------------\n uAltSearchSchemas=Alternative attributes for local search (users)\n-rAltSearchSchemas=Alternative attributes for local search (roles)\n+gAltSearchSchemas=Alternative attributes for local search (groups)\n userJavaRule=Custom user correlation rule\n-roleJavaRule=Custom role correlation rule\n+groupJavaRule=Custom group correlation rule\n conflictResolutionAction= Conflict resolution action\n #-----------------------------\n \n@@ -84,5 +84,5 @@ SYNC=Synchronization Policy\n GLOBAL_SYNC=Global Synchronization Policy\n #-----------------------------\n resources=Resources\n-roles=Roles\n+groups=Groups\n authResources=Authentication resources"},{"sha":"756411bcfc00eb2441b2f80dd3cd00548c45ead8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PolicyModalPage_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -80,9 +80,9 @@ GLOBAL_SYNC=Policy globale di sincronizzazione\n #-----------------------------\n nonAlphanumericRequired=Carattere non alfanumerico richiesto\n alphanumericRequired=Carattere alfanumerico richiesto\n-rAltSearchSchemas=Attributi alternativi per ricerca locale (ruoli)\n+gAltSearchSchemas=Attributi alternativi per ricerca locale (gruppi)\n userJavaRule=Regola di correlazione (utenti)\n-roleJavaRule=Regola di correlazione (ruoli)\n+groupJavaRule=Regola di correlazione (gruppi)\n resources=Risorse\n-roles=Ruoli\n+groups=Gruppi\n authResources=Risorse di autenticazione"},{"sha":"a69aeb445cb63402f6608c78ba771b6eea18d6cc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PolicyModalPage_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -67,9 +67,9 @@ permittedLoginRetries=N\\u00famero m\\u00e1ximo de subsequentes falhas de login\n # Sync policy specification properties\n #-----------------------------\n uAltSearchSchemas=Atributos alternativos para busca local (usu\\u00e1rios)\n-rAltSearchSchemas=Atributos alternativos para busca local (fun\\u00e7\\u00f5es)\n+gAltSearchSchemas=Atributos alternativos para busca local (grupos)\n userJavaRule=Regra customizada de correla\\u00e7\\u00e3o de usu\\u00e1rio\n-roleJavaRule=Regra de correla\\u00e7\\u00e3o de fun\\u00e7\\u00e3o customizada\n+groupJavaRule=Regra de correla\\u00e7\\u00e3o de grupo customizada\n conflictResolutionAction= A\\u00e7\\u00e3o de resolu\\u00e7\\u00e3o de conflito\n #-----------------------------\n \n@@ -83,5 +83,5 @@ GLOBAL_PASSWORD=Pol\\u00edtica Global de Senha\n SYNC=Pol\\u00edtica de Sincroniza\\u00e7\\u00e3o\n GLOBAL_SYNC=Pol\\u00edtica Global de sincroniza\\u00e7\\u00e3o\n resources=Recursos\n-roles=Fun\\u00e7\\u00f5es\n+groups=Grupos\n authResources=Recursos de autentica\\u00e7\\u00e3o"},{"sha":"5ac13796c045c2d3c54ca617123118b3bdda1542","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PushTaskModalPage.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -169,15 +169,15 @@\n                       </div>\n                       <div class=\"tablerow\" style=\"width: auto;\">\n                         <div class=\"tablecolumn_field\" style=\"width: auto; padding-right: 5px;\">\n-                          <span wicket:id=\"checkRoleFilter\">[checkRoleFilter]</span>\n+                          <span wicket:id=\"checkGroupFilter\">[checkGroupFilter]</span>\n                         </div>\n                         <div class=\"tablecolumn_label\" style=\"width: auto;\">\n-                          <label for=\"checkRoleFilter\"><wicket:message key=\"checkRoleFilter\"/></label>\n+                          <label for=\"checkGroupFilter\"><wicket:message key=\"checkGroupFilter\"/></label>\n                         </div>\n                       </div>\n-                      <div id=\"roleFilter\" style=\"border: 1px solid #dddddd; padding-bottom: 2%; padding-top: 2%;\">\n+                      <div id=\"groupFilter\" style=\"border: 1px solid #dddddd; padding-bottom: 2%; padding-top: 2%;\">\n                         <div id=\"condition\">\n-                          <span wicket:id=\"roleFilter\"/>\n+                          <span wicket:id=\"groupFilter\"/>\n                         </div>\n                       </div>\n                     </span>"},{"sha":"b058db73968d178fde99e71857fc268dbba8ae89","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PushTaskModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -42,4 +42,4 @@ actionsClasses=Actions classes\n matchingRule=Matching Rule\n unmatchingRule=Unmatching Rule\n checkUserFilter=User Filter\n-checkRoleFilter=Role Filter\n+checkGroupFilter=Group Filter"},{"sha":"52df2dbb2ec63cc00e055f7e80ca9f4e7452363a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PushTaskModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -44,4 +44,4 @@ syncStatus=Sincronizza stato utente\n matchingRule=Regola di corrispondenza\n unmatchingRule=Regola di non corrispondenza\n checkUserFilter=Filtro Utente\n-checkRoleFilter=Filtero Ruolo\n+checkGroupFilter=Filtro Gruppo"},{"sha":"69c09fa96b86bb038a0051ca6e93cf953e2f18ba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/PushTaskModalPage_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPushTaskModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -42,4 +42,4 @@ actionsClasses=Classes de a\\u00e7\\u00f5es\n matchingRule=Regra de correspond\\u00eancia\n unmatchingRule=Regra de non correspond\\u00eancia\n checkUserFilter=Filtro Usu\\u00e1rio\n-checkRoleFilter=Filtro Papel\n+checkGroupFilter=Filtro Grupo"},{"sha":"8f2cdab0dfb3754aa092156a908e01f4ca2b2c9b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -28,7 +28,7 @@\n           <ul>\n             <li class=\"tabs-selected\"><a href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n             <li><a href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n-            <li><a href=\"#rmapping\"><span><wicket:message key=\"rmapping\"/></span></a></li>\n+            <li><a href=\"#gmapping\"><span><wicket:message key=\"gmapping\"/></span></a></li>\n             <li><a href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n             <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n           </ul>\n@@ -39,8 +39,8 @@\n           <div id=\"umapping\">\n             <span wicket:id=\"umapping\">[umapping]</span>\n           </div>\n-          <div id=\"rmapping\">\n-            <span wicket:id=\"rmapping\">[rmapping]</span>\n+          <div id=\"gmapping\">\n+            <span wicket:id=\"gmapping\">[gmapping]</span>\n           </div>\n           <div id=\"connectorProperties\">\n             <span wicket:id=\"connconf\">[connconf]</span>"},{"sha":"69e6e0a9565e4ee17b4909595683d00f0c70ca9b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,13 +27,13 @@ title=Resource\n extAttrNames=External attributes\n intMappingTypes=Internal mapping types\n entity=Entity\n-roleSchema=Role Schema\n+groupSchema=Group Schema\n accountId=AccountId\n mandatoryCondition=Mandatory\n password=Password\n purpose=Purpose\n mappingUserSchema=Mapping User Schema\n-mappingRoleSchema=Mapping Role Schema\n+mappingGroupSchema=Mapping Group Schema\n delete=Delete\n intAttrNames=Internal attributes\n enforceMandatoryCondition=Enforce mandatory condition\n@@ -55,6 +55,6 @@ success_connection=Successful connection\n error_connection=Connection failure\n check=Check connection\n actionsClasses=Actions classes\n-rmapping=Role mapping\n+gmapping=Group mapping\n new=New\n randomPwdIfNotProvided=Generate random passwords when missing"},{"sha":"a7b33b818e4a5543a4727d6472161f74527f8345","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,13 +27,13 @@ title=Risorsa\n extAttrNames=Attributi esterni\n intMappingTypes=Tipo mapping interno\n entity=Entit&agrave;\n-roleSchema=Schema Ruolo\n+groupSchema=Schema Gruppo\n accountId=AccountId\n mandatoryCondition=Obbligatorio\n password=Password\n purpose=Scopo\n mappingUserSchema=Mapping User Schema\n-mappingRoleSchema=Mapping Role Schema\n+mappingGroupSchema=Mapping Group Schema\n delete=Rimuovi\n intAttrNames=Attributi interni\n enforceMandatoryCondition=Abilita mandatory condition\n@@ -55,6 +55,6 @@ success_connection=Connessione avvenuta con successo\n error_connection=Connessione non riuscita\n check=Verifica connessione\n actionsClasses=Classi azioni\n-rmapping=Mapping ruoli\n+gmapping=Mapping gruppi\n new=Nuova\n randomPwdIfNotProvided=Genera password casuali se mancanti"},{"sha":"be08c738bb94a76cd171fdfa6584de7a77de89df","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,13 +27,13 @@ title=Recurso\n extAttrNames=Atributos Externos\n intMappingTypes=Tipos internos de mapeamentos\n entity=Entidade\n-roleSchema=Esquema de Fun\\u00e7\\u00e3o\n+groupSchema=Esquema de Grupo\n accountId=Identificador da Conta\n mandatoryCondition=Obrigat\\u00f3rio\n password=Senha\n purpose=Prop\\u00f3sito\n mappingUserSchema=Esquema de mapeamento de usu\\u00e1rio\n-mappingRoleSchema=Esquema de mapeamento de fun\\u00e7\\u00e3o\n+mappingGroupSchema=Esquema de mapeamento de grupo\n delete=Excluir\n intAttrNames=Atributos internos\n enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n@@ -55,6 +55,6 @@ success_connection=Conex\\u00e3o com sucesso\n error_connection=Conex\\u00e3o sem sucesso\n check=Verificar a conex\\u00e3o\n actionsClasses=Classes de a\\u00e7\\u00f5es\n-rmapping=Regra de Mapeamento\n+gmapping=Mapeamento de grupos\n new=Novo\n randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver"},{"sha":"af0b83f5c57045bd275539f3dcc11d56228206fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schema.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -38,7 +38,7 @@\n         <li class=\"tabs-selected\"><a href=\"#cschema\"><wicket:message key=\"configuration\"/></a></li>\n         <li><a href=\"#uschema\"><wicket:message key=\"user\"/></a></li>\n         <li><a href=\"#mschema\"><wicket:message key=\"membership\"/></a></li>\n-        <li><a href=\"#rschema\"><wicket:message key=\"role\"/></a></li>\n+        <li><a href=\"#gschema\"><wicket:message key=\"group\"/></a></li>\n       </ul>\n \n       <div id=\"cschema\">\n@@ -50,8 +50,8 @@\n       <div id=\"mschema\">\n         <div wicket:id=\"membershipTabs\"/>\n       </div>\n-      <div id=\"rschema\">\n-        <div wicket:id=\"roleTabs\"/>\n+      <div id=\"gschema\">\n+        <div wicket:id=\"groupTabs\"/>\n       </div>    \n     </div>\n "},{"sha":"920d29c582c652f6fee28c66d4b52bfe9927ed63","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schema.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n user=User\n-role=Role\n+group=Group\n membership=Membership\n required_alert=All fields are required\n mandatory=Mandatory"},{"sha":"186b540473d674386eba98ae2d8fee908f463c91","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schema_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n user=Utente\n-role=Ruolo\n+group=Gruppo\n membership=Membership\n required_alert=Tutti i campi sono richiesti.\n mandatory=Obbligatorio"},{"sha":"8c41db68a15ba5a304f7bd9ebb21dee427d738ec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schema_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchema_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n user=Usu\\u00e1rio\n-role=Fun\\u00e7\\u00e3o\n+group=Grupo\n membership=Membro\n required_alert=Todos os campos s\\u00e3o requeridos\n mandatory=Obrigat\\u00f3rio"},{"sha":"9cb9c55ebe15baebaaabcb1d73f8ce328381dd4c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/UserModalPage.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,14 +23,14 @@ tab2=Plain attributes\n tab3=Derived attributes\n tab4=Virtual attributes\n tab5=Resources\n-tab6=Roles\n+tab6=Groups\n add=+\n drop=-\n resources=Resources transfer\n firstResourcesList=User's resources\n secondResourcesList=Available resources\n updating_error=Generic error occurred during updating\n-column1=Roles\n+column1=Groups\n column2=Action\n \n edit=Edit"},{"sha":"454a1718488a53293c8978b8f36fccd2a5f92bf9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/UserModalPage_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,14 +23,14 @@ tab2=Attributi normali\n tab3=Attributi derivati\n tab4=Attributi virtuali\n tab5=Risorse\n-tab6=Ruoli\n+tab6=Gruppi\n add=+\n drop=-\n resources=Associazione risorse\n firstResourcesList=Risorse utente\n secondResourcesList=Risorse disponibili\n updating_error=Errore generico durante l'aggiornamento\n-column1=Ruoli\n+column1=Gruppi\n column2=Azioni\n edit=Modifica\n delete=Rimuovi"},{"sha":"8486112de6130bdb0ba164223081a9f7e0ba3bfa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/UserModalPage_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,14 +23,14 @@ tab2=Atributos Normal\n tab3=Atriutos Derivados\n tab4=Atributos Virtuais\n tab5=Recursos\n-tab6=Fun\\u00e7\\u00f5es\n+tab6=Grupos\n add=+\n drop=-\n resources=Transfer\\u00eancia de Recursos\n firstResourcesList=Recursos de usu\\u00e1rio\n secondResourcesList=Recursos Dispon\\u00edveis\n updating_error=Um erro gern\\u00e9rico ocorreu durante a atualiza\\u00e7\\u00e3o\n-column1=Fun\\u00e7\\u00f5es\n+column1=Grupos\n column2=A\\u00e7\\u00e3o\n \n edit=Alterar"},{"sha":"938ecc40f4801b71c19fd3f8b0fa5f867fa40dfb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/WelcomePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWelcomePage.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -57,7 +57,7 @@\n         <li><a href=\"#\" wicket:id=\"todo\" class=\"todo\"><img wicket:id=\"todoIcon\" alt=\"TODO\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"todo\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"schema\" class=\"schema\"><img wicket:id=\"schemaIcon\" alt=\"Schema\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"schema\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"users\" class=\"users\"><img wicket:id=\"usersIcon\" alt=\"Users\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"users\"/></a></li>\n-        <li><a href=\"#\" wicket:id=\"roles\" class=\"roles\"><img wicket:id=\"rolesIcon\" alt=\"Roles\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"roles\"/></a></li>\n+        <li><a href=\"#\" wicket:id=\"groups\" class=\"groups\"><img wicket:id=\"groupsIcon\" alt=\"Groups\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"groups\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"resources\" class=\"resources\"><img wicket:id=\"resourcesIcon\" alt=\"Resources\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"resources\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"tasks\" class=\"tasks\"><img wicket:id=\"tasksIcon\" alt=\"Tasks\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"tasks\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"reports\" class=\"reports\"><img wicket:id=\"reportsIcon\" alt=\"Reports\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"reports\"/></a></li>"},{"sha":"2b7ef527af22368b7eba7f59f03038a26748f5af","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AttrTemplatesPanel.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrTemplatesPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,13 +36,13 @@\n       </ul>\n \n       <div id=\"rplainattr\">\n-        <div wicket:id=\"rPlainAttrTemplates\"/>\n+        <div wicket:id=\"gPlainAttrTemplates\"/>\n       </div>\n       <div id=\"rderattr\">\n-        <div wicket:id=\"rDerAttrTemplates\"/>\n+        <div wicket:id=\"gDerAttrTemplates\"/>\n       </div>\n       <div id=\"rvirattr\">\n-        <div wicket:id=\"rVirAttrTemplates\"/>\n+        <div wicket:id=\"gVirAttrTemplates\"/>\n       </div>    \n       <div id=\"mplainattr\">\n         <div wicket:id=\"mPlainAttrTemplates\"/>"},{"sha":"42bf48f0e53a3e95949faa7272ed83e5b60273ac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDetailsPanel.html","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -73,20 +73,20 @@\n \n         <div class=\"tablerow\">\n           <div class=\"tablecolumn_label short_dynamicsize\">\n-            <wicket:message key=\"roleOwner\"/>\n+            <wicket:message key=\"groupOwner\"/>\n           </div>\n           <div class=\"tablecolumn_field medium_dynamicsize\">\n-            <span wicket:id=\"roleOwner\"/>\n-            <a href=\"#\" wicket:id=\"roleOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select role owner\" title=\"Search\"/></a>\n-            <a href=\"#\" wicket:id=\"roleOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset role owner\" title=\"Delete\"/></a>\n+            <span wicket:id=\"groupOwner\"/>\n+            <a href=\"#\" wicket:id=\"groupOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select group owner\" title=\"Search\"/></a>\n+            <a href=\"#\" wicket:id=\"groupOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset group owner\" title=\"Delete\"/></a>\n           </div>\n         </div>\n       </div>\n     </div>\n \n     <span wicket:id=\"parentSelectWin\"/>\n     <span wicket:id=\"userOwnerSelectWin\"/>\n-    <span wicket:id=\"roleOwnerSelectWin\"/>\n+    <span wicket:id=\"groupOwnerSelectWin\"/>\n \n     <wicket:fragment wicket:id=\"parentFragment\">\n       <div class=\"tablerow\">\n@@ -95,8 +95,8 @@\n         </div>\n         <div class=\"tablecolumn_field medium_dynamicsize\">\n           <span wicket:id=\"parent\"/>\n-          <a href=\"#\" wicket:id=\"parentSelect\"><img src=\"img/actions/search.png\" alt=\"select role parent\" title=\"Search\"/></a>\n-          <a href=\"#\" wicket:id=\"parentReset\"><img src=\"img/actions/delete.png\" alt=\"reset role parent\" title=\"Delete\"/></a>\n+          <a href=\"#\" wicket:id=\"parentSelect\"><img src=\"img/actions/search.png\" alt=\"select group parent\" title=\"Search\"/></a>\n+          <a href=\"#\" wicket:id=\"parentReset\"><img src=\"img/actions/delete.png\" alt=\"reset group parent\" title=\"Delete\"/></a>\n         </div>\n       </div>\n     </wicket:fragment>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDetailsPanel.html"},{"sha":"52581e52141321facad607a58cf8cef42c3a9841","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDetailsPanel.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Name\n userOwner=Owner (user)\n-roleOwner=Owner (role)\n+groupOwner=Owner (group)\n inheritOwner=Inherit owner\n parent=Parent\n inheritTemplates=Inherit templates","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDetailsPanel.properties"},{"sha":"f7fbc024ffa67da3b4483f9241f18610d27e4761","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDetailsPanel_it.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Nome\n userOwner=Proprietario (utente)\n-roleOwner=Proprietario (ruolo)\n+groupOwner=Proprietario (gruppo)\n inheritOwner=Eredita proprietario\n parent=Padre\n inheritTemplates=Eredita modelli","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDetailsPanel_it.properties"},{"sha":"772fc4e8a50487199338d31bad31e24050550acf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDetailsPanel_pt_BR.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDetailsPanel_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,7 +16,7 @@\n # under the License.\n name=Nome\n userOwner=Dono (usu\\u00e1rio)\n-roleOwner=Dono (fun\\u00e7\\u00e3o)\n+groupOwner=Dono (grupo)\n inheritOwner=Dono herdado\n parent=Parente\n inheritTemplates=Modelo herdado","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDetailsPanel_pt_BR.properties"},{"sha":"578335081bc2305abe600de49d9431b722ee31c1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupPanel.html","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,7 @@\n   <wicket:panel>\n \n     <div id=\"details\">\n-      <span wicket:id=\"details\">[role details]</span>\n+      <span wicket:id=\"details\">[group details]</span>\n       <span wicket:id=\"statuspanel\">[Status Panel]</span>\n       <span wicket:id=\"systeminformation\">[System Information]</span>\n     </div>\n@@ -40,7 +40,7 @@\n           </div>\n         </div>\n \n-        <span wicket:id=\"plainAttrs\">[role attributes]</span>\n+        <span wicket:id=\"plainAttrs\">[group attributes]</span>\n       </div>\n     </div>\n \n@@ -55,7 +55,7 @@\n           </div>\n         </div>\n \n-        <span wicket:id=\"derAttrs\">[role derived attributes]</span>\n+        <span wicket:id=\"derAttrs\">[group derived attributes]</span>\n       </div>\n     </div>\n \n@@ -70,7 +70,7 @@\n           </div>\n         </div>\n \n-        <span wicket:id=\"virAttrs\">[role virtual attributes]</span>\n+        <span wicket:id=\"virAttrs\">[group virtual attributes]</span>\n       </div>\n     </div>\n ","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RolePanel.html"},{"sha":"195f8ed88f1f881040c42332776a611211cc28bd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupPanel.properties","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,9 +19,9 @@ add=+\n drop=-\n error=Generic error occurred during the operation\n name=Name\n-firstResourcesList=Role's resources\n+firstResourcesList=Group's resources\n secondResourcesList=Available resources\n-firstEntitlementsList=Role's entitlements\n+firstEntitlementsList=Group's entitlements\n secondEntitlementsList=Available entitlements\n \n addAttributeBtn=Add\n@@ -30,9 +30,9 @@ add=+\n drop=-\n error=Generic error occurred during the operation\n name=Name\n-firstResourcesList=Role's resources\n+firstResourcesList=Group's resources\n secondResourcesList=Available resources\n-firstEntitlementsList=Role's entitlements\n+firstEntitlementsList=Group's entitlements\n secondEntitlementsList=Available entitlements\n derAttrs=Derived Attributes\n derAttrToRemove=Delete","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RolePanel.properties"},{"sha":"7dda4fbfc9a95283041ad36f27b5dee2d3a5a51d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupPanel_it.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,7 +32,7 @@ name=Nome\n error=Errore generico durante l'operazione\n firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n-firstResourcesList=Risorse ruolo\n+firstResourcesList=Risorse gruppo\n secondResourcesList=Risorse disponibili\n derAttrs=Attributi derivati\n derAttrToRemove=Rimuovi\n@@ -49,5 +49,5 @@ addAttributeBtn=Aggiungi\n inheritPlainAttrs=Eredita attributi normali\n inheritDerAttrs=Eredita attributi derivati\n inheritVirAttrs=Eredita attributi virtuali\n-firstEntitlementsList=Entitlement ruolo\n+firstEntitlementsList=Entitlement grupo\n secondEntitlementsList=Entitlement disponibili","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RolePanel_it.properties"},{"sha":"e74968a8820f5be052b06adfcae97d6464c00615","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupPanel_pt_BR.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupPanel_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,9 +19,9 @@ add=+\n drop=-\n error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n name=Nome\n-firstResourcesList=Recursos de Fun\\u00e7\\u00f5es\n+firstResourcesList=Recursos de Grupo\n secondResourcesList=Recursos Dipon\\u00edveis\n-firstEntitlementsList=Direitos de Fun\\u00e7\\u00f5es\n+firstEntitlementsList=Direitos de Grupo\n secondEntitlementsList=Direitos Dispon\\u00edveis\n derAttrs=Atributos Derivados\n derAttrToRemove=Remover","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RolePanel_pt_BR.properties"},{"sha":"61b609e4598128d91be02663cb3a76accd981a84","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupSecurityPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSecurityPanel.html"},{"sha":"167673dcb5ab4e511690f854106ee09668e5c719","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupSecurityPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSecurityPanel.properties"},{"sha":"6e7c6ed92706d4617813f9ba57817ef4b121e6ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupSecurityPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSecurityPanel_it.properties"},{"sha":"5c77adc27c1dd9cd5fcfac7cacd48544d8f8c061","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupSecurityPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSecurityPanel_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSecurityPanel_pt_BR.properties"},{"sha":"39eead220b54cee2ceb5d542802adaee8fb3d596","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupSummaryPanel.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSummaryPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,9 +19,9 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n \n-    <span wicket:id=\"roleSummaryPanel\">[Role panel]</span>\n+    <span wicket:id=\"groupSummaryPanel\">[Group panel]</span>\n \n-    <wicket:fragment wicket:id=\"roleViewPanel\">\n+    <wicket:fragment wicket:id=\"groupViewPanel\">\n       <span wicket:id=\"nodeViewPanel\"></span>\n     </wicket:fragment>\n ","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSummaryPanel.html"},{"sha":"a05da39e0535b92f694a1ee15fc895ce230b4c8a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupTabPanel.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,7 +33,7 @@\n         <span style=\"float:right;\" wicket:id=\"actionLinks\"/>\n       </p>\n \n-      <form wicket:id=\"roleForm\">\n+      <form wicket:id=\"groupForm\">\n         <div id=\"tabs\" style=\"margin: 0px;\">\n           <ul>\n             <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n@@ -46,7 +46,7 @@\n             <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n             <li><a href=\"#users\"><span><wicket:message key=\"users\"/></span></a></li>\n           </ul>\n-          <div wicket:id=\"rolePanel\">\n+          <div wicket:id=\"groupPanel\">\n           </div>\n           <div id=\"users\">\n             <div wicket:id=\"userListContainer\">","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleTabPanel.html"},{"sha":"4ee3e36bdcd05764d31c05afebf6b27621e2d484","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupTabPanel.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Role\n+title=Group\n details=Details\n plainAttrs=Plain attributes\n derAttrs=Derived attributes","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleTabPanel.properties"},{"sha":"61e0772da1832eb566b52fcba7c47812fda87ed9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupTabPanel_it.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Ruolo\n+title=Gruppo\n details=Dettagli\n plainAttrs=Attributi normali\n derAttrs=Attributi derivati","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleTabPanel_it.properties"},{"sha":"7e751b290f250e3f19e10fe37e50bcfdd31302f3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupTabPanel_pt_BR.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupTabPanel_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Fun\\u00e7\\u00e3o\n+title=Grupo\n details=Detalhes\n plainAttrs=Atributos Normal\n derAttrs=Atributos Derivados","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleTabPanel_pt_BR.properties"},{"sha":"cac787d161c2d05bfb3a598c26df20bd2c6a77a7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MembershipsPanel.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@\n       <wicket:message key=\"membership_availability\"/>\n     </p>\n \n-    <div wicket:id=\"treeTable\" style=\"float: left; width: 100%; margin:auto;\" class=\"role-tree roleTable\"/>\n+    <div wicket:id=\"treeTable\" style=\"float: left; width: 100%; margin:auto;\" class=\"group-tree groupTable\"/>\n \n     <div style=\"float: left; width: 100%;\">\n       <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"membership_text\"/></p>\n@@ -41,10 +41,10 @@\n         <tbody>\n           <tr wicket:id=\"memberships\">\n             <td>\n-              <span wicket:id=\"roleId\"/>\n+              <span wicket:id=\"groupId\"/>\n             </td>\n             <td>\n-              <span wicket:id=\"roleName\"/>\n+              <span wicket:id=\"groupName\"/>\n             </td>\n             <td>\n               <a href=\"#\" wicket:id=\"editLink\">"},{"sha":"16b7c36719872f5acbeeb8c71be462c4baf62101","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MembershipsPanel.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,10 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-id=Role Id\n-name=Role Name\n+id=Group Id\n+name=Group Name\n edit=Edit\n delete=Delete\n \n-membership_availability=Available roles\n-membership_text=Selected roles\n+membership_availability=Available groups\n+membership_text=Selected groups"},{"sha":"86864a1255667bf686a4945b48f023a7bce0a128","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MembershipsPanel_it.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_it.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,11 +14,11 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-id=Id Ruolo\n+id=Id Gruppo\n edit=Modifica\n delete=Rimuovi\n-name=Nome Ruolo\n+name=Nome Gruppo\n \n-membership_availability=Ruoli disponibili\n-membership_text=Ruoli selezionati\n+membership_availability=Gruppi disponibili\n+membership_text=Gruppi selezionati\n "},{"sha":"5a41e98c6f7a30ed6c3d2afe0c36272a6c6d9e0e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MembershipsPanel_pt_BR.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembershipsPanel_pt_BR.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -14,10 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-id=Identificador da Fun\\u00E7\\u00E3o\n-name=Nome da Fun\\u00E7\\u00E3o\n+id=Identificador da Grupo\n+name=Nome da Grupo\n edit=Alterar\n delete=Excluir\n \n-membership_availability=Fun\\u00E7\\u00F5es dispon\\u00EDveis\n-membership_text=Fun\\u00E7\\u00F5es selecionadas\n+membership_availability=Grupos dispon\\u00edveis\n+membership_text=Grupos selecionadas"},{"sha":"a09d453a56520d94a52c3e69a4512325f714b5ac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,14 +29,14 @@\n     <span wicket:id=\"panelClaim\">[plus]</span>\n     <span wicket:id=\"panelManageResources\">[plus]</span>\n     <span wicket:id=\"panelManageUsers\">[plus]</span>\n-    <span wicket:id=\"panelManageRoles\">[plus]</span>\n+    <span wicket:id=\"panelManageGroups\">[plus]</span>\n     <span wicket:id=\"panelDryRun\">[plus]</span>\n     <span wicket:id=\"panelExecute\">[plus]</span>\n     <span wicket:id=\"panelEnable\">[plus]</span>\n     <span wicket:id=\"panelSearch\">[plus]</span>\n     <span wicket:id=\"panelCreate\">[plus]</span>\n     <span wicket:id=\"panelUserTemplate\">[plus]</span>\n-    <span wicket:id=\"panelRoleTemplate\">[plus]</span>\n+    <span wicket:id=\"panelGroupTemplate\">[plus]</span>\n     <span wicket:id=\"panelReset\">[plus]</span>\n     <span wicket:id=\"panelEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n@@ -65,8 +65,8 @@\n       <a href=\"#\" wicket:id=\"manageUsersLink\"><img id=\"actionLink\" src=\"img/actions/users-icon.png\" alt=\"manage users icon\" title=\"Manage users\"/></a>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"fragmentManageRoles\">\n-      <a href=\"#\" wicket:id=\"manageRolesLink\"><img id=\"actionLink\" src=\"img/actions/roles-icon.png\" alt=\"manage roles icon\" title=\"Manage roles\"/></a>\n+    <wicket:fragment wicket:id=\"fragmentManageGroups\">\n+      <a href=\"#\" wicket:id=\"manageGroupsLink\"><img id=\"actionLink\" src=\"img/actions/groups-icon.png\" alt=\"manage groups icon\" title=\"Manage groups\"/></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentCreate\">\n@@ -93,8 +93,8 @@\n       <a href=\"#\" wicket:id=\"userTemplateLink\"><img id=\"actionLink\" src=\"img/actions/user_template.png\" alt=\"user template icon\" title=\"Specify user template\"/></a>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"fragmentRoleTemplate\">\n-      <a href=\"#\" wicket:id=\"roleTemplateLink\"><img id=\"actionLink\" src=\"img/actions/roles-icon.png\" alt=\"role template icon\"  title=\"Specify role template\"/></a>\n+    <wicket:fragment wicket:id=\"fragmentGroupTemplate\">\n+      <a href=\"#\" wicket:id=\"groupTemplateLink\"><img id=\"actionLink\" src=\"img/actions/groups-icon.png\" alt=\"group template icon\"  title=\"Specify group template\"/></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDelete\">"},{"sha":"0f202e95038d052d8e47655ccdd2b803a8594336","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/tree/TreeGroupPanel.html","status":"renamed","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeGroupPanel.html?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,8 +16,10 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <div class=\"roleTable\" wicket:id=\"treeContainer\">\n-    <div wicket:id=\"treeTable\" class=\"role-tree\"/>\n-  </div>\n-</wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"groupTable\" wicket:id=\"treeContainer\">\n+      <div wicket:id=\"treeTable\" class=\"group-tree\"/>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/tree/TreeRolePanel.html"},{"sha":"2a3d146216da45a0027f63e68ba0ee6250e15afe","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@\n import javax.ws.rs.core.MediaType;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n-import org.apache.syncope.common.lib.search.RoleFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.rest.api.Preference;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -60,12 +60,12 @@ public static UserFiqlSearchConditionBuilder getUserSearchConditionBuilder() {\n     }\n \n     /**\n-     * Returns a new instance of <tt>RoleFiqlSearchConditionBuilder</tt>, for assisted building of FIQL queries.\n+     * Returns a new instance of <tt>GroupFiqlSearchConditionBuilder</tt>, for assisted building of FIQL queries.\n      *\n-     * @return default instance of <tt>RoleFiqlSearchConditionBuilder</tt>\n+     * @return default instance of <tt>GroupFiqlSearchConditionBuilder</tt>\n      */\n-    public static RoleFiqlSearchConditionBuilder getRoleSearchConditionBuilder() {\n-        return new RoleFiqlSearchConditionBuilder();\n+    public static GroupFiqlSearchConditionBuilder getGroupSearchConditionBuilder() {\n+        return new GroupFiqlSearchConditionBuilder();\n     }\n \n     /**"},{"sha":"bd8b06e2459160d9eec59431ea60e9ac3bbb882a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AbstractBaseBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,12 +27,12 @@\n import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n @XmlType\n // Reporting here only classes used via PagedResult\n-@XmlSeeAlso({ AbstractTaskTO.class, ReportTO.class, RoleTO.class, UserTO.class })\n+@XmlSeeAlso({ AbstractTaskTO.class, ReportTO.class, GroupTO.class, UserTO.class })\n public abstract class AbstractBaseBean implements Serializable {\n \n     private static final long serialVersionUID = 3119542005279892164L;"},{"sha":"082f47fc5925134a11d427285517aa2d9c453783","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AttributableOperations.java","status":"modified","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAttributableOperations.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,13 +32,13 @@\n import org.apache.syncope.common.lib.mod.AttrMod;\n import org.apache.syncope.common.lib.mod.MembershipMod;\n import org.apache.syncope.common.lib.mod.ReferenceMod;\n-import org.apache.syncope.common.lib.mod.RoleMod;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n /**\n@@ -67,16 +67,16 @@ private static void populate(final Map<String, AttrTO> updatedAttrs,\n             AttrMod mod = new AttrMod();\n             mod.setSchema(entry.getKey());\n \n-            Set<String> updatedValues = new HashSet<String>(entry.getValue().getValues());\n+            Set<String> updatedValues = new HashSet<>(entry.getValue().getValues());\n \n             Set<String> originalValues = originalAttrs.containsKey(entry.getKey())\n-                    ? new HashSet<String>(originalAttrs.get(entry.getKey()).getValues())\n+                    ? new HashSet<>(originalAttrs.get(entry.getKey()).getValues())\n                     : Collections.<String>emptySet();\n \n             if (!originalAttrs.containsKey(entry.getKey())) {\n                 // SYNCOPE-459: take care of user virtual attributes without any value\n                 updatedValues.remove(\"\");\n-                mod.getValuesToBeAdded().addAll(new ArrayList<String>(updatedValues));\n+                mod.getValuesToBeAdded().addAll(new ArrayList<>(updatedValues));\n \n                 if (virtuals) {\n                     result.getVirAttrsToUpdate().add(mod);\n@@ -253,12 +253,12 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n \n         for (Map.Entry<Long, MembershipTO> entry : updatedMembs.entrySet()) {\n             MembershipMod membMod = new MembershipMod();\n-            membMod.setRole(entry.getValue().getRoleId());\n+            membMod.setGroup(entry.getValue().getGroupId());\n \n             if (originalMembs.containsKey(entry.getKey())) {\n                 // if memberships are actually same, just make the isEmpty() call below succeed\n                 if (entry.getValue().equals(originalMembs.get(entry.getKey()))) {\n-                    membMod.setRole(0);\n+                    membMod.setGroup(0);\n                 } else {\n                     diff(entry.getValue(), originalMembs.get(entry.getKey()), membMod, false);\n                 }\n@@ -294,10 +294,10 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n         }\n \n         if (!incremental) {\n-            Set<Long> originalRoles = new HashSet<>(originalMembs.keySet());\n-            originalRoles.removeAll(updatedMembs.keySet());\n-            for (Long roleId : originalRoles) {\n-                result.getMembershipsToRemove().add(originalMembs.get(roleId).getKey());\n+            Set<Long> originalGroups = new HashSet<>(originalMembs.keySet());\n+            originalGroups.removeAll(updatedMembs.keySet());\n+            for (Long groupId : originalGroups) {\n+                result.getMembershipsToRemove().add(originalMembs.get(groupId).getKey());\n             }\n         }\n \n@@ -307,24 +307,24 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n     /**\n      * Calculate modifications needed by first in order to be equal to second.\n      *\n-     * @param updated updated RoleTO\n-     * @param original original RoleTO\n-     * @return RoleMod containing differences\n+     * @param updated updated GroupTO\n+     * @param original original GroupTO\n+     * @return GroupMod containing differences\n      */\n-    public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n+    public static GroupMod diff(final GroupTO updated, final GroupTO original) {\n         return diff(updated, original, false);\n     }\n \n     /**\n      * Calculate modifications needed by first in order to be equal to second.\n      *\n-     * @param updated updated RoleTO\n-     * @param original original RoleTO\n+     * @param updated updated GroupTO\n+     * @param original original GroupTO\n      * @param incremental perform incremental diff (without removing existing info)\n-     * @return RoleMod containing differences\n+     * @return GroupMod containing differences\n      */\n-    public static RoleMod diff(final RoleTO updated, final RoleTO original, final boolean incremental) {\n-        RoleMod result = new RoleMod();\n+    public static GroupMod diff(final GroupTO updated, final GroupTO original, final boolean incremental) {\n+        GroupMod result = new GroupMod();\n \n         diff(updated, original, result, incremental);\n \n@@ -358,32 +358,32 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original, final bo\n         }\n \n         // 5. templates\n-        Set<String> updatedTemplates = new HashSet<>(updated.getRPlainAttrTemplates());\n-        Set<String> originalTemplates = new HashSet<>(original.getRPlainAttrTemplates());\n+        Set<String> updatedTemplates = new HashSet<>(updated.getGPlainAttrTemplates());\n+        Set<String> originalTemplates = new HashSet<>(original.getGPlainAttrTemplates());\n         if (updatedTemplates.equals(originalTemplates)) {\n             result.setModRAttrTemplates(false);\n             result.getRPlainAttrTemplates().clear();\n         } else {\n             result.setModRAttrTemplates(true);\n-            result.getRPlainAttrTemplates().addAll(updated.getRPlainAttrTemplates());\n+            result.getRPlainAttrTemplates().addAll(updated.getGPlainAttrTemplates());\n         }\n-        updatedTemplates = new HashSet<>(updated.getRDerAttrTemplates());\n-        originalTemplates = new HashSet<>(original.getRDerAttrTemplates());\n+        updatedTemplates = new HashSet<>(updated.getGDerAttrTemplates());\n+        originalTemplates = new HashSet<>(original.getGDerAttrTemplates());\n         if (updatedTemplates.equals(originalTemplates)) {\n             result.setModRDerAttrTemplates(false);\n             result.getRDerAttrTemplates().clear();\n         } else {\n             result.setModRDerAttrTemplates(true);\n-            result.getRDerAttrTemplates().addAll(updated.getRDerAttrTemplates());\n+            result.getRDerAttrTemplates().addAll(updated.getGDerAttrTemplates());\n         }\n-        updatedTemplates = new HashSet<>(updated.getRVirAttrTemplates());\n-        originalTemplates = new HashSet<>(original.getRVirAttrTemplates());\n+        updatedTemplates = new HashSet<>(updated.getGVirAttrTemplates());\n+        originalTemplates = new HashSet<>(original.getGVirAttrTemplates());\n         if (updatedTemplates.equals(originalTemplates)) {\n             result.setModRVirAttrTemplates(false);\n             result.getRVirAttrTemplates().clear();\n         } else {\n             result.setModRVirAttrTemplates(true);\n-            result.getRVirAttrTemplates().addAll(updated.getRVirAttrTemplates());\n+            result.getRVirAttrTemplates().addAll(updated.getGVirAttrTemplates());\n         }\n         updatedTemplates = new HashSet<>(updated.getMPlainAttrTemplates());\n         originalTemplates = new HashSet<>(original.getMPlainAttrTemplates());\n@@ -415,7 +415,7 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original, final bo\n \n         // 6. owner\n         result.setUserOwner(new ReferenceMod(updated.getUserOwner()));\n-        result.setRoleOwner(new ReferenceMod(updated.getRoleOwner()));\n+        result.setGroupOwner(new ReferenceMod(updated.getGroupOwner()));\n \n         return result;\n     }\n@@ -498,7 +498,7 @@ public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n         }\n         for (MembershipMod membMod : userMod.getMembershipsToAdd()) {\n             MembershipTO membTO = new MembershipTO();\n-            membTO.setRoleId(membMod.getRole());\n+            membTO.setGroupId(membMod.getGroup());\n \n             apply(membTO, membMod, membTO);\n         }"},{"sha":"d139bda8f6bc362715b938813d4903e636b0878a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeClientCompositeException.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientCompositeException.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -73,18 +73,18 @@ public boolean addException(final SyncopeClientException exception) {\n     public String getMessage() {\n         StringBuilder message = new StringBuilder();\n \n-        message.append(\"{\");\n+        message.append('{');\n         Iterator<SyncopeClientException> iter = getExceptions().iterator();\n         while (iter.hasNext()) {\n             SyncopeClientException e = iter.next();\n-            message.append(\"[\");\n-            message.append(e.getMessage());\n-            message.append(\"]\");\n+            message.append('[').\n+                    append(e.getMessage()).\n+                    append(']');\n             if (iter.hasNext()) {\n                 message.append(\", \");\n             }\n         }\n-        message.append(\"}\");\n+        message.append('}');\n \n         return message.toString();\n     }"},{"sha":"8d015f2a1de5f8d16fdf1ed66ac7fd00ece6f5d1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeClientException.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeClientException.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -80,13 +80,11 @@ public int size() {\n \n     @Override\n     public String getMessage() {\n-        StringBuilder message = new StringBuilder();\n-\n-        message.append(getType());\n-        message.append(\" \");\n-        message.append(getElements());\n-\n-        return message.toString();\n+        return new StringBuilder().\n+                append(getType()).\n+                append(' ').\n+                append(getElements()).\n+                toString();\n     }\n \n     @Override"},{"sha":"b1ab0d4c88273d3527013743799ec616c61843eb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.common.lib;\n \n+import java.nio.charset.Charset;\n import java.util.regex.Pattern;\n \n-public class SyncopeConstants {\n+public final class SyncopeConstants {\n \n     public static final String NAMESPACE = \"http://syncope.apache.org/2.0\";\n \n@@ -42,11 +43,16 @@ public class SyncopeConstants {\n \n     public static final String DEFAULT_ENCODING = \"UTF-8\";\n \n+    public static final Charset DEFAULT_CHARSET = Charset.forName(DEFAULT_ENCODING);\n+\n     public static final String ROOT_LOGGER = \"ROOT\";\n \n     public static final Pattern EMAIL_PATTERN = Pattern.compile(\n             \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*\"\n             + \"@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\",\n             Pattern.CASE_INSENSITIVE);\n \n+    private SyncopeConstants() {\n+        // private constructor for utility class\n+    }\n }"},{"sha":"5d2603fbd821883256d8047a6542fa66c2ddadc9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/annotation/FormAttributeField.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FFormAttributeField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FFormAttributeField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fannotation%2FFormAttributeField.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -30,7 +30,7 @@\n \n     boolean userSearch() default false;\n \n-    boolean roleSearch() default false;\n+    boolean groupSearch() default false;\n \n     IntMappingType schema() default IntMappingType.UserPlainSchema;\n }"},{"sha":"07fe784d1f0f315c18e2ec86e56850743c4cfe76","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/AttrMod.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAttrMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAttrMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAttrMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,16 +36,9 @@ public class AttrMod extends AbstractBaseBean {\n \n     private String schema;\n \n-    private List<String> valuesToBeAdded;\n+    private final List<String> valuesToBeAdded = new ArrayList<>();\n \n-    private List<String> valuesToBeRemoved;\n-\n-    public AttrMod() {\n-        super();\n-\n-        valuesToBeAdded = new ArrayList<>();\n-        valuesToBeRemoved = new ArrayList<>();\n-    }\n+    private final List<String> valuesToBeRemoved = new ArrayList<>();\n \n     public String getSchema() {\n         return schema;"},{"sha":"3dbae2ee4c68e948596c08f849390afb3294db60","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/GroupMod.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FGroupMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FGroupMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FGroupMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,17 +27,17 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"roleMod\")\n+@XmlRootElement(name = \"groupMod\")\n @XmlType\n-public class RoleMod extends AbstractSubjectMod {\n+public class GroupMod extends AbstractSubjectMod {\n \n     private static final long serialVersionUID = 7455805264680210747L;\n \n     private String name;\n \n     private ReferenceMod userOwner;\n \n-    private ReferenceMod roleOwner;\n+    private ReferenceMod groupOwner;\n \n     private Boolean inheritOwner;\n \n@@ -101,12 +101,12 @@ public void setUserOwner(final ReferenceMod userOwner) {\n         this.userOwner = userOwner;\n     }\n \n-    public ReferenceMod getRoleOwner() {\n-        return roleOwner;\n+    public ReferenceMod getGroupOwner() {\n+        return groupOwner;\n     }\n \n-    public void setRoleOwner(final ReferenceMod roleOwner) {\n-        this.roleOwner = roleOwner;\n+    public void setGroupOwner(final ReferenceMod groupOwner) {\n+        this.groupOwner = groupOwner;\n     }\n \n     public Boolean getInheritOwner() {\n@@ -289,7 +289,7 @@ public void setInheritAccountPolicy(final Boolean inheritAccountPolicy) {\n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n-        return super.isEmpty() && name == null && userOwner == null && roleOwner == null\n+        return super.isEmpty() && name == null && userOwner == null && groupOwner == null\n                 && inheritTemplates == null && inheritOwner == null\n                 && inheritAccountPolicy == null && inheritPasswordPolicy == null\n                 && inheritPlainAttrs == null && inheritDerAttrs == null && inheritVirAttrs == null","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/RoleMod.java"},{"sha":"d4140110323ddc50b960e4a2bd87ced454b9f066","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/MembershipMod.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FMembershipMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -28,19 +28,19 @@ public class MembershipMod extends AbstractAttributableMod {\n \n     private static final long serialVersionUID = 2511869129977331525L;\n \n-    private long role;\n+    private long group;\n \n-    public long getRole() {\n-        return role;\n+    public long getGroup() {\n+        return group;\n     }\n \n-    public void setRole(final long role) {\n-        this.role = role;\n+    public void setGroup(final long group) {\n+        this.group = group;\n     }\n \n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n-        return super.isEmpty() && role == 0;\n+        return super.isEmpty() && group == 0;\n     }\n }"},{"sha":"25fd02d425164a868e3affeadf2009dd68b55cbb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/ReferenceMod.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FReferenceMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FReferenceMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FReferenceMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,13 +33,14 @@ public class ReferenceMod extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -4188817853738067677L;\n \n-    private Long key;\n+    private Long key = null;\n \n     public ReferenceMod() {\n-        this.key = null;\n+        this(null);\n     }\n \n     public ReferenceMod(final Long key) {\n+        super();\n         this.key = key;\n     }\n "},{"sha":"f38110464692e21a99828ad3e1fefb8ca7d08b74","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/ResourceAssociationMod.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FResourceAssociationMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -66,15 +66,15 @@ public boolean isChangePwd() {\n         return changePwd;\n     }\n \n-    public void setChangePwd(boolean changePwd) {\n+    public void setChangePwd(final boolean changePwd) {\n         this.changePwd = changePwd;\n     }\n \n     public String getPassword() {\n         return password;\n     }\n \n-    public void setPassword(String password) {\n+    public void setPassword(final String password) {\n         this.password = password;\n     }\n }"},{"sha":"082b6f8e3800b822835897e161a20afbcec7981a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/StatusMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -70,7 +70,7 @@ public long getKey() {\n         return key;\n     }\n \n-    public void setKey(long key) {\n+    public void setKey(final long key) {\n         this.key = key;\n     }\n "},{"sha":"8fe5e245255d9f0ad30a559104129661bfd2e453","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractReportletConf.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n-@XmlSeeAlso({ StaticReportletConf.class, UserReportletConf.class, RoleReportletConf.class })\n+@XmlSeeAlso({ StaticReportletConf.class, UserReportletConf.class, GroupReportletConf.class })\n public abstract class AbstractReportletConf extends AbstractBaseBean implements ReportletConf {\n \n     private static final long serialVersionUID = -6130008602014516608L;\n@@ -37,6 +37,7 @@ public AbstractReportletConf() {\n     }\n \n     public AbstractReportletConf(final String name) {\n+        super();\n         this.name = name;\n     }\n "},{"sha":"28b4cbadcfe0f29a0c04ed2fcc2a9465a894422e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractSubjectReportletConf.java","status":"renamed","additions":19,"deletions":44,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractSubjectReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractSubjectReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractSubjectReportletConf.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,54 +23,43 @@\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.annotation.FormAttributeField;\n import org.apache.syncope.common.lib.types.IntMappingType;\n \n-@XmlRootElement(name = \"roleReportletConf\")\n @XmlType\n-public class RoleReportletConf extends AbstractReportletConf {\n+public abstract class AbstractSubjectReportletConf extends AbstractReportletConf {\n \n-    private static final long serialVersionUID = -8488503068032439699L;\n-\n-    @XmlEnum\n-    @XmlType(name = \"roleReportletConfFeature\")\n-    public enum Feature {\n-\n-        key,\n-        name,\n-        roleOwner,\n-        userOwner,\n-        entitlements,\n-        users,\n-        resources\n-\n-    }\n+    private static final long serialVersionUID = -5388597116592877789L;\n \n     @FormAttributeField(userSearch = true)\n-    private String matchingCond;\n-\n-    @FormAttributeField(schema = IntMappingType.RolePlainSchema)\n-    private final List<String> plainAttrs = new ArrayList<>();\n+    protected String matchingCond;\n \n-    @FormAttributeField(schema = IntMappingType.RoleDerivedSchema)\n-    private final List<String> derAttrs = new ArrayList<>();\n+    @FormAttributeField(schema = IntMappingType.UserPlainSchema)\n+    protected final List<String> plainAttrs = new ArrayList<>();\n \n-    @FormAttributeField(schema = IntMappingType.RoleVirtualSchema)\n-    private final List<String> virAttrs = new ArrayList<>();\n+    @FormAttributeField(schema = IntMappingType.UserDerivedSchema)\n+    protected final List<String> derAttrs = new ArrayList<>();\n \n-    private final List<Feature> features = new ArrayList<>();\n+    @FormAttributeField(schema = IntMappingType.UserVirtualSchema)\n+    protected final List<String> virAttrs = new ArrayList<>();\n \n-    public RoleReportletConf() {\n+    public AbstractSubjectReportletConf() {\n         super();\n     }\n \n-    public RoleReportletConf(final String name) {\n+    public AbstractSubjectReportletConf(final String name) {\n         super(name);\n     }\n \n+    public String getMatchingCond() {\n+        return matchingCond;\n+    }\n+\n+    public void setMatchingCond(final String matchingCond) {\n+        this.matchingCond = matchingCond;\n+    }\n+\n     @XmlElementWrapper(name = \"plainAttributes\")\n     @XmlElement(name = \"plainAttribute\")\n     @JsonProperty(\"plainAttributes\")\n@@ -92,18 +81,4 @@ public List<String> getVirAttrs() {\n         return virAttrs;\n     }\n \n-    @XmlElementWrapper(name = \"features\")\n-    @XmlElement(name = \"feature\")\n-    @JsonProperty(\"features\")\n-    public List<Feature> getFeatures() {\n-        return features;\n-    }\n-\n-    public String getMatchingCond() {\n-        return matchingCond;\n-    }\n-\n-    public void setMatchingCond(final String matchingCond) {\n-        this.matchingCond = matchingCond;\n-    }\n }","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/RoleReportletConf.java"},{"sha":"dee3ff45118ca419ec6bdfeeb54d0297065cacee","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/GroupReportletConf.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.report;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlRootElement(name = \"groupReportletConf\")\n+@XmlType\n+public class GroupReportletConf extends AbstractSubjectReportletConf {\n+\n+    private static final long serialVersionUID = -8488503068032439699L;\n+\n+    @XmlEnum\n+    @XmlType(name = \"groupReportletConfFeature\")\n+    public enum Feature {\n+\n+        key,\n+        name,\n+        groupOwner,\n+        userOwner,\n+        entitlements,\n+        users,\n+        resources\n+\n+    }\n+\n+    private final List<Feature> features = new ArrayList<>();\n+\n+    public GroupReportletConf() {\n+        super();\n+    }\n+\n+    public GroupReportletConf(final String name) {\n+        super(name);\n+    }\n+\n+    @XmlElementWrapper(name = \"features\")\n+    @XmlElement(name = \"feature\")\n+    @JsonProperty(\"features\")\n+    public List<Feature> getFeatures() {\n+        return features;\n+    }\n+}"},{"sha":"6d867b227b158441ff1d23be80adf8d92e4c568e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/StaticReportletConf.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FStaticReportletConf.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -60,7 +60,7 @@ public Date getDateField() {\n                 : new Date(dateField.getTime());\n     }\n \n-    public void setDateField(Date dateField) {\n+    public void setDateField(final Date dateField) {\n         this.dateField = dateField == null\n                 ? null\n                 : new Date(dateField.getTime());\n@@ -70,7 +70,7 @@ public Double getDoubleField() {\n         return doubleField;\n     }\n \n-    public void setDoubleField(Double doubleField) {\n+    public void setDoubleField(final Double doubleField) {\n         this.doubleField = doubleField;\n     }\n \n@@ -85,23 +85,23 @@ public Long getLongField() {\n         return longField;\n     }\n \n-    public void setLongField(Long longField) {\n+    public void setLongField(final Long longField) {\n         this.longField = longField;\n     }\n \n     public String getStringField() {\n         return stringField;\n     }\n \n-    public void setStringField(String stringField) {\n+    public void setStringField(final String stringField) {\n         this.stringField = stringField;\n     }\n \n     public TraceLevel getTraceLevel() {\n         return traceLevel;\n     }\n \n-    public void setTraceLevel(TraceLevel traceLevel) {\n+    public void setTraceLevel(final TraceLevel traceLevel) {\n         this.traceLevel = traceLevel;\n     }\n }"},{"sha":"ce783ff13432f1bd43f934200f06fe03fe68fed0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/UserReportletConf.java","status":"modified","additions":1,"deletions":44,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,18 +21,15 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.annotation.FormAttributeField;\n-import org.apache.syncope.common.lib.types.IntMappingType;\n \n @XmlRootElement(name = \"userReportletConf\")\n @XmlType\n-public class UserReportletConf extends AbstractReportletConf {\n+public class UserReportletConf extends AbstractSubjectReportletConf {\n \n     @XmlEnum\n     @XmlType(name = \"userReportletConfFeature\")\n@@ -54,18 +51,6 @@ public enum Feature {\n \n     private static final long serialVersionUID = 6602717600064602764L;\n \n-    @FormAttributeField(userSearch = true)\n-    private String matchingCond;\n-\n-    @FormAttributeField(schema = IntMappingType.UserPlainSchema)\n-    private final List<String> plainAttrs = new ArrayList<>();\n-\n-    @FormAttributeField(schema = IntMappingType.UserDerivedSchema)\n-    private final List<String> derAttrs = new ArrayList<>();\n-\n-    @FormAttributeField(schema = IntMappingType.UserVirtualSchema)\n-    private final List<String> virAttrs = new ArrayList<>();\n-\n     private final List<Feature> features = new ArrayList<>();\n \n     public UserReportletConf() {\n@@ -76,39 +61,11 @@ public UserReportletConf(final String name) {\n         super(name);\n     }\n \n-    @XmlElementWrapper(name = \"plainAttributes\")\n-    @XmlElement(name = \"plainAttribute\")\n-    @JsonProperty(\"plainAttributes\")\n-    public List<String> getPlainAttrs() {\n-        return plainAttrs;\n-    }\n-\n-    @XmlElementWrapper(name = \"derivedAttributes\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derivedAttributes\")\n-    public List<String> getDerAttrs() {\n-        return derAttrs;\n-    }\n-\n-    @XmlElementWrapper(name = \"virtualAttributes\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virtualAttributes\")\n-    public List<String> getVirAttrs() {\n-        return virAttrs;\n-    }\n-\n     @XmlElementWrapper(name = \"features\")\n     @XmlElement(name = \"feature\")\n     @JsonProperty(\"features\")\n     public List<Feature> getFeatures() {\n         return features;\n     }\n \n-    public String getMatchingCond() {\n-        return matchingCond;\n-    }\n-\n-    public void setMatchingCond(final String matchingCond) {\n-        this.matchingCond = matchingCond;\n-    }\n }"},{"sha":"9279e723551f639d89338571ac44a3f463b026f2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AbstractFiqlSearchConditionBuilder.java","status":"renamed","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,20 +25,22 @@\n import org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder;\n import org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser;\n \n-public abstract class SyncopeFiqlSearchConditionBuilder extends FiqlSearchConditionBuilder {\n+public abstract class AbstractFiqlSearchConditionBuilder extends FiqlSearchConditionBuilder {\n \n-    public static final Map<String, String> CONTEXTUAL_PROPERTIES;\n+    public static final Map<String, String> CONTEXTUAL_PROPERTIES = new HashMap<String, String>() {\n \n-    static {\n-        CONTEXTUAL_PROPERTIES = new HashMap<String, String>();\n-        CONTEXTUAL_PROPERTIES.put(SearchUtils.LAX_PROPERTY_MATCH, \"true\");\n-    }\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(SearchUtils.LAX_PROPERTY_MATCH, \"true\");\n+        }\n+    };\n \n-    protected SyncopeFiqlSearchConditionBuilder() {\n+    protected AbstractFiqlSearchConditionBuilder() {\n         super();\n     }\n \n-    protected SyncopeFiqlSearchConditionBuilder(final Map<String, String> properties) {\n+    protected AbstractFiqlSearchConditionBuilder(final Map<String, String> properties) {\n         super(properties);\n     }\n ","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SyncopeFiqlSearchConditionBuilder.java"},{"sha":"4822d2a1413336107a302bdae1c7ef78a760cdd7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/GroupFiqlSearchConditionBuilder.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupFiqlSearchConditionBuilder.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,15 +24,15 @@\n \n /**\n  * Extends <tt>SyncopeFiqlSearchConditionBuilder</tt> by providing some additional facilities for searching\n- * roles in Syncope.\n+ * groups in Syncope.\n  */\n-public class RoleFiqlSearchConditionBuilder extends SyncopeFiqlSearchConditionBuilder {\n+public class GroupFiqlSearchConditionBuilder extends AbstractFiqlSearchConditionBuilder {\n \n-    public RoleFiqlSearchConditionBuilder() {\n+    public GroupFiqlSearchConditionBuilder() {\n         super();\n     }\n \n-    public RoleFiqlSearchConditionBuilder(final Map<String, String> properties) {\n+    public GroupFiqlSearchConditionBuilder(final Map<String, String> properties) {\n         super(properties);\n     }\n \n@@ -42,7 +42,7 @@ protected Builder newBuilderInstance() {\n     }\n \n     @Override\n-    public RoleProperty is(final String property) {\n+    public GroupProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }\n \n@@ -56,8 +56,8 @@ public CompleteCondition hasNotEntitlements(final String entitlement, final Stri\n                 hasNotEntitlements(entitlement, moreEntitlements);\n     }\n \n-    protected static class Builder extends SyncopeFiqlSearchConditionBuilder.Builder\n-            implements RoleProperty, CompleteCondition {\n+    protected static class Builder extends AbstractFiqlSearchConditionBuilder.Builder\n+            implements GroupProperty, CompleteCondition {\n \n         public Builder(final Map<String, String> properties) {\n             super(properties);\n@@ -68,7 +68,7 @@ public Builder(final Builder parent) {\n         }\n \n         @Override\n-        public RoleProperty is(final String property) {\n+        public GroupProperty is(final String property) {\n             Builder b = new Builder(this);\n             b.result = property;\n             return b;","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/RoleFiqlSearchConditionBuilder.java"},{"sha":"7868016e83c7daa6464ef3482e36f0ce93069c6a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/GroupProperty.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FGroupProperty.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n \n-public interface RoleProperty extends SyncopeProperty {\n+public interface GroupProperty extends SyncopeProperty {\n \n     CompleteCondition hasEntitlements(String entitlement, String... moreEntitlements);\n ","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/RoleProperty.java"},{"sha":"7a27a2b1c3200946fc89128c1382463e3c3d8d8e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SearchableFields.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSearchableFields.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSearchableFields.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSearchableFields.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,23 +26,23 @@\n import java.util.Map;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SubjectType;\n \n-public class SearchableFields {\n+public final class SearchableFields {\n \n-    protected static final String[] ATTRIBUTES_NOTINCLUDED = {\n+    private static final String[] ATTRIBUTES_NOTINCLUDED = {\n         \"serialVersionUID\", \"password\"\n     };\n \n-    public static final List<String> get(final SubjectType subjectType) {\n+    public static List<String> get(final SubjectType subjectType) {\n         return get(subjectType == SubjectType.USER\n                 ? UserTO.class\n-                : RoleTO.class);\n+                : GroupTO.class);\n     }\n \n-    public static final List<String> get(final Class<? extends AbstractAttributableTO> attributableRef) {\n+    public static List<String> get(final Class<? extends AbstractAttributableTO> attributableRef) {\n         final List<String> fieldNames = new ArrayList<>();\n \n         // loop on class and all superclasses searching for field"},{"sha":"22e339e80f2d584c8cd3c2d59fd55355f2638486","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SpecialAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@ public enum SpecialAttr {\n \n     NULL(\"$null\"),\n     RESOURCES(\"$resources\"),\n-    ROLES(\"$roles\"),\n+    GROUPS(\"$groups\"),\n     ENTITLEMENTS(\"$entitlements\");\n \n     private final String literal;"},{"sha":"7673b86af79c50a89698268eebea29846ff3ba6b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SyncopeProperty.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeProperty.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,12 +24,12 @@\n /**\n  * Extension of fluent interface, for {@link SyncopeFiqlSearchConditionBuilder}.\n  */\n-public abstract interface SyncopeProperty extends Property {\n+public interface SyncopeProperty extends Property {\n \n     CompleteCondition nullValue();\n \n     CompleteCondition notNullValue();\n-    \n+\n     CompleteCondition hasResources(String resource, String... moreResources);\n \n     CompleteCondition hasNotResources(String resource, String... moreResources);"},{"sha":"020866dd009abd18f4b037806333370d20e92fe2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/UserFiqlSearchConditionBuilder.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,7 +26,7 @@\n  * Extends <tt>SyncopeFiqlSearchConditionBuilder</tt> by providing some additional facilities for searching\n  * users in Syncope.\n  */\n-public class UserFiqlSearchConditionBuilder extends SyncopeFiqlSearchConditionBuilder {\n+public class UserFiqlSearchConditionBuilder extends AbstractFiqlSearchConditionBuilder {\n \n     public UserFiqlSearchConditionBuilder() {\n         super();\n@@ -46,12 +46,12 @@ public UserProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }\n \n-    public CompleteCondition hasRoles(final Long role, final Long... moreRoles) {\n-        return newBuilderInstance().is(SpecialAttr.ROLES.toString()).hasRoles(role, moreRoles);\n+    public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+        return newBuilderInstance().is(SpecialAttr.GROUPS.toString()).inGroups(group, moreGroups);\n     }\n \n-    public CompleteCondition hasNotRoles(final Long role, final Long... moreRoles) {\n-        return newBuilderInstance().is(SpecialAttr.ROLES.toString()).hasNotRoles(role, moreRoles);\n+    public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+        return newBuilderInstance().is(SpecialAttr.GROUPS.toString()).notInGroups(group, moreGroups);\n     }\n \n     public CompleteCondition hasResources(final String resource, final String... moreResources) {\n@@ -62,7 +62,7 @@ public CompleteCondition hasNotResources(final String resource, final String...\n         return newBuilderInstance().is(SpecialAttr.RESOURCES.toString()).hasNotResources(resource, moreResources);\n     }\n \n-    protected static class Builder extends SyncopeFiqlSearchConditionBuilder.Builder\n+    protected static class Builder extends AbstractFiqlSearchConditionBuilder.Builder\n             implements UserProperty, CompleteCondition {\n \n         public Builder(final Map<String, String> properties) {\n@@ -81,15 +81,15 @@ public UserProperty is(final String property) {\n         }\n \n         @Override\n-        public CompleteCondition hasRoles(final Long role, final Long... moreRoles) {\n-            this.result = SpecialAttr.ROLES.toString();\n-            return condition(FiqlParser.EQ, role, (Object[]) moreRoles);\n+        public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+            this.result = SpecialAttr.GROUPS.toString();\n+            return condition(FiqlParser.EQ, group, (Object[]) moreGroups);\n         }\n \n         @Override\n-        public CompleteCondition hasNotRoles(final Long role, final Long... moreRoles) {\n-            this.result = SpecialAttr.ROLES.toString();\n-            return condition(FiqlParser.NEQ, role, (Object[]) moreRoles);\n+        public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+            this.result = SpecialAttr.GROUPS.toString();\n+            return condition(FiqlParser.NEQ, group, (Object[]) moreGroups);\n         }\n     }\n }"},{"sha":"fb4d7d69d68f20dee07862f4097c1a5db4bf3fc2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/UserProperty.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,8 +22,8 @@\n \n public interface UserProperty extends SyncopeProperty {\n \n-    CompleteCondition hasRoles(Long role, Long... moreRoles);\n+    CompleteCondition inGroups(Long group, Long... moreGroups);\n \n-    CompleteCondition hasNotRoles(Long role, Long... moreRoles);\n+    CompleteCondition notInGroups(Long group, Long... moreGroups);\n \n }"},{"sha":"eed845341198a4489b9503ea4205a85b5d99fb5b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractExecTO.java","status":"modified","additions":2,"deletions":32,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractExecTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import java.util.Date;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n-public class AbstractExecTO extends AbstractBaseBean {\n+public class AbstractExecTO extends AbstractStartEndBean {\n \n     private static final long serialVersionUID = -4621191979198357081L;\n \n@@ -33,15 +31,11 @@ public class AbstractExecTO extends AbstractBaseBean {\n \n     protected String message;\n \n-    protected Date startDate;\n-\n-    protected Date endDate;\n-\n     public long getKey() {\n         return key;\n     }\n \n-    public void setKey(long key) {\n+    public void setKey(final long key) {\n         this.key = key;\n     }\n \n@@ -60,28 +54,4 @@ public String getStatus() {\n     public void setStatus(final String status) {\n         this.status = status;\n     }\n-\n-    public Date getStartDate() {\n-        return startDate == null\n-                ? null\n-                : new Date(startDate.getTime());\n-    }\n-\n-    public void setStartDate(final Date startDate) {\n-        if (startDate != null) {\n-            this.startDate = new Date(startDate.getTime());\n-        }\n-    }\n-\n-    public Date getEndDate() {\n-        return endDate == null\n-                ? null\n-                : new Date(endDate.getTime());\n-    }\n-\n-    public void setEndDate(final Date endDate) {\n-        if (endDate != null) {\n-            this.endDate = new Date(endDate.getTime());\n-        }\n-    }\n }"},{"sha":"3ecb44f8c49f8cae308471ce28338de83d527359","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractPolicyTO.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -46,13 +46,13 @@ public abstract class AbstractPolicyTO extends AbstractBaseBean {\n \n     private final List<String> usedByResources = new ArrayList<>();\n \n-    private final List<Long> usedByRoles = new ArrayList<>();\n+    private final List<Long> usedByGroups = new ArrayList<>();\n \n     public long getKey() {\n         return key;\n     }\n \n-    public void setKey(long key) {\n+    public void setKey(final long key) {\n         this.key = key;\n     }\n \n@@ -79,11 +79,11 @@ public List<String> getUsedByResources() {\n         return usedByResources;\n     }\n \n-    @XmlElementWrapper(name = \"usedByRoles\")\n-    @XmlElement(name = \"role\")\n-    @JsonProperty(\"usedByRoles\")\n-    public List<Long> getUsedByRoles() {\n-        return usedByRoles;\n+    @XmlElementWrapper(name = \"usedByGroups\")\n+    @XmlElement(name = \"group\")\n+    @JsonProperty(\"usedByGroups\")\n+    public List<Long> getUsedByGroups() {\n+        return usedByGroups;\n     }\n \n }"},{"sha":"c1dcf1c25046d3767d59c650d3f3f33642db6160","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractProvisioningTaskTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractProvisioningTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -50,45 +50,45 @@ public class AbstractProvisioningTaskTO extends SchedTaskTO {\n \n     private MatchingRule matchingRule;\n \n-    private List<String> actionsClassNames = new ArrayList<>();\n+    private final List<String> actionsClassNames = new ArrayList<>();\n \n     public String getResource() {\n         return resource;\n     }\n \n-    public void setResource(String resource) {\n+    public void setResource(final String resource) {\n         this.resource = resource;\n     }\n \n     public boolean isPerformCreate() {\n         return performCreate;\n     }\n \n-    public void setPerformCreate(boolean performCreate) {\n+    public void setPerformCreate(final boolean performCreate) {\n         this.performCreate = performCreate;\n     }\n \n     public boolean isPerformUpdate() {\n         return performUpdate;\n     }\n \n-    public void setPerformUpdate(boolean performUpdate) {\n+    public void setPerformUpdate(final boolean performUpdate) {\n         this.performUpdate = performUpdate;\n     }\n \n     public boolean isPerformDelete() {\n         return performDelete;\n     }\n \n-    public void setPerformDelete(boolean performDelete) {\n+    public void setPerformDelete(final boolean performDelete) {\n         this.performDelete = performDelete;\n     }\n \n     public boolean isSyncStatus() {\n         return syncStatus;\n     }\n \n-    public void setSyncStatus(boolean syncStatus) {\n+    public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = syncStatus;\n     }\n "},{"sha":"4f3749ffad391393c7e3d108fab742c2826db6f4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractStartEndBean.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import java.util.Date;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlType\n+public class AbstractStartEndBean extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 2399577415544539917L;\n+\n+    protected Date startDate;\n+\n+    protected Date endDate;\n+\n+    public Date getStartDate() {\n+        return startDate == null\n+                ? null\n+                : new Date(startDate.getTime());\n+    }\n+\n+    public void setStartDate(final Date startDate) {\n+        if (startDate != null) {\n+            this.startDate = new Date(startDate.getTime());\n+        }\n+    }\n+\n+    public Date getEndDate() {\n+        return endDate == null\n+                ? null\n+                : new Date(endDate.getTime());\n+    }\n+\n+    public void setEndDate(final Date endDate) {\n+        if (endDate != null) {\n+            this.endDate = new Date(endDate.getTime());\n+        }\n+    }\n+}"},{"sha":"21e1cb06770c6321c7f747ea3552d29461798393","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractTaskTO.java","status":"modified","additions":1,"deletions":31,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,20 +22,18 @@\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n \n import java.util.ArrayList;\n-import java.util.Date;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"abstractTask\")\n @XmlType\n @XmlSeeAlso({ PropagationTaskTO.class, SchedTaskTO.class, NotificationTaskTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public abstract class AbstractTaskTO extends AbstractBaseBean {\n+public abstract class AbstractTaskTO extends AbstractStartEndBean {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n@@ -45,10 +43,6 @@ public abstract class AbstractTaskTO extends AbstractBaseBean {\n \n     private final List<TaskExecTO> executions = new ArrayList<>();\n \n-    private Date startDate;\n-\n-    private Date endDate;\n-\n     public long getKey() {\n         return key;\n     }\n@@ -71,28 +65,4 @@ public void setLatestExecStatus(final String latestExecStatus) {\n     public List<TaskExecTO> getExecutions() {\n         return executions;\n     }\n-\n-    public Date getStartDate() {\n-        return startDate == null\n-                ? null\n-                : new Date(startDate.getTime());\n-    }\n-\n-    public void setStartDate(final Date startDate) {\n-        if (startDate != null) {\n-            this.startDate = new Date(startDate.getTime());\n-        }\n-    }\n-\n-    public Date getEndDate() {\n-        return endDate == null\n-                ? null\n-                : new Date(endDate.getTime());\n-    }\n-\n-    public void setEndDate(final Date endDate) {\n-        if (endDate != null) {\n-            this.endDate = new Date(endDate.getTime());\n-        }\n-    }\n }"},{"sha":"fb34a73a56d8f9b411b522886ecb3ce2b099c29b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/BulkActionResult.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkActionResult.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -111,6 +111,8 @@ public Result() {\n         }\n \n         public Result(final String key, final Status value) {\n+            super();\n+\n             this.key = key;\n             this.value = value;\n         }"},{"sha":"b62c353835840ffe9c6814cb04f6b957da6ea7ea","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnBundleTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -44,7 +44,7 @@ public class ConnBundleTO extends AbstractBaseBean {\n \n     private String version;\n \n-    private List<ConnConfPropSchema> properties = new ArrayList<>();\n+    private final List<ConnConfPropSchema> properties = new ArrayList<>();\n \n     public String getDisplayName() {\n         return displayName;"},{"sha":"14810bb1ce4c374ccea8224479ccc5b66a4fe9d2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -49,16 +49,18 @@ public String getSpecialName() {\n         }\n     }\n \n-    public static ConnIdObjectClassTO ACCOUNT = new ConnIdObjectClassTO(DefaultType.ACCOUNT.getSpecialName());\n+    public static final ConnIdObjectClassTO ACCOUNT = new ConnIdObjectClassTO(DefaultType.ACCOUNT.getSpecialName());\n \n-    public static ConnIdObjectClassTO GROUP = new ConnIdObjectClassTO(DefaultType.GROUP.getSpecialName());\n+    public static final ConnIdObjectClassTO GROUP = new ConnIdObjectClassTO(DefaultType.GROUP.getSpecialName());\n \n     private String type;\n \n     public ConnIdObjectClassTO() {\n+        super();\n     }\n \n     public ConnIdObjectClassTO(final String type) {\n+        super();\n         this.type = type;\n     }\n "},{"sha":"918a4d6d82d01c0fd0269ee24604711357440b9d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/EventCategoryTO.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEventCategoryTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEventCategoryTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEventCategoryTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -40,19 +40,22 @@ public class EventCategoryTO extends AbstractBaseBean {\n \n     private String subcategory;\n \n-    private final List<String> events = new ArrayList<String>();\n+    private final List<String> events = new ArrayList<>();\n \n     /**\n      * Constructor for Type.REST event category.\n      */\n     public EventCategoryTO() {\n-        this.type = AuditElements.EventCategoryType.REST;\n+        this(AuditElements.EventCategoryType.REST);\n     }\n \n     /**\n      * Constructor for the given Type event category.\n+     *\n+     * @param type event category type\n      */\n     public EventCategoryTO(final AuditElements.EventCategoryType type) {\n+        super();\n         this.type = type;\n     }\n "},{"sha":"12455c505a9c582dd180aebbf147227829fdaa99","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"renamed","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -28,10 +28,10 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlRootElement(name = \"role\")\n+@XmlRootElement(name = \"group\")\n @XmlType\n @JsonIgnoreProperties({ \"displayName\" })\n-public class RoleTO extends AbstractSubjectTO {\n+public class GroupTO extends AbstractSubjectTO {\n \n     private static final long serialVersionUID = -7785920258290147542L;\n \n@@ -41,7 +41,7 @@ public class RoleTO extends AbstractSubjectTO {\n \n     private Long userOwner;\n \n-    private Long roleOwner;\n+    private Long groupOwner;\n \n     private boolean inheritOwner;\n \n@@ -59,17 +59,17 @@ public class RoleTO extends AbstractSubjectTO {\n \n     private final List<String> entitlements = new ArrayList<>();\n \n-    private List<String> rPlainAttrTemplates = new ArrayList<>();\n+    private final List<String> gPlainAttrTemplates = new ArrayList<>();\n \n-    private List<String> rDerAttrTemplates = new ArrayList<>();\n+    private final List<String> gDerAttrTemplates = new ArrayList<>();\n \n-    private List<String> rVirAttrTemplates = new ArrayList<>();\n+    private final List<String> gVirAttrTemplates = new ArrayList<>();\n \n-    private List<String> mPlainAttrTemplates = new ArrayList<>();\n+    private final List<String> mPlainAttrTemplates = new ArrayList<>();\n \n-    private List<String> mDerAttrTemplates = new ArrayList<>();\n+    private final List<String> mDerAttrTemplates = new ArrayList<>();\n \n-    private List<String> mVirAttrTemplates = new ArrayList<>();\n+    private final List<String> mVirAttrTemplates = new ArrayList<>();\n \n     private Long passwordPolicy;\n \n@@ -99,12 +99,12 @@ public void setUserOwner(final Long userOwner) {\n         this.userOwner = userOwner;\n     }\n \n-    public Long getRoleOwner() {\n-        return roleOwner;\n+    public Long getGroupOwner() {\n+        return groupOwner;\n     }\n \n-    public void setRoleOwner(final Long roleOwner) {\n-        this.roleOwner = roleOwner;\n+    public void setGroupOwner(final Long groupOwner) {\n+        this.groupOwner = groupOwner;\n     }\n \n     public boolean isInheritOwner() {\n@@ -119,7 +119,7 @@ public boolean isInheritTemplates() {\n         return inheritTemplates;\n     }\n \n-    public void setInheritTemplates(boolean inheritTemplates) {\n+    public void setInheritTemplates(final boolean inheritTemplates) {\n         this.inheritTemplates = inheritTemplates;\n     }\n \n@@ -154,25 +154,25 @@ public List<String> getEntitlements() {\n         return entitlements;\n     }\n \n-    @XmlElementWrapper(name = \"rPlainAttrTemplates\")\n-    @XmlElement(name = \"rPlainAttrTemplate\")\n-    @JsonProperty(\"rPlainAttrTemplates\")\n-    public List<String> getRPlainAttrTemplates() {\n-        return rPlainAttrTemplates;\n+    @XmlElementWrapper(name = \"gPlainAttrTemplates\")\n+    @XmlElement(name = \"gPlainAttrTemplate\")\n+    @JsonProperty(\"gPlainAttrTemplates\")\n+    public List<String> getGPlainAttrTemplates() {\n+        return gPlainAttrTemplates;\n     }\n \n-    @XmlElementWrapper(name = \"rDerAttrTemplates\")\n-    @XmlElement(name = \"rDerAttrTemplate\")\n-    @JsonProperty(\"rDerAttrTemplates\")\n-    public List<String> getRDerAttrTemplates() {\n-        return rDerAttrTemplates;\n+    @XmlElementWrapper(name = \"gDerAttrTemplates\")\n+    @XmlElement(name = \"gDerAttrTemplate\")\n+    @JsonProperty(\"gDerAttrTemplates\")\n+    public List<String> getGDerAttrTemplates() {\n+        return gDerAttrTemplates;\n     }\n \n-    @XmlElementWrapper(name = \"rVirAttrTemplates\")\n-    @XmlElement(name = \"rVirAttrTemplate\")\n-    @JsonProperty(\"rVirAttrTemplates\")\n-    public List<String> getRVirAttrTemplates() {\n-        return rVirAttrTemplates;\n+    @XmlElementWrapper(name = \"gVirAttrTemplates\")\n+    @XmlElement(name = \"gVirAttrTemplate\")\n+    @JsonProperty(\"gVirAttrTemplates\")\n+    public List<String> getGVirAttrTemplates() {\n+        return gVirAttrTemplates;\n     }\n \n     @XmlElementWrapper(name = \"mPlainAttrTemplates\")","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java"},{"sha":"9ee378aadea5dbeb886d705f7f9d4552302461f5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -58,7 +58,7 @@ public MappingItemTO getAccountIdItem() {\n \n     protected boolean addAccountIdItem(final MappingItemTO accountIdItem) {\n         if (IntMappingType.UserVirtualSchema == accountIdItem.getIntMappingType()\n-                || IntMappingType.RoleVirtualSchema == accountIdItem.getIntMappingType()\n+                || IntMappingType.GroupVirtualSchema == accountIdItem.getIntMappingType()\n                 || IntMappingType.MembershipVirtualSchema == accountIdItem.getIntMappingType()\n                 || IntMappingType.Password == accountIdItem.getIntMappingType()) {\n "},{"sha":"b3007c16e73ef6a2723e0b00fd94e479b2037418","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,23 +27,23 @@ public class MembershipTO extends AbstractAttributableTO {\n \n     private static final long serialVersionUID = 5992828670273935861L;\n \n-    private long roleId;\n+    private long groupId;\n \n-    private String roleName;\n+    private String groupName;\n \n-    public long getRoleId() {\n-        return roleId;\n+    public long getGroupId() {\n+        return groupId;\n     }\n \n-    public void setRoleId(final long roleId) {\n-        this.roleId = roleId;\n+    public void setGroupId(final long groupId) {\n+        this.groupId = groupId;\n     }\n \n-    public String getRoleName() {\n-        return roleName;\n+    public String getGroupName() {\n+        return groupName;\n     }\n \n-    public void setRoleName(final String roleName) {\n-        this.roleName = roleName;\n+    public void setGroupName(final String groupName) {\n+        this.groupName = groupName;\n     }\n }"},{"sha":"d56d2ea9d8ca7b1c2d7c7ccfa505230ce2b33341","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -41,7 +41,7 @@ public class NotificationTO extends AbstractBaseBean {\n \n     private String userAbout;\n \n-    private String roleAbout;\n+    private String groupAbout;\n \n     private String recipients;\n \n@@ -71,12 +71,12 @@ public void setUserAbout(final String userAbout) {\n         this.userAbout = userAbout;\n     }\n \n-    public String getRoleAbout() {\n-        return roleAbout;\n+    public String getGroupAbout() {\n+        return groupAbout;\n     }\n \n-    public void setRoleAbout(final String roleAbout) {\n-        this.roleAbout = roleAbout;\n+    public void setGroupAbout(final String groupAbout) {\n+        this.groupAbout = groupAbout;\n     }\n \n     @XmlElementWrapper(name = \"events\")\n@@ -97,7 +97,7 @@ public Long getKey() {\n         return key;\n     }\n \n-    public void setKey(Long key) {\n+    public void setKey(final Long key) {\n         this.key = key;\n     }\n "},{"sha":"7e0e53dad7f8528abcbc55d7a7c4de239b10325f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -91,7 +91,7 @@ public boolean isExecuted() {\n         return executed;\n     }\n \n-    public void setExecuted(boolean executed) {\n+    public void setExecuted(final boolean executed) {\n         this.executed = executed;\n     }\n "},{"sha":"5ea4ed7fcc0940c495bdf359fca973e07481dffb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PasswordPolicyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,7 +35,7 @@ public PasswordPolicyTO() {\n         this(false);\n     }\n \n-    public PasswordPolicyTO(boolean global) {\n+    public PasswordPolicyTO(final boolean global) {\n         super();\n \n         PolicyType type = global"},{"sha":"8ddf04471c9e3927c7e656bab3a73edbf3fff9a2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PushTaskTO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@ public class PushTaskTO extends AbstractProvisioningTaskTO {\n \n     private String userFilter;\n \n-    private String roleFilter;\n+    private String groupFilter;\n \n     public String getUserFilter() {\n         return userFilter;\n@@ -39,11 +39,11 @@ public void setUserFilter(final String filter) {\n         this.userFilter = filter;\n     }\n \n-    public String getRoleFilter() {\n-        return roleFilter;\n+    public String getGroupFilter() {\n+        return groupFilter;\n     }\n \n-    public void setRoleFilter(final String roleFilter) {\n-        this.roleFilter = roleFilter;\n+    public void setGroupFilter(final String filter) {\n+        this.groupFilter = filter;\n     }\n }"},{"sha":"5d78c584b51c22e2ff72b8efeaf127f294f89496","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportExecTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportExecTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,7 +33,7 @@ public long getReport() {\n         return report;\n     }\n \n-    public void setReport(long report) {\n+    public void setReport(final long report) {\n         this.report = report;\n     }\n "},{"sha":"80f74f35acfef251c7512d1572f9ce0125a86410","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTO.java","status":"modified","additions":3,"deletions":30,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,12 +26,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.report.AbstractReportletConf;\n \n @XmlRootElement(name = \"report\")\n @XmlType\n-public class ReportTO extends AbstractBaseBean {\n+public class ReportTO extends AbstractStartEndBean {\n \n     private static final long serialVersionUID = 5274568072084814410L;\n \n@@ -51,15 +50,11 @@ public class ReportTO extends AbstractBaseBean {\n \n     private Date nextExec;\n \n-    private Date startDate;\n-\n-    private Date endDate;\n-\n     public long getKey() {\n         return key;\n     }\n \n-    public void setKey(long key) {\n+    public void setKey(final long key) {\n         this.key = key;\n     }\n \n@@ -101,6 +96,7 @@ public void setLatestExecStatus(final String latestExecStatus) {\n         this.latestExecStatus = latestExecStatus;\n     }\n \n+    @SuppressWarnings(\"CPD-START\")\n     public Date getLastExec() {\n         return lastExec == null\n                 ? null\n@@ -125,27 +121,4 @@ public void setNextExec(final Date nextExec) {\n         }\n     }\n \n-    public Date getStartDate() {\n-        return startDate == null\n-                ? null\n-                : new Date(startDate.getTime());\n-    }\n-\n-    public void setStartDate(final Date startDate) {\n-        if (startDate != null) {\n-            this.startDate = new Date(startDate.getTime());\n-        }\n-    }\n-\n-    public Date getEndDate() {\n-        return endDate == null\n-                ? null\n-                : new Date(endDate.getTime());\n-    }\n-\n-    public void setEndDate(final Date endDate) {\n-        if (endDate != null) {\n-            this.endDate = new Date(endDate.getTime());\n-        }\n-    }\n }"},{"sha":"43f5ff0aa4b550e66c87e5c27fd85ffc7c49a107","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -54,7 +54,7 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private MappingTO umapping;\n \n-    private MappingTO rmapping;\n+    private MappingTO gmapping;\n \n     private boolean propagationPrimary;\n \n@@ -80,18 +80,17 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private Long syncPolicy;\n \n-    private Set<ConnConfProperty> connConfProperties;\n+    private final Set<ConnConfProperty> connConfProperties = new HashSet<>();\n \n     private String usyncToken;\n \n     private String rsyncToken;\n \n-    private List<String> propagationActionsClassNames = new ArrayList<>();\n+    private final List<String> propagationActionsClassNames = new ArrayList<>();\n \n     public ResourceTO() {\n         super();\n \n-        connConfProperties = new HashSet<>();\n         propagationMode = PropagationMode.TWO_PHASES;\n         propagationPriority = 0;\n \n@@ -141,12 +140,12 @@ public void setUmapping(final MappingTO umapping) {\n         this.umapping = umapping;\n     }\n \n-    public MappingTO getRmapping() {\n-        return rmapping;\n+    public MappingTO getGmapping() {\n+        return gmapping;\n     }\n \n-    public void setRmapping(final MappingTO rmapping) {\n-        this.rmapping = rmapping;\n+    public void setGmapping(final MappingTO gmapping) {\n+        this.gmapping = gmapping;\n     }\n \n     public boolean isPropagationPrimary() {"},{"sha":"abea52d65931655ab415047d6bf4f6b9b82fc971","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchedTaskTO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -59,6 +59,7 @@ public void setJobClassName(final String jobClassName) {\n         this.jobClassName = jobClassName;\n     }\n \n+    @SuppressWarnings(\"CPD-START\")\n     public Date getLastExec() {\n         return lastExec == null\n                 ? null\n@@ -83,6 +84,8 @@ public void setNextExec(final Date nextExec) {\n         }\n     }\n \n+    @SuppressWarnings(\"CPD-END\")\n+\n     public String getDescription() {\n         return description;\n     }"},{"sha":"175926a60e7995faaf12c804bd4c31882364ddb4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncTaskTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@ public class SyncTaskTO extends AbstractProvisioningTaskTO {\n \n     private UserTO userTemplate;\n \n-    private RoleTO roleTemplate;\n+    private GroupTO groupTemplate;\n \n     private boolean fullReconciliation;\n \n@@ -41,19 +41,19 @@ public void setUserTemplate(final UserTO userTemplate) {\n         this.userTemplate = userTemplate;\n     }\n \n-    public RoleTO getRoleTemplate() {\n-        return roleTemplate;\n+    public GroupTO getGroupTemplate() {\n+        return groupTemplate;\n     }\n \n-    public void setRoleTemplate(final RoleTO roleTemplate) {\n-        this.roleTemplate = roleTemplate;\n+    public void setGroupTemplate(final GroupTO groupTemplate) {\n+        this.groupTemplate = groupTemplate;\n     }\n \n     public boolean isFullReconciliation() {\n         return fullReconciliation;\n     }\n \n-    public void setFullReconciliation(boolean fullReconciliation) {\n+    public void setFullReconciliation(final boolean fullReconciliation) {\n         this.fullReconciliation = fullReconciliation;\n     }\n }"},{"sha":"e4af2bbe3234670f3e0bed1642726b0f6bb9839a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncopeTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -47,11 +47,11 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private String userWorkflowAdapter;\n \n-    private String roleWorkflowAdapter;\n+    private String groupWorkflowAdapter;\n \n     private String userProvisioningManager;\n \n-    private String roleProvisioningManager;\n+    private String groupProvisioningManager;\n \n     private final List<String> reportlets = new ArrayList<>();\n \n@@ -102,16 +102,16 @@ public String getUserWorkflowAdapter() {\n         return userWorkflowAdapter;\n     }\n \n-    public String getRoleWorkflowAdapter() {\n-        return roleWorkflowAdapter;\n+    public String getGroupWorkflowAdapter() {\n+        return groupWorkflowAdapter;\n     }\n \n     public String getUserProvisioningManager() {\n         return userProvisioningManager;\n     }\n \n-    public String getRoleProvisioningManager() {\n-        return roleProvisioningManager;\n+    public String getGroupProvisioningManager() {\n+        return groupProvisioningManager;\n     }\n \n     @XmlElementWrapper(name = \"reportlets\")\n@@ -201,16 +201,16 @@ public void setUserWorkflowAdapter(final String userWorkflowAdapter) {\n         this.userWorkflowAdapter = userWorkflowAdapter;\n     }\n \n-    public void setRoleWorkflowAdapter(final String roleWorkflowAdapter) {\n-        this.roleWorkflowAdapter = roleWorkflowAdapter;\n+    public void setGroupWorkflowAdapter(final String groupWorkflowAdapter) {\n+        this.groupWorkflowAdapter = groupWorkflowAdapter;\n     }\n \n     public void setUserProvisioningManager(final String userProvisioningManager) {\n         this.userProvisioningManager = userProvisioningManager;\n     }\n \n-    public void setRoleProvisioningManager(final String roleProvisioningManager) {\n-        this.roleProvisioningManager = roleProvisioningManager;\n+    public void setGroupProvisioningManager(final String groupProvisioningManager) {\n+        this.groupProvisioningManager = groupProvisioningManager;\n     }\n \n }"},{"sha":"786bfc9a97f6bfae35371acbfdb5d7c164f876b0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -86,7 +86,7 @@ public Map<Long, MembershipTO> getMembershipMap() {\n         } else {\n             result = new HashMap<>(getMemberships().size());\n             for (MembershipTO membership : getMemberships()) {\n-                result.put(membership.getRoleId(), membership);\n+                result.put(membership.getGroupId(), membership);\n             }\n             result = Collections.unmodifiableMap(result);\n         }"},{"sha":"0eed28e2bdff1cf084a271dc9b208fa7aa53f803","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowFormTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -58,7 +58,7 @@ public long getUserKey() {\n         return userKey;\n     }\n \n-    public void setUserKey(long userKey) {\n+    public void setUserKey(final long userKey) {\n         this.userKey = userKey;\n     }\n "},{"sha":"5f2fd1e48a7d29b426a3731cb118b6ff9c8b26cf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AbstractPolicySpec.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAbstractPolicySpec.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.annotation.SchemaList;\n+\n+@XmlType\n+public abstract class AbstractPolicySpec implements PolicySpec {\n+\n+    private static final long serialVersionUID = -6210646284287392063L;\n+\n+    /**\n+     * Substrings not permitted.\n+     */\n+    private final List<String> wordsNotPermitted = new ArrayList<>();\n+\n+    /**\n+     * User attribute values not permitted.\n+     */\n+    @SchemaList\n+    protected final List<String> schemasNotPermitted = new ArrayList<>();\n+\n+    /**\n+     * Substrings not permitted as prefix.\n+     */\n+    protected final List<String> prefixesNotPermitted = new ArrayList<>();\n+\n+    /**\n+     * Substrings not permitted as suffix.\n+     */\n+    protected final List<String> suffixesNotPermitted = new ArrayList<>();\n+\n+    @XmlElementWrapper(name = \"wordsNotPermitted\")\n+    @XmlElement(name = \"word\")\n+    @JsonProperty(\"wordsNotPermitted\")\n+    public List<String> getWordsNotPermitted() {\n+        return wordsNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n+    @XmlElement(name = \"prefix\")\n+    @JsonProperty(\"prefixesNotPermitted\")\n+    public List<String> getPrefixesNotPermitted() {\n+        return prefixesNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"schemasNotPermitted\")\n+    @XmlElement(name = \"schema\")\n+    @JsonProperty(\"schemasNotPermitted\")\n+    public List<String> getSchemasNotPermitted() {\n+        return schemasNotPermitted;\n+    }\n+\n+    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n+    @XmlElement(name = \"suffix\")\n+    @JsonProperty(\"suffixesNotPermitted\")\n+    public List<String> getSuffixesNotPermitted() {\n+        return suffixesNotPermitted;\n+    }\n+\n+}"},{"sha":"cada0489d72c99f34b49e71a4bf77ef90a1ef056","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AccountPolicySpec.java","status":"modified","additions":1,"deletions":68,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAccountPolicySpec.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,16 +18,10 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.annotation.SchemaList;\n \n @XmlType\n-public class AccountPolicySpec implements PolicySpec {\n+public class AccountPolicySpec extends AbstractPolicySpec {\n \n     private static final long serialVersionUID = 3259256974414758406L;\n \n@@ -46,27 +40,6 @@ public class AccountPolicySpec implements PolicySpec {\n      */\n     private String pattern;\n \n-    /**\n-     * Substrings not permitted.\n-     */\n-    private List<String> wordsNotPermitted;\n-\n-    /**\n-     * User attribute values not permitted.\n-     */\n-    @SchemaList\n-    private List<String> schemasNotPermitted;\n-\n-    /**\n-     * Substrings not permitted as prefix.\n-     */\n-    private List<String> prefixesNotPermitted;\n-\n-    /**\n-     * Substrings not permitted as suffix.\n-     */\n-    private List<String> suffixesNotPermitted;\n-\n     /**\n      * Specify if one or more lowercase characters are permitted.\n      */\n@@ -130,46 +103,6 @@ public void setPattern(final String pattern) {\n         this.pattern = pattern;\n     }\n \n-    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n-    @XmlElement(name = \"prefix\")\n-    @JsonProperty(\"prefixesNotPermitted\")\n-    public List<String> getPrefixesNotPermitted() {\n-        if (prefixesNotPermitted == null) {\n-            prefixesNotPermitted = new ArrayList<String>();\n-        }\n-        return prefixesNotPermitted;\n-    }\n-\n-    @XmlElementWrapper(name = \"schemasNotPermitted\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemasNotPermitted\")\n-    public List<String> getSchemasNotPermitted() {\n-        if (schemasNotPermitted == null) {\n-            schemasNotPermitted = new ArrayList<String>();\n-        }\n-        return schemasNotPermitted;\n-    }\n-\n-    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n-    @XmlElement(name = \"suffix\")\n-    @JsonProperty(\"suffixesNotPermitted\")\n-    public List<String> getSuffixesNotPermitted() {\n-        if (suffixesNotPermitted == null) {\n-            suffixesNotPermitted = new ArrayList<String>();\n-        }\n-        return suffixesNotPermitted;\n-    }\n-\n-    @XmlElementWrapper(name = \"wordsNotPermitted\")\n-    @XmlElement(name = \"word\")\n-    @JsonProperty(\"wordsNotPermitted\")\n-    public List<String> getWordsNotPermitted() {\n-        if (wordsNotPermitted == null) {\n-            wordsNotPermitted = new ArrayList<String>();\n-        }\n-        return wordsNotPermitted;\n-    }\n-\n     public boolean isPropagateSuspension() {\n         return propagateSuspension;\n     }"},{"sha":"be789794c06293fce3301dbdfbb7d033174d50cf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AttrSchemaType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttrSchemaType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,7 +33,7 @@ public enum AttrSchemaType {\n     Encrypted(byte[].class),\n     Binary(byte[].class);\n \n-    final private Class<?> type;\n+    private final Class<?> type;\n \n     AttrSchemaType(final Class<?> type) {\n         this.type = type;"},{"sha":"fab34f05d6328db68732a42fa0e5ea5b264dadcd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AttributableType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAttributableType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,7 +24,7 @@\n public enum AttributableType {\n \n     USER,\n-    ROLE,\n+    GROUP,\n     MEMBERSHIP,\n     CONFIGURATION;\n "},{"sha":"323ea095e734e6431de31b9335ff36edb0edc6c5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditElements.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditElements.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,9 +26,6 @@ public final class AuditElements implements Serializable {\n \n     private static final long serialVersionUID = -4385059255522273254L;\n \n-    private AuditElements() {\n-    }\n-\n     @XmlEnum\n     public enum EventCategoryType {\n "},{"sha":"de0ec901d03fdf3c5d4a4ce039391f25175821d3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -49,8 +49,9 @@ public AuditLoggerName(\n             @JsonProperty(\"category\") final String category,\n             @JsonProperty(\"subcategory\") final String subcategory,\n             @JsonProperty(\"event\") final String event,\n-            @JsonProperty(\"result\") final Result result)\n-            throws IllegalArgumentException {\n+            @JsonProperty(\"result\") final Result result) {\n+\n+        super();\n \n         this.type = type == null ? AuditElements.EventCategoryType.CUSTOM : type;\n         this.category = category;\n@@ -86,7 +87,7 @@ public String toLoggerName() {\n \n     @SuppressWarnings(\"unchecked\")\n     public static AuditLoggerName fromLoggerName(final String loggerName)\n-            throws IllegalArgumentException, ParseException {\n+            throws ParseException {\n \n         if (StringUtils.isBlank(loggerName)) {\n             throw new IllegalArgumentException(\"Null value not permitted\");\n@@ -153,7 +154,7 @@ public static Map.Entry<EventCategoryTO, Result> parseEventCategory(final String\n             }\n         }\n \n-        return new AbstractMap.SimpleEntry< EventCategoryTO, Result>(eventCategoryTO, condition);\n+        return new AbstractMap.SimpleEntry<>(eventCategoryTO, condition);\n     }\n \n     /**\n@@ -183,38 +184,24 @@ public static String buildEvent(\n                 eventBuilder.append(type.name());\n             }\n         }\n-        eventBuilder.append(']');\n-\n-        eventBuilder.append(\":\");\n-\n-        eventBuilder.append('[');\n+        eventBuilder.append(\"]:[\");\n         if (StringUtils.isNotBlank(category)) {\n             eventBuilder.append(category);\n         }\n-        eventBuilder.append(']');\n-\n-        eventBuilder.append(\":\");\n-\n-        eventBuilder.append('[');\n+        eventBuilder.append(\"]:[\");\n         if (StringUtils.isNotBlank(subcategory)) {\n             eventBuilder.append(subcategory);\n         }\n-        eventBuilder.append(']');\n-\n-        eventBuilder.append(\":\");\n-\n-        eventBuilder.append('[');\n+        eventBuilder.append(\"]:[\");\n         if (StringUtils.isNotBlank(event)) {\n             eventBuilder.append(event);\n         }\n         eventBuilder.append(']');\n \n         if (resultValueCondition != null) {\n-            eventBuilder.append(\":\");\n-\n-            eventBuilder.append('[');\n-            eventBuilder.append(resultValueCondition);\n-            eventBuilder.append(']');\n+            eventBuilder.append(\":[\").\n+                    append(resultValueCondition).\n+                    append(']');\n         }\n \n         return eventBuilder.toString();"},{"sha":"d7be1bcdefd916a29e1aced1d47123909d06c1e2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/CipherAlgorithm.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FCipherAlgorithm.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,9 +35,9 @@ public enum CipherAlgorithm {\n     SSHA512(\"S-SHA-512\", false),\n     BCRYPT(\"BCRYPT\", false);\n \n-    final private String algorithm;\n+    private final String algorithm;\n \n-    final private boolean invertible;\n+    private final boolean invertible;\n \n     CipherAlgorithm(final String algorithm, final boolean invertible) {\n         this.algorithm = algorithm;"},{"sha":"f67c3d453bbd3109bb47081e3f496361410c4b76","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,10 +35,10 @@ public enum ClientExceptionType {\n     InvalidConnIdConf(Response.Status.BAD_REQUEST),\n     InvalidPolicy(Response.Status.BAD_REQUEST),\n     InvalidConf(Response.Status.BAD_REQUEST),\n-    InvalidRole(Response.Status.BAD_REQUEST),\n+    InvalidGroup(Response.Status.BAD_REQUEST),\n     InvalidReport(Response.Status.BAD_REQUEST),\n     InvalidReportExec(Response.Status.BAD_REQUEST),\n-    InvalidRoles(Response.Status.BAD_REQUEST),\n+    InvalidGroups(Response.Status.BAD_REQUEST),\n     InvalidSchemaDefinition(Response.Status.BAD_REQUEST),\n     InvalidSearchExpression(Response.Status.BAD_REQUEST),\n     InvalidPageOrSize(Response.Status.BAD_REQUEST),\n@@ -59,9 +59,9 @@ public enum ClientExceptionType {\n     RejectedUserCreate(Response.Status.BAD_REQUEST),\n     RequiredValuesMissing(Response.Status.BAD_REQUEST),\n     RESTValidation(Response.Status.BAD_REQUEST),\n-    RoleOwnership(Response.Status.BAD_REQUEST),\n+    GroupOwnership(Response.Status.BAD_REQUEST),\n     Scheduling(Response.Status.BAD_REQUEST),\n-    UnauthorizedRole(Response.Status.UNAUTHORIZED),\n+    UnauthorizedGroup(Response.Status.UNAUTHORIZED),\n     Unauthorized(Response.Status.UNAUTHORIZED),\n     Unknown(Response.Status.BAD_REQUEST),\n     Workflow(Response.Status.BAD_REQUEST);"},{"sha":"30193f68dddae40b634ec913d941416cb76a4976","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/EntityViolationType.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntityViolationType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -38,12 +38,12 @@ public enum EntityViolationType {\n     InvalidPasswordPolicy(\"org.apache.syncope.core.persistence.validation.passwordpolicy\"),\n     InvalidPolicy(\"org.apache.syncope.core.persistence.validation.policy\"),\n     InvalidPropagationTask(\"org.apache.syncope.core.persistence.validation.propagationtask\"),\n-    InvalidRPlainSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.rPlainSchema\"),\n-    InvalidRDerSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.rDerSchema\"),\n-    InvalidRVirSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.rVirSchema\"),\n+    InvalidGPlainSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.gPlainSchema\"),\n+    InvalidGDerSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.gDerSchema\"),\n+    InvalidGVirSchema(\"org.apache.syncope.core.persistence.validation.attrvalue.gVirSchema\"),\n     InvalidReport(\"org.apache.syncope.core.persistence.validation.report\"),\n     InvalidResource(\"org.apache.syncope.core.persistence.validation.externalresource\"),\n-    InvalidRoleOwner(\"org.apache.syncope.core.persistence.validation.role.owner\"),\n+    InvalidGroupOwner(\"org.apache.syncope.core.persistence.validation.group.owner\"),\n     InvalidSchemaEncrypted(\"org.apache.syncope.core.persistence.validation.schema.encrypted\"),\n     InvalidSchemaEnum(\"org.apache.syncope.core.persistence.validation.schema.enum\"),\n     InvalidSchemaMultivalueUnique(\"org.apache.syncope.core.persistence.validation.schema.multivalueUnique\"),"},{"sha":"c329d72dd59078a1080d303c3b61caad4debb4e3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/IntMappingType.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -42,14 +42,14 @@ public enum IntMappingType {\n     Username(AttributableType.USER),\n     Password(AttributableType.USER),\n     // -------------------------\n-    // Role attribute types (the same in RoleMappingType)\n+    // Group attribute types (the same in GroupMappingType)\n     // -------------------------\n-    RolePlainSchema(AttributableType.ROLE),\n-    RoleDerivedSchema(AttributableType.ROLE),\n-    RoleVirtualSchema(AttributableType.ROLE),\n-    RoleId(AttributableType.ROLE),\n-    RoleName(AttributableType.ROLE),\n-    RoleOwnerSchema(AttributableType.ROLE),\n+    GroupPlainSchema(AttributableType.GROUP),\n+    GroupDerivedSchema(AttributableType.GROUP),\n+    GroupVirtualSchema(AttributableType.GROUP),\n+    GroupId(AttributableType.GROUP),\n+    GroupName(AttributableType.GROUP),\n+    GroupOwnerSchema(AttributableType.GROUP),\n     // -------------------------\n     // Membership attribute types (the same in MembershipMappingType)\n     // -------------------------\n@@ -58,7 +58,7 @@ public enum IntMappingType {\n     MembershipVirtualSchema(AttributableType.MEMBERSHIP),\n     MembershipId(AttributableType.MEMBERSHIP);\n \n-    private AttributableType attributableType;\n+    private final AttributableType attributableType;\n \n     private IntMappingType(final AttributableType attributableType) {\n         this.attributableType = attributableType;\n@@ -91,11 +91,11 @@ public static Set<IntMappingType> getAttributeTypes(\n      * @return set of attribute types.\n      */\n     public static Set<IntMappingType> getAttributeTypes(final AttributableType attributableType) {\n-        final EnumSet<?> enumset;\n+        EnumSet<?> enumset;\n \n         switch (attributableType) {\n-            case ROLE:\n-                enumset = EnumSet.allOf(RoleMappingType.class);\n+            case GROUP:\n+                enumset = EnumSet.allOf(GroupMappingType.class);\n                 break;\n \n             case MEMBERSHIP:\n@@ -105,9 +105,10 @@ public static Set<IntMappingType> getAttributeTypes(final AttributableType attri\n             case USER:\n             default:\n                 enumset = EnumSet.allOf(UserMappingType.class);\n+                break;\n         }\n \n-        final Set<IntMappingType> result = new HashSet<IntMappingType>(enumset.size());\n+        final Set<IntMappingType> result = new HashSet<>(enumset.size());\n         for (Object obj : enumset) {\n             result.add(IntMappingType.valueOf(obj.toString()));\n         }\n@@ -116,9 +117,8 @@ public static Set<IntMappingType> getAttributeTypes(final AttributableType attri\n     }\n \n     public static Set<IntMappingType> getEmbedded() {\n-        return EnumSet.of(\n-                IntMappingType.UserId, IntMappingType.Username, IntMappingType.Password,\n-                IntMappingType.RoleId, IntMappingType.RoleName, IntMappingType.RoleOwnerSchema,\n+        return EnumSet.of(IntMappingType.UserId, IntMappingType.Username, IntMappingType.Password,\n+                IntMappingType.GroupId, IntMappingType.GroupName, IntMappingType.GroupOwnerSchema,\n                 IntMappingType.MembershipId);\n     }\n \n@@ -131,8 +131,8 @@ public static Set<IntMappingType> getEmbedded() {\n      */\n     public static boolean contains(final AttributableType attributableType, final String type) {\n         switch (attributableType) {\n-            case ROLE:\n-                for (RoleMappingType c : RoleMappingType.values()) {\n+            case GROUP:\n+                for (GroupMappingType c : GroupMappingType.values()) {\n                     if (c.name().equals(type)) {\n                         return true;\n                     }\n@@ -174,16 +174,16 @@ private enum UserMappingType {\n     }\n \n     /**\n-     * Role attribute types.\n+     * Group attribute types.\n      */\n-    private enum RoleMappingType {\n-\n-        RolePlainSchema,\n-        RoleDerivedSchema,\n-        RoleVirtualSchema,\n-        RoleId,\n-        RoleName,\n-        RoleOwnerSchema;\n+    private enum GroupMappingType {\n+\n+        GroupPlainSchema,\n+        GroupDerivedSchema,\n+        GroupVirtualSchema,\n+        GroupId,\n+        GroupName,\n+        GroupOwnerSchema;\n \n     }\n "},{"sha":"175a1ef73b0c6bda2fcbe72858f763d64c5f9a41","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PasswordPolicySpec.java","status":"modified","additions":1,"deletions":68,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPasswordPolicySpec.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,16 +18,10 @@\n  */\n package org.apache.syncope.common.lib.types;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.annotation.SchemaList;\n \n @XmlType\n-public class PasswordPolicySpec implements PolicySpec {\n+public class PasswordPolicySpec extends AbstractPolicySpec {\n \n     private static final long serialVersionUID = -7988778083915548547L;\n \n@@ -46,17 +40,6 @@ public class PasswordPolicySpec implements PolicySpec {\n      */\n     private int minLength;\n \n-    /**\n-     * Substrings not permitted.\n-     */\n-    private List<String> wordsNotPermitted;\n-\n-    /**\n-     * User attribute values not permitted.\n-     */\n-    @SchemaList\n-    private List<String> schemasNotPermitted;\n-\n     /**\n      * Specify if one or more non alphanumeric characters are required.\n      */\n@@ -147,16 +130,6 @@ public class PasswordPolicySpec implements PolicySpec {\n      */\n     private boolean allowNullPassword;\n \n-    /**\n-     * Substrings not permitted as prefix.\n-     */\n-    private List<String> prefixesNotPermitted;\n-\n-    /**\n-     * Substrings not permitted as suffix.\n-     */\n-    private List<String> suffixesNotPermitted;\n-\n     public boolean isDigitRequired() {\n         return digitRequired;\n     }\n@@ -261,36 +234,6 @@ public void setNonAlphanumericRequired(final boolean nonAlphanumericRequired) {\n         this.nonAlphanumericRequired = nonAlphanumericRequired;\n     }\n \n-    @XmlElementWrapper(name = \"prefixesNotPermitted\")\n-    @XmlElement(name = \"prefix\")\n-    @JsonProperty(\"prefixesNotPermitted\")\n-    public List<String> getPrefixesNotPermitted() {\n-        if (prefixesNotPermitted == null) {\n-            prefixesNotPermitted = new ArrayList<String>();\n-        }\n-        return prefixesNotPermitted;\n-    }\n-\n-    @XmlElementWrapper(name = \"schemasNotPermitted\")\n-    @XmlElement(name = \"schema\")\n-    @JsonProperty(\"schemasNotPermitted\")\n-    public List<String> getSchemasNotPermitted() {\n-        if (schemasNotPermitted == null) {\n-            schemasNotPermitted = new ArrayList<String>();\n-        }\n-        return schemasNotPermitted;\n-    }\n-\n-    @XmlElementWrapper(name = \"suffixesNotPermitted\")\n-    @XmlElement(name = \"suffix\")\n-    @JsonProperty(\"suffixesNotPermitted\")\n-    public List<String> getSuffixesNotPermitted() {\n-        if (suffixesNotPermitted == null) {\n-            suffixesNotPermitted = new ArrayList<String>();\n-        }\n-        return suffixesNotPermitted;\n-    }\n-\n     public boolean isUppercaseRequired() {\n         return uppercaseRequired;\n     }\n@@ -299,16 +242,6 @@ public void setUppercaseRequired(final boolean uppercaseRequired) {\n         this.uppercaseRequired = uppercaseRequired;\n     }\n \n-    @XmlElementWrapper(name = \"wordsNotPermitted\")\n-    @XmlElement(name = \"word\")\n-    @JsonProperty(\"wordsNotPermitted\")\n-    public List<String> getWordsNotPermitted() {\n-        if (wordsNotPermitted == null) {\n-            wordsNotPermitted = new ArrayList<String>();\n-        }\n-        return wordsNotPermitted;\n-    }\n-\n     public boolean isAlphanumericRequired() {\n         return alphanumericRequired;\n     }"},{"sha":"3d7955de174b41fd8447f7029c3f4921688eb32a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceAssociationActionType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceAssociationActionType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,15 +24,15 @@\n public enum ResourceAssociationActionType {\n \n     /**\n-     * Add association between user/role on Syncope and external resource(s) without any propagation.\n+     * Add association between user/group on Syncope and external resource(s) without any propagation.\n      */\n     LINK,\n     /**\n-     * Add user/role into external resource(s).\n+     * Add user/group into external resource(s).\n      */\n     PROVISION,\n     /**\n-     * Assign (link + provision) external resource(s) with user/role.\n+     * Assign (link + provision) external resource(s) with user/group.\n      */\n     ASSIGN\n "},{"sha":"aea4fa31f951bef30cdf270b3837e58dae554e50","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ResourceDeassociationActionType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FResourceDeassociationActionType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,15 +24,15 @@\n public enum ResourceDeassociationActionType {\n \n     /**\n-     * Remove association between user/role on Syncope and external resource(s) without any propagation.\n+     * Remove association between user/group on Syncope and external resource(s) without any propagation.\n      */\n     UNLINK,\n     /**\n-     * Remove user/role from external resource(s).\n+     * Remove user/group from external resource(s).\n      */\n     DEPROVISION,\n     /**\n-     * Unassign (unlink + de-provision) external resource(s) from user/role.\n+     * Unassign (unlink + de-provision) external resource(s) from user/group.\n      */\n     UNASSIGN\n "},{"sha":"538f19ac73535aa71e6d9aba74228576630a0a42","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/SubjectType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSubjectType.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,11 +24,11 @@\n public enum SubjectType {\n \n     USER,\n-    ROLE;\n+    GROUP;\n \n     public AttributableType asAttributableType() {\n         return this == USER\n                 ? AttributableType.USER\n-                : AttributableType.ROLE;\n+                : AttributableType.GROUP;\n     }\n }"},{"sha":"a9042096a9f238461db1c7843bcf69a11b5da4c0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/SyncPolicySpec.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncPolicySpec.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,19 +36,19 @@ public class SyncPolicySpec implements PolicySpec {\n      * User attributes and fields for matching during synchronization.\n      */\n     @SchemaList(extended = true)\n-    private final List<String> uAltSearchSchemas = new ArrayList<String>();\n+    private final List<String> uAltSearchSchemas = new ArrayList<>();\n \n     @ClassList\n     private String userJavaRule;\n \n     /**\n-     * Role attributes and fields for matching during synchronization.\n+     * Group attributes and fields for matching during synchronization.\n      */\n     @SchemaList(extended = true)\n-    private final List<String> rAltSearchSchemas = new ArrayList<String>();\n+    private final List<String> gAltSearchSchemas = new ArrayList<>();\n \n     @ClassList\n-    private String roleJavaRule;\n+    private String groupJavaRule;\n \n     /**\n      * Conflict resolution action.\n@@ -72,19 +72,19 @@ public List<String> getuAltSearchSchemas() {\n         return uAltSearchSchemas;\n     }\n \n-    @XmlElementWrapper(name = \"roleAltSearchSchemas\")\n-    @XmlElement(name = \"roleAltSearchSchema\")\n-    @JsonProperty(\"roleAltSearchSchemas\")\n+    @XmlElementWrapper(name = \"groupAltSearchSchemas\")\n+    @XmlElement(name = \"groupAltSearchSchema\")\n+    @JsonProperty(\"groupAltSearchSchemas\")\n     public List<String> getrAltSearchSchemas() {\n-        return rAltSearchSchemas;\n+        return gAltSearchSchemas;\n     }\n \n-    public String getRoleJavaRule() {\n-        return roleJavaRule;\n+    public String getGroupJavaRule() {\n+        return groupJavaRule;\n     }\n \n-    public void setRoleJavaRule(final String roleJavaRule) {\n-        this.roleJavaRule = roleJavaRule;\n+    public void setGroupJavaRule(final String groupJavaRule) {\n+        this.groupJavaRule = groupJavaRule;\n     }\n \n     public String getUserJavaRule() {"},{"sha":"db8b41c0cc41165d8e9aa1a08ff5d4c19637dca3","filename":"common/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-common</artifactId>\n   <packaging>pom</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n   <modules>\n     <module>lib</module>\n     <module>rest-api</module>"},{"sha":"2bbe9b7e43e6b7ac3d7cf70a6c0f647ab832059a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"renamed","additions":83,"deletions":83,"changes":166,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,232 +35,232 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n-import org.apache.syncope.common.lib.mod.RoleMod;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.wrap.ResourceName;\n \n /**\n- * REST operations for roles.\n+ * REST operations for groups.\n  */\n-@Path(\"roles\")\n-public interface RoleService extends JAXRSService {\n+@Path(\"groups\")\n+public interface GroupService extends JAXRSService {\n \n     /**\n-     * Returns children roles of given role.\n+     * Returns children groups of given group.\n      *\n-     * @param roleKey key of role to get children from\n-     * @return children roles of given role\n+     * @param groupKey key of group to get children from\n+     * @return children groups of given group\n      */\n     @GET\n-    @Path(\"{roleKey}/children\")\n+    @Path(\"{groupKey}/children\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    List<RoleTO> children(@NotNull @PathParam(\"roleKey\") Long roleKey);\n+    List<GroupTO> children(@NotNull @PathParam(\"groupKey\") Long groupKey);\n \n     /**\n-     * Returns parent role of the given role (or null if no parent exists).\n+     * Returns parent group of the given group (or null if no parent exists).\n      *\n-     * @param roleKey key of role to get parent role from\n-     * @return parent role of the given role (or null if no parent exists)\n+     * @param groupKey key of group to get parent group from\n+     * @return parent group of the given group (or null if no parent exists)\n      */\n     @GET\n-    @Path(\"{roleKey}/parent\")\n+    @Path(\"{groupKey}/parent\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    RoleTO parent(@NotNull @PathParam(\"roleKey\") Long roleKey);\n+    GroupTO parent(@NotNull @PathParam(\"groupKey\") Long groupKey);\n \n     /**\n-     * Reads the role matching the provided roleKey.\n+     * Reads the group matching the provided groupKey.\n      *\n-     * @param roleKey key of role to be read\n-     * @return role with matching id\n+     * @param groupKey key of group to be read\n+     * @return group with matching id\n      */\n     @GET\n-    @Path(\"{roleKey}\")\n+    @Path(\"{groupKey}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    RoleTO read(@NotNull @PathParam(\"roleKey\") Long roleKey);\n+    GroupTO read(@NotNull @PathParam(\"groupKey\") Long groupKey);\n \n     /**\n      * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\n-     * can read his own roles.\n+     * can read his own groups.\n      *\n-     * @param roleKey key of role to be read\n-     * @return role with matching id\n+     * @param groupKey key of group to be read\n+     * @return group with matching id\n      */\n     @Descriptions({\n         @Description(target = DocTarget.METHOD,\n                 value = \"This method is similar to <tt>read()</tt>, but uses different authentication handling to \"\n-                + \"ensure that a user can read his own roles.\")\n+                + \"ensure that a user can read his own groups.\")\n     })\n     @GET\n-    @Path(\"{roleKey}/own\")\n+    @Path(\"{groupKey}/own\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    RoleTO readSelf(@NotNull @PathParam(\"roleKey\") Long roleKey);\n+    GroupTO readSelf(@NotNull @PathParam(\"groupKey\") Long groupKey);\n \n     /**\n-     * Returns a paged list of existing roles.\n+     * Returns a paged list of existing groups.\n      *\n-     * @return paged list of all existing roles\n+     * @return paged list of all existing groups\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> list();\n+    PagedResult<GroupTO> list();\n \n     /**\n-     * Returns a paged list of existing roles.\n+     * Returns a paged list of existing groups.\n      *\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return paged list of all existing roles\n+     * @return paged list of all existing groups\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> list(@QueryParam(PARAM_ORDERBY) String orderBy);\n+    PagedResult<GroupTO> list(@QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n-     * Returns a paged list of existing roles matching page/size conditions.\n+     * Returns a paged list of existing groups matching page/size conditions.\n      *\n      * @param page result page number\n      * @param size number of entries per page\n-     * @return paged list of existing roles matching page/size conditions\n+     * @return paged list of existing groups matching page/size conditions\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> list(\n+    PagedResult<GroupTO> list(\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size);\n \n     /**\n-     * Returns a paged list of existing roles matching page/size conditions.\n+     * Returns a paged list of existing groups matching page/size conditions.\n      *\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return paged list of existing roles matching page/size conditions\n+     * @return paged list of existing groups matching page/size conditions\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> list(\n+    PagedResult<GroupTO> list(\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n             @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n-     * Returns a paged list of roles matching the provided FIQL search condition.\n+     * Returns a paged list of groups matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n-     * @return paged list of roles matching the provided FIQL search condition\n+     * @return paged list of groups matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> search(@NotNull @QueryParam(PARAM_FIQL) String fiql);\n+    PagedResult<GroupTO> search(@NotNull @QueryParam(PARAM_FIQL) String fiql);\n \n     /**\n-     * Returns a paged list of roles matching the provided FIQL search condition.\n+     * Returns a paged list of groups matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return paged list of roles matching the provided FIQL search condition\n+     * @return paged list of groups matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> search(\n+    PagedResult<GroupTO> search(\n             @NotNull @QueryParam(PARAM_FIQL) String fiql, @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n-     * Returns a paged list of roles matching the provided FIQL search condition.\n+     * Returns a paged list of groups matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n      * @param page result page number\n      * @param size number of entries per page\n-     * @return paged list of roles matching the provided FIQL search condition\n+     * @return paged list of groups matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n+    PagedResult<GroupTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size);\n \n     /**\n-     * Returns a paged list of roles matching the provided FIQL search condition.\n+     * Returns a paged list of groups matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return paged list of roles matching the provided FIQL search condition\n+     * @return paged list of groups matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n+    PagedResult<GroupTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n             @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n-     * Creates a new role.\n+     * Creates a new group.\n      *\n-     * @param roleTO role to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role as well as the role itself\n-     * enriched with propagation status information - {@link RoleTO} as <tt>Entity</tt>\n+     * @param groupTO group to be created\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created group as well as the group itself\n+     * enriched with propagation status information - {@link GroupTO} as <tt>Entity</tt>\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created role as well as the \"\n-                + \"role itself enriched with propagation status information - <tt>RoleTO</tt> as <tt>Entity</tt>\")\n+                value = \"Featuring <tt>Location</tt> header of created group as well as the \"\n+                + \"group itself enriched with propagation status information - <tt>GroupTO</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response create(@NotNull RoleTO roleTO);\n+    Response create(@NotNull GroupTO groupTO);\n \n     /**\n-     * Updates role matching the provided roleKey.\n+     * Updates group matching the provided groupKey.\n      *\n-     * @param roleKey key of role to be updated\n-     * @param roleMod modification to be applied to role matching the provided roleKey\n-     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information\n-     * - {@link RoleTO} as <tt>Entity</tt>\n+     * @param groupKey key of group to be updated\n+     * @param groupMod modification to be applied to group matching the provided groupKey\n+     * @return <tt>Response</tt> object featuring the updated group enriched with propagation status information\n+     * - {@link GroupTO} as <tt>Entity</tt>\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated role enriched with propagation status information - \"\n-                + \"<tt>RoleTO</tt> as <tt>Entity</tt>\")\n+                value = \"Featuring the updated group enriched with propagation status information - \"\n+                + \"<tt>GroupTO</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{roleKey}\")\n+    @Path(\"{groupKey}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response update(@NotNull @PathParam(\"roleKey\") Long roleKey, @NotNull RoleMod roleMod);\n+    Response update(@NotNull @PathParam(\"groupKey\") Long groupKey, @NotNull GroupMod groupMod);\n \n     /**\n-     * Deletes role matching provided roleKey.\n+     * Deletes group matching provided groupKey.\n      *\n-     * @param roleKey key of role to be deleted\n-     * @return <tt>Response</tt> object featuring the deleted role enriched with propagation status information\n-     * - {@link RoleTO} as <tt>Entity</tt>\n+     * @param groupKey key of group to be deleted\n+     * @return <tt>Response</tt> object featuring the deleted group enriched with propagation status information\n+     * - {@link GroupTO} as <tt>Entity</tt>\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted role enriched with propagation status information - \"\n-                + \"<tt>RoleTO</tt> as <tt>Entity</tt>\")\n+                value = \"Featuring the deleted group enriched with propagation status information - \"\n+                + \"<tt>GroupTO</tt> as <tt>Entity</tt>\")\n     })\n     @DELETE\n-    @Path(\"{roleKey}\")\n+    @Path(\"{groupKey}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response delete(@NotNull @PathParam(\"roleKey\") Long roleKey);\n+    Response delete(@NotNull @PathParam(\"groupKey\") Long groupKey);\n \n     /**\n-     * Executes resource-related operations on given role.\n+     * Executes resource-related operations on given group.\n      *\n-     * @param roleKey role id.\n+     * @param groupKey group id.\n      * @param type resource association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n      * @return <tt>Response</tt> object featuring\n@@ -271,17 +271,17 @@ PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n                 value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{roleKey}/deassociate/{type}\")\n+    @Path(\"{groupKey}/deassociate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkDeassociation(@NotNull @PathParam(\"roleKey\") Long roleKey,\n+    Response bulkDeassociation(@NotNull @PathParam(\"groupKey\") Long groupKey,\n             @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n             @NotNull List<ResourceName> resourceNames);\n \n     /**\n-     * Executes resource-related operations on given role.\n+     * Executes resource-related operations on given group.\n      *\n-     * @param roleKey role id.\n+     * @param groupKey group id.\n      * @param type resource association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n      * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n@@ -291,17 +291,17 @@ Response bulkDeassociation(@NotNull @PathParam(\"roleKey\") Long roleKey,\n                 value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{roleKey}/associate/{type}\")\n+    @Path(\"{groupKey}/associate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkAssociation(@NotNull @PathParam(\"roleKey\") Long roleKey,\n+    Response bulkAssociation(@NotNull @PathParam(\"groupKey\") Long groupKey,\n             @NotNull @PathParam(\"type\") ResourceAssociationActionType type,\n             @NotNull List<ResourceName> resourceNames);\n \n     /**\n      * Executes the provided bulk action.\n      *\n-     * @param bulkAction list of role ids against which the bulk action will be performed.\n+     * @param bulkAction list of group ids against which the bulk action will be performed.\n      * @return Bulk action result\n      */\n     @POST","previous_filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java"},{"sha":"cd5c4730385c3855399ec7fe81f932f0f39964d5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,20 +20,20 @@\n \n public interface JAXRSService {\n \n-    final String PARAM_FIQL = \"fiql\";\n+    String PARAM_FIQL = \"fiql\";\n \n-    final String PARAM_PAGE = \"page\";\n+    String PARAM_PAGE = \"page\";\n \n-    final String DEFAULT_PARAM_PAGE = \"1\";\n+    String DEFAULT_PARAM_PAGE = \"1\";\n \n-    final int DEFAULT_PARAM_PAGE_VALUE = Integer.valueOf(DEFAULT_PARAM_PAGE);\n+    int DEFAULT_PARAM_PAGE_VALUE = Integer.valueOf(DEFAULT_PARAM_PAGE);\n \n-    final String PARAM_SIZE = \"size\";\n+    String PARAM_SIZE = \"size\";\n \n-    final String DEFAULT_PARAM_SIZE = \"25\";\n+    String DEFAULT_PARAM_SIZE = \"25\";\n \n-    final int DEFAULT_PARAM_SIZE_VALUE = Integer.valueOf(DEFAULT_PARAM_SIZE);\n+    int DEFAULT_PARAM_SIZE_VALUE = Integer.valueOf(DEFAULT_PARAM_SIZE);\n \n-    final String PARAM_ORDERBY = \"orderby\";\n+    String PARAM_ORDERBY = \"orderby\";\n \n }"},{"sha":"06b6b3222b8f06cba6daff0f113ae5f359d8e416","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -51,8 +51,8 @@ public interface ResourceService extends JAXRSService {\n      * Returns connector object from the external resource, for the given type and key.\n      *\n      * @param resourceKey Name of resource to read connector object from\n-     * @param type user / role\n-     * @param key user key / role key\n+     * @param type user /group\n+     * @param key user key / group key\n      * @return connector object from the external resource, for the given type and key\n      */\n     @GET\n@@ -128,12 +128,12 @@ ConnObjectTO getConnectorObject(@NotNull @PathParam(\"resourceKey\") String resour\n     boolean check(@NotNull ResourceTO resourceTO);\n \n     /**\n-     * De-associate users or roles (depending on the provided subject type) from the given resource.\n+     * De-associate users or groups (depending on the provided subject type) from the given resource.\n      *\n      * @param resourceKey name of resource\n-     * @param subjectType subject type (user or role)\n+     * @param subjectType subject type (user or group)\n      * @param type resource de-association action type\n-     * @param subjectKeys users or roles against which the bulk action will be performed\n+     * @param subjectKeys users or groups against which the bulk action will be performed\n      * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n      */\n     @Descriptions({"},{"sha":"b74ec2bea890c060ab5c093d9e51af241e1c3023","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -39,7 +39,7 @@ public interface WorkflowService extends JAXRSService {\n     /**\n      * Exports workflow definition for matching kind.\n      *\n-     * @param kind user or role\n+     * @param kind user or group\n      * @return workflow definition for matching kind\n      */\n     @GET\n@@ -49,7 +49,7 @@ public interface WorkflowService extends JAXRSService {\n     /**\n      * Exports workflow diagram representation.\n      *\n-     * @param kind user or role\n+     * @param kind user or group\n      * @return workflow diagram representation\n      */\n     @GET\n@@ -60,7 +60,7 @@ public interface WorkflowService extends JAXRSService {\n     /**\n      * Imports workflow definition for matching kind.\n      *\n-     * @param kind user or role\n+     * @param kind user or group\n      * @param definition workflow definition for matching kind\n      */\n     @PUT"},{"sha":"17e1a7ece791014337bcc5a957f1fce18e91eddc","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConfigurationLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainSchema;\n import org.apache.syncope.core.provisioning.api.data.ConfigurationDataBinder;\n-import org.apache.syncope.core.workflow.api.RoleWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n@@ -55,7 +55,7 @@ public class ConfigurationLogic extends AbstractTransactionalLogic<ConfTO> {\n     private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n-    private RoleWorkflowAdapter rwfAdapter;\n+    private GroupWorkflowAdapter gwfAdapter;\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_DELETE')\")\n     public void delete(final String key) {\n@@ -96,7 +96,7 @@ public void set(final AttrTO value) {\n     @Transactional(readOnly = true)\n     public void export(final OutputStream os) {\n         try {\n-            exporter.export(os, uwfAdapter.getPrefix(), rwfAdapter.getPrefix());\n+            exporter.export(os, uwfAdapter.getPrefix(), gwfAdapter.getPrefix());\n             LOG.debug(\"Database content successfully exported\");\n         } catch (Exception e) {\n             LOG.error(\"While exporting database content\", e);"},{"sha":"a3fd17a336a7aedefbb8c65c78b9d3e1a50b8a08","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"added","additions":405,"deletions":0,"changes":405,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -0,0 +1,405 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.annotation.Resource;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.SubjectType;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.SubjectSearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.AttributableTransformer;\n+import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.misc.security.AuthContextUtil;\n+import org.apache.syncope.core.misc.security.UnauthorizedGroupException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.transaction.interceptor.TransactionInterceptor;\n+\n+/**\n+ * Note that this controller does not extend {@link AbstractTransactionalLogic}, hence does not provide any\n+ * Spring's Transactional logic at class level.\n+ */\n+@Component\n+public class GroupLogic extends AbstractSubjectLogic<GroupTO, GroupMod> {\n+\n+    @Autowired\n+    protected GroupDAO groupDAO;\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    @Autowired\n+    protected SubjectSearchDAO searchDAO;\n+\n+    @Autowired\n+    protected GroupDataBinder binder;\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected AttributableTransformer attrTransformer;\n+\n+    @Resource(name = \"anonymousUser\")\n+    protected String anonymousUser;\n+\n+    @Autowired\n+    protected GroupProvisioningManager provisioningManager;\n+\n+    @PreAuthorize(\"hasAnyRole('GROUP_READ', T(org.apache.syncope.common.lib.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n+    @Transactional(readOnly = true)\n+    @Override\n+    public GroupTO read(final Long groupKey) {\n+        Group group;\n+        // bypass group entitlements check\n+        if (anonymousUser.equals(AuthContextUtil.getAuthenticatedUsername())) {\n+            group = groupDAO.find(groupKey);\n+        } else {\n+            group = groupDAO.authFetch(groupKey);\n+        }\n+\n+        if (group == null) {\n+            throw new NotFoundException(\"Group \" + groupKey);\n+        }\n+\n+        return binder.getGroupTO(group);\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated() \"\n+            + \"and not(hasRole(T(org.apache.syncope.common.lib.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n+    @Transactional(readOnly = true)\n+    public GroupTO readSelf(final Long groupKey) {\n+        // Explicit search instead of using binder.getGroupFromId() in order to bypass auth checks - will do here\n+        Group group = groupDAO.find(groupKey);\n+        if (group == null) {\n+            throw new NotFoundException(\"Group \" + groupKey);\n+        }\n+\n+        Set<Long> ownedGroupIds;\n+        User authUser = userDAO.find(AuthContextUtil.getAuthenticatedUsername());\n+        if (authUser == null) {\n+            ownedGroupIds = Collections.<Long>emptySet();\n+        } else {\n+            ownedGroupIds = authUser.getGroupKeys();\n+        }\n+\n+        Set<Long> allowedGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        allowedGroupIds.addAll(ownedGroupIds);\n+        if (!allowedGroupIds.contains(group.getKey())) {\n+            throw new UnauthorizedGroupException(group.getKey());\n+        }\n+\n+        return binder.getGroupTO(group);\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_READ')\")\n+    @Transactional(readOnly = true)\n+    public GroupTO parent(final Long groupKey) {\n+        Group group = groupDAO.authFetch(groupKey);\n+\n+        Set<Long> allowedGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        if (group.getParent() != null && !allowedGroupIds.contains(group.getParent().getKey())) {\n+            throw new UnauthorizedGroupException(group.getParent().getKey());\n+        }\n+\n+        GroupTO result = group.getParent() == null\n+                ? null\n+                : binder.getGroupTO(group.getParent());\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_READ')\")\n+    @Transactional(readOnly = true)\n+    public List<GroupTO> children(final Long groupKey) {\n+        Group group = groupDAO.authFetch(groupKey);\n+\n+        Set<Long> allowedGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+\n+        List<Group> children = groupDAO.findChildren(group);\n+        List<GroupTO> childrenTOs = new ArrayList<>(children.size());\n+        for (Group child : children) {\n+            if (allowedGroupIds.contains(child.getKey())) {\n+                childrenTOs.add(binder.getGroupTO(child));\n+            }\n+        }\n+\n+        return childrenTOs;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    @Override\n+    public int count() {\n+        return groupDAO.count();\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    @Override\n+    public List<GroupTO> list(final int page, final int size, final List<OrderByClause> orderBy) {\n+        List<Group> groups = groupDAO.findAll(page, size, orderBy);\n+\n+        List<GroupTO> groupTOs = new ArrayList<>(groups.size());\n+        for (Group group : groups) {\n+            groupTOs.add(binder.getGroupTO(group));\n+        }\n+\n+        return groupTOs;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    @Override\n+    public int searchCount(final SearchCond searchCondition) {\n+        final Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        return searchDAO.count(adminGroupIds, searchCondition, SubjectType.GROUP);\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    @Override\n+    public List<GroupTO> search(final SearchCond searchCondition, final int page, final int size,\n+            final List<OrderByClause> orderBy) {\n+\n+        final List<Group> matchingGroups = searchDAO.search(GroupEntitlementUtil.getGroupKeys(AuthContextUtil.\n+                getOwnedEntitlementNames()),\n+                searchCondition, page, size, orderBy, SubjectType.GROUP);\n+\n+        final List<GroupTO> result = new ArrayList<>(matchingGroups.size());\n+        for (Group group : matchingGroups) {\n+            result.add(binder.getGroupTO(group));\n+        }\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_CREATE')\")\n+    public GroupTO create(final GroupTO groupTO) {\n+        // Check that this operation is allowed to be performed by caller\n+        Set<Long> allowedGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        if (groupTO.getParent() != 0 && !allowedGroupIds.contains(groupTO.getParent())) {\n+            throw new UnauthorizedGroupException(groupTO.getParent());\n+        }\n+\n+        // Attributable transformation (if configured)\n+        GroupTO actual = attrTransformer.transform(groupTO);\n+        LOG.debug(\"Transformed: {}\", actual);\n+\n+        /*\n+         * Actual operations: workflow, propagation\n+         */\n+        Map.Entry<Long, List<PropagationStatus>> created = provisioningManager.create(groupTO);\n+        final GroupTO savedTO = binder.getGroupTO(created.getKey());\n+        savedTO.getPropagationStatusTOs().addAll(created.getValue());\n+        return savedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Override\n+    public GroupTO update(final GroupMod groupMod) {\n+        // Check that this operation is allowed to be performed by caller\n+        groupDAO.authFetch(groupMod.getKey());\n+\n+        // Attribute value transformation (if configured)\n+        GroupMod actual = attrTransformer.transform(groupMod);\n+        LOG.debug(\"Transformed: {}\", actual);\n+\n+        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(groupMod);\n+\n+        final GroupTO updatedTO = binder.getGroupTO(updated.getKey());\n+        updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n+        return updatedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_DELETE')\")\n+    @Override\n+    public GroupTO delete(final Long groupKey) {\n+        List<Group> ownedGroups = groupDAO.findOwnedByGroup(groupKey);\n+        if (!ownedGroups.isEmpty()) {\n+            List<String> owned = new ArrayList<>(ownedGroups.size());\n+            for (Group group : ownedGroups) {\n+                owned.add(group.getKey() + \" \" + group.getName());\n+            }\n+\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.GroupOwnership);\n+            sce.getElements().addAll(owned);\n+            throw sce;\n+        }\n+\n+        List<PropagationStatus> statuses = provisioningManager.delete(groupKey);\n+\n+        GroupTO groupTO = new GroupTO();\n+        groupTO.setKey(groupKey);\n+\n+        groupTO.getPropagationStatusTOs().addAll(statuses);\n+\n+        return groupTO;\n+    }\n+\n+    @PreAuthorize(\"(hasRole('GROUP_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE)\")\n+    public BulkActionResult bulk(final BulkAction bulkAction) {\n+        BulkActionResult res = new BulkActionResult();\n+\n+        if (bulkAction.getOperation() == BulkAction.Type.DELETE) {\n+            for (String groupKey : bulkAction.getTargets()) {\n+                try {\n+                    res.add(delete(Long.valueOf(groupKey)).getKey(), BulkActionResult.Status.SUCCESS);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error performing delete for group {}\", groupKey, e);\n+                    res.add(groupKey, BulkActionResult.Status.FAILURE);\n+                }\n+            }\n+        } else {\n+            LOG.warn(\"Unsupported bulk action: {}\", bulkAction.getOperation());\n+        }\n+\n+        return res;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO unlink(final Long groupKey, final Collection<String> resources) {\n+        final GroupMod groupMod = new GroupMod();\n+        groupMod.setKey(groupKey);\n+        groupMod.getResourcesToRemove().addAll(resources);\n+        final Long updatedResult = provisioningManager.unlink(groupMod);\n+\n+        return binder.getGroupTO(updatedResult);\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO link(final Long groupKey, final Collection<String> resources) {\n+        final GroupMod groupMod = new GroupMod();\n+        groupMod.setKey(groupKey);\n+        groupMod.getResourcesToAdd().addAll(resources);\n+        return binder.getGroupTO(provisioningManager.link(groupMod));\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO unassign(final Long groupKey, final Collection<String> resources) {\n+        final GroupMod groupMod = new GroupMod();\n+        groupMod.setKey(groupKey);\n+        groupMod.getResourcesToRemove().addAll(resources);\n+        return update(groupMod);\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO assign(\n+            final Long groupKey, final Collection<String> resources, final boolean changePwd, final String password) {\n+\n+        final GroupMod userMod = new GroupMod();\n+        userMod.setKey(groupKey);\n+        userMod.getResourcesToAdd().addAll(resources);\n+        return update(userMod);\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO deprovision(final Long groupKey, final Collection<String> resources) {\n+        final Group group = groupDAO.authFetch(groupKey);\n+\n+        List<PropagationStatus> statuses = provisioningManager.deprovision(groupKey, resources);\n+\n+        final GroupTO updatedTO = binder.getGroupTO(group);\n+        updatedTO.getPropagationStatusTOs().addAll(statuses);\n+        return updatedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('GROUP_UPDATE')\")\n+    @Transactional(rollbackFor = { Throwable.class })\n+    @Override\n+    public GroupTO provision(\n+            final Long groupKey, final Collection<String> resources, final boolean changePwd, final String password) {\n+        final GroupTO original = binder.getGroupTO(groupKey);\n+\n+        //trick: assign and retrieve propagation statuses ...\n+        original.getPropagationStatusTOs().addAll(\n+                assign(groupKey, resources, changePwd, password).getPropagationStatusTOs());\n+\n+        // .... rollback.\n+        TransactionInterceptor.currentTransactionStatus().setRollbackOnly();\n+        return original;\n+    }\n+\n+    @Override\n+    protected GroupTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n+        Long key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof Long) {\n+                    key = (Long) args[i];\n+                } else if (args[i] instanceof GroupTO) {\n+                    key = ((GroupTO) args[i]).getKey();\n+                } else if (args[i] instanceof GroupMod) {\n+                    key = ((GroupMod) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if ((key != null) && !key.equals(0l)) {\n+            try {\n+                return binder.getGroupTO(key);\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"baeb1ce624c23d113b38581c4b41946b8f2e3384","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtil;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtilFactory;\n@@ -68,7 +68,7 @@ public class ResourceLogic extends AbstractTransactionalLogic<ResourceTO> {\n     private UserDAO userDAO;\n \n     @Autowired\n-    private RoleDAO roleDAO;\n+    private GroupDAO groupDAO;\n \n     @Autowired\n     private ResourceDataBinder binder;\n@@ -170,7 +170,7 @@ public ConnObjectTO getConnectorObject(final String resourceName, final SubjectT\n \n         Subject<?, ?, ?> subject = type == SubjectType.USER\n                 ? userDAO.find(id)\n-                : roleDAO.find(id);\n+                : groupDAO.find(id);\n         if (subject == null) {\n             throw new NotFoundException(type + \" \" + id);\n         }"},{"sha":"ebacf042fbc0a023404bc661d216a884fb170f88","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RoleLogic.java","status":"removed","additions":0,"deletions":405,"changes":405,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f76826f6e521aa7ca227fdbe135f3a6771161eab/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f76826f6e521aa7ca227fdbe135f3a6771161eab/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRoleLogic.java?ref=f76826f6e521aa7ca227fdbe135f3a6771161eab","patch":"@@ -1,405 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import javax.annotation.Resource;\n-import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.mod.RoleMod;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n-import org.apache.syncope.common.lib.to.RoleTO;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n-import org.apache.syncope.core.persistence.api.dao.SubjectSearchDAO;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.provisioning.api.AttributableTransformer;\n-import org.apache.syncope.core.provisioning.api.RoleProvisioningManager;\n-import org.apache.syncope.core.provisioning.api.data.RoleDataBinder;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.misc.security.AuthContextUtil;\n-import org.apache.syncope.core.misc.security.UnauthorizedRoleException;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n-import org.springframework.transaction.interceptor.TransactionInterceptor;\n-\n-/**\n- * Note that this controller does not extend {@link AbstractTransactionalLogic}, hence does not provide any\n- * Spring's Transactional logic at class level.\n- */\n-@Component\n-public class RoleLogic extends AbstractSubjectLogic<RoleTO, RoleMod> {\n-\n-    @Autowired\n-    protected RoleDAO roleDAO;\n-\n-    @Autowired\n-    protected UserDAO userDAO;\n-\n-    @Autowired\n-    protected SubjectSearchDAO searchDAO;\n-\n-    @Autowired\n-    protected RoleDataBinder binder;\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @Autowired\n-    protected AttributableTransformer attrTransformer;\n-\n-    @Resource(name = \"anonymousUser\")\n-    protected String anonymousUser;\n-\n-    @Autowired\n-    protected RoleProvisioningManager provisioningManager;\n-\n-    @PreAuthorize(\"hasAnyRole('ROLE_READ', T(org.apache.syncope.common.lib.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n-    @Transactional(readOnly = true)\n-    @Override\n-    public RoleTO read(final Long roleKey) {\n-        Role role;\n-        // bypass role entitlements check\n-        if (anonymousUser.equals(AuthContextUtil.getAuthenticatedUsername())) {\n-            role = roleDAO.find(roleKey);\n-        } else {\n-            role = roleDAO.authFetch(roleKey);\n-        }\n-\n-        if (role == null) {\n-            throw new NotFoundException(\"Role \" + roleKey);\n-        }\n-\n-        return binder.getRoleTO(role);\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated() \"\n-            + \"and not(hasRole(T(org.apache.syncope.common.lib.SyncopeConstants).ANONYMOUS_ENTITLEMENT))\")\n-    @Transactional(readOnly = true)\n-    public RoleTO readSelf(final Long roleKey) {\n-        // Explicit search instead of using binder.getRoleFromId() in order to bypass auth checks - will do here\n-        Role role = roleDAO.find(roleKey);\n-        if (role == null) {\n-            throw new NotFoundException(\"Role \" + roleKey);\n-        }\n-\n-        Set<Long> ownedRoleIds;\n-        User authUser = userDAO.find(AuthContextUtil.getAuthenticatedUsername());\n-        if (authUser == null) {\n-            ownedRoleIds = Collections.<Long>emptySet();\n-        } else {\n-            ownedRoleIds = authUser.getRoleKeys();\n-        }\n-\n-        Set<Long> allowedRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-        allowedRoleIds.addAll(ownedRoleIds);\n-        if (!allowedRoleIds.contains(role.getKey())) {\n-            throw new UnauthorizedRoleException(role.getKey());\n-        }\n-\n-        return binder.getRoleTO(role);\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true)\n-    public RoleTO parent(final Long roleKey) {\n-        Role role = roleDAO.authFetch(roleKey);\n-\n-        Set<Long> allowedRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-        if (role.getParent() != null && !allowedRoleIds.contains(role.getParent().getKey())) {\n-            throw new UnauthorizedRoleException(role.getParent().getKey());\n-        }\n-\n-        RoleTO result = role.getParent() == null\n-                ? null\n-                : binder.getRoleTO(role.getParent());\n-\n-        return result;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true)\n-    public List<RoleTO> children(final Long roleKey) {\n-        Role role = roleDAO.authFetch(roleKey);\n-\n-        Set<Long> allowedRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-\n-        List<Role> children = roleDAO.findChildren(role);\n-        List<RoleTO> childrenTOs = new ArrayList<>(children.size());\n-        for (Role child : children) {\n-            if (allowedRoleIds.contains(child.getKey())) {\n-                childrenTOs.add(binder.getRoleTO(child));\n-            }\n-        }\n-\n-        return childrenTOs;\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    @Override\n-    public int count() {\n-        return roleDAO.count();\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true)\n-    @Override\n-    public List<RoleTO> list(final int page, final int size, final List<OrderByClause> orderBy) {\n-        List<Role> roles = roleDAO.findAll(page, size, orderBy);\n-\n-        List<RoleTO> roleTOs = new ArrayList<>(roles.size());\n-        for (Role role : roles) {\n-            roleTOs.add(binder.getRoleTO(role));\n-        }\n-\n-        return roleTOs;\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    @Override\n-    public int searchCount(final SearchCond searchCondition) {\n-        final Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-        return searchDAO.count(adminRoleIds, searchCondition, SubjectType.ROLE);\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    @Override\n-    public List<RoleTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy) {\n-\n-        final List<Role> matchingRoles = searchDAO.search(\n-                RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames()),\n-                searchCondition, page, size, orderBy, SubjectType.ROLE);\n-\n-        final List<RoleTO> result = new ArrayList<>(matchingRoles.size());\n-        for (Role role : matchingRoles) {\n-            result.add(binder.getRoleTO(role));\n-        }\n-\n-        return result;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_CREATE')\")\n-    public RoleTO create(final RoleTO roleTO) {\n-        // Check that this operation is allowed to be performed by caller\n-        Set<Long> allowedRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-        if (roleTO.getParent() != 0 && !allowedRoleIds.contains(roleTO.getParent())) {\n-            throw new UnauthorizedRoleException(roleTO.getParent());\n-        }\n-\n-        // Attributable transformation (if configured)\n-        RoleTO actual = attrTransformer.transform(roleTO);\n-        LOG.debug(\"Transformed: {}\", actual);\n-\n-        /*\n-         * Actual operations: workflow, propagation\n-         */\n-        Map.Entry<Long, List<PropagationStatus>> created = provisioningManager.create(roleTO);\n-        final RoleTO savedTO = binder.getRoleTO(created.getKey());\n-        savedTO.getPropagationStatusTOs().addAll(created.getValue());\n-        return savedTO;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Override\n-    public RoleTO update(final RoleMod roleMod) {\n-        // Check that this operation is allowed to be performed by caller\n-        roleDAO.authFetch(roleMod.getKey());\n-\n-        // Attribute value transformation (if configured)\n-        RoleMod actual = attrTransformer.transform(roleMod);\n-        LOG.debug(\"Transformed: {}\", actual);\n-\n-        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(roleMod);\n-\n-        final RoleTO updatedTO = binder.getRoleTO(updated.getKey());\n-        updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n-        return updatedTO;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_DELETE')\")\n-    @Override\n-    public RoleTO delete(final Long roleKey) {\n-        List<Role> ownedRoles = roleDAO.findOwnedByRole(roleKey);\n-        if (!ownedRoles.isEmpty()) {\n-            List<String> owned = new ArrayList<String>(ownedRoles.size());\n-            for (Role role : ownedRoles) {\n-                owned.add(role.getKey() + \" \" + role.getName());\n-            }\n-\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RoleOwnership);\n-            sce.getElements().addAll(owned);\n-            throw sce;\n-        }\n-\n-        List<PropagationStatus> statuses = provisioningManager.delete(roleKey);\n-\n-        RoleTO roleTO = new RoleTO();\n-        roleTO.setKey(roleKey);\n-\n-        roleTO.getPropagationStatusTOs().addAll(statuses);\n-\n-        return roleTO;\n-    }\n-\n-    @PreAuthorize(\"(hasRole('ROLE_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE)\")\n-    public BulkActionResult bulk(final BulkAction bulkAction) {\n-        BulkActionResult res = new BulkActionResult();\n-\n-        if (bulkAction.getOperation() == BulkAction.Type.DELETE) {\n-            for (String roleKey : bulkAction.getTargets()) {\n-                try {\n-                    res.add(delete(Long.valueOf(roleKey)).getKey(), BulkActionResult.Status.SUCCESS);\n-                } catch (Exception e) {\n-                    LOG.error(\"Error performing delete for role {}\", roleKey, e);\n-                    res.add(roleKey, BulkActionResult.Status.FAILURE);\n-                }\n-            }\n-        } else {\n-            LOG.warn(\"Unsupported bulk action: {}\", bulkAction.getOperation());\n-        }\n-\n-        return res;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO unlink(final Long roleKey, final Collection<String> resources) {\n-        final RoleMod roleMod = new RoleMod();\n-        roleMod.setKey(roleKey);\n-        roleMod.getResourcesToRemove().addAll(resources);\n-        final Long updatedResult = provisioningManager.unlink(roleMod);\n-\n-        return binder.getRoleTO(updatedResult);\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO link(final Long roleKey, final Collection<String> resources) {\n-        final RoleMod roleMod = new RoleMod();\n-        roleMod.setKey(roleKey);\n-        roleMod.getResourcesToAdd().addAll(resources);\n-        return binder.getRoleTO(provisioningManager.link(roleMod));\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO unassign(final Long roleKey, final Collection<String> resources) {\n-        final RoleMod roleMod = new RoleMod();\n-        roleMod.setKey(roleKey);\n-        roleMod.getResourcesToRemove().addAll(resources);\n-        return update(roleMod);\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO assign(\n-            final Long roleKey, final Collection<String> resources, final boolean changePwd, final String password) {\n-\n-        final RoleMod userMod = new RoleMod();\n-        userMod.setKey(roleKey);\n-        userMod.getResourcesToAdd().addAll(resources);\n-        return update(userMod);\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO deprovision(final Long roleKey, final Collection<String> resources) {\n-        final Role role = roleDAO.authFetch(roleKey);\n-\n-        List<PropagationStatus> statuses = provisioningManager.deprovision(roleKey, resources);\n-\n-        final RoleTO updatedTO = binder.getRoleTO(role);\n-        updatedTO.getPropagationStatusTOs().addAll(statuses);\n-        return updatedTO;\n-    }\n-\n-    @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = { Throwable.class })\n-    @Override\n-    public RoleTO provision(\n-            final Long roleKey, final Collection<String> resources, final boolean changePwd, final String password) {\n-        final RoleTO original = binder.getRoleTO(roleKey);\n-\n-        //trick: assign and retrieve propagation statuses ...\n-        original.getPropagationStatusTOs().addAll(\n-                assign(roleKey, resources, changePwd, password).getPropagationStatusTOs());\n-\n-        // .... rollback.\n-        TransactionInterceptor.currentTransactionStatus().setRollbackOnly();\n-        return original;\n-    }\n-\n-    @Override\n-    protected RoleTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n-        Long key = null;\n-\n-        if (ArrayUtils.isNotEmpty(args)) {\n-            for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n-                } else if (args[i] instanceof RoleTO) {\n-                    key = ((RoleTO) args[i]).getKey();\n-                } else if (args[i] instanceof RoleMod) {\n-                    key = ((RoleMod) args[i]).getKey();\n-                }\n-            }\n-        }\n-\n-        if ((key != null) && !key.equals(0l)) {\n-            try {\n-                return binder.getRoleTO(key);\n-            } catch (Throwable ignore) {\n-                LOG.debug(\"Unresolved reference\", ignore);\n-                throw new UnresolvedReferenceException(ignore);\n-            }\n-        }\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-}"},{"sha":"8084cd491fb553fd8237afef308d164b3978a388","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,10 +32,10 @@\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.provisioning.api.AttributableTransformer;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n-import org.apache.syncope.core.provisioning.api.RoleProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.java.notification.NotificationManagerImpl;\n-import org.apache.syncope.core.workflow.api.RoleWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.springframework.aop.support.AopUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -62,13 +62,13 @@ public class SyncopeLogic extends AbstractLogic<SyncopeTO> {\n     private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n-    private RoleWorkflowAdapter rwfAdapter;\n+    private GroupWorkflowAdapter gwfAdapter;\n \n     @Autowired\n     private UserProvisioningManager uProvisioningManager;\n \n     @Autowired\n-    private RoleProvisioningManager rProvisioningManager;\n+    private GroupProvisioningManager gProvisioningManager;\n \n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n@@ -110,10 +110,10 @@ public SyncopeTO info() {\n         syncopeTO.setAttributableTransformer(attrTransformer.getClass().getName());\n \n         syncopeTO.setUserWorkflowAdapter(AopUtils.getTargetClass(uwfAdapter).getName());\n-        syncopeTO.setRoleWorkflowAdapter(AopUtils.getTargetClass(rwfAdapter).getName());\n+        syncopeTO.setGroupWorkflowAdapter(AopUtils.getTargetClass(gwfAdapter).getName());\n \n         syncopeTO.setUserProvisioningManager(uProvisioningManager.getClass().getName());\n-        syncopeTO.setRoleProvisioningManager(rProvisioningManager.getClass().getName());\n+        syncopeTO.setGroupProvisioningManager(gProvisioningManager.getClass().getName());\n \n         syncopeTO.getReportlets().addAll(\n                 classNamesLoader.getClassNames(ImplementationClassNamesLoader.Type.REPORTLET));"},{"sha":"c86525e51ba24dd24e9c98aa4fe47be5f1d699a0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":22,"deletions":23,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import org.apache.syncope.core.misc.security.UnauthorizedRoleException;\n+import org.apache.syncope.core.misc.security.UnauthorizedGroupException;\n import java.lang.reflect.Method;\n import java.security.AccessControlException;\n import java.util.ArrayList;\n@@ -41,14 +41,14 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.AttributableTransformer;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n@@ -74,7 +74,7 @@ public class UserLogic extends AbstractSubjectLogic<UserTO, UserMod> {\n     protected UserDAO userDAO;\n \n     @Autowired\n-    protected RoleDAO roleDAO;\n+    protected GroupDAO groupDAO;\n \n     @Autowired\n     protected SubjectSearchDAO searchDAO;\n@@ -114,24 +114,24 @@ public Long getKey(final String username) {\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public int count() {\n-        return userDAO.count(RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames()));\n+        return userDAO.count(GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames()));\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public int searchCount(final SearchCond searchCondition) {\n-        return searchDAO.count(RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames()),\n+        return searchDAO.count(GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames()),\n                 searchCondition, SubjectType.USER);\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<UserTO> list(final int page, final int size, final List<OrderByClause> orderBy) {\n-        Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n \n-        List<User> users = userDAO.findAll(adminRoleIds, page, size, orderBy);\n+        List<User> users = userDAO.findAll(adminGroupIds, page, size, orderBy);\n         List<UserTO> userTOs = new ArrayList<>(users.size());\n         for (User user : users) {\n             userTOs.add(binder.getUserTO(user));\n@@ -160,8 +160,7 @@ public UserTO read(final Long key) {\n     public List<UserTO> search(final SearchCond searchCondition, final int page, final int size,\n             final List<OrderByClause> orderBy) {\n \n-        final List<User> matchingUsers = searchDAO.search(\n-                RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames()),\n+        final List<User> matchingUsers = searchDAO.search(GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames()),\n                 searchCondition, page, size, orderBy, SubjectType.USER);\n \n         final List<UserTO> result = new ArrayList<>(matchingUsers.size());\n@@ -179,14 +178,14 @@ public UserTO createSelf(final UserTO userTO, final boolean storePassword) {\n \n     @PreAuthorize(\"hasRole('USER_CREATE')\")\n     public UserTO create(final UserTO userTO, final boolean storePassword) {\n-        Set<Long> requestRoleIds = new HashSet<>(userTO.getMemberships().size());\n+        Set<Long> requestGroupIds = new HashSet<>(userTO.getMemberships().size());\n         for (MembershipTO membership : userTO.getMemberships()) {\n-            requestRoleIds.add(membership.getRoleId());\n+            requestGroupIds.add(membership.getGroupId());\n         }\n-        Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(AuthContextUtil.getOwnedEntitlementNames());\n-        requestRoleIds.removeAll(adminRoleIds);\n-        if (!requestRoleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(requestRoleIds);\n+        Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(AuthContextUtil.getOwnedEntitlementNames());\n+        requestGroupIds.removeAll(adminGroupIds);\n+        if (!requestGroupIds.isEmpty()) {\n+            throw new UnauthorizedGroupException(requestGroupIds);\n         }\n \n         return doCreate(userTO, storePassword);\n@@ -321,14 +320,14 @@ public UserTO deleteSelf() {\n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @Override\n     public UserTO delete(final Long key) {\n-        List<Role> ownedRoles = roleDAO.findOwnedByUser(key);\n-        if (!ownedRoles.isEmpty()) {\n-            List<String> owned = new ArrayList<>(ownedRoles.size());\n-            for (Role role : ownedRoles) {\n-                owned.add(role.getKey() + \" \" + role.getName());\n+        List<Group> ownedGroups = groupDAO.findOwnedByUser(key);\n+        if (!ownedGroups.isEmpty()) {\n+            List<String> owned = new ArrayList<>(ownedGroups.size());\n+            for (Group group : ownedGroups) {\n+                owned.add(group.getKey() + \" \" + group.getName());\n             }\n \n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RoleOwnership);\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.GroupOwnership);\n             sce.getElements().addAll(owned);\n             throw sce;\n         }"},{"sha":"8c6426dba618fd0e8afb9c8444fcd23f31272fae","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/WorkflowLogic.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@\n import java.lang.reflect.Method;\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n-import org.apache.syncope.core.workflow.api.RoleWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.WorkflowAdapter;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n@@ -39,7 +39,7 @@ public class WorkflowLogic extends AbstractTransactionalLogic<AbstractBaseBean>\n     private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n-    private RoleWorkflowAdapter rwfAdapter;\n+    private GroupWorkflowAdapter gwfAdapter;\n \n     private void exportDefinition(\n             final WorkflowAdapter adapter, final WorkflowDefinitionFormat format, final OutputStream os)\n@@ -64,10 +64,10 @@ public void exportUserDefinition(final MediaType format, final OutputStream os)\n \n     @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n     @Transactional(readOnly = true)\n-    public void exportRoleDefinition(final MediaType format, final OutputStream os)\n+    public void exportGroupDefinition(final MediaType format, final OutputStream os)\n             throws WorkflowException {\n \n-        exportDefinition(rwfAdapter, getFormat(format), os);\n+        exportDefinition(gwfAdapter, getFormat(format), os);\n     }\n \n     private void exportDiagram(final WorkflowAdapter adapter, final OutputStream os)\n@@ -85,10 +85,10 @@ public void exportUserDiagram(final OutputStream os)\n \n     @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n     @Transactional(readOnly = true)\n-    public void exportRoleDiagram(final OutputStream os)\n+    public void exportGroupDiagram(final OutputStream os)\n             throws WorkflowException {\n \n-        exportDiagram(rwfAdapter, os);\n+        exportDiagram(gwfAdapter, os);\n     }\n \n     private void importDefinition(\n@@ -103,8 +103,8 @@ public void importUserDefinition(final MediaType format, final String definition\n     }\n \n     @PreAuthorize(\"hasRole('WORKFLOW_DEF_UPDATE')\")\n-    public void importRoleDefinition(final MediaType format, final String definition) {\n-        importDefinition(rwfAdapter, getFormat(format), definition);\n+    public void importGroupDefinition(final MediaType format, final String definition) {\n+        importDefinition(gwfAdapter, getFormat(format), definition);\n     }\n \n     @Override"},{"sha":"38c96c6470d71522a0689c54d81ba04661386521","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"renamed","additions":41,"deletions":40,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,63 +24,64 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.report.RoleReportletConf;\n-import org.apache.syncope.common.lib.report.RoleReportletConf.Feature;\n+import org.apache.syncope.common.lib.report.GroupReportletConf;\n+import org.apache.syncope.common.lib.report.GroupReportletConf.Feature;\n import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n import org.apache.syncope.core.persistence.api.dao.EntitlementDAO;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n-import org.apache.syncope.core.provisioning.java.data.RoleDataBinderImpl;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.misc.search.SearchCondConverter;\n+import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n import org.xml.sax.helpers.AttributesImpl;\n \n-@ReportletConfClass(RoleReportletConf.class)\n-public class RoleReportlet extends AbstractReportlet<RoleReportletConf> {\n+@ReportletConfClass(GroupReportletConf.class)\n+public class GroupReportlet extends AbstractReportlet<GroupReportletConf> {\n \n     private static final int PAGE_SIZE = 10;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n     @Autowired\n-    private RoleDAO roleDAO;\n+    private GroupDAO groupDAO;\n \n     @Autowired\n     private SubjectSearchDAO searchDAO;\n \n     @Autowired\n-    private RoleDataBinderImpl roleDataBinder;\n+    private GroupDataBinder groupDataBinder;\n \n-    private List<Role> getPagedRoles(final int page) {\n-        final Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(entitlementDAO.findAll());\n-        final List<Role> result;\n+    private List<Group> getPagedgroups(final int page) {\n+        final Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(entitlementDAO.findAll());\n+        final List<Group> result;\n         if (StringUtils.isBlank(conf.getMatchingCond())) {\n-            result = roleDAO.findAll();\n+            result = groupDAO.findAll();\n         } else {\n-            result = searchDAO.search(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n-                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(), SubjectType.ROLE);\n+            result = searchDAO.search(adminGroupIds, SearchCondConverter.convert(conf.getMatchingCond()),\n+                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(), SubjectType.GROUP);\n         }\n \n         return result;\n     }\n \n     private int count() {\n-        Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(entitlementDAO.findAll());\n+        Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(entitlementDAO.findAll());\n \n         return StringUtils.isBlank(conf.getMatchingCond())\n-                ? roleDAO.findAll().size()\n-                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.ROLE);\n+                ? groupDAO.findAll().size()\n+                : searchDAO.count(adminGroupIds,\n+                        SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.GROUP);\n     }\n \n     private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)\n@@ -188,11 +189,11 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n     }\n \n-    private void doExtract(final ContentHandler handler, final List<Role> roles)\n+    private void doExtract(final ContentHandler handler, final List<Group> groups)\n             throws SAXException, ReportException {\n \n         AttributesImpl atts = new AttributesImpl();\n-        for (Role role : roles) {\n+        for (Group group : groups) {\n             atts.clear();\n \n             for (Feature feature : conf.getFeatures()) {\n@@ -201,22 +202,22 @@ private void doExtract(final ContentHandler handler, final List<Role> roles)\n                 switch (feature) {\n                     case key:\n                         type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(role.getKey());\n+                        value = String.valueOf(group.getKey());\n                         break;\n \n                     case name:\n                         type = ReportXMLConst.XSD_STRING;\n-                        value = String.valueOf(role.getName());\n+                        value = String.valueOf(group.getName());\n                         break;\n \n-                    case roleOwner:\n+                    case groupOwner:\n                         type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(role.getRoleOwner());\n+                        value = String.valueOf(group.getGroupOwner());\n                         break;\n \n                     case userOwner:\n                         type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(role.getUserOwner());\n+                        value = String.valueOf(group.getUserOwner());\n                         break;\n \n                     default:\n@@ -227,18 +228,18 @@ private void doExtract(final ContentHandler handler, final List<Role> roles)\n                 }\n             }\n \n-            handler.startElement(\"\", \"\", \"role\", atts);\n+            handler.startElement(\"\", \"\", \"group\", atts);\n \n-            // Using RoleTO for attribute values, since the conversion logic of\n+            // Using GroupTO for attribute values, since the conversion logic of\n             // values to String is already encapsulated there\n-            RoleTO roleTO = roleDataBinder.getRoleTO(role);\n+            GroupTO groupTO = groupDataBinder.getGroupTO(group);\n \n-            doExtractAttributes(handler, roleTO, conf.getPlainAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n+            doExtractAttributes(handler, groupTO, conf.getPlainAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n \n             if (conf.getFeatures().contains(Feature.entitlements)) {\n                 handler.startElement(\"\", \"\", \"entitlements\", null);\n \n-                for (String ent : roleTO.getEntitlements()) {\n+                for (String ent : groupTO.getEntitlements()) {\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"id\", ReportXMLConst.XSD_STRING, String.valueOf(ent));\n@@ -249,15 +250,15 @@ private void doExtract(final ContentHandler handler, final List<Role> roles)\n \n                 handler.endElement(\"\", \"\", \"entitlements\");\n             }\n-            // to get resources associated to a role\n+            // to get resources associated to a group\n             if (conf.getFeatures().contains(Feature.resources)) {\n-                doExtractResources(handler, roleTO);\n+                doExtractResources(handler, groupTO);\n             }\n-            //to get users asscoiated to a role is preferred RoleDAO to RoleTO\n+            //to get users asscoiated to a group is preferred GroupDAO to GroupTO\n             if (conf.getFeatures().contains(Feature.users)) {\n                 handler.startElement(\"\", \"\", \"users\", null);\n \n-                for (Membership memb : roleDAO.findMemberships(role)) {\n+                for (Membership memb : groupDAO.findMemberships(group)) {\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"key\", ReportXMLConst.XSD_LONG,\n@@ -272,7 +273,7 @@ private void doExtract(final ContentHandler handler, final List<Role> roles)\n                 handler.endElement(\"\", \"\", \"users\");\n             }\n \n-            handler.endElement(\"\", \"\", \"role\");\n+            handler.endElement(\"\", \"\", \"group\");\n         }\n     }\n \n@@ -283,7 +284,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n \n         AttributesImpl atts = new AttributesImpl();\n         handler.startElement(\"\", \"\", \"configurations\", null);\n-        handler.startElement(\"\", \"\", \"roleAttributes\", atts);\n+        handler.startElement(\"\", \"\", \"groupAttributes\", atts);\n \n         for (Feature feature : conf.getFeatures()) {\n             atts.clear();\n@@ -313,15 +314,15 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n             handler.endElement(\"\", \"\", \"virAttribute\");\n         }\n \n-        handler.endElement(\"\", \"\", \"roleAttributes\");\n+        handler.endElement(\"\", \"\", \"groupAttributes\");\n         handler.endElement(\"\", \"\", \"configurations\");\n     }\n \n     @Override\n     protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n         doExtractConf(handler);\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n-            doExtract(handler, getPagedRoles(i));\n+            doExtract(handler, getPagedgroups(i));\n         }\n     }\n }","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/RoleReportlet.java"},{"sha":"f0023fc31263d5058b906baa2d7ef5c0ec789832","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n import org.apache.syncope.core.persistence.api.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.api.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -41,7 +41,7 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.misc.search.SearchCondConverter;\n import org.apache.syncope.core.misc.DataFormat;\n-import org.apache.syncope.core.provisioning.api.data.RoleDataBinder;\n+import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.xml.sax.ContentHandler;\n@@ -66,28 +66,28 @@ public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n     private UserDataBinder userDataBinder;\n \n     @Autowired\n-    private RoleDataBinder roleDataBinder;\n+    private GroupDataBinder groupDataBinder;\n \n     private List<User> getPagedUsers(final int page) {\n-        final Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(entitlementDAO.findAll());\n+        final Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(entitlementDAO.findAll());\n \n         final List<User> result;\n         if (StringUtils.isBlank(conf.getMatchingCond())) {\n-            result = userDAO.findAll(adminRoleIds, page, PAGE_SIZE);\n+            result = userDAO.findAll(adminGroupIds, page, PAGE_SIZE);\n         } else {\n-            result = searchDAO.search(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n+            result = searchDAO.search(adminGroupIds, SearchCondConverter.convert(conf.getMatchingCond()),\n                     page, PAGE_SIZE, Collections.<OrderByClause>emptyList(), SubjectType.USER);\n         }\n \n         return result;\n     }\n \n     private int count() {\n-        Set<Long> adminRoleIds = RoleEntitlementUtil.getRoleKeys(entitlementDAO.findAll());\n+        Set<Long> adminGroupIds = GroupEntitlementUtil.getGroupKeys(entitlementDAO.findAll());\n \n         return StringUtils.isBlank(conf.getMatchingCond())\n-                ? userDAO.count(adminRoleIds)\n-                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.USER);\n+                ? userDAO.count(adminGroupIds)\n+                : searchDAO.count(adminGroupIds, SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.USER);\n     }\n \n     private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)\n@@ -280,20 +280,20 @@ private void doExtract(final ContentHandler handler, final List<User> users)\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"id\", ReportXMLConst.XSD_LONG, String.valueOf(memb.getKey()));\n-                    atts.addAttribute(\"\", \"\", \"roleId\", ReportXMLConst.XSD_LONG, String.valueOf(memb.getRoleId()));\n-                    atts.addAttribute(\"\", \"\", \"roleName\", ReportXMLConst.XSD_STRING, String.valueOf(memb.getRoleName()));\n+                    atts.addAttribute(\"\", \"\", \"groupId\", ReportXMLConst.XSD_LONG, String.valueOf(memb.getGroupId()));\n+                    atts.addAttribute(\"\", \"\", \"groupName\", ReportXMLConst.XSD_STRING, String.valueOf(memb.getGroupName()));\n                     handler.startElement(\"\", \"\", \"membership\", atts);\n \n                     doExtractAttributes(handler, memb, memb.getPlainAttrMap().keySet(), memb.getDerAttrMap()\n                             .keySet(), memb.getVirAttrMap().keySet());\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n-                        Membership actualMemb = user.getMembership(memb.getRoleId());\n+                        Membership actualMemb = user.getMembership(memb.getGroupId());\n                         if (actualMemb == null) {\n-                            LOG.warn(\"Unexpected: cannot find membership for role {} for user {}\", memb.getRoleId(),\n+                            LOG.warn(\"Unexpected: cannot find membership for group {} for user {}\", memb.getGroupId(),\n                                     user);\n                         } else {\n-                            doExtractResources(handler, roleDataBinder.getRoleTO(actualMemb.getRole()));\n+                            doExtractResources(handler, groupDataBinder.getGroupTO(actualMemb.getGroup()));\n                         }\n                     }\n "},{"sha":"06730dc2d2b9a9a2f38099f4421d1a26c5192d0b","filename":"core/logic/src/main/resources/report/groupReportlet2csv.xsl","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2csv.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,14 +23,14 @@ under the License.\n \n   <xsl:variable name=\"delimiter\" select=\"';'\"/>\n   \n-  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.RoleReportlet']\">\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.GroupReportlet']\">\n     \n     <xsl:call-template name=\"header\">\n-      <xsl:with-param name=\"node\" select=\"configurations/roleAttributes\"/>\n+      <xsl:with-param name=\"node\" select=\"configurations/groupAttributes\"/>\n     </xsl:call-template>\n-    <xsl:for-each select=\"role\">\n-      <xsl:call-template name=\"roleAttributes\">\n-        <xsl:with-param name=\"header\" select=\"../configurations/roleAttributes\"/>\n+    <xsl:for-each select=\"group\">\n+      <xsl:call-template name=\"groupAttributes\">\n+        <xsl:with-param name=\"header\" select=\"../configurations/groupAttributes\"/>\n         <xsl:with-param name=\"attrs\" select=\".\"/>\n       </xsl:call-template>\n       <xsl:text>&#10;</xsl:text>\n@@ -48,7 +48,7 @@ under the License.\n     <xsl:text>&#10;</xsl:text>\n   </xsl:template>\n     \n-  <xsl:template name=\"roleAttributes\">\n+  <xsl:template name=\"groupAttributes\">\n     <xsl:param name=\"header\"/>\n     <xsl:param name=\"attrs\"/>\n     \n@@ -57,9 +57,9 @@ under the License.\n       \n       <xsl:choose> \n         <xsl:when test=\"string-length($attrs/@*[name()=$nameAttr]) &gt; 0\">\n-          <xsl:variable name=\"roleAttr\" select=\"$attrs/@*[name()=$nameAttr]\"/>\n+          <xsl:variable name=\"groupAttr\" select=\"$attrs/@*[name()=$nameAttr]\"/>\n           <xsl:text>\"</xsl:text>\n-          <xsl:value-of select=\"$roleAttr/.\"/>\n+          <xsl:value-of select=\"$groupAttr/.\"/>\n           <xsl:text>\"</xsl:text>\n         </xsl:when>\n         <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='entitlement']) ","previous_filename":"core/logic/src/main/resources/report/roleReportlet2csv.xsl"},{"sha":"c83eb3137aef0fc5d61f3cf617c013be79bc3bc8","filename":"core/logic/src/main/resources/report/groupReportlet2fo.xsl","status":"renamed","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2fo.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,12 +21,12 @@ under the License.\n                 xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n                 version=\"1.0\">\n \n-  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.RoleReportlet']\">\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.GroupReportlet']\">\n    \n     <fo:block font-size=\"16pt\" font-weight=\"bold\" space-after=\"0.5cm\" space-before=\"5mm\">Reportlet: <xsl:value-of select=\"@name\"/></fo:block>\n         \n-    <xsl:for-each select=\"role\">\n-      <fo:block font-size=\"14pt\" font-weight=\"bold\" space-before=\"15mm\" space-after=\"5mm\" background-color=\"(#8888ff)\">Role <xsl:value-of select=\"@name\"/></fo:block>\n+    <xsl:for-each select=\"group\">\n+      <fo:block font-size=\"14pt\" font-weight=\"bold\" space-before=\"15mm\" space-after=\"5mm\" background-color=\"(#8888ff)\">Group <xsl:value-of select=\"@name\"/></fo:block>\n       <fo:table table-layout=\"fixed\" space-after=\"7mm\">\n         <fo:table-column/>\n         <fo:table-column/>\n@@ -41,14 +41,14 @@ under the License.\n               </fo:block>\n             </fo:table-cell>\n           </fo:table-row>\n-          <xsl:if test=\"@roleOwner != 'null'\">\n+          <xsl:if test=\"@groupOwner != 'null'\">\n             <fo:table-row background-color=\"(#ccccff)\">\n               <fo:table-cell>\n-                <fo:block>Role Owner:</fo:block>\n+                <fo:block>Group Owner:</fo:block>\n               </fo:table-cell>\n               <fo:table-cell>\n                 <fo:block font-style=\"italic\">\n-                  <xsl:value-of select=\"@roleOwner\"/>\n+                  <xsl:value-of select=\"@groupOwner\"/>\n                 </fo:block>\n               </fo:table-cell>\n             </fo:table-row>\n@@ -75,7 +75,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS ROLE HASN'T ANY ATTRIBUTE</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS GROUP HASN'T ANY ATTRIBUTE</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n@@ -87,7 +87,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS ROLE HASN'T ANY DERIVED ATTRIBUTE</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS GROUP HASN'T ANY DERIVED ATTRIBUTE</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n       <xsl:choose>\n@@ -98,7 +98,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS ROLE HASN'T ANY VIRTUAL ATTRIBUTE</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS GROUP HASN'T ANY VIRTUAL ATTRIBUTE</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n@@ -111,7 +111,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS ROLE HASN'T ANY ENTITLEMENT</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS GROUP HASN'T ANY ENTITLEMENT</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n@@ -124,10 +124,10 @@ under the License.\n           </xsl:for-each> \n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS ROLE HASN'T ANY USER ASSIGNED TO</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS GROUP HASN'T ANY USER ASSIGNED TO</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n-      <xsl:call-template name=\"roleResources\">\n+      <xsl:call-template name=\"groupResources\">\n         <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n       </xsl:call-template>\n     </xsl:for-each>\n@@ -215,14 +215,14 @@ under the License.\n     </fo:table>\n   </xsl:template>\n   \n-  <xsl:template name=\"roleResources\">\n+  <xsl:template name=\"groupResources\">\n     <xsl:param name=\"node\"/>\n-    <fo:block font-size=\"11pt\" font-weight=\"bold\" space-after=\"3mm\" space-before=\"5mm\">Role Resources</fo:block>\n+    <fo:block font-size=\"11pt\" font-weight=\"bold\" space-after=\"3mm\" space-before=\"5mm\">Group Resources</fo:block>\n     <xsl:for-each select=\"$node\">\n       <fo:block></fo:block> <!--            <fo:block>&#x2022;</fo:block>-->\n       <fo:block background-color=\"(#ccccff)\">\n         <xsl:value-of select=\"@name\"/>\n       </fo:block>\n     </xsl:for-each>\n   </xsl:template>\n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>","previous_filename":"core/logic/src/main/resources/report/roleReportlet2fo.xsl"},{"sha":"ce36c6bcedcdce18ba7a8e020fe6121de2b9c25d","filename":"core/logic/src/main/resources/report/groupReportlet2html.xsl","status":"renamed","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FgroupReportlet2html.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,10 +20,10 @@ under the License.\n <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n                 version=\"1.0\">\n \n-  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.RoleReportlet']\">\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.GroupReportlet']\">\n     <h2>Reportlet: <xsl:value-of select=\"@name\"/></h2>\n-    <xsl:for-each select=\"role\">\n-      <h3>Role <xsl:value-of select=\"@name\"/></h3>\n+    <xsl:for-each select=\"group\">\n+      <h3>Group <xsl:value-of select=\"@name\"/></h3>\n       \n       <table style=\"border: 1px solid black;\">\n         <tr>\n@@ -32,11 +32,11 @@ under the License.\n             <xsl:value-of select=\"@id\"/>\n           </td>\n         </tr>\n-        <xsl:if test=\"@roleOwner != 'null'\"> <!--!= null test=\"not(USER/FIRSTNAME)\" -->\n+        <xsl:if test=\"@groupOwner != 'null'\"> <!--!= null test=\"not(USER/FIRSTNAME)\" -->\n           <tr>\n-            <td>Role Owner:</td>\n+            <td>Group Owner:</td>\n             <td>\n-              <xsl:value-of select=\"@roleOwner\"/>\n+              <xsl:value-of select=\"@groupOwner\"/>\n             </td>\n           </tr>\n         </xsl:if>\n@@ -59,7 +59,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS ROLE HASN'T ANY ATTRIBUTE</h5>\n+          <h5>THIS GROUP HASN'T ANY ATTRIBUTE</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n \n@@ -71,7 +71,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS ROLE HASN'T ANY DERIVED ATTRIBUTE</h5>\n+          <h5>THIS GROUP HASN'T ANY DERIVED ATTRIBUTE</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n       <!--</xsl:if>-->\n@@ -83,7 +83,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS ROLE HASN'T ANY VIRTUAL ATTRIBUTE</h5>\n+          <h5>THIS GROUP HASN'T ANY VIRTUAL ATTRIBUTE</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n@@ -95,7 +95,7 @@ under the License.\n           </xsl:call-template>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS ROLE HASN'T ANY ENTITLEMENT</h5>\n+          <h5>THIS GROUP HASN'T ANY ENTITLEMENT</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n@@ -107,11 +107,11 @@ under the License.\n           </xsl:for-each>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS ROLE HASN'T ANY USER ASSIGNED TO</h5>\n+          <h5>THIS GROUP HASN'T ANY USER ASSIGNED TO</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n       \n-      <xsl:call-template name=\"roleResources\">\n+      <xsl:call-template name=\"groupResources\">\n         <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n       </xsl:call-template>\n       <hr/>\n@@ -181,10 +181,10 @@ under the License.\n     </table>\n   </xsl:template>\n \n-  <xsl:template name=\"roleResources\">\n+  <xsl:template name=\"groupResources\">\n     <xsl:param name=\"node\"/>\n     \n-    <h4>Role Resources</h4>\n+    <h4>Group Resources</h4>\n     <ul>\n       <xsl:for-each select=\"$node\">\n         <li>\n@@ -193,4 +193,4 @@ under the License.\n       </xsl:for-each>\n     </ul>\n   </xsl:template>\n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>","previous_filename":"core/logic/src/main/resources/report/roleReportlet2html.xsl"},{"sha":"a7a0a421fa4afa3a51ddc885880286f6d751fb40","filename":"core/logic/src/main/resources/report/report2csv.xsl","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,7 @@ under the License.\n                 version=\"1.0\">\n \n   <xsl:import href=\"userReportlet2csv.xsl\"/>\n-  <xsl:import href=\"roleReportlet2csv.xsl\"/>\n+  <xsl:import href=\"groupReportlet2csv.xsl\"/>\n   <xsl:import href=\"staticReportlet2csv.xsl\"/>\n  \n   <xsl:param name=\"status\"/>\n@@ -33,4 +33,4 @@ under the License.\n     <xsl:apply-templates/>\n   </xsl:template>\n \n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"e8dcefcb9a10e9cb5ddbd6547c9d73a8e30c6d01","filename":"core/logic/src/main/resources/report/report2fo.xsl","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,7 +22,7 @@ under the License.\n                 version=\"1.0\">\n \n   <xsl:import href=\"userReportlet2fo.xsl\"/>\n-  <xsl:import href=\"roleReportlet2fo.xsl\"/>\n+  <xsl:import href=\"groupReportlet2fo.xsl\"/>\n   <xsl:import href=\"staticReportlet2fo.xsl\"/>\n  \n   <xsl:param name=\"status\"/>\n@@ -94,4 +94,4 @@ under the License.\n     </fo:root>\n   </xsl:template>\n \n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"e18f70d1222bfeee035791961466bf172f434e53","filename":"core/logic/src/main/resources/report/report2html.xsl","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,7 @@ under the License.\n                 version=\"1.0\">\n \n   <xsl:import href=\"userReportlet2html.xsl\"/>\n-  <xsl:import href=\"roleReportlet2html.xsl\"/>\n+  <xsl:import href=\"groupReportlet2html.xsl\"/>\n   <xsl:import href=\"staticReportlet2html.xsl\"/>\n  \n   <xsl:param name=\"status\"/>\n@@ -74,4 +74,4 @@ under the License.\n     </html>\n   </xsl:template>\n \n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"8fd9f51ac41c3ed9fdcf2774d942c7cc5e8ede20","filename":"core/logic/src/main/resources/report/userReportlet2csv.xsl","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -83,9 +83,9 @@ under the License.\n         <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='membership']) \n                         and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n           <xsl:text>\"</xsl:text>       \n-          <xsl:variable name=\"value\" select=\"@roleName\"/>\n+          <xsl:variable name=\"value\" select=\"@groupName\"/>\n           <xsl:for-each select=\"$attrs/*/membership\">\n-            <xsl:variable name=\"value\" select=\"@roleName\"/>\n+            <xsl:variable name=\"value\" select=\"@groupName\"/>\n             <xsl:value-of select=\"$value\"/>\n             <xsl:if test=\"position() != last()\">\n               <xsl:value-of select=\"$delimiter\"/>\n@@ -116,4 +116,4 @@ under the License.\n     </xsl:for-each>\n   </xsl:template>\n   \n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"222229d7d7ba86a06caeb9f9bf9913ced677e714","filename":"core/logic/src/main/resources/report/userReportlet2fo.xsl","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2fo.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -133,7 +133,7 @@ under the License.\n         <xsl:when test=\"string-length(memberships/membership) &gt; 0\">\n           <fo:block font-size=\"11pt\" font-weight=\"bold\">Memberships</fo:block>\n           <xsl:for-each select=\"memberships/membership\">\n-            <fo:block font-size=\"10pt\" font-weight=\"bold\" space-before=\"2mm\">Role: <xsl:value-of select=\"@roleName\"/>(<xsl:value-of select=\"@roleId\"/>)</fo:block>\n+            <fo:block font-size=\"10pt\" font-weight=\"bold\" space-before=\"2mm\">Group: <xsl:value-of select=\"@groupName\"/>(<xsl:value-of select=\"@groupId\"/>)</fo:block>\n             <fo:block start-indent=\"1cm\" space-before=\"3mm\" space-after=\"0.5cm\">\n               <xsl:choose>\n                 <xsl:when test=\"string-length(attributes/attribute) &gt; 0\">\n@@ -143,7 +143,7 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS ROLE HASN'T ANY ATTRIBUTE</fo:block>\n+                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS GROUP HASN'T ANY ATTRIBUTE</fo:block>\n                 </xsl:otherwise>\n               </xsl:choose>\n               <xsl:choose>\n@@ -154,7 +154,7 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS ROLE HASN'T ANY DERIVED ATTRIBUTE</fo:block>\n+                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS GROUP HASN'T ANY DERIVED ATTRIBUTE</fo:block>\n                 </xsl:otherwise>\n               </xsl:choose>\n               <xsl:choose>\n@@ -165,18 +165,18 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS ROLE HASN'T ANY VIRTUAL ATTRIBUTE</fo:block>\n+                  <fo:block color=\"red\" font-size=\"8pt\" space-after=\"2mm\">THIS GROUP HASN'T ANY VIRTUAL ATTRIBUTE</fo:block>\n                 </xsl:otherwise>\n               </xsl:choose>\n-              <!-- 'roleResources\" is defined in roleReportlet2fo.xsl -->\n-              <xsl:call-template name=\"roleResources\">\n+              <!-- 'groupResources\" is defined in groupReportlet2fo.xsl -->\n+              <xsl:call-template name=\"groupResources\">\n                 <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n               </xsl:call-template>\n             </fo:block>\n           </xsl:for-each>\n         </xsl:when>\n         <xsl:otherwise>\n-          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS USER HASN'T BEEN ASSIGNED TO ANY ROLE</fo:block>\n+          <fo:block color=\"red\" font-size=\"9pt\" space-after=\"3mm\">THIS USER HASN'T BEEN ASSIGNED TO ANY GROUP</fo:block>\n         </xsl:otherwise>\n       </xsl:choose>\n       <xsl:call-template name=\"resources\">\n@@ -244,4 +244,4 @@ under the License.\n       </fo:block>\n     </xsl:for-each>\n   </xsl:template>\n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"0a0e5c5aaa1843cff85decb0351920d01669909d","filename":"core/logic/src/main/resources/report/userReportlet2html.xsl","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -110,7 +110,7 @@ under the License.\n         <xsl:when test=\"string-length(memberships/membership) &gt; 0\">\n           <h4>Memberships</h4>\n           <xsl:for-each select=\"memberships/membership\">\n-            <h5>Role: <xsl:value-of select=\"@roleName\"/>(<xsl:value-of select=\"@roleId\"/>)</h5>\n+            <h5>Group: <xsl:value-of select=\"@groupName\"/>(<xsl:value-of select=\"@groupId\"/>)</h5>\n             <blockquote>\n               <xsl:choose>\n                 <xsl:when test=\"string-length(attributes/attribute) &gt; 0\">\n@@ -120,7 +120,7 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <h5>THIS ROLE HASN'T ATTRIBUTES</h5>\n+                  <h5>THIS GROUP HASN'T ATTRIBUTES</h5>\n                 </xsl:otherwise>\n               </xsl:choose>\n               <xsl:choose>\n@@ -131,7 +131,7 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <h5>THIS ROLE HASN'T DERIVED ATTRIBUTES</h5>\n+                  <h5>THIS GROUP HASN'T DERIVED ATTRIBUTES</h5>\n                 </xsl:otherwise>\n               </xsl:choose>\n               <xsl:choose>\n@@ -142,18 +142,18 @@ under the License.\n                   </xsl:call-template>\n                 </xsl:when>\n                 <xsl:otherwise>\n-                  <h5>THIS ROLE HASN'T VIRTUAL ATTRIBUTES</h5>\n+                  <h5>THIS GROUP HASN'T VIRTUAL ATTRIBUTES</h5>\n                 </xsl:otherwise>\n               </xsl:choose>\n-              <!-- 'roleResources\" is defined in roleReportlet2html.xsl -->\n-              <xsl:call-template name=\"roleResources\">\n+              <!-- 'groupResources\" is defined in groupReportlet2html.xsl -->\n+              <xsl:call-template name=\"groupResources\">\n                 <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n               </xsl:call-template>\n             </blockquote>\n           </xsl:for-each>\n         </xsl:when>\n         <xsl:otherwise>\n-          <h5>THIS USER ISN'T ASSIGNED TO A ROLE</h5>\n+          <h5>THIS USER ISN'T ASSIGNED TO A GROUP</h5>\n         </xsl:otherwise>\n       </xsl:choose>\n       <xsl:if test=\"string-length(resources) &gt; 0\">\n@@ -216,4 +216,4 @@ under the License.\n       </xsl:for-each>\n     </ul>\n   </xsl:template>\n-</xsl:stylesheet>\n\\ No newline at end of file\n+</xsl:stylesheet>"},{"sha":"fdf4d11cf0880b8536005a15007ca7fbaf131790","filename":"core/logic/src/test/java/org/apache/syncope/core/logic/NotificationTest.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -39,12 +39,12 @@\n import javax.mail.Store;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.search.RoleFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.NotificationTaskTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.syncope.common.lib.types.IntMappingType;\n@@ -137,7 +137,7 @@ public class NotificationTest {\n     private UserLogic userLogic;\n \n     @Autowired\n-    private RoleLogic roleLogic;\n+    private GroupLogic groupLogic;\n \n     @Autowired\n     private TaskLogic taskLogic;\n@@ -257,8 +257,8 @@ public void notifyByMail() throws Exception {\n         // 1. create suitable notification for subsequent tests\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n-        notification.setUserAbout(new UserFiqlSearchConditionBuilder().hasRoles(7L).query());\n-        notification.setRecipients(new UserFiqlSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setUserAbout(new UserFiqlSearchConditionBuilder().inGroups(7L).query());\n+        notification.setRecipients(new UserFiqlSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -279,7 +279,7 @@ public void notifyByMail() throws Exception {\n         // 2. create user\n         UserTO userTO = getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -315,8 +315,8 @@ public void issueSYNCOPE192() throws Exception {\n         // 1. create suitable notification for subsequent tests\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n-        notification.setUserAbout(new UserFiqlSearchConditionBuilder().hasRoles(7L).query());\n-        notification.setRecipients(new UserFiqlSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setUserAbout(new UserFiqlSearchConditionBuilder().inGroups(7L).query());\n+        notification.setRecipients(new UserFiqlSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -336,7 +336,7 @@ public void issueSYNCOPE192() throws Exception {\n         // 2. create user\n         UserTO userTO = getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -368,7 +368,7 @@ public void notifyByMailEmptyAbout() throws Exception {\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n         notification.setUserAbout(null);\n-        notification.setRecipients(new UserFiqlSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setRecipients(new UserFiqlSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -389,7 +389,7 @@ public void notifyByMailEmptyAbout() throws Exception {\n         // 2. create user\n         UserTO userTO = getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -418,7 +418,7 @@ public void notifyByMailWithRetry() throws Exception {\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n         notification.setUserAbout(null);\n-        notification.setRecipients(new UserFiqlSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setRecipients(new UserFiqlSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -439,7 +439,7 @@ public void notifyByMailWithRetry() throws Exception {\n         // 2. create user\n         UserTO userTO = getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -486,8 +486,8 @@ public void issueSYNCOPE445() throws Exception {\n         // 1. create suitable notification for subsequent tests\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n-        notification.setUserAbout(new UserFiqlSearchConditionBuilder().hasRoles(7L).query());\n-        notification.setRecipients(new UserFiqlSearchConditionBuilder().hasRoles(8L).query());\n+        notification.setUserAbout(new UserFiqlSearchConditionBuilder().inGroups(7L).query());\n+        notification.setRecipients(new UserFiqlSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -510,7 +510,7 @@ public void issueSYNCOPE445() throws Exception {\n         // 2. create user\n         UserTO userTO = getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -545,7 +545,7 @@ public void issueSYNCOPE492() throws Exception {\n         // 1. create suitable disabled notification for subsequent tests\n         Notification notification = entityFactory.newEntity(Notification.class);\n         notification.addEvent(\"[REST]:[UserLogic]:[]:[create]:[SUCCESS]\");\n-        notification.setUserAbout(new UserFiqlSearchConditionBuilder().hasRoles(7L).query());\n+        notification.setUserAbout(new UserFiqlSearchConditionBuilder().inGroups(7L).query());\n         notification.setSelfAsRecipient(true);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -571,7 +571,7 @@ public void issueSYNCOPE492() throws Exception {\n         // 2. create user\n         UserTO userTO = getUniqueSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(7);\n+        membershipTO.setGroupId(7);\n         userTO.getMemberships().add(membershipTO);\n \n         userLogic.create(userTO, true);\n@@ -588,8 +588,8 @@ public void issueSYNCOPE446() throws Exception {\n \n         // 1. create suitable notification for subsequent tests\n         Notification notification = entityFactory.newEntity(Notification.class);\n-        notification.addEvent(\"[REST]:[RoleLogic]:[]:[create]:[SUCCESS]\");\n-        notification.setRoleAbout(new RoleFiqlSearchConditionBuilder().is(\"name\").equalTo(\"role446\").query());\n+        notification.addEvent(\"[REST]:[GroupLogic]:[]:[create]:[SUCCESS]\");\n+        notification.setGroupAbout(new GroupFiqlSearchConditionBuilder().is(\"name\").equalTo(\"group446\").query());\n         notification.setSelfAsRecipient(false);\n \n         notification.setRecipientAttrName(\"email\");\n@@ -609,13 +609,13 @@ public void issueSYNCOPE446() throws Exception {\n \n         notificationDAO.flush();\n \n-        // 2. create role\n-        RoleTO roleTO = new RoleTO();\n-        roleTO.setName(\"role446\");\n-        roleTO.setParent(1L);\n+        // 2. create group\n+        GroupTO groupTO = new GroupTO();\n+        groupTO.setName(\"group446\");\n+        groupTO.setParent(1L);\n \n-        RoleTO createdRole = roleLogic.create(roleTO);\n-        assertNotNull(createdRole);\n+        GroupTO createdGroup = groupLogic.create(groupTO);\n+        assertNotNull(createdGroup);\n \n         // 3. force Quartz job execution and verify e-mail\n         notificationJob.execute(null);"},{"sha":"8590aeeec7d90d4c0fcc349a07128ffd2fa1afc4","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/AuditManager.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -52,30 +52,30 @@ public void audit(\n             final Object output,\n             final Object... input) {\n \n-        final Throwable throwable;\n-        final StringBuilder message = new StringBuilder();\n+        final StringBuilder message = new StringBuilder(32);\n \n-        message.append(\"BEFORE:\\n\");\n-        message.append(\"\\t\").append(before == null ? \"unknown\" : before).append(\"\\n\");\n+        message.append(\"BEFORE:\\n\").\n+                append('\\t').append(before == null ? \"unknown\" : before).append('\\n');\n \n         message.append(\"INPUT:\\n\");\n \n         if (ArrayUtils.isNotEmpty(input)) {\n             for (Object obj : input) {\n-                message.append(\"\\t\").append(obj == null ? null : obj.toString()).append(\"\\n\");\n+                message.append('\\t').append(obj == null ? null : obj.toString()).append('\\n');\n             }\n         } else {\n-            message.append(\"\\t\").append(\"none\").append(\"\\n\");\n+            message.append('\\t').append(\"none\").append('\\n');\n         }\n \n         message.append(\"OUTPUT:\\n\");\n \n+        Throwable throwable;\n         if (output instanceof Throwable) {\n             throwable = (Throwable) output;\n-            message.append(\"\\t\").append(throwable.getMessage());\n+            message.append('\\t').append(throwable.getMessage());\n         } else {\n             throwable = null;\n-            message.append(\"\\t\").append(output == null ? \"none\" : output.toString());\n+            message.append('\\t').append(output == null ? \"none\" : output.toString());\n         }\n \n         AuditLoggerName auditLoggerName = null;\n@@ -93,7 +93,7 @@ public void audit(\n \n                 final SecurityContext ctx = SecurityContextHolder.getContext();\n                 if (ctx != null && ctx.getAuthentication() != null) {\n-                    auditMessage.append('[').append(ctx.getAuthentication().getName()).append(']').append(' ');\n+                    auditMessage.append('[').append(ctx.getAuthentication().getName()).append(\"] \");\n                 }\n                 auditMessage.append(message);\n "},{"sha":"182e2c7c2dcaf280ef6a91d6d2b3ddc0a197dd9b","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtil.java","status":"modified","additions":71,"deletions":75,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -37,7 +37,7 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.AttributableType;\n@@ -46,10 +46,9 @@\n import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.Attributable;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtil;\n@@ -61,15 +60,14 @@\n import org.apache.syncope.core.persistence.api.entity.Subject;\n import org.apache.syncope.core.persistence.api.entity.VirAttr;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n import org.apache.syncope.core.misc.security.Encryptor;\n-import org.apache.syncope.core.misc.security.UnauthorizedRoleException;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.misc.jexl.JexlUtil;\n import org.identityconnectors.common.Base64;\n@@ -102,7 +100,7 @@ public class ConnObjectUtil {\n     private UserDAO userDAO;\n \n     @Autowired\n-    private RoleDAO roleDAO;\n+    private GroupDAO groupDAO;\n \n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n@@ -130,20 +128,20 @@ public ObjectClass fromSubject(final Subject<?, ?, ?> subject) {\n         if (subject instanceof User) {\n             result = ObjectClass.ACCOUNT;\n         }\n-        if (subject instanceof Role) {\n+        if (subject instanceof Group) {\n             result = ObjectClass.GROUP;\n         }\n \n         return result;\n     }\n \n     /**\n-     * Build a UserTO / RoleTO out of connector object attributes and schema mapping.\n+     * Build a UserTO / GroupTO out of connector object attributes and schema mapping.\n      *\n      * @param obj connector object\n      * @param syncTask synchronization task\n      * @param attrUtil AttributableUtil\n-     * @param <T> user/role\n+     * @param <T> user/group\n      * @return UserTO for the user to be created\n      */\n     @Transactional(readOnly = true)\n@@ -164,11 +162,11 @@ public <T extends AbstractSubjectTO> T getSubjectTO(final ConnectorObject obj, f\n             }\n \n             for (MembershipTO memb : userTO.getMemberships()) {\n-                Role role = roleDAO.find(memb.getRoleId());\n-                if (role != null && role.getPasswordPolicy() != null\n-                        && role.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+                Group group = groupDAO.find(memb.getGroupId());\n+                if (group != null && group.getPasswordPolicy() != null\n+                        && group.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n \n-                    ppSpecs.add(role.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                    ppSpecs.add(group.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n                 }\n             }\n \n@@ -203,16 +201,13 @@ public <T extends AbstractSubjectTO> T getSubjectTO(final ConnectorObject obj, f\n      * @param original subject to get diff from\n      * @param syncTask synchronization task\n      * @param attrUtil AttributableUtil\n-     * @param <T> user/role\n-     * @return modifications for the user/role to be updated\n-     * @throws NotFoundException if given id does not correspond to a T instance\n-     * @throws UnauthorizedRoleException if there are no enough entitlements to access the T instance\n+     * @param <T> user/group\n+     * @return modifications for the user/group to be updated\n      */\n     @SuppressWarnings(\"unchecked\")\n     @Transactional(readOnly = true)\n     public <T extends AbstractAttributableMod> T getAttributableMod(final Long key, final ConnectorObject obj,\n-            final AbstractAttributableTO original, final SyncTask syncTask, final AttributableUtil attrUtil)\n-            throws NotFoundException, UnauthorizedRoleException {\n+            final AbstractAttributableTO original, final SyncTask syncTask, final AttributableUtil attrUtil) {\n \n         final AbstractAttributableTO updated = getSubjectTOFromConnObject(obj, syncTask, attrUtil);\n         updated.setKey(key);\n@@ -228,18 +223,18 @@ public <T extends AbstractAttributableMod> T getAttributableMod(final Long key,\n             }\n \n             for (MembershipTO membTO : ((UserTO) updated).getMemberships()) {\n-                Membership memb = user.getMembership(membTO.getRoleId());\n+                Membership memb = user.getMembership(membTO.getGroupId());\n                 if (memb != null) {\n                     membTO.setKey(memb.getKey());\n                 }\n             }\n \n             return (T) AttributableOperations.diff(((UserTO) updated), ((UserTO) original), true);\n         }\n-        if (AttributableType.ROLE == attrUtil.getType()) {\n+        if (AttributableType.GROUP == attrUtil.getType()) {\n             // reading from connector object cannot change entitlements\n-            ((RoleTO) updated).getEntitlements().addAll(((RoleTO) original).getEntitlements());\n-            return (T) AttributableOperations.diff(((RoleTO) updated), ((RoleTO) original), true);\n+            ((GroupTO) updated).getEntitlements().addAll(((GroupTO) original).getEntitlements());\n+            return (T) AttributableOperations.diff(((GroupTO) updated), ((GroupTO) original), true);\n         }\n \n         return null;\n@@ -259,7 +254,7 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n             AttrTO attributeTO;\n             switch (item.getIntMappingType()) {\n                 case UserId:\n-                case RoleId:\n+                case GroupId:\n                     break;\n \n                 case Password:\n@@ -279,19 +274,19 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n                     }\n                     break;\n \n-                case RoleName:\n-                    if (subjectTO instanceof RoleTO) {\n-                        ((RoleTO) subjectTO).setName(attribute == null || attribute.getValue().isEmpty()\n+                case GroupName:\n+                    if (subjectTO instanceof GroupTO) {\n+                        ((GroupTO) subjectTO).setName(attribute == null || attribute.getValue().isEmpty()\n                                 || attribute.getValue().get(0) == null\n                                         ? null\n                                         : attribute.getValue().get(0).toString());\n                     }\n                     break;\n \n-                case RoleOwnerSchema:\n-                    if (subjectTO instanceof RoleTO && attribute != null) {\n+                case GroupOwnerSchema:\n+                    if (subjectTO instanceof GroupTO && attribute != null) {\n                         // using a special attribute (with schema \"\", that will be ignored) for carrying the\n-                        // RoleOwnerSchema value\n+                        // GroupOwnerSchema value\n                         attributeTO = new AttrTO();\n                         attributeTO.setSchema(StringUtils.EMPTY);\n                         if (attribute.getValue().isEmpty() || attribute.getValue().get(0) == null) {\n@@ -300,12 +295,12 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n                             attributeTO.getValues().add(attribute.getValue().get(0).toString());\n                         }\n \n-                        ((RoleTO) subjectTO).getPlainAttrs().add(attributeTO);\n+                        ((GroupTO) subjectTO).getPlainAttrs().add(attributeTO);\n                     }\n                     break;\n \n                 case UserPlainSchema:\n-                case RolePlainSchema:\n+                case GroupPlainSchema:\n                     attributeTO = new AttrTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n \n@@ -335,6 +330,7 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n                                         attrValue.setStringValue(value.toString());\n                                         schemaType = AttrSchemaType.String;\n                                     }\n+                                    break;\n                             }\n                             attributeTO.getValues().add(attrValue.getValueAsString(schemaType));\n                         }\n@@ -344,14 +340,14 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n                     break;\n \n                 case UserDerivedSchema:\n-                case RoleDerivedSchema:\n+                case GroupDerivedSchema:\n                     attributeTO = new AttrTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n                     subjectTO.getDerAttrs().add(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n-                case RoleVirtualSchema:\n+                case GroupVirtualSchema:\n                     attributeTO = new AttrTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n \n@@ -373,7 +369,7 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n \n         // 2. add data from defined template (if any)\n         AbstractSubjectTO template = AttributableType.USER == attrUtil.getType()\n-                ? syncTask.getUserTemplate() : syncTask.getRoleTemplate();\n+                ? syncTask.getUserTemplate() : syncTask.getGroupTemplate();\n \n         if (template != null) {\n             if (template instanceof UserTO) {\n@@ -394,63 +390,63 @@ private <T extends AbstractSubjectTO> T getSubjectTOFromConnObject(final Connect\n                 Map<Long, MembershipTO> currentMembs = ((UserTO) subjectTO).getMembershipMap();\n                 for (MembershipTO membTO : ((UserTO) template).getMemberships()) {\n                     MembershipTO membTBU;\n-                    if (currentMembs.containsKey(membTO.getRoleId())) {\n-                        membTBU = currentMembs.get(membTO.getRoleId());\n+                    if (currentMembs.containsKey(membTO.getGroupId())) {\n+                        membTBU = currentMembs.get(membTO.getGroupId());\n                     } else {\n                         membTBU = new MembershipTO();\n-                        membTBU.setRoleId(membTO.getRoleId());\n+                        membTBU.setGroupId(membTO.getGroupId());\n                         ((UserTO) subjectTO).getMemberships().add(membTBU);\n                     }\n                     fillFromTemplate(membTBU, membTO);\n                 }\n             }\n-            if (template instanceof RoleTO) {\n-                if (StringUtils.isNotBlank(((RoleTO) template).getName())) {\n-                    String evaluated = JexlUtil.evaluate(((RoleTO) template).getName(), subjectTO);\n+            if (template instanceof GroupTO) {\n+                if (StringUtils.isNotBlank(((GroupTO) template).getName())) {\n+                    String evaluated = JexlUtil.evaluate(((GroupTO) template).getName(), subjectTO);\n                     if (StringUtils.isNotBlank(evaluated)) {\n-                        ((RoleTO) subjectTO).setName(evaluated);\n+                        ((GroupTO) subjectTO).setName(evaluated);\n                     }\n                 }\n \n-                if (((RoleTO) template).getParent() != 0) {\n-                    final Role parentRole = roleDAO.find(((RoleTO) template).getParent());\n-                    if (parentRole != null) {\n-                        ((RoleTO) subjectTO).setParent(parentRole.getKey());\n+                if (((GroupTO) template).getParent() != 0) {\n+                    final Group parentGroup = groupDAO.find(((GroupTO) template).getParent());\n+                    if (parentGroup != null) {\n+                        ((GroupTO) subjectTO).setParent(parentGroup.getKey());\n                     }\n                 }\n \n-                if (((RoleTO) template).getUserOwner() != null) {\n-                    final User userOwner = userDAO.find(((RoleTO) template).getUserOwner());\n+                if (((GroupTO) template).getUserOwner() != null) {\n+                    final User userOwner = userDAO.find(((GroupTO) template).getUserOwner());\n                     if (userOwner != null) {\n-                        ((RoleTO) subjectTO).setUserOwner(userOwner.getKey());\n+                        ((GroupTO) subjectTO).setUserOwner(userOwner.getKey());\n                     }\n                 }\n-                if (((RoleTO) template).getRoleOwner() != null) {\n-                    final Role roleOwner = roleDAO.find(((RoleTO) template).getRoleOwner());\n-                    if (roleOwner != null) {\n-                        ((RoleTO) subjectTO).setRoleOwner(roleOwner.getKey());\n+                if (((GroupTO) template).getGroupOwner() != null) {\n+                    final Group groupOwner = groupDAO.find(((GroupTO) template).getGroupOwner());\n+                    if (groupOwner != null) {\n+                        ((GroupTO) subjectTO).setGroupOwner(groupOwner.getKey());\n                     }\n                 }\n \n-                ((RoleTO) subjectTO).getEntitlements().addAll(((RoleTO) template).getEntitlements());\n-\n-                ((RoleTO) subjectTO).getRPlainAttrTemplates().addAll(((RoleTO) template).getRPlainAttrTemplates());\n-                ((RoleTO) subjectTO).getRDerAttrTemplates().addAll(((RoleTO) template).getRDerAttrTemplates());\n-                ((RoleTO) subjectTO).getRVirAttrTemplates().addAll(((RoleTO) template).getRVirAttrTemplates());\n-                ((RoleTO) subjectTO).getMPlainAttrTemplates().addAll(((RoleTO) template).getMPlainAttrTemplates());\n-                ((RoleTO) subjectTO).getMDerAttrTemplates().addAll(((RoleTO) template).getMDerAttrTemplates());\n-                ((RoleTO) subjectTO).getMVirAttrTemplates().addAll(((RoleTO) template).getMVirAttrTemplates());\n-\n-                ((RoleTO) subjectTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n-                ((RoleTO) subjectTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n-\n-                ((RoleTO) subjectTO).setInheritOwner(((RoleTO) template).isInheritOwner());\n-                ((RoleTO) subjectTO).setInheritTemplates(((RoleTO) template).isInheritTemplates());\n-                ((RoleTO) subjectTO).setInheritPlainAttrs(((RoleTO) template).isInheritPlainAttrs());\n-                ((RoleTO) subjectTO).setInheritDerAttrs(((RoleTO) template).isInheritDerAttrs());\n-                ((RoleTO) subjectTO).setInheritVirAttrs(((RoleTO) template).isInheritVirAttrs());\n-                ((RoleTO) subjectTO).setInheritPasswordPolicy(((RoleTO) template).isInheritPasswordPolicy());\n-                ((RoleTO) subjectTO).setInheritAccountPolicy(((RoleTO) template).isInheritAccountPolicy());\n+                ((GroupTO) subjectTO).getEntitlements().addAll(((GroupTO) template).getEntitlements());\n+\n+                ((GroupTO) subjectTO).getGPlainAttrTemplates().addAll(((GroupTO) template).getGPlainAttrTemplates());\n+                ((GroupTO) subjectTO).getGDerAttrTemplates().addAll(((GroupTO) template).getGDerAttrTemplates());\n+                ((GroupTO) subjectTO).getGVirAttrTemplates().addAll(((GroupTO) template).getGVirAttrTemplates());\n+                ((GroupTO) subjectTO).getMPlainAttrTemplates().addAll(((GroupTO) template).getMPlainAttrTemplates());\n+                ((GroupTO) subjectTO).getMDerAttrTemplates().addAll(((GroupTO) template).getMDerAttrTemplates());\n+                ((GroupTO) subjectTO).getMVirAttrTemplates().addAll(((GroupTO) template).getMVirAttrTemplates());\n+\n+                ((GroupTO) subjectTO).setAccountPolicy(((GroupTO) template).getAccountPolicy());\n+                ((GroupTO) subjectTO).setPasswordPolicy(((GroupTO) template).getPasswordPolicy());\n+\n+                ((GroupTO) subjectTO).setInheritOwner(((GroupTO) template).isInheritOwner());\n+                ((GroupTO) subjectTO).setInheritTemplates(((GroupTO) template).isInheritTemplates());\n+                ((GroupTO) subjectTO).setInheritPlainAttrs(((GroupTO) template).isInheritPlainAttrs());\n+                ((GroupTO) subjectTO).setInheritDerAttrs(((GroupTO) template).isInheritDerAttrs());\n+                ((GroupTO) subjectTO).setInheritVirAttrs(((GroupTO) template).isInheritVirAttrs());\n+                ((GroupTO) subjectTO).setInheritPasswordPolicy(((GroupTO) template).isInheritPasswordPolicy());\n+                ((GroupTO) subjectTO).setInheritAccountPolicy(((GroupTO) template).isInheritAccountPolicy());\n             }\n \n             fillFromTemplate(subjectTO, template);\n@@ -533,16 +529,16 @@ public ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n     /**\n      * Query connected external resources for values to populated virtual attributes associated with the given owner.\n      *\n-     * @param owner user or role\n+     * @param owner user or group\n      * @param attrUtil attributable util\n      */\n     public void retrieveVirAttrValues(final Attributable<?, ?, ?> owner, final AttributableUtil attrUtil) {\n         final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n         final ConnectorFactory connFactory = context.getBean(ConnectorFactory.class);\n \n         final IntMappingType type = attrUtil.getType() == AttributableType.USER\n-                ? IntMappingType.UserVirtualSchema : attrUtil.getType() == AttributableType.ROLE\n-                        ? IntMappingType.RoleVirtualSchema : IntMappingType.MembershipVirtualSchema;\n+                ? IntMappingType.UserVirtualSchema : attrUtil.getType() == AttributableType.GROUP\n+                        ? IntMappingType.GroupVirtualSchema : IntMappingType.MembershipVirtualSchema;\n \n         final Map<String, ConnectorObject> externalResources = new HashMap<>();\n "},{"sha":"807565097612e7d276855bf18677267549b310a4","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/MappingUtil.java","status":"modified","additions":47,"deletions":47,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -55,11 +55,11 @@\n import org.apache.syncope.core.persistence.api.entity.membership.MPlainSchema;\n import org.apache.syncope.core.persistence.api.entity.membership.MVirSchema;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.RDerSchema;\n-import org.apache.syncope.core.persistence.api.entity.role.RPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.role.RPlainSchema;\n-import org.apache.syncope.core.persistence.api.entity.role.RVirSchema;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.GDerSchema;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainSchema;\n+import org.apache.syncope.core.persistence.api.entity.group.GVirSchema;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.UDerSchema;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainSchema;\n@@ -133,8 +133,8 @@ public static <T extends MappingItem> Set<T> getMatchingMappingItems(final Colle\n     /**\n      * Prepare attributes for sending to a connector instance.\n      *\n-     * @param attrUtil user / role\n-     * @param subject given user / role\n+     * @param attrUtil user / group\n+     * @param subject given user / group\n      * @param password clear-text password\n      * @param changePwd whether password should be included for propagation attributes or not\n      * @param vAttrsToBeRemoved virtual attributes to be removed\n@@ -172,8 +172,8 @@ public static Map.Entry<String, Set<Attribute>> prepareAttributes(\n             try {\n                 if ((attrUtil.getType() == AttributableType.USER\n                         && mapping.getIntMappingType() == IntMappingType.UserVirtualSchema)\n-                        || (attrUtil.getType() == AttributableType.ROLE\n-                        && mapping.getIntMappingType() == IntMappingType.RoleVirtualSchema)) {\n+                        || (attrUtil.getType() == AttributableType.GROUP\n+                        && mapping.getIntMappingType() == IntMappingType.GroupVirtualSchema)) {\n \n                     LOG.debug(\"Expire entry cache {}-{}\", subject.getKey(), mapping.getIntAttrName());\n                     virAttrCache.expire(attrUtil.getType(), subject.getKey(), mapping.getIntAttrName());\n@@ -272,14 +272,14 @@ private static Map.Entry<String, Attribute> prepareAttr(\n                 }\n                 break;\n \n-            case ROLE:\n+            case GROUP:\n                 if (subject instanceof User) {\n-                    for (Role role : ((User) subject).getRoles()) {\n-                        connObjectUtil.retrieveVirAttrValues(role, attrUtilFactory.getInstance(role));\n-                        attributables.add(role);\n+                    for (Group group : ((User) subject).getGroups()) {\n+                        connObjectUtil.retrieveVirAttrValues(group, attrUtilFactory.getInstance(group));\n+                        attributables.add(group);\n                     }\n                 }\n-                if (subject instanceof Role) {\n+                if (subject instanceof Group) {\n                     attributables.add(subject);\n                 }\n                 break;\n@@ -304,7 +304,7 @@ private static Map.Entry<String, Attribute> prepareAttr(\n \n         switch (mapItem.getIntMappingType()) {\n             case UserPlainSchema:\n-            case RolePlainSchema:\n+            case GroupPlainSchema:\n             case MembershipPlainSchema:\n                 final PlainSchemaDAO plainSchemaDAO = context.getBean(PlainSchemaDAO.class);\n                 schema = plainSchemaDAO.find(mapItem.getIntAttrName(),\n@@ -313,7 +313,7 @@ private static Map.Entry<String, Attribute> prepareAttr(\n                 break;\n \n             case UserVirtualSchema:\n-            case RoleVirtualSchema:\n+            case GroupVirtualSchema:\n             case MembershipVirtualSchema:\n                 VirSchemaDAO virSchemaDAO = context.getBean(VirSchemaDAO.class);\n                 VirSchema virSchema = virSchemaDAO.find(mapItem.getIntAttrName(),\n@@ -402,7 +402,7 @@ private static Map.Entry<String, Attribute> prepareAttr(\n      * Build __NAME__ for propagation. First look if there ia a defined accountLink for the given resource (and in this\n      * case evaluate as JEXL); otherwise, take given accountId.\n      *\n-     * @param subject given user / role\n+     * @param subject given user / group\n      * @param resource target resource\n      * @param accountId accountId\n      * @return the value to be propagated as __NAME__\n@@ -447,7 +447,7 @@ public static Name evaluateNAME(final Subject<?, ?, ?> subject,\n         return name;\n     }\n \n-    private static String getRoleOwnerValue(\n+    private static String getGroupOwnerValue(\n             final ExternalResource resource, final Subject<?, ?, ?> subject) {\n \n         AttributableUtilFactory attrUtilFactory =\n@@ -459,8 +459,8 @@ private static String getRoleOwnerValue(\n                 Collections.<String>emptySet(), Collections.<String, AttrMod>emptyMap());\n         String accountId = preparedAttr.getKey();\n \n-        final Name roleOwnerName = evaluateNAME(subject, resource, accountId);\n-        return roleOwnerName.getNameValue();\n+        final Name groupOwnerName = evaluateNAME(subject, resource, accountId);\n+        return groupOwnerName.getNameValue();\n     }\n \n     /**\n@@ -488,7 +488,7 @@ public static List<PlainAttrValue> getIntValues(final ExternalResource resource,\n         PlainAttrValue attrValue;\n         switch (mappingItem.getIntMappingType()) {\n             case UserPlainSchema:\n-            case RolePlainSchema:\n+            case GroupPlainSchema:\n             case MembershipPlainSchema:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n                     final PlainAttr attr = attributable.getPlainAttr(mappingItem.getIntAttrName());\n@@ -510,7 +510,7 @@ public static List<PlainAttrValue> getIntValues(final ExternalResource resource,\n                 break;\n \n             case UserVirtualSchema:\n-            case RoleVirtualSchema:\n+            case GroupVirtualSchema:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n                     VirAttr virAttr = attributable.getVirAttr(mappingItem.getIntAttrName());\n                     if (virAttr != null) {\n@@ -579,13 +579,13 @@ public static List<PlainAttrValue> getIntValues(final ExternalResource resource,\n                 break;\n \n             case UserDerivedSchema:\n-            case RoleDerivedSchema:\n+            case GroupDerivedSchema:\n             case MembershipDerivedSchema:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n                     DerAttr derAttr = attributable.getDerAttr(mappingItem.getIntAttrName());\n                     if (derAttr != null) {\n-                        attrValue = attributable instanceof Role\n-                                ? entityFactory.newEntity(RPlainAttrValue.class)\n+                        attrValue = attributable instanceof Group\n+                                ? entityFactory.newEntity(GPlainAttrValue.class)\n                                 : entityFactory.newEntity(UPlainAttrValue.class);\n                         attrValue.setStringValue(derAttr.getValue(attributable.getPlainAttrs()));\n                         values.add(attrValue);\n@@ -600,7 +600,7 @@ public static List<PlainAttrValue> getIntValues(final ExternalResource resource,\n                 break;\n \n             case UserId:\n-            case RoleId:\n+            case GroupId:\n             case MembershipId:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n                     attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n@@ -619,31 +619,31 @@ public static List<PlainAttrValue> getIntValues(final ExternalResource resource,\n                 }\n                 break;\n \n-            case RoleName:\n+            case GroupName:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n-                    if (attributable instanceof Role) {\n-                        attrValue = entityFactory.newEntity(RPlainAttrValue.class);\n-                        attrValue.setStringValue(((Role) attributable).getName());\n+                    if (attributable instanceof Group) {\n+                        attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n+                        attrValue.setStringValue(((Group) attributable).getName());\n                         values.add(attrValue);\n                     }\n                 }\n                 break;\n \n-            case RoleOwnerSchema:\n+            case GroupOwnerSchema:\n                 for (Attributable<?, ?, ?> attributable : attributables) {\n-                    if (attributable instanceof Role) {\n-                        Role role = (Role) attributable;\n-                        String roleOwnerValue = null;\n-                        if (role.getUserOwner() != null && resource.getUmapping() != null) {\n-                            roleOwnerValue = getRoleOwnerValue(resource, role.getUserOwner());\n+                    if (attributable instanceof Group) {\n+                        Group group = (Group) attributable;\n+                        String groupOwnerValue = null;\n+                        if (group.getUserOwner() != null && resource.getUmapping() != null) {\n+                            groupOwnerValue = getGroupOwnerValue(resource, group.getUserOwner());\n                         }\n-                        if (role.getRoleOwner() != null && resource.getRmapping() != null) {\n-                            roleOwnerValue = getRoleOwnerValue(resource, role.getRoleOwner());\n+                        if (group.getGroupOwner() != null && resource.getGmapping() != null) {\n+                            groupOwnerValue = getGroupOwnerValue(resource, group.getGroupOwner());\n                         }\n \n-                        if (StringUtils.isNotBlank(roleOwnerValue)) {\n-                            attrValue = entityFactory.newEntity(RPlainAttrValue.class);\n-                            attrValue.setStringValue(roleOwnerValue);\n+                        if (StringUtils.isNotBlank(groupOwnerValue)) {\n+                            attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n+                            attrValue.setStringValue(groupOwnerValue);\n                             values.add(attrValue);\n                         }\n                     }\n@@ -691,8 +691,8 @@ public static Class getIntMappingTypeClass(final IntMappingType intMappingType)\n                 result = UPlainSchema.class;\n                 break;\n \n-            case RolePlainSchema:\n-                result = RPlainSchema.class;\n+            case GroupPlainSchema:\n+                result = GPlainSchema.class;\n                 break;\n \n             case MembershipPlainSchema:\n@@ -703,8 +703,8 @@ public static Class getIntMappingTypeClass(final IntMappingType intMappingType)\n                 result = UDerSchema.class;\n                 break;\n \n-            case RoleDerivedSchema:\n-                result = RDerSchema.class;\n+            case GroupDerivedSchema:\n+                result = GDerSchema.class;\n                 break;\n \n             case MembershipDerivedSchema:\n@@ -715,8 +715,8 @@ public static Class getIntMappingTypeClass(final IntMappingType intMappingType)\n                 result = UVirSchema.class;\n                 break;\n \n-            case RoleVirtualSchema:\n-                result = RVirSchema.class;\n+            case GroupVirtualSchema:\n+                result = GVirSchema.class;\n                 break;\n \n             case MembershipVirtualSchema:"},{"sha":"fe688f3d4f86464b1ad4e65aa2c6ce43f07be368","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/jexl/EmptyClassLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FEmptyClassLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FEmptyClassLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FEmptyClassLoader.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,7 @@ public Class<?> loadClass(final String name) throws ClassNotFoundException {\n     }\n \n     @Override\n-    protected Class<?> loadClass(final String name, boolean resolve) throws ClassNotFoundException {\n+    protected Class<?> loadClass(final String name, final boolean resolve) throws ClassNotFoundException {\n         throw new ClassNotFoundException(\"This classloader won't attemp to load \" + name);\n     }\n "},{"sha":"b624eaa9852b54fa1e5d489c6c5b200bae6988c2","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/jexl/JexlUtil.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -48,28 +48,24 @@\n  */\n public final class JexlUtil {\n \n-    /**\n-     * Logger.\n-     *\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(JexlUtil.class);\n \n     private static final String[] IGNORE_FIELDS = { \"password\", \"clearPassword\", \"serialVersionUID\", \"class\" };\n \n-    private static JexlEngine jexlEngine;\n+    private static JexlEngine JEXL_ENGINE;\n \n     private static JexlEngine getEngine() {\n         synchronized (LOG) {\n-            if (jexlEngine == null) {\n-                jexlEngine = new JexlEngine(new ClassFreeUberspectImpl(null), null, null, null);\n-                jexlEngine.setClassLoader(new EmptyClassLoader());\n-                jexlEngine.setCache(512);\n-                jexlEngine.setLenient(true);\n-                jexlEngine.setSilent(false);\n+            if (JEXL_ENGINE == null) {\n+                JEXL_ENGINE = new JexlEngine(new ClassFreeUberspectImpl(null), null, null, null);\n+                JEXL_ENGINE.setClassLoader(new EmptyClassLoader());\n+                JEXL_ENGINE.setCache(512);\n+                JEXL_ENGINE.setLenient(true);\n+                JEXL_ENGINE.setSilent(false);\n             }\n         }\n \n-        return jexlEngine;\n+        return JEXL_ENGINE;\n     }\n \n     public static boolean isExpressionValid(final String expression) {"},{"sha":"ab0e7fbc32c381df7758f2ffcfaffd16680851eb","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/policy/AccountPolicyEnforcer.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FAccountPolicyEnforcer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,9 +35,7 @@ public class AccountPolicyEnforcer implements PolicyEnforcer<AccountPolicySpec,\n     private UserSuspender userSuspender;\n \n     @Override\n-    public void enforce(final AccountPolicySpec policy, final PolicyType type, final User user)\n-            throws AccountPolicyException, PolicyEnforceException {\n-\n+    public void enforce(final AccountPolicySpec policy, final PolicyType type, final User user) {\n         if (user.getUsername() == null) {\n             throw new PolicyEnforceException(\"Invalid account\");\n         }"},{"sha":"41a6bb64c67c94fe2ffee08c64e7df82d28f1d33","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/policy/PasswordPolicyEnforcer.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPasswordPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPasswordPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPasswordPolicyEnforcer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,9 +27,7 @@\n public class PasswordPolicyEnforcer implements PolicyEnforcer<PasswordPolicySpec, User> {\n \n     @Override\n-    public void enforce(final PasswordPolicySpec policy, final PolicyType type, final User user)\n-            throws PasswordPolicyException, PolicyEnforceException {\n-\n+    public void enforce(final PasswordPolicySpec policy, final PolicyType type, final User user) {\n         final String clearPassword = user.getClearPassword();\n         final String password = user.getPassword();\n "},{"sha":"c8274a44c608d1338caa9426336c7437c192a74b","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/policy/PolicyEnforcer.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEnforcer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.core.misc.policy;\n \n-import java.io.InvalidObjectException;\n-\n import org.apache.syncope.common.lib.types.PolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n public interface PolicyEnforcer<T extends PolicySpec, E> {\n \n-    void enforce(final T policy, final PolicyType type, final E object)\n-            throws InvalidObjectException, PolicyException;\n+    void enforce(final T policy, final PolicyType type, final E object);\n }"},{"sha":"e6756ad69f6327c60dabc52b3f8641eccea085d7","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/search/SearchCondConverter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverter.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.cxf.jaxrs.ext.search.SearchBean;\n import org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser;\n-import org.apache.syncope.common.lib.search.SyncopeFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n \n /**\n@@ -37,7 +37,7 @@ public final class SearchCondConverter {\n      */\n     public static SearchCond convert(final String fiqlExpression) {\n         FiqlParser<SearchBean> fiqlParser = new FiqlParser<SearchBean>(\n-                SearchBean.class, SyncopeFiqlSearchConditionBuilder.CONTEXTUAL_PROPERTIES);\n+                SearchBean.class, AbstractFiqlSearchConditionBuilder.CONTEXTUAL_PROPERTIES);\n         SearchCondVisitor searchCondVisitor = new SearchCondVisitor();\n \n         searchCondVisitor.visit(fiqlParser.parse(fiqlExpression));"},{"sha":"949dee7940266dcc33df5c884c5ca42308294f32","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/search/SearchCondVisitor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -28,7 +28,7 @@\n import org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor;\n import org.apache.syncope.common.lib.search.SearchableFields;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.EntitlementCond;\n@@ -47,7 +47,7 @@ public class SearchCondVisitor extends AbstractSearchConditionVisitor<SearchBean\n     static {\n         ATTRIBUTABLE_FIELDS = new ArrayList<String>();\n         ATTRIBUTABLE_FIELDS.addAll(SearchableFields.get(UserTO.class));\n-        ATTRIBUTABLE_FIELDS.addAll(SearchableFields.get(RoleTO.class));\n+        ATTRIBUTABLE_FIELDS.addAll(SearchableFields.get(GroupTO.class));\n     }\n \n     private SearchCond searchCond;\n@@ -96,9 +96,9 @@ private SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n                     leaf = SearchCond.getLeafCond(attributeCond);\n                 } else {\n                     switch (specialAttrName) {\n-                        case ROLES:\n+                        case GROUPS:\n                             MembershipCond membershipCond = new MembershipCond();\n-                            membershipCond.setRoleId(Long.valueOf(value));\n+                            membershipCond.setGroupId(Long.valueOf(value));\n                             leaf = SearchCond.getLeafCond(membershipCond);\n                             break;\n "},{"sha":"d88c353e7811e6e4be96bedc1608c84a3e6376c8","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/AuthContextUtil.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthContextUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthContextUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthContextUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -52,15 +52,15 @@ public static Set<String> getOwnedEntitlementNames() {\n     }\n \n     /**\n-     * Extend the current authentication context to include the given role.\n+     * Extend the current authentication context to include the given group.\n      *\n-     * @param roleKey role key\n-     * @param roleEntitlement role entitlement\n+     * @param groupKey group key\n+     * @param groupEntitlement group entitlement\n      */\n-    public static void extendAuthContext(final Long roleKey, final String roleEntitlement) {\n+    public static void extendAuthContext(final Long groupKey, final String groupEntitlement) {\n         Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n         List<GrantedAuthority> authorities = new ArrayList<>(auth.getAuthorities());\n-        authorities.add(new SimpleGrantedAuthority(roleEntitlement));\n+        authorities.add(new SimpleGrantedAuthority(groupEntitlement));\n         Authentication newAuth = new UsernamePasswordAuthenticationToken(\n                 auth.getPrincipal(), auth.getCredentials(), authorities);\n         SecurityContextHolder.getContext().setAuthentication(newAuth);"},{"sha":"ce3b36c77503819a9174287317de1f2832958ba4","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/Encryptor.java","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FEncryptor.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -75,17 +75,17 @@ public final class Encryptor {\n      */\n     private static final boolean DEFAULT_ULSSC = true;\n \n-    private static String secretKey;\n+    private static String SECRET_KEY;\n \n-    private static Integer saltIterations;\n+    private static Integer SALT_ITERATIONS;\n \n-    private static Integer saltSizeBytes;\n+    private static Integer SALT_SIZE_BYTES;\n \n-    private static Boolean ipopsier;\n+    private static Boolean IPOPSIER;\n \n-    private static Boolean iposimbd;\n+    private static Boolean IPOSIMBD;\n \n-    private static Boolean ulssc;\n+    private static Boolean ULSSC;\n \n     static {\n         InputStream propStream = null;\n@@ -94,46 +94,46 @@ public final class Encryptor {\n             Properties props = new Properties();\n             props.load(propStream);\n \n-            secretKey = props.getProperty(\"secretKey\");\n-            saltIterations = Integer.valueOf(props.getProperty(\"digester.saltIterations\"));\n-            saltSizeBytes = Integer.valueOf(props.getProperty(\"digester.saltSizeBytes\"));\n-            ipopsier = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfPlainSaltInEncryptionResults\"));\n-            iposimbd = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfSaltInMessageBeforeDigesting\"));\n-            ulssc = Boolean.valueOf(props.getProperty(\"digester.useLenientSaltSizeCheck\"));\n+            SECRET_KEY = props.getProperty(\"secretKey\");\n+            SALT_ITERATIONS = Integer.valueOf(props.getProperty(\"digester.saltIterations\"));\n+            SALT_SIZE_BYTES = Integer.valueOf(props.getProperty(\"digester.saltSizeBytes\"));\n+            IPOPSIER = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfPlainSaltInEncryptionResults\"));\n+            IPOSIMBD = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfSaltInMessageBeforeDigesting\"));\n+            ULSSC = Boolean.valueOf(props.getProperty(\"digester.useLenientSaltSizeCheck\"));\n         } catch (Exception e) {\n             LOG.error(\"Could not read security parameters\", e);\n         } finally {\n             IOUtils.closeQuietly(propStream);\n         }\n \n-        if (secretKey == null) {\n-            secretKey = DEFAULT_SECRET_KEY;\n+        if (SECRET_KEY == null) {\n+            SECRET_KEY = DEFAULT_SECRET_KEY;\n             LOG.debug(\"secretKey not found, reverting to default\");\n         }\n-        if (saltIterations == null) {\n-            saltIterations = DEFAULT_SALT_ITERATIONS;\n+        if (SALT_ITERATIONS == null) {\n+            SALT_ITERATIONS = DEFAULT_SALT_ITERATIONS;\n             LOG.debug(\"digester.saltIterations not found, reverting to default\");\n         }\n-        if (saltSizeBytes == null) {\n-            saltSizeBytes = DEFAULT_SALT_SIZE_BYTES;\n+        if (SALT_SIZE_BYTES == null) {\n+            SALT_SIZE_BYTES = DEFAULT_SALT_SIZE_BYTES;\n             LOG.debug(\"digester.saltSizeBytes not found, reverting to default\");\n         }\n-        if (ipopsier == null) {\n-            ipopsier = DEFAULT_IPOPSIER;\n+        if (IPOPSIER == null) {\n+            IPOPSIER = DEFAULT_IPOPSIER;\n             LOG.debug(\"digester.invertPositionOfPlainSaltInEncryptionResults not found, reverting to default\");\n         }\n-        if (iposimbd == null) {\n-            iposimbd = DEFAULT_IPOSIMBD;\n+        if (IPOSIMBD == null) {\n+            IPOSIMBD = DEFAULT_IPOSIMBD;\n             LOG.debug(\"digester.invertPositionOfSaltInMessageBeforeDigesting not found, reverting to default\");\n         }\n-        if (ulssc == null) {\n-            ulssc = DEFAULT_ULSSC;\n+        if (ULSSC == null) {\n+            ULSSC = DEFAULT_ULSSC;\n             LOG.debug(\"digester.useLenientSaltSizeCheck not found, reverting to default\");\n         }\n     }\n \n     public static Encryptor getInstance() {\n-        return getInstance(secretKey);\n+        return getInstance(SECRET_KEY);\n     }\n \n     public static Encryptor getInstance(final String secretKey) {\n@@ -163,7 +163,7 @@ private Encryptor(final String secretKey) {\n \n         try {\n             keySpec = new SecretKeySpec(ArrayUtils.subarray(\n-                    actualKey.getBytes(SyncopeConstants.DEFAULT_ENCODING), 0, 16),\n+                    actualKey.getBytes(SyncopeConstants.DEFAULT_CHARSET), 0, 16),\n                     CipherAlgorithm.AES.getAlgorithm());\n         } catch (Exception e) {\n             LOG.error(\"Error during key specification\", e);\n@@ -178,7 +178,7 @@ public String encode(final String value, final CipherAlgorithm cipherAlgorithm)\n \n         if (value != null) {\n             if (cipherAlgorithm == null || cipherAlgorithm == CipherAlgorithm.AES) {\n-                final byte[] cleartext = value.getBytes(SyncopeConstants.DEFAULT_ENCODING);\n+                final byte[] cleartext = value.getBytes(SyncopeConstants.DEFAULT_CHARSET);\n \n                 final Cipher cipher = Cipher.getInstance(CipherAlgorithm.AES.getAlgorithm());\n                 cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n@@ -221,12 +221,12 @@ public String decode(final String encodedValue, final CipherAlgorithm cipherAlgo\n         String value = null;\n \n         if (encodedValue != null && cipherAlgorithm == CipherAlgorithm.AES) {\n-            final byte[] encoded = encodedValue.getBytes(SyncopeConstants.DEFAULT_ENCODING);\n+            final byte[] encoded = encodedValue.getBytes(SyncopeConstants.DEFAULT_CHARSET);\n \n             final Cipher cipher = Cipher.getInstance(CipherAlgorithm.AES.getAlgorithm());\n             cipher.init(Cipher.DECRYPT_MODE, keySpec);\n \n-            value = new String(cipher.doFinal(Base64.decode(encoded)), SyncopeConstants.DEFAULT_ENCODING);\n+            value = new String(cipher.doFinal(Base64.decode(encoded)), SyncopeConstants.DEFAULT_CHARSET);\n         }\n \n         return value;\n@@ -238,11 +238,11 @@ private StandardStringDigester getDigester(final CipherAlgorithm cipherAlgorithm\n         if (cipherAlgorithm.getAlgorithm().startsWith(\"S-\")) {\n             // Salted ...\n             digester.setAlgorithm(cipherAlgorithm.getAlgorithm().replaceFirst(\"S\\\\-\", \"\"));\n-            digester.setIterations(saltIterations);\n-            digester.setSaltSizeBytes(saltSizeBytes);\n-            digester.setInvertPositionOfPlainSaltInEncryptionResults(ipopsier);\n-            digester.setInvertPositionOfSaltInMessageBeforeDigesting(iposimbd);\n-            digester.setUseLenientSaltSizeCheck(ulssc);\n+            digester.setIterations(SALT_ITERATIONS);\n+            digester.setSaltSizeBytes(SALT_SIZE_BYTES);\n+            digester.setInvertPositionOfPlainSaltInEncryptionResults(IPOPSIER);\n+            digester.setInvertPositionOfSaltInMessageBeforeDigesting(IPOSIMBD);\n+            digester.setUseLenientSaltSizeCheck(ULSSC);\n         } else {\n             // Not salted ...\n             digester.setAlgorithm(cipherAlgorithm.getAlgorithm());"},{"sha":"8ed136b80f8d71b7eac4bd892a04df1b71d62bb6","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/PasswordGenerator.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.misc.policy.InvalidPasswordPolicySpecException;\n import org.apache.syncope.core.misc.policy.PolicyPattern;\n@@ -66,11 +66,11 @@ public String generate(final User user)\n             ppSpecs.add(globalPP.getSpecification(PasswordPolicySpec.class));\n         }\n \n-        for (Role role : user.getRoles()) {\n-            if (role.getPasswordPolicy() != null\n-                    && role.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+        for (Group group : user.getGroups()) {\n+            if (group.getPasswordPolicy() != null\n+                    && group.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n \n-                ppSpecs.add(role.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                ppSpecs.add(group.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n             }\n         }\n \n@@ -287,13 +287,15 @@ private void checkRequired(final String[] generatedPassword, final PasswordPolic\n         if (policySpec.isUppercaseRequired()\n                 && !PolicyPattern.ALPHA_UPPERCASE.matcher(StringUtils.join(generatedPassword)).matches()) {\n \n-            generatedPassword[firstEmptyChar(generatedPassword)] = SecureRandomUtil.generateRandomLetter().toUpperCase();\n+            generatedPassword[firstEmptyChar(generatedPassword)] =\n+                    SecureRandomUtil.generateRandomLetter().toUpperCase();\n         }\n \n         if (policySpec.isLowercaseRequired()\n                 && !PolicyPattern.ALPHA_LOWERCASE.matcher(StringUtils.join(generatedPassword)).matches()) {\n \n-            generatedPassword[firstEmptyChar(generatedPassword)] = SecureRandomUtil.generateRandomLetter().toLowerCase();\n+            generatedPassword[firstEmptyChar(generatedPassword)] =\n+                    SecureRandomUtil.generateRandomLetter().toLowerCase();\n         }\n \n         if (policySpec.isNonAlphanumericRequired()"},{"sha":"7939a83f44fba935581e4460295a036952c994fd","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/SecureRandomUtil.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSecureRandomUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSecureRandomUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSecureRandomUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -38,7 +38,7 @@ public static String generateRandomNumber() {\n         return RandomStringUtils.random(1, 0, 0, false, true, null, RANDOM);\n     }\n \n-    public static String generateRandomSpecialCharacter(char[] characters) {\n+    public static String generateRandomSpecialCharacter(final char[] characters) {\n         return RandomStringUtils.random(1, 0, 0, false, false, characters, RANDOM);\n     }\n "},{"sha":"0094aefdc01373325da85f42175049eadcac357c","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/SyncopeAuthenticationProvider.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.core.persistence.api.entity.AttributableUtilFactory;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.misc.AuditManager;\n@@ -50,7 +50,6 @@\n import org.springframework.security.authentication.DisabledException;\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.AuthenticationException;\n import org.springframework.security.core.userdetails.UserDetailsService;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -123,9 +122,7 @@ public void setUserDetailsService(final UserDetailsService syncopeUserDetailsSer\n \n     @Override\n     @Transactional(noRollbackFor = { BadCredentialsException.class, DisabledException.class })\n-    public Authentication authenticate(final Authentication authentication)\n-            throws AuthenticationException {\n-\n+    public Authentication authenticate(final Authentication authentication) {\n         boolean authenticated = false;\n         User user = null;\n \n@@ -174,9 +171,9 @@ public Authentication authenticate(final Authentication authentication)\n                     null,\n                     authenticated,\n                     authentication,\n-                    \"Successfully authenticated, with roles: \" + token.getAuthorities());\n+                    \"Successfully authenticated, with groups: \" + token.getAuthorities());\n \n-            LOG.debug(\"User {} successfully authenticated, with roles {}\",\n+            LOG.debug(\"User {} successfully authenticated, with groups {}\",\n                     authentication.getPrincipal(), token.getAuthorities());\n         } else {\n             auditManager.audit(\n@@ -198,7 +195,7 @@ public Authentication authenticate(final Authentication authentication)\n         return token;\n     }\n \n-    protected void updateLoginAttributes(User user, boolean authenticated) {\n+    protected void updateLoginAttributes(final User user, final boolean authenticated) {\n         boolean userModified = false;\n \n         if (authenticated) {\n@@ -235,13 +232,13 @@ protected Set<? extends ExternalResource> getPassthroughResources(final User use\n             }\n         }\n \n-        // 2. look for owned roles, pick the ones whose account policy has authentication resources\n-        for (Role role : user.getRoles()) {\n-            if (role.getAccountPolicy() != null && !role.getAccountPolicy().getResources().isEmpty()) {\n+        // 2. look for owned groups, pick the ones whose account policy has authentication resources\n+        for (Group group : user.getGroups()) {\n+            if (group.getAccountPolicy() != null && !group.getAccountPolicy().getResources().isEmpty()) {\n                 if (result == null) {\n-                    result = role.getAccountPolicy().getResources();\n+                    result = group.getAccountPolicy().getResources();\n                 } else {\n-                    result.retainAll(role.getAccountPolicy().getResources());\n+                    result.retainAll(group.getAccountPolicy().getResources());\n                 }\n             }\n         }"},{"sha":"d617ae2554d205acc696f7f64662bb59b40d1386","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/SyncopeUserDetailsService.java","status":"modified","additions":20,"deletions":21,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeUserDetailsService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeUserDetailsService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FSyncopeUserDetailsService.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,15 +23,14 @@\n import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n import org.apache.syncope.core.persistence.api.dao.EntitlementDAO;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.Entitlement;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Configurable;\n-import org.springframework.dao.DataAccessException;\n import org.springframework.security.core.authority.SimpleGrantedAuthority;\n import org.springframework.security.core.userdetails.User;\n import org.springframework.security.core.userdetails.UserDetails;\n@@ -45,7 +44,7 @@ public class SyncopeUserDetailsService implements UserDetailsService {\n     protected UserDAO userDAO;\n \n     @Autowired\n-    protected RoleDAO roleDAO;\n+    protected GroupDAO groupDAO;\n \n     @Autowired\n     protected EntitlementDAO entitlementDAO;\n@@ -57,7 +56,7 @@ public class SyncopeUserDetailsService implements UserDetailsService {\n     protected String anonymousUser;\n \n     @Override\n-    public UserDetails loadUserByUsername(final String username) throws UsernameNotFoundException, DataAccessException {\n+    public UserDetails loadUserByUsername(final String username) {\n         final Set<SimpleGrantedAuthority> authorities = new HashSet<>();\n         if (anonymousUser.equals(username)) {\n             authorities.add(new SimpleGrantedAuthority(SyncopeConstants.ANONYMOUS_ENTITLEMENT));\n@@ -72,27 +71,27 @@ public UserDetails loadUserByUsername(final String username) throws UsernameNotF\n                 throw new UsernameNotFoundException(\"Could not find any user with id \" + username);\n             }\n \n-            // Give entitlements based on roles assigned to user (and their ancestors)\n-            final Set<Role> roles = new HashSet<>(user.getRoles());\n-            for (Role role : user.getRoles()) {\n-                roles.addAll(roleDAO.findAncestors(role));\n+            // Give entitlements based on groups assigned to user (and their ancestors)\n+            final Set<Group> groups = new HashSet<>(user.getGroups());\n+            for (Group group : user.getGroups()) {\n+                groups.addAll(groupDAO.findAncestors(group));\n             }\n-            for (Role role : roles) {\n-                for (Entitlement entitlement : role.getEntitlements()) {\n+            for (Group group : groups) {\n+                for (Entitlement entitlement : group.getEntitlements()) {\n                     authorities.add(new SimpleGrantedAuthority(entitlement.getKey()));\n                 }\n             }\n-            // Give role operational entitlements for owned roles\n-            List<Role> ownedRoles = roleDAO.findOwnedByUser(user.getKey());\n-            if (!ownedRoles.isEmpty()) {\n-                authorities.add(new SimpleGrantedAuthority(\"ROLE_CREATE\"));\n-                authorities.add(new SimpleGrantedAuthority(\"ROLE_READ\"));\n-                authorities.add(new SimpleGrantedAuthority(\"ROLE_UPDATE\"));\n-                authorities.add(new SimpleGrantedAuthority(\"ROLE_DELETE\"));\n+            // Give group operational entitlements for owned groups\n+            List<Group> ownedGroups = groupDAO.findOwnedByUser(user.getKey());\n+            if (!ownedGroups.isEmpty()) {\n+                authorities.add(new SimpleGrantedAuthority(\"GROUP_CREATE\"));\n+                authorities.add(new SimpleGrantedAuthority(\"GROUP_READ\"));\n+                authorities.add(new SimpleGrantedAuthority(\"GROUP_UPDATE\"));\n+                authorities.add(new SimpleGrantedAuthority(\"GROUP_DELETE\"));\n \n-                for (Role role : ownedRoles) {\n+                for (Group group : ownedGroups) {\n                     authorities.add(new SimpleGrantedAuthority(\n-                            RoleEntitlementUtil.getEntitlementNameFromRoleKey(role.getKey())));\n+                            GroupEntitlementUtil.getEntitlementNameFromGroupKey(group.getKey())));\n                 }\n             }\n         }"},{"sha":"006be64508345e7be6c0289aac19e15f9bfb21cf","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/UnauthorizedGroupException.java","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FUnauthorizedGroupException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FUnauthorizedGroupException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FUnauthorizedGroupException.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,22 +21,22 @@\n import java.util.Collections;\n import java.util.Set;\n \n-public class UnauthorizedRoleException extends RuntimeException {\n+public class UnauthorizedGroupException extends RuntimeException {\n \n     private static final long serialVersionUID = 7540587364235915081L;\n \n-    private final Set<Long> roleIds;\n+    private final Set<Long> groupIds;\n \n-    public UnauthorizedRoleException(final Set<Long> roleIds) {\n-        super(\"Missing entitlement for role(s) \" + roleIds);\n-        this.roleIds = roleIds;\n+    public UnauthorizedGroupException(final Set<Long> groupIds) {\n+        super(\"Missing entitlement for group(s) \" + groupIds);\n+        this.groupIds = groupIds;\n     }\n \n-    public UnauthorizedRoleException(final Long roleId) {\n-        this(Collections.singleton(roleId));\n+    public UnauthorizedGroupException(final Long groupId) {\n+        this(Collections.singleton(groupId));\n     }\n \n-    public Set<Long> getRoleIds() {\n-        return roleIds;\n+    public Set<Long> getGroupIds() {\n+        return groupIds;\n     }\n }","previous_filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/UnauthorizedRoleException.java"},{"sha":"5c2ab51c93d0686288ec6ceb2e478bb090bac66a","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/AttributeDeserializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeDeserializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.JsonNode;\n@@ -40,7 +39,7 @@ class AttributeDeserializer extends JsonDeserializer<Attribute> {\n \n     @Override\n     public Attribute deserialize(final JsonParser jp, final DeserializationContext ctx)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         ObjectNode tree = jp.readValueAsTree();\n "},{"sha":"3c79c289344de2cb7b3cf78a40bc81818a228ce0","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/AttributeSerializer.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FAttributeSerializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,27 +19,22 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import java.io.IOException;\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n class AttributeSerializer extends JsonSerializer<Attribute> {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AttributeSerializer.class);\n-\n     public static final String BYTE_ARRAY_PREFIX = \"<binary>\";\n \n     public static final String BYTE_ARRAY_SUFFIX = \"</binary>\";\n \n     @Override\n     public void serialize(final Attribute source, final JsonGenerator jgen, final SerializerProvider sp)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         jgen.writeStartObject();\n "},{"sha":"1cd0ec0797d820c865cedf7740f6d135b6663def","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/GuardedStringDeserializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringDeserializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n@@ -37,7 +36,7 @@ class GuardedStringDeserializer extends JsonDeserializer<GuardedString> {\n \n     @Override\n     public GuardedString deserialize(final JsonParser jp, final DeserializationContext ctx)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         ObjectNode tree = jp.readValueAsTree();\n "},{"sha":"c86fb2e1b2c45bf1e595d0cf15bcda6bdacbac31","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/GuardedStringSerializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import java.io.IOException;\n@@ -36,7 +35,7 @@ class GuardedStringSerializer extends JsonSerializer<GuardedString> {\n \n     @Override\n     public void serialize(final GuardedString source, final JsonGenerator jgen, final SerializerProvider sp)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         jgen.writeStartObject();\n "},{"sha":"cc25ef36987495d11ebb2ce65228a6ca3d8e3e2f","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/SyncTokenDeserializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenDeserializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.JsonNode;\n@@ -32,7 +31,7 @@ class SyncTokenDeserializer extends JsonDeserializer<SyncToken> {\n \n     @Override\n     public SyncToken deserialize(final JsonParser jp, final DeserializationContext ctx)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         ObjectNode tree = jp.readValueAsTree();\n "},{"sha":"eb75eb294e8e2556ca6959caeb5a3c0e1396eee2","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/SyncTokenSerializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FSyncTokenSerializer.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.misc.serialization;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import java.io.IOException;\n@@ -30,7 +29,7 @@ class SyncTokenSerializer extends JsonSerializer<SyncToken> {\n \n     @Override\n     public void serialize(final SyncToken source, final JsonGenerator jgen, final SerializerProvider sp)\n-            throws IOException, JsonProcessingException {\n+            throws IOException {\n \n         jgen.writeStartObject();\n "},{"sha":"61770e0ecb170ee8c0e0143efecb04afd8b553bf","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/UnwrappedObjectMapper.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FUnwrappedObjectMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FUnwrappedObjectMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FUnwrappedObjectMapper.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,10 +18,8 @@\n  */\n package org.apache.syncope.core.misc.serialization;\n \n-import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.JsonMappingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.File;\n import java.io.IOException;\n@@ -57,28 +55,28 @@ private Object unwrapMap(final Object value) {\n \n     @Override\n     public void writeValue(final JsonGenerator jgen, final Object value)\n-            throws IOException, JsonGenerationException, JsonMappingException {\n+            throws IOException {\n \n         super.writeValue(jgen, unwrapMap(value));\n     }\n \n     @Override\n     public void writeValue(final File resultFile, final Object value)\n-            throws IOException, JsonGenerationException, JsonMappingException {\n+            throws IOException {\n \n         super.writeValue(resultFile, unwrapMap(value));\n     }\n \n     @Override\n     public void writeValue(final OutputStream out, final Object value)\n-            throws IOException, JsonGenerationException, JsonMappingException {\n+            throws IOException {\n \n         super.writeValue(out, unwrapMap(value));\n     }\n \n     @Override\n     public void writeValue(final Writer w, final Object value)\n-            throws IOException, JsonGenerationException, JsonMappingException {\n+            throws IOException {\n \n         super.writeValue(w, unwrapMap(value));\n     }"},{"sha":"1aa43674c6ddf6d519a31a4469fb50023c5b888f","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/spring/ApplicationContextProvider.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FApplicationContextProvider.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,14 +25,14 @@\n \n public class ApplicationContextProvider implements ApplicationContextAware {\n \n-    private static ConfigurableApplicationContext ctx;\n+    private static ConfigurableApplicationContext CTX;\n \n     public static ConfigurableApplicationContext getApplicationContext() {\n-        return ctx;\n+        return CTX;\n     }\n \n     public static DefaultListableBeanFactory getBeanFactory() {\n-        return (DefaultListableBeanFactory) ctx.getBeanFactory();\n+        return (DefaultListableBeanFactory) CTX.getBeanFactory();\n     }\n \n     /**\n@@ -42,6 +42,6 @@ public static DefaultListableBeanFactory getBeanFactory() {\n      */\n     @Override\n     public void setApplicationContext(final ApplicationContext ctx) {\n-        ApplicationContextProvider.ctx = (ConfigurableApplicationContext) ctx;\n+        CTX = (ConfigurableApplicationContext) ctx;\n     }\n }"},{"sha":"5f9fd4d5fd5c42597ce961f9bcec1e042b1ebb9f","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/spring/BeanUtils.java","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FBeanUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FBeanUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FBeanUtils.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,7 +29,6 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import org.springframework.beans.BeansException;\n import org.springframework.beans.FatalBeanException;\n import org.springframework.util.Assert;\n import org.springframework.util.ClassUtils;\n@@ -58,12 +57,12 @@ private BeanUtils() {\n      * This is just a convenience method. For more complex transfer needs,\n      * consider using a full BeanWrapper.\n      * </p>\n+     *\n      * @param source the source bean\n      * @param target the target bean\n-     * @throws BeansException if the copying failed\n      * @see org.springframework.beans.BeanWrapper\n      */\n-    public static void copyProperties(final Object source, final Object target) throws BeansException {\n+    public static void copyProperties(final Object source, final Object target) {\n         copyProperties(source, target, null, (String[]) null);\n     }\n \n@@ -82,12 +81,9 @@ public static void copyProperties(final Object source, final Object target) thro\n      * @param source the source bean\n      * @param target the target bean\n      * @param editable the class (or interface) to restrict property setting to\n-     * @throws BeansException if the copying failed\n      * @see org.springframework.beans.BeanWrapper\n      */\n-    public static void copyProperties(final Object source, final Object target, final Class<?> editable)\n-            throws BeansException {\n-\n+    public static void copyProperties(final Object source, final Object target, final Class<?> editable) {\n         copyProperties(source, target, editable, (String[]) null);\n     }\n \n@@ -106,12 +102,9 @@ public static void copyProperties(final Object source, final Object target, fina\n      * @param source the source bean\n      * @param target the target bean\n      * @param ignoreProperties array of property names to ignore\n-     * @throws BeansException if the copying failed\n      * @see org.springframework.beans.BeanWrapper\n      */\n-    public static void copyProperties(final Object source, final Object target, final String... ignoreProperties)\n-            throws BeansException {\n-\n+    public static void copyProperties(final Object source, final Object target, final String... ignoreProperties) {\n         copyProperties(source, target, null, ignoreProperties);\n     }\n \n@@ -127,12 +120,11 @@ public static void copyProperties(final Object source, final Object target, fina\n      * @param target the target bean\n      * @param editable the class (or interface) to restrict property setting to\n      * @param ignoreProperties array of property names to ignore\n-     * @throws BeansException if the copying failed\n      * @see org.springframework.beans.BeanWrapper\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private static void copyProperties(final Object source, final Object target, final Class<?> editable,\n-            final String... ignoreProperties) throws BeansException {\n+    private static void copyProperties(\n+            final Object source, final Object target, final Class<?> editable, final String... ignoreProperties) {\n \n         Assert.notNull(source, \"Source must not be null\");\n         Assert.notNull(target, \"Target must not be null\");"},{"sha":"a0557b56f865d716e308d75878a950f088f5c905","filename":"core/misc/src/main/resources/security.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fresources%2Fsecurity.properties?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,4 +27,5 @@ digester.saltIterations=1\n digester.saltSizeBytes=8\n digester.invertPositionOfPlainSaltInEncryptionResults=true\n digester.invertPositionOfSaltInMessageBeforeDigesting=true\n-digester.useLenientSaltSizeCheck=true\n\\ No newline at end of file\n+digester.useLenientSaltSizeCheck=true\n+"},{"sha":"f358de2b9ccf84c05eea435023c93c501d1d1145","filename":"core/misc/src/test/java/org/apache/syncope/core/misc/search/SearchCondConverterTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,7 @@\n \n import static org.junit.Assert.assertEquals;\n \n-import org.apache.syncope.common.lib.search.RoleFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n@@ -84,12 +84,12 @@ public void isNotNull() {\n     }\n \n     @Test\n-    public void roles() {\n-        String fiqlExpression = new UserFiqlSearchConditionBuilder().hasRoles(1L).query();\n-        assertEquals(SpecialAttr.ROLES + \"==1\", fiqlExpression);\n+    public void groups() {\n+        String fiqlExpression = new UserFiqlSearchConditionBuilder().inGroups(1L).query();\n+        assertEquals(SpecialAttr.GROUPS + \"==1\", fiqlExpression);\n \n         MembershipCond membCond = new MembershipCond();\n-        membCond.setRoleId(1L);\n+        membCond.setGroupId(1L);\n         SearchCond simpleCond = SearchCond.getLeafCond(membCond);\n \n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n@@ -109,7 +109,7 @@ public void resources() {\n \n     @Test\n     public void entitlements() {\n-        String fiqlExpression = new RoleFiqlSearchConditionBuilder().hasEntitlements(\"USER_LIST\").query();\n+        String fiqlExpression = new GroupFiqlSearchConditionBuilder().hasEntitlements(\"USER_LIST\").query();\n         assertEquals(SpecialAttr.ENTITLEMENTS + \"==USER_LIST\", fiqlExpression);\n \n         EntitlementCond entCond = new EntitlementCond();"},{"sha":"b0f104aa52e87f1ab7b58f691314fcf108d0915c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/GroupEntitlementUtil.java","status":"renamed","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FGroupEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FGroupEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FGroupEntitlementUtil.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -29,24 +29,24 @@\n /**\n  * Utility class for manipulating entitlements.\n  */\n-public final class RoleEntitlementUtil {\n+public final class GroupEntitlementUtil {\n \n-    private static final Pattern ROLE_ENTITLEMENT_NAME_PATTERN = Pattern.compile(\"^ROLE_([\\\\d])+\");\n+    private static final Pattern GROUP_ENTITLEMENT_NAME_PATTERN = Pattern.compile(\"^GROUP_([\\\\d])+\");\n \n-    private static final Logger LOG = LoggerFactory.getLogger(RoleEntitlementUtil.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupEntitlementUtil.class);\n \n-    public static String getEntitlementNameFromRoleKey(final Long roleKey) {\n-        return \"ROLE_\" + roleKey;\n+    public static String getEntitlementNameFromGroupKey(final Long groupKey) {\n+        return \"GROUP_\" + groupKey;\n     }\n \n-    public static boolean isRoleEntitlement(final String entitlementName) {\n-        return ROLE_ENTITLEMENT_NAME_PATTERN.matcher(entitlementName).matches();\n+    public static boolean isGroupEntitlement(final String entitlementName) {\n+        return GROUP_ENTITLEMENT_NAME_PATTERN.matcher(entitlementName).matches();\n     }\n \n-    public static Long getRoleKey(final String entitlementName) {\n+    public static Long getGroupKey(final String entitlementName) {\n         Long result = null;\n \n-        if (isRoleEntitlement(entitlementName)) {\n+        if (isGroupEntitlement(entitlementName)) {\n             try {\n                 result = Long.valueOf(entitlementName.substring(entitlementName.indexOf('_') + 1));\n             } catch (Exception e) {\n@@ -57,32 +57,32 @@ public static Long getRoleKey(final String entitlementName) {\n         return result;\n     }\n \n-    public static Set<Long> getRoleKeys(final Set<String> entitlements) {\n+    public static Set<Long> getGroupKeys(final Set<String> entitlements) {\n         Set<Long> result = new HashSet<>();\n \n         for (String entitlement : entitlements) {\n-            if (isRoleEntitlement(entitlement)) {\n-                Long roleId = getRoleKey(entitlement);\n-                if (roleId != null) {\n-                    result.add(roleId);\n+            if (isGroupEntitlement(entitlement)) {\n+                Long groupId = getGroupKey(entitlement);\n+                if (groupId != null) {\n+                    result.add(groupId);\n                 }\n             }\n         }\n \n         return result;\n     }\n \n-    public static Set<Long> getRoleKeys(final List<Entitlement> entitlements) {\n+    public static Set<Long> getGroupKeys(final List<Entitlement> entitlements) {\n         Set<String> names = new HashSet<>(entitlements.size());\n         for (Entitlement entitlement : entitlements) {\n             names.add(entitlement.getKey());\n         }\n-        return getRoleKeys(names);\n+        return GroupEntitlementUtil.getGroupKeys(names);\n     }\n \n     /**\n      * Private default constructor, for static-only classes.\n      */\n-    private RoleEntitlementUtil() {\n+    private GroupEntitlementUtil() {\n     }\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/RoleEntitlementUtil.java"},{"sha":"818fb613e49e4e445471996abf6b84646f05c55a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/attrvalue/validation/InvalidEntityException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -120,7 +120,7 @@ public String getMessage() {\n         StringBuilder sb = new StringBuilder();\n \n         for (Class<?> entity : violations.keySet()) {\n-            sb.append(entity.getSimpleName()).append(\" \").append(violations.get(entity).toString()).append(\", \");\n+            sb.append(entity.getSimpleName()).append(' ').append(violations.get(entity).toString()).append(\", \");\n         }\n         sb.delete(sb.lastIndexOf(\", \"), sb.length());\n "},{"sha":"0f921500f8961b67d435469de904d405e711ec24","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/attrvalue/validation/InvalidPlainAttrValueException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidPlainAttrValueException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidPlainAttrValueException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidPlainAttrValueException.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -37,7 +37,7 @@ public InvalidPlainAttrValueException(final PlainAttrValue value) {\n         this(\"Could not validate \" + value.getValue());\n     }\n \n-    public InvalidPlainAttrValueException(final PlainAttrValue value, Throwable cause) {\n+    public InvalidPlainAttrValueException(final PlainAttrValue value, final Throwable cause) {\n         this(\"Could not validate \" + value.getValue(), cause);\n     }\n }"},{"sha":"c9fad024fbe737b5b4806c2e1b1279dcc1ad03f3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/attrvalue/validation/Validator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FValidator.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -22,6 +22,5 @@\n \n public interface Validator {\n \n-    void validate(String value, PlainAttrValue attrValue)\n-            throws ParsingValidationException, InvalidPlainAttrValueException;\n+    void validate(String value, PlainAttrValue attrValue);\n }"},{"sha":"b66933873803d3076cb97cd0c2edde844b6e78a3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConnInstanceDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n \n public interface ConnInstanceDAO extends DAO<ConnInstance, Long> {\n@@ -28,7 +27,7 @@ public interface ConnInstanceDAO extends DAO<ConnInstance, Long> {\n \n     List<ConnInstance> findAll();\n \n-    ConnInstance save(ConnInstance connector) throws InvalidEntityException;\n+    ConnInstance save(ConnInstance connector);\n \n     void delete(Long key);\n }"},{"sha":"9aa3ac31a94140697b9d2ab1b8a32c530730872f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DerAttrDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerAttrDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.DerAttr;\n \n public interface DerAttrDAO extends DAO<DerAttr, Long> {\n@@ -28,7 +27,7 @@ public interface DerAttrDAO extends DAO<DerAttr, Long> {\n \n     <T extends DerAttr> List<T> findAll(Class<T> reference);\n \n-    <T extends DerAttr> T save(T derAttr) throws InvalidEntityException;\n+    <T extends DerAttr> T save(T derAttr);\n \n     <T extends DerAttr> void delete(Long key, Class<T> reference);\n "},{"sha":"3376e3fd257b27e6166e7ee3230e9bb588e9a17d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DerSchemaDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDerSchemaDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtil;\n import org.apache.syncope.core.persistence.api.entity.DerAttr;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n@@ -32,7 +31,7 @@ public interface DerSchemaDAO extends DAO<DerSchema, String> {\n \n     <T extends DerAttr> List<T> findAttrs(DerSchema schema, Class<T> reference);\n \n-    <T extends DerSchema> T save(T derSchema) throws InvalidEntityException;\n+    <T extends DerSchema> T save(T derSchema);\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"560ff91f62c18f538290e8dc1157a67c822f1d22","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/EntitlementDAO.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntitlementDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,19 +19,18 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Entitlement;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n \n public interface EntitlementDAO extends DAO<Entitlement, String> {\n \n     Entitlement find(String key);\n \n     List<Entitlement> findAll();\n \n-    Entitlement save(Entitlement entitlement) throws InvalidEntityException;\n+    Entitlement save(Entitlement entitlement);\n \n-    Entitlement saveRoleEntitlement(Role role);\n+    Entitlement saveGroupEntitlement(Group group);\n \n     void delete(String key);\n "},{"sha":"01f4f6322fe1ee16033ca54e067277c6d4067969","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ExternalResourceDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n@@ -38,7 +37,7 @@ public interface ExternalResourceDAO extends DAO<ExternalResource, String> {\n \n     List<ExternalResource> findAllByPriority();\n \n-    ExternalResource save(ExternalResource resource) throws InvalidEntityException;\n+    ExternalResource save(ExternalResource resource);\n \n     <T extends MappingItem> void deleteMapping(\n             String schemaName, IntMappingType intMappingType, Class<T> reference);"},{"sha":"56ea6c2e21b58146e6e2d438acaddaf74257b901","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/GroupDAO.java","status":"renamed","additions":30,"deletions":31,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,70 +23,69 @@\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Entitlement;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.RDerAttr;\n-import org.apache.syncope.core.persistence.api.entity.role.RPlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.role.RPlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.role.RVirAttr;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.GDerAttr;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.group.GVirAttr;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n \n-public interface RoleDAO extends SubjectDAO<RPlainAttr, RDerAttr, RVirAttr> {\n+public interface GroupDAO extends SubjectDAO<GPlainAttr, GDerAttr, GVirAttr> {\n \n-    Role find(Long key);\n+    Group find(Long key);\n \n-    List<Role> find(String name);\n+    List<Group> find(String name);\n \n-    Role find(String name, Long parent);\n+    Group find(String name, Long parent);\n \n-    List<Role> findOwnedByUser(Long userId);\n+    List<Group> findOwnedByUser(Long userId);\n \n-    List<Role> findOwnedByRole(Long roleId);\n+    List<Group> findOwnedByGroup(Long groupId);\n \n-    List<Role> findByEntitlement(Entitlement entitlement);\n+    List<Group> findByEntitlement(Entitlement entitlement);\n \n-    List<Role> findByPolicy(Policy policy);\n+    List<Group> findByPolicy(Policy policy);\n \n-    List<Role> findWithoutPolicy(PolicyType type);\n+    List<Group> findWithoutPolicy(PolicyType type);\n \n-    List<Role> findAncestors(Role role);\n+    List<Group> findAncestors(Group group);\n \n-    List<Role> findChildren(Role role);\n+    List<Group> findChildren(Group group);\n \n-    List<Role> findDescendants(Role role);\n+    List<Group> findDescendants(Group group);\n \n-    List<Role> findByDerAttrValue(String schemaName, String value);\n+    List<Group> findByDerAttrValue(String schemaName, String value);\n \n-    List<Role> findByAttrValue(String schemaName, RPlainAttrValue attrValue);\n+    List<Group> findByAttrValue(String schemaName, GPlainAttrValue attrValue);\n \n-    Role findByAttrUniqueValue(String schemaName, RPlainAttrValue attrUniqueValue);\n+    Group findByAttrUniqueValue(String schemaName, GPlainAttrValue attrUniqueValue);\n \n-    List<Role> findByResource(ExternalResource resource);\n+    List<Group> findByResource(ExternalResource resource);\n \n-    List<Role> findAll();\n+    List<Group> findAll();\n \n-    List<Role> findAll(int page, int itemsPerPage, List<OrderByClause> orderBy);\n+    List<Group> findAll(int page, int itemsPerPage, List<OrderByClause> orderBy);\n \n-    List<Membership> findMemberships(Role role);\n+    List<Membership> findMemberships(Group group);\n \n     int count();\n \n-    Role save(Role role) throws InvalidEntityException;\n+    Group save(Group group);\n \n-    void delete(Role role);\n+    void delete(Group group);\n \n     void delete(Long key);\n \n-    Role authFetch(Long key);\n+    Group authFetch(Long key);\n \n     /**\n-     * Finds users having resources assigned exclusively because of memberships of the given role.\n+     * Finds users having resources assigned exclusively because of memberships of the given group.\n      *\n-     * @param roleKey role key\n+     * @param groupKey group key\n      * @return map containing pairs with user key and operations to be performed on those resources (DELETE, typically).\n      */\n-    Map<Long, PropagationByResource> findUsersWithIndirectResources(Long roleKey);\n+    Map<Long, PropagationByResource> findUsersWithIndirectResources(Long groupKey);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RoleDAO.java"},{"sha":"0ce4b6a7fa015be65a72275bb763266c4bb1d8f1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/LoggerDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.common.lib.types.LoggerType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Logger;\n \n public interface LoggerDAO extends DAO<Logger, String> {\n@@ -29,7 +28,7 @@ public interface LoggerDAO extends DAO<Logger, String> {\n \n     List<Logger> findAll(LoggerType type);\n \n-    Logger save(Logger logger) throws InvalidEntityException;\n+    Logger save(Logger logger);\n \n     void delete(String key);\n "},{"sha":"964e0e8758685bdd41622459fd0b3aa35c3282d2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/MembershipDAO.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMembershipDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,20 +19,19 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n public interface MembershipDAO extends DAO<Membership, Long> {\n \n     Membership find(Long key);\n \n-    Membership find(User user, Role role);\n+    Membership find(User user, Group group);\n \n     List<Membership> findAll();\n \n-    Membership save(Membership membership) throws InvalidEntityException;\n+    Membership save(Membership membership);\n \n     void delete(Long key);\n "},{"sha":"866e5887156dd4243556a8941308c2cb06455754","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/NotificationDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n \n public interface NotificationDAO extends DAO<Notification, Long> {\n@@ -28,7 +27,7 @@ public interface NotificationDAO extends DAO<Notification, Long> {\n \n     List<Notification> findAll();\n \n-    Notification save(Notification notification) throws InvalidEntityException;\n+    Notification save(Notification notification);\n \n     void delete(Long key);\n }"},{"sha":"b554442ebb6f69c65f10fc92b59e8bf27ddccff8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PlainAttrValueDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n public interface PlainAttrValueDAO extends DAO<PlainAttrValue, Long> {\n@@ -28,7 +27,7 @@ public interface PlainAttrValueDAO extends DAO<PlainAttrValue, Long> {\n \n     <T extends PlainAttrValue> List<T> findAll(Class<T> reference);\n \n-    <T extends PlainAttrValue> T save(T attributeValue) throws InvalidEntityException;\n+    <T extends PlainAttrValue> T save(T attributeValue);\n \n     <T extends PlainAttrValue> void delete(Long key, Class<T> reference);\n "},{"sha":"717a3c48e6c0779c81e294fce55320872217ec54","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PlainSchemaDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainSchemaDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtil;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -32,7 +31,7 @@ public interface PlainSchemaDAO extends DAO<PlainSchema, String> {\n \n     <T extends PlainAttr> List<T> findAttrs(PlainSchema schema, Class<T> reference);\n \n-    <T extends PlainSchema> T save(T schema) throws InvalidEntityException;\n+    <T extends PlainSchema> T save(T schema);\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"f94b5a41bada26002d7dbb0b48aa59f7442aa6a4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Report;\n \n public interface ReportDAO extends DAO<Report, Long> {\n@@ -33,7 +32,7 @@ public interface ReportDAO extends DAO<Report, Long> {\n \n     int count();\n \n-    Report save(Report report) throws InvalidEntityException;\n+    Report save(Report report);\n \n     void delete(Long key);\n "},{"sha":"1adcd8798f4318d48fce36f50470770962ce3efc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportExecDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n \n@@ -33,7 +32,7 @@ public interface ReportExecDAO extends DAO<ReportExec, Long> {\n \n     List<ReportExec> findAll();\n \n-    ReportExec save(ReportExec execution) throws InvalidEntityException;\n+    ReportExec save(ReportExec execution);\n \n     void delete(Long key);\n "},{"sha":"e001f41a66812d3937d505daa5c7da7bd0147508","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/SecurityQuestionDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n \n public interface SecurityQuestionDAO extends DAO<SecurityQuestion, Long> {\n@@ -28,7 +27,7 @@ public interface SecurityQuestionDAO extends DAO<SecurityQuestion, Long> {\n \n     List<SecurityQuestion> findAll();\n \n-    SecurityQuestion save(SecurityQuestion securityQuestion) throws InvalidEntityException;\n+    SecurityQuestion save(SecurityQuestion securityQuestion);\n \n     void delete(Long key);\n "},{"sha":"c90cdf8d49f2cbac47acc7a2c033feafce1e1590","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/SubjectSearchDAO.java","status":"modified","additions":22,"deletions":25,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSubjectSearchDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -23,64 +23,61 @@\n import org.apache.syncope.common.lib.types.SubjectType;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n-import org.apache.syncope.core.persistence.api.entity.DerAttr;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.Subject;\n-import org.apache.syncope.core.persistence.api.entity.VirAttr;\n \n public interface SubjectSearchDAO extends DAO<Subject<?, ?, ?>, Long> {\n \n     /**\n-     * @param adminRoles the set of admin roles owned by the caller\n+     * @param adminGroups the set of admin groups owned by the caller\n      * @param searchCondition the search condition\n-     * @param type user or role\n+     * @param type user or group\n      * @return size of search result\n      */\n-    int count(Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n+    int count(Set<Long> adminGroups, SearchCond searchCondition, SubjectType type);\n \n     /**\n-     * @param adminRoles the set of admin roles owned by the caller\n+     * @param adminGroups the set of admin groups owned by the caller\n      * @param searchCondition the search condition\n-     * @param type user or role\n-     * @param <T> user/role\n-     * @return the list of users/roles matching the given search condition\n+     * @param type user or group\n+     * @param <T> user/group\n+     * @return the list of users/groups matching the given search condition\n      */\n     <T extends Subject<?, ?, ?>> List<T> search(\n-            Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n+            Set<Long> adminGroups, SearchCond searchCondition, SubjectType type);\n \n     /**\n-     * @param adminRoles the set of admin roles owned by the caller\n+     * @param adminGroups the set of admin groups owned by the caller\n      * @param searchCondition the search condition\n      * @param orderBy list of ordering clauses\n-     * @param type user or role\n-     * @param <T> user/role\n-     * @return the list of users/roles matching the given search condition\n+     * @param type user or group\n+     * @param <T> user/group\n+     * @return the list of users/groups matching the given search condition\n      */\n     <T extends Subject<?, ?, ?>> List<T> search(\n-            Set<Long> adminRoles, SearchCond searchCondition, List<OrderByClause> orderBy, SubjectType type);\n+            Set<Long> adminGroups, SearchCond searchCondition, List<OrderByClause> orderBy, SubjectType type);\n \n     /**\n-     * @param adminRoles the set of admin roles owned by the caller\n+     * @param adminGroups the set of admin groups owned by the caller\n      * @param searchCondition the search condition\n      * @param page position of the first result, start from 1\n      * @param itemsPerPage number of results per page\n      * @param orderBy list of ordering clauses\n-     * @param type user or role\n-     * @param <T> user/role\n-     * @return the list of users/roles matching the given search condition (in the given page)\n+     * @param type user or group\n+     * @param <T> user/group\n+     * @return the list of users/groups matching the given search condition (in the given page)\n      */\n     <T extends Subject<?, ?, ?>> List<T> search(\n-            Set<Long> adminRoles, SearchCond searchCondition, int page, int itemsPerPage,\n+            Set<Long> adminGroups, SearchCond searchCondition, int page, int itemsPerPage,\n             List<OrderByClause> orderBy, SubjectType type);\n \n     /**\n-     * Verify if user/role matches the given search condition.\n+     * Verify if user/group matches the given search condition.\n      *\n      * @param subject to be checked\n      * @param searchCondition to be verified\n-     * @param type user or role\n-     * @param <T> user/role\n-     * @return true if user/role matches searchCondition\n+     * @param type user or group\n+     * @param <T> user/group\n+     * @return true if user/group matches searchCondition\n      */\n     <T extends Subject<?, ?, ?>> boolean matches(T subject, SearchCond searchCondition, SubjectType type);\n }"},{"sha":"0b8227637630ed4153c4d883e67787f3800c8440","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n \n@@ -42,7 +41,7 @@ <T extends Task> List<T> findAll(\n \n     int count(TaskType type);\n \n-    <T extends Task> T save(T task) throws InvalidEntityException;\n+    <T extends Task> T save(T task);\n \n     void delete(Long key);\n "},{"sha":"103016dda08840adf5f8061e6b30d537cd96a148","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskExecDAO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n \n@@ -34,9 +33,9 @@ public interface TaskExecDAO extends DAO<TaskExec, Long> {\n \n     List<TaskExec> findAll(TaskType type);\n \n-    TaskExec save(TaskExec execution) throws InvalidEntityException;\n+    TaskExec save(TaskExec execution);\n \n-    void saveAndAdd(Long taskId, TaskExec execution) throws InvalidEntityException;\n+    void saveAndAdd(Long taskId, TaskExec execution);\n \n     void delete(Long key);\n "},{"sha":"adc0a36a8089734de433541f20d1a3716a280f5a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n import org.apache.syncope.core.persistence.api.entity.user.UDerAttr;\n@@ -50,13 +49,13 @@ public interface UserDAO extends SubjectDAO<UPlainAttr, UDerAttr, UVirAttr> {\n \n     List<User> findByResource(ExternalResource resource);\n \n-    List<User> findAll(Set<Long> adminRoles, int page, int itemsPerPage);\n+    List<User> findAll(Set<Long> adminGroups, int page, int itemsPerPage);\n \n-    List<User> findAll(Set<Long> adminRoles, int page, int itemsPerPage, List<OrderByClause> orderBy);\n+    List<User> findAll(Set<Long> adminGroups, int page, int itemsPerPage, List<OrderByClause> orderBy);\n \n-    int count(Set<Long> adminRoles);\n+    int count(Set<Long> adminGroups);\n \n-    User save(User user) throws InvalidEntityException;\n+    User save(User user);\n \n     void delete(Long key);\n "},{"sha":"254372a83e19099bbc842961717052de006bd90c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/VirAttrDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirAttrDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.VirAttr;\n \n public interface VirAttrDAO extends DAO<VirAttr, Long> {\n@@ -28,7 +27,7 @@ public interface VirAttrDAO extends DAO<VirAttr, Long> {\n \n     <T extends VirAttr> List<T> findAll(Class<T> reference);\n \n-    <T extends VirAttr> T save(T virtualAttribute) throws InvalidEntityException;\n+    <T extends VirAttr> T save(T virtualAttribute);\n \n     <T extends VirAttr> void delete(Long key, Class<T> reference);\n "},{"sha":"149ef979914deec73b736c967bd09d80ff596fdc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/VirSchemaDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FVirSchemaDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtil;\n import org.apache.syncope.core.persistence.api.entity.VirAttr;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n@@ -32,7 +31,7 @@ public interface VirSchemaDAO extends DAO<VirSchema, String> {\n \n     <T extends VirAttr> List<T> findAttrs(VirSchema virSchema, Class<T> reference);\n \n-    <T extends VirSchema> T save(T virSchema) throws InvalidEntityException;\n+    <T extends VirSchema> T save(T virSchema);\n \n     void delete(String key, AttributableUtil attributableUtil);\n }"},{"sha":"6cbc6b3d73330b22943022b5009fa7d768814d46","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/MembershipCond.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,22 +25,18 @@ public class MembershipCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = -728155256293925989L;\n \n-    private Long roleId;\n+    private Long groupId;\n \n-    public MembershipCond() {\n-        super();\n+    public Long getGroupId() {\n+        return groupId;\n     }\n \n-    public Long getRoleId() {\n-        return roleId;\n-    }\n-\n-    public void setRoleId(final Long roleId) {\n-        this.roleId = roleId;\n+    public void setGroupId(final Long groupId) {\n+        this.groupId = groupId;\n     }\n \n     @Override\n     public final boolean isValid() {\n-        return roleId != null;\n+        return groupId != null;\n     }\n }"},{"sha":"48e762f400cd018c2647e907a84170e9db0a3cf7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/SubjectCond.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSubjectCond.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -26,6 +26,7 @@ public class SubjectCond extends AttributeCond {\n     private static final long serialVersionUID = -1880319220462653955L;\n \n     public SubjectCond() {\n+        super();\n     }\n \n     public SubjectCond(final Type conditionType) {"},{"sha":"6aaf916cc7633e4c40ac87165d1c47eeca720bb5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AttrTemplate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAttrTemplate.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n \n public interface AttrTemplate<S extends Schema> extends Entity<Long> {\n \n-    Role getOwner();\n+    Group getOwner();\n \n-    void setOwner(Role role);\n+    void setOwner(Group group);\n \n     S getSchema();\n "},{"sha":"c221f41b1a6c1317744e49c66bd7698a049c3a5f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ExternalResource.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExternalResource.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.persistence.api.entity;\n \n import org.apache.syncope.core.persistence.api.entity.user.UMapping;\n-import org.apache.syncope.core.persistence.api.entity.role.RMapping;\n+import org.apache.syncope.core.persistence.api.entity.group.GMapping;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n@@ -55,7 +55,7 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     UMapping getUmapping();\n \n-    RMapping getRmapping();\n+    GMapping getGmapping();\n \n     SyncToken getUsyncToken();\n \n@@ -97,7 +97,7 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     void setUmapping(UMapping umapping);\n \n-    void setRmapping(RMapping rmapping);\n+    void setGmapping(GMapping gmapping);\n \n     void setEnforceMandatoryCondition(boolean enforce);\n "},{"sha":"0c55b140400e5b55a7e49f87837448cd9198cd5a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Notification.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -36,7 +36,7 @@ public interface Notification extends Entity<Long> {\n \n     String getRecipients();\n \n-    String getRoleAbout();\n+    String getGroupAbout();\n \n     String getSender();\n \n@@ -66,7 +66,7 @@ public interface Notification extends Entity<Long> {\n \n     void setRecipients(String recipients);\n \n-    void setRoleAbout(String roleAbout);\n+    void setGroupAbout(String groupAbout);\n \n     void setSelfAsRecipient(boolean selfAsRecipient);\n "},{"sha":"11e33b5822ceeb51c3826ef198728c5ca0702b1f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PlainAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -19,11 +19,10 @@\n package org.apache.syncope.core.persistence.api.entity;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidPlainAttrValueException;\n \n public interface PlainAttr extends Attr<PlainSchema> {\n \n-    void addValue(String value, AttributableUtil attributableUtil) throws InvalidPlainAttrValueException;\n+    void addValue(String value, AttributableUtil attributableUtil);\n \n     boolean removeValue(PlainAttrValue attrValue);\n "},{"sha":"7735d4c5b4fb0f6a10a3f5de0ed7431e63417a38","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PlainAttrValue.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Date;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n \n public interface PlainAttrValue extends Entity<Long> {\n \n@@ -44,7 +43,7 @@ public interface PlainAttrValue extends Entity<Long> {\n \n     String getValueAsString(AttrSchemaType type);\n \n-    void parseValue(PlainSchema schema, String value) throws ParsingValidationException;\n+    void parseValue(PlainSchema schema, String value);\n \n     void setAttr(PlainAttr attr);\n "},{"sha":"59e665fdcf95db663b25412c9e88f21f3ce313cd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GDerAttr.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttr.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,19 +16,19 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.DerAttr;\n \n-public interface RDerAttr extends DerAttr {\n+public interface GDerAttr extends DerAttr {\n \n     @Override\n-    Role getOwner();\n+    Group getOwner();\n \n     @Override\n-    RDerSchema getSchema();\n+    GDerSchema getSchema();\n \n-    RDerAttrTemplate getTemplate();\n+    GDerAttrTemplate getTemplate();\n \n-    void setTemplate(RDerAttrTemplate template);\n+    void setTemplate(GDerAttrTemplate template);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RDerAttr.java"},{"sha":"ee92c6c03cc0549315bd94ee76559645f0e97440","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GDerAttrTemplate.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerAttrTemplate.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.AttrTemplate;\n \n-public interface RDerAttrTemplate extends AttrTemplate<RDerSchema> {\n+public interface GDerAttrTemplate extends AttrTemplate<GDerSchema> {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RDerAttrTemplate.java"},{"sha":"ef6714851db72c614622d87b084bebf0e1622291","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GDerSchema.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGDerSchema.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n \n-public interface RDerSchema extends DerSchema {\n+public interface GDerSchema extends DerSchema {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RDerSchema.java"},{"sha":"b8105f32ef17ccf91f1bec617fc4f7de7f4ee0ac","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GMapping.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMapping.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.Mapping;\n \n-public interface RMapping extends Mapping<RMappingItem> {\n+public interface GMapping extends Mapping<GMappingItem> {\n     \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RMapping.java"},{"sha":"3e1c126188dd15a6425b8ebf657bb7a42a64466f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GMappingItem.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGMappingItem.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,14 +16,14 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.Mapping;\n import org.apache.syncope.core.persistence.api.entity.MappingItem;\n \n-public interface RMappingItem extends MappingItem {\n+public interface GMappingItem extends MappingItem {\n \n     @Override\n-    Mapping<RMappingItem> getMapping();\n+    Mapping<GMappingItem> getMapping();\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RMappingItem.java"},{"sha":"cf3f551b31c955ceb6925abb33315cce9d0f41a9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GPlainAttr.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttr.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,27 +16,27 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n \n-public interface RPlainAttr extends PlainAttr {\n+public interface GPlainAttr extends PlainAttr {\n \n     @Override\n-    Role getOwner();\n+    Group getOwner();\n \n     @Override\n-    RPlainSchema getSchema();\n+    GPlainSchema getSchema();\n \n-    RPlainAttrTemplate getTemplate();\n+    GPlainAttrTemplate getTemplate();\n \n-    void setTemplate(RPlainAttrTemplate template);\n+    void setTemplate(GPlainAttrTemplate template);\n \n     @Override\n-    List<? extends RPlainAttrValue> getValues();\n+    List<? extends GPlainAttrValue> getValues();\n \n     @Override\n-    RPlainAttrUniqueValue getUniqueValue();\n+    GPlainAttrUniqueValue getUniqueValue();\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RPlainAttr.java"},{"sha":"c619c729d9dfd5db517b1dc602ce0277c4e40730","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GPlainAttrTemplate.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrTemplate.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.AttrTemplate;\n \n-public interface RPlainAttrTemplate extends AttrTemplate<RPlainSchema> {\n+public interface GPlainAttrTemplate extends AttrTemplate<GPlainSchema> {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RPlainAttrTemplate.java"},{"sha":"2ce92850bdf0b579fe4f63942cf68a434725a6c9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GPlainAttrUniqueValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrUniqueValue.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,16 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n \n-public interface RPlainAttrUniqueValue extends PlainAttrUniqueValue {\n+public interface GPlainAttrUniqueValue extends PlainAttrUniqueValue {\n \n     @Override\n-    RPlainAttr getAttr();\n+    GPlainAttr getAttr();\n \n     @Override\n-    RPlainSchema getSchema();\n+    GPlainSchema getSchema();\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RPlainAttrUniqueValue.java"},{"sha":"d63a38cd4f8b43047df6be0e34a27884dd7cda20","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GPlainAttrValue.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainAttrValue.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,13 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n-public interface RPlainAttrValue extends PlainAttrValue {\n+public interface GPlainAttrValue extends PlainAttrValue {\n \n     @Override\n-    RPlainAttr getAttr();\n+    GPlainAttr getAttr();\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RPlainAttrValue.java"},{"sha":"f50dcfd4178773b57af24811fa8e354341f230ba","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GPlainSchema.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGPlainSchema.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n \n-public interface RPlainSchema extends PlainSchema {\n+public interface GPlainSchema extends PlainSchema {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RPlainSchema.java"},{"sha":"9ef9f4a77d19867ea6647296f709c3360adb2602","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GVirAttr.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttr.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,19 +16,19 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.VirAttr;\n \n-public interface RVirAttr extends VirAttr {\n+public interface GVirAttr extends VirAttr {\n \n     @Override\n-    Role getOwner();\n+    Group getOwner();\n \n     @Override\n-    RVirSchema getSchema();\n+    GVirSchema getSchema();\n \n-    RVirAttrTemplate getTemplate();\n+    GVirAttrTemplate getTemplate();\n \n-    void setTemplate(RVirAttrTemplate template);\n+    void setTemplate(GVirAttrTemplate template);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RVirAttr.java"},{"sha":"478a255847d65c40dc4a0a22d863d886f3947e9f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GVirAttrTemplate.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirAttrTemplate.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.AttrTemplate;\n \n-public interface RVirAttrTemplate extends AttrTemplate<RVirSchema> {\n+public interface GVirAttrTemplate extends AttrTemplate<GVirSchema> {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RVirAttrTemplate.java"},{"sha":"52a65c7c3c25967e83457710a74301e1d0164125","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/GVirSchema.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGVirSchema.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,10 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n \n-public interface RVirSchema extends VirSchema {\n+public interface GVirSchema extends VirSchema {\n \n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/RVirSchema.java"},{"sha":"3c9f5dfc1b5520c88fabd59bbc2002979a62e8b0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/Group.java","status":"renamed","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FGroup.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.role;\n+package org.apache.syncope.core.persistence.api.entity.group;\n \n import java.util.List;\n import java.util.Set;\n@@ -28,11 +28,11 @@\n import org.apache.syncope.core.persistence.api.entity.Subject;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n-public interface Role extends Subject<RPlainAttr, RDerAttr, RVirAttr> {\n+public interface Group extends Subject<GPlainAttr, GDerAttr, GVirAttr> {\n \n     String getName();\n \n-    Role getParent();\n+    Group getParent();\n \n     boolean addEntitlement(Entitlement entitlement);\n \n@@ -43,21 +43,21 @@ public interface Role extends Subject<RPlainAttr, RDerAttr, RVirAttr> {\n      *\n      * @return a list of inherited and only inherited attributes.\n      */\n-    List<? extends RPlainAttr> findLastInheritedAncestorPlainAttrs();\n+    List<? extends GPlainAttr> findLastInheritedAncestorPlainAttrs();\n \n     /**\n      * Get all inherited derived attributes from the ancestors.\n      *\n      * @return a list of inherited and only inherited attributes.\n      */\n-    List<? extends RDerAttr> findLastInheritedAncestorDerAttrs();\n+    List<? extends GDerAttr> findLastInheritedAncestorDerAttrs();\n \n     /**\n      * Get all inherited virtual attributes from the ancestors.\n      *\n      * @return a list of inherited and only inherited attributes.\n      */\n-    List<? extends RVirAttr> findLastInheritedAncestorVirAttrs();\n+    List<? extends GVirAttr> findLastInheritedAncestorVirAttrs();\n \n     /**\n      * Get first valid account policy.\n@@ -86,7 +86,7 @@ <T extends AttrTemplate<K>, K extends Schema> T getAttrTemplate(\n      */\n     PasswordPolicy getPasswordPolicy();\n \n-    Role getRoleOwner();\n+    Group getGroupOwner();\n \n     User getUserOwner();\n \n@@ -122,47 +122,47 @@ <T extends AttrTemplate<K>, K extends Schema> T getAttrTemplate(\n \n     void setName(String name);\n \n-    void setParent(Role parent);\n+    void setParent(Group parent);\n \n     void setPasswordPolicy(PasswordPolicy passwordPolicy);\n \n-    void setRoleOwner(Role roleOwner);\n+    void setGroupOwner(Group groupOwner);\n \n     void setUserOwner(User userOwner);\n \n     @Override\n-    boolean addPlainAttr(RPlainAttr attr);\n+    boolean addPlainAttr(GPlainAttr attr);\n \n     @Override\n-    boolean addDerAttr(RDerAttr attr);\n+    boolean addDerAttr(GDerAttr attr);\n \n     @Override\n-    boolean addVirAttr(RVirAttr attr);\n+    boolean addVirAttr(GVirAttr attr);\n \n     @Override\n-    RPlainAttr getPlainAttr(String plainSchemaName);\n+    GPlainAttr getPlainAttr(String plainSchemaName);\n \n     @Override\n-    List<? extends RPlainAttr> getPlainAttrs();\n+    List<? extends GPlainAttr> getPlainAttrs();\n \n     @Override\n-    RDerAttr getDerAttr(String derSchemaName);\n+    GDerAttr getDerAttr(String derSchemaName);\n \n     @Override\n-    List<? extends RDerAttr> getDerAttrs();\n+    List<? extends GDerAttr> getDerAttrs();\n \n     @Override\n-    RVirAttr getVirAttr(String virSchemaName);\n+    GVirAttr getVirAttr(String virSchemaName);\n \n     @Override\n-    List<? extends RVirAttr> getVirAttrs();\n+    List<? extends GVirAttr> getVirAttrs();\n \n     @Override\n-    boolean removePlainAttr(RPlainAttr attr);\n+    boolean removePlainAttr(GPlainAttr attr);\n \n     @Override\n-    boolean removeDerAttr(RDerAttr derAttr);\n+    boolean removeDerAttr(GDerAttr derAttr);\n \n     @Override\n-    boolean removeVirAttr(RVirAttr virAttr);\n+    boolean removeVirAttr(GVirAttr virAttr);\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/role/Role.java"},{"sha":"b83270ae9da2291b065d834bb48e3892ff6dcac3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/membership/Membership.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fmembership%2FMembership.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,16 +20,16 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Attributable;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n public interface Membership extends Attributable<MPlainAttr, MDerAttr, MVirAttr> {\n \n-    Role getRole();\n+    Group getGroup();\n \n     User getUser();\n \n-    void setRole(Role role);\n+    void setGroup(Group group);\n \n     void setUser(User user);\n "},{"sha":"deaf36fc62f1c9d02261a287dcd5e7a079b149ee","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,11 +20,11 @@\n \n public interface PushTask extends ProvisioningTask {\n \n-    String getRoleFilter();\n+    String getGroupFilter();\n \n     String getUserFilter();\n \n-    void setRoleFilter(String roleFilter);\n+    void setGroupFilter(String filter);\n \n     void setUserFilter(String filter);\n }"},{"sha":"0d3b24c22bd67828fa087b02d09ffa7a02d21c19","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/SyncTask.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -18,20 +18,20 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.task;\n \n-import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public interface SyncTask extends ProvisioningTask {\n \n-    RoleTO getRoleTemplate();\n+    GroupTO getGroupTemplate();\n \n     UserTO getUserTemplate();\n \n     boolean isFullReconciliation();\n \n     void setFullReconciliation(boolean condition);\n \n-    void setRoleTemplate(RoleTO roleTemplate);\n+    void setGroupTemplate(GroupTO groupTemplate);\n \n     void setUserTemplate(UserTO userTemplate);\n }"},{"sha":"5c3ec4d8c44525dfbf104d68e02e6fb9888c4f49","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/User.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Subject;\n import org.apache.syncope.core.persistence.api.entity.membership.Membership;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n \n public interface User extends Subject<UPlainAttr, UDerAttr, UVirAttr> {\n \n@@ -47,7 +47,7 @@ public interface User extends Subject<UPlainAttr, UDerAttr, UVirAttr> {\n \n     Date getLastLoginDate();\n \n-    Membership getMembership(Long roleKey);\n+    Membership getMembership(Long groupKey);\n \n     List<? extends Membership> getMemberships();\n \n@@ -57,9 +57,9 @@ public interface User extends Subject<UPlainAttr, UDerAttr, UVirAttr> {\n \n     List<String> getPasswordHistory();\n \n-    Set<Long> getRoleKeys();\n+    Set<Long> getGroupKeys();\n \n-    List<Role> getRoles();\n+    List<Group> getGroups();\n \n     String getSecurityAnswer();\n "},{"sha":"4a3f97572177d4b6db9a5cc7d0161bfbc2f4cdee","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -93,7 +93,7 @@ public class XMLContentExporter extends AbstractContentDealer implements Content\n             Collections.singletonMap(\"TASK\", \"DTYPE <> 'PropagationTask'\");\n \n     protected static final Map<String, Set<String>> COLUMNS_TO_BE_NULLIFIED =\n-            Collections.singletonMap(\"SYNCOPEROLE\", Collections.singleton(\"USEROWNER_ID\"));\n+            Collections.singletonMap(\"SYNCOPEGROUP\", Collections.singleton(\"USEROWNER_ID\"));\n \n     private boolean isTableAllowed(final String tableName) {\n         boolean allowed = true;"},{"sha":"93c54e9ff2902b84f25cfc2664c876b6ab2e147c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractSubjectDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -82,7 +82,7 @@ private List<String> split(final String attrValue, final List<String> literals)\n      *\n      * @param expression derived schema expression\n      * @param value derived attribute value\n-     * @param attrUtil USER / ROLE\n+     * @param attrUtil USER / GROUP\n      * @return where clauses to use to build the query\n      */\n     private Set<String> getWhereClause(final String expression, final String value, final AttributableUtil attrUtil) {\n@@ -276,15 +276,15 @@ public Subject<P, D, V> findByAttrUniqueValue(\n     }\n \n     /**\n-     * Find users / roles by derived attribute value. This method could fail if one or more string literals contained\n+     * Find users / groups by derived attribute value. This method could fail if one or more string literals contained\n      * into the derived attribute value provided derive from identifier (schema name) replacement. When you are going to\n      * specify a derived attribute expression you must be quite sure that string literals used to build the expression\n      * cannot be found into the attribute values used to replace attribute schema names used as identifiers.\n      *\n      * @param schemaName derived schema name\n      * @param value derived attribute value\n      * @param attrUtil AttributableUtil\n-     * @return list of users / roles\n+     * @return list of users / groups\n      */\n     @Override\n     public List<? extends Subject<P, D, V>> findByDerAttrValue("},{"sha":"2b331782785582c0d8e1f920a649d7db53ae256a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAttrTemplateDAO.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAttrTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAttrTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAttrTemplateDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -27,16 +27,16 @@\n import org.apache.syncope.core.persistence.api.entity.membership.MDerAttrTemplate;\n import org.apache.syncope.core.persistence.api.entity.membership.MPlainAttrTemplate;\n import org.apache.syncope.core.persistence.api.entity.membership.MVirAttrTemplate;\n-import org.apache.syncope.core.persistence.api.entity.role.RDerAttrTemplate;\n-import org.apache.syncope.core.persistence.api.entity.role.RPlainAttrTemplate;\n-import org.apache.syncope.core.persistence.api.entity.role.RVirAttrTemplate;\n+import org.apache.syncope.core.persistence.api.entity.group.GDerAttrTemplate;\n+import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrTemplate;\n+import org.apache.syncope.core.persistence.api.entity.group.GVirAttrTemplate;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractAttrTemplate;\n import org.apache.syncope.core.persistence.jpa.entity.membership.JPAMDerAttrTemplate;\n import org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrTemplate;\n import org.apache.syncope.core.persistence.jpa.entity.membership.JPAMVirAttrTemplate;\n-import org.apache.syncope.core.persistence.jpa.entity.role.JPARDerAttrTemplate;\n-import org.apache.syncope.core.persistence.jpa.entity.role.JPARPlainAttrTemplate;\n-import org.apache.syncope.core.persistence.jpa.entity.role.JPARVirAttrTemplate;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAGDerAttrTemplate;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrTemplate;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAGVirAttrTemplate;\n import org.springframework.stereotype.Repository;\n import org.springframework.util.ReflectionUtils;\n \n@@ -53,12 +53,12 @@ private <T extends AttrTemplate<S>> Class<? extends AbstractAttrTemplate<? exten\n                         ? JPAMDerAttrTemplate.class\n                         : MVirAttrTemplate.class.isAssignableFrom(reference)\n                                 ? JPAMVirAttrTemplate.class\n-                                : RPlainAttrTemplate.class.isAssignableFrom(reference)\n-                                        ? JPARPlainAttrTemplate.class\n-                                        : RDerAttrTemplate.class.isAssignableFrom(reference)\n-                                                ? JPARDerAttrTemplate.class\n-                                                : RVirAttrTemplate.class.isAssignableFrom(reference)\n-                                                        ? JPARVirAttrTemplate.class\n+                                : GPlainAttrTemplate.class.isAssignableFrom(reference)\n+                                        ? JPAGPlainAttrTemplate.class\n+                                        : GDerAttrTemplate.class.isAssignableFrom(reference)\n+                                                ? JPAGDerAttrTemplate.class\n+                                                : GVirAttrTemplate.class.isAssignableFrom(reference)\n+                                                        ? JPAGVirAttrTemplate.class\n                                                         : null;\n     }\n "},{"sha":"ff32fb83a17205c48c017229d21a1ba03345b90b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerAttrDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerAttrDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -24,11 +24,11 @@\n import org.apache.syncope.core.persistence.api.entity.Attributable;\n import org.apache.syncope.core.persistence.api.entity.DerAttr;\n import org.apache.syncope.core.persistence.api.entity.membership.MDerAttr;\n-import org.apache.syncope.core.persistence.api.entity.role.RDerAttr;\n+import org.apache.syncope.core.persistence.api.entity.group.GDerAttr;\n import org.apache.syncope.core.persistence.api.entity.user.UDerAttr;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractDerAttr;\n import org.apache.syncope.core.persistence.jpa.entity.membership.JPAMDerAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.role.JPARDerAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAGDerAttr;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUDerAttr;\n import org.springframework.stereotype.Repository;\n \n@@ -38,8 +38,8 @@ public class JPADerAttrDAO extends AbstractDAO<DerAttr, Long> implements DerAttr\n     public <T extends DerAttr> Class<? extends AbstractDerAttr> getJPAEntityReference(\n             final Class<T> reference) {\n \n-        return RDerAttr.class.isAssignableFrom(reference)\n-                ? JPARDerAttr.class\n+        return GDerAttr.class.isAssignableFrom(reference)\n+                ? JPAGDerAttr.class\n                 : MDerAttr.class.isAssignableFrom(reference)\n                         ? JPAMDerAttr.class\n                         : UDerAttr.class.isAssignableFrom(reference)"},{"sha":"6e1db3f4cff3b4ae254360a4c823e684355cb19f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerSchemaDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -32,13 +32,13 @@\n import org.apache.syncope.core.persistence.api.entity.DerAttr;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.membership.MDerSchema;\n-import org.apache.syncope.core.persistence.api.entity.role.RDerSchema;\n+import org.apache.syncope.core.persistence.api.entity.group.GDerSchema;\n import org.apache.syncope.core.persistence.api.entity.user.UDerAttr;\n import org.apache.syncope.core.persistence.api.entity.user.UDerSchema;\n import org.apache.syncope.core.persistence.api.entity.user.UMappingItem;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractDerSchema;\n import org.apache.syncope.core.persistence.jpa.entity.membership.JPAMDerSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.role.JPARDerSchema;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAGDerSchema;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUDerSchema;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -56,8 +56,8 @@ public class JPADerSchemaDAO extends AbstractDAO<DerSchema, String> implements D\n     private ExternalResourceDAO resourceDAO;\n \n     private <T extends DerSchema> Class<? extends AbstractDerSchema> getJPAEntityReference(final Class<T> reference) {\n-        return RDerSchema.class.isAssignableFrom(reference)\n-                ? JPARDerSchema.class\n+        return GDerSchema.class.isAssignableFrom(reference)\n+                ? JPAGDerSchema.class\n                 : MDerSchema.class.isAssignableFrom(reference)\n                         ? JPAMDerSchema.class\n                         : UDerSchema.class.isAssignableFrom(reference)"},{"sha":"18c0776f8c3d3ae442cda176283e62668e0ffe3f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAEntitlementDAO.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntitlementDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntitlementDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntitlementDAO.java?ref=4095f1e84bc22e0f0253e1ccf0c4daeddd2c1b35","patch":"@@ -20,11 +20,11 @@\n \n import java.util.List;\n import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.api.RoleEntitlementUtil;\n+import org.apache.syncope.core.persistence.api.GroupEntitlementUtil;\n import org.apache.syncope.core.persistence.api.dao.EntitlementDAO;\n-import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.entity.Entitlement;\n-import org.apache.syncope.core.persistence.api.entity.role.Role;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.jpa.entity.JPAEntitlement;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -33,7 +33,7 @@\n public class JPAEntitlementDAO extends AbstractDAO<Entitlement, String> implements EntitlementDAO {\n \n     @Autowired\n-    private RoleDAO roleDAO;\n+    private GroupDAO groupDAO;\n \n     @Override\n     public Entitlement find(final String name) {\n@@ -54,12 +54,12 @@ public Entitlement save(final Entitlement entitlement) {\n     }\n \n     @Override\n-    public Entitlement saveRoleEntitlement(final Role role) {\n-        Entitlement roleEnt = new JPAEntitlement();\n-        roleEnt.setKey(RoleEntitlementUtil.getEntitlementNameFromRoleKey(role.getKey()));\n-        roleEnt.setDescription(\"Entitlement for managing role \" + role.getKey());\n+    public Entitlement saveGroupEntitlement(final Group group) {\n+        Entitlement groupEnt = new JPAEntitlement();\n+        groupEnt.setKey(GroupEntitlementUtil.getEntitlementNameFromGroupKey(group.getKey()));\n+        groupEnt.setDescription(\"Entitlement for managing group \" + group.getKey());\n \n-        return save(roleEnt);\n+        return save(groupEnt);\n     }\n \n     @Override\n@@ -78,9 +78,9 @@ public void delete(final Entitlement entitlement) {\n             return;\n         }\n \n-        for (Role role : roleDAO.findByEntitlement(entitlement)) {\n-            role.removeEntitlement(entitlement);\n-            roleDAO.save(role);\n+        for (Group group : groupDAO.findByEntitlement(entitlement)) {\n+            group.removeEntitlement(entitlement);\n+            groupDAO.save(group);\n         }\n \n         entityManager.remove(entitlement);"}]}