{"sha":"0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBkNWJhMzlhM2Q5MzViNzMzYTRlNzk3MzJkMmE3OWNjN2Q2YWZkYTY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-10T17:04:01Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-10T17:04:01Z"},"message":"[SYNCOPE-156] fix for dynamic memberships","tree":{"sha":"989eb8167114a696d2d81206a60d15a777814dea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/989eb8167114a696d2d81206a60d15a777814dea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"b578a788a18c17aa976148b82944aacc6a9869de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b578a788a18c17aa976148b82944aacc6a9869de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b578a788a18c17aa976148b82944aacc6a9869de"}],"stats":{"total":700,"additions":403,"deletions":297},"files":[{"sha":"d5731ff0e812a50e1d850d215e0752de73bd04f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AnyDisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -38,7 +38,7 @@\n     public static final String[] ANY_DEFAULT_SELECTION = { \"key\" };\n \n     public AnyDisplayAttributesModalPage(\n-            final BaseModal<T> modal,\n+            final BaseModal<?> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {"},{"sha":"09dbb0690b569b1c0407b4ba9291dd61f62186bc","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupDisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -35,7 +35,7 @@ public class GroupDisplayAttributesModalPage extends DisplayAttributesModalPage\n     public static final String[] GROUP_DEFAULT_SELECTION = { \"key\", \"name\" };\n \n     public GroupDisplayAttributesModalPage(\n-            final BaseModal<GroupTO> modal,\n+            final BaseModal<?> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {"},{"sha":"8ee6357f3deda1ad6038ee1ac57ae91319a9efe7","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModal.java","status":"modified","additions":79,"deletions":79,"changes":158,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -103,15 +103,15 @@\n     private final List<IColumn<StatusBean, String>> columns;\n \n     public StatusModal(\n-            final BaseModal<T> modal,\n+            final BaseModal<?> modal,\n             final PageReference pageRef,\n             final AnyTO attributableTO) {\n \n         this(modal, pageRef, attributableTO, false);\n     }\n \n     public StatusModal(\n-            final BaseModal<T> modal,\n+            final BaseModal<?> modal,\n             final PageReference pageRef,\n             final AnyTO anyTO,\n             final boolean statusOnly) {\n@@ -130,57 +130,57 @@ public StatusModal(\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"resourceName\", this, null), \"resourceName\") {\n \n-                    private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                    private static final long serialVersionUID = 8432079838783825801L;\n \n                     @Override\n-                    public void populateItem(\n-                            final Item<ICellPopulator<StatusBean>> cellItem,\n-                            final String componentId,\n-                            final IModel<StatusBean> model) {\n-\n-                                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n-\n-                                    private static final long serialVersionUID = 8432079838783825801L;\n-\n-                                    @Override\n-                                    protected void onComponentTag(final ComponentTag tag) {\n-                                        if (model.getObject().isLinked()) {\n-                                            super.onComponentTag(tag);\n-                                        } else {\n-                                            tag.put(\"style\", \"color: #DDDDDD\");\n-                                        }\n-                                    }\n-                                });\n-                            }\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        if (model.getObject().isLinked()) {\n+                            super.onComponentTag(tag);\n+                        } else {\n+                            tag.put(\"style\", \"color: #DDDDDD\");\n+                        }\n+                    }\n                 });\n+            }\n+        });\n \n         columns.add(new PropertyColumn<StatusBean, String>(\n                 new StringResourceModel(\"connObjectLink\", this, null), \"connObjectLink\", \"connObjectLink\"));\n \n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null)) {\n \n-                    private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -3503023501954863131L;\n \n-                    @Override\n-                    public String getCssClass() {\n-                        return \"action\";\n-                    }\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n \n-                    @Override\n-                    public void populateItem(\n-                            final Item<ICellPopulator<StatusBean>> cellItem,\n-                            final String componentId,\n-                            final IModel<StatusBean> model) {\n-\n-                                if (model.getObject().isLinked()) {\n-                                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n-                                                    getStatus()));\n-                                } else {\n-                                    cellItem.add(new Label(componentId, \"\"));\n-                                }\n-                            }\n-                });\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                if (model.getObject().isLinked()) {\n+                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n+                            getStatus()));\n+                } else {\n+                    cellItem.add(new Label(componentId, \"\"));\n+                }\n+            }\n+        });\n \n         table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n@@ -189,13 +189,13 @@ public void populateItem(\n                 rowsPerPage,\n                 pageRef) {\n \n-                    private static final long serialVersionUID = 6510391461033818316L;\n+            private static final long serialVersionUID = 6510391461033818316L;\n \n-                    @Override\n-                    public boolean isElementEnabled(final StatusBean element) {\n-                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n-                    }\n-                };\n+            @Override\n+            public boolean isElementEnabled(final StatusBean element) {\n+                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+            }\n+        };\n         table.setOutputMarkupId(true);\n \n         final String pageId = anyTO instanceof GroupTO ? \"Groups\" : \"Users\";\n@@ -248,13 +248,13 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         final ClearIndicatingAjaxButton goon = new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"),\n                 pageRef) {\n \n-                    private static final long serialVersionUID = -2341391430136818027L;\n+            private static final long serialVersionUID = -2341391430136818027L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        // none\n-                    }\n-                };\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // none\n+            }\n+        };\n \n         pwdMgtForm.add(goon);\n \n@@ -555,18 +555,18 @@ private void passwordManagement(\n         final ClearIndicatingAjaxButton goon = new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\",\n                 \"Continue\"), pageRef) {\n \n-                    private static final long serialVersionUID = -2341391430136818027L;\n+            private static final long serialVersionUID = -2341391430136818027L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        try {\n-                            if (StringUtils.isNotBlank(password.getModelObject())\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    if (StringUtils.isNotBlank(password.getModelObject())\n                             && !password.getModelObject().equals(confirm.getModelObject())) {\n-                                throw new Exception(getString(\"passwordMismatch\"));\n-                            }\n+                        throw new Exception(getString(\"passwordMismatch\"));\n+                    }\n \n-                            final BulkActionResult bulkActionResult;\n-                            switch (type) {\n+                    final BulkActionResult bulkActionResult;\n+                    switch (type) {\n //                                case ASSIGN:\n //                                    bulkActionResult = userRestClient.assign(\n //                                            anyTO.getETagValue(),\n@@ -583,27 +583,27 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n //                                            changepwd.getModelObject(),\n //                                            password.getModelObject());\n //                                    break;\n-                                default:\n-                                    bulkActionResult = null;\n-                                // ignore\n-                            }\n+                        default:\n+                            bulkActionResult = null;\n+                        // ignore\n+                    }\n \n-                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                    ((BasePage) pageRef.getPage()).setModalResult(true);\n \n-                            if (bulkActionResult != null) {\n-                                loadBulkActionResultPage(target, selection, bulkActionResult);\n-                            } else {\n+                    if (bulkActionResult != null) {\n+                        loadBulkActionResultPage(target, selection, bulkActionResult);\n+                    } else {\n \n-                                target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n-                                modal.close(target);\n-                            }\n-                        } catch (Exception e) {\n-                            LOG.error(\"Error provisioning resources\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            modal.getFeedbackPanel().refresh(target);\n-                        }\n+                        target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                        modal.close(target);\n                     }\n-                }.feedbackPanelAutomaticReload(false);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error provisioning resources\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    modal.getFeedbackPanel().refresh(target);\n+                }\n+            }\n+        }.feedbackPanelAutomaticReload(false);\n \n         pwdMgtForm.addOrReplace(goon);\n "},{"sha":"0529f9ffe6995ee9ad6ab8e848dfd656b4a6e0a9","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserDisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -35,7 +35,7 @@ public class UserDisplayAttributesModalPage extends DisplayAttributesModalPage {\n     public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n \n     public UserDisplayAttributesModalPage(\n-            final BaseModal<UserTO> modal,\n+            final BaseModal<?> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {"},{"sha":"d3bdd34ccd5c51eaa6e84f04c344eed2ac4d4ddd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -43,7 +44,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractSearchResultPanel<T extends AnyTO> extends WizardMgtPanel<T> {\n+public abstract class AbstractSearchResultPanel<T extends AnyTO> extends WizardMgtPanel<AnyHandler<T>> {\n \n     private static final long serialVersionUID = -9170191461250434024L;\n \n@@ -294,7 +295,7 @@ public void setRows(final int rows) {\n \n     protected abstract String getPageId();\n \n-    public abstract static class Builder<T extends AnyTO> extends WizardMgtPanel.Builder<T> {\n+    public abstract static class Builder<T extends AnyTO> extends WizardMgtPanel.Builder<AnyHandler<T>> {\n \n         private static final long serialVersionUID = 5088962796986706805L;\n \n@@ -330,7 +331,7 @@ protected Builder(\n                 final String realm,\n                 final String type) {\n \n-            super(reference, pageRef);\n+            super(pageRef);\n             this.filtered = filtered;\n             this.fiql = fiql;\n             this.restClient = restClient;"},{"sha":"2bb56d7c2adfedb775e95041adbd50cafc044545","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -144,23 +145,24 @@ public ActionLinksPanel<T> getActions(final String componentId, final IModel<T>\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n                         send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                                new AjaxWizard.EditItemActionEvent<AnyHandler<T>>(\n+                                        new AnyHandler<T>(model.getObject()), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<T>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final T anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n                         try {\n                             restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            LOG.error(\"While deleting object {}\", anyTO.getKey(), e);\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n                     }\n@@ -241,7 +243,7 @@ public Builder(\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyObjectTO> newInstance(final String parentId) {\n+        protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String parentId) {\n             return new AnyObjectSearchResultPanel<>(\n                     type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm, type + \"_LIST\");\n         }"},{"sha":"eb692f8fc18b19412c23ee2b3622fb1cf23db183","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -36,6 +36,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.client.console.wizards.any.GroupHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -122,7 +124,8 @@ public ActionLinksPanel<GroupTO> getActions(final String componentId, final IMod\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                         send(GroupSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<AnyTO>(model.getObject(), target));\n+                                new AjaxWizard.EditItemActionEvent<GroupHandler>(\n+                                        new GroupHandler(model.getObject()), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<GroupTO>() {\n \n@@ -136,7 +139,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            LOG.error(\"While deleting object {}\", anyTO.getKey(), e);\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n \n@@ -243,7 +246,7 @@ public Builder(\n         }\n \n         @Override\n-        protected WizardMgtPanel<GroupTO> newInstance(final String parentId) {\n+        protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String parentId) {\n             return new GroupSearchResultPanel(\n                     type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm,\n                     StandardEntitlement.GROUP_SEARCH);"},{"sha":"69e69d7b93a9fe37ea45a01d43a416386b6dfd17","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -232,8 +232,11 @@ public void setCheckAvailability(final CheckAvailability check) {\n \n         private boolean reuseItem = true;\n \n+        private final Class<T> reference;\n+\n         public Builder(final Class<T> reference, final PageReference pageRef) {\n-            super(reference, pageRef);\n+            super(pageRef);\n+            this.reference = reference;\n             this.items = null;\n             this.actions = ActionLinksPanel.<T>builder(pageRef);\n         }\n@@ -358,7 +361,7 @@ public void onEvent(final IEvent<?> event) {\n \n             final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n             final AjaxRequestTarget target = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getTarget();\n-            \n+\n             if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 if (item != null && !this.listOfItems.contains(item)) {\n                     this.listOfItems.add(item);"},{"sha":"7bc12b3f421bacf05a0e8089ec707bd46b50824b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":23,"deletions":17,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -126,53 +127,58 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n-                        final IModel<UserTO> model = new CompoundPropertyModel<>(anyTO);\n-                        modal.setFormModel(model);\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        modal.setFormModel(formModel);\n \n-                        target.add(modal.\n-                                setContent(new StatusModal<>(modal, page.getPageReference(), model.getObject())));\n+                        target.add(modal.setContent(new StatusModal<>(\n+                                modal, page.getPageReference(), formModel.getObject().getInnerObject())));\n \n-                        modal.header(new Model<>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n+                        modal.header(new Model<>(MessageFormat.format(\n+                                getString(\"any.edit\"), model.getObject().getKey())));\n                         modal.show(true);\n                     }\n                 }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_LIST).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n-                        final IModel<UserTO> model = new CompoundPropertyModel<>(anyTO);\n-                        modal.setFormModel(model);\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        modal.setFormModel(formModel);\n \n-                        target.add(modal.setContent(new StatusModal<>(modal, page.getPageReference(), model.getObject(),\n-                                true)));\n+                        target.add(modal.setContent(new StatusModal<>(\n+                                modal, page.getPageReference(), formModel.getObject().getInnerObject(), true)));\n \n-                        modal.header(new Model<>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n+                        modal.header(new Model<>(MessageFormat.format(\n+                                getString(\"any.edit\"), model.getObject().getKey())));\n                         modal.show(true);\n                     }\n                 }, ActionLink.ActionType.ENABLE, entitlement).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO modelObject) {\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         send(UserSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<AnyTO>(model.getObject(), target));\n+                                new AjaxWizard.EditItemActionEvent<AnyHandler<UserTO>>(\n+                                        new AnyHandler<UserTO>(model.getObject()), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         try {\n                             restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            LOG.error(\"While deleting object {}\", anyTO.getKey(), e);\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n                     }\n@@ -252,7 +258,7 @@ public Builder(\n         }\n \n         @Override\n-        protected WizardMgtPanel<UserTO> newInstance(final String parentId) {\n+        protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String parentId) {\n             return new UserSearchResultPanel(\n                     type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm,\n                     StandardEntitlement.USER_LIST);"},{"sha":"dcf83bfbe7e4c815ad16a11dd4da11d8b6d948f7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -183,15 +183,12 @@ private WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificat\n \n         protected final PageReference pageRef;\n \n-        protected final Class<T> reference;\n-\n         private AjaxWizardBuilder<T> newItemPanelBuilder;\n \n         private NotificationPanel notificationPanel;\n \n-        protected Builder(final Class<T> reference, final PageReference pageRef) {\n+        protected Builder(final PageReference pageRef) {\n             this.pageRef = pageRef;\n-            this.reference = reference;\n         }\n \n         protected abstract WizardMgtPanel<T> newInstance(final String id);"},{"sha":"4e1b13cc8c87a0483b52be7b5ccb83bb47152805","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyHandler.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyHandler.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+\n+public class AnyHandler<T extends AnyTO> implements Serializable {\n+\n+    private static final long serialVersionUID = 8058288034211558375L;\n+\n+    protected final T anyTO;\n+\n+    public AnyHandler(final T anyTO) {\n+        this.anyTO = anyTO;\n+    }\n+\n+    public T getInnerObject() {\n+        return anyTO;\n+    }\n+\n+}"},{"sha":"3c321ddba683f33ae8644f05319e14c2e5407796","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":45,"deletions":21,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -34,7 +34,8 @@\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<T> implements Serializable {\n+public class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<AnyHandler<T>>\n+        implements Serializable {\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n@@ -52,62 +53,85 @@\n      */\n     public AnyWizardBuilder(\n             final String id, final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(id, anyTO, pageRef);\n+        super(id, new AnyHandler<T>(anyTO), pageRef);\n+        this.anyTypeClasses = anyTypeClasses;\n+    }\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param handler any handler\n+     * @param anyTypeClasses any type classes\n+     * @param pageRef Caller page reference.\n+     */\n+    public AnyWizardBuilder(\n+            final String id,\n+            final AnyHandler<T> handler,\n+            final List<String> anyTypeClasses,\n+            final PageReference pageRef) {\n+        super(id, handler, pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel) {\n+    protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n         final String[] clazzes = anyTypeClasses.toArray(new String[] {});\n         // optional details panel step\n         addOptionalDetailsPanel(modelObject, wizardModel);\n \n-        wizardModel.add(new AuxClasses(modelObject, clazzes));\n+        wizardModel.add(new AuxClasses(modelObject.getInnerObject(), clazzes));\n \n         // attributes panel steps\n-        wizardModel.add(new PlainAttrs(modelObject, null, Mode.ADMIN, clazzes));\n-        wizardModel.add(new DerAttrs(modelObject, clazzes));\n-        wizardModel.add(new VirAttrs(modelObject, clazzes));\n+        wizardModel.add(new PlainAttrs(modelObject.getInnerObject(), null, Mode.ADMIN, clazzes));\n+        wizardModel.add(new DerAttrs(modelObject.getInnerObject(), clazzes));\n+        wizardModel.add(new VirAttrs(modelObject.getInnerObject(), clazzes));\n \n         // role panel step (jst available for users)\n-        if ((this instanceof UserWizardBuilder) && (modelObject instanceof UserTO)) {\n-            wizardModel.add(new Roles(UserTO.class.cast(modelObject)));\n+        if ((this instanceof UserWizardBuilder) && (modelObject.getInnerObject() instanceof UserTO)) {\n+            wizardModel.add(new Roles(UserTO.class.cast(modelObject.getInnerObject())));\n         }\n \n         // resource panel step\n-        wizardModel.add(new Resources(modelObject));\n+        wizardModel.add(new Resources(modelObject.getInnerObject()));\n         return wizardModel;\n     }\n \n     @Override\n-    protected void onCancelInternal(final T modelObject) {\n+    protected void onCancelInternal(final AnyHandler<T> modelObject) {\n         // do nothing\n     }\n \n     @Override\n-    protected void onApplyInternal(final T modelObject) {\n-        if (!(modelObject instanceof AnyObjectTO)) {\n+    protected void onApplyInternal(final AnyHandler<T> modelObject) {\n+        final T obj = modelObject.getInnerObject();\n+\n+        if (!(obj instanceof AnyObjectTO)) {\n             throw new IllegalArgumentException();\n         }\n \n         final ProvisioningResult<AnyObjectTO> actual;\n \n-        if (modelObject.getKey() == 0) {\n-            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(modelObject));\n+        if (obj.getKey() == 0) {\n+            actual = anyTypeRestClient.create(AnyObjectTO.class.cast(obj));\n         } else {\n-            final AnyObjectPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), true);\n+            final AnyObjectPatch patch = AnyOperations.diff(obj, getOriginalItem().getInnerObject(), true);\n \n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = anyTypeRestClient.update(getOriginalItem().getETagValue(), patch);\n+                actual = anyTypeRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n     }\n \n-    protected AnyWizardBuilder<T> addOptionalDetailsPanel(final T modelObject, final WizardModel wizardModel) {\n-        if (modelObject.getKey() > 0) {\n-            wizardModel.add(\n-                    new Details<T>(modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), pageRef, true));\n+    protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n+            final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n+        if (modelObject.getInnerObject().getKey() > 0) {\n+            wizardModel.add(new Details<T>(\n+                    modelObject,\n+                    new ListModel<>(Collections.<StatusBean>emptyList()),\n+                    pageRef,\n+                    true));\n         }\n         return this;\n     }"},{"sha":"4f2beb022c7a13e951be697a90ec91f82d2ef55e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":36,"deletions":36,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -89,56 +89,56 @@ public String getIdValue(final MembershipTO object, final int index) {\n                         @Override\n                         public MembershipTO getObject(\n                                 final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n-                                    for (MembershipTO membershipTO : choices.getObject()) {\n-                                        if (id.equalsIgnoreCase(membershipTO.getGroupName())) {\n-                                            return membershipTO;\n-                                        }\n-                                    }\n-                                    return null;\n+                            for (MembershipTO membershipTO : choices.getObject()) {\n+                                if (id.equalsIgnoreCase(membershipTO.getGroupName())) {\n+                                    return membershipTO;\n                                 }\n+                            }\n+                            return null;\n+                        }\n                     });\n \n             fragment.add(builder.setAllowOrder(true).withFilter().build(\n                     \"groups\", new ListModel<MembershipTO>(memberships),\n                     new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n \n-                        private static final long serialVersionUID = 1L;\n+                private static final long serialVersionUID = 1L;\n+\n+                @Override\n+                public List<MembershipTO> execute(final String filter) {\n+                    return CollectionUtils.collect(\n+                            groupRestClient.search(\n+                                    entityTO.getRealm(),\n+                                    SyncopeClient.getGroupSearchConditionBuilder().\n+                                    isAssignable().and().is(\"name\").equalTo(filter).query(),\n+                                    -1, -1,\n+                                    new SortParam<>(\"name\", true),\n+                                    null),\n+                            new Transformer<GroupTO, MembershipTO>() {\n \n                         @Override\n-                        public List<MembershipTO> execute(final String filter) {\n-                            return CollectionUtils.collect(\n-                                    groupRestClient.search(\n-                                            entityTO.getRealm(),\n-                                            SyncopeClient.getGroupSearchConditionBuilder().\n-                                            isAssignable().and().is(\"name\").equalTo(filter).query(),\n-                                            -1, -1,\n-                                            new SortParam<>(\"name\", true),\n-                                            null),\n-                                    new Transformer<GroupTO, MembershipTO>() {\n-\n-                                        @Override\n-                                        public MembershipTO transform(final GroupTO input) {\n-                                            final MembershipTO membershipTO = new MembershipTO();\n-                                            membershipTO.setGroupName(input.getName());\n-                                            membershipTO.setRightKey(input.getKey());\n-                                            membershipTO.setRightType(input.getType());\n-                                            membershipTO.setLeftKey(entityTO.getKey());\n-                                            membershipTO.setLeftType(entityTO.getType());\n-                                            return membershipTO;\n-                                        }\n-                                    }, new ArrayList<MembershipTO>());\n+                        public MembershipTO transform(final GroupTO input) {\n+                            final MembershipTO membershipTO = new MembershipTO();\n+                            membershipTO.setGroupName(input.getName());\n+                            membershipTO.setRightKey(input.getKey());\n+                            membershipTO.setRightType(input.getType());\n+                            membershipTO.setLeftKey(entityTO.getKey());\n+                            membershipTO.setLeftType(entityTO.getType());\n+                            return membershipTO;\n                         }\n-                    }).setOutputMarkupId(true));\n+                    }, new ArrayList<MembershipTO>());\n+                }\n+            }).setOutputMarkupId(true));\n \n             final ArrayList<String> dynamics = CollectionUtils.collect(dyngroups,\n                     new Transformer<Long, String>() {\n \n-                        @Override\n-                        public String transform(final Long input) {\n-                            final GroupTO groupTO = groupRestClient.read(input);\n-                            return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n-                        }\n-                    }, new ArrayList<String>());\n+                @Override\n+                public String transform(final Long input) {\n+                    final GroupTO groupTO = groupRestClient.read(input);\n+                    return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n+                }\n+            }, new ArrayList<String>());\n \n             fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n                     \"dyngroups\","},{"sha":"bb588e59fdd7fa8a48c035864a747563b9c72cc4","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -34,12 +34,14 @@\n     protected final StatusPanel statusPanel;\n \n     public Details(\n-            final T anyTO,\n+            final AnyHandler<T> handler,\n             final IModel<List<StatusBean>> statusModel,\n             final PageReference pageRef,\n             final boolean includeStatusPanel) {\n         this.pageRef = pageRef;\n \n+        T anyTO = handler.getInnerObject();\n+\n         statusPanel = new StatusPanel(\"status\", anyTO, statusModel, pageRef);\n \n         add(statusPanel.setEnabled(includeStatusPanel)."},{"sha":"6b3d7f1f4ec43f9479ba278a000ad508aa147334","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -80,12 +80,14 @@ public class GroupDetails extends Details<GroupTO> {\n     private final OwnerModel gOwnerModel;\n \n     public GroupDetails(\n-            final GroupTO groupTO,\n+            final GroupHandler groupHandler,\n             final IModel<List<StatusBean>> statusModel,\n             final boolean templateMode,\n             final PageReference pageRef,\n             final boolean includeStatusPanel) {\n-        super(groupTO, statusModel, pageRef, includeStatusPanel);\n+        super(groupHandler, statusModel, pageRef, includeStatusPanel);\n+\n+        final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n \n         final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n \n@@ -220,10 +222,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupTO, \"uDynClauses\")).\n+                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupHandler, \"uDynClauses\")).\n                         required(false).build(panelId);\n             }\n-        }), Model.of(StringUtils.isBlank(groupTO.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n+        }), Model.of(StringUtils.isBlank(groupHandler.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n         // ------------------------ \n \n         // ------------------------\n@@ -245,11 +247,10 @@ protected void populateItem(final ListItem<AnyTypeTO> item) {\n                     @Override\n                     public Panel getPanel(final String panelId) {\n                         return new AnyObjectSearchPanel.Builder(\n-                                new MapOfListModel<SearchClause>(groupTO, \"aDynClauses\",\n-                                        item.getModelObject().getKey())).\n+                                new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n                                 required(false).build(panelId);\n                     }\n-                }), Model.of(StringUtils.isBlank(groupTO.getADynMembershipConds().get(key)) ? -1 : 0))\n+                }), Model.of(StringUtils.isBlank(groupHandler.getADynMembershipConds().get(key)) ? -1 : 0))\n                         .setOutputMarkupId(true));\n             }\n         });"},{"sha":"0afba0539eee20c84bbc1e1469c8821b023a5479","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupHandler.java","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+\n+public class GroupHandler extends AnyHandler<GroupTO> {\n+\n+    private static final long serialVersionUID = 8058288034211558376L;\n+\n+    private List<SearchClause> uDynClauses;\n+\n+    private Map<String, List<SearchClause>> aDynClauses;\n+\n+    public GroupHandler(final GroupTO anyTO) {\n+        super(anyTO);\n+    }\n+\n+    public List<SearchClause> getUDynClauses() {\n+        if (this.uDynClauses == null) {\n+            this.uDynClauses = SearchUtils.getSearchClauses(this.anyTO.getUDynMembershipCond());\n+        }\n+        return this.uDynClauses;\n+    }\n+\n+    public void setUDynClauses(final List<SearchClause> uDynClauses) {\n+        this.uDynClauses = uDynClauses;\n+    }\n+\n+    public Map<String, List<SearchClause>> getADynClauses() {\n+        if (this.aDynClauses == null) {\n+            this.aDynClauses = SearchUtils.getSearchClauses(this.anyTO.getADynMembershipConds());\n+        }\n+        return this.aDynClauses;\n+    }\n+\n+    public void setADynClauses(final Map<String, List<SearchClause>> aDynClauses) {\n+        this.aDynClauses = aDynClauses;\n+    }\n+\n+    public String getUDynMembershipCond() {\n+        if (CollectionUtils.isEmpty(this.uDynClauses)) {\n+            return this.anyTO.getUDynMembershipCond();\n+        } else {\n+            return getFIQLString(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n+        }\n+    }\n+\n+    public Map<String, String> getADynMembershipConds() {\n+        if (this.aDynClauses == null || this.aDynClauses.isEmpty()) {\n+            return this.anyTO.getADynMembershipConds();\n+        } else {\n+            final Map<String, String> res = new HashMap<>();\n+\n+            for (Map.Entry<String, List<SearchClause>> entry : this.aDynClauses.entrySet()) {\n+                if (CollectionUtils.isNotEmpty(entry.getValue())) {\n+                    res.put(entry.getKey(), getFIQLString(entry.getValue(),\n+                            SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey())));\n+                }\n+            }\n+\n+            return res;\n+        }\n+    }\n+\n+    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n+        return SearchUtils.buildFIQL(clauses, bld);\n+    }\n+\n+    public GroupTO fillDynamicConditions() {\n+        this.anyTO.setUDynMembershipCond(this.getUDynMembershipCond());\n+        this.anyTO.getADynMembershipConds().putAll(this.getADynMembershipConds());\n+        return this.anyTO;\n+    }\n+}"},{"sha":"43b5f7367be0dcf81c88f46940f592acc72b7d62","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":15,"deletions":94,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -16,25 +16,17 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.panels.search.SearchClause;\n-import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n-import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n-import org.springframework.beans.BeanUtils;\n \n public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n \n@@ -52,7 +44,7 @@ public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n      */\n     public GroupWizardBuilder(\n             final String id, final GroupTO groupTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(id, groupTO, anyTypeClasses, pageRef);\n+        super(id, new GroupHandler(groupTO), anyTypeClasses, pageRef);\n     }\n \n     /**\n@@ -63,107 +55,36 @@ public GroupWizardBuilder(\n      * @return the current builder.\n      */\n     @Override\n-    public AjaxWizardBuilder<GroupTO> setItem(final GroupTO item) {\n-        final GroupTO actual = new GroupHandler();\n-        BeanUtils.copyProperties(item == null ? getDefaultItem() : item, actual);\n-        return super.setItem(actual);\n+    public AjaxWizardBuilder<AnyHandler<GroupTO>> setItem(final AnyHandler<GroupTO> item) {\n+        return item == null ? super.setItem(item) : super.setItem(new GroupHandler(item.getInnerObject()));\n     }\n \n     @Override\n-    protected void onApplyInternal(final GroupTO modelObject) {\n+    protected void onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n         final ProvisioningResult<GroupTO> actual;\n \n         GroupTO toBeProcessed = modelObject instanceof GroupHandler\n-                ? GroupHandler.class.cast(modelObject).toGroupTO()\n-                : modelObject;\n+                ? GroupHandler.class.cast(modelObject).fillDynamicConditions()\n+                : modelObject.getInnerObject();\n \n-        if (modelObject.getKey() == 0) {\n+        if (toBeProcessed.getKey() == 0) {\n             actual = groupRestClient.create(toBeProcessed);\n         } else {\n-            final GroupPatch patch = AnyOperations.diff(toBeProcessed, getOriginalItem(), true);\n-\n+            final GroupPatch patch = AnyOperations.diff(toBeProcessed, getOriginalItem().getInnerObject(), true);\n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = groupRestClient.update(getOriginalItem().getETagValue(), patch);\n+                actual = groupRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n     }\n \n     @Override\n-    protected GroupWizardBuilder addOptionalDetailsPanel(final GroupTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new GroupDetails(modelObject,\n-                new ListModel<>(Collections.<StatusBean>emptyList()), false, pageRef, modelObject.getKey() > 0));\n+    protected GroupWizardBuilder addOptionalDetailsPanel(\n+            final AnyHandler<GroupTO> modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new GroupDetails(\n+                GroupHandler.class.cast(modelObject),\n+                new ListModel<>(Collections.<StatusBean>emptyList()),\n+                false, pageRef, modelObject.getInnerObject().getKey() > 0));\n         return this;\n     }\n-\n-    /**\n-     * Class tprovided to handle asychronous FIQL string translations.\n-     */\n-    public static class GroupHandler extends GroupTO {\n-\n-        private static final long serialVersionUID = 8058288034211558375L;\n-\n-        private List<SearchClause> uDynClauses;\n-\n-        private Map<String, List<SearchClause>> aDynClauses;\n-\n-        public List<SearchClause> getUDynClauses() {\n-            if (this.uDynClauses == null) {\n-                this.uDynClauses = SearchUtils.getSearchClauses(super.getUDynMembershipCond());\n-            }\n-            return this.uDynClauses;\n-        }\n-\n-        public void setUDynClauses(final List<SearchClause> uDynClauses) {\n-            this.uDynClauses = uDynClauses;\n-        }\n-\n-        public Map<String, List<SearchClause>> getADynClauses() {\n-            if (this.aDynClauses == null) {\n-                this.aDynClauses = SearchUtils.getSearchClauses(super.getADynMembershipConds());\n-            }\n-            return this.aDynClauses;\n-        }\n-\n-        public void setADynClauses(final Map<String, List<SearchClause>> aDynClauses) {\n-            this.aDynClauses = aDynClauses;\n-        }\n-\n-        @Override\n-        public String getUDynMembershipCond() {\n-            if (CollectionUtils.isEmpty(this.uDynClauses)) {\n-                return super.getUDynMembershipCond();\n-            } else {\n-                return getFIQLString(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n-            }\n-        }\n-\n-        @Override\n-        public Map<String, String> getADynMembershipConds() {\n-            if (this.aDynClauses == null || this.aDynClauses.isEmpty()) {\n-                return super.getADynMembershipConds();\n-            } else {\n-                final Map<String, String> res = new HashMap<>();\n-\n-                for (Map.Entry<String, List<SearchClause>> entry : this.aDynClauses.entrySet()) {\n-                    res.put(entry.getKey(), getFIQLString(entry.getValue(),\n-                            SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey())));\n-                }\n-\n-                return res;\n-            }\n-        }\n-\n-        private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n-            return SearchUtils.buildFIQL(clauses, bld);\n-        }\n-\n-        public GroupTO toGroupTO() {\n-            final GroupTO res = new GroupTO();\n-            BeanUtils.copyProperties(this, res, \"uDynClauses\", \"aDynClauses\");\n-            res.setUDynMembershipCond(this.getUDynMembershipCond());\n-            res.getADynMembershipConds().putAll(this.getADynMembershipConds());\n-            return res;\n-        }\n-    }\n }"},{"sha":"ef1ea05afc77ba6d7ab4cdb0b3456aaf321f6ce1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -48,13 +48,15 @@ public class UserDetails extends Details<UserTO> {\n     private static final String PASSWORD_CONTENT_PATH = \"body:content\";\n \n     public UserDetails(\n-            final UserTO userTO,\n+            final AnyHandler<UserTO> handler,\n             final IModel<List<StatusBean>> statusModel,\n             final boolean resetPassword,\n             final boolean templateMode,\n             final PageReference pageRef,\n             final boolean includeStatusPanel) {\n-        super(userTO, statusModel, pageRef, includeStatusPanel);\n+        super(handler, statusModel, pageRef, includeStatusPanel);\n+\n+        final UserTO userTO = handler.getInnerObject();\n         // ------------------------\n         // Username\n         // ------------------------\n@@ -82,15 +84,15 @@ public UserDetails(\n         final Collapsible collapsible = new Collapsible(\"collapsePanel\", Collections.<ITab>singletonList(\n                 new AbstractTab(new ResourceModel(\"password.change\", \"Change password\")) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+            private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public Panel getPanel(final String panelId) {\n-                        final PasswordPanel panel = new PasswordPanel(panelId, userTO, resetPassword, templateMode);\n-                        panel.setEnabled(model.getObject() >= 0);\n-                        return panel;\n-                    }\n-                }\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                final PasswordPanel panel = new PasswordPanel(panelId, userTO, resetPassword, templateMode);\n+                panel.setEnabled(model.getObject() >= 0);\n+                return panel;\n+            }\n+        }\n         ), model) {\n \n             private static final long serialVersionUID = 1L;"},{"sha":"28245b9998a6b481f658cc3018d238c16c51cf17","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":17,"deletions":10,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -47,33 +47,40 @@ public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n      * @param pageRef Caller page reference.\n      */\n     public UserWizardBuilder(\n-            final String id, final UserTO userTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+            final String id,\n+            final UserTO userTO,\n+            final List<String> anyTypeClasses,\n+            final PageReference pageRef) {\n         super(id, userTO, anyTypeClasses, pageRef);\n         statusModel = new ListModel<>(new ArrayList<StatusBean>());\n     }\n \n     @Override\n-    protected void onApplyInternal(final UserTO modelObject) {\n+    protected void onApplyInternal(final AnyHandler<UserTO> modelObject) {\n         final ProvisioningResult<UserTO> actual;\n \n-        if (modelObject.getKey() == 0) {\n-            actual = userRestClient.create(modelObject, StringUtils.isNotBlank(modelObject.getPassword()));\n+        final UserTO inner = modelObject.getInnerObject();\n+\n+        if (inner.getKey() == 0) {\n+            actual = userRestClient.create(inner, StringUtils.isNotBlank(inner.getPassword()));\n         } else {\n-            final UserPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), false);\n+            final UserPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n             if (!statusModel.getObject().isEmpty()) {\n-                patch.setPassword(StatusUtils.buildPasswordPatch(modelObject.getPassword(), statusModel.getObject()));\n+                patch.setPassword(StatusUtils.buildPasswordPatch(inner.getPassword(), statusModel.getObject()));\n             }\n \n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = userRestClient.update(getOriginalItem().getETagValue(), patch);\n+                actual = userRestClient.update(getOriginalItem().getInnerObject().getETagValue(), patch);\n             }\n         }\n     }\n \n     @Override\n-    protected UserWizardBuilder addOptionalDetailsPanel(final UserTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new UserDetails(modelObject, statusModel, false, false, pageRef, modelObject.getKey() > 0));\n+    protected UserWizardBuilder addOptionalDetailsPanel(\n+            final AnyHandler<UserTO> modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new UserDetails(\n+                modelObject, statusModel, false, false, pageRef, modelObject.getInnerObject().getKey() > 0));\n         return this;\n     }\n \n@@ -84,7 +91,7 @@ protected UserWizardBuilder addOptionalDetailsPanel(final UserTO modelObject, fi\n      * @return the current wizard.\n      */\n     @Override\n-    public UserWizardBuilder setItem(final UserTO item) {\n+    public UserWizardBuilder setItem(final AnyHandler<UserTO> item) {\n         super.setItem(item);\n         statusModel.getObject().clear();\n         return this;"},{"sha":"db9e17e771a6767094b6fbf1559fcd968d0cc1ce","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d5ba39a3d935b733a4e79732d2a79cc7d6afda6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties?ref=0d5ba39a3d935b733a4e79732d2a79cc7d6afda6","patch":"@@ -29,6 +29,6 @@ creationDate=Creation Date\n tokenValued=Valued\n tokenNotValued=Not valued\n \n-any.edit=Edit ${type} ${key}\n-any.new=New ${type}\n+any.edit=Edit ${anyTO.type} ${anyTO.key}\n+any.new=New ${anyTO.type}\n any.attr.display=Attributes to be displayed"}]}