{"sha":"9ba870c5d69b74fad40eac62ec84283563bf5c48","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliYTg3MGM1ZDY5Yjc0ZmFkNDBlYWM2MmVjODQyODM1NjNiZjVjNDg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T09:25:07Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T09:25:07Z"},"message":"User activation correctly working in tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246349 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bcf4387d94108fe926d2681bb2cec799a4d3d125","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bcf4387d94108fe926d2681bb2cec799a4d3d125"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ba870c5d69b74fad40eac62ec84283563bf5c48","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ba870c5d69b74fad40eac62ec84283563bf5c48","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ba870c5d69b74fad40eac62ec84283563bf5c48","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ba870c5d69b74fad40eac62ec84283563bf5c48/comments","author":null,"committer":null,"parents":[{"sha":"18aaa15d03d6c93279a70c1bc9e352d8c01449a8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18aaa15d03d6c93279a70c1bc9e352d8c01449a8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/18aaa15d03d6c93279a70c1bc9e352d8c01449a8"}],"stats":{"total":35,"additions":21,"deletions":14},"files":[{"sha":"be177982024ffef58629779cbba675a27e888642","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=9ba870c5d69b74fad40eac62ec84283563bf5c48","patch":"@@ -69,23 +69,23 @@ public class UserController extends AbstractController {\n \n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n-    value = \"/activate/{userId}\")\n+    value = \"/activate\")\n     public UserTO activate(HttpServletResponse response,\n-            @PathVariable(\"userId\") Long userId,\n-            @RequestParam(\"token\") String token)\n+            @RequestBody UserTO userTO)\n             throws IOException {\n \n-        SyncopeUser syncopeUser = syncopeUserDAO.find(userId);\n+        SyncopeUser syncopeUser = syncopeUserDAO.find(userTO.getId());\n \n         if (syncopeUser == null) {\n-            log.error(\"Could not find user '\" + userId + \"'\");\n-            return throwNotFoundException(String.valueOf(userId), response);\n+            log.error(\"Could not find user '\" + userTO.getId() + \"'\");\n+            return throwNotFoundException(\n+                    String.valueOf(userTO.getId()), response);\n         }\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n-        if (token != null) {\n-            inputs.put(Constants.TOKEN, token);\n+        if (userTO.getToken() != null) {\n+            inputs.put(Constants.TOKEN, userTO.getToken());\n         }\n \n         WorkflowDescriptor workflowDescriptor =\n@@ -312,7 +312,7 @@ public UserTOs search(HttpServletResponse response,\n \n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/status/{userId}\")\n-    public String getStatus(HttpServletResponse response,\n+    public ModelAndView getStatus(HttpServletResponse response,\n             @PathVariable(\"userId\") Long userId) throws IOException {\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n@@ -328,7 +328,9 @@ public String getStatus(HttpServletResponse response,\n             return null;\n         }\n \n-        return currentSteps.iterator().next().getStatus();\n+        ModelAndView mav = new ModelAndView();\n+        mav.addObject(currentSteps.iterator().next().getStatus());\n+        return mav;\n     }\n \n     @Transactional"},{"sha":"6d7d071565ac5afaf177168490b00587e5df8532","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba870c5d69b74fad40eac62ec84283563bf5c48/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=9ba870c5d69b74fad40eac62ec84283563bf5c48","patch":"@@ -80,12 +80,17 @@ public void create() {\n         UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n         userTO.setId(newUserTO.getId());\n-        assertEquals(userTO, userTO);\n+        userTO.setCreationTime(newUserTO.getCreationTime());\n+        userTO.setToken(newUserTO.getToken());\n+        userTO.setTokenExpireTime(newUserTO.getTokenExpireTime());\n+        assertEquals(userTO, newUserTO);\n \n         // 2. activate user\n-        restTemplate.postForObject(BASE_URL + \"user/activate/\" + userTO.getId(),\n-                Collections.singletonMap(\"token\", userTO.getToken()),\n-                UserTO.class);\n+        newUserTO = restTemplate.postForObject(BASE_URL + \"user/activate\",\n+                newUserTO, UserTO.class);\n+        assertEquals(\"active\",\n+                restTemplate.getForObject(BASE_URL + \"user/status/\"\n+                + newUserTO.getId(), String.class));\n \n         // 3. try (and fail) to create another user with the same surname (unique)\n         userTO = new UserTO();"}]}