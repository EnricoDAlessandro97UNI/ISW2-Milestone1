{"sha":"a45a46bba7186ef43b4877482d636901bc40cbc5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE0NWE0NmJiYTcxODZlZjQzYjQ4Nzc0ODJkNjM2OTAxYmM0MGNiYzU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-10T12:33:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-10T12:33:59Z"},"message":"[SYNCOPE-666] Any* tests added","tree":{"sha":"b59bdc48dc7330291109068d6158fc05cc078677","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b59bdc48dc7330291109068d6158fc05cc078677"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a45a46bba7186ef43b4877482d636901bc40cbc5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a45a46bba7186ef43b4877482d636901bc40cbc5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a45a46bba7186ef43b4877482d636901bc40cbc5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a45a46bba7186ef43b4877482d636901bc40cbc5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"46aaa9e89fa2da3ecc4208f17a4d7d443100d830","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/46aaa9e89fa2da3ecc4208f17a4d7d443100d830","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/46aaa9e89fa2da3ecc4208f17a4d7d443100d830"}],"stats":{"total":5037,"additions":3076,"deletions":1961},"files":[{"sha":"bd4183bc89242babe89a3e27f9c53da23edd4702","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"renamed","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -21,32 +21,30 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import org.apache.syncope.client.console.rest.AbstractSubjectRestClient;\n-import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n \n-public class AttributableDataProvider extends SortableDataProvider<AbstractAttributableTO, String> {\n+public class AnyDataProvider extends SortableDataProvider<AnyTO, String> {\n \n     private static final long serialVersionUID = 6267494272884913376L;\n \n-    private final SortableAttributableProviderComparator comparator;\n+    private final SortableAnyProviderComparator comparator;\n \n     private String fiql = null;\n \n     private final int paginatorRows;\n \n     private final boolean filtered;\n \n-    private final AbstractSubjectRestClient restClient;\n+    private final AbstractAnyRestClient restClient;\n \n     private final String realm = \"/\";\n \n-    public AttributableDataProvider(final AbstractSubjectRestClient restClient,\n-            final int paginatorRows, final boolean filtered) {\n-\n+    public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginatorRows, final boolean filtered) {\n         super();\n \n         this.restClient = restClient;\n@@ -56,22 +54,22 @@ public AttributableDataProvider(final AbstractSubjectRestClient restClient,\n         // default sorting\n         setSort(\"key\", SortOrder.ASCENDING);\n \n-        this.comparator = new SortableAttributableProviderComparator(this);\n+        this.comparator = new SortableAnyProviderComparator(this);\n     }\n \n     public void setFIQL(final String fiql) {\n         this.fiql = fiql;\n     }\n \n     @Override\n-    public Iterator<? extends AbstractAttributableTO> iterator(final long first, final long count) {\n-        List<? extends AbstractAttributableTO> result;\n+    public Iterator<? extends AnyTO> iterator(final long first, final long count) {\n+        List<? extends AnyTO> result;\n \n         final int page = ((int) first / paginatorRows);\n \n         if (filtered) {\n             result = fiql == null\n-                    ? Collections.<AbstractAttributableTO>emptyList()\n+                    ? Collections.<AnyTO>emptyList()\n                     : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n         } else {\n             result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n@@ -97,7 +95,7 @@ public long size() {\n     }\n \n     @Override\n-    public IModel<AbstractAttributableTO> model(final AbstractAttributableTO object) {\n+    public IModel<AnyTO> model(final AnyTO object) {\n         return new CompoundPropertyModel<>(object);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AttributableDataProvider.java"},{"sha":"5567094bfdb8fc9bcc7931e1b872f8a06ec8557e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -53,7 +53,7 @@ public BulkActionModalPage(\n             final List<IColumn<T, S>> columns,\n             final Collection<ActionLink.ActionType> actions,\n             final BaseRestClient bulkActionExecutor,\n-            final String idFieldName,\n+            final String keyFieldName,\n             final String pageId) {\n \n         super();\n@@ -92,9 +92,9 @@ public IModel<T> model(final T object) {\n             final BulkAction bulkAction = new BulkAction();\n             for (T item : items) {\n                 try {\n-                    bulkAction.getTargets().add(getTargetId(item, idFieldName).toString());\n+                    bulkAction.getTargets().add(getTargetId(item, keyFieldName).toString());\n                 } catch (IllegalAccessException | InvocationTargetException e) {\n-                    LOG.error(\"Error retrieving item id {}\", idFieldName, e);\n+                    LOG.error(\"Error retrieving item id {}\", keyFieldName, e);\n                 }\n             }\n \n@@ -128,7 +128,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         final BulkActionResult res = (BulkActionResult) bulkActionExecutor.getClass().\n                                 getMethod(\"bulkAction\", BulkAction.class).invoke(bulkActionExecutor, bulkAction);\n \n-                        setResponsePage(new BulkActionResultModalPage<>(window, items, columns, res, idFieldName));\n+                        setResponsePage(new BulkActionResultModalPage<>(window, items, columns, res, keyFieldName));\n                     } catch (NoSuchMethodException | SecurityException | IllegalAccessException \n                             | IllegalArgumentException | InvocationTargetException e) {\n                         error(getString(Constants.ERROR)"},{"sha":"98ac15c9f7ee9de1b08fbb6b83ff4156fbd211e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -36,27 +36,25 @@\n \n /**\n  * Show user or group status after performing a successful operation.\n+ *\n  * @param <T>\n  * @param <S>\n  */\n public class BulkActionResultModalPage<T, S> extends BaseModalPage {\n \n-    /**\n-     * Serial version id.\n-     */\n     private static final long serialVersionUID = 2646115294319713724L;\n \n     public BulkActionResultModalPage(\n             final ModalWindow window,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,\n             final BulkActionResult results,\n-            final String idFieldName) {\n+            final String keyFieldName) {\n \n         super();\n \n         final List<IColumn<T, S>> newColumnList = new ArrayList<>(columns.subList(1, columns.size() - 1));\n-        newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(results, idFieldName));\n+        newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(results, keyFieldName));\n \n         final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n "},{"sha":"6f56bbb75b3fd3f2a176f349247836e0323253b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":18,"deletions":20,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -31,15 +31,13 @@\n import org.apache.syncope.client.console.panels.ActionDataTablePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n-import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.lib.wrap.AbstractWrappable;\n-import org.apache.syncope.common.lib.wrap.SubjectKey;\n+import org.apache.syncope.common.lib.wrap.AnyKey;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -54,15 +52,15 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class ProvisioningModalPage<T extends AbstractAttributableTO> extends AbstractStatusModalPage {\n+public class ProvisioningModalPage<T extends AnyTO> extends AbstractStatusModalPage {\n \n     private static final long serialVersionUID = -4285220460543213901L;\n \n     private static final int ROWS_PER_PAGE = 10;\n \n     private final ResourceTO resourceTO;\n \n-    private final Class<? extends AbstractAttributableTO> typeRef;\n+    private final AnyTypeKind anyTypeKind;\n \n     private final PageReference pageRef;\n \n@@ -76,16 +74,16 @@ public ProvisioningModalPage(\n             final PageReference pageRef,\n             final ModalWindow window,\n             final ResourceTO resourceTO,\n-            final Class<T> typeRef) {\n+            final AnyTypeKind anyTypeKind) {\n \n         super();\n \n         this.pageRef = pageRef;\n         this.window = window;\n         this.resourceTO = resourceTO;\n-        this.typeRef = typeRef;\n+        this.anyTypeKind = anyTypeKind;\n \n-        statusUtils = new StatusUtils((UserTO.class.isAssignableFrom(typeRef) ? userRestClient : groupRestClient));\n+        statusUtils = new StatusUtils(anyTypeKind == AnyTypeKind.USER ? userRestClient : groupRestClient);\n \n         add(new Label(\"displayName\", StringUtils.EMPTY));\n \n@@ -100,8 +98,8 @@ public ProvisioningModalPage(\n                 new StringResourceModel(\"resourceName\", this, null, \"Resource name\"),\n                 \"resourceName\", \"resourceName\"));\n         columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"accountLink\", this, null, \"Account link\"),\n-                \"accountLink\", \"accountLink\"));\n+                new StringResourceModel(\"connObjectLink\", this, null, \"ConnObjectLink\"),\n+                \"connObjectLink\", \"connObjectLink\"));\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n@@ -198,7 +196,7 @@ public List<StatusBean> getStatusBeans() {\n             final String fiql = SyncopeClient.getUserSearchConditionBuilder().hasResources(resourceTO.getKey()).query();\n \n             final List<T> subjects = new ArrayList<>();\n-            if (UserTO.class.isAssignableFrom(typeRef)) {\n+            if (anyTypeKind == AnyTypeKind.USER) {\n                 subjects.addAll((List<T>) userRestClient.search(\n                         realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n             } else {\n@@ -207,16 +205,16 @@ public List<StatusBean> getStatusBeans() {\n             }\n \n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(\n-                    (List<AbstractSubjectTO>) subjects, Collections.<String>singleton(resourceTO.getKey()));\n+                    (List<AnyTO>) subjects, Collections.<String>singleton(resourceTO.getKey()));\n \n             final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n             final LinkedHashMap<String, StatusBean> initialStatusBeanMap = new LinkedHashMap<>(connObjects.size());\n \n             for (ConnObjectWrapper entry : connObjects) {\n-                final StatusBean statusBean = statusUtils.getStatusBean(entry.getAttributable(),\n+                StatusBean statusBean = statusUtils.getStatusBean(entry.getAny(),\n                         entry.getResourceName(),\n                         entry.getConnObjectTO(),\n-                        GroupTO.class.isAssignableFrom(typeRef));\n+                        anyTypeKind == AnyTypeKind.GROUP);\n \n                 initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n                 statusBeans.add(statusBean);\n@@ -233,21 +231,21 @@ private void bulkAssociationAction(\n             final List<IColumn<StatusBean, String>> columns) {\n \n         final List<StatusBean> beans = new ArrayList<>(table.getModelObject());\n-        List<SubjectKey> subjectKeys = new ArrayList<>();\n+        List<AnyKey> subjectKeys = new ArrayList<>();\n         for (StatusBean bean : beans) {\n             LOG.debug(\"Selected bean {}\", bean);\n-            subjectKeys.add(AbstractWrappable.getInstance(SubjectKey.class, bean.getAttributableId()));\n+            subjectKeys.add(AbstractWrappable.getInstance(AnyKey.class, bean.getAnyKey()));\n         }\n \n         if (beans.isEmpty()) {\n             window.close(target);\n         } else {\n             final BulkActionResult res = resourceRestClient.bulkAssociationAction(\n-                    resourceTO.getKey(), typeRef, type, subjectKeys);\n+                    resourceTO.getKey(), anyTypeKind.name(), type, subjectKeys);\n \n             ((BasePage) pageRef.getPage()).setModalResult(true);\n \n-            setResponsePage(new BulkActionResultModalPage<>(window, beans, columns, res, \"attributableKey\"));\n+            setResponsePage(new BulkActionResultModalPage<>(window, beans, columns, res, \"anyKey\"));\n         }\n     }\n }"},{"sha":"e5782558af8cdf307ce65181225c18620a667cd9","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResourceModalPage.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -18,15 +18,18 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AnnotatedBeanPanel;\n import org.apache.syncope.client.console.panels.ResourceConnConfPanel;\n import org.apache.syncope.client.console.panels.ResourceDetailsPanel;\n import org.apache.syncope.client.console.panels.ResourceMappingPanel;\n import org.apache.syncope.client.console.panels.ResourceSecurityPanel;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.AttributableType;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -66,8 +69,8 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n         //--------------------------------\n         // Resource mapping panels\n         //--------------------------------\n-        form.add(new ResourceMappingPanel(\"umapping\", resourceTO, AttributableType.USER));\n-        form.add(new ResourceMappingPanel(\"gmapping\", resourceTO, AttributableType.GROUP));\n+        form.add(new ResourceMappingPanel(\"umapping\", resourceTO, AnyTypeKind.USER));\n+        form.add(new ResourceMappingPanel(\"gmapping\", resourceTO, AnyTypeKind.GROUP));\n         //--------------------------------\n \n         //--------------------------------\n@@ -84,42 +87,37 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n         form.add(new ResourceSecurityPanel(\"security\", resourceTO));\n         //--------------------------------\n \n-        final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(SUBMIT, SUBMIT)) {\n+        AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(SUBMIT, SUBMIT)) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 final ResourceTO resourceTO = (ResourceTO) form.getDefaultModelObject();\n \n-                boolean accountIdError = false;\n+                boolean connObjectKeyError = false;\n \n-                if (resourceTO.getUmapping() == null || resourceTO.getUmapping().getItems().isEmpty()) {\n-                    resourceTO.setUmapping(null);\n-                } else {\n-                    int uAccountIdCount = 0;\n-                    for (MappingItemTO item : resourceTO.getUmapping().getItems()) {\n-                        if (item.isAccountid()) {\n-                            uAccountIdCount++;\n-                        }\n-                    }\n-                    accountIdError = uAccountIdCount != 1;\n-                }\n+                for (ProvisionTO provision : resourceTO.getProvisions()) {\n+                    if (provision != null) {\n+                        if (provision.getMapping() == null || provision.getMapping().getItems().isEmpty()) {\n+                            resourceTO.getProvisions().remove(provision);\n+                        } else {\n+                            int uConnObjectKeyCount = CollectionUtils.countMatches(\n+                                    provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n \n-                if (resourceTO.getGmapping() == null || resourceTO.getGmapping().getItems().isEmpty()) {\n-                    resourceTO.setGmapping(null);\n-                } else {\n-                    int rAccountIdCount = 0;\n-                    for (MappingItemTO item : resourceTO.getGmapping().getItems()) {\n-                        if (item.isAccountid()) {\n-                            rAccountIdCount++;\n+                                        @Override\n+                                        public boolean evaluate(final MappingItemTO item) {\n+                                            return item.isConnObjectKey();\n+                                        }\n+                                    });\n+\n+                            connObjectKeyError = uConnObjectKeyCount != 1;\n                         }\n                     }\n-                    accountIdError |= rAccountIdCount != 1;\n                 }\n \n-                if (accountIdError) {\n-                    error(getString(\"accountIdValidation\"));\n+                if (connObjectKeyError) {\n+                    error(getString(\"connObjectKeyValidation\"));\n                     feedbackPanel.refresh(target);\n                 } else {\n                     try {\n@@ -142,6 +140,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             }\n \n             @Override\n+\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 feedbackPanel.refresh(target);\n             }\n@@ -171,6 +170,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(\n                 submit, ENABLE, createFlag ? Entitlement.RESOURCE_CREATE : Entitlement.RESOURCE_UPDATE);\n+\n     }\n \n     /**"},{"sha":"20f62d5478650774cc37ce3599fd61611bed2ee8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -21,12 +21,12 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.AttributableDataProvider;\n+import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.rest.AbstractSubjectRestClient;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -89,7 +89,7 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     @SpringBean\n     protected PreferenceManager prefMan;\n \n-    protected final AbstractSubjectRestClient restClient;\n+    protected final AbstractAnyRestClient restClient;\n \n     /**\n      * Number of rows per page.\n@@ -120,12 +120,12 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     /**\n      * Result table.\n      */\n-    private AjaxDataTablePanel<AbstractAttributableTO, String> resultTable;\n+    private AjaxDataTablePanel<AnyTO, String> resultTable;\n \n     /**\n      * Data provider used to search for users.\n      */\n-    private AttributableDataProvider dataProvider;\n+    private AnyDataProvider dataProvider;\n \n     /**\n      * Modal window to be used for user profile editing. Global visibility is required ...\n@@ -147,8 +147,8 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n      */\n     protected final AbstractBasePage page;\n \n-    protected <T extends AbstractAttributableTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference pageRef, final AbstractSubjectRestClient restClient) {\n+    protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n+            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient) {\n \n         super(id);\n \n@@ -238,7 +238,7 @@ private void updateResultTable(final boolean create) {\n     }\n \n     private void updateResultTable(final boolean create, final int rows) {\n-        dataProvider = new AttributableDataProvider(restClient, rows, filtered);\n+        dataProvider = new AnyDataProvider(restClient, rows, filtered);\n         dataProvider.setFIQL(fiql);\n \n         final int currentPage = resultTable != null\n@@ -265,7 +265,7 @@ private void updateResultTable(final boolean create, final int rows) {\n         container.addOrReplace(resultTable);\n     }\n \n-    protected abstract List<IColumn<AbstractAttributableTO, String>> getColumns();\n+    protected abstract List<IColumn<AnyTO, String>> getColumns();\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n@@ -340,7 +340,7 @@ public void setRows(final int rows) {\n         }\n     }\n \n-    protected abstract <T extends AbstractAttributableTO> Collection<ActionLink.ActionType> getBulkActions();\n+    protected abstract <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions();\n \n     protected abstract String getPageId();\n }"},{"sha":"daaaa23d33692ad802a5c5cf9ec4054b61f9eb6d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -52,7 +52,7 @@ public AjaxDataTablePanel(\n             final int rowsPerPage,\n             final Collection<ActionLink.ActionType> actions,\n             final BaseRestClient bulkActionExecutor,\n-            final String itemIdField,\n+            final String itemKeyField,\n             final String pageId,\n             final PageReference pageRef) {\n \n@@ -130,7 +130,7 @@ public Page createPage() {\n                                 columns,\n                                 actions,\n                                 bulkActionExecutor,\n-                                itemIdField,\n+                                itemKeyField,\n                                 pageId);\n                     }\n                 });"},{"sha":"ab1e7e0fb0783449fe8783109bd5ad9eeeae2f3e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnnotatedBeanPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnnotatedBeanPanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.AbstractAnnotatedBean;\n-import org.apache.syncope.common.lib.to.AbstractAttributableTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n@@ -29,7 +29,7 @@ public class AnnotatedBeanPanel extends Panel {\n \n     private static final long serialVersionUID = 4228064224811390809L;\n \n-    public <T extends AbstractAttributableTO> AnnotatedBeanPanel(\n+    public <T extends AnyTO> AnnotatedBeanPanel(\n             final String id, final AbstractAnnotatedBean sysInfoTO) {\n \n         super(id);"},{"sha":"6f2a17bed5db7286f6b5fbee6cb60508649afe36","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -57,9 +57,9 @@ public class ResourceConnConfPanel extends Panel {\n \n     private List<ConnConfProperty> connConfProperties;\n \n-    private WebMarkupContainer connConfPropContainer;\n+    private final WebMarkupContainer connConfPropContainer;\n \n-    private AjaxButton check;\n+    private final AjaxButton check;\n \n     public ResourceConnConfPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n         super(id);\n@@ -103,7 +103,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n         check.setEnabled(!connConfProperties.isEmpty());\n         check.setVisible(!connConfProperties.isEmpty());\n-        \n+\n         connConfPropContainer.add(check);\n     }\n \n@@ -113,10 +113,10 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n      * @return overridable properties.\n      */\n     private List<ConnConfProperty> getConnConfProperties() {\n-        final List<ConnConfProperty> props = new ArrayList<ConnConfProperty>();\n-        final Long connectorId = resourceTO.getConnectorId();\n-        if (connectorId != null && connectorId > 0) {\n-            for (ConnConfProperty property : restClient.getConnectorProperties(connectorId)) {\n+        List<ConnConfProperty> props = new ArrayList<>();\n+        Long connectorKey = resourceTO.getConnector();\n+        if (connectorKey != null && connectorKey > 0) {\n+            for (ConnConfProperty property : restClient.getConnectorProperties(connectorKey)) {\n                 if (property.isOverridable()) {\n                     props.add(property);\n                 }\n@@ -125,7 +125,7 @@ private List<ConnConfProperty> getConnConfProperties() {\n         if (createFlag || resourceTO.getConnConfProperties().isEmpty()) {\n             resourceTO.getConnConfProperties().clear();\n         } else {\n-            Map<String, ConnConfProperty> valuedProps = new HashMap<String, ConnConfProperty>();\n+            Map<String, ConnConfProperty> valuedProps = new HashMap<>();\n             for (ConnConfProperty prop : resourceTO.getConnConfProperties()) {\n                 valuedProps.put(prop.getSchema().getName(), prop);\n             }\n@@ -169,7 +169,7 @@ public void onEvent(final IEvent<?> event) {\n      */\n     public static class ConnConfModEvent extends ResourceEvent {\n \n-        private List<ConnConfProperty> configuration;\n+        private final List<ConnConfProperty> configuration;\n \n         /**\n          * Constructor."},{"sha":"3095b4ece47f023f01bc818e6202821661b72e9c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -222,7 +222,7 @@ protected List<ConnInstanceTO> load() {\n                 new ResourceModel(\"connector\", \"connector\").getObject(),\n                 new PropertyModel<ConnInstanceTO>(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n-        conn.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"key\"));\n+        conn.setChoiceRenderer(new ChoiceRenderer<String>(\"displayName\", \"key\"));\n \n         conn.getField().setModel(new IModel<ConnInstanceTO>() {\n \n@@ -235,7 +235,7 @@ public ConnInstanceTO getObject() {\n \n             @Override\n             public void setObject(final ConnInstanceTO connector) {\n-                resourceTO.setConnectorId(connector.getKey());\n+                resourceTO.setConnector(connector.getKey());\n                 connInstanceTO = connector;\n             }\n \n@@ -270,20 +270,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n      */\n     private ConnInstanceTO getConectorInstanceTO(final List<ConnInstanceTO> connectorTOs, final ResourceTO resourceTO) {\n         if (connectorTOs.isEmpty()) {\n-            resourceTO.setConnectorId(null);\n+            resourceTO.setConnector(null);\n             return null;\n         } else {\n             // use the first element as default\n             ConnInstanceTO res = connectorTOs.get(0);\n \n             for (ConnInstanceTO to : connectorTOs) {\n-                if (Long.valueOf(to.getKey()).equals(resourceTO.getConnectorId())) {\n+                if (Long.valueOf(to.getKey()).equals(resourceTO.getConnector())) {\n                     res = to;\n                 }\n             }\n \n             // in case of no match\n-            resourceTO.setConnectorId(res.getKey());\n+            resourceTO.setConnector(res.getKey());\n \n             return res;\n         }"},{"sha":"17ae3bf082141a8528575c1909f3238b1f692927","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":108,"deletions":120,"changes":228,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -36,12 +36,12 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.MappingTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.AttributableType;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n@@ -122,63 +122,54 @@ public class ResourceMappingPanel extends Panel {\n     /**\n      * User / group.\n      */\n-    private final AttributableType attrType;\n+    private final AnyTypeKind anyTypeKind;\n \n     /**\n      * Mapping container.\n      */\n     private final WebMarkupContainer mappingContainer;\n \n-    /**\n-     * AccountLink container.\n-     */\n-    private final WebMarkupContainer accountLinkContainer;\n+    private final WebMarkupContainer connObjectLinkContainer;\n \n-    private final AjaxCheckBoxPanel accountLinkCheckbox;\n+    private final AjaxCheckBoxPanel connObjectLinkCheckbox;\n \n     private MappingTO getMapping() {\n-        MappingTO result = null;\n-\n-        if (AttributableType.USER == this.attrType) {\n-            if (this.resourceTO.getUmapping() == null) {\n-                this.resourceTO.setUmapping(new MappingTO());\n-            }\n-            result = this.resourceTO.getUmapping();\n+        ProvisionTO provision = resourceTO.getProvision(this.anyTypeKind.name());\n+        if (provision == null) {\n+            provision = new ProvisionTO();\n+            resourceTO.getProvisions().add(provision);\n         }\n-        if (AttributableType.GROUP == this.attrType) {\n-            if (this.resourceTO.getGmapping() == null) {\n-                this.resourceTO.setGmapping(new MappingTO());\n-            }\n-            result = this.resourceTO.getGmapping();\n+        if (provision.getMapping() == null) {\n+            provision.setMapping(new MappingTO());\n         }\n \n-        return result;\n+        return provision.getMapping();\n     }\n \n     /**\n      * Attribute Mapping Panel.\n      *\n      * @param id panel id\n      * @param resourceTO external resource\n-     * @param attrType USER / GROUP\n+     * @param anyTypeKind USER / GROUP\n      */\n-    public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final AttributableType attrType) {\n+    public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final AnyTypeKind anyTypeKind) {\n         super(id);\n         setOutputMarkupId(true);\n \n         this.resourceTO = resourceTO;\n-        this.attrType = attrType;\n+        this.anyTypeKind = anyTypeKind;\n \n         this.mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n         this.mappingContainer.setOutputMarkupId(true);\n         add(this.mappingContainer);\n \n-        this.accountLinkContainer = new WebMarkupContainer(\"accountLinkContainer\");\n-        this.accountLinkContainer.setOutputMarkupId(true);\n-        add(this.accountLinkContainer);\n+        this.connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n+        this.connObjectLinkContainer.setOutputMarkupId(true);\n+        add(this.connObjectLinkContainer);\n \n-        if (this.resourceTO.getConnectorId() != null && this.resourceTO.getConnectorId() > 0) {\n-            schemaNames = getSchemaNames(this.resourceTO.getConnectorId(), this.resourceTO.getConnConfProperties());\n+        if (this.resourceTO.getConnector() != null && this.resourceTO.getConnector() > 0) {\n+            schemaNames = getSchemaNames(this.resourceTO.getConnector(), this.resourceTO.getConnConfProperties());\n \n             setEnabled();\n         } else {\n@@ -193,7 +184,7 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n \n         final Label passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n         mappingContainer.add(passwordLabel);\n-        if (AttributableType.USER != ResourceMappingPanel.this.attrType) {\n+        if (AnyTypeKind.USER != ResourceMappingPanel.this.anyTypeKind) {\n             passwordLabel.setVisible(false);\n         }\n \n@@ -213,8 +204,8 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                 } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n                     compared = 1;\n                 } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n-                        && (right.getPurpose() == MappingPurpose.SYNCHRONIZATION || right.getPurpose()\n-                        == MappingPurpose.NONE)) {\n+                        && (right.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                        || right.getPurpose() == MappingPurpose.NONE)) {\n                     compared = -1;\n                 } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n                         && right.getPurpose() == MappingPurpose.PROPAGATION) {\n@@ -225,9 +216,9 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                 } else if (left.getPurpose() == MappingPurpose.NONE\n                         && right.getPurpose() != MappingPurpose.NONE) {\n                     compared = 1;\n-                } else if (left.isAccountid()) {\n+                } else if (left.isConnObjectKey()) {\n                     compared = -1;\n-                } else if (right.isAccountid()) {\n+                } else if (right.isConnObjectKey()) {\n                     compared = 1;\n                 } else if (left.isPassword()) {\n                     compared = -1;\n@@ -251,14 +242,12 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                     mapItem.setPurpose(MappingPurpose.BOTH);\n                 }\n \n-                AttributableType entity = null;\n+                AnyTypeKind entity = null;\n                 if (mapItem.getIntMappingType() != null) {\n-                    entity = mapItem.getIntMappingType().getAttributableType();\n+                    entity = mapItem.getIntMappingType().getAnyTypeKind();\n                 }\n \n-                final List<IntMappingType> attrTypes = new ArrayList<IntMappingType>(getAttributeTypes(entity));\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<>(Boolean.FALSE)) {\n \n                     private static final long serialVersionUID = 7170946748485726506L;\n \n@@ -282,7 +271,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n                         super.updateAjaxAttributes(attributes);\n \n-                        final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                        AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n \n                             private static final long serialVersionUID = 7160235486520935153L;\n \n@@ -296,7 +285,7 @@ public CharSequence getPrecondition(final Component component) {\n                 });\n \n                 final AjaxDropDownChoicePanel<String> intAttrNames =\n-                        new AjaxDropDownChoicePanel<String>(\"intAttrNames\", getString(\"intAttrNames\"),\n+                        new AjaxDropDownChoicePanel<>(\"intAttrNames\", getString(\"intAttrNames\"),\n                                 new PropertyModel<String>(mapItem, \"intAttrName\"), false);\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n@@ -311,22 +300,23 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n                 item.add(intAttrNames);\n \n+                final List<IntMappingType> attrTypes = new ArrayList<>(getAttributeTypes(entity));\n                 final AjaxDropDownChoicePanel<IntMappingType> intMappingTypes =\n-                        new AjaxDropDownChoicePanel<IntMappingType>(\"intMappingTypes\",\n+                        new AjaxDropDownChoicePanel<>(\"intMappingTypes\",\n                                 new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n                                 new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n                 intMappingTypes.setRequired(true);\n                 intMappingTypes.setChoices(attrTypes);\n                 intMappingTypes.setStyleSheet(FIELD_STYLE);\n                 item.add(intMappingTypes);\n \n-                final AjaxDropDownChoicePanel<AttributableType> entitiesPanel =\n-                        new AjaxDropDownChoicePanel<AttributableType>(\"entities\",\n-                                new ResourceModel(\"entities\", \"entities\").getObject(), new Model<AttributableType>(\n-                                        entity));\n-                entitiesPanel.setChoices(attrType == AttributableType.GROUP\n-                        ? Collections.<AttributableType>singletonList(AttributableType.GROUP)\n-                        : Arrays.asList(AttributableType.values()));\n+                final AjaxDropDownChoicePanel<AnyTypeKind> entitiesPanel =\n+                        new AjaxDropDownChoicePanel<>(\"entities\",\n+                                new ResourceModel(\"entities\", \"entities\").getObject(),\n+                                new Model<>(entity));\n+                entitiesPanel.setChoices(anyTypeKind == AnyTypeKind.GROUP\n+                        ? Collections.<AnyTypeKind>singletonList(AnyTypeKind.GROUP)\n+                        : Arrays.asList(AnyTypeKind.values()));\n                 entitiesPanel.setStyleSheet(DEF_FIELD_STYLE);\n                 entitiesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -369,16 +359,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 mandatory.setStyleSheet(SHORT_FIELD_STYLE);\n                 item.add(mandatory);\n \n-                final AjaxCheckBoxPanel accountId = new AjaxCheckBoxPanel(\"accountId\",\n-                        new ResourceModel(\"accountId\", \"accountId\").getObject(),\n-                        new PropertyModel<Boolean>(mapItem, \"accountid\"));\n-                accountId.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+                final AjaxCheckBoxPanel connObjectKey = new AjaxCheckBoxPanel(\"connObjectKey\",\n+                        new ResourceModel(\"connObjectKey\", \"connObjectKey\").getObject(),\n+                        new PropertyModel<Boolean>(mapItem, \"connObjectKey\"));\n+                connObjectKey.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        if (accountId.getModelObject()) {\n+                        if (connObjectKey.getModelObject()) {\n                             mapItem.setMandatoryCondition(\"true\");\n                             mandatory.setEnabled(false);\n                         } else {\n@@ -388,7 +378,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         target.add(mandatory);\n                     }\n                 });\n-                item.add(accountId);\n+                item.add(connObjectKey);\n \n                 final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\",\n                         new ResourceModel(\"password\", \"password\").getObject(),\n@@ -399,17 +389,17 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        extAttrNames.setEnabled(!mapItem.isAccountid() && !password.getModelObject());\n+                        extAttrNames.setEnabled(!mapItem.isConnObjectKey() && !password.getModelObject());\n                         extAttrNames.setModelObject(null);\n                         extAttrNames.setRequired(!password.getModelObject());\n                         target.add(extAttrNames);\n \n-                        setAccountId(intMappingTypes.getModelObject(), accountId, password);\n-                        target.add(accountId);\n+                        setConnObjectKey(intMappingTypes.getModelObject(), connObjectKey, password);\n+                        target.add(connObjectKey);\n                     }\n                 });\n                 item.add(password);\n-                if (AttributableType.USER != ResourceMappingPanel.this.attrType) {\n+                if (AnyTypeKind.USER != ResourceMappingPanel.this.anyTypeKind) {\n                     password.setVisible(false);\n                 }\n \n@@ -432,13 +422,13 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         setAttrNames(intMappingTypes.getModelObject(), intAttrNames);\n                         target.add(intAttrNames);\n \n-                        setAccountId(intMappingTypes.getModelObject(), accountId, password);\n-                        target.add(accountId);\n+                        setConnObjectKey(intMappingTypes.getModelObject(), connObjectKey, password);\n+                        target.add(connObjectKey);\n                     }\n                 });\n \n                 setAttrNames(mapItem.getIntMappingType(), intAttrNames);\n-                setAccountId(mapItem.getIntMappingType(), accountId, password);\n+                setConnObjectKey(mapItem.getIntMappingType(), connObjectKey, password);\n             }\n         };\n \n@@ -456,41 +446,41 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n         addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(this.resourceTO.getConnectorId() != null && this.resourceTO.getConnectorId() > 0);\n+        addMappingBtn.setEnabled(this.resourceTO.getConnector() != null && this.resourceTO.getConnector() > 0);\n         mappingContainer.add(addMappingBtn);\n \n-        boolean accountLinkEnabled = false;\n-        if (getMapping().getAccountLink() != null) {\n-            accountLinkEnabled = true;\n+        boolean connObjectLinkEnabled = false;\n+        if (getMapping().getConnObjectLink() != null) {\n+            connObjectLinkEnabled = true;\n         }\n-        accountLinkCheckbox = new AjaxCheckBoxPanel(\"accountLinkCheckbox\",\n-                new ResourceModel(\"accountLinkCheckbox\", \"accountLinkCheckbox\").getObject(),\n-                new Model<Boolean>(Boolean.valueOf(accountLinkEnabled)));\n-        accountLinkCheckbox.setEnabled(true);\n+        connObjectLinkCheckbox = new AjaxCheckBoxPanel(\"connObjectLinkCheckbox\",\n+                new ResourceModel(\"connObjectLinkCheckbox\", \"connObjectLinkCheckbox\").getObject(),\n+                new Model<>(connObjectLinkEnabled));\n+        connObjectLinkCheckbox.setEnabled(true);\n \n-        accountLinkContainer.add(accountLinkCheckbox);\n+        connObjectLinkContainer.add(connObjectLinkCheckbox);\n \n-        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\"accountLink\",\n-                new ResourceModel(\"accountLink\", \"accountLink\").getObject(),\n-                new PropertyModel<String>(getMapping(), \"accountLink\"));\n-        accountLink.setEnabled(accountLinkEnabled);\n-        accountLinkContainer.add(accountLink);\n+        final AjaxTextFieldPanel connObjectLink = new AjaxTextFieldPanel(\"connObjectLink\",\n+                new ResourceModel(\"connObjectLink\", \"connObjectLink\").getObject(),\n+                new PropertyModel<String>(getMapping(), \"connObjectLink\"));\n+        connObjectLink.setEnabled(connObjectLinkEnabled);\n+        connObjectLinkContainer.add(connObjectLink);\n \n-        accountLinkCheckbox.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+        connObjectLinkCheckbox.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (accountLinkCheckbox.getModelObject()) {\n-                    accountLink.setEnabled(Boolean.TRUE);\n-                    accountLink.setModelObject(\"\");\n+                if (connObjectLinkCheckbox.getModelObject()) {\n+                    connObjectLink.setEnabled(Boolean.TRUE);\n+                    connObjectLink.setModelObject(\"\");\n                 } else {\n-                    accountLink.setEnabled(Boolean.FALSE);\n-                    accountLink.setModelObject(\"\");\n+                    connObjectLink.setEnabled(Boolean.FALSE);\n+                    connObjectLink.setModelObject(\"\");\n                 }\n \n-                target.add(accountLink);\n+                target.add(connObjectLink);\n             }\n         });\n     }\n@@ -504,25 +494,22 @@ private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfPr\n     }\n \n     private void setEnabled() {\n-        final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(this.resourceTO.getConnectorId());\n+        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+        connInstanceTO.setKey(this.resourceTO.getConnector());\n         connInstanceTO.getConfiguration().addAll(this.resourceTO.getConnConfProperties());\n \n-        List<ConnIdObjectClassTO> objectClasses = connRestClient.getSupportedObjectClasses(connInstanceTO);\n+        boolean enabled = resourceTO.getProvision(anyTypeKind.name()) != null;\n \n-        boolean enabled = objectClasses.isEmpty()\n-                || (AttributableType.USER == attrType && objectClasses.contains(ConnIdObjectClassTO.ACCOUNT))\n-                || (AttributableType.GROUP == attrType && objectClasses.contains(ConnIdObjectClassTO.GROUP));\n         this.mappingContainer.setEnabled(enabled);\n         this.mappingContainer.setVisible(enabled);\n-        this.accountLinkContainer.setEnabled(enabled);\n-        this.accountLinkContainer.setVisible(enabled);\n+        this.connObjectLinkContainer.setEnabled(enabled);\n+        this.connObjectLinkContainer.setVisible(enabled);\n \n         if (!enabled) {\n             getMapping().getItems().clear();\n-            getMapping().setAccountLink(null);\n-            if (this.accountLinkCheckbox != null) {\n-                this.accountLinkCheckbox.setModelObject(null);\n+            getMapping().setConnObjectLink(null);\n+            if (this.connObjectLinkCheckbox != null) {\n+                this.connObjectLinkCheckbox.setModelObject(null);\n             }\n         }\n     }\n@@ -536,10 +523,10 @@ public void onEvent(final IEvent<?> event) {\n \n             mappings.removeAll();\n \n-            addMappingBtn.setEnabled(resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0);\n+            addMappingBtn.setEnabled(resourceTO.getConnector() != null && resourceTO.getConnector() > 0);\n \n             schemaNames.clear();\n-            schemaNames.addAll(getSchemaNames(resourceTO.getConnectorId(), new HashSet<ConnConfProperty>(conf)));\n+            schemaNames.addAll(getSchemaNames(resourceTO.getConnector(), new HashSet<ConnConfProperty>(conf)));\n \n             setEnabled();\n \n@@ -557,34 +544,35 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n \n-        if (type == null || type.getAttributableType() == null) {\n+        if (type == null || type.getAnyTypeKind() == null) {\n             toBeUpdated.setChoices(Collections.<String>emptyList());\n         } else {\n             switch (type) {\n                 // user attribute names\n                 case UserPlainSchema:\n                 case GroupPlainSchema:\n-                case MembershipPlainSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getPlainSchemaNames(type.getAttributableType()));\n+                case AnyObjectPlainSchema:\n+                    toBeUpdated.setChoices(schemaRestClient.getPlainSchemaNames());\n                     break;\n \n                 case UserDerivedSchema:\n                 case GroupDerivedSchema:\n-                case MembershipDerivedSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getDerSchemaNames(type.getAttributableType()));\n+                case AnyObjectDerivedSchema:\n+                    toBeUpdated.setChoices(schemaRestClient.getDerSchemaNames());\n                     break;\n \n                 case UserVirtualSchema:\n                 case GroupVirtualSchema:\n-                case MembershipVirtualSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getVirSchemaNames(type.getAttributableType()));\n+                case AnyObjectVirtualSchema:\n+                    toBeUpdated.setChoices(schemaRestClient.getVirSchemaNames());\n                     break;\n \n-                case UserId:\n+                case UserKey:\n                 case Password:\n                 case Username:\n-                case GroupId:\n+                case GroupKey:\n                 case GroupName:\n+                case AnyObjectKey:\n                 default:\n                     toBeUpdated.setRequired(false);\n                     toBeUpdated.setEnabled(false);\n@@ -594,33 +582,33 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n     }\n \n     /**\n-     * Enable/Disable accountId checkbox.\n+     * Enable/Disable connObjectKey checkbox.\n      *\n      * @param type attribute type.\n-     * @param accountId accountId checkbox.\n+     * @param connObjectKey connObjectKey checkbox.\n      * @param password password checkbox.\n      */\n-    private void setAccountId(final IntMappingType type, final AjaxCheckBoxPanel accountId,\n-            final AjaxCheckBoxPanel password) {\n+    private void setConnObjectKey(\n+            final IntMappingType type, final AjaxCheckBoxPanel connObjectKey, final AjaxCheckBoxPanel password) {\n \n-        if (type != null && type.getAttributableType() != null) {\n+        if (type != null && type.getAnyTypeKind() != null) {\n             switch (type) {\n                 case UserVirtualSchema:\n                 case GroupVirtualSchema:\n-                case MembershipVirtualSchema:\n-                // Virtual accountId is not permitted\n+                case AnyObjectVirtualSchema:\n+                // Virtual connObjectKey is not permitted\n                 case Password:\n-                    // AccountId cannot be derived from password.\n-                    accountId.setReadOnly(true);\n-                    accountId.setModelObject(false);\n+                    // connObjectKey cannot be derived from password.\n+                    connObjectKey.setReadOnly(true);\n+                    connObjectKey.setModelObject(false);\n                     break;\n \n                 default:\n                     if (password.getModelObject()) {\n-                        accountId.setReadOnly(true);\n-                        accountId.setModelObject(false);\n+                        connObjectKey.setReadOnly(true);\n+                        connObjectKey.setModelObject(false);\n                     } else {\n-                        accountId.setReadOnly(false);\n+                        connObjectKey.setReadOnly(false);\n                     }\n             }\n         }\n@@ -632,11 +620,11 @@ private void setAccountId(final IntMappingType type, final AjaxCheckBoxPanel acc\n      * @param entity entity.\n      * @return all attribute types.\n      */\n-    private List<IntMappingType> getAttributeTypes(final AttributableType entity) {\n+    private List<IntMappingType> getAttributeTypes(final AnyTypeKind entity) {\n         final List<IntMappingType> res = new ArrayList<>();\n \n         if (entity != null) {\n-            res.addAll(IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.name())));\n+            res.addAll(IntMappingType.getAttributeTypes(entity));\n         }\n \n         return res;"},{"sha":"755b2d148a5b10118f54cde6e9e575f9677d7f2c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Resources.java","status":"removed","additions":0,"deletions":485,"changes":485,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.java?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,485 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.pages.ConnectorModalPage;\n-import org.apache.syncope.client.console.pages.ProvisioningModalPage;\n-import org.apache.syncope.client.console.pages.ResourceModalPage;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.LinkPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.Entitlement;\n-import org.apache.wicket.AttributeModifier;\n-import org.apache.wicket.Page;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.StringResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Resources WebPage.\n- */\n-public class Resources extends Panel {\n-\n-    private static final long serialVersionUID = -3789252860990261728L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(Resources.class);\n-\n-    private static final int WIN_HEIGHT = 600;\n-\n-    private static final int WIN_WIDTH = 1100;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n-    private final ModalWindow createResourceWin;\n-\n-    private final ModalWindow editResourceWin;\n-\n-    private final int resourcePaginatorRows;\n-\n-    private WebMarkupContainer resourceContainer;\n-\n-    private final ModalWindow editConnectorWin;\n-\n-    /**\n-     * Modal window to be used for user status management.\n-     */\n-    protected final ModalWindow statusmodal = new ModalWindow(\"statusModal\");\n-\n-    /**\n-     * Schemas to be shown modal window height.\n-     */\n-    private static final int STATUS_MODAL_WIN_HEIGHT = 500;\n-\n-    /**\n-     * Schemas to be shown modal window width.\n-     */\n-    private static final int STATUS_MODAL_WIN_WIDTH = 700;\n-\n-    @SpringBean\n-    private ConnectorRestClient connectorRestClient;\n-\n-    private final PageReference pageRef;\n-\n-    public Resources(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-\n-        createResourceWin = new ModalWindow(\"createResourceWin\");\n-        add(createResourceWin);\n-\n-        editResourceWin = new ModalWindow(\"editResourceWin\");\n-        add(editResourceWin);\n-\n-        editConnectorWin = new ModalWindow(\"editConnectorWin\");\n-        add(editConnectorWin);\n-\n-        statusmodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        statusmodal.setInitialHeight(STATUS_MODAL_WIN_HEIGHT);\n-        statusmodal.setInitialWidth(STATUS_MODAL_WIN_WIDTH);\n-        statusmodal.setCookieName(\"status-modal\");\n-        add(statusmodal);\n-\n-        resourcePaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_RESOURCES_PAGINATOR_ROWS);\n-\n-        setupResources();\n-    }\n-\n-    private void setupResources() {\n-        List<IColumn<ResourceTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new PropertyColumn<ResourceTO, String>(new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n-\n-        columns.add(new AbstractColumn<ResourceTO, String>(\n-                new StringResourceModel(\"connector\", this, null, \"connector\")) {\n-\n-                    private static final long serialVersionUID = 8263694778917279290L;\n-\n-                    @Override\n-                    public void populateItem(final Item<ICellPopulator<ResourceTO>> cellItem, final String componentId,\n-                            final IModel<ResourceTO> rowModel) {\n-\n-                        final AjaxLink<String> editLink = new ClearIndicatingAjaxLink<String>(\"link\", pageRef) {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            protected void onClickInternal(final AjaxRequestTarget target) {\n-\n-                                editConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new ConnectorModalPage(Resources.this.pageRef,\n-                                                editConnectorWin,\n-                                                connectorRestClient.read(rowModel.getObject().getConnectorId()));\n-                                    }\n-                                });\n-\n-                                editConnectorWin.show(target);\n-                            }\n-                        };\n-                        editLink.add(new Label(\"linkTitle\", rowModel.getObject().getConnectorDisplayName()));\n-\n-                        LinkPanel editConnPanel = new LinkPanel(componentId);\n-                        editConnPanel.add(editLink);\n-\n-                        cellItem.add(editConnPanel);\n-\n-                        MetaDataRoleAuthorizationStrategy.authorize(editConnPanel, ENABLE, Entitlement.CONNECTOR_READ);\n-                    }\n-                });\n-\n-        columns.add(new AbstractColumn<ResourceTO, String>(\n-                new StringResourceModel(\"propagationPrimary\", this, null)) {\n-\n-                    private static final long serialVersionUID = -3503023501954863131L;\n-\n-                    @Override\n-                    public void populateItem(final Item<ICellPopulator<ResourceTO>> item,\n-                            final String componentId, final IModel<ResourceTO> model) {\n-\n-                        item.add(new Label(componentId, \"\"));\n-                        item.add(new AttributeModifier(\"class\", new Model<>(\n-                                                Boolean.toString(model.getObject().isPropagationPrimary()))));\n-                    }\n-\n-                    @Override\n-                    public String getCssClass() {\n-                        return \"narrowcolumn\";\n-                    }\n-                });\n-\n-        columns.add(new PropertyColumn<ResourceTO, String>(new StringResourceModel(\n-                \"propagationPriority\", this, null), \"propagationPriority\", \"propagationPriority\") {\n-\n-                    private static final long serialVersionUID = 1L;\n-\n-                    @Override\n-                    public String getCssClass() {\n-                        return \"narrowcolumn\";\n-                    }\n-                });\n-\n-        columns.add(new AbstractColumn<ResourceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<ResourceTO>> cellItem, final String componentId,\n-                    final IModel<ResourceTO> model) {\n-\n-                final ResourceTO resourceTO = model.getObject();\n-\n-                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, pageRef);\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new ProvisioningModalPage<>(\n-                                        pageRef, statusmodal, model.getObject(), UserTO.class);\n-                            }\n-                        });\n-\n-                        statusmodal.show(target);\n-                    }\n-                }, ActionLink.ActionType.MANAGE_USERS, \"Resources\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-\n-                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new ProvisioningModalPage<>(\n-                                        pageRef, statusmodal, model.getObject(), GroupTO.class);\n-                            }\n-                        });\n-\n-                        statusmodal.show(target);\n-                    }\n-                }, ActionLink.ActionType.MANAGE_GROUPS, \"Resources\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        resourceTO.setUsyncToken(null);\n-                        resourceTO.setRsyncToken(null);\n-                        try {\n-                            resourceRestClient.update(resourceTO);\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientException e) {\n-                            error(getString(Constants.ERROR) + \":\" + e.getMessage());\n-\n-                            LOG.error(\"While resetting sync token from \" + resourceTO.getKey(), e);\n-                        }\n-\n-                        ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n-                        target.add(resourceContainer);\n-                    }\n-                }, ActionLink.ActionType.RESET, \"Resources\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new ResourceModalPage(pageRef, editResourceWin, resourceTO, false);\n-                            }\n-                        });\n-\n-                        editResourceWin.show(target);\n-                    }\n-                }, ActionLink.ActionType.EDIT, \"Resources\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        try {\n-                            resourceRestClient.delete(resourceTO.getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientException e) {\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-\n-                            LOG.error(\"While deleting resource \" + resourceTO.getKey(), e);\n-                        }\n-\n-                        ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n-                        target.add(resourceContainer);\n-                    }\n-                }, ActionLink.ActionType.DELETE, \"Resources\");\n-\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        final AjaxDataTablePanel<ResourceTO, String> table = new AjaxDataTablePanel<>(\n-                \"resourceDatatable\",\n-                columns,\n-                (ISortableDataProvider<ResourceTO, String>) new ResourcesProvider(),\n-                resourcePaginatorRows,\n-                Arrays.asList(new ActionLink.ActionType[] { ActionLink.ActionType.DELETE }),\n-                resourceRestClient,\n-                \"key\",\n-                \"Resources\",\n-                pageRef);\n-\n-        resourceContainer = new WebMarkupContainer(\"resourceContainer\");\n-        resourceContainer.add(table);\n-        resourceContainer.setOutputMarkupId(true);\n-\n-        add(resourceContainer);\n-\n-        ((BasePage) pageRef.getPage()).setWindowClosedCallback(createResourceWin, resourceContainer);\n-        ((BasePage) pageRef.getPage()).setWindowClosedCallback(editResourceWin, resourceContainer);\n-\n-        createResourceWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createResourceWin.setInitialHeight(WIN_HEIGHT);\n-        createResourceWin.setInitialWidth(WIN_WIDTH);\n-        createResourceWin.setCookieName(\"create-res-modal\");\n-\n-        editResourceWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editResourceWin.setInitialHeight(WIN_HEIGHT);\n-        editResourceWin.setInitialWidth(WIN_WIDTH);\n-        editResourceWin.setCookieName(\"edit-res-modal\");\n-\n-        editConnectorWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editConnectorWin.setInitialHeight(WIN_HEIGHT);\n-        editConnectorWin.setInitialWidth(WIN_WIDTH);\n-        editConnectorWin.setCookieName(\"edit-conn-modal\");\n-\n-        AjaxLink<Void> createResourceLink\n-                = new ClearIndicatingAjaxLink<Void>(\"createResourceLink\", pageRef) {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        createResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                final ResourceModalPage windows = new ResourceModalPage(Resources.this.pageRef,\n-                                        editResourceWin, new ResourceTO(), true);\n-                                return windows;\n-                            }\n-                        });\n-\n-                        createResourceWin.show(target);\n-                    }\n-                };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createResourceLink, ENABLE, Entitlement.RESOURCE_CREATE);\n-\n-        add(createResourceLink);\n-\n-        @SuppressWarnings(\"rawtypes\")\n-        final Form paginatorForm = new Form(\"resourcePaginatorForm\");\n-\n-        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n-                \"resourcePaginatorRows\"), prefMan.getPaginatorChoices());\n-\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_RESOURCES_PAGINATOR_ROWS,\n-                        String.valueOf(resourcePaginatorRows));\n-\n-                table.setItemsPerPage(resourcePaginatorRows);\n-                target.add(resourceContainer);\n-            }\n-        });\n-\n-        paginatorForm.add(rowsChooser);\n-        add(paginatorForm);\n-    }\n-\n-    class ResourcesProvider extends SortableDataProvider<ResourceTO, String> {\n-\n-        private static final long serialVersionUID = -9055916672926643975L;\n-\n-        private final SortableDataProviderComparator<ResourceTO> comparator;\n-\n-        public ResourcesProvider() {\n-            super();\n-            //Default sorting\n-            setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<ResourceTO> iterator(final long first, final long count) {\n-            List<ResourceTO> list = resourceRestClient.getAll();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return resourceRestClient.getAll().size();\n-        }\n-\n-        @Override\n-        public IModel<ResourceTO> model(final ResourceTO resource) {\n-            return new AbstractReadOnlyModel<ResourceTO>() {\n-\n-                private static final long serialVersionUID = 8952474152465381634L;\n-\n-                @Override\n-                public ResourceTO getObject() {\n-                    return resource;\n-                }\n-            };\n-        }\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n-            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(resourceContainer);\n-        }\n-    }\n-}"},{"sha":"3298d3fd193f945b7f6f77fca4b1f01e624ce3ca","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -28,11 +28,11 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.wrap.ConnIdObjectClass;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.springframework.beans.BeanUtils;\n@@ -196,8 +196,8 @@ public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n         return schemaNames;\n     }\n \n-    public List<ConnIdObjectClassTO> getSupportedObjectClasses(final ConnInstanceTO connectorTO) {\n-        List<ConnIdObjectClassTO> result = Collections.emptyList();\n+    public List<ConnIdObjectClass> getSupportedObjectClasses(final ConnInstanceTO connectorTO) {\n+        List<ConnIdObjectClass> result = Collections.emptyList();\n         try {\n             result = getService(ConnectorService.class).getSupportedObjectClasses(connectorTO.getKey(), connectorTO);\n         } catch (Exception e) {"},{"sha":"a146857fd3c19d5ecbe36fb6643b07beb4ce10e6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":29,"deletions":18,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n@@ -119,31 +120,34 @@ public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(GroupService.class).bulk(action);\n     }\n \n-    public void unlink(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public void unlink(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNLINK,\n+            service.bulkDeassociation(groupKey, ResourceDeassociationActionType.UNLINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class));\n             resetClient(GroupService.class);\n         }\n     }\n \n-    public void link(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public void link(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            service.bulkAssociation(groupId, ResourceAssociationActionType.LINK,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class));\n+\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+            service.bulkAssociation(groupKey, ResourceAssociationActionType.LINK, associationMod);\n+\n             resetClient(GroupService.class);\n         }\n     }\n \n-    public BulkActionResult deprovision(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public BulkActionResult deprovision(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.DEPROVISION,\n+            result = service.bulkDeassociation(groupKey, ResourceDeassociationActionType.DEPROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n@@ -152,24 +156,27 @@ public BulkActionResult deprovision(final String etag, final long groupId, final\n         return result;\n     }\n \n-    public BulkActionResult provision(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public BulkActionResult provision(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.bulkAssociation(groupId, ResourceAssociationActionType.PROVISION,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+\n+            result = service.bulkAssociation(groupKey, ResourceAssociationActionType.PROVISION, associationMod).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n         return result;\n     }\n \n-    public BulkActionResult unassign(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public BulkActionResult unassign(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.bulkDeassociation(groupId, ResourceDeassociationActionType.UNASSIGN,\n+            result = service.bulkDeassociation(groupKey, ResourceDeassociationActionType.UNASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n@@ -178,14 +185,18 @@ public BulkActionResult unassign(final String etag, final long groupId, final Li\n         return result;\n     }\n \n-    public BulkActionResult assign(final String etag, final long groupId, final List<StatusBean> statuses) {\n+    public BulkActionResult assign(final String etag, final long groupKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.bulkAssociation(groupId, ResourceAssociationActionType.ASSIGN,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+\n+            result = service.bulkAssociation(groupKey, ResourceAssociationActionType.ASSIGN, associationMod).\n                     readEntity(BulkActionResult.class);\n+\n             resetClient(GroupService.class);\n         }\n         return result;"},{"sha":"bfe6385257f9589faa5a2c4931b58ce04d175ba1","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":23,"deletions":25,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -122,22 +122,22 @@ public ConnObjectTO readConnObject(final String resourceName, final Long id) {\n         return getService(ResourceService.class).readConnObject(resourceName, AnyTypeKind.USER.name(), id);\n     }\n \n-    public void suspend(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public void suspend(final String etag, final long userKey, final List<StatusBean> statuses) {\n         StatusMod statusMod = StatusUtils.buildStatusMod(statuses, false);\n         statusMod.setType(StatusMod.ModType.SUSPEND);\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            service.status(userId, statusMod);\n+            service.status(userKey, statusMod);\n             resetClient(UserService.class);\n         }\n     }\n \n-    public void reactivate(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public void reactivate(final String etag, final long userKey, final List<StatusBean> statuses) {\n         StatusMod statusMod = StatusUtils.buildStatusMod(statuses, true);\n         statusMod.setType(StatusMod.ModType.REACTIVATE);\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            service.status(userId, statusMod);\n+            service.status(userKey, statusMod);\n             resetClient(UserService.class);\n         }\n     }\n@@ -147,34 +147,34 @@ public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(UserService.class).bulk(action);\n     }\n \n-    public void unlink(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public void unlink(final String etag, final long userKey, final List<StatusBean> statuses) {\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            service.bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n+            service.bulkDeassociation(userKey, ResourceDeassociationActionType.UNLINK,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class));\n             resetClient(UserService.class);\n         }\n     }\n \n-    public void link(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public void link(final String etag, final long userKey, final List<StatusBean> statuses) {\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n \n-            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n-            service.bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod);\n+            service.bulkAssociation(userKey, ResourceAssociationActionType.LINK, associationMod);\n \n             resetClient(UserService.class);\n         }\n     }\n \n-    public BulkActionResult deprovision(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public BulkActionResult deprovision(final String etag, final long userKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n+            result = service.bulkDeassociation(userKey, ResourceDeassociationActionType.DEPROVISION,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n@@ -183,32 +183,31 @@ public BulkActionResult deprovision(final String etag, final long userId, final\n         return result;\n     }\n \n-    public BulkActionResult provision(final String etag, final long userId,\n+    public BulkActionResult provision(final String etag, final long userKey,\n             final List<StatusBean> statuses, final boolean changepwd, final String password) {\n \n         BulkActionResult result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n \n-            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-            associationMod.getTargetResources().addAll(CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).\n-                    getResourceNames(),\n-                    ResourceKey.class));\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n \n-            result = service.bulkAssociation(userId, ResourceAssociationActionType.PROVISION, associationMod).\n+            result = service.bulkAssociation(userKey, ResourceAssociationActionType.PROVISION, associationMod).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }\n         return result;\n     }\n \n-    public BulkActionResult unassign(final String etag, final long userId, final List<StatusBean> statuses) {\n+    public BulkActionResult unassign(final String etag, final long userKey, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n+            result = service.bulkDeassociation(userKey, ResourceDeassociationActionType.UNASSIGN,\n                     CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n                             ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n@@ -217,21 +216,20 @@ public BulkActionResult unassign(final String etag, final long userId, final Lis\n         return result;\n     }\n \n-    public BulkActionResult assign(final String etag, final long userId,\n+    public BulkActionResult assign(final String etag, final long userKey,\n             final List<StatusBean> statuses, final boolean changepwd, final String password) {\n \n         BulkActionResult result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n \n-            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-            associationMod.getTargetResources().addAll(CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).\n-                    getResourceNames(),\n-                    ResourceKey.class));\n+            ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n \n-            result = service.bulkAssociation(userId, ResourceAssociationActionType.ASSIGN, associationMod).\n+            result = service.bulkAssociation(userKey, ResourceAssociationActionType.ASSIGN, associationMod).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }"},{"sha":"8f6cc5cde96e55ee54c9003b507e1a693ab61ed8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -37,19 +37,16 @@\n \n     private static final long serialVersionUID = 7955560320949560716L;\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(ActionResultColumn.class);\n \n     private final BulkActionResult results;\n \n-    private final String idFieldName;\n+    private final String keyFieldName;\n \n-    public ActionResultColumn(final BulkActionResult results, final String idFieldName) {\n+    public ActionResultColumn(final BulkActionResult results, final String keyFieldName) {\n         super(new Model<String>());\n         this.results = results;\n-        this.idFieldName = idFieldName;\n+        this.keyFieldName = keyFieldName;\n     }\n \n     @Override\n@@ -65,10 +62,10 @@ public Component getHeader(final String componentId) {\n     @Override\n     public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n         try {\n-            final PropertyDescriptor propDesc = BeanUtils.getPropertyDescriptor(rowModel.getObject().getClass(),\n-                    idFieldName);\n-            final Object id = propDesc.getReadMethod().invoke(rowModel.getObject(), new Object[0]);\n-            final Status status = id == null ? null : results.getResultMap().get(id.toString());\n+            PropertyDescriptor propDesc =\n+                    BeanUtils.getPropertyDescriptor(rowModel.getObject().getClass(), keyFieldName);\n+            Object id = propDesc.getReadMethod().invoke(rowModel.getObject(), new Object[0]);\n+            Status status = id == null ? null : results.getResults().get(id.toString());\n             item.add(new Label(componentId, status == null ? Status.SUCCESS : status.toString()));\n         } catch (Exception e) {\n             LOG.error(\"Errore retrieving target id value\", e);"},{"sha":"789919b55be1d08f2f0dfbaa603acead628432ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -28,7 +28,7 @@ extAttrNames=External attributes\n intMappingTypes=Internal mapping types\n entity=Entity\n groupSchema=Group Schema\n-accountId=AccountId\n+connObjectKey=ConnObjectKey\n mandatoryCondition=Mandatory\n password=Password\n purpose=Purpose\n@@ -39,9 +39,9 @@ intAttrNames=Internal attributes\n enforceMandatoryCondition=Enforce mandatory condition\n fieldName=Field name\n \n-accountIdValidation=There must be exactly one AccountId\n+connObjectKeyValidation=There must be exactly one ConnObjectKey\n propagationMode=Propagation mode\n-accountLink=Account link\n+connObjectLink=ConnObjectLink\n enable=Enable\n \n createTraceLevel=Create trace level"},{"sha":"54179a5558a17ffdf5d59fabcffa94608fb67881","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -28,7 +28,7 @@ extAttrNames=Attributi esterni\n intMappingTypes=Tipo mapping interno\n entity=Entit&agrave;\n groupSchema=Schema Gruppo\n-accountId=AccountId\n+connObjectKey=ConnObjectKey\n mandatoryCondition=Obbligatorio\n password=Password\n purpose=Scopo\n@@ -39,9 +39,9 @@ intAttrNames=Attributi interni\n enforceMandatoryCondition=Abilita mandatory condition\n fieldName=Nome campo\n \n-accountIdValidation=Deve essere definito esattamente un AccountId\n+connObjectKeyValidation=Deve essere definito esattamente un ConnObjectKey\n propagationMode=Modalit\\u00e0 di propagazione\n-accountLink=Account link\n+connObjectLink=ConnObjectLink\n enable=Abilita\n \n createTraceLevel=Livello di tracciamento delle creazioni"},{"sha":"45c36163265df7d9144030baf20785b15b531413","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ResourceModalPage_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -28,7 +28,7 @@ extAttrNames=Atributos Externos\n intMappingTypes=Tipos internos de mapeamentos\n entity=Entidade\n groupSchema=Esquema de Grupo\n-accountId=Identificador da Conta\n+connObjectKey=ConnObjectKey\n mandatoryCondition=Obrigat\\u00f3rio\n password=Senha\n purpose=Prop\\u00f3sito\n@@ -39,9 +39,9 @@ intAttrNames=Atributos internos\n enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n fieldName=Nome do Campo\n \n-accountIdValidation=Precisa ser exatamente um Identificador de Conta\n+connObjectKeyValidation=Precisa ser exatamente um ConnObjectKey\n propagationMode=Modo de propaga\\u00e7\\u00e3o\n-accountLink=Link de Conta\n+connObjectLink=ConnObjectLink\n enable=Habilitado\n \n createTraceLevel=Criar n\\u00edvel de trace"},{"sha":"fe6c4eff54394f54d61f0f8092a48f867903e31a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceMappingPanel.html","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -43,7 +43,7 @@\n                 </span>\n               </a>\n             </th>\n-            <th><wicket:message key=\"accountId\"/></th>\n+            <th><wicket:message key=\"connObjectKey\"/></th>\n             <th><label wicket:id=\"passwordLabel\"/></th>\n             <th><wicket:message key=\"purpose\"/></th>\n           </tr>\n@@ -67,7 +67,7 @@\n               <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>\n             </td>\n             <td>\n-              <span wicket:id=\"accountId\">[accountId]</span>\n+              <span wicket:id=\"connObjectKey\">[connObjectKey]</span>\n             </td>\n             <td>\n               <span wicket:id=\"password\">[password]</span>\n@@ -90,21 +90,21 @@\n         </tfoot>\n       </table>\n \n-      <table id=\"accountLinkTable\"\n+      <table id=\"connObjectLinkTable\"\n              class=\"table\"\n              style=\"font-size: 1em;margin-top:2px;\"\n-             wicket:id=\"accountLinkContainer\">\n+             wicket:id=\"connObjectLinkContainer\">\n         <tbody>\n           <tr>\n             <th width=\"10%\" align=\"left\"><wicket:message key=\"enable\"/></th>\n-            <th align=\"left\"><wicket:message key=\"accountLink\"/></th>\n+            <th align=\"left\"><wicket:message key=\"connObjectLink\"/></th>\n           </tr>\n           <tr>\n             <td width=\"10%\">\n-              <span wicket:id=\"accountLinkCheckbox\">[accountLinkCheckbox]</span>\n+              <span wicket:id=\"connObjectLinkCheckbox\">[connObjectLinkCheckbox]</span>\n             </td>\n             <td>\n-              <span wicket:id=\"accountLink\">[accountLink]</span>\n+              <span wicket:id=\"connObjectLink\">[connObjectLink]</span>\n             </td>\n           </tr>\n         </tbody>"},{"sha":"3d02b337eeb8a4c2b0b692d4388b6af87cb508e7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Resources.html","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.html?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,52 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <body>\n-    <wicket:panel>\n-\n-      <div>\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"resourceContainer\">\n-            <span wicket:id=\"resourceDatatable\">[resources]</span>\n-          </span>\n-\n-          <span style=\"float:right\">\n-            <form wicket:id=\"resourcePaginatorForm\" style=\"display:inline\">\n-              <label><wicket:message key=\"displayRows\"/></label>\n-              <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n-            </form>\n-          </span>\n-        </div>\n-\n-        <div wicket:id=\"statusModal\">[Show modal window for provisioning status]</div>\n-        <div wicket:id=\"createResourceWin\">[Show modal window for creating resource]</div>\n-        <div wicket:id=\"editResourceWin\">[Show modal window for editing resource]</div>\n-        <div wicket:id=\"editConnectorWin\">[Show modal window for editing connector]</div>\n-\n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createResourceLink\">\n-          <wicket:message key=\"create-resource\"/>\n-        </a>\n-      </div>\n-\n-    </wicket:panel>\n-  </body>\n-</html>"},{"sha":"fb6b8a1c15ec957034bfa456a50dffd2b500497c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Resources.properties","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources.properties?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,34 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-tab1=Resources\n-edit=Edit\n-delete=Delete\n-create-resource=Create\n-propagationPriority=Propagation priority\n-propagationPrimary=Propagation primary\n-\n-tab2=Connectors\n-displayName=Display name\n-version=Version\n-bundleName=Bundle name\n-edit=Edit\n-delete=Delete\n-create-connector=Create\n-delete_error=Operation forbidden:the connector you're trying to delete is connected to a Resource\n-connector=Connector\n-reloadConnectors=Reload connectors\n-confirmReloadConnectors=This request is potentially dangerous for running operations, continue?"},{"sha":"80a518535d1f92294e1aa5110b1f2a962c5fe816","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Resources_it.properties","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_it.properties?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,34 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-tab1=Risorse\n-edit=Modifica\n-delete=Rimuovi\n-create-resource=Crea\n-propagationPriority=Priorit\\u00e0 in propagazione\n-propagationPrimary=Primaria in propagazione\n-\n-tab2=Connettori\n-create-connector=Crea\n-version=Versione\n-bundleName=Bundle name\n-edit=Modifica\n-delete=Elimina\n-delete_error=Operazione vietata: il connettore che si desidera rimuovere \\u00e8 correlato ad una risorsa\n-displayName=Nome visualizzato\n-connector=Connettore\n-reloadConnectors=Ricarica connettori\n-confirmReloadConnectors=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?"},{"sha":"a631352038ecb2d76b172f248f8d8640792febb6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Resources_pt_BR.properties","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResources_pt_BR.properties?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,32 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-tab1=Recursos\n-edit=Alterar\n-delete=Excluir\n-create-resource=Criar\n-propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n-propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n-\n-tab2=Conectores\n-displayName=Mostar\n-version=Vers\\u00e3o\n-bundleName=Nome do Pacote\n-create-connector=Criar\n-delete_error=Opera\\u00e7\\u00e3o n\\u00e3o permitida\\: o conector que voc\\u00ea est\\u00e1 tentando excluir est\\u00e1 conectado a um recurso\n-connector=Conector\n-reloadConnectors=Carregar Conector\n-confirmReloadConnectors=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?"},{"sha":"b744dc18cc0a93662380959f3fad87d95727d87d","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.client.lib.builders.ListQueryBuilder;\n import org.apache.syncope.client.lib.builders.AnyListQueryBuilder;\n import org.apache.syncope.client.lib.builders.AnySearchQueryBuilder;\n+import org.apache.syncope.common.lib.search.AnyObjectFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n@@ -88,6 +89,15 @@ public static GroupFiqlSearchConditionBuilder getGroupSearchConditionBuilder() {\n         return new GroupFiqlSearchConditionBuilder();\n     }\n \n+    /**\n+     * Returns a new instance of {@link AnyObjectFiqlSearchConditionBuilder}, for assisted building of FIQL queries.\n+     *\n+     * @return default instance of {@link AnyObjectFiqlSearchConditionBuilder}\n+     */\n+    public static AnyObjectFiqlSearchConditionBuilder getAnyObjectSearchConditionBuilder() {\n+        return new AnyObjectFiqlSearchConditionBuilder();\n+    }\n+\n     /**\n      * Returns a new instance of {@link OrderByClauseBuilder}, for assisted building of {@link orderby} clauses.\n      *\n@@ -119,8 +129,7 @@ public static AnyListQueryBuilder getAnyListQueryBuilder() {\n \n     /**\n      * Returns a new instance of {@link AnySearchQueryBuilder}, for assisted building of some service's\n-     * {@code search()}\n-     * arguments.\n+     * {@code search()} arguments.\n      *\n      * @return default instance of {@link AnySearchQueryBuilder}\n      */"},{"sha":"afd29e914874508a7f5dc7f3727b50314d97e77b","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AnyListQueryBuilder.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -45,6 +45,7 @@ public AnyListQueryBuilder realm(final String realm) {\n         if (instance.getRealms() == null) {\n             instance.setRealms(new ArrayList<String>());\n         }\n+        instance.getRealms().add(realm);\n \n         return this;\n     }"},{"sha":"f84e65a7bab992d0563c903f92c9ea8f53b32e88","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/AnyMod.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.mod;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.HashSet;\n import java.util.Set;\n@@ -144,6 +145,7 @@ public Set<String> getResourcesToRemove() {\n     /**\n      * @return true is all backing collections are empty.\n      */\n+    @JsonIgnore\n     public boolean isEmpty() {\n         return plainAttrsToUpdate.isEmpty() && plainAttrsToRemove.isEmpty()\n                 && derAttrsToAdd.isEmpty() && derAttrsToRemove.isEmpty()"},{"sha":"0ace0b5beaa4e5d57662f420268f3cd75126f20f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AbstractFiqlSearchConditionBuilder.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -49,6 +49,7 @@ protected Builder newBuilderInstance() {\n         return new Builder(properties);\n     }\n \n+    @Override\n     public SyncopeProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }"},{"sha":"67e7e15fab38f9ce6537c25d94a9afbd0a3cf5e3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AnyObjectFiqlSearchConditionBuilder.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.search;\n+\n+import java.util.Map;\n+import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n+\n+/**\n+ * Extends {@link AbstractFiqlSearchConditionBuilder} by providing some additional facilities for searching\n+ * any objects in Syncope.\n+ */\n+public class AnyObjectFiqlSearchConditionBuilder extends AbstractFiqlSearchConditionBuilder {\n+\n+    public AnyObjectFiqlSearchConditionBuilder() {\n+        super();\n+    }\n+\n+    public AnyObjectFiqlSearchConditionBuilder(final Map<String, String> properties) {\n+        super(properties);\n+    }\n+\n+    @Override\n+    protected Builder newBuilderInstance() {\n+        return new Builder(properties);\n+    }\n+\n+    @Override\n+    public AnyObjectProperty is(final String property) {\n+        return newBuilderInstance().is(property);\n+    }\n+\n+    public CompleteCondition type(final String type) {\n+        return newBuilderInstance().is(SpecialAttr.TYPE.toString()).equalTo(type);\n+    }\n+\n+    protected static class Builder extends AbstractFiqlSearchConditionBuilder.Builder\n+            implements AnyObjectProperty, CompleteCondition {\n+\n+        public Builder(final Map<String, String> properties) {\n+            super(properties);\n+        }\n+\n+        public Builder(final Builder parent) {\n+            super(parent);\n+        }\n+\n+        @Override\n+        public AnyObjectProperty is(final String property) {\n+            Builder b = new Builder(this);\n+            b.result = property;\n+            return b;\n+        }\n+\n+    }\n+}"},{"sha":"c6757124e956521f3e1b9bec8de82bacdf0fa18d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AnyObjectProperty.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.search;\n+\n+public interface AnyObjectProperty extends SyncopeProperty {\n+\n+}"},{"sha":"551a0ad5eed4afd0598cb1272af3d342eefce651","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SpecialAttr.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSpecialAttr.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -25,6 +25,7 @@\n public enum SpecialAttr {\n \n     NULL(\"$null\"),\n+    TYPE(\"$type\"),\n     RESOURCES(\"$resources\"),\n     GROUPS(\"$groups\"),\n     ROLES(\"$roles\");"},{"sha":"c562b69478ae12d0b041541f287883bb0466c186","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"removed","additions":0,"deletions":74,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46aaa9e89fa2da3ecc4208f17a4d7d443100d830/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=46aaa9e89fa2da3ecc4208f17a4d7d443100d830","patch":"@@ -1,74 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n-\n-/**\n- * Mimic ConnId's ObjectClass information.\n- */\n-@XmlRootElement(name = \"connIdObjectClass\")\n-@XmlType\n-public class ConnIdObjectClassTO extends AbstractBaseBean {\n-\n-    private static final long serialVersionUID = 5802458031138859994L;\n-\n-    @XmlEnum\n-    public enum DefaultType {\n-\n-        ACCOUNT(\"__ACCOUNT__\"),\n-        GROUP(\"__GROUP__\");\n-\n-        private final String specialName;\n-\n-        private DefaultType(final String specialName) {\n-            this.specialName = specialName;\n-        }\n-\n-        public String getSpecialName() {\n-            return specialName;\n-        }\n-    }\n-\n-    public static final ConnIdObjectClassTO ACCOUNT = new ConnIdObjectClassTO(DefaultType.ACCOUNT.getSpecialName());\n-\n-    public static final ConnIdObjectClassTO GROUP = new ConnIdObjectClassTO(DefaultType.GROUP.getSpecialName());\n-\n-    private String type;\n-\n-    public ConnIdObjectClassTO() {\n-        super();\n-    }\n-\n-    public ConnIdObjectClassTO(final String type) {\n-        super();\n-        this.type = type;\n-    }\n-\n-    public String getType() {\n-        return type;\n-    }\n-\n-    public void setType(final String type) {\n-        this.type = type;\n-    }\n-}"},{"sha":"c573278a14ffb1c20d59889bb91bcc94e3497329","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -61,7 +61,7 @@ public boolean evaluate(final MappingItemTO item) {\n     protected boolean addConnObjectKeyItem(final MappingItemTO connObjectItem) {\n         if (IntMappingType.UserVirtualSchema == connObjectItem.getIntMappingType()\n                 || IntMappingType.GroupVirtualSchema == connObjectItem.getIntMappingType()\n-                || IntMappingType.AnyVirtualSchema == connObjectItem.getIntMappingType()\n+                || IntMappingType.AnyObjectVirtualSchema == connObjectItem.getIntMappingType()\n                 || IntMappingType.Password == connObjectItem.getIntMappingType()) {\n \n             throw new IllegalArgumentException(\"Virtual attributes cannot be set as connObjectKey\");"},{"sha":"4588a36e00dd7c5ea2891ce04e0ac2d2eb7f6486","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/IntMappingType.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIntMappingType.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -53,10 +53,10 @@ public enum IntMappingType {\n     // -------------------------\n     // Any attribute types (the same in AnyMappingType)\n     // -------------------------\n-    AnyPlainSchema(AnyTypeKind.ANY_OBJECT),\n-    AnyDerivedSchema(AnyTypeKind.ANY_OBJECT),\n-    AnyVirtualSchema(AnyTypeKind.ANY_OBJECT),\n-    AnyKey(AnyTypeKind.ANY_OBJECT);\n+    AnyObjectPlainSchema(AnyTypeKind.ANY_OBJECT),\n+    AnyObjectDerivedSchema(AnyTypeKind.ANY_OBJECT),\n+    AnyObjectVirtualSchema(AnyTypeKind.ANY_OBJECT),\n+    AnyObjectKey(AnyTypeKind.ANY_OBJECT);\n \n     private final AnyTypeKind anyTypeKind;\n \n@@ -119,7 +119,7 @@ public static Set<IntMappingType> getAttributeTypes(final AnyTypeKind anyTypeKin\n     public static Set<IntMappingType> getEmbedded() {\n         return EnumSet.of(IntMappingType.UserKey, IntMappingType.Username, IntMappingType.Password,\n                 IntMappingType.GroupKey, IntMappingType.GroupName, IntMappingType.GroupOwnerSchema,\n-                IntMappingType.AnyKey);\n+                IntMappingType.AnyObjectKey);\n     }\n \n     /**\n@@ -192,10 +192,10 @@ private enum GroupMappingType {\n      */\n     private enum AnyMappingType {\n \n-        AnyPlainSchema,\n-        AnyDerivedSchema,\n-        AnyVirtualSchema,\n-        AnyKey;\n+        AnyObjectPlainSchema,\n+        AnyObjectDerivedSchema,\n+        AnyObjectVirtualSchema,\n+        AnyObjectKey;\n \n     }\n }"},{"sha":"868b3f11f88cb35d050f9a718eb2b11b858073a6","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/wrap/ConnIdObjectClass.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FConnIdObjectClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FConnIdObjectClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwrap%2FConnIdObjectClass.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.wrap;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+@XmlRootElement(name = \"connIdObjectClass\")\n+@XmlType\n+public class ConnIdObjectClass extends AbstractWrappable<String> {\n+\n+    private static final long serialVersionUID = 613925852330408531L;\n+\n+}"},{"sha":"b460b546e193ac10218eaa34c5662594077a29f9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import javax.ws.rs.BeanParam;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.MatrixParam;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+\n+/**\n+ * REST operations for anyObjects.\n+ */\n+@Path(\"anyObjects\")\n+public interface AnyObjectService extends AnyService<AnyObjectTO, AnyObjectMod> {\n+\n+    /**\n+     * Returns a paged list of existing any objects matching the given query, for the given type.\n+     *\n+     * @param type any type\n+     * @param listQuery query conditions\n+     * @return paged list of existing any objects matching the given query, for the given type\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<AnyObjectTO> list(@MatrixParam(\"type\") String type, @BeanParam AnyListQuery listQuery);\n+\n+}"},{"sha":"90fbf7d14011500597806db3733d581d6d77179e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"added","additions":191,"deletions":0,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,191 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.BeanParam;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.model.wadl.Description;\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.lib.mod.AnyMod;\n+import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n+\n+public interface AnyService<TO extends AnyTO, MOD extends AnyMod> extends JAXRSService {\n+\n+    /**\n+     * Reads the any object matching the provided key.\n+     *\n+     * @param key key of any object to be read\n+     * @return any object with matching id\n+     */\n+    @GET\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    TO read(@NotNull @PathParam(\"key\") Long key);\n+\n+    /**\n+     * Returns a paged list of existing any objects matching the given query.\n+     *\n+     * @param listQuery query conditions\n+     * @return paged list of existing any objects matching the given query\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<TO> list(@BeanParam AnyListQuery listQuery);\n+\n+    /**\n+     * Returns a paged list of any objects matching the given query.\n+     *\n+     * @param searchQuery query conditions\n+     * @return paged list of any objects matching the given query\n+     */\n+    @GET\n+    @Path(\"search\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<TO> search(@BeanParam AnySearchQuery searchQuery);\n+\n+    /**\n+     * Creates a new any object.\n+     *\n+     * @param anyTO any object to be created\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created any object as well as the any\n+     * object itself enriched with propagation status information - {@link AnyTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring <tt>Location</tt> header of created any object as well as the \"\n+                + \"any object itself enriched with propagation status information - \"\n+                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n+    })\n+    @POST\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(@NotNull TO anyTO);\n+\n+    /**\n+     * Updates any object matching the provided key.\n+     *\n+     * @param key key of any object to be updated\n+     * @param anyMod modification to be applied to any object matching the provided key\n+     * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n+     * - {@link AnyTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring the updated any object enriched with propagation status information - \"\n+                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n+    })\n+    @POST\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response update(@NotNull @PathParam(\"key\") Long key, @NotNull MOD anyMod);\n+\n+    /**\n+     * Deletes any object matching provided key.\n+     *\n+     * @param key key of any object to be deleted\n+     * @return <tt>Response</tt> object featuring the deleted any object enriched with propagation status information\n+     * - {@link AnyTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring the deleted any object enriched with propagation status information - \"\n+                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n+    })\n+    @DELETE\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response delete(@NotNull @PathParam(\"key\") Long key);\n+\n+    /**\n+     * Executes resource-related operations on given any object.\n+     *\n+     * @param key any object id.\n+     * @param type resource association action type\n+     * @param resourceNames external resources to be used for propagation-related operations\n+     * @return <tt>Response</tt> object featuring\n+     * {@link BulkActionResult} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n+    })\n+    @POST\n+    @Path(\"{key}/deassociate/{type}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response bulkDeassociation(\n+            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n+            @NotNull List<ResourceKey> resourceNames);\n+\n+    /**\n+     * Executes resource-related operations on given any object.\n+     *\n+     * @param key any object id.\n+     * @param type resource association action type\n+     * @param associationMod external resources to be used for propagation-related operations\n+     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n+    })\n+    @POST\n+    @Path(\"{key}/associate/{type}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response bulkAssociation(\n+            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"type\") ResourceAssociationActionType type,\n+            @NotNull ResourceAssociationMod associationMod);\n+\n+    /**\n+     * Executes the provided bulk action.\n+     *\n+     * @param bulkAction list of any object ids against which the bulk action will be performed.\n+     * @return Bulk action result\n+     */\n+    @POST\n+    @Path(\"bulk\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    BulkActionResult bulk(@NotNull BulkAction bulkAction);\n+}"},{"sha":"e0c240fca796f58a12d7edfed1f70957e33b3273","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -38,11 +38,11 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.wrap.BooleanWrap;\n+import org.apache.syncope.common.lib.wrap.ConnIdObjectClass;\n \n /**\n  * REST operations for connector bundles and instances.\n@@ -100,7 +100,7 @@ List<PlainSchemaTO> getSchemaNames(@NotNull @PathParam(\"key\") Long key,\n     @Path(\"{key}/supportedObjectClasses\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    List<ConnIdObjectClassTO> getSupportedObjectClasses(\n+    List<ConnIdObjectClass> getSupportedObjectClasses(\n             @NotNull @PathParam(\"key\") Long key,\n             @NotNull ConnInstanceTO connInstanceTO);\n "},{"sha":"7d48b46ae8a4ee65fba6546013b3eb505b8fa65c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":157,"changes":158,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -19,47 +19,21 @@\n package org.apache.syncope.common.rest.api.service;\n \n import java.util.List;\n-import javax.validation.constraints.NotNull;\n-import javax.ws.rs.BeanParam;\n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.GroupMod;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceKey;\n-import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n-import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n \n /**\n  * REST operations for groups.\n  */\n @Path(\"groups\")\n-public interface GroupService extends JAXRSService {\n-\n-    /**\n-     * Reads the group matching the provided groupKey.\n-     *\n-     * @param groupKey key of group to be read\n-     * @return group with matching id\n-     */\n-    @GET\n-    @Path(\"{groupKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    GroupTO read(@NotNull @PathParam(\"groupKey\") Long groupKey);\n+public interface GroupService extends AnyService<GroupTO, GroupMod> {\n \n     /**\n      * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\n@@ -76,134 +50,4 @@ public interface GroupService extends JAXRSService {\n     @Path(\"own\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<GroupTO> own();\n-\n-    /**\n-     * Returns a paged list of existing groups matching the given query.\n-     *\n-     * @param listQuery query conditions\n-     * @return paged list of existing groups matching the given query\n-     */\n-    @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<GroupTO> list(@BeanParam AnyListQuery listQuery);\n-\n-    /**\n-     * Returns a paged list of groups matching the given query.\n-     *\n-     * @param searchQuery query conditions\n-     * @return paged list of groups matching the given query\n-     */\n-    @GET\n-    @Path(\"search\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<GroupTO> search(@BeanParam AnySearchQuery searchQuery);\n-\n-    /**\n-     * Creates a new group.\n-     *\n-     * @param groupTO group to be created\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created group as well as the group itself\n-     * enriched with propagation status information - {@link GroupTO} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created group as well as the \"\n-                + \"group itself enriched with propagation status information - <tt>GroupTO</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response create(@NotNull GroupTO groupTO);\n-\n-    /**\n-     * Updates group matching the provided groupKey.\n-     *\n-     * @param groupKey key of group to be updated\n-     * @param groupMod modification to be applied to group matching the provided groupKey\n-     * @return <tt>Response</tt> object featuring the updated group enriched with propagation status information\n-     * - {@link GroupTO} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated group enriched with propagation status information - \"\n-                + \"<tt>GroupTO</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{groupKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response update(@NotNull @PathParam(\"groupKey\") Long groupKey, @NotNull GroupMod groupMod);\n-\n-    /**\n-     * Deletes group matching provided groupKey.\n-     *\n-     * @param groupKey key of group to be deleted\n-     * @return <tt>Response</tt> object featuring the deleted group enriched with propagation status information\n-     * - {@link GroupTO} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted group enriched with propagation status information - \"\n-                + \"<tt>GroupTO</tt> as <tt>Entity</tt>\")\n-    })\n-    @DELETE\n-    @Path(\"{groupKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response delete(@NotNull @PathParam(\"groupKey\") Long groupKey);\n-\n-    /**\n-     * Executes resource-related operations on given group.\n-     *\n-     * @param groupKey group id.\n-     * @param type resource association action type\n-     * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring\n-     * {@link BulkActionResult} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{groupKey}/deassociate/{type}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkDeassociation(\n-            @NotNull @PathParam(\"groupKey\") Long groupKey,\n-            @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n-            @NotNull List<ResourceKey> resourceNames);\n-\n-    /**\n-     * Executes resource-related operations on given group.\n-     *\n-     * @param groupKey group id.\n-     * @param type resource association action type\n-     * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{groupKey}/associate/{type}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkAssociation(\n-            @NotNull @PathParam(\"groupKey\") Long groupKey,\n-            @NotNull @PathParam(\"type\") ResourceAssociationActionType type,\n-            @NotNull List<ResourceKey> resourceNames);\n-\n-    /**\n-     * Executes the provided bulk action.\n-     *\n-     * @param bulkAction list of group ids against which the bulk action will be performed.\n-     * @return Bulk action result\n-     */\n-    @POST\n-    @Path(\"bulk\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    BulkActionResult bulk(@NotNull BulkAction bulkAction);\n }"},{"sha":"bf1e6b764fa33df2aa9d9ad243a45e317be9419c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":13,"deletions":147,"changes":160,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -18,13 +18,9 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n-import java.util.List;\n import javax.validation.constraints.NotNull;\n-import javax.ws.rs.BeanParam;\n import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n import javax.ws.rs.DefaultValue;\n-import javax.ws.rs.GET;\n import javax.ws.rs.OPTIONS;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n@@ -36,85 +32,44 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n-import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceKey;\n-import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n-import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n \n /**\n  * REST operations for users.\n  */\n @Path(\"users\")\n-public interface UserService extends JAXRSService {\n+public interface UserService extends AnyService<UserTO, UserMod> {\n \n     /**\n      * Gives the username for the provided user key.\n      *\n-     * @param userKey user key\n-     * @return <tt>Response</tt> object featuring HTTP header with username matching the given userKey\n+     * @param key user key\n+     * @return <tt>Response</tt> object featuring HTTP header with username matching the given key\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with username matching the given userKey\")\n+                value = \"Featuring HTTP header with username matching the given key\")\n     })\n     @OPTIONS\n-    @Path(\"{userKey}/username\")\n-    Response getUsername(@NotNull @PathParam(\"userKey\") Long userKey);\n+    @Path(\"{key}/username\")\n+    Response getUsername(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Gives the user key for the provided username.\n      *\n      * @param username username\n-     * @return <tt>Response</tt> object featuring HTTP header with userKey matching the given username\n+     * @return <tt>Response</tt> object featuring HTTP header with key matching the given username\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with userKey matching the given username\")\n+                value = \"Featuring HTTP header with key matching the given username\")\n     })\n     @OPTIONS\n-    @Path(\"{username}/userKey\")\n+    @Path(\"{username}/key\")\n     Response getUserKey(@NotNull @PathParam(\"username\") String username);\n \n-    /**\n-     * Reads the user matching the provided userKey.\n-     *\n-     * @param userKey id of user to be read\n-     * @return User matching the provided userKey\n-     */\n-    @GET\n-    @Path(\"{userKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    UserTO read(@NotNull @PathParam(\"userKey\") Long userKey);\n-\n-    /**\n-     * Returns a paged list of existing users matching the given query.\n-     *\n-     * @param listQuery query conditions\n-     * @return paged list of existing users matching the given query\n-     */\n-    @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<UserTO> list(@BeanParam AnyListQuery listQuery);\n-\n-    /**\n-     * Returns a paged list of users matching the given query.\n-     *\n-     * @param searchQuery query conditions\n-     * @return paged list of users matching the given query\n-     */\n-    @GET\n-    @Path(\"search\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<UserTO> search(@BeanParam AnySearchQuery searchQuery);\n-\n     /**\n      * Creates a new user.\n      *\n@@ -136,28 +91,9 @@ Response create(\n             @DefaultValue(\"true\") @QueryParam(\"storePassword\") boolean storePassword);\n \n     /**\n-     * Updates user matching the provided userKey.\n+     * Performs a status update on user matching provided key.\n      *\n-     * @param userKey id of user to be updated\n-     * @param userMod modification to be applied to user matching the provided userKey\n-     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n-     * - {@link UserTO} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated user enriched with propagation status information - \"\n-                + \"<tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{userKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response update(@NotNull @PathParam(\"userKey\") Long userKey, @NotNull UserMod userMod);\n-\n-    /**\n-     * Performs a status update on user matching provided userKey.\n-     *\n-     * @param userKey id of user to be subjected to status update\n+     * @param key id of user to be subjected to status update\n      * @param statusMod status update details\n      * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n      * - {@link UserTO} as <tt>Entity</tt>\n@@ -168,78 +104,8 @@ Response create(\n                 + \"<tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{userKey}/status\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response status(@NotNull @PathParam(\"userKey\") Long userKey, @NotNull StatusMod statusMod);\n-\n-    /**\n-     * Deletes user matching provided userKey.\n-     *\n-     * @param userKey id of user to be deleted\n-     * @return <tt>Response</tt> object featuring the deleted user enriched with propagation status information\n-     * - {@link UserTO} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted user enriched with propagation status information - \"\n-                + \"<tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n-    @DELETE\n-    @Path(\"{userKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response delete(@NotNull @PathParam(\"userKey\") Long userKey);\n-\n-    /**\n-     * Executes resource-related operations on given user.\n-     *\n-     * @param userKey user key\n-     * @param type resource de-association action type\n-     * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{userKey}/bulkDeassociation/{type}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkDeassociation(\n-            @NotNull @PathParam(\"userKey\") Long userKey,\n-            @NotNull @PathParam(\"type\") ResourceDeassociationActionType type,\n-            @NotNull List<ResourceKey> resourceNames);\n-\n-    /**\n-     * Executes resource-related operations on given user.\n-     *\n-     * @param userKey user key.\n-     * @param type resource association action type\n-     * @param associationMod external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n-     */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n-    @POST\n-    @Path(\"{userKey}/bulkAssociation/{type}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response bulkAssociation(\n-            @NotNull @PathParam(\"userKey\") Long userKey,\n-            @NotNull @PathParam(\"type\") ResourceAssociationActionType type,\n-            @NotNull ResourceAssociationMod associationMod);\n-\n-    /**\n-     * Executes the provided bulk action.\n-     *\n-     * @param bulkAction list of user keys against which the bulk action will be performed.\n-     * @return Bulk action result\n-     */\n-    @POST\n-    @Path(\"bulk\")\n+    @Path(\"{key}/status\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    BulkActionResult bulk(@NotNull BulkAction bulkAction);\n+    Response status(@NotNull @PathParam(\"key\") Long key, @NotNull StatusMod statusMod);\n }"},{"sha":"d24b08e333404fbdf78e498e94f967664ada5fbf","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -30,8 +30,8 @@\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n \n-public abstract class AbstractAnyLogic<T extends AnyTO, V extends AnyMod>\n-        extends AbstractResourceAssociator<T> {\n+public abstract class AbstractAnyLogic<TO extends AnyTO, MOD extends AnyMod>\n+        extends AbstractResourceAssociator<TO> {\n \n     private static class StartsWithPredicate implements Predicate<String> {\n \n@@ -67,17 +67,19 @@ protected Set<String> getEffectiveRealms(\n         return effective;\n     }\n \n-    public abstract T read(Long key);\n+    public abstract TO read(Long key);\n \n     public abstract int count(List<String> realms);\n \n-    public abstract T update(V anyMod);\n+    public abstract TO create(TO anyTO);\n \n-    public abstract T delete(Long key);\n+    public abstract TO update(MOD anyMod);\n \n-    public abstract List<T> list(int page, int size, List<OrderByClause> orderBy, List<String> realms);\n+    public abstract TO delete(Long key);\n \n-    public abstract List<T> search(\n+    public abstract List<TO> list(int page, int size, List<OrderByClause> orderBy, List<String> realms);\n+\n+    public abstract List<TO> search(\n             SearchCond searchCondition, int page, int size, List<OrderByClause> orderBy, List<String> realms);\n \n     public abstract int searchCount(SearchCond searchCondition, List<String> realms);"},{"sha":"257bf421e6bd5a353b97ac46eb1b21b04de311bb","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -29,6 +29,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.mod.AnyObjectMod;\n@@ -107,9 +108,19 @@ public int count(final List<String> realms) {\n     public List<AnyObjectTO> list(\n             final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n \n-        return CollectionUtils.collect(anyObjectDAO.findAll(\n-                getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realms),\n-                page, size, orderBy),\n+        return list(null, page, size, orderBy, realms);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.ANY_OBJECT_LIST + \"')\")\n+    @Transactional(readOnly = true)\n+    public List<AnyObjectTO> list(final String type,\n+            final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n+\n+        Set<String> effectiveRealms = getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realms);\n+\n+        return CollectionUtils.collect(StringUtils.isBlank(type)\n+                ? anyObjectDAO.findAll(effectiveRealms, page, size, orderBy)\n+                : anyObjectDAO.findAll(type, effectiveRealms, page, size, orderBy),\n                 new Transformer<AnyObject, AnyObjectTO>() {\n \n                     @Override\n@@ -147,10 +158,10 @@ public AnyObjectTO transform(final AnyObject input) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.ANY_OBJECT_CREATE + \"')\")\n+    @Override\n     public AnyObjectTO create(final AnyObjectTO anyObjectTO) {\n         if (anyObjectTO.getRealm() == null) {\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRealm);\n-            throw sce;\n+            throw SyncopeClientException.build(ClientExceptionType.InvalidRealm);\n         }\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(Entitlement.ANY_OBJECT_CREATE),\n@@ -163,6 +174,10 @@ public AnyObjectTO create(final AnyObjectTO anyObjectTO) {\n         AnyObjectTO actual = attrTransformer.transform(anyObjectTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n+        if (anyObjectTO.getType() == null) {\n+            throw SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n+        }\n+\n         /*\n          * Actual operations: workflow, propagation\n          */\n@@ -181,7 +196,7 @@ public AnyObjectTO update(final AnyObjectMod anyObjectMod) {\n         }\n         Set<String> effectiveRealms = getEffectiveRealms(\n                 AuthContextUtils.getAuthorizations().get(Entitlement.ANY_OBJECT_UPDATE),\n-                Collections.singleton(anyObjectMod.getRealm()));\n+                Collections.singleton(anyObject.getRealm().getFullPath()));\n         if (effectiveRealms.isEmpty()) {\n             throw new UnauthorizedException(AnyTypeKind.ANY_OBJECT, anyObject.getKey());\n         }"},{"sha":"b0cfa03d6c763d5d4477a635f0a029f6b1cf1869","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeLogic.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -25,7 +25,9 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n@@ -96,7 +98,13 @@ public AnyTypeTO delete(final String key) {\n         }\n \n         AnyTypeTO deleted = binder.getAnyTypeTO(anyType);\n-        anyTypeDAO.delete(key);\n+        try {\n+            anyTypeDAO.delete(key);\n+        } catch (IllegalArgumentException e) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n         return deleted;\n     }\n "},{"sha":"877a272fdd7d2402a829c940788afedce2f8ad54","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -166,6 +166,7 @@ public GroupTO transform(final Group input) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.GROUP_CREATE + \"')\")\n+    @Override\n     public GroupTO create(final GroupTO groupTO) {\n         if (groupTO.getRealm() == null) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRealm);"},{"sha":"28e5cab857bee0c7dc4eabe5354dfc7acd87dae5","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -182,6 +182,12 @@ public UserTO createSelf(final UserTO userTO, final boolean storePassword) {\n         return doCreate(userTO, storePassword);\n     }\n \n+    @PreAuthorize(\"hasRole('\" + Entitlement.USER_CREATE + \"')\")\n+    @Override\n+    public UserTO create(final UserTO userTO) {\n+        return create(userTO, true);\n+    }\n+\n     @PreAuthorize(\"hasRole('\" + Entitlement.USER_CREATE + \"')\")\n     public UserTO create(final UserTO userTO, final boolean storePassword) {\n         if (userTO.getRealm() == null) {"},{"sha":"6257d597ba21edaed91e3c8deaaca362cba38074","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -196,6 +196,7 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n             final SyncTask syncTask, final Provision provision, final AnyUtils anyUtils) {\n \n         T anyTO = anyUtils.newAnyTO();\n+        anyTO.setType(provision.getAnyType().getKey());\n \n         // 1. fill with data from connector object\n         anyTO.setRealm(syncTask.getDestinatioRealm().getFullPath());\n@@ -206,6 +207,7 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n             switch (item.getIntMappingType()) {\n                 case UserKey:\n                 case GroupKey:\n+                case AnyObjectKey:\n                     break;\n \n                 case Password:\n@@ -252,6 +254,7 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n \n                 case UserPlainSchema:\n                 case GroupPlainSchema:\n+                case AnyObjectPlainSchema:\n                     attrTO = new AttrTO();\n                     attrTO.setSchema(item.getIntAttrName());\n \n@@ -292,13 +295,15 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n \n                 case UserDerivedSchema:\n                 case GroupDerivedSchema:\n+                case AnyObjectDerivedSchema:\n                     attrTO = new AttrTO();\n                     attrTO.setSchema(item.getIntAttrName());\n                     anyTO.getDerAttrs().add(attrTO);\n                     break;\n \n                 case UserVirtualSchema:\n                 case GroupVirtualSchema:\n+                case AnyObjectVirtualSchema:\n                     attrTO = new AttrTO();\n                     attrTO.setSchema(item.getIntAttrName());\n "},{"sha":"e6558097ece924c588ea534fb2a208749392ef4f","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/MappingUtils.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -154,7 +154,7 @@ public static Pair<String, Set<Attribute>> prepareAttrs(\n             try {\n                 if (mapping.getIntMappingType() == IntMappingType.UserVirtualSchema\n                         || mapping.getIntMappingType() == IntMappingType.GroupVirtualSchema\n-                        || mapping.getIntMappingType() == IntMappingType.AnyVirtualSchema) {\n+                        || mapping.getIntMappingType() == IntMappingType.AnyObjectVirtualSchema) {\n \n                     LOG.debug(\"Expire entry cache {}-{}\", any.getKey(), mapping.getIntAttrName());\n                     virAttrCache.expire(any.getType().getKey(), any.getKey(), mapping.getIntAttrName());\n@@ -270,15 +270,15 @@ private static Pair<String, Attribute> prepareAttr(\n         switch (mapItem.getIntMappingType()) {\n             case UserPlainSchema:\n             case GroupPlainSchema:\n-            case AnyPlainSchema:\n+            case AnyObjectPlainSchema:\n                 final PlainSchemaDAO plainSchemaDAO = context.getBean(PlainSchemaDAO.class);\n                 schema = plainSchemaDAO.find(mapItem.getIntAttrName());\n                 schemaType = schema == null ? AttrSchemaType.String : schema.getType();\n                 break;\n \n             case UserVirtualSchema:\n             case GroupVirtualSchema:\n-            case AnyVirtualSchema:\n+            case AnyObjectVirtualSchema:\n                 VirSchemaDAO virSchemaDAO = context.getBean(VirSchemaDAO.class);\n                 VirSchema virSchema = virSchemaDAO.find(mapItem.getIntAttrName());\n                 readOnlyVirSchema = (virSchema != null && virSchema.isReadonly());\n@@ -442,7 +442,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n         switch (mappingItem.getIntMappingType()) {\n             case UserPlainSchema:\n             case GroupPlainSchema:\n-            case AnyPlainSchema:\n+            case AnyObjectPlainSchema:\n                 for (Any<?, ?, ?> any : anys) {\n                     PlainAttr<?> attr = any.getPlainAttr(mappingItem.getIntAttrName());\n                     if (attr != null) {\n@@ -464,7 +464,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n \n             case UserVirtualSchema:\n             case GroupVirtualSchema:\n-            case AnyVirtualSchema:\n+            case AnyObjectVirtualSchema:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n                     VirAttr<?> virAttr = any.getVirAttr(mappingItem.getIntAttrName());\n@@ -501,7 +501,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n \n             case UserDerivedSchema:\n             case GroupDerivedSchema:\n-            case AnyDerivedSchema:\n+            case AnyObjectDerivedSchema:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n                     DerAttr<?> derAttr = any.getDerAttr(mappingItem.getIntAttrName());\n@@ -521,7 +521,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n \n             case UserKey:\n             case GroupKey:\n-            case AnyKey:\n+            case AnyObjectKey:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n                     attrValue = anyUtils.newPlainAttrValue();"},{"sha":"c7efa8ab814a5e4effe62a4163ad52e72398e0d4","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/search/SearchCondVisitor.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.RoleCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyTypeCond;\n \n /**\n  * Converts CXF's <tt>SearchCondition</tt> into internal <tt>SearchCond</tt>.\n@@ -98,6 +99,12 @@ private SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n                     leaf = SearchCond.getLeafCond(attributeCond);\n                 } else {\n                     switch (specialAttrName) {\n+                        case TYPE:\n+                            AnyTypeCond typeCond = new AnyTypeCond();\n+                            typeCond.setAnyTypeName(value);\n+                            leaf = SearchCond.getLeafCond(typeCond);\n+                            break;\n+\n                         case GROUPS:\n                             MembershipCond groupCond = new MembershipCond();\n                             groupCond.setGroupKey(Long.valueOf(value));"},{"sha":"caa9c5478b75c378ef495c98ab3f56e9352e01b8","filename":"core/misc/src/test/java/org/apache/syncope/core/misc/search/SearchCondConverterTest.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondConverterTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -20,6 +20,7 @@\n \n import static org.junit.Assert.assertEquals;\n \n+import org.apache.syncope.common.lib.search.AnyObjectFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n import org.apache.syncope.common.lib.search.UserFiqlSearchConditionBuilder;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n@@ -28,6 +29,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.RoleCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyTypeCond;\n import org.junit.Test;\n \n public class SearchCondConverterTest {\n@@ -118,6 +120,18 @@ public void resources() {\n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n     }\n \n+    @Test\n+    public void type() {\n+        String fiqlExpression = new AnyObjectFiqlSearchConditionBuilder().type(\"PRINTER\").query();\n+        assertEquals(SpecialAttr.TYPE + \"==PRINTER\", fiqlExpression);\n+\n+        AnyTypeCond acond = new AnyTypeCond();\n+        acond.setAnyTypeName(\"PRINTER\");\n+        SearchCond simpleCond = SearchCond.getLeafCond(acond);\n+\n+        assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n+    }\n+\n     @Test\n     public void and() {\n         String fiqlExpression = new UserFiqlSearchConditionBuilder()."},{"sha":"11d3c8ee3eab133edde4f88850baffe69e4ac8d3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -20,6 +20,8 @@\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -28,7 +30,11 @@\n \n public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n-    List<AnyObject> findByAnyType(String anyTypeName);\n+    List<AnyObject> findAll(String anyTypeName,\n+            Set<String> adminRealms, int page, int itemsPerPage);\n+\n+    List<AnyObject> findAll(String anyTypeName,\n+            Set<String> adminRealms, int page, int itemsPerPage, List<OrderByClause> orderBy);\n \n     List<Group> findDynGroupMemberships(AnyObject anyObject);\n "},{"sha":"a12a3e7935f77088eeb65f0c75ba284e337f60df","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/AnyTypeCond.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao.search;\n+\n+public class AnyTypeCond extends AbstractSearchCond {\n+\n+    private static final long serialVersionUID = 4298076973281246633L;\n+\n+    private String anyTypeName;\n+\n+    public String getAnyTypeName() {\n+        return anyTypeName;\n+    }\n+\n+    public void setAnyTypeName(final String anyTypeName) {\n+        this.anyTypeName = anyTypeName;\n+    }\n+\n+    @Override\n+    public boolean isValid() {\n+        return anyTypeName != null;\n+    }\n+\n+}"},{"sha":"82da59421d8ea0f4db49fb01eab5d285d65024df","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/SearchCond.java","status":"modified","additions":21,"deletions":1,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -35,6 +35,8 @@ public enum Type {\n \n     private Type type;\n \n+    private AnyTypeCond anyTypeCond;\n+\n     private AnyCond anyCond;\n \n     private AttributeCond attributeCond;\n@@ -51,6 +53,15 @@ public enum Type {\n \n     private SearchCond rightNodeCond;\n \n+    public static SearchCond getLeafCond(final AnyTypeCond anyTypeCond) {\n+        SearchCond nodeCond = new SearchCond();\n+\n+        nodeCond.type = Type.LEAF;\n+        nodeCond.anyTypeCond = anyTypeCond;\n+\n+        return nodeCond;\n+    }\n+\n     public static SearchCond getLeafCond(final AttributeCond attributeCond) {\n         SearchCond nodeCond = new SearchCond();\n \n@@ -173,6 +184,14 @@ public static SearchCond getOrCond(final List<SearchCond> conditions) {\n         }\n     }\n \n+    public AnyTypeCond getAnyTypeCond() {\n+        return anyTypeCond;\n+    }\n+\n+    public void setAnyTypeCond(final AnyTypeCond anyTypeCond) {\n+        this.anyTypeCond = anyTypeCond;\n+    }\n+\n     public AnyCond getAnyCond() {\n         return anyCond;\n     }\n@@ -256,9 +275,10 @@ public boolean isValid() {\n         switch (type) {\n             case LEAF:\n             case NOT_LEAF:\n-                isValid = (anyCond != null || attributeCond != null\n+                isValid = (anyTypeCond != null || anyCond != null || attributeCond != null\n                         || relationshipCond != null || membershipCond != null\n                         || roleCond != null || resourceCond != null)\n+                        && (anyTypeCond == null || anyTypeCond.isValid())\n                         && (anyCond == null || anyCond.isValid())\n                         && (attributeCond == null || attributeCond.isValid())\n                         && (membershipCond == null || membershipCond.isValid())"},{"sha":"968f99062e0458e3a2af679600e8f91b50e67b62","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -33,6 +34,9 @@\n import org.apache.syncope.core.misc.security.UnauthorizedException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyTypeCond;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n@@ -43,7 +47,6 @@\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyUtilsFactory;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAADynGroupMembership;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -77,12 +80,21 @@ public boolean evaluate(final String realm) {\n     }\n \n     @Override\n-    public List<AnyObject> findByAnyType(final String anyTypeName) {\n-        TypedQuery<AnyObject> query = entityManager.createQuery(\n-                \"SELECT e FROM \" + JPAAnyObject.class.getSimpleName() + \" e WHERE e.type.name=:name\", AnyObject.class);\n-        query.setParameter(\"name\", anyTypeName);\n+    public final List<AnyObject> findAll(final String anyTypeName,\n+            final Set<String> adminRealms, final int page, final int itemsPerPage) {\n \n-        return query.getResultList();\n+        return findAll(anyTypeName, adminRealms, page, itemsPerPage, Collections.<OrderByClause>emptyList());\n+    }\n+\n+    @Override\n+    public final List<AnyObject> findAll(final String anyTypeName,\n+            final Set<String> adminRealms, final int page, final int itemsPerPage, final List<OrderByClause> orderBy) {\n+\n+        AnyTypeCond anyTypeCond = new AnyTypeCond();\n+        anyTypeCond.setAnyTypeName(anyTypeName);\n+\n+        return searchDAO.search(adminRealms, SearchCond.getLeafCond(anyTypeCond), page, itemsPerPage, orderBy,\n+                getAnyUtils().getAnyTypeKind());\n     }\n \n     @Override"},{"sha":"b8ab75da5a84f8282508553707d69bf88660e072","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -53,6 +53,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.RoleCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyTypeCond;\n import org.apache.syncope.core.persistence.api.dao.search.RelationshipCond;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -420,6 +421,10 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n \n             case LEAF:\n             case NOT_LEAF:\n+                if (nodeCond.getAnyTypeCond() != null && AnyTypeKind.ANY_OBJECT == type) {\n+                    query.append(getQuery(nodeCond.getAnyTypeCond(),\n+                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, svs));\n+                }\n                 if (nodeCond.getRelationshipCond() != null\n                         && (AnyTypeKind.USER == type || AnyTypeKind.ANY_OBJECT == type)) {\n \n@@ -470,6 +475,23 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n         return query;\n     }\n \n+    private String getQuery(final AnyTypeCond cond, final boolean not, final List<Object> parameters,\n+            final SearchSupport svs) {\n+\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+                append(svs.field().name).append(\" WHERE type_name\");\n+\n+        if (not) {\n+            query.append(\"<>\");\n+        } else {\n+            query.append('=');\n+        }\n+\n+        query.append('?').append(setParameter(parameters, cond.getAnyTypeName()));\n+\n+        return query.toString();\n+    }\n+\n     private String getQuery(final RelationshipCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n "},{"sha":"645c60cf65d76303873413ddca8c2017305a092e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyUtils.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -321,7 +321,7 @@ public IntMappingType plainIntMappingType() {\n                 break;\n \n             case ANY_OBJECT:\n-                result = IntMappingType.AnyPlainSchema;\n+                result = IntMappingType.AnyObjectPlainSchema;\n                 break;\n \n             case USER:\n@@ -344,7 +344,7 @@ public IntMappingType derIntMappingType() {\n                 break;\n \n             case ANY_OBJECT:\n-                result = IntMappingType.AnyDerivedSchema;\n+                result = IntMappingType.AnyObjectDerivedSchema;\n                 break;\n \n             case USER:\n@@ -367,7 +367,7 @@ public IntMappingType virIntMappingType() {\n                 break;\n \n             case ANY_OBJECT:\n-                result = IntMappingType.AnyVirtualSchema;\n+                result = IntMappingType.AnyObjectVirtualSchema;\n                 break;\n \n             case USER:"},{"sha":"2066f6faa33ffb06b8e9bbb403a40f4b4f3623dd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMapping.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -115,7 +115,7 @@ public boolean evaluate(final MappingItem item) {\n     protected boolean addConnObjectKeyItem(final MappingItem connObjectKeyItem) {\n         if (IntMappingType.UserVirtualSchema == connObjectKeyItem.getIntMappingType()\n                 || IntMappingType.GroupVirtualSchema == connObjectKeyItem.getIntMappingType()\n-                || IntMappingType.AnyVirtualSchema == connObjectKeyItem.getIntMappingType()\n+                || IntMappingType.AnyObjectVirtualSchema == connObjectKeyItem.getIntMappingType()\n                 || IntMappingType.Password == connObjectKeyItem.getIntMappingType()) {\n \n             throw new IllegalArgumentException(\"Virtual attributes cannot be set as ConnObjectKey\");"},{"sha":"ae9a1170c896b1bfe70858d3a918bfabce7f65c6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -143,7 +143,7 @@ public String getIntAttrName() {\n         switch (getIntMappingType()) {\n             case UserKey:\n             case GroupKey:\n-            case AnyKey:\n+            case AnyObjectKey:\n                 name = \"id\";\n                 break;\n "},{"sha":"e1499699f49fba3ce40099e63174121f21f08e5b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnyObjectTest.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyObjectTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyObjectTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyObjectTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -21,6 +21,7 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n \n import java.util.List;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -47,6 +48,15 @@ public void findAll() {\n         assertFalse(list.isEmpty());\n     }\n \n+    @Test\n+    public void findAllByType() {\n+        List<AnyObject> list = anyObjectDAO.findAll(\"PRINTER\", SyncopeConstants.FULL_ADMIN_REALMS, 1, 100);\n+        assertFalse(list.isEmpty());\n+\n+        list = anyObjectDAO.findAll(\"UNEXISTING\", SyncopeConstants.FULL_ADMIN_REALMS, 1, 100);\n+        assertTrue(list.isEmpty());\n+    }\n+\n     @Test\n     public void find() {\n         AnyObject anyObject = anyObjectDAO.find(2L);"},{"sha":"018f6328c3d1753f2e6bf9e488bb1b5a30f5baa5","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnySearchTest.java","status":"modified","additions":22,"deletions":2,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnySearchTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -30,7 +30,6 @@\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n-import org.apache.cxf.ws.addressing.v200403.Relationship;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -44,6 +43,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.RoleCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyTypeCond;\n import org.apache.syncope.core.persistence.api.dao.search.RelationshipCond;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -72,7 +72,7 @@ public class AnySearchTest extends AbstractTest {\n     public void anyObjectMatch() {\n         AnyObject anyObject = anyObjectDAO.find(1L);\n         assertNotNull(anyObject);\n-        \n+\n         RelationshipCond cond = new RelationshipCond();\n         cond.setAnyObjectKey(2L);\n         assertTrue(searchDAO.matches(anyObject, SearchCond.getLeafCond(cond), AnyTypeKind.ANY_OBJECT));\n@@ -384,6 +384,26 @@ public boolean evaluate(User user) {\n         }));\n     }\n \n+    @Test\n+    public void searchByType() {\n+        AnyTypeCond tcond = new AnyTypeCond();\n+        tcond.setAnyTypeName(\"PRINTER\");\n+\n+        SearchCond searchCondition = SearchCond.getLeafCond(tcond);\n+        assertTrue(searchCondition.isValid());\n+\n+        List<AnyObject> printers = searchDAO.search(\n+                SyncopeConstants.FULL_ADMIN_REALMS, searchCondition, AnyTypeKind.ANY_OBJECT);\n+        assertNotNull(printers);\n+        assertEquals(2, printers.size());\n+\n+        tcond.setAnyTypeName(\"UNEXISTING\");\n+        printers = searchDAO.search(\n+                SyncopeConstants.FULL_ADMIN_REALMS, searchCondition, AnyTypeKind.ANY_OBJECT);\n+        assertNotNull(printers);\n+        assertTrue(printers.isEmpty());\n+    }\n+\n     @Test\n     public void userOrderBy() {\n         AnyCond usernameLeafCond = new AnyCond(AnyCond.Type.EQ);"},{"sha":"13937cc1a16b7bc0710aeef9ef352d26f9064d24","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnyTypeTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyTypeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyTypeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnyTypeTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -57,10 +57,10 @@ public void find() {\n         assertEquals(AnyTypeKind.GROUP.name(), groupType.getKey());\n         assertFalse(groupType.getClasses().isEmpty());\n \n-        AnyType otherType = anyTypeDAO.find(\"OTHER\");\n+        AnyType otherType = anyTypeDAO.find(\"PRINTER\");\n         assertNotNull(otherType);\n         assertEquals(AnyTypeKind.ANY_OBJECT, otherType.getKind());\n-        assertEquals(\"OTHER\", otherType.getKey());\n+        assertEquals(\"PRINTER\", otherType.getKey());\n     }\n \n     @Test\n@@ -100,11 +100,11 @@ public void saveInvalidName() {\n \n     @Test\n     public void delete() {\n-        AnyType otherType = anyTypeDAO.find(\"OTHER\");\n+        AnyType otherType = anyTypeDAO.find(\"PRINTER\");\n         assertNotNull(otherType);\n \n         anyTypeDAO.delete(otherType.getKey());\n-        assertNull(anyTypeDAO.find(\"OTHER\"));\n+        assertNull(anyTypeDAO.find(\"PRINTER\"));\n     }\n \n     @Test(expected = IllegalArgumentException.class)"},{"sha":"7e86689fa8311c1f28668649b65220d284340cc6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/PlainSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainSchemaTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -47,7 +47,7 @@ public class PlainSchemaTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<PlainSchema> schemas = plainSchemaDAO.findAll();\n-        assertEquals(40, schemas.size());\n+        assertEquals(42, schemas.size());\n     }\n \n     @Test"},{"sha":"c058db781fda92ad57cebb575362e0f980506a94","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ResourceTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -82,7 +82,7 @@ public boolean evaluate(final MappingItem item) {\n     public void findAll() {\n         List<ExternalResource> resources = resourceDAO.findAll();\n         assertNotNull(resources);\n-        assertEquals(18, resources.size());\n+        assertEquals(19, resources.size());\n     }\n \n     @Test\n@@ -294,7 +294,7 @@ public void saveWithGroupMappingType() {\n         item = entityFactory.newEntity(MappingItem.class);\n         item.setIntAttrName(\"mderiveddata\");\n         item.setExtAttrName(\"mderiveddata\");\n-        item.setIntMappingType(IntMappingType.AnyDerivedSchema);\n+        item.setIntMappingType(IntMappingType.AnyObjectDerivedSchema);\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.add(item);\n "},{"sha":"a4aed30a80b564acd1e139d3413d645a8630f422","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FTaskTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -67,7 +67,7 @@ public void findAll() {\n         assertEquals(5, taskDAO.findAll(TaskType.PROPAGATION).size());\n         assertEquals(1, taskDAO.findAll(TaskType.NOTIFICATION).size());\n         assertEquals(1, taskDAO.findAll(TaskType.SCHEDULED).size());\n-        assertEquals(9, taskDAO.findAll(TaskType.SYNCHRONIZATION).size());\n+        assertEquals(10, taskDAO.findAll(TaskType.SYNCHRONIZATION).size());\n         assertEquals(11, taskDAO.findAll(TaskType.PUSH).size());\n     }\n "},{"sha":"50b4c56cc2b7c8781a6d626f3e5d48daa554ef3a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/GroupTest.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -158,7 +158,7 @@ public void udynMembership() {\n         User user = entityFactory.newEntity(User.class);\n         user.setUsername(\"username\");\n         user.setRealm(realmDAO.find(\"/even/two\"));\n-        user.add(anyTypeClassDAO.find(\"minimal other\"));\n+        user.add(anyTypeClassDAO.find(\"other\"));\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n         attr.setOwner(user);\n@@ -250,13 +250,13 @@ private List<Group> findDynGroupMemberships(final AnyObject anyObject) {\n     public void adynMembership() {\n         // 0. create any object matching the condition below\n         AnyObject anyObject = entityFactory.newEntity(AnyObject.class);\n-        anyObject.setType(anyTypeDAO.find(\"OTHER\"));\n+        anyObject.setType(anyTypeDAO.find(\"PRINTER\"));\n         anyObject.setRealm(realmDAO.find(\"/even/two\"));\n \n         APlainAttr attr = entityFactory.newEntity(APlainAttr.class);\n         attr.setOwner(anyObject);\n-        attr.setSchema(plainSchemaDAO.find(\"cool\"));\n-        attr.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT));\n+        attr.setSchema(plainSchemaDAO.find(\"model\"));\n+        attr.add(\"Canon MFC8030\", anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT));\n         anyObject.add(attr);\n \n         anyObject = anyObjectDAO.save(anyObject);\n@@ -269,7 +269,7 @@ public void adynMembership() {\n         group.setName(\"new\");\n \n         ADynGroupMembership dynMembership = entityFactory.newEntity(ADynGroupMembership.class);\n-        dynMembership.setFIQLCond(\"cool==true\");\n+        dynMembership.setFIQLCond(\"model==Canon MFC8030\");\n         dynMembership.setGroup(group);\n \n         group.setADynMembership(dynMembership);\n@@ -288,7 +288,7 @@ public void adynMembership() {\n \n         // 3. verify that expected any objects have the created group dynamically assigned\n         assertEquals(2, actual.getADynMembership().getMembers().size());\n-        assertEquals(new HashSet<>(Arrays.asList(2L, newAnyObjectKey)),\n+        assertEquals(new HashSet<>(Arrays.asList(1L, newAnyObjectKey)),\n                 CollectionUtils.collect(actual.getADynMembership().getMembers(), new Transformer<AnyObject, Long>() {\n \n                     @Override\n@@ -297,7 +297,7 @@ public Long transform(final AnyObject input) {\n                     }\n                 }, new HashSet<Long>()));\n \n-        anyObject = anyObjectDAO.find(2L);\n+        anyObject = anyObjectDAO.find(1L);\n         assertNotNull(anyObject);\n         Collection<Group> dynGroupMemberships = findDynGroupMemberships(anyObject);\n         assertEquals(1, dynGroupMemberships.size());\n@@ -310,7 +310,7 @@ public Long transform(final AnyObject input) {\n \n         actual = groupDAO.find(actual.getKey());\n         assertEquals(1, actual.getADynMembership().getMembers().size());\n-        assertEquals(2L, actual.getADynMembership().getMembers().get(0).getKey(), 0);\n+        assertEquals(1L, actual.getADynMembership().getMembers().get(0).getKey(), 0);\n \n         // 5. delete group and verify that dynamic membership was also removed\n         Long dynMembershipKey = actual.getADynMembership().getKey();"},{"sha":"7d363c26bc46f762560174e5219181eb0af0fa59","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/PlainSchemaTest.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainSchemaTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -79,7 +79,9 @@ public void deleteFullname() {\n         // check for associated mappings\n         Set<MappingItem> mapItems = new HashSet<>();\n         for (ExternalResource resource : resourceDAO.findAll()) {\n-            if (resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+            if (resource.getProvision(anyTypeDAO.findUser()) != null\n+                    && resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+\n                 for (MappingItem mapItem : resource.getProvision(anyTypeDAO.findUser()).getMapping().getItems()) {\n                     if (schema.getKey().equals(mapItem.getIntAttrName())) {\n                         mapItems.add(mapItem);\n@@ -103,7 +105,9 @@ public void deleteFullname() {\n         // check for mappings deletion\n         mapItems = new HashSet<>();\n         for (ExternalResource resource : resourceDAO.findAll()) {\n-            if (resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+            if (resource.getProvision(anyTypeDAO.findUser()) != null\n+                    && resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+\n                 for (MappingItem mapItem : resource.getProvision(anyTypeDAO.findUser()).getMapping().getItems()) {\n                     if (\"fullname\".equals(mapItem.getIntAttrName())) {\n                         mapItems.add(mapItem);\n@@ -128,7 +132,9 @@ public void deleteSurname() {\n         // check for associated mappings\n         Set<MappingItem> mappings = new HashSet<>();\n         for (ExternalResource resource : resourceDAO.findAll()) {\n-            if (resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+            if (resource.getProvision(anyTypeDAO.findUser()) != null\n+                    && resource.getProvision(anyTypeDAO.findUser()).getMapping() != null) {\n+\n                 for (MappingItem mapItem : resource.getProvision(anyTypeDAO.findUser()).getMapping().getItems()) {\n                     if (schema.getKey().equals(mapItem.getIntAttrName())) {\n                         mappings.add(mapItem);"},{"sha":"5fdc80381196333422485291c76078f12d49e253","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -88,7 +88,7 @@ public void dynMembership() {\n         User user = entityFactory.newEntity(User.class);\n         user.setUsername(\"username\");\n         user.setRealm(realmDAO.find(\"/even/two\"));\n-        user.add(anyTypeClassDAO.find(\"minimal other\"));\n+        user.add(anyTypeClassDAO.find(\"other\"));\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n         attr.setOwner(user);"},{"sha":"7b11faaf9321e738721ae3ba6b2443bf0930d64c","filename":"core/persistence-jpa/src/test/resources/content.xml","status":"modified","additions":56,"deletions":14,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -124,9 +124,9 @@ under the License.\n   <AnyTypeClass name=\"minimal group\"/>\n   <AnyType_AnyTypeClass anyType_name=\"GROUP\" anyTypeClass_name=\"minimal group\"/>\n   \n-  <AnyType name=\"OTHER\" kind=\"ANY_OBJECT\"/>\n-  <AnyTypeClass name=\"minimal other\"/>\n-  <AnyType_AnyTypeClass anyType_name=\"OTHER\" anyTypeClass_name=\"minimal other\"/>\n+  <AnyType name=\"PRINTER\" kind=\"ANY_OBJECT\"/>\n+  <AnyTypeClass name=\"minimal printer\"/>\n+  <AnyType_AnyTypeClass anyType_name=\"PRINTER\" anyTypeClass_name=\"minimal printer\"/>\n       \n   <AnyTypeClass name=\"csv\"/>\n \n@@ -135,10 +135,10 @@ under the License.\n   <Realm id=\"3\" name=\"even\" parent_id=\"1\"/>\n   <Realm id=\"4\" name=\"two\" parent_id=\"3\" accountPolicy_id=\"5\" passwordPolicy_id=\"2\"/>\n   \n-  <AnyObject id=\"1\" realm_id=\"1\" type_name=\"OTHER\"\n+  <AnyObject id=\"1\" realm_id=\"1\" type_name=\"PRINTER\"\n              creator=\"admin\" lastModifier=\"admin\" \n              creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <AnyObject id=\"2\" realm_id=\"1\" type_name=\"OTHER\"\n+  <AnyObject id=\"2\" realm_id=\"1\" type_name=\"PRINTER\"\n              creator=\"admin\" lastModifier=\"admin\" \n              creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n@@ -286,7 +286,7 @@ under the License.\n                conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n   <PlainSchema name=\"uselessReadonly\" type=\"String\" anyTypeClass_name=\"other\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"1\"/>\n-  <PlainSchema name=\"cool\" type=\"Boolean\" anyTypeClass_name=\"minimal other\" \n+  <PlainSchema name=\"cool\" type=\"Boolean\" anyTypeClass_name=\"other\" \n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <PlainSchema name=\"gender\" type=\"Enum\" anyTypeClass_name=\"other\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n@@ -347,9 +347,21 @@ under the License.\n \n   <VirSchema name=\"mvirtualdata\"/>\n         \n-  <APlainAttr id=\"1\" owner_id=\"2\" schema_name=\"cool\"/>\n-  <APlainAttrValue id=\"1\" attribute_id=\"1\" booleanValue=\"1\"/>\n-  \n+  <PlainSchema name=\"model\" type=\"String\" anyTypeClass_name=\"minimal printer\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <PlainSchema name=\"location\" type=\"String\" anyTypeClass_name=\"minimal printer\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+    \n+  <APlainAttr id=\"1\" owner_id=\"1\" schema_name=\"model\"/>\n+  <APlainAttrValue id=\"1\" attribute_id=\"1\" stringValue=\"Canon MFC8030\"/>\n+  <APlainAttr id=\"2\" owner_id=\"1\" schema_name=\"location\"/>\n+  <APlainAttrValue id=\"2\" attribute_id=\"2\" stringValue=\"1st floor\"/>\n+    \n+  <APlainAttr id=\"3\" owner_id=\"2\" schema_name=\"model\"/>\n+  <APlainAttrValue id=\"3\" attribute_id=\"3\" stringValue=\"HP Laserjet 1300n\"/>\n+  <APlainAttr id=\"4\" owner_id=\"2\" schema_name=\"location\"/>\n+  <APlainAttrValue id=\"4\" attribute_id=\"4\" stringValue=\"2nd floor\"/>\n+\n   <UPlainAttr id=\"99\" owner_id=\"1\" schema_name=\"type\"/>\n   <UPlainAttrValue id=\"9\" attribute_id=\"99\" stringValue=\"G\"/>\n   <UPlainAttr id=\"100\" owner_id=\"1\" schema_name=\"fullname\"/>\n@@ -473,7 +485,7 @@ under the License.\n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 bundleName=\"net.tirasa.connid.bundles.db.table\"\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\"\n-                version=\"${connid.db.table.version}\"\n+                version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"AUTHENTICATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_CREATE\"/>\n@@ -536,7 +548,7 @@ under the License.\n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 bundleName=\"net.tirasa.connid.bundles.db.table\"\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\"\n-                version=\"${connid.db.table.version}\"\n+                version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.Boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test2\"]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_UPDATE\"/>\n@@ -546,7 +558,7 @@ under the License.\n   <ConnInstance id=\"107\" bundleName=\"net.tirasa.connid.bundles.db.table\" \n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\" \n-                displayName=\"H2-testsync\" version=\"${connid.db.table.version}\"\n+                displayName=\"H2-testsync\" version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"changeLogColumn\",\"displayName\":\"Change Log Column (Sync)\",\"helpMessage\":\"=&lt;b&gt;Change Log Column&lt;/b&gt;&lt;br&gt;The change log column store the latest change time. Providing this value the Sync capabilities are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"nativeTimestamps\",\"displayName\":\"Native Timestamps \",\"helpMessage\":\"&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":\"Password cipher algorithm (defaults to CLEARTEXT)\",\"helpMessage\":\"Cipher algorithm used to encode password before to store it onto the database table.\\nSpecify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":\"Enabled Status Value\",\"helpMessage\":\"&lt;b&gt;Enabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for enabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":\"Retrieve password\",\"helpMessage\":\"Specify if password must be retrieved by default.\",\"type\":\"boolean\",\"required\":true,\"order\":27,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"datasource\",\"displayName\":\"Datasource Path\",\"helpMessage\":\"&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"allNative\",\"displayName\":\"All native\",\"helpMessage\":\"&lt;b&gt;All native&lt;/b&gt;&lt;br&gt;Select to retrieve all data type of the columns in a native format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":\"User\",\"helpMessage\":\"&lt;b&gt;User&lt;/b&gt;&lt;br&gt;Enter the name of the mandatory Database user with permission to account table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"pwdEncodeToLowerCase\",\"displayName\":\"Force password encoding to lower case\",\"helpMessage\":\"Force password encoding to lower case.\",\"type\":\"boolean\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":\"JDBC Connection URL\",\"helpMessage\":\"&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver Connection URL.&lt;br&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":\"Key Column\",\"helpMessage\":\"&lt;b&gt;Key Column&lt;/b&gt;&lt;br&gt;This mandatory column value will be used as the unique identifier for rows in the table.&lt;br&gt;\",\"type\":\"java.lang.String\",\"required\":true,\"order\":8,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"validConnectionQuery\",\"displayName\":\"Validate Connection Query\",\"helpMessage\":\"&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"rethrowAllSQLExceptions\",\"displayName\":\"Rethrow all SQLExceptions\",\"helpMessage\":\"If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":\"Password Column\",\"helpMessage\":\"&lt;b&gt;Password Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jndiProperties\",\"displayName\":\"Initial JNDI Properties\",\"helpMessage\":\"&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"password\",\"displayName\":\"User Password\",\"helpMessage\":\"&lt;b&gt;User Password&lt;/b&gt;&lt;br&gt;Enter a user account that has permission to access accounts table.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":5,\"confidential\":true,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"&lt;b&gt;Host&lt;/b&gt;&lt;br&gt;Enter the name of the host where the database is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"port\",\"displayName\":\"Port\",\"helpMessage\":\"&lt;b&gt;TCP Port&lt;/b&gt;&lt;br&gt;Enter the port number the database server is listening on.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"Status Column\",\"helpMessage\":\"&lt;b&gt;Status Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"pwdEncodeToUpperCase\",\"displayName\":\"Force password encoding to upper case\",\"helpMessage\":\"Force password encoding to upper case.\",\"type\":\"boolean\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"enableEmptyString\",\"displayName\":\"Enable writing empty string\",\"helpMessage\":\"&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"database\",\"displayName\":\"Database\",\"helpMessage\":\"&lt;b&gt;Database&lt;/b&gt;&lt;br&gt;Enter the name of the database on the database server that contains the table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":6,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":\"Default Status Value\",\"helpMessage\":\"&lt;b&gt;Default Status Value&lt;/b&gt;&lt;br&gt;Enter the value for status in case of status not specified.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"table\",\"displayName\":\"Table\",\"helpMessage\":\"&lt;b&gt;Table&lt;/b&gt;&lt;br&gt;Enter the name of the table in the database that contains the accounts.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"testsync\"]},{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":\"Disabled Status Value\",\"helpMessage\":\"&lt;b&gt;Disabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for disabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":\"JDBC Driver\",\"helpMessage\":\"&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"quoting\",\"displayName\":\"Name Quoting\",\"helpMessage\":\"&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":1,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"cipherKey\",\"displayName\":\"Password cipher key\",\"helpMessage\":\"Specify key in case of reversible algorithm.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_CREATE\"/>\n@@ -556,6 +568,17 @@ under the License.\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"SEARCH\"/>\n   \n+  <ConnInstance id=\"108\" bundleName=\"net.tirasa.connid.bundles.db.scriptedsql\" \n+                location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n+                connectorName=\"net.tirasa.connid.bundles.db.scriptedsql.ScriptedSQLConnector\"\n+                displayName=\"Scripted SQL\" version=\"${connid.database.version}\"\n+                jsonConf='[{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScriptFileName&quot;,&quot;displayName&quot;:&quot;updateScriptFileName&quot;,&quot;helpMessage&quot;:&quot;updateScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/UpdateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScript&quot;,&quot;displayName&quot;:&quot;testScript&quot;,&quot;helpMessage&quot;:&quot;testScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;host&quot;,&quot;displayName&quot;:&quot;Host&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Host&lt;/b&gt;&lt;br/&gt;Enter the name of the host where the database is running.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:2,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;localhost&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;port&quot;,&quot;displayName&quot;:&quot;Port&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;TCP Port&lt;/b&gt;&lt;br/&gt;Enter the port number the database server is listening on.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:3,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;3306&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;database&quot;,&quot;displayName&quot;:&quot;Database&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Database&lt;/b&gt;&lt;br/&gt;Enter the name of the database on the database server that contains the table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:6,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScript&quot;,&quot;displayName&quot;:&quot;createScript&quot;,&quot;helpMessage&quot;:&quot;createScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcUrlTemplate&quot;,&quot;displayName&quot;:&quot;JDBC Connection URL&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver Connection URL.&lt;br/&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br/&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:11,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;jdbc:mysql://%h:%p/%d&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.url}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jndiProperties&quot;,&quot;displayName&quot;:&quot;Initial JNDI Properties&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br/&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.&quot;,&quot;type&quot;:&quot;[Ljava.lang.String;&quot;,&quot;required&quot;:false,&quot;order&quot;:21,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;enableEmptyString&quot;,&quot;displayName&quot;:&quot;Enable writing empty string&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br/&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:12,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;allNative&quot;,&quot;displayName&quot;:&quot;All native&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;All native&lt;/b&gt;&lt;br/&gt;Select to retrieve all data type of the columns in a native format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:16,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;password&quot;,&quot;displayName&quot;:&quot;User Password&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User Password&lt;/b&gt;&lt;br/&gt;Enter a user account that has permission to access accounts table.&quot;,&quot;type&quot;:&quot;org.identityconnectors.common.security.GuardedString&quot;,&quot;required&quot;:false,&quot;order&quot;:5,&quot;confidential&quot;:true,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.password}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;validConnectionQuery&quot;,&quot;displayName&quot;:&quot;Validate Connection Query&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br/&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:17,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;reloadScriptOnExecution&quot;,&quot;displayName&quot;:&quot;reloadScriptOnExecution&quot;,&quot;helpMessage&quot;:&quot;reloadScriptOnExecution&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;true&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;schemaScriptFileName&quot;,&quot;displayName&quot;:&quot;schemaScriptFileName&quot;,&quot;helpMessage&quot;:&quot;schemaScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/SchemaScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcDriver&quot;,&quot;displayName&quot;:&quot;JDBC Driver&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:10,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;com.mysql.jdbc.Driver&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.driver}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScriptFileName&quot;,&quot;displayName&quot;:&quot;testScriptFileName&quot;,&quot;helpMessage&quot;:&quot;testScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/TestScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;quoting&quot;,&quot;displayName&quot;:&quot;Name Quoting&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br/&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:-1,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScriptFileName&quot;,&quot;displayName&quot;:&quot;createScriptFileName&quot;,&quot;helpMessage&quot;:&quot;createScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/CreateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;clearTextPasswordToScript&quot;,&quot;displayName&quot;:&quot;clearTextPasswordToScript&quot;,&quot;helpMessage&quot;:&quot;clearTextPasswordToScript&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;nativeTimestamps&quot;,&quot;displayName&quot;:&quot;Native Timestamps&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br/&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:15,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScript&quot;,&quot;displayName&quot;:&quot;syncScript&quot;,&quot;helpMessage&quot;:&quot;syncScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;autoCommit&quot;,&quot;displayName&quot;:&quot;autoCommit&quot;,&quot;helpMessage&quot;:&quot;autoCommit&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;scriptingLanguage&quot;,&quot;displayName&quot;:&quot;scriptingLanguage&quot;,&quot;helpMessage&quot;:&quot;scriptingLanguage&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;GROOVY&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;GROOVY&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;datasource&quot;,&quot;displayName&quot;:&quot;Datasource Path&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br/&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br/&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:20,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScript&quot;,&quot;displayName&quot;:&quot;deleteScript&quot;,&quot;helpMessage&quot;:&quot;deleteScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;rethrowAllSQLExceptions&quot;,&quot;displayName&quot;:&quot;Rethrow all SQLExceptions&quot;,&quot;helpMessage&quot;:&quot;If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:14,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScriptFileName&quot;,&quot;displayName&quot;:&quot;syncScriptFileName&quot;,&quot;helpMessage&quot;:&quot;syncScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/SyncScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScript&quot;,&quot;displayName&quot;:&quot;updateScript&quot;,&quot;helpMessage&quot;:&quot;updateScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;user&quot;,&quot;displayName&quot;:&quot;User&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User&lt;/b&gt;&lt;br/&gt;Enter the name of the mandatory Database user with permission to account table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:4,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.username}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScriptFileName&quot;,&quot;displayName&quot;:&quot;deleteScriptFileName&quot;,&quot;helpMessage&quot;:&quot;deleteScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/DeleteScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScriptFileName&quot;,&quot;displayName&quot;:&quot;searchScriptFileName&quot;,&quot;helpMessage&quot;:&quot;searchScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${basedir}/src/main/resources/scriptedsql/SearchScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScript&quot;,&quot;displayName&quot;:&quot;searchScript&quot;,&quot;helpMessage&quot;:&quot;searchScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]}]'/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SEARCH\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SYNC\"/>\n+  \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n@@ -657,6 +680,13 @@ under the License.\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n+  <ExternalResource name=\"resource-db-scripted\" connector_id=\"108\"\n+                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n+                    enforceMandatoryCondition=\"0\"\n+                    propagationMode=\"ONE_PHASE\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    creator=\"admin\" lastModifier=\"admin\" \n+                    creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n+\n   <!-- Use resource-testdb for passthrough authentication (SYNCOPE-164) -->\n   <Policy_ExternalResource accountPolicy_id=\"5\" resource_name=\"resource-testdb\"/>\n     \n@@ -817,7 +847,7 @@ under the License.\n                intAttrName=\"rderToBePropagated\" intMappingType=\"GroupDerivedSchema\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"209\" extAttrName=\"membership\" mapping_id=\"9\"\n-               intAttrName=\"mderToBePropagated\" intMappingType=\"AnyDerivedSchema\" mandatoryCondition=\"false\"\n+               intAttrName=\"mderToBePropagated\" intMappingType=\"AnyObjectDerivedSchema\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n                          \n   <Provision id=\"10\" resource_name=\"ws-target-resource-update-resetsynctoken\" anyType_name=\"USER\" objectClass=\"__ACCOUNT__\"\n@@ -924,7 +954,16 @@ under the License.\n   <MappingItem id=\"334\" mapping_id=\"19\" extAttrName=\"userId\" \n                intMappingType=\"Username\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n-  \n+\n+  <Provision id=\"21\" resource_name=\"resource-db-scripted\" anyType_name=\"PRINTER\" objectClass=\"__PRINTER__\"/>\n+  <Mapping id=\"21\" provision_id=\"21\"/>\n+  <MappingItem id=\"405\" mapping_id=\"21\" extAttrName=\"id\" \n+               intMappingType=\"AnyObjectKey\" mandatoryCondition=\"true\"\n+               connObjectKey=\"1\" password=\"0\" purpose=\"BOTH\"/>\n+  <MappingItem id=\"406\" mapping_id=\"21\" extAttrName=\"location\" \n+               intAttrName=\"location\" intMappingType=\"AnyObjectPlainSchema\"\n+               mandatoryCondition=\"false\" connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n+    \n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n@@ -1055,6 +1094,9 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n+  <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"0\" fullReconciliation=\"0\"\n+        jobClassName=\"org.apache.syncope.core.provisioning.api.job.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n \n   <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n                 sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" "},{"sha":"e23143aa7b792f6f308058db014daa47deb4dfa7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":17,"deletions":18,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -67,9 +67,6 @@\n \n public class ConnectorFacadeProxy implements Connector {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(ConnectorFacadeProxy.class);\n \n     /**\n@@ -138,7 +135,7 @@ public Uid authenticate(final String username, final String password, final Oper\n         Uid result = null;\n \n         if (activeConnInstance.getCapabilities().contains(ConnectorCapability.AUTHENTICATE)) {\n-            final Future<Uid> future = asyncFacade.authenticate(\n+            Future<Uid> future = asyncFacade.authenticate(\n                     connector, username, new GuardedString(password.toCharArray()), options);\n             try {\n                 result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n@@ -173,7 +170,7 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n \n             propagationAttempted.add(\"create\");\n \n-            final Future<Uid> future = asyncFacade.create(connector, objectClass, attrs, options);\n+            Future<Uid> future = asyncFacade.create(connector, objectClass, attrs, options);\n             try {\n                 result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n             } catch (java.util.concurrent.TimeoutException e) {\n@@ -207,7 +204,7 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n \n             propagationAttempted.add(\"update\");\n \n-            final Future<Uid> future = asyncFacade.update(connector, objectClass, uid, attrs, options);\n+            Future<Uid> future = asyncFacade.update(connector, objectClass, uid, attrs, options);\n \n             try {\n                 result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n@@ -241,7 +238,7 @@ public void delete(final PropagationMode propagationMode, final ObjectClass obje\n \n             propagationAttempted.add(\"delete\");\n \n-            final Future<Uid> future = asyncFacade.delete(connector, objectClass, uid, options);\n+            Future<Uid> future = asyncFacade.delete(connector, objectClass, uid, options);\n \n             try {\n                 future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n@@ -279,7 +276,7 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n         SyncToken result = null;\n \n         if (activeConnInstance.getCapabilities().contains(ConnectorCapability.SYNC)) {\n-            final Future<SyncToken> future = asyncFacade.getLatestSyncToken(connector, objectClass);\n+            Future<SyncToken> future = asyncFacade.getLatestSyncToken(connector, objectClass);\n \n             try {\n                 result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n@@ -350,7 +347,9 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n         try {\n             return future == null ? null : future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n-            future.cancel(true);\n+            if (future != null) {\n+                future.cancel(true);\n+            }\n             throw new TimeoutException(\"Request timeout\");\n         } catch (Exception e) {\n             LOG.error(\"Connector request execution failure\", e);\n@@ -363,8 +362,8 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n     }\n \n     @Override\n-    public List<ConnectorObject> search(final ObjectClass objectClass, final Filter filter,\n-            final OperationOptions options) {\n+    public List<ConnectorObject> search(\n+            final ObjectClass objectClass, final Filter filter, final OperationOptions options) {\n \n         final List<ConnectorObject> result = new ArrayList<>();\n \n@@ -401,8 +400,8 @@ public boolean handle(final ConnectorObject obj) {\n     public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid, final OperationOptions options,\n             final String attributeName) {\n \n-        final Future<Attribute> future = asyncFacade.getObjectAttribute(connector, objectClass, uid, options,\n-                attributeName);\n+        Future<Attribute> future = asyncFacade.getObjectAttribute(\n+                connector, objectClass, uid, options, attributeName);\n         try {\n             return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n@@ -422,7 +421,7 @@ public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid\n     public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final Uid uid,\n             final OperationOptions options) {\n \n-        final Future<Set<Attribute>> future = asyncFacade.getObjectAttributes(connector, objectClass, uid, options);\n+        Future<Set<Attribute>> future = asyncFacade.getObjectAttributes(connector, objectClass, uid, options);\n         try {\n             return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n@@ -440,7 +439,7 @@ public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final U\n \n     @Override\n     public Set<String> getSchemaNames(final boolean includeSpecial) {\n-        final Future<Set<String>> future = asyncFacade.getSchemaNames(connector, includeSpecial);\n+        Future<Set<String>> future = asyncFacade.getSchemaNames(connector, includeSpecial);\n         try {\n             return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n@@ -458,7 +457,7 @@ public Set<String> getSchemaNames(final boolean includeSpecial) {\n \n     @Override\n     public Set<ObjectClass> getSupportedObjectClasses() {\n-        final Future<Set<ObjectClass>> future = asyncFacade.getSupportedObjectClasses(connector);\n+        Future<Set<ObjectClass>> future = asyncFacade.getSupportedObjectClasses(connector);\n         try {\n             return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n@@ -476,7 +475,7 @@ public Set<ObjectClass> getSupportedObjectClasses() {\n \n     @Override\n     public void validate() {\n-        final Future<String> future = asyncFacade.test(connector);\n+        Future<String> future = asyncFacade.test(connector);\n         try {\n             future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n@@ -494,7 +493,7 @@ public void validate() {\n \n     @Override\n     public void test() {\n-        final Future<String> future = asyncFacade.test(connector);\n+        Future<String> future = asyncFacade.test(connector);\n         try {\n             future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {"},{"sha":"b43e9113899bced463e7c47fd491fe8a0415ffdb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -282,7 +282,7 @@ public void retrieveVirAttrValues(final Any<?, ?, ?> any) {\n                 ? IntMappingType.UserVirtualSchema\n                 : any.getType().getKind() == AnyTypeKind.GROUP\n                         ? IntMappingType.GroupVirtualSchema\n-                        : IntMappingType.AnyVirtualSchema;\n+                        : IntMappingType.AnyObjectVirtualSchema;\n \n         Map<String, ConnectorObject> resources = new HashMap<>();\n "},{"sha":"92a9bd385afc2e1230a499e268e1241247af6c69","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -93,7 +93,7 @@ abstract class AbstractAnyDataBinder {\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractAnyDataBinder.class);\n \n     private static final IntMappingType[] FOR_MANDATORY = new IntMappingType[] {\n-        IntMappingType.AnyPlainSchema, IntMappingType.AnyDerivedSchema,\n+        IntMappingType.AnyObjectPlainSchema, IntMappingType.AnyObjectDerivedSchema,\n         IntMappingType.UserPlainSchema, IntMappingType.UserDerivedSchema,\n         IntMappingType.GroupPlainSchema, IntMappingType.GroupDerivedSchema };\n "},{"sha":"237792bc47f8311b87086ab72b456a26467598fc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -33,14 +33,18 @@\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.misc.spring.BeanUtils;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -53,6 +57,9 @@ public class AnyObjectDataBinderImpl extends AbstractAnyDataBinder implements An\n         \"plainAttrs\", \"derAttrs\", \"virAttrs\", \"resources\"\n     };\n \n+    @Autowired\n+    private AnyTypeDAO anyTypeDAO;\n+\n     @Transactional(readOnly = true)\n     @Override\n     public AnyObjectTO getAnyObjectTO(final Long key) {\n@@ -62,6 +69,7 @@ public AnyObjectTO getAnyObjectTO(final Long key) {\n     @Override\n     public AnyObjectTO getAnyObjectTO(final AnyObject anyObject) {\n         AnyObjectTO anyObjectTO = new AnyObjectTO();\n+        anyObjectTO.setType(anyObject.getType().getKey());\n \n         BeanUtils.copyProperties(anyObject, anyObjectTO, IGNORE_PROPERTIES);\n \n@@ -103,6 +111,14 @@ public Long transform(final Group group) {\n \n     @Override\n     public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n+        AnyType type = anyTypeDAO.find(anyObjectTO.getType());\n+        if (type == null) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n+            sce.getElements().add(anyObjectTO.getType());\n+            throw sce;\n+        }\n+        anyObject.setType(type);\n+\n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         // relationships"},{"sha":"a73f5b98265196a18d2157c1271c17fb1659d6a8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -70,6 +70,7 @@ public class PropagationManagerImpl implements PropagationManager {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(PropagationManager.class);\n \n+    @Autowired\n     protected AnyObjectDAO anyObjectDAO;\n \n     /**"},{"sha":"c52c3cfff4acd6f7686bba432a4366c56fa4bd5e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncJobImpl.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -29,14 +29,12 @@\n import org.apache.syncope.core.provisioning.api.sync.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.sync.SyncActions;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.job.SyncJob;\n import org.apache.syncope.core.provisioning.api.sync.AnyObjectSyncResultHandler;\n import org.apache.syncope.core.provisioning.api.sync.GroupSyncResultHandler;\n import org.apache.syncope.core.provisioning.api.sync.UserSyncResultHandler;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n-import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.quartz.JobExecutionException;\n@@ -133,8 +131,8 @@ protected String executeWithSecurityContext(\n             }\n         }\n \n-        try {\n-            for (Provision provision : syncTask.getResource().getProvisions()) {\n+        for (Provision provision : syncTask.getResource().getProvisions()) {\n+            if (provision.getMapping() != null) {\n                 SyncResultsHandler handler;\n                 switch (provision.getAnyType().getKind()) {\n                     case USER:\n@@ -150,37 +148,32 @@ protected String executeWithSecurityContext(\n                         handler = ahandler;\n                 }\n \n-                SyncToken latestSyncToken = null;\n-                if (provision.getMapping() != null && !syncTask.isFullReconciliation()) {\n-                    latestSyncToken = connector.getLatestSyncToken(ObjectClass.ACCOUNT);\n-                }\n+                try {\n+                    SyncToken latestSyncToken = null;\n+                    if (!syncTask.isFullReconciliation()) {\n+                        latestSyncToken = connector.getLatestSyncToken(provision.getObjectClass());\n+                    }\n \n-                if (syncTask.isFullReconciliation()) {\n-                    if (provision.getMapping() != null) {\n+                    if (syncTask.isFullReconciliation()) {\n                         connector.getAllObjects(provision.getObjectClass(), handler,\n                                 connector.getOperationOptions(provision.getMapping().getItems()));\n-                    }\n-                } else {\n-                    if (provision.getMapping() != null) {\n+                    } else {\n                         connector.sync(provision.getObjectClass(), provision.getSyncToken(), handler,\n                                 connector.getOperationOptions(provision.getMapping().getItems()));\n                     }\n-                }\n \n-                if (!dryRun && !syncTask.isFullReconciliation()) {\n-                    try {\n-                        ExternalResource resource = resourceDAO.find(syncTask.getResource().getKey());\n-                        if (provision.getMapping() != null) {\n+                    if (!dryRun && !syncTask.isFullReconciliation()) {\n+                        try {\n                             provision.setSyncToken(latestSyncToken);\n+                            resourceDAO.save(provision.getResource());\n+                        } catch (Exception e) {\n+                            throw new JobExecutionException(\"While updating SyncToken\", e);\n                         }\n-                        resourceDAO.save(resource);\n-                    } catch (Exception e) {\n-                        throw new JobExecutionException(\"While updating SyncToken\", e);\n                     }\n+                } catch (Throwable t) {\n+                    throw new JobExecutionException(\"While syncing on connector\", t);\n                 }\n             }\n-        } catch (Throwable t) {\n-            throw new JobExecutionException(\"While syncing on connector\", t);\n         }\n \n         try {"},{"sha":"c3d11a93843f507d5854393c1470eadbbc2a2e6a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -167,7 +167,7 @@ private List<Long> findByConnObjectKeyItem(\n         switch (connObjectKeyItem.getIntMappingType()) {\n             case UserPlainSchema:\n             case GroupPlainSchema:\n-            case AnyPlainSchema:\n+            case AnyObjectPlainSchema:\n                 PlainAttrValue value = anyUtils.newPlainAttrValue();\n \n                 PlainSchema schema = plainSchemaDAO.find(connObjectKeyItem.getIntAttrName());\n@@ -191,7 +191,7 @@ private List<Long> findByConnObjectKeyItem(\n \n             case UserDerivedSchema:\n             case GroupDerivedSchema:\n-            case AnyDerivedSchema:\n+            case AnyObjectDerivedSchema:\n                 anys = getAnyDAO(connObjectKeyItem).findByDerAttrValue(connObjectKeyItem.getIntAttrName(), uid);\n                 for (Any<?, ?, ?> any : anys) {\n                     result.add(any.getKey());\n@@ -200,7 +200,7 @@ private List<Long> findByConnObjectKeyItem(\n \n             case UserKey:\n             case GroupKey:\n-            case AnyKey:\n+            case AnyObjectKey:\n                 Any<?, ?, ?> any = getAnyDAO(connObjectKeyItem).find(Long.parseLong(uid));\n                 if (any != null) {\n                     result.add(any.getKey());"},{"sha":"7cf4a08711a2506f39711e4359f7ea79272fcd2a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"added","additions":290,"deletions":0,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,290 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import static org.apache.syncope.core.rest.cxf.service.AbstractServiceImpl.LOG;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.mod.AnyMod;\n+import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n+import org.apache.syncope.common.lib.mod.StatusMod;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.lib.wrap.ResourceKey;\n+import org.apache.syncope.common.rest.api.CollectionWrapper;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n+import org.apache.syncope.common.rest.api.service.AnyService;\n+import org.apache.syncope.core.logic.AbstractAnyLogic;\n+import org.apache.syncope.core.logic.UserLogic;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+\n+public abstract class AbstractAnyService<TO extends AnyTO, MOD extends AnyMod>\n+        extends AbstractServiceImpl\n+        implements AnyService<TO, MOD> {\n+\n+    protected abstract AbstractAnyLogic<TO, MOD> getAnyLogic();\n+\n+    @Override\n+    public TO read(final Long key) {\n+        return getAnyLogic().read(key);\n+    }\n+\n+    @Override\n+    public PagedResult<TO> list(final AnyListQuery listQuery) {\n+        CollectionUtils.transform(listQuery.getRealms(), new Transformer<String, String>() {\n+\n+            @Override\n+            public String transform(final String input) {\n+                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n+            }\n+        });\n+\n+        return buildPagedResult(\n+                getAnyLogic().list(\n+                        listQuery.getPage(),\n+                        listQuery.getSize(),\n+                        getOrderByClauses(listQuery.getOrderBy()),\n+                        listQuery.getRealms()),\n+                listQuery.getPage(),\n+                listQuery.getSize(),\n+                getAnyLogic().count(listQuery.getRealms()));\n+    }\n+\n+    @Override\n+    public PagedResult<TO> search(final AnySearchQuery searchQuery) {\n+        CollectionUtils.transform(searchQuery.getRealms(), new Transformer<String, String>() {\n+\n+            @Override\n+            public String transform(final String input) {\n+                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n+            }\n+        });\n+\n+        SearchCond cond = getSearchCond(searchQuery.getFiql());\n+        return buildPagedResult(\n+                getAnyLogic().search(\n+                        cond,\n+                        searchQuery.getPage(),\n+                        searchQuery.getSize(),\n+                        getOrderByClauses(searchQuery.getOrderBy()),\n+                        searchQuery.getRealms()),\n+                searchQuery.getPage(),\n+                searchQuery.getSize(),\n+                getAnyLogic().searchCount(cond, searchQuery.getRealms()));\n+    }\n+\n+    @Override\n+    public Response create(final TO anyTO) {\n+        TO created = getAnyLogic().create(anyTO);\n+        return createResponse(created.getKey(), created);\n+    }\n+\n+    @Override\n+    public Response update(final Long key, final MOD anyMod) {\n+        TO any = getAnyLogic().read(key);\n+\n+        checkETag(any.getETagValue());\n+\n+        anyMod.setKey(key);\n+        TO updated = getAnyLogic().update(anyMod);\n+        return modificationResponse(updated);\n+    }\n+\n+    @Override\n+    public Response delete(final Long key) {\n+        TO group = getAnyLogic().read(key);\n+\n+        checkETag(group.getETagValue());\n+\n+        TO deleted = getAnyLogic().delete(key);\n+        return modificationResponse(deleted);\n+    }\n+\n+    @Override\n+    public Response bulkDeassociation(\n+            final Long key, final ResourceDeassociationActionType type, final List<ResourceKey> resourceNames) {\n+\n+        TO any = getAnyLogic().read(key);\n+\n+        checkETag(any.getETagValue());\n+\n+        TO updated;\n+        switch (type) {\n+            case UNLINK:\n+                updated = getAnyLogic().unlink(key, CollectionWrapper.unwrap(resourceNames));\n+                break;\n+\n+            case UNASSIGN:\n+                updated = getAnyLogic().unassign(key, CollectionWrapper.unwrap(resourceNames));\n+                break;\n+\n+            case DEPROVISION:\n+                updated = getAnyLogic().deprovision(key, CollectionWrapper.unwrap(resourceNames));\n+                break;\n+\n+            default:\n+                updated = getAnyLogic().read(key);\n+        }\n+\n+        BulkActionResult result = new BulkActionResult();\n+\n+        if (type == ResourceDeassociationActionType.UNLINK) {\n+            for (ResourceKey resourceName : resourceNames) {\n+                result.getResults().put(resourceName.getElement(),\n+                        updated.getResources().contains(resourceName.getElement())\n+                                ? BulkActionResult.Status.FAILURE\n+                                : BulkActionResult.Status.SUCCESS);\n+            }\n+        } else {\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                result.getResults().put(propagationStatusTO.getResource(),\n+                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n+            }\n+        }\n+\n+        return modificationResponse(result);\n+    }\n+\n+    @Override\n+    public Response bulkAssociation(\n+            final Long key, final ResourceAssociationActionType type, final ResourceAssociationMod associationMod) {\n+\n+        TO any = getAnyLogic().read(key);\n+\n+        checkETag(any.getETagValue());\n+\n+        TO updated;\n+        switch (type) {\n+            case LINK:\n+                updated = getAnyLogic().link(\n+                        key,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()));\n+                break;\n+\n+            case ASSIGN:\n+                updated = getAnyLogic().assign(\n+                        key,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                        associationMod.isChangePwd(),\n+                        associationMod.getPassword());\n+                break;\n+\n+            case PROVISION:\n+                updated = getAnyLogic().provision(\n+                        key,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                        associationMod.isChangePwd(),\n+                        associationMod.getPassword());\n+                break;\n+\n+            default:\n+                updated = getAnyLogic().read(key);\n+        }\n+\n+        BulkActionResult result = new BulkActionResult();\n+\n+        if (type == ResourceAssociationActionType.LINK) {\n+            for (ResourceKey resourceName : associationMod.getTargetResources()) {\n+                result.getResults().put(resourceName.getElement(),\n+                        updated.getResources().contains(resourceName.getElement())\n+                                ? BulkActionResult.Status.FAILURE\n+                                : BulkActionResult.Status.SUCCESS);\n+            }\n+        } else {\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                result.getResults().put(propagationStatusTO.getResource(),\n+                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n+            }\n+        }\n+\n+        return modificationResponse(result);\n+    }\n+\n+    @Override\n+    public BulkActionResult bulk(final BulkAction bulkAction) {\n+        AbstractAnyLogic<TO, MOD> logic = getAnyLogic();\n+\n+        BulkActionResult result = new BulkActionResult();\n+\n+        switch (bulkAction.getOperation()) {\n+            case DELETE:\n+                for (String key : bulkAction.getTargets()) {\n+                    try {\n+                        result.getResults().put(\n+                                String.valueOf(logic.delete(Long.valueOf(key)).getKey()),\n+                                BulkActionResult.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing delete for user {}\", key, e);\n+                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+\n+            case SUSPEND:\n+                if (logic instanceof UserLogic) {\n+                    for (String key : bulkAction.getTargets()) {\n+                        StatusMod statusMod = new StatusMod();\n+                        statusMod.setKey(Long.valueOf(key));\n+                        statusMod.setType(StatusMod.ModType.SUSPEND);\n+                        try {\n+                            result.getResults().put(\n+                                    String.valueOf(((UserLogic) logic).status(statusMod).getKey()),\n+                                    BulkActionResult.Status.SUCCESS);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error performing suspend for user {}\", key, e);\n+                            result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                        }\n+                    }\n+                }\n+                break;\n+\n+            case REACTIVATE:\n+                for (String key : bulkAction.getTargets()) {\n+                    StatusMod statusMod = new StatusMod();\n+                    statusMod.setKey(Long.valueOf(key));\n+                    statusMod.setType(StatusMod.ModType.REACTIVATE);\n+                    try {\n+                        result.getResults().put(\n+                                String.valueOf(((UserLogic) logic).status(statusMod).getKey()),\n+                                BulkActionResult.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing reactivate for user {}\", key, e);\n+                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+}"},{"sha":"ce6390a913365fcf9dd7053caa36d40e4d388d73","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceImpl.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n+import org.apache.syncope.core.logic.AbstractAnyLogic;\n+import org.apache.syncope.core.logic.AnyObjectLogic;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class AnyObjectServiceImpl extends AbstractAnyService<AnyObjectTO, AnyObjectMod> implements AnyObjectService {\n+\n+    @Autowired\n+    private AnyObjectLogic logic;\n+\n+    @Override\n+    protected AbstractAnyLogic<AnyObjectTO, AnyObjectMod> getAnyLogic() {\n+        return logic;\n+    }\n+\n+    @Override\n+    public PagedResult<AnyObjectTO> list(final String type, final AnyListQuery listQuery) {\n+        if (StringUtils.isBlank(type)) {\n+            return super.list(listQuery);\n+        }\n+\n+        CollectionUtils.transform(listQuery.getRealms(), new Transformer<String, String>() {\n+\n+            @Override\n+            public String transform(final String input) {\n+                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n+            }\n+        });\n+\n+        return buildPagedResult(\n+                logic.list(\n+                        type,\n+                        listQuery.getPage(),\n+                        listQuery.getSize(),\n+                        getOrderByClauses(listQuery.getOrderBy()),\n+                        listQuery.getRealms()),\n+                listQuery.getPage(),\n+                listQuery.getSize(),\n+                getAnyLogic().count(listQuery.getRealms()));\n+    }\n+}"},{"sha":"d80caf981faffc8814b79ca2a2e3edfcccc4f17a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -27,11 +27,12 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.wrap.BooleanWrap;\n+import org.apache.syncope.common.lib.wrap.ConnIdObjectClass;\n+import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.core.logic.ConnectorLogic;\n@@ -87,17 +88,12 @@ public PlainSchemaTO transform(final String name) {\n     }\n \n     @Override\n-    public List<ConnIdObjectClassTO> getSupportedObjectClasses(final Long key,\n+    public List<ConnIdObjectClass> getSupportedObjectClasses(final Long key,\n             final ConnInstanceTO connInstanceTO) {\n \n         connInstanceTO.setKey(key);\n \n-        List<String> objectClasses = logic.getSupportedObjectClasses(connInstanceTO);\n-        List<ConnIdObjectClassTO> result = new ArrayList<>(objectClasses.size());\n-        for (String objectClass : objectClasses) {\n-            result.add(new ConnIdObjectClassTO(objectClass));\n-        }\n-        return result;\n+        return CollectionWrapper.wrap(logic.getSupportedObjectClasses(connInstanceTO), ConnIdObjectClass.class);\n     }\n \n     @Override"},{"sha":"2d6c6e4ea40398bbb7bfc7e9d3abf53d84dc9795","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/GroupServiceImpl.java","status":"modified","additions":4,"deletions":201,"changes":205,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -19,225 +19,28 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.mod.GroupMod;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceKey;\n-import org.apache.syncope.common.rest.api.CollectionWrapper;\n-import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n-import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.GroupService;\n+import org.apache.syncope.core.logic.AbstractAnyLogic;\n import org.apache.syncope.core.logic.GroupLogic;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n @Service\n-public class GroupServiceImpl extends AbstractServiceImpl implements GroupService {\n+public class GroupServiceImpl extends AbstractAnyService<GroupTO, GroupMod> implements GroupService {\n \n     @Autowired\n     private GroupLogic logic;\n \n     @Override\n-    public Response create(final GroupTO groupTO) {\n-        GroupTO created = logic.create(groupTO);\n-        return createResponse(created.getKey(), created);\n-    }\n-\n-    @Override\n-    public Response delete(final Long groupKey) {\n-        GroupTO group = logic.read(groupKey);\n-\n-        checkETag(group.getETagValue());\n-\n-        GroupTO deleted = logic.delete(groupKey);\n-        return modificationResponse(deleted);\n-    }\n-\n-    @Override\n-    public PagedResult<GroupTO> list(final AnyListQuery listQuery) {\n-        CollectionUtils.transform(listQuery.getRealms(), new Transformer<String, String>() {\n-\n-            @Override\n-            public String transform(final String input) {\n-                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n-            }\n-        });\n-\n-        return buildPagedResult(\n-                logic.list(\n-                        listQuery.getPage(),\n-                        listQuery.getSize(),\n-                        getOrderByClauses(listQuery.getOrderBy()),\n-                        listQuery.getRealms()),\n-                listQuery.getPage(),\n-                listQuery.getSize(),\n-                logic.count(listQuery.getRealms()));\n-    }\n-\n-    @Override\n-    public GroupTO read(final Long groupKey) {\n-        return logic.read(groupKey);\n-    }\n-\n-    @Override\n-    public PagedResult<GroupTO> search(final AnySearchQuery searchQuery) {\n-        CollectionUtils.transform(searchQuery.getRealms(), new Transformer<String, String>() {\n-\n-            @Override\n-            public String transform(final String input) {\n-                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n-            }\n-        });\n-\n-        SearchCond cond = getSearchCond(searchQuery.getFiql());\n-        return buildPagedResult(\n-                logic.search(\n-                        cond,\n-                        searchQuery.getPage(),\n-                        searchQuery.getSize(),\n-                        getOrderByClauses(searchQuery.getOrderBy()),\n-                        searchQuery.getRealms()),\n-                searchQuery.getPage(),\n-                searchQuery.getSize(),\n-                logic.searchCount(cond, searchQuery.getRealms()));\n+    protected AbstractAnyLogic<GroupTO, GroupMod> getAnyLogic() {\n+        return logic;\n     }\n \n     @Override\n     public List<GroupTO> own() {\n         return logic.own();\n     }\n \n-    @Override\n-    public Response update(final Long groupKey, final GroupMod groupMod) {\n-        GroupTO group = logic.read(groupKey);\n-\n-        checkETag(group.getETagValue());\n-\n-        groupMod.setKey(groupKey);\n-        GroupTO updated = logic.update(groupMod);\n-        return modificationResponse(updated);\n-    }\n-\n-    @Override\n-    public Response bulkDeassociation(\n-            final Long groupKey, final ResourceDeassociationActionType type, final List<ResourceKey> resourceNames) {\n-\n-        GroupTO group = logic.read(groupKey);\n-\n-        checkETag(group.getETagValue());\n-\n-        GroupTO updated;\n-        switch (type) {\n-            case UNLINK:\n-                updated = logic.unlink(groupKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            case UNASSIGN:\n-                updated = logic.unassign(groupKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            case DEPROVISION:\n-                updated = logic.deprovision(groupKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            default:\n-                updated = logic.read(groupKey);\n-        }\n-\n-        BulkActionResult result = new BulkActionResult();\n-\n-        if (type == ResourceDeassociationActionType.UNLINK) {\n-            for (ResourceKey resourceName : resourceNames) {\n-                result.getResults().put(resourceName.getElement(),\n-                        updated.getResources().contains(resourceName.getElement())\n-                                ? BulkActionResult.Status.FAILURE\n-                                : BulkActionResult.Status.SUCCESS);\n-            }\n-        } else {\n-            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                result.getResults().put(propagationStatusTO.getResource(),\n-                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n-            }\n-        }\n-\n-        return modificationResponse(result);\n-    }\n-\n-    @Override\n-    public Response bulkAssociation(\n-            final Long groupKey, final ResourceAssociationActionType type, final List<ResourceKey> resourceNames) {\n-\n-        GroupTO group = logic.read(groupKey);\n-\n-        checkETag(group.getETagValue());\n-\n-        GroupTO updated;\n-        switch (type) {\n-            case LINK:\n-                updated = logic.link(groupKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            case ASSIGN:\n-                updated = logic.assign(groupKey, CollectionWrapper.unwrap(resourceNames), false, null);\n-                break;\n-\n-            case PROVISION:\n-                updated = logic.provision(groupKey, CollectionWrapper.unwrap(resourceNames), false, null);\n-                break;\n-\n-            default:\n-                updated = logic.read(groupKey);\n-        }\n-\n-        BulkActionResult result = new BulkActionResult();\n-\n-        if (type == ResourceAssociationActionType.LINK) {\n-            for (ResourceKey resourceName : resourceNames) {\n-                result.getResults().put(resourceName.getElement(),\n-                        updated.getResources().contains(resourceName.getElement())\n-                                ? BulkActionResult.Status.FAILURE\n-                                : BulkActionResult.Status.SUCCESS);\n-            }\n-        } else {\n-            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                result.getResults().put(propagationStatusTO.getResource(),\n-                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n-            }\n-        }\n-\n-        return modificationResponse(result);\n-    }\n-\n-    @Override\n-    public BulkActionResult bulk(final BulkAction bulkAction) {\n-        BulkActionResult result = new BulkActionResult();\n-\n-        if (bulkAction.getOperation() == BulkAction.Type.DELETE) {\n-            for (String groupKey : bulkAction.getTargets()) {\n-                try {\n-                    result.getResults().put(\n-                            String.valueOf(logic.delete(Long.valueOf(groupKey)).getKey()),\n-                            BulkActionResult.Status.SUCCESS);\n-                } catch (Exception e) {\n-                    LOG.error(\"Error performing delete for group {}\", groupKey, e);\n-                    result.getResults().put(groupKey, BulkActionResult.Status.FAILURE);\n-                }\n-            }\n-        } else {\n-            LOG.warn(\"Unsupported bulk action: {}\", bulkAction.getOperation());\n-        }\n-\n-        return result;\n-    }\n }"},{"sha":"391aea8f1f1d9b62882e29593664324004e132f5","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserServiceImpl.java","status":"modified","additions":12,"deletions":247,"changes":259,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -18,44 +18,33 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationActionType;\n-import org.apache.syncope.common.lib.wrap.ResourceKey;\n-import org.apache.syncope.common.rest.api.CollectionWrapper;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n-import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.syncope.core.logic.AbstractAnyLogic;\n import org.apache.syncope.core.logic.UserLogic;\n-import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n @Service\n-public class UserServiceImpl extends AbstractServiceImpl implements UserService {\n+public class UserServiceImpl extends AbstractAnyService<UserTO, UserMod> implements UserService {\n \n     @Autowired\n     private UserLogic logic;\n \n     @Override\n-    public Response getUsername(final Long userKey) {\n+    protected AbstractAnyLogic<UserTO, UserMod> getAnyLogic() {\n+        return logic;\n+    }\n+\n+    @Override\n+    public Response getUsername(final Long key) {\n         return Response.ok().header(HttpHeaders.ALLOW, OPTIONS_ALLOW).\n-                header(RESTHeaders.USERNAME, logic.getUsername(userKey)).\n+                header(RESTHeaders.USERNAME, logic.getUsername(key)).\n                 build();\n     }\n \n@@ -73,237 +62,13 @@ public Response create(final UserTO userTO, final boolean storePassword) {\n     }\n \n     @Override\n-    public Response delete(final Long userKey) {\n-        UserTO user = logic.read(userKey);\n-\n-        checkETag(user.getETagValue());\n-\n-        UserTO deleted = logic.delete(userKey);\n-        return modificationResponse(deleted);\n-    }\n-\n-    @Override\n-    public PagedResult<UserTO> list(final AnyListQuery listQuery) {\n-        CollectionUtils.transform(listQuery.getRealms(), new Transformer<String, String>() {\n-\n-            @Override\n-            public String transform(final String input) {\n-                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n-            }\n-        });\n-\n-        return buildPagedResult(\n-                logic.list(\n-                        listQuery.getPage(),\n-                        listQuery.getSize(),\n-                        getOrderByClauses(listQuery.getOrderBy()),\n-                        listQuery.getRealms()),\n-                listQuery.getPage(),\n-                listQuery.getSize(),\n-                logic.count(listQuery.getRealms()));\n-    }\n-\n-    @Override\n-    public UserTO read(final Long userKey) {\n-        return logic.read(userKey);\n-    }\n-\n-    @Override\n-    public PagedResult<UserTO> search(final AnySearchQuery searchQuery) {\n-        CollectionUtils.transform(searchQuery.getRealms(), new Transformer<String, String>() {\n-\n-            @Override\n-            public String transform(final String input) {\n-                return StringUtils.prependIfMissing(input, SyncopeConstants.ROOT_REALM);\n-            }\n-        });\n-\n-        SearchCond cond = getSearchCond(searchQuery.getFiql());\n-        return buildPagedResult(\n-                logic.search(\n-                        cond,\n-                        searchQuery.getPage(),\n-                        searchQuery.getSize(),\n-                        getOrderByClauses(searchQuery.getOrderBy()),\n-                        searchQuery.getRealms()),\n-                searchQuery.getPage(),\n-                searchQuery.getSize(),\n-                logic.searchCount(cond, searchQuery.getRealms()));\n-    }\n-\n-    @Override\n-    public Response update(final Long userKey, final UserMod userMod) {\n-        UserTO user = logic.read(userKey);\n-\n-        checkETag(user.getETagValue());\n-\n-        userMod.setKey(userKey);\n-        UserTO updated = logic.update(userMod);\n-        return modificationResponse(updated);\n-    }\n-\n-    @Override\n-    public Response status(final Long userKey, final StatusMod statusMod) {\n-        UserTO user = logic.read(userKey);\n+    public Response status(final Long key, final StatusMod statusMod) {\n+        UserTO user = logic.read(key);\n \n         checkETag(user.getETagValue());\n \n-        statusMod.setKey(userKey);\n+        statusMod.setKey(key);\n         UserTO updated = logic.status(statusMod);\n         return modificationResponse(updated);\n     }\n-\n-    @Override\n-    public Response bulkDeassociation(\n-            final Long userKey, final ResourceDeassociationActionType type, final List<ResourceKey> resourceNames) {\n-\n-        final UserTO user = logic.read(userKey);\n-\n-        checkETag(user.getETagValue());\n-\n-        UserTO updated;\n-        switch (type) {\n-            case UNLINK:\n-                updated = logic.unlink(userKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            case UNASSIGN:\n-                updated = logic.unassign(userKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            case DEPROVISION:\n-                updated = logic.deprovision(userKey, CollectionWrapper.unwrap(resourceNames));\n-                break;\n-\n-            default:\n-                updated = logic.read(userKey);\n-        }\n-\n-        BulkActionResult result = new BulkActionResult();\n-\n-        if (type == ResourceDeassociationActionType.UNLINK) {\n-            for (ResourceKey resourceName : resourceNames) {\n-                result.getResults().put(\n-                        resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n-                                ? BulkActionResult.Status.FAILURE\n-                                : BulkActionResult.Status.SUCCESS);\n-            }\n-        } else {\n-            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                result.getResults().put(propagationStatusTO.getResource(),\n-                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n-            }\n-        }\n-\n-        return modificationResponse(result);\n-    }\n-\n-    @Override\n-    public Response bulkAssociation(\n-            final Long userKey, final ResourceAssociationActionType type, final ResourceAssociationMod associationMod) {\n-\n-        final UserTO user = logic.read(userKey);\n-\n-        checkETag(user.getETagValue());\n-\n-        UserTO updated;\n-        switch (type) {\n-            case LINK:\n-                updated = logic.link(\n-                        userKey,\n-                        CollectionWrapper.unwrap(associationMod.getTargetResources()));\n-                break;\n-\n-            case ASSIGN:\n-                updated = logic.assign(\n-                        userKey,\n-                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n-                        associationMod.isChangePwd(),\n-                        associationMod.getPassword());\n-                break;\n-\n-            case PROVISION:\n-                updated = logic.provision(\n-                        userKey,\n-                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n-                        associationMod.isChangePwd(),\n-                        associationMod.getPassword());\n-                break;\n-\n-            default:\n-                updated = logic.read(userKey);\n-        }\n-\n-        BulkActionResult result = new BulkActionResult();\n-\n-        if (type == ResourceAssociationActionType.LINK) {\n-            for (ResourceKey resourceName : associationMod.getTargetResources()) {\n-                result.getResults().put(resourceName.getElement(),\n-                        updated.getResources().contains(resourceName.getElement())\n-                                ? BulkActionResult.Status.FAILURE\n-                                : BulkActionResult.Status.SUCCESS);\n-            }\n-        } else {\n-            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                result.getResults().put(propagationStatusTO.getResource(),\n-                        BulkActionResult.Status.valueOf(propagationStatusTO.getStatus().toString()));\n-            }\n-        }\n-\n-        return modificationResponse(result);\n-    }\n-\n-    @Override\n-    public BulkActionResult bulk(final BulkAction bulkAction) {\n-        BulkActionResult result = new BulkActionResult();\n-\n-        switch (bulkAction.getOperation()) {\n-            case DELETE:\n-                for (String key : bulkAction.getTargets()) {\n-                    try {\n-                        result.getResults().put(\n-                                String.valueOf(logic.delete(Long.valueOf(key)).getKey()),\n-                                BulkActionResult.Status.SUCCESS);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error performing delete for user {}\", key, e);\n-                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n-                    }\n-                }\n-                break;\n-\n-            case SUSPEND:\n-                for (String key : bulkAction.getTargets()) {\n-                    StatusMod statusMod = new StatusMod();\n-                    statusMod.setKey(Long.valueOf(key));\n-                    statusMod.setType(StatusMod.ModType.SUSPEND);\n-                    try {\n-                        result.getResults().put(\n-                                String.valueOf(logic.status(statusMod).getKey()), BulkActionResult.Status.SUCCESS);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error performing suspend for user {}\", key, e);\n-                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n-                    }\n-                }\n-                break;\n-\n-            case REACTIVATE:\n-                for (String key : bulkAction.getTargets()) {\n-                    StatusMod statusMod = new StatusMod();\n-                    statusMod.setKey(Long.valueOf(key));\n-                    statusMod.setType(StatusMod.ModType.REACTIVATE);\n-                    try {\n-                        result.getResults().put(\n-                                String.valueOf(logic.status(statusMod).getKey()), BulkActionResult.Status.SUCCESS);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error performing reactivate for user {}\", key, e);\n-                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n-                    }\n-                }\n-                break;\n-\n-            default:\n-        }\n-\n-        return result;\n-    }\n }"},{"sha":"4359e7bce51f3dc9bcd28c68477896d49a96b5ba","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/init/CamelRouteLoader.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -56,6 +56,9 @@ public class CamelRouteLoader implements SyncopeLoader {\n     @javax.annotation.Resource(name = \"groupRoutes\")\n     private ResourceWithFallbackLoader groupRoutesLoader;\n \n+    @javax.annotation.Resource(name = \"anyObjectRoutes\")\n+    private ResourceWithFallbackLoader anyObjectRoutesLoader;\n+\n     @Autowired\n     private DataSource dataSource;\n \n@@ -76,6 +79,7 @@ public void load() {\n             if (!loaded) {\n                 loadRoutes(userRoutesLoader.getResource(), AnyTypeKind.USER);\n                 loadRoutes(groupRoutesLoader.getResource(), AnyTypeKind.GROUP);\n+                loadRoutes(anyObjectRoutesLoader.getResource(), AnyTypeKind.ANY_OBJECT);\n                 loaded = true;\n             }\n         }"},{"sha":"ae29501f211473e2fb1b3eb775989a4b97e62440","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelAnyObjectProvisioningManager.java","status":"added","additions":163,"deletions":0,"changes":163,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,163 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.PollingConsumer;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n+\n+public class CamelAnyObjectProvisioningManager\n+        extends AbstractCamelProvisioningManager implements AnyObjectProvisioningManager {\n+\n+    @Override\n+    public Pair<Long, List<PropagationStatus>> create(final AnyObjectTO any) {\n+        return create(any, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Pair<Long, List<PropagationStatus>> create(\n+            final AnyObjectTO anyObjectTO, final Set<String> excludedResources) {\n+\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:createAnyObjectPort\");\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:createAnyObject\", anyObjectTO, props);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(Pair.class);\n+    }\n+\n+    @Override\n+    public Pair<Long, List<PropagationStatus>> update(final AnyObjectMod anyMod) {\n+        return update(anyMod, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Pair<Long, List<PropagationStatus>> update(\n+            final AnyObjectMod anyMod, final Set<String> excludedResources) {\n+\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:updateAnyObjectPort\");\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:updateAnyObject\", anyMod, props);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(Pair.class);\n+    }\n+\n+    @Override\n+    public List<PropagationStatus> delete(final Long anyObjectObjectKey) {\n+        return delete(anyObjectObjectKey, Collections.<String>emptySet());\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> delete(final Long anyObjectKey, final Set<String> excludedResources) {\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:deleteAnyObjectPort\");\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"excludedResources\", excludedResources);\n+\n+        sendMessage(\"direct:deleteAnyObject\", anyObjectKey, props);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(List.class);\n+    }\n+\n+    @Override\n+    public Long unlink(final AnyObjectMod anyObjectMod) {\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:unlinkAnyObjectPort\");\n+\n+        sendMessage(\"direct:unlinkAnyObject\", anyObjectMod);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    public Long link(final AnyObjectMod anyObjectMod) {\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:linkAnyObjectPort\");\n+\n+        sendMessage(\"direct:linkAnyObject\", anyObjectMod);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(Long.class);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<PropagationStatus> deprovision(final Long anyObjectKey, final Collection<String> resources) {\n+        PollingConsumer pollingConsumer = getConsumer(\"direct:deprovisionAnyObjectPort\");\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"resources\", resources);\n+\n+        sendMessage(\"direct:deprovisionAnyObject\", anyObjectKey, props);\n+\n+        Exchange exchange = pollingConsumer.receive();\n+\n+        if (exchange.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n+            throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        }\n+\n+        return exchange.getIn().getBody(List.class);\n+    }\n+\n+}"},{"sha":"2f2e41ebce7fe1b997cdcdde390ac5fd56e0c341","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectCreateProcessor.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectCreateProcessor.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processor;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AnyObjectCreateProcessor implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectCreateProcessor.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public void process(final Exchange exchange) {\n+        WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n+        AnyObjectTO any = exchange.getProperty(\"any\", AnyObjectTO.class);\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        List<PropagationTask> tasks =\n+                propagationManager.getAnyObjectCreateTasks(created, any.getVirAttrs(), excludedResource);\n+        PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses()));\n+    }\n+\n+}"},{"sha":"d1c92438979f95f6a39394509c2aa61e55ad5078","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectDeleteProcessor.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeleteProcessor.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AnyObjectDeleteProcessor implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyObjectDeleteProcessor.class);\n+\n+    @Autowired\n+    protected AnyObjectWorkflowAdapter gwfAdapter;\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected AnyObjectDAO anyObjectDAO;\n+\n+    @Override\n+    public void process(final Exchange exchange) throws Exception {\n+        Long anyKey = exchange.getIn().getBody(Long.class);\n+        AnyObject anyObject = anyObjectDAO.find(anyKey);\n+        @SuppressWarnings(\"unchecked\")\n+        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        List<PropagationTask> tasks = new ArrayList<>();\n+\n+        if (anyObject != null) {\n+            // Generate propagation tasks for deleting this anyObject from resources\n+            tasks.addAll(propagationManager.getAnyObjectDeleteTasks(anyObject.getKey(), excludedResources));\n+        }\n+\n+        PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"c56ab902c1c5c50fd8116641884fe00484d21198","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectDeprovisionProcessor.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processor;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AnyObjectDeprovisionProcessor implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserDeprovisionProcessor.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected AnyObjectDAO anyObjectDAO;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public void process(final Exchange exchange) {\n+        Long anyObjectKey = exchange.getIn().getBody(Long.class);\n+        List<String> resources = exchange.getProperty(\"resources\", List.class);\n+\n+        AnyObject anyObject = anyObjectDAO.authFind(anyObjectKey);\n+\n+        Collection<String> noPropResourceNames = CollectionUtils.removeAll(anyObject.getResourceNames(), resources);\n+\n+        List<PropagationTask> tasks =\n+                propagationManager.getAnyObjectDeleteTasks(anyObjectKey, new HashSet<>(resources), noPropResourceNames);\n+        PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.getOut().setBody(propagationReporter.getStatuses());\n+    }\n+\n+}"},{"sha":"2979e97bad80856b62f18ae9e99806be0f8b5dbb","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectUpdateProcessor.java","status":"added","additions":90,"deletions":0,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processor;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.PropagationByResource;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n+import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AnyObjectUpdateProcessor implements Processor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserUpdateProcessor.class);\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected VirAttrHandler virtAttrHandler;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public void process(final Exchange exchange) {\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n+        AnyObjectMod anyObjectMod = exchange.getProperty(\"anyMod\", AnyObjectMod.class);\n+        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getAnyObjectUpdateTasks(updated,\n+                anyObjectMod.getVirAttrsToRemove(), anyObjectMod.getVirAttrsToUpdate(), excludedResources);\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            PropagationByResource propByResVirAttr = virtAttrHandler.fillVirtual(\n+                    updated.getResult(),\n+                    AnyTypeKind.GROUP,\n+                    anyObjectMod.getVirAttrsToRemove(),\n+                    anyObjectMod.getVirAttrsToUpdate());\n+            tasks.addAll(!propByResVirAttr.isEmpty()\n+                    ? propagationManager.getAnyObjectUpdateTasks(updated, null, null, null)\n+                    : Collections.<PropagationTask>emptyList());\n+        }\n+\n+        PropagationReporter propagationReporter =\n+                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n+    }\n+\n+}"},{"sha":"de4df0b99f3cd34423776d96340e3485f7a75a0e","filename":"ext/camel/provisioning-camel/src/main/resources/anyObjectRoutes.xml","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,121 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<routes>\n+     \n+  <route id=\"createAnyObject\">\n+    <from uri=\"direct:createAnyObject\"/>\n+    <setProperty propertyName=\"any\">\n+      <simple>${body}</simple>\n+    </setProperty>\n+    <doTry>\n+      <bean ref=\"awfAdapter\" method=\"create(${body})\"/>\n+      <process ref=\"anyObjectCreateProcessor\"/>\n+      <to uri=\"direct:createAnyObjectPort\"/>\n+      <doCatch>        \n+        <exception>java.lang.RuntimeException</exception>\n+        <handled>\n+          <constant>false</constant>\n+        </handled>\n+        <to uri=\"direct:createAnyObjectPort\"/>\n+      </doCatch>\n+    </doTry>\n+  </route>\n+         \n+  <route id=\"updateAnyObject\">\n+    <from uri=\"direct:updateAnyObject\"/>\n+    <setProperty propertyName=\"anyMod\">\n+      <simple>${body}</simple>\n+    </setProperty>\n+    <doTry>\n+      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <process ref=\"anyObjectUpdateProcessor\"/>\n+      <to uri=\"direct:updateAnyObjectPort\"/>\n+      <doCatch>        \n+        <exception>java.lang.RuntimeException</exception>\n+        <handled>\n+          <constant>false</constant>\n+        </handled>\n+        <to uri=\"direct:updateAnyObjectPort\"/>\n+      </doCatch>\n+    </doTry>\n+  </route>\n+\n+  <route id=\"deleteAnyObject\">\n+    <from uri=\"direct:deleteAnyObject\"/>\n+    <doTry>\n+      <process ref=\"anyObjectDeleteProcessor\"/>\n+      <bean ref=\"awfAdapter\" method=\"delete(${body})\"/>\n+      <setBody>\n+        <simple>${property.statuses}</simple>\n+      </setBody>\n+      <to uri=\"direct:deleteAnyObjectPort\"/>\n+      <doCatch>        \n+        <exception>java.lang.RuntimeException</exception>\n+        <handled>\n+          <constant>false</constant>\n+        </handled>\n+        <to uri=\"direct:deleteAnyObjectPort\"/>\n+      </doCatch>\n+    </doTry>\n+  </route>\n+\n+  <route id=\"unlinkAnyObject\">\n+    <from uri=\"direct:unlinkAnyObject\"/>\n+    <doTry>\n+      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <setBody>\n+        <simple>${body.getResult}</simple>\n+      </setBody>\n+      <to uri=\"direct:unlinkAnyObjectPort\"/>\n+      <doCatch>        \n+        <exception>java.lang.RuntimeException</exception>\n+        <handled>\n+          <constant>false</constant>\n+        </handled>\n+        <to uri=\"direct:unlinkAnyObjectPort\"/>\n+      </doCatch>\n+    </doTry>            \n+  </route>\n+        \n+  <route id=\"linkAnyObject\">\n+    <from uri=\"direct:linkAnyObject\"/>\n+    <doTry>\n+      <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n+      <setBody>\n+        <simple>${body.getResult}</simple>\n+      </setBody>\n+      <to uri=\"direct:linkAnyObjectPort\"/>\n+      <doCatch>        \n+        <exception>java.lang.RuntimeException</exception>\n+        <handled>\n+          <constant>false</constant>\n+        </handled>\n+        <to uri=\"direct:linkAnyObjectPort\"/>\n+      </doCatch>\n+    </doTry>            \n+  </route>\n+        \n+  <route id=\"deprovisionAnyObject\">\n+    <from uri=\"direct:deprovisionAnyObject\"/>            \n+    <process ref=\"anyObjectDeprovisionProcessor\"/>\n+    <to uri=\"direct:deprovisionAnyObjectPort\"/>              \n+  </route>\n+    \n+</routes>"},{"sha":"aa843cad5abd08c18a17df3196373c8fbd655fc9","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -17,5 +17,5 @@\n camel.directory=${conf.directory}\n userProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelUserProvisioningManager\n groupProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n+anyObjectProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelAnObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache"},{"sha":"d334d7584cbe746eebf05748b957bcb11b79abf9","filename":"ext/camel/provisioning-camel/src/main/resources/provisioningCamelContext.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -33,7 +33,11 @@ under the License.\n     <property name=\"primary\" value=\"file:${camel.directory}/groupRoutes.xml\"/>\n     <property name=\"fallback\" value=\"classpath:groupRoutes.xml\"/>\n   </bean>\n-    \n+  <bean id=\"anyObjectRoutes\" class=\"org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${camel.directory}/anyObjectRoutes.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:anyObjectRoutes.xml\"/>\n+  </bean>\n+      \n   <context:component-scan base-package=\"org.apache.syncope.core.provisioning.camel\"/>\n \n </beans>"},{"sha":"679eee672da40ed8131dc9a618232a267ffb8542","filename":"fit/build-tools/pom.xml","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -85,10 +85,16 @@ under the License.\n     <dependency>\n       <groupId>net.tirasa.connid.bundles.db</groupId>\n       <artifactId>net.tirasa.connid.bundles.db.table</artifactId>\n-      <version>${connid.db.table.version}</version>\n+      <version>${connid.database.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n-    \n+    <dependency>\n+      <groupId>net.tirasa.connid.bundles.db</groupId>\n+      <artifactId>net.tirasa.connid.bundles.db.scriptedsql</artifactId>\n+      <version>${connid.database.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+        \n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>"},{"sha":"67567ecb88ed7f7f62c8a40fa09cc1042434e75c","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnIdStartStopListener.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -49,7 +49,8 @@ private List<URL> getBundleURLs(final ServletContext ctx) {\n \n         for (String bundleFile : new String[] {\n             \"testconnectorserver.soap.bundle\",\n-            \"testconnectorserver.db.bundle\",\n+            \"testconnectorserver.dbtable.bundle\",\n+            \"testconnectorserver.scriptedsql.bundle\",\n             \"testconnectorserver.csvdir.bundle\",\n             \"testconnectorserver.ldap.bundle\" }) {\n "},{"sha":"e0f5678064438b4e87281618dff0ffaeed9f7739","filename":"fit/build-tools/src/main/resources/buildToolsContext.xml","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -45,8 +45,11 @@ under the License.\n   <bean id=\"testconnectorserver.soap.bundle\" class=\"java.lang.String\">\n     <constructor-arg value=\"net.tirasa.connid.bundles.soap-${connid.soap.version}.jar\"/>\n   </bean>  \n-  <bean id=\"testconnectorserver.db.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.db.table-${connid.db.table.version}.jar\"/>\n+  <bean id=\"testconnectorserver.dbtable.bundle\" class=\"java.lang.String\">\n+    <constructor-arg value=\"net.tirasa.connid.bundles.db.table-${connid.database.version}.jar\"/>\n+  </bean>  \n+  <bean id=\"testconnectorserver.scriptedsql.bundle\" class=\"java.lang.String\">\n+    <constructor-arg value=\"net.tirasa.connid.bundles.db.scriptedsql-${connid.database.version}.jar\"/>\n   </bean>  \n   <bean id=\"testconnectorserver.csvdir.bundle\" class=\"java.lang.String\">\n     <constructor-arg value=\"net.tirasa.connid.bundles.csvdir-${connid.csvdir.version}.jar\"/>"},{"sha":"9202a87a7432f06de4d2d1b10713240601d5d756","filename":"fit/build-tools/src/main/resources/testdb.sql","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -37,10 +37,16 @@ INSERT INTO test2 VALUES ('verdi', 'password321', 'true');\n \n -- this table is for issueSYNCOPE230\n DROP TABLE testsync IF EXISTS;\n-CREATE TABLE TESTSYNC (\n+CREATE TABLE testsync (\n id NUMBER(10) PRIMARY KEY,\n username VARCHAR(80),\n surname VARCHAR(80),\n email VARCHAR(80));\n \n INSERT INTO testsync VALUES (965, 'issuesyncope230', 'Surname', 'syncope230@syncope.apache.org');\n+\n+DROP TABLE testPRINTER IF EXISTS;\n+CREATE TABLE testPRINTER (\n+id NUMBER(10) PRIMARY KEY,\n+location VARCHAR(80),\n+lastModification TIMESTAMP);\n\\ No newline at end of file"},{"sha":"22ed0a85d7801e2b57c3c9b516c752d287b1ddd5","filename":"fit/core-reference/src/main/resources/connid.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fconnid.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fconnid.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fconnid.properties?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -20,5 +20,5 @@ connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\n ## for test only\n testdb.url=${testdb.url}\n connid.soap.version=${connid.soap.version}\n-connid.db.table.version=${connid.db.table.version}\n+connid.database.version=${connid.database.version}\n "},{"sha":"52c10f92aaa76e405db3e95a70d55ea4cd61ef7a","filename":"fit/core-reference/src/main/resources/scriptedsql/CreateScript.groovy","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FCreateScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FCreateScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FCreateScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends us the following:\n+// connection : SQL connection\n+// action: String correponding to the action (\"CREATE\" here)\n+// log: a handler to the Log facility\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// id: The entry identifier (OpenICF \"Name\" atribute. (most often matches the uid)\n+// attributes: an Attribute Map, containg the <String> attribute name as a key\n+// and the <List> attribute value(s) as value.\n+// password: password string, clear text\n+// options: a handler to the OperationOptions Map\n+\n+log.info(\"Entering \" + action + \" Script\");\n+\n+def sql = new Sql(connection);\n+\n+switch ( objectClass ) {\n+case \"__PRINTER__\":\n+  sql.execute(\"INSERT INTO TESTPRINTER (id, location, lastmodification) values (?,?,?)\",\n+    [\n+      id,\n+      attributes.get(\"location\").get(0),\n+      new Date()\n+    ])\n+  break\n+\n+default:\n+  id;\n+}\n+\n+return id;"},{"sha":"cdd7f5b28ac16dbeeddb43679199bc425ac2c7d4","filename":"fit/core-reference/src/main/resources/scriptedsql/DeleteScript.groovy","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FDeleteScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FDeleteScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FDeleteScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// action: a string describing the action (\"DELETE\" here)\n+// log: a handler to the Log facility\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// options: a handler to the OperationOptions Map\n+// uid: String for the unique id that specifies the object to delete\n+\n+log.info(\"Entering \" + action + \" Script\");\n+def sql = new Sql(connection);\n+\n+assert uid != null\n+\n+switch ( objectClass ) {\n+case \"__PRINTER__\":\n+  sql.execute(\"DELETE FROM TESTPRINTER where id= ?\",[uid])\n+  break\n+\n+default:\n+  uid;\n+}"},{"sha":"50f8a8a1a55e8f7824f5f5cf8b1d457c4c44c1fa","filename":"fit/core-reference/src/main/resources/scriptedsql/SchemaScript.groovy","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSchemaScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSchemaScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSchemaScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import org.identityconnectors.framework.common.objects.AttributeInfo;\n+import org.identityconnectors.framework.common.objects.AttributeInfo.Flags;\n+import org.identityconnectors.framework.common.objects.AttributeInfoBuilder;\n+import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n+import org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder;\n+\n+// Parameters:\n+// The connector sends the following:\n+// action: a string describing the action (\"SCHEMA\" here)\n+// log: a handler to the Log facility\n+// builder: SchemaBuilder instance for the connector\n+//\n+// The connector will make the final call to builder.build()\n+// so the scipt just need to declare the different object types.\n+\n+// This sample shows how to create 3 basic ObjectTypes: __ACCOUNT__, __GROUP__ and organization.\n+// Each of them contains one required attribute and normal String attributes\n+\n+\n+log.info(\"Entering \" + action + \" Script\");\n+\n+idAIB = new AttributeInfoBuilder(\"id\", String.class);\n+idAIB.setRequired(true);\n+\n+orgAttrsInfo = new HashSet<AttributeInfo>();\n+orgAttrsInfo.add(idAIB.build());\n+orgAttrsInfo.add(AttributeInfoBuilder.build(\"location\", String.class));\n+// Create the organization Object class\n+ObjectClassInfo ociOrg = new ObjectClassInfoBuilder().setType(\"__PRINTER__\").addAllAttributeInfo(orgAttrsInfo).build();\n+builder.defineObjectClass(ociOrg);\n+\n+log.info(\"Schema script done\");\n\\ No newline at end of file"},{"sha":"cc0dd658d184a189fbe1ccb31ef319fe4d611a94","filename":"fit/core-reference/src/main/resources/scriptedsql/SearchScript.groovy","status":"added","additions":94,"deletions":0,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSearchScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// action: a string describing the action (\"SEARCH\" here)\n+// log: a handler to the Log facility\n+// options: a handler to the OperationOptions Map\n+// query: a handler to the Query Map\n+//\n+// The Query map describes the filter used.\n+//\n+// query = [ operation: \"CONTAINS\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"ENDSWITH\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"STARTSWITH\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"EQUALS\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"GREATERTHAN\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"GREATERTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"LESSTHAN\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"LESSTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n+// query = null : then we assume we fetch everything\n+//\n+// AND and OR filter just embed a left/right couple of queries.\n+// query = [ operation: \"AND\", left: query1, right: query2 ]\n+// query = [ operation: \"OR\", left: query1, right: query2 ]\n+//\n+// Returns: A list of Maps. Each map describing one row.\n+// !!!! Each Map must contain a '__UID__' and '__NAME__' attribute.\n+// This is required to build a ConnectorObject.\n+\n+log.info(\"Entering \" + action + \" Script\");\n+\n+def sql = new Sql(connection);\n+def result = []\n+def where = \"\";\n+\n+if (query != null)  {\n+  // Need to handle the __UID__ in queries\n+  if (query.get(\"left\").equalsIgnoreCase(\"__UID__\") && objectClass.equalsIgnoreCase(\"__PRINTER__\")) {\n+    query.put(\"left\",\"id\")\n+  }\n+  \n+  // We can use Groovy template engine to generate our custom SQL queries\n+  def engine = new groovy.text.SimpleTemplateEngine();\n+\n+  def whereTemplates = [\n+    CONTAINS:' WHERE $left ${not ? \"NOT \" : \"\"}LIKE \"%$right%\"',\n+    ENDSWITH:' WHERE $left ${not ? \"NOT \" : \"\"}LIKE \"%$right\"',\n+    STARTSWITH:' WHERE $left ${not ? \"NOT \" : \"\"}LIKE \"$right%\"',\n+    EQUALS:' WHERE $left ${not ? \"<>\" : \"=\"} \\'$right\\'',\n+    GREATERTHAN:' WHERE $left ${not ? \"<=\" : \">\"} \"$right\"',\n+    GREATERTHANOREQUAL:' WHERE $left ${not ? \"<\" : \">=\"} \"$right\"',\n+    LESSTHAN:' WHERE $left ${not ? \">=\" : \"<\"} \"$right\"',\n+    LESSTHANOREQUAL:' WHERE $left ${not ? \">\" : \"<=\"} \"$right\"'\n+  ]\n+\n+  def wt = whereTemplates.get(query.get(\"operation\"));\n+  def binding = [left:query.get(\"left\"),right:query.get(\"right\"),not:query.get(\"not\")];\n+  def template = engine.createTemplate(wt).make(binding);\n+  where = template.toString();\n+  log.ok(\"Search WHERE clause is: \"+ where)\n+}\n+\n+switch ( objectClass ) {\n+case \"__PRINTER__\":\n+  sql.eachRow(\"SELECT * FROM TESTPRINTER \" + where, \n+    {result.add([__UID__:it.id, __NAME__:it.id, location:it.location])} );\n+  break\n+\n+default:\n+  result;\n+}\n+\n+return result;"},{"sha":"6060870b3eb7dea83b1a297606f757df32c9ccae","filename":"fit/core-reference/src/main/resources/scriptedsql/SyncScript.groovy","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FSyncScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// action: a string describing the action (\"SYNC\" or \"GET_LATEST_SYNC_TOKEN\" here)\n+// log: a handler to the Log facility\n+// options: a handler to the OperationOptions Map (null if action = \"GET_LATEST_SYNC_TOKEN\")\n+// token: a handler to an Object representing the sync token (null if action = \"GET_LATEST_SYNC_TOKEN\")\n+//\n+//\n+// Returns:\n+// if action = \"GET_LATEST_SYNC_TOKEN\", it must return an object representing the last known\n+// sync token for the corresponding ObjectClass\n+// \n+// if action = \"SYNC\":\n+// A list of Maps . Each map describing one update:\n+// Map should look like the following:\n+//\n+// [\n+// \"token\": <Object> token object (could be Integer, Date, String) , [!! could be null]\n+// \"operation\":<String> (\"CREATE_OR_UPDATE\"|\"DELETE\")  will always default to CREATE_OR_DELETE ,\n+// \"uid\":<String> uid  (uid of the entry) ,\n+// \"previousUid\":<String> prevuid (This is for rename ops) ,\n+// \"password\":<String> password (optional... allows to pass clear text password if needed),\n+// \"attributes\":Map<String,List> of attributes name/values\n+// ]\n+\n+log.info(\"Entering \" + action + \" Script\");\n+def sql = new Sql(connection);\n+\n+if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n+  switch (objectClass) {\n+  case \"__PRINTER__\":\n+    row = sql.firstRow(\"SELECT lastmodification FROM TESTPRINTER ORDER BY lastmodification DESC\");\n+    log.ok(\"Get Latest Sync Token script: last token is: \" + row[\"lastmodification\"])\n+    break;\n+    \n+  default:\n+    row = null;\n+  }\n+\n+  return row == null ? null : row[\"lastmodification\"].getTime();\n+} else if (action.equalsIgnoreCase(\"SYNC\")) {\n+  def result = [];\n+  def lastmodification = null;\n+  if (token != null) {\n+    lastmodification = new Date(token);\n+  } else {\n+    lastmodification = new Date(0);\n+  }\n+\n+  switch (objectClass) {\n+  case \"__PRINTER__\":    \n+    sql.eachRow(\"SELECT * FROM TESTPRINTER WHERE lastmodification > ${lastmodification}\",\n+      {\n+        result.add([\n+            operation:\"CREATE_OR_UPDATE\", \n+            uid:it.id.toString(), \n+            token:it.lastmodification.getTime(), \n+            attributes:[\n+              __UID__:it.id.toString(),\n+              __NAME__:it.id.toString(),\n+              id:it.id.toString(),\n+              location:it.location\n+            ]\n+          ]);\n+      }\n+    )\n+    break;\n+  }\n+  \n+  log.ok(\"Sync script: found \" + result.size() + \" events to sync\");\n+  return result;\n+} else {\n+  log.error(\"Sync script: action '\" + action + \"' is not implemented in this script\");\n+  return null;\n+}"},{"sha":"5b8f4b5ff0532d6171cef905ba447667ecffc619","filename":"fit/core-reference/src/main/resources/scriptedsql/TestScript.groovy","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FTestScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FTestScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FTestScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// action: a string describing the action (\"TEST\" here)\n+// log: a handler to the Log facility\n+\n+log.info(\"Entering \" + action + \" Script\");\n+def sql = new Sql(connection);\n+\n+sql.eachRow(\"select * from TESTPRINTER\", { println it.uid} );\n\\ No newline at end of file"},{"sha":"f3155cb245217e0e16f3a6d2bbf7575d51e585bc","filename":"fit/core-reference/src/main/resources/scriptedsql/UpdateScript.groovy","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FUpdateScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FUpdateScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fscriptedsql%2FUpdateScript.groovy?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import groovy.sql.DataSet;\n+\n+// Parameters:\n+// The connector sends us the following:\n+// connection : SQL connection\n+//\n+// action: String correponding to the action (UPDATE/ADD_ATTRIBUTE_VALUES/REMOVE_ATTRIBUTE_VALUES)\n+//   - UPDATE : For each input attribute, replace all of the current values of that attribute\n+//     in the target object with the values of that attribute.\n+//   - ADD_ATTRIBUTE_VALUES: For each attribute that the input set contains, add to the current values\n+//     of that attribute in the target object all of the values of that attribute in the input set.\n+//   - REMOVE_ATTRIBUTE_VALUES: For each attribute that the input set contains, remove from the current values\n+//     of that attribute in the target object any value that matches one of the values of the attribute from the input set.\n+\n+// log: a handler to the Log facility\n+//\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+//\n+// uid: a String representing the entry uid\n+//\n+// attributes: an Attribute Map, containg the <String> attribute name as a key\n+// and the <List> attribute value(s) as value.\n+//\n+// password: password string, clear text (only for UPDATE)\n+//\n+// options: a handler to the OperationOptions Map\n+\n+log.info(\"Entering \" + action + \" Script\");\n+def sql = new Sql(connection);\n+\n+\n+switch (action) {\n+case \"UPDATE\":\n+  if (attributes.get(\"location\").get(0) != null) {\n+    sql.executeUpdate(\"UPDATE TESTPRINTER SET location = ?, lastmodification = ? where id = ?\", \n+      [attributes.get(\"location\").get(0), new Date(), attributes.get(\"__NAME__\").get(0)])\n+    \n+    return attributes.get(\"__NAME__\").get(0);\n+  }\n+  break\n+\n+case \"ADD_ATTRIBUTE_VALUES\":\n+  break\n+\n+\n+default:\n+  sql\n+}\n\\ No newline at end of file"},{"sha":"efe1b16b3c78b30d42d38129442bdd2479a10650","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractITCase.java","status":"modified","additions":31,"deletions":4,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -35,11 +35,13 @@\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n import org.apache.syncope.common.lib.mod.AttrMod;\n import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.AbstractPolicyTO;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -48,6 +50,7 @@\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.common.rest.api.service.CamelRouteService;\n@@ -141,6 +144,8 @@ public abstract class AbstractITCase {\n \n     protected static final String RESOURCE_NAME_CREATE_NONE = \"ws-target-resource-create-none\";\n \n+    protected static final String RESOURCE_NAME_DBSCRIPTED = \"resource-db-scripted\";\n+\n     protected static String ANONYMOUS_UNAME;\n \n     protected static String ANONYMOUS_KEY;\n@@ -155,6 +160,8 @@ public abstract class AbstractITCase {\n \n     protected static RealmService realmService;\n \n+    protected static AnyObjectService anyObjectService;\n+\n     protected static RoleService roleService;\n \n     protected static UserService userService;\n@@ -226,6 +233,7 @@ public static void restSetup() {\n         anyTypeClassService = adminClient.getService(AnyTypeClassService.class);\n         anyTypeService = adminClient.getService(AnyTypeService.class);\n         realmService = adminClient.getService(RealmService.class);\n+        anyObjectService = adminClient.getService(AnyObjectService.class);\n         roleService = adminClient.getService(RoleService.class);\n         userService = adminClient.getService(UserService.class);\n         userSelfService = adminClient.getService(UserSelfService.class);\n@@ -287,8 +295,8 @@ protected UserTO updateUser(final UserMod userMod) {\n         return userService.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n     }\n \n-    protected UserTO deleteUser(final Long id) {\n-        return userService.delete(id).readEntity(UserTO.class);\n+    protected UserTO deleteUser(final Long key) {\n+        return userService.delete(key).readEntity(UserTO.class);\n     }\n \n     public <T> T getObject(final URI location, final Class<?> serviceClass, final Class<T> resultClass) {\n@@ -322,6 +330,25 @@ protected RoleTO createRole(final RoleTO roleTO) {\n         return getObject(response.getLocation(), RoleService.class, RoleTO.class);\n     }\n \n+    protected AnyObjectTO createAnyObject(final AnyObjectTO anyObjectTO) {\n+        Response response = anyObjectService.create(anyObjectTO);\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n+            Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n+            if (ex != null) {\n+                throw (RuntimeException) ex;\n+            }\n+        }\n+        return getObject(response.getLocation(), AnyObjectService.class, AnyObjectTO.class);\n+    }\n+\n+    protected AnyObjectTO updateAnyObject(final AnyObjectMod anyObjectMod) {\n+        return anyObjectService.update(anyObjectMod.getKey(), anyObjectMod).readEntity(AnyObjectTO.class);\n+    }\n+\n+    protected AnyObjectTO deleteAnyObject(final Long key) {\n+        return anyObjectService.delete(key).readEntity(AnyObjectTO.class);\n+    }\n+\n     protected GroupTO createGroup(final GroupTO groupTO) {\n         Response response = groupService.create(groupTO);\n         if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n@@ -337,8 +364,8 @@ protected GroupTO updateGroup(final GroupMod groupMod) {\n         return groupService.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n     }\n \n-    protected GroupTO deleteGroup(final Long id) {\n-        return groupService.delete(id).readEntity(GroupTO.class);\n+    protected GroupTO deleteGroup(final Long key) {\n+        return groupService.delete(key).readEntity(GroupTO.class);\n     }\n \n     @SuppressWarnings(\"unchecked\")"},{"sha":"e2b339a002b2e861c895c26b70e24e922f9c6cb9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyObjectITCase.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyObjectITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.mod.AnyObjectMod;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class AnyObjectITCase extends AbstractITCase {\n+\n+    public static AnyObjectTO getSampleTO(final String location) {\n+        AnyObjectTO anyObjectTO = new AnyObjectTO();\n+        anyObjectTO.setRealm(SyncopeConstants.ROOT_REALM);\n+        anyObjectTO.setType(\"PRINTER\");\n+        anyObjectTO.getPlainAttrs().add(attrTO(\"location\", location + getUUIDString()));\n+\n+        anyObjectTO.getResources().add(RESOURCE_NAME_DBSCRIPTED);\n+        return anyObjectTO;\n+    }\n+\n+    @Test\n+    public void create() {\n+        AnyObjectTO anyObjectTO = getSampleTO(\"create\");\n+\n+        anyObjectTO = createAnyObject(anyObjectTO);\n+        assertNotNull(anyObjectTO);\n+\n+        ConnObjectTO connObjectTO =\n+                resourceService.readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n+        assertNotNull(connObjectTO);\n+        assertNotNull(connObjectTO.getPlainAttrMap().get(\"location\"));\n+        assertEquals(anyObjectTO.getPlainAttrMap().get(\"location\"), connObjectTO.getPlainAttrMap().get(\"location\"));\n+    }\n+\n+    @Test\n+    public void delete() {\n+        try {\n+            anyObjectService.delete(0L);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n+        }\n+\n+        AnyObjectTO anyObjectTO = getSampleTO(\"deletable\");\n+        anyObjectTO.setRealm(\"/even\");\n+\n+        anyObjectTO = createAnyObject(anyObjectTO);\n+        assertNotNull(anyObjectTO);\n+\n+        AnyObjectTO deletedAnyObject = deleteAnyObject(anyObjectTO.getKey());\n+        assertNotNull(deletedAnyObject);\n+\n+        try {\n+            anyObjectService.read(deletedAnyObject.getKey());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n+        }\n+    }\n+\n+    @Test\n+    public void list() {\n+        PagedResult<AnyObjectTO> anyObjectTOs = anyObjectService.list(\"PRINTER\", SyncopeClient.getAnyListQueryBuilder().\n+                realm(SyncopeConstants.ROOT_REALM).build());\n+        assertNotNull(anyObjectTOs);\n+        assertTrue(anyObjectTOs.getResult().size() >= 2);\n+        for (AnyObjectTO anyObjectTO : anyObjectTOs.getResult()) {\n+            assertNotNull(anyObjectTO);\n+        }\n+    }\n+\n+    @Test\n+    public void read() {\n+        AnyObjectTO anyObjectTO = anyObjectService.read(1L);\n+\n+        assertNotNull(anyObjectTO);\n+        assertNotNull(anyObjectTO.getPlainAttrs());\n+        assertFalse(anyObjectTO.getPlainAttrs().isEmpty());\n+    }\n+\n+    @Test\n+    public void update() {\n+        AnyObjectTO anyObjectTO = getSampleTO(\"update\");\n+        anyObjectTO = createAnyObject(anyObjectTO);\n+\n+        assertEquals(1, anyObjectTO.getPlainAttrs().size());\n+\n+        AnyObjectMod anyObjectMod = new AnyObjectMod();\n+        anyObjectMod.setKey(anyObjectTO.getKey());\n+        String newLocation = \"new\" + getUUIDString();\n+        anyObjectMod.getPlainAttrsToUpdate().add(attrMod(\"location\", newLocation));\n+\n+        anyObjectTO = updateAnyObject(anyObjectMod);\n+\n+        assertEquals(newLocation, anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0));\n+    }\n+\n+}"},{"sha":"4dbb7963b482340f552dbc5ed13ca0344b2df0e6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeClassITCase.java","status":"added","additions":117,"deletions":0,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class AnyTypeClassITCase extends AbstractITCase {\n+\n+    @Test\n+    public void read() {\n+        AnyTypeClassTO minimalGroup = anyTypeClassService.read(\"minimal group\");\n+        assertNotNull(minimalGroup);\n+\n+        assertFalse(minimalGroup.getPlainSchemas().isEmpty());\n+        assertFalse(minimalGroup.getDerSchemas().isEmpty());\n+        assertFalse(minimalGroup.getVirSchemas().isEmpty());\n+    }\n+\n+    @Test\n+    public void list() {\n+        List<AnyTypeClassTO> list = anyTypeClassService.list();\n+        assertFalse(list.isEmpty());\n+    }\n+\n+    @Test\n+    public void crud() {\n+        AnyTypeClassTO newClass = new AnyTypeClassTO();\n+        newClass.setKey(\"new class\" + getUUIDString());\n+        newClass.getPlainSchemas().add(\"firstname\");\n+\n+        Response response = anyTypeClassService.create(newClass);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        newClass = getObject(response.getLocation(), AnyTypeClassService.class, AnyTypeClassTO.class);\n+        assertNotNull(newClass);\n+        assertFalse(newClass.getPlainSchemas().isEmpty());\n+        assertTrue(newClass.getDerSchemas().isEmpty());\n+        assertTrue(newClass.getVirSchemas().isEmpty());\n+\n+        newClass.getDerSchemas().add(\"cn\");\n+        anyTypeClassService.update(newClass.getKey(), newClass);\n+\n+        newClass = anyTypeClassService.read(newClass.getKey());\n+        assertNotNull(newClass);\n+        assertFalse(newClass.getPlainSchemas().isEmpty());\n+        assertFalse(newClass.getDerSchemas().isEmpty());\n+        assertTrue(newClass.getVirSchemas().isEmpty());\n+\n+        anyTypeClassService.delete(newClass.getKey());\n+\n+        try {\n+            anyTypeClassService.read(newClass.getKey());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void deleteSchema() {\n+        PlainSchemaTO newSchema = new PlainSchemaTO();\n+        newSchema.setKey(\"newSchema\" + getUUIDString());\n+        newSchema.setType(AttrSchemaType.Date);\n+        createSchema(SchemaType.PLAIN, newSchema);\n+\n+        AnyTypeClassTO newClass = new AnyTypeClassTO();\n+        newClass.setKey(\"new class\" + getUUIDString());\n+        newClass.getPlainSchemas().add(newSchema.getKey());\n+\n+        Response response = anyTypeClassService.create(newClass);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        newClass = getObject(response.getLocation(), AnyTypeClassService.class, AnyTypeClassTO.class);\n+        assertNotNull(newClass);\n+        assertTrue(newClass.getPlainSchemas().contains(newSchema.getKey()));\n+\n+        schemaService.delete(SchemaType.PLAIN, newSchema.getKey());\n+\n+        newClass = anyTypeClassService.read(newClass.getKey());\n+        assertNotNull(newClass);\n+        assertFalse(newClass.getPlainSchemas().contains(newSchema.getKey()));\n+    }\n+}"},{"sha":"01da6f86f9dc17992ef5bec195b0d16c9fa22566","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeITCase.java","status":"added","additions":169,"deletions":0,"changes":169,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -0,0 +1,169 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.apache.syncope.fit.core.reference.AbstractITCase.getUUIDString;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class AnyTypeITCase extends AbstractITCase {\n+\n+    @Test\n+    public void read() {\n+        AnyTypeTO userType = anyTypeService.read(AnyTypeKind.USER.name());\n+        assertNotNull(userType);\n+        assertEquals(AnyTypeKind.USER, userType.getKind());\n+        assertEquals(AnyTypeKind.USER.name(), userType.getKey());\n+        assertFalse(userType.getClasses().isEmpty());\n+\n+        AnyTypeTO groupType = anyTypeService.read(AnyTypeKind.GROUP.name());\n+        assertNotNull(groupType);\n+        assertEquals(AnyTypeKind.GROUP, groupType.getKind());\n+        assertEquals(AnyTypeKind.GROUP.name(), groupType.getKey());\n+        assertFalse(groupType.getClasses().isEmpty());\n+\n+        AnyTypeTO otherType = anyTypeService.read(\"PRINTER\");\n+        assertNotNull(otherType);\n+        assertEquals(AnyTypeKind.ANY_OBJECT, otherType.getKind());\n+        assertEquals(\"PRINTER\", otherType.getKey());\n+    }\n+\n+    @Test\n+    public void list() {\n+        List<AnyTypeTO> list = anyTypeService.list();\n+        assertFalse(list.isEmpty());\n+    }\n+\n+    @Test\n+    public void crud() {\n+        AnyTypeTO newType = new AnyTypeTO();\n+        newType.setKey(\"new type\");\n+        newType.setKind(AnyTypeKind.ANY_OBJECT);\n+        newType.getClasses().add(\"generic membership\");\n+        newType.getClasses().add(\"csv\");\n+\n+        Response response = anyTypeService.create(newType);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        newType = getObject(response.getLocation(), AnyTypeService.class, AnyTypeTO.class);\n+        assertNotNull(newType);\n+        assertEquals(2, newType.getClasses().size());\n+        assertTrue(newType.getClasses().contains(\"generic membership\"));\n+        assertTrue(newType.getClasses().contains(\"csv\"));\n+\n+        newType.getClasses().remove(\"generic membership\");\n+        anyTypeService.update(newType.getKey(), newType);\n+\n+        newType = anyTypeService.read(newType.getKey());\n+        assertNotNull(newType);\n+        assertEquals(1, newType.getClasses().size());\n+        assertTrue(newType.getClasses().contains(\"csv\"));\n+\n+        anyTypeService.delete(newType.getKey());\n+\n+        try {\n+            anyTypeService.read(newType.getKey());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void createInvalidKind() {\n+        AnyTypeTO newType = new AnyTypeTO();\n+        newType.setKey(\"new type\");\n+        newType.setKind(AnyTypeKind.USER);\n+        try {\n+            anyTypeService.create(newType);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidAnyType, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void createInvalidName() {\n+        AnyTypeTO newType = new AnyTypeTO();\n+        newType.setKey(\"group\");\n+        newType.setKind(AnyTypeKind.ANY_OBJECT);\n+        try {\n+            anyTypeService.create(newType);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidAnyType, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void deleteInvalid() {\n+        try {\n+            anyTypeService.delete(AnyTypeKind.USER.name());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidAnyType, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void deleteTypeClass() {\n+        AnyTypeClassTO newClass = new AnyTypeClassTO();\n+        newClass.setKey(\"new class\" + getUUIDString());\n+        newClass.getDerSchemas().add(\"cn\");\n+\n+        Response response = anyTypeClassService.create(newClass);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        newClass = getObject(response.getLocation(), AnyTypeClassService.class, AnyTypeClassTO.class);\n+        assertNotNull(newClass);\n+\n+        AnyTypeTO other = anyTypeService.read(\"PRINTER\");\n+        assertNotNull(other);\n+\n+        other.getClasses().add(newClass.getKey());\n+        anyTypeService.update(other.getKey(), other);\n+\n+        other = anyTypeService.read(other.getKey());\n+        assertNotNull(other);\n+        assertTrue(other.getClasses().contains(newClass.getKey()));\n+\n+        anyTypeClassService.delete(newClass.getKey());\n+\n+        other = anyTypeService.read(other.getKey());\n+        assertNotNull(other);\n+        assertFalse(other.getClasses().contains(newClass.getKey()));\n+    }\n+}"},{"sha":"2616d4acb4145e1bd234ace553cb00845d3e7642","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n@@ -53,6 +52,7 @@\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.wrap.ConnIdObjectClass;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.identityconnectors.common.security.GuardedString;\n@@ -88,7 +88,7 @@ public static void setUpConnIdBundles() throws IOException {\n             }\n \n             connidSoapVersion = props.getProperty(\"connid.soap.version\");\n-            connidDbTableVersion = props.getProperty(\"connid.db.table.version\");\n+            connidDbTableVersion = props.getProperty(\"connid.database.version\");\n \n             testJDBCURL = props.getProperty(\"testdb.url\");\n         } catch (Exception e) {\n@@ -557,19 +557,22 @@ public void getSupportedObjectClasses() {\n         ConnInstanceTO ldap = connectorService.read(105L);\n         assertNotNull(ldap);\n \n-        List<ConnIdObjectClassTO> objectClasses = connectorService.getSupportedObjectClasses(ldap.getKey(), ldap);\n+        List<ConnIdObjectClass> objectClasses = connectorService.getSupportedObjectClasses(ldap.getKey(), ldap);\n         assertNotNull(objectClasses);\n         assertEquals(2, objectClasses.size());\n-        assertTrue(objectClasses.contains(ConnIdObjectClassTO.ACCOUNT));\n-        assertTrue(objectClasses.contains(ConnIdObjectClassTO.GROUP));\n+        assertTrue(objectClasses.contains(\n+                ConnIdObjectClass.getInstance(ConnIdObjectClass.class, ObjectClass.ACCOUNT_NAME)));\n+        assertTrue(objectClasses.contains(\n+                ConnIdObjectClass.getInstance(ConnIdObjectClass.class, ObjectClass.GROUP_NAME)));\n \n         ConnInstanceTO csv = connectorService.read(104L);\n         assertNotNull(csv);\n \n         objectClasses = connectorService.getSupportedObjectClasses(csv.getKey(), csv);\n         assertNotNull(objectClasses);\n         assertEquals(1, objectClasses.size());\n-        assertTrue(objectClasses.contains(ConnIdObjectClassTO.ACCOUNT));\n+        assertTrue(objectClasses.contains(\n+                ConnIdObjectClass.getInstance(ConnIdObjectClass.class, ObjectClass.ACCOUNT_NAME)));\n     }\n \n     @Test"},{"sha":"f16ee216317ecfb0e658f37a7c0b8d0249bb228a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.mod.ReferenceMod;\n import org.apache.syncope.common.lib.mod.GroupMod;\n+import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -68,7 +69,6 @@\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.junit.FixMethodOrder;\n-import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n \n@@ -92,7 +92,6 @@ public static GroupTO getSampleTO(final String name) {\n     }\n \n     @Test\n-    @Ignore\n     public void create() {\n         GroupTO groupTO = getSampleTO(\"lastGroup\");\n         groupTO.getVirAttrs().add(attrTO(\"rvirtualdata\", \"rvirtualvalue\"));\n@@ -351,9 +350,9 @@ public void link() {\n             assertNotNull(e);\n         }\n \n-        assertNotNull(groupService.bulkAssociation(actual.getKey(),\n-                ResourceAssociationActionType.LINK,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n+        ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n+        assertNotNull(groupService.bulkAssociation(actual.getKey(), ResourceAssociationActionType.LINK, associationMod).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -406,9 +405,10 @@ public void assign() {\n             assertNotNull(e);\n         }\n \n+        ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n-                ResourceAssociationActionType.ASSIGN,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n+                ResourceAssociationActionType.ASSIGN, associationMod).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -456,9 +456,10 @@ public void provision() {\n             assertNotNull(e);\n         }\n \n+        ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n-                ResourceAssociationActionType.PROVISION,\n-                CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class)).\n+                ResourceAssociationActionType.PROVISION, associationMod).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());\n@@ -482,9 +483,10 @@ public void deprovisionUnlinked() {\n             assertNotNull(e);\n         }\n \n+        ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+        associationMod.getTargetResources().addAll(CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceKey.class));\n         assertNotNull(groupService.bulkAssociation(actual.getKey(),\n-                ResourceAssociationActionType.PROVISION,\n-                CollectionWrapper.wrap(\"resource-ldap\", ResourceKey.class)).\n+                ResourceAssociationActionType.PROVISION, associationMod).\n                 readEntity(BulkActionResult.class));\n \n         actual = groupService.read(actual.getKey());"},{"sha":"6011c933390160e459a98edda490f1a3992609bc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SearchITCase.java","status":"modified","additions":57,"deletions":36,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSearchITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -29,6 +29,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n@@ -44,25 +45,25 @@ public class SearchITCase extends AbstractITCase {\n     @Test\n     public void searchUser() {\n         // LIKE\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().\n                         is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query()).build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        for (UserTO user : matchedUsers.getResult()) {\n+        for (UserTO user : matchingUsers.getResult()) {\n             assertNotNull(user);\n         }\n \n         // ISNULL\n-        matchedUsers = userService.search(\n+        matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNull(\"loginDate\").query()).build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        Collection<UserTO> found = CollectionUtils.select(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        Collection<UserTO> found = CollectionUtils.select(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -98,14 +99,14 @@ public void searchByGroupNameAndKey() {\n \n     @Test\n     public void searchByGroup() {\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(1L).query()).\n                 build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        assertTrue(CollectionUtils.exists(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -121,14 +122,14 @@ public void searchByDynGroup() {\n         group = createGroup(group);\n         assertNotNull(group);\n \n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(group.getKey()).query()).\n                 build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        assertTrue(CollectionUtils.exists(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -139,14 +140,14 @@ public boolean evaluate(final UserTO user) {\n \n     @Test\n     public void searchByRole() {\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(3L).query()).\n                 build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        assertTrue(CollectionUtils.exists(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -163,14 +164,14 @@ public void searchByDynRole() {\n         role = getObject(response.getLocation(), RoleService.class, RoleTO.class);\n         assertNotNull(role);\n \n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().inRoles(role.getKey()).query()).\n                 build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        assertTrue(CollectionUtils.exists(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -181,14 +182,14 @@ public boolean evaluate(final UserTO user) {\n \n     @Test\n     public void searchUserByResourceName() {\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().hasResources(RESOURCE_NAME_MAPPINGS2).query()).\n                 build());\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.getResult().isEmpty());\n+        assertNotNull(matchingUsers);\n+        assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        assertTrue(CollectionUtils.exists(matchingUsers.getResult(), new Predicate<UserTO>() {\n \n             @Override\n             public boolean evaluate(final UserTO user) {\n@@ -242,27 +243,47 @@ public void searchByRelationshipAnyCond() {\n \n     @Test\n     public void nested() {\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(\"((fullname==*o*,fullname==*i*);$resources!=ws-target-resource-1)\").page(1).size(2).build());\n-        assertNotNull(matchedUsers);\n+        assertNotNull(matchingUsers);\n \n-        assertFalse(matchedUsers.getResult().isEmpty());\n-        for (UserTO user : matchedUsers.getResult()) {\n+        assertFalse(matchingUsers.getResult().isEmpty());\n+        for (UserTO user : matchingUsers.getResult()) {\n             assertNotNull(user);\n         }\n     }\n \n+    @Test\n+    public void searchByType() {\n+        PagedResult<AnyObjectTO> matching = anyObjectService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").query()).build());\n+        assertNotNull(matching);\n+\n+        assertFalse(matching.getResult().isEmpty());\n+        for (AnyObjectTO printer : matching.getResult()) {\n+            assertNotNull(printer);\n+        }\n+\n+        matching = anyObjectService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"UNEXISTING\").query()).build());\n+        assertNotNull(matching);\n+\n+        assertTrue(matching.getResult().isEmpty());\n+    }\n+\n     @Test\n     public void orderBy() {\n-        PagedResult<UserTO> matchedUsers = userService.search(\n+        PagedResult<UserTO> matchingUsers = userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"userId\").equalTo(\"*@apache.org\").query()).\n                 orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"status\").desc(\"firstname\").build()).build());\n-        assertNotNull(matchedUsers);\n+        assertNotNull(matchingUsers);\n \n-        assertFalse(matchedUsers.getResult().isEmpty());\n-        for (UserTO user : matchedUsers.getResult()) {\n+        assertFalse(matchingUsers.getResult().isEmpty());\n+        for (UserTO user : matchingUsers.getResult()) {\n             assertNotNull(user);\n         }\n     }"},{"sha":"939919f363e61a8432496e4b409525042d55def2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -37,13 +37,15 @@\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.SyncPolicyTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n@@ -352,6 +354,49 @@ public void reconcileFromLDAP() {\n         assertNull(groupTO.getGroupOwner());\n     }\n \n+    @Test\n+    public void reconcileFromScriptedSQL() {\n+        // 0. reset sync token\n+        ResourceTO resource = resourceService.read(RESOURCE_NAME_DBSCRIPTED);\n+        ProvisionTO provision = resource.getProvision(\"PRINTER\");\n+        assertNotNull(provision);\n+\n+        provision.setSyncToken(null);\n+        resourceService.update(resource.getKey(), resource);\n+\n+        // 1. create printer on external resource\n+        AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"sync\");\n+        anyObjectTO = createAnyObject(anyObjectTO);\n+        assertNotNull(anyObjectTO);\n+\n+        // 2. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n+        PagedResult<AnyObjectTO> matchingPrinters = anyObjectService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n+                        is(\"location\").equalTo(\"sync*\").query()).build());\n+        assertTrue(matchingPrinters.getSize() > 0);\n+        for (AnyObjectTO printer : matchingPrinters.getResult()) {\n+            anyObjectService.bulkDeassociation(printer.getKey(),\n+                    ResourceDeassociationActionType.UNLINK,\n+                    CollectionWrapper.wrap(RESOURCE_NAME_DBSCRIPTED, ResourceKey.class));\n+            anyObjectService.delete(printer.getKey());\n+        }\n+\n+        // 3. synchronize\n+        execProvisioningTask(28L, 50, false);\n+\n+        // 4. verify that printer was re-created in Syncope\n+        matchingPrinters = anyObjectService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n+                        is(\"location\").equalTo(\"sync*\").query()).build());\n+        assertTrue(matchingPrinters.getSize() > 0);\n+\n+        // 5. verify that synctoken was updated\n+        assertNotNull(\n+                resourceService.read(RESOURCE_NAME_DBSCRIPTED).getProvision(anyObjectTO.getType()).getSyncToken());\n+    }\n+\n     @Test\n     public void issueSYNCOPE68() {\n         //-----------------------------"},{"sha":"bd6b4aa3ae990ce12c7d5f50b68443cdd41a20e2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -1909,8 +1909,8 @@ public void deprovision() {\n         try {\n             resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey());\n             fail();\n-        } catch (Exception e) {\n-            assertNotNull(e);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n "},{"sha":"f8506d69145b459abf0ece0c02721dd644df0abf","filename":"pom.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a45a46bba7186ef43b4877482d636901bc40cbc5/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a45a46bba7186ef43b4877482d636901bc40cbc5/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a45a46bba7186ef43b4877482d636901bc40cbc5","patch":"@@ -321,12 +321,12 @@ under the License.\n \n     <connid.version>1.4.1.0</connid.version>\n     <connid.soap.version>1.3.0</connid.soap.version>\n-    <connid.db.table.version>2.2.2</connid.db.table.version>\n+    <connid.database.version>2.2.2</connid.database.version>\n     <connid.csvdir.version>0.8.2</connid.csvdir.version>\n     <connid.ldap.version>1.4.0</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.1.0</cxf.version>\n+    <cxf.version>3.1.2-SNAPSHOT</cxf.version>\n \n     <camel.version>2.15.2</camel.version>\t\n \n@@ -1126,8 +1126,13 @@ under the License.\n               <dependency>\n                 <groupId>net.tirasa.connid.bundles.db</groupId>\n                 <artifactId>net.tirasa.connid.bundles.db.table</artifactId>\n-                <version>${connid.db.table.version}</version>\n+                <version>${connid.database.version}</version>\n               </dependency>   \n+              <dependency>\n+                <groupId>net.tirasa.connid.bundles.db</groupId>\n+                <artifactId>net.tirasa.connid.bundles.db.scriptedsql</artifactId>\n+                <version>${connid.database.version}</version>\n+              </dependency>  \n               <artifactItem>\n                 <groupId>net.tirasa.connid.bundles</groupId>\n                 <artifactId>net.tirasa.connid.bundles.ldap</artifactId>"}]}