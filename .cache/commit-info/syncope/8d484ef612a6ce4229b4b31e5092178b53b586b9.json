{"sha":"8d484ef612a6ce4229b4b31e5092178b53b586b9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkNDg0ZWY2MTJhNmNlNDIyOWI0YjMxZTUwOTIxNzhiNTNiNTg2Yjk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-09-21T10:09:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-09-21T10:09:49Z"},"message":"[SYNCOPE-1585] Cleanup","tree":{"sha":"d385e6bf7dd972a3d72edfd504d7a57f357e092b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d385e6bf7dd972a3d72edfd504d7a57f357e092b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8d484ef612a6ce4229b4b31e5092178b53b586b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d484ef612a6ce4229b4b31e5092178b53b586b9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d484ef612a6ce4229b4b31e5092178b53b586b9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d484ef612a6ce4229b4b31e5092178b53b586b9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"147bf78e55f54a0bf8f7088e2e50702fcee6f3ba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/147bf78e55f54a0bf8f7088e2e50702fcee6f3ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/147bf78e55f54a0bf8f7088e2e50702fcee6f3ba"}],"stats":{"total":115,"additions":42,"deletions":73},"files":[{"sha":"fddb6efa73ec071fa449096a78c02cc89ece3470","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/OIDCC4UIConstants.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FOIDCC4UIConstants.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -26,8 +26,6 @@ public final class OIDCC4UIConstants {\n \n     public static final String OIDCC4UI_JWT = \"oidcc4ui.jwt\";\n \n-    public static final String OIDCC4UI_NEW_USER = \"oidcc4ui.newUser\";\n-\n     public static final String OIDCC4UI_SLO_SUPPORTED = \"oidcc4ui.sloSupported\";\n \n     private OIDCC4UIConstants() {"},{"sha":"fbabb3d7a2454f9edb456fbf78897e53e80e2601","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/oidcc4ui/CodeConsumerResource.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Foidcc4ui%2FCodeConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.ui.commons.BaseSession;\n import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.syncope.common.lib.oidc.OIDCConstants;\n@@ -39,16 +40,17 @@\n \n public abstract class CodeConsumerResource extends AbstractResource {\n \n+    private static final long serialVersionUID = -692581789294259519L;\n+\n     protected static final Logger LOG = LoggerFactory.getLogger(CodeConsumerResource.class);\n \n-    private static final ObjectMapper MAPPER =\n+    protected static final ObjectMapper MAPPER =\n             new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n \n-    private static final long serialVersionUID = -692581789294259519L;\n-\n     protected abstract Class<? extends WebPage> getLoginPageClass();\n \n-    protected abstract Class<? extends WebPage> getSelfRegPageClass();\n+    protected abstract Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(UserTO newUser)\n+            throws JsonProcessingException;\n \n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n@@ -69,10 +71,8 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             newUser.getPlainAttrs().addAll(oidcResponse.getAttrs());\n \n             try {\n-                throw new RestartResponseException(\n-                        getSelfRegPageClass(),\n-                        new PageParameters().\n-                                set(OIDCC4UIConstants.OIDCC4UI_NEW_USER, MAPPER.writeValueAsString(newUser)));\n+                Pair<Class<? extends WebPage>, PageParameters> selfRegInfo = getSelfRegInfo(newUser);\n+                throw new RestartResponseException(selfRegInfo.getLeft(), selfRegInfo.getRight());\n             } catch (JsonProcessingException e) {\n                 LOG.error(\"Could not serialize new user {}\", newUser, e);\n                 throw new WicketRuntimeException(e);"},{"sha":"8809e23e48d7c3d491f760acdc6fed0248d54363","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleCodeConsumerResource.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleCodeConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -18,11 +18,14 @@\n  */\n package org.apache.syncope.client.console.resources;\n \n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.pages.OIDCClientLogin;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.syncope.client.ui.commons.resources.oidcc4ui.CodeConsumerResource;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n @Resource(\n         key = OIDCC4UIConstants.URL_CONTEXT + \".codeConsumer\",\n@@ -37,7 +40,7 @@ protected Class<? extends WebPage> getLoginPageClass() {\n     }\n \n     @Override\n-    protected Class<? extends WebPage> getSelfRegPageClass() {\n+    protected Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(final UserTO newUser) {\n         throw new UnsupportedOperationException(\"Self-registration not supported by Admin Console\");\n     }\n }"},{"sha":"8270e99c3db3635ff04d69f128033e6de2cba6dd","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/OIDCClientSelfReg.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/147bf78e55f54a0bf8f7088e2e50702fcee6f3ba/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/147bf78e55f54a0bf8f7088e2e50702fcee6f3ba/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FOIDCClientSelfReg.java?ref=147bf78e55f54a0bf8f7088e2e50702fcee6f3ba","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.pages;\n-\n-import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n-import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class OIDCClientSelfReg extends WebPage {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(OIDCClientSelfReg.class);\n-\n-    private static final long serialVersionUID = -2533879075075645461L;\n-\n-    public OIDCClientSelfReg(final PageParameters parameters) {\n-        super(parameters);\n-\n-        PageParameters params = new PageParameters();\n-        try {\n-            params.add(Self.NEW_USER_PARAM,\n-                    ((ServletWebRequest) getRequest()).getContainerRequest().\n-                            getSession().getAttribute(OIDCC4UIConstants.OIDCC4UI_NEW_USER));\n-        } catch (Exception e) {\n-            LOG.error(\"While getting user data from social registration\", e);\n-\n-            params.add(\"errorMessage\", \"OpenID Connect error - while getting user data from social registration\");\n-        }\n-        setResponsePage(Self.class, params);\n-    }\n-}"},{"sha":"2e7055ca6c32ad3e9584668e21f6d92fa29df2c2","filename":"ext/oidcc4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/EnduserCodeConsumerResource.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserCodeConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -18,12 +18,16 @@\n  */\n package org.apache.syncope.client.enduser.resources;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.enduser.pages.OIDCClientLogin;\n import org.apache.syncope.client.enduser.pages.Self;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.panels.OIDCC4UIConstants;\n import org.apache.syncope.client.ui.commons.resources.oidcc4ui.CodeConsumerResource;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n @Resource(\n         key = OIDCC4UIConstants.URL_CONTEXT + \".codeConsumer\",\n@@ -38,7 +42,9 @@ protected Class<? extends WebPage> getLoginPageClass() {\n     }\n \n     @Override\n-    protected Class<? extends WebPage> getSelfRegPageClass() {\n-        return Self.class;\n+    protected Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(final UserTO newUser)\n+            throws JsonProcessingException {\n+\n+        return Pair.of(Self.class, new PageParameters().add(Self.NEW_USER_PARAM, MAPPER.writeValueAsString(newUser)));\n     }\n }"},{"sha":"073dca6388b6dc90f2f4dd49c1a7eb6ce707423e","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/SAML2SP4UIConstants.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSAML2SP4UIConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSAML2SP4UIConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FSAML2SP4UIConstants.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -30,8 +30,6 @@ public final class SAML2SP4UIConstants {\n \n     public static final String SAML2SP4UI_IDP_ENTITY_ID = \"saml2sp4ui.idpEntityID\";\n \n-    public static final String SAML2SP4UI_NEW_USER = \"saml2sp4ui.newUser\";\n-\n     private SAML2SP4UIConstants() {\n         // private constructor for static utility class\n     }"},{"sha":"b65aac3bea8bf9f59941b4fe7a9c963b0b8bcda7","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/saml2sp4ui/AssertionConsumerResource.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -21,6 +21,7 @@\n import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.ui.commons.BaseSession;\n import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;\n import org.apache.syncope.common.lib.saml2.SAML2LoginResponse;\n@@ -31,17 +32,22 @@\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public abstract class AssertionConsumerResource extends AbstractSAML2SP4UIResource {\n \n     private static final long serialVersionUID = 3858609271031003370L;\n \n-    private static final ObjectMapper MAPPER =\n+    protected static final Logger LOG = LoggerFactory.getLogger(AssertionConsumerResource.class);\n+\n+    protected static final ObjectMapper MAPPER =\n             new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n \n     protected abstract Class<? extends WebPage> getLoginPageClass();\n \n-    protected abstract Class<? extends WebPage> getSelfRegPageClass();\n+    protected abstract Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(UserTO newUser)\n+            throws JsonProcessingException;\n \n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n@@ -54,10 +60,8 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             newUser.getPlainAttrs().addAll(saml2Response.getAttrs());\n \n             try {\n-                throw new RestartResponseException(\n-                        getSelfRegPageClass(),\n-                        new PageParameters().\n-                                set(SAML2SP4UIConstants.SAML2SP4UI_NEW_USER, MAPPER.writeValueAsString(newUser)));\n+                Pair<Class<? extends WebPage>, PageParameters> selfRegInfo = getSelfRegInfo(newUser);\n+                throw new RestartResponseException(selfRegInfo.getLeft(), selfRegInfo.getRight());\n             } catch (JsonProcessingException e) {\n                 LOG.error(\"Could not serialize new user {}\", newUser, e);\n                 throw new WicketRuntimeException(e);"},{"sha":"8f5aa1364dd1d0558a11f5a3ff029ee6366afa46","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleAssertionConsumerResource.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleAssertionConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleAssertionConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FConsoleAssertionConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -18,11 +18,14 @@\n  */\n package org.apache.syncope.client.console.resources;\n \n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.pages.SAML2SPLogin;\n import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.resources.saml2sp4ui.AssertionConsumerResource;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n @Resource(\n         key = SAML2SP4UIConstants.URL_CONTEXT + \".assertionConsumer\",\n@@ -37,7 +40,7 @@ protected Class<? extends WebPage> getLoginPageClass() {\n     }\n \n     @Override\n-    protected Class<? extends WebPage> getSelfRegPageClass() {\n+    protected Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(final UserTO newUser) {\n         throw new UnsupportedOperationException(\"Self-registration not supported by Admin Console\");\n     }\n }"},{"sha":"a072111ad8e0ecd9f7526953b879e2b1e037f302","filename":"ext/saml2sp4ui/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/EnduserAssertionConsumerResource.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserAssertionConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d484ef612a6ce4229b4b31e5092178b53b586b9/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserAssertionConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FEnduserAssertionConsumerResource.java?ref=8d484ef612a6ce4229b4b31e5092178b53b586b9","patch":"@@ -18,12 +18,16 @@\n  */\n package org.apache.syncope.client.enduser.resources;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.enduser.pages.SAML2SPLogin;\n import org.apache.syncope.client.enduser.pages.Self;\n import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.resources.saml2sp4ui.AssertionConsumerResource;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n @Resource(\n         key = SAML2SP4UIConstants.URL_CONTEXT + \".assertionConsumer\",\n@@ -38,7 +42,9 @@ protected Class<? extends WebPage> getLoginPageClass() {\n     }\n \n     @Override\n-    protected Class<? extends WebPage> getSelfRegPageClass() {\n-        return Self.class;\n+    protected Pair<Class<? extends WebPage>, PageParameters> getSelfRegInfo(final UserTO newUser)\n+            throws JsonProcessingException {\n+\n+        return Pair.of(Self.class, new PageParameters().add(Self.NEW_USER_PARAM, MAPPER.writeValueAsString(newUser)));\n     }\n }"}]}