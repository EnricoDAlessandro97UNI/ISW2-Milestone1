{"sha":"dae8e14a747b1501072a6cce991f954e01dc6098","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRhZThlMTRhNzQ3YjE1MDEwNzJhNmNjZTk5MWY5NTRlMDFkYzYwOTg=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-08-11T10:05:03Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-08-11T10:05:03Z"},"message":"More grammatical work on the reference guide","tree":{"sha":"3679370cf09100841de24e21547a5a50620a0379","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3679370cf09100841de24e21547a5a50620a0379"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dae8e14a747b1501072a6cce991f954e01dc6098","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dae8e14a747b1501072a6cce991f954e01dc6098","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dae8e14a747b1501072a6cce991f954e01dc6098","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dae8e14a747b1501072a6cce991f954e01dc6098/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"9aea42ba0b7744a822ec9ca14e6eb5ca0c142455","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9aea42ba0b7744a822ec9ca14e6eb5ca0c142455","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9aea42ba0b7744a822ec9ca14e6eb5ca0c142455"}],"stats":{"total":71,"additions":36,"deletions":35},"files":[{"sha":"ef2cdd41a6ccafe4b817659aaff31e8d3eba5d0a","filename":"src/main/asciidoc/reference-guide/concepts/externalresources.adoc","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dae8e14a747b1501072a6cce991f954e01dc6098/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dae8e14a747b1501072a6cce991f954e01dc6098/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc?ref=dae8e14a747b1501072a6cce991f954e01dc6098","patch":"@@ -23,7 +23,7 @@ Connector Bundles:: The components able to connect to identity stores; not speci\n as they are part of the http://connid.tirasa.net[ConnId^] project.\n Connector Instances:: Instances of connector bundles, obtained by assigning values to the defined configuration \n properties. For instance, there is only a single `DatabaseTable` (the bundle) that can be instantiated\n-several times, for example if there is need to connect to different databases.\n+several times, for example if there is a need to connect to different databases.\n External Resources:: Meant to encapsulate all information about how Apache Syncope will use connector instances for \n provisioning. For each entity supported by the related connector bundle (user, group, printer, services, ...),\n <<mapping,mapping>> information can be specified.\n@@ -46,7 +46,7 @@ be JDBC URL, table name, etc.\n * capabilities - define what operations are allowed on this connector: during <<provisioning,provisioning>>, if a\n certain operation is invoked but the corresponding capability is not set on the related connector instance, no actual\n action is performed on the underlying connector; the capabilities are:\n-** `AUTHENTICATE` - consent <<pass-through-authentication, pass-through authentication>>\n+** `AUTHENTICATE` - consent to <<pass-through-authentication, pass-through authentication>>\n ** `CREATE` - create objects on the underlying connector\n ** `UPDATE` - update objects on the underlying connector\n ** `DELETE` - delete objects on the underlying connector\n@@ -61,16 +61,16 @@ action is performed on the underlying connector; the capabilities are:\n Capabilities and individual configuration properties can be set for _override_: in this case, all the external resources\n using the given connector instance will have the chance to override some configuration values, or the capabilities set.\n \n-This can be useful when the same connector instance is shared among different resources, with small difference in the\n+This can be useful when the same connector instance is shared among different resources, with little difference in the\n required configuration or capabilities.\n ====\n \n ==== External Resource details\n \n-Given a selected connector instance, the following information is required for defining an external resource:\n+Given a selected connector instance, the following information is required to define an external resource:\n \n * priority - integer value, in use by the default <<propagation,propagation task executor>>\n-* generate random password flag - under some circumstances, password might be mandatory but no actual value could be\n+* generate random password flag - under some circumstances, a password might be mandatory but no actual value could be\n available: with this flag set, a random value will be generated, compliant with the defined\n <<policies-password,password policy>> (if set)\n * propagation actions - which <<propagationactions,actions>> shall be executed during propagation\n@@ -89,27 +89,27 @@ resource\n \n ==== Mapping\n \n-One of the most crucial information to provide, when configuring an external resource, is the mapping between internal\n-and external data. Such information, in fact, plays a key role for <<provisioning,provisioning>>.\n+The mapping between internal and external data is of crucial importance when\n+configuring an external resource. Such information, in fact, plays a key role for <<provisioning,provisioning>>.\n \n [.text-center]\n image::mapping.png[title=\"Sample mapping\",alt=\"Sample mapping\"]\n \n For each of the <<anytype,any types>> supported by the underlying connector, a different mapping is provided.\n \n-Mapping is essentially a collection of _mapping items_ describing the correspondance between an user / group / any\n-object attribute and its counterpart on the identity store represented by the current external resource; each item\n+A mapping is essentially a collection of _mapping items_ describing the correspondance between an user / group / any\n+object attribute and its counterpart on the identity store represented by the current external resource. Each item\n specifies:\n \n-* internal attribute - the <<schema, schema>> acting as source or destination of provisioning operations; must be\n+* internal attribute - the <<schema, schema>> acting as the source or destination of provisioning operations; it must be\n specified by an expression matching one of the following models:\n ** `schema` - resolves to the attribute for the given `schema`, owned by the mapped entity (user, group, any object)\n ** `groups[groupName].schema` - resolves to the attribute for the given `schema`, owned by the group with name\n `groupName`, if a membership for the mapped entity exists\n ** `anyObjects[anyObjectName].schema` - resolves to the attribute for the given `schema`, owned by the any object with\n name `anyObjectName`, if a relationship with the mapped entity exists\n ** `memberships[groupName].schema` - resolves to the attribute for the given `schema`, owned by the membership for group\n-`groupName` of the mapped entity (user, any object), if such membership exists\n+`groupName` of the mapped entity (user, any object), if such a membership exists\n * external attribute - the name of the attribute on the identity store\n * transformers - http://commons.apache.org/proper/commons-jexl/[JEXL^] expression or Java class implementing\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n@@ -120,18 +120,18 @@ https://github.com/apache/syncope/blob/master/core/provisioning-api/src/main/jav\n endif::[]\n ; the purpose is to transform values before they are sent to or received from the underlying connector\n * mandatory condition - http://commons.apache.org/proper/commons-jexl/[JEXL^] expression indicating whether values for \n-this mapping item must be necessarily available or not; compared to simple boolean value, such condition allows to\n-express complex statements like as 'be mandatory only if this other attribute value is above 14', and so on\n+this mapping item must be necessarily available or not; compared to a simple boolean value, such condition allows\n+complex statements to be expressed such as 'be mandatory only if this other attribute value is above 14', and so on\n * remote key flag - should this item be considered as the key value on the identity store?\n-* password flag (users only) - should this item be treated as password value?\n+* password flag (users only) - should this item be treated as the password value?\n * purpose - should this item be considered for <<propagation,propagation>> / <<provisioning-push,push>>,\n <<provisioning-pull,pull>>, both or none? \n \n-Besides items, some more data needs to be specified for a complete mapping:\n+Besides the items documented above, some more data needs to be specified for a complete mapping:\n \n * ConnId `objectClass` - which\n http://connid.tirasa.net/apidocs/1.4/org/identityconnectors/framework/common/objects/ObjectClass.html[object class^]\n-shall be used during communication with identity store; predefined are `\\\\__ACCOUNT__` for users and \n+shall be used during communication with the identity store; predefined are `\\\\__ACCOUNT__` for users and \n `\\\\__GROUP__` for groups\n * Object link - only required by some connector bundles as\n https://connid.atlassian.net/wiki/display/BASE/LDAP[LDAP^] and\n@@ -140,7 +140,7 @@ for generating the DN (distinguished name) values\n \n .Mapping items\n ====\n-The following mapping item binds mandatory the internal `name` schema with external attribute `cn` for both \n+The following mapping item binds the mandatory internal `name` schema with the external attribute `cn` for both \n propagation / push and pull.\n \n [source,json]\n@@ -156,9 +156,9 @@ propagation / push and pull.\n }\n ----\n \n-The following mapping item binds optional the internal `aLong` schema for the membership of the `additional` group\n-with external attribute `age` for propagation / push only; moreover, specifies JEXL expression which appends `.0`\n-to the selected `aLong` value before sending out to the underlying connector.\n+The following mapping item binds the optional internal `aLong` schema for the membership of the `additional` group\n+with the external attribute `age` for propagation / push only; in addition, it specifies a JEXL expression which appends `.0`\n+to the selected `aLong` value before sending it out to the underlying connector.\n \n [source,json]\n ----"},{"sha":"044f196e3b37ebbbc1a2b179009edf7a0738dd61","filename":"src/main/asciidoc/reference-guide/concepts/typemanagement.adoc","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dae8e14a747b1501072a6cce991f954e01dc6098/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dae8e14a747b1501072a6cce991f954e01dc6098/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc?ref=dae8e14a747b1501072a6cce991f954e01dc6098","patch":"@@ -82,31 +82,32 @@ evaluating the related JEXL expression\n \n ===== Virtual\n \n-Virtual attributes are somehow linked from identity stores rather than kept internally.\n+Virtual attributes are somehow linked from identity stores rather than stored internally.\n \n-The typical use case is when attribute values can change on identity store without notice, and there is need of \n-having always access to the most recent available values.\n+The typical use case is when attribute values can change in the identity store without notice, and it is required to\n+always have access to the most recent values that are available.\n \n-It can also be said that virtual schemas are for attributes whose ownership is not of Syncope but of identity stores;\n+It can also be said that virtual schemas are for attributes whose ownership is not that of Syncope but of an identity store;\n the external resources for such identity stores are said to be the _linking resources_.\n \n [TIP]\n As best practice, only attributes for which Apache Syncope retains ownership should be modeled as plain attributes;\n-others should be virtual, instead.\n+attributes for which Apache Syncope does not retain ownership should be modeled\n+as virtual instead.\n \n-When defining a virtual schema, the following information is to be provided:\n+When defining a virtual schema, the following information must be provided:\n \n * External resource - linking resource\n-* External attribute - attribute to be linked on external resource\n-* Any Type - reference <<anytype,Any Type>> on external resource\n-* Read-only flag - whether the external attribute value(s) for this schema can only be read, or written too\n+* External attribute - attribute to be linked on the external resource\n+* Any Type - reference <<anytype,Any Type>> on the external resource\n+* Read-only flag - whether the external attribute value(s) for this schema can only be read, or whether they can be written to as well\n \n .Virtual Attribute Cache\n ****\n For performance optimization, virtual attributes are managed by an internal cache to control the actual access to \n the linked identity stores.\n \n-The actual cache implements the \n+The internal cache implements the \n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/cache/VirAttrCache.java[VirAttrCache^]\n endif::[]\n@@ -136,7 +137,7 @@ endif::[]\n ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n https://github.com/apache/syncope/blob/master/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/DisabledVirAttrCache.java[DisabledVirAttrCache^]\n endif::[]\n-| Pass-through cache which actually does not provide any caching: use when actual access to identity store is required.\n+| Pass-through cache which actually does not provide any caching: use when direct access to the identity store is required.\n \n |===\n ****\n@@ -153,7 +154,7 @@ given user / group / any object instance) and for <<type-extensions,type extensi\n Any types represent the type of identities that Apache Syncope is able to manage; besides the predefined `USER` and \n `GROUP`, more types can be created to model workstations, printers, folders, sensors, services, ...\n \n-For all any types defined, a set of <<anytypeclass, classes>> can be selected so that instances af a given any type will\n+For all any defined types, a set of <<anytypeclass, classes>> can be selected so that instances af a given any type will\n be enabled to populate attributes for schemas in those classes.\n \n .Any types and attributes allowed for users, groups and any objects\n@@ -251,7 +252,7 @@ increase readability):\n \n ==== RelationshipType\n \n-Relationships allow to create a link between an user and an any object, or between two any objects; relationship types\n+Relationships allow the creation of a link between a user and an any object, or between two any objects; relationship types\n define the available link types.\n \n .Relationship between any objects (printers)\n@@ -294,14 +295,14 @@ The following any object of type `PRINTER` contains a relationship of type `neig\n \n ==== Type Extensions\n \n-When an user (or an any object) is part of a group, a _membership_ is defined.\n+When a user (or an any object) is part of a group, a _membership_ is defined.\n \n It is sometimes useful to define attributes which are bound to a particular membership: if, for example, the\n `University A` and `University B` groups are available, a student might have different e-mail addresses for each\n university. How can this be modeled?\n \n Type extensions define a set of <<anytypeclass,classes>> associated to a group, that can be automatically\n-assigned to a given user (or any object) when becoming member of such group.\n+assigned to a given user (or any object) when becoming a member of such group.\n \n .Membership with type extension\n ===="}]}