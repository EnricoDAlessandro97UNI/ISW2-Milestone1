{"sha":"9e09aa1288e78b68cd48c60f26af93d7c427b136","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllMDlhYTEyODhlNzhiNjhjZDQ4YzYwZjI2YWY5M2Q3YzQyN2IxMzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-02T15:37:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-08T11:32:48Z"},"message":"White noise","tree":{"sha":"21b1967a9eb1ffb910ede1e3f1f5c3319c9a59d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/21b1967a9eb1ffb910ede1e3f1f5c3319c9a59d3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9e09aa1288e78b68cd48c60f26af93d7c427b136","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e09aa1288e78b68cd48c60f26af93d7c427b136","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e09aa1288e78b68cd48c60f26af93d7c427b136","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e09aa1288e78b68cd48c60f26af93d7c427b136/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2e7e2ceef339fe243de2c688200e4010d46b8776","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2e7e2ceef339fe243de2c688200e4010d46b8776","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2e7e2ceef339fe243de2c688200e4010d46b8776"}],"stats":{"total":15,"additions":3,"deletions":12},"files":[{"sha":"f443c1d7843785389a705b6d00806edfc34db610","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/component/PropagateComponent.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fcomponent%2FPropagateComponent.java?ref=9e09aa1288e78b68cd48c60f26af93d7c427b136","patch":"@@ -58,6 +58,7 @@ public PropagateComponent() {\n         super(PropagateEndpoint.class);\n     }\n \n+    @Override\n     protected Endpoint createEndpoint(final String uri, final String remaining,\n             final Map<String, Object> parameters) throws Exception {\n         PropagateType type = PropagateType.valueOf(remaining);"},{"sha":"8193e3e5ef981af637eda843eeae4db9a8b91da4","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/CreateProducer.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java?ref=9e09aa1288e78b68cd48c60f26af93d7c427b136","patch":"@@ -70,11 +70,6 @@ public void process(final Exchange exchange) throws Exception {\n             } else if (actual instanceof AnyTO) {\n                 WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n \n-                AnyTypeKind anyTypeKind = AnyTypeKind.GROUP;\n-                if (actual instanceof AnyObjectTO) {\n-                    anyTypeKind = AnyTypeKind.ANY_OBJECT;\n-                }\n-\n                 if (actual instanceof GroupTO && isPull()) {\n                     Map<String, String> groupOwnerMap = exchange.getProperty(\"groupOwnerMap\", Map.class);\n                     AttrTO groupOwner = ((GroupTO) actual).getPlainAttrMap().get(StringUtils.EMPTY);\n@@ -93,7 +88,7 @@ public void process(final Exchange exchange) throws Exception {\n                     exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), null));\n                 } else {\n                     List<PropagationTask> tasks = getPropagationManager().getCreateTasks(\n-                            anyTypeKind,\n+                            actual instanceof AnyObjectTO ? AnyTypeKind.ANY_OBJECT : AnyTypeKind.GROUP,\n                             created.getResult(),\n                             created.getPropByRes(),\n                             ((AnyTO) actual).getVirAttrs(),"},{"sha":"68fbd0ea730084ce9d3f08e01860610bd228313d","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/UpdateProducer.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e09aa1288e78b68cd48c60f26af93d7c427b136/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java?ref=9e09aa1288e78b68cd48c60f26af93d7c427b136","patch":"@@ -66,13 +66,8 @@ public void process(final Exchange exchange) throws Exception {\n             } else if (actual instanceof AnyPatch) {\n                 WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n \n-                AnyTypeKind anyTypeKind = AnyTypeKind.GROUP;\n-                if (actual instanceof AnyObjectPatch) {\n-                    anyTypeKind = AnyTypeKind.ANY_OBJECT;\n-                }\n-\n                 List<PropagationTask> tasks = getPropagationManager().getUpdateTasks(\n-                        anyTypeKind,\n+                        actual instanceof AnyObjectPatch ? AnyTypeKind.ANY_OBJECT : AnyTypeKind.GROUP,\n                         updated.getResult(),\n                         false,\n                         null,"}]}