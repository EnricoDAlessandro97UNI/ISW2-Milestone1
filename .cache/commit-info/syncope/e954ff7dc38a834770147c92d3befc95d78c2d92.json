{"sha":"e954ff7dc38a834770147c92d3befc95d78c2d92","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU5NTRmZjdkYzM4YTgzNDc3MDE0N2M5MmQzYmVmYzk1ZDc4YzJkOTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-12-30T14:04:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-12-30T14:47:25Z"},"message":"More Swagger friendliness","tree":{"sha":"3e65109e043b79fbf12668efbadd287c91a5dddf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3e65109e043b79fbf12668efbadd287c91a5dddf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e954ff7dc38a834770147c92d3befc95d78c2d92","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e954ff7dc38a834770147c92d3befc95d78c2d92","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e954ff7dc38a834770147c92d3befc95d78c2d92","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e954ff7dc38a834770147c92d3befc95d78c2d92/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"31fe2a6033456b6d63a1773c5002daf14888b895","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31fe2a6033456b6d63a1773c5002daf14888b895","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/31fe2a6033456b6d63a1773c5002daf14888b895"}],"stats":{"total":36,"additions":20,"deletions":16},"files":[{"sha":"1f9f9a0ec5c9ce4e66b0e752526a7a8dfc1b6018","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":16,"deletions":14,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e954ff7dc38a834770147c92d3befc95d78c2d92/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e954ff7dc38a834770147c92d3befc95d78c2d92/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=e954ff7dc38a834770147c92d3befc95d78c2d92","patch":"@@ -38,33 +38,34 @@\n /**\n  * REST operations for attribute schemas.\n  */\n-@Path(\"schemas/{type}\")\n+@Path(\"schemas\")\n public interface SchemaService extends JAXRSService {\n \n     /**\n-     * Returns schema matching the given type and key.\n+     * Returns a list of schemas matching the given query.\n      *\n      * @param <T> actual SchemaTO\n-     * @param type type for schemas to be read\n-     * @param key name of schema to be read\n-     * @return schema matching the given type and name\n+     * @param query query conditions\n+     * @return list of schemas with matching type, for the given anyTypeClass if provided\n      */\n     @GET\n-    @Path(\"{key}\")\n+    @Path(\"{type}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    <T extends AbstractSchemaTO> T read(\n-            @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n+    <T extends AbstractSchemaTO> List<T> list(@BeanParam SchemaQuery query);\n \n     /**\n-     * Returns a list of schemas matching the given query.\n+     * Returns schema matching the given type and key.\n      *\n      * @param <T> actual SchemaTO\n-     * @param query query conditions\n-     * @return list of schemas with matching type, for the given anyTypeClass if provided\n+     * @param type type for schemas to be read\n+     * @param key name of schema to be read\n+     * @return schema matching the given type and name\n      */\n     @GET\n+    @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    <T extends AbstractSchemaTO> List<T> list(@BeanParam SchemaQuery query);\n+    <T extends AbstractSchemaTO> T read(\n+            @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Creates a new schema.\n@@ -74,6 +75,7 @@ <T extends AbstractSchemaTO> T read(\n      * @return Response object featuring Location header of created schema\n      */\n     @POST\n+    @Path(\"{type}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n@@ -84,7 +86,7 @@ <T extends AbstractSchemaTO> T read(\n      * @param schemaTO updated schema to be stored\n      */\n     @PUT\n-    @Path(\"{key}\")\n+    @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n@@ -95,6 +97,6 @@ <T extends AbstractSchemaTO> T read(\n      * @param key name of schema to be deleted\n      */\n     @DELETE\n-    @Path(\"{key}\")\n+    @Path(\"{type}/{key}\")\n     void delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"28b8932581770bc3368d0903d1626861ebc35a66","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e954ff7dc38a834770147c92d3befc95d78c2d92/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e954ff7dc38a834770147c92d3befc95d78c2d92/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=e954ff7dc38a834770147c92d3befc95d78c2d92","patch":"@@ -33,7 +33,7 @@\n /**\n  * REST operations for workflow definition.\n  */\n-@Path(\"workflows/{anyTypeKind}\")\n+@Path(\"workflows\")\n public interface WorkflowService extends JAXRSService {\n \n     /**\n@@ -43,6 +43,7 @@ public interface WorkflowService extends JAXRSService {\n      * @return workflow definition for matching kind\n      */\n     @GET\n+    @Path(\"{anyTypeKind}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response exportDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n@@ -53,7 +54,7 @@ public interface WorkflowService extends JAXRSService {\n      * @return workflow diagram representation\n      */\n     @GET\n-    @Path(\"diagram.png\")\n+    @Path(\"{anyTypeKind}/diagram.png\")\n     @Produces({ RESTHeaders.MEDIATYPE_IMAGE_PNG })\n     Response exportDiagram(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n@@ -64,6 +65,7 @@ public interface WorkflowService extends JAXRSService {\n      * @param definition workflow definition for matching kind\n      */\n     @PUT\n+    @Path(\"{anyTypeKind}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     void importDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull String definition);\n "}]}