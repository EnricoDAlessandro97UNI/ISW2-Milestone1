{"sha":"09035d492076df4bbf98072e41cd8211a79bace9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA5MDM1ZDQ5MjA3NmRmNGJiZjk4MDcyZTQxY2Q4MjExYTc5YmFjZTk=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:22:23Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:22:23Z"},"message":"sonar: fix unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332756 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"71c86faa8902443008c025586087633fd116b530","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/71c86faa8902443008c025586087633fd116b530"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/09035d492076df4bbf98072e41cd8211a79bace9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09035d492076df4bbf98072e41cd8211a79bace9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/09035d492076df4bbf98072e41cd8211a79bace9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09035d492076df4bbf98072e41cd8211a79bace9/comments","author":null,"committer":null,"parents":[{"sha":"cd2883c14453e10e99d3df700032ac83f43adf08","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cd2883c14453e10e99d3df700032ac83f43adf08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cd2883c14453e10e99d3df700032ac83f43adf08"}],"stats":{"total":82,"additions":58,"deletions":24},"files":[{"sha":"8ea121e53a5efb34996bb659e969d8aca946087c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MAttrUniqueValue.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -54,6 +54,9 @@ public <T extends AbstractAttr> T getAttribute() {\n \n     @Override\n     public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof MAttr)) {\n+            throw new ClassCastException(\"expected type MAttr, found: \" + attribute.getClass().getName());\n+        }\n         this.attribute = (MAttr) attribute;\n     }\n \n@@ -64,6 +67,10 @@ public <T extends AbstractSchema> T getSchema() {\n \n     @Override\n     public <T extends AbstractSchema> void setSchema(final T schema) {\n+                if (!(schema instanceof MSchema)) {\n+            throw new ClassCastException(\"expected type MSchema, found: \" + schema.getClass().getName());\n+        }\n+\n         this.schema = (MSchema) schema;\n     }\n }"},{"sha":"bf445bea0a28fa7ac9a7280daeff25bad5b13ea8","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MDerAttr.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -29,10 +29,8 @@\n public class MDerAttr extends AbstractDerAttr {\n \n     private static final long serialVersionUID = -443509121923448129L;\n-\n     @ManyToOne\n     private Membership owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER)\n     private MDerSchema derivedSchema;\n \n@@ -43,6 +41,9 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof Membership)) {\n+            throw new ClassCastException(\"expected type Membership, found: \" + owner.getClass().getName());\n+        }\n         this.owner = (Membership) owner;\n     }\n \n@@ -53,7 +54,9 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n \n     @Override\n     public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n-\n+        if (!(derivedSchema instanceof MDerSchema)) {\n+            throw new ClassCastException(\"expected type MDerSchema, found: \" + derivedSchema.getClass().getName());\n+        }\n         this.derivedSchema = (MDerSchema) derivedSchema;\n     }\n }"},{"sha":"bde7f8cf57960091b30f88a8bfc983190fdfc4df","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MVirAttr.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -31,10 +31,8 @@\n public class MVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = 7774760571251641332L;\n-\n     @ManyToOne\n     private Membership owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER)\n     private MVirSchema virtualSchema;\n \n@@ -45,6 +43,10 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof Membership)) {\n+            throw new ClassCastException(\"expected type Membership, found: \" + owner.getClass().getName());\n+        }\n+\n         this.owner = (Membership) owner;\n     }\n \n@@ -55,7 +57,9 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n \n     @Override\n     public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n-\n+        if (!(virtualSchema instanceof MVirSchema)) {\n+            throw new ClassCastException(\"expected type MVirSchema, found: \" + virtualSchema.getClass().getName());\n+        }\n         this.virtualSchema = (MVirSchema) virtualSchema;\n     }\n "},{"sha":"05a65987285e17decdbaaf08275045a63558121f","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RAttrUniqueValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -31,13 +31,10 @@\n public class RAttrUniqueValue extends AbstractAttrUniqueValue {\n \n     private static final long serialVersionUID = 4681561795607192855L;\n-\n     @Id\n     private Long id;\n-\n     @OneToOne(optional = false)\n     private RAttr attribute;\n-\n     @ManyToOne(optional = false)\n     @JoinColumn(name = \"schema_name\")\n     private RSchema schema;\n@@ -54,6 +51,9 @@ public <T extends AbstractAttr> T getAttribute() {\n \n     @Override\n     public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof RAttr)) {\n+            throw new ClassCastException(\"expected type RAttr, found: \" + attribute.getClass().getName());\n+        }\n         this.attribute = (RAttr) attribute;\n     }\n \n@@ -64,6 +64,9 @@ public <T extends AbstractSchema> T getSchema() {\n \n     @Override\n     public <T extends AbstractSchema> void setSchema(final T schema) {\n+        if (!(schema instanceof RSchema)) {\n+            throw new ClassCastException(\"expected type RSchema, found: \" + schema.getClass().getName());\n+        }\n         this.schema = (RSchema) schema;\n     }\n }"},{"sha":"399cea8d2ab89b52bf08bf783803b5fa3daad137","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RDerAttr.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -29,10 +29,8 @@\n public class RDerAttr extends AbstractDerAttr {\n \n     private static final long serialVersionUID = 8007080005675899946L;\n-\n     @ManyToOne\n     private SyncopeRole owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     private RDerSchema derivedSchema;\n \n@@ -43,6 +41,10 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof SyncopeRole)) {\n+            throw new ClassCastException(\"expected type SyncopeRole, found: \" + owner.getClass().getName());\n+        }\n+\n         this.owner = (SyncopeRole) owner;\n     }\n \n@@ -53,7 +55,9 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n \n     @Override\n     public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n-\n+        if (!(derivedSchema instanceof RDerSchema)) {\n+            throw new ClassCastException(\"expected type RDerSchema, found: \" + derivedSchema.getClass().getName());\n+        }\n         this.derivedSchema = (RDerSchema) derivedSchema;\n     }\n }"},{"sha":"469025b0cd202d274670950d04c6ba4a4195e806","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RVirAttr.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -31,10 +31,8 @@\n public class RVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = -1747430556914428649L;\n-\n     @ManyToOne\n     private SyncopeRole owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER)\n     private RVirSchema virtualSchema;\n \n@@ -45,6 +43,9 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof SyncopeRole)) {\n+            throw new ClassCastException(\"expected type SyncopeRole, found: \" + owner.getClass().getName());\n+        }\n         this.owner = (SyncopeRole) owner;\n     }\n \n@@ -55,7 +56,9 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n \n     @Override\n     public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n-\n+        if (!(virtualSchema instanceof RVirSchema)) {\n+            throw new ClassCastException(\"expected type RVirSchema, found: \" + virtualSchema.getClass().getName());\n+        }\n         this.virtualSchema = (RVirSchema) virtualSchema;\n     }\n "},{"sha":"d52c692dc8e828134d80ad11929989b8365231a0","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UAttrUniqueValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -31,13 +31,10 @@\n public class UAttrUniqueValue extends AbstractAttrUniqueValue {\n \n     private static final long serialVersionUID = -64080804563305387L;\n-\n     @Id\n     private Long id;\n-\n     @OneToOne(optional = false)\n     private UAttr attribute;\n-\n     @ManyToOne(optional = false)\n     @JoinColumn(name = \"schema_name\")\n     private USchema schema;\n@@ -54,6 +51,9 @@ public <T extends AbstractAttr> T getAttribute() {\n \n     @Override\n     public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof UAttr)) {\n+            throw new ClassCastException(\"expected type UAttr, found: \" + attribute.getClass().getName());\n+        }\n         this.attribute = (UAttr) attribute;\n     }\n \n@@ -64,6 +64,9 @@ public <T extends AbstractSchema> T getSchema() {\n \n     @Override\n     public <T extends AbstractSchema> void setSchema(final T schema) {\n+        if (!(schema instanceof USchema)) {\n+            throw new ClassCastException(\"expected type USchema, found: \" + schema.getClass().getName());\n+        }\n         this.schema = (USchema) schema;\n     }\n }"},{"sha":"fef3aea9df3db5651be8b9804e8a1c3a08579867","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UDerAttr.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -29,10 +29,8 @@\n public class UDerAttr extends AbstractDerAttr {\n \n     private static final long serialVersionUID = 4723044452807292060L;\n-\n     @ManyToOne\n     private SyncopeUser owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER)\n     private UDerSchema derivedSchema;\n \n@@ -43,6 +41,10 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof SyncopeUser)) {\n+            throw new ClassCastException(\"expected type SyncopeUser, found: \" + owner.getClass().getName());\n+        }\n+\n         this.owner = (SyncopeUser) owner;\n     }\n \n@@ -53,7 +55,9 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n \n     @Override\n     public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n-\n+        if (!(derivedSchema instanceof UDerSchema)) {\n+            throw new ClassCastException(\"expected type UDerSchema, found: \" + derivedSchema.getClass().getName());\n+        }\n         this.derivedSchema = (UDerSchema) derivedSchema;\n     }\n }"},{"sha":"5f31825938c6465ee577e35d06c896d4a73728f8","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UVirAttr.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09035d492076df4bbf98072e41cd8211a79bace9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java?ref=09035d492076df4bbf98072e41cd8211a79bace9","patch":"@@ -31,10 +31,8 @@\n public class UVirAttr extends AbstractVirAttr {\n \n     private static final long serialVersionUID = 2943450934283989741L;\n-\n     @ManyToOne\n     private SyncopeUser owner;\n-\n     @ManyToOne(fetch = FetchType.EAGER)\n     private UVirSchema virtualSchema;\n \n@@ -45,6 +43,9 @@ public <T extends AbstractAttributable> T getOwner() {\n \n     @Override\n     public <T extends AbstractAttributable> void setOwner(T owner) {\n+        if (!(owner instanceof SyncopeUser)) {\n+            throw new ClassCastException(\"expected type SyncopeUser, found: \" + owner.getClass().getName());\n+        }\n         this.owner = (SyncopeUser) owner;\n     }\n \n@@ -55,7 +56,9 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n \n     @Override\n     public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n-\n+        if (!(virtualSchema instanceof UVirSchema)) {\n+            throw new ClassCastException(\"expected type UVirSchema, found: \" + virtualSchema.getClass().getName());\n+        }\n         this.virtualSchema = (UVirSchema) virtualSchema;\n     }\n "}]}