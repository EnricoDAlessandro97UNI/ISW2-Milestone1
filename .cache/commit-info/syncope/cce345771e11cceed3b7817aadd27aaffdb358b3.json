{"sha":"cce345771e11cceed3b7817aadd27aaffdb358b3","node_id":"C_kwDOJfYA1toAKGNjZTM0NTc3MWUxMWNjZWVkM2I3ODE3YWFkZDI3YWFmZmRiMzU4YjM","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-12-24T11:53:34Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-12-24T11:53:34Z"},"message":"Upgrading CXF, Spring Boot and Wicket Spring Boot (#300)","tree":{"sha":"a0ee253f5762cd54007b6a599ab7272bf1ec9f4a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a0ee253f5762cd54007b6a599ab7272bf1ec9f4a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cce345771e11cceed3b7817aadd27aaffdb358b3","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhxbS+CRBK7hj4Ov3rIwAAAtIIAKMOxgauxmZuWjnMKdZqwNSX\nguxTTMXhhWzB1sS5gt+Pym9Qpp1o2LEt4+J65XJouTlxFR4XPnFEwejWyv1jVlcU\nZm7AfYlatHN2NHFqDmjpIf6AUzXKwCpsOSQFMD7uVjB9tYgHRvo7K0RFfQd/nzj6\nHvlMNaeImgHBYc5vWdA0KIvIgytAP6i6M/VeZ5yG9LYUhAg2WBas2COhlaypPDNH\n56zeNMN2jzj2r4N39TT8sjSXbp4FJUnTgkH2Z4n0kQhwXObxC9anrSKdsqtknA//\n3WeJ+Uls/83iMPRFilsv04RoYvEuHp6TMdZoITjGkLNS3QKKuBC3yCa895VA8fo=\n=23Qw\n-----END PGP SIGNATURE-----\n","payload":"tree a0ee253f5762cd54007b6a599ab7272bf1ec9f4a\nparent c3a433ded9b1dd8df54575cf67c79b2358602a9d\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1640346814 +0100\ncommitter GitHub <noreply@github.com> 1640346814 +0100\n\nUpgrading CXF, Spring Boot and Wicket Spring Boot (#300)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cce345771e11cceed3b7817aadd27aaffdb358b3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cce345771e11cceed3b7817aadd27aaffdb358b3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cce345771e11cceed3b7817aadd27aaffdb358b3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"c3a433ded9b1dd8df54575cf67c79b2358602a9d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3a433ded9b1dd8df54575cf67c79b2358602a9d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c3a433ded9b1dd8df54575cf67c79b2358602a9d"}],"stats":{"total":648,"additions":315,"deletions":333},"files":[{"sha":"ad2ffee7d956817f84a1350aea03769084e30247","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SAML2SPEntityDirectoryPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.wicket.Component.RENDER;\n-\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n import java.util.Collection;"},{"sha":"4c4ec8113f30a11c04d1bd5a749a2a296e7f290f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -189,6 +189,7 @@ public void onEndRequest(final RequestCycle cycle) {\n             try {\n                 AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n \n+                LOG.debug(\"Mounting {} under {}\", resource.getName(), annotation.path());\n                 mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n \n                     protected static final long serialVersionUID = -128426276529456602L;"},{"sha":"72849f1b75dbec04ea737a64fb260726c611b3a8","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -168,6 +168,7 @@ public void onEndRequest(final RequestCycle cycle) {\n             try {\n                 AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n \n+                LOG.debug(\"Mounting {} under {}\", resource.getName(), annotation.path());\n                 mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n \n                     private static final long serialVersionUID = -128426276529456602L;"},{"sha":"6971aa358d7dca525fa825c81c951732f3d41397","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AuthProfileService.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n-import static org.apache.syncope.common.rest.api.service.JAXRSService.PARAM_PAGE;\n-import static org.apache.syncope.common.rest.api.service.JAXRSService.PARAM_SIZE;\n-\n import io.swagger.v3.oas.annotations.Parameter;\n import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.headers.Header;"},{"sha":"7b0ccbbd01c1b9d358d0fbce0e62dc57101a3b4f","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractSearchService.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractSearchService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractSearchService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractSearchService.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import static org.apache.syncope.core.rest.cxf.service.AbstractService.LOG;\n-\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.cxf.jaxrs.ext.search.SearchBean;\n import org.apache.cxf.jaxrs.ext.search.SearchCondition;"},{"sha":"6ab412e842384b39a1e1d6235f827bf844de3505","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/oidcc4ui/ConsoleCodeConsumerResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleCodeConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleCodeConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleCodeConsumerResource.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.resources;\n+package org.apache.syncope.client.console.resources.oidcc4ui;\n \n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.pages.OIDCClientLogin;","previous_filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleCodeConsumerResource.java"},{"sha":"c4400cea6b3482b70bc3abb465e7b85c7e0b8227","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/oidcc4ui/ConsoleLogoutResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Foidcc4ui%2FConsoleLogoutResource.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.resources;\n+package org.apache.syncope.client.console.resources.oidcc4ui;\n \n import org.apache.syncope.client.console.pages.OIDCClientLogout;\n import org.apache.syncope.client.ui.commons.annotations.Resource;","previous_filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleLogoutResource.java"},{"sha":"8c3e0bccdce3a8ecc7048570487ef1107cf57d97","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/resources/saml2sp4ui/AssertionConsumerResource.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fresources%2Fsaml2sp4ui%2FAssertionConsumerResource.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -32,15 +32,11 @@\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public abstract class AssertionConsumerResource extends AbstractSAML2SP4UIResource {\n \n     private static final long serialVersionUID = 3858609271031003370L;\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(AssertionConsumerResource.class);\n-\n     protected static final ObjectMapper MAPPER =\n             new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n "},{"sha":"c7c138503d520b245b7a1c0963bf822980f7c7b6","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/saml2sp4ui/ConsoleAssertionConsumerResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleAssertionConsumerResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleAssertionConsumerResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleAssertionConsumerResource.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.resources;\n+package org.apache.syncope.client.console.resources.saml2sp4ui;\n \n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.pages.SAML2SPLogin;","previous_filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleAssertionConsumerResource.java"},{"sha":"ad5894df3e9c15bb56d39c39218054c2b8cb3740","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/saml2sp4ui/ConsoleLogoutResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2Fsaml2sp4ui%2FConsoleLogoutResource.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.resources;\n+package org.apache.syncope.client.console.resources.saml2sp4ui;\n \n import org.apache.syncope.client.console.pages.SAML2SPBeforeLogout;\n import org.apache.syncope.client.ui.commons.SAML2SP4UIConstants;","previous_filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/resources/ConsoleLogoutResource.java"},{"sha":"55ee22b0a6be8268a276a92fd592c5f246e536d5","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"modified","additions":31,"deletions":14,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -19,20 +19,23 @@\n package org.apache.syncope.fit.buildtools;\n \n import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n-\n import java.util.List;\n-\n import javax.servlet.ServletContext;\n import javax.servlet.ServletException;\n import javax.servlet.ServletRegistration;\n+import javax.sql.DataSource;\n import javax.xml.ws.Endpoint;\n+import net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n import org.apache.cxf.jaxws.EndpointImpl;\n import org.apache.syncope.fit.buildtools.cxf.DateParamConverterProvider;\n+import org.apache.syncope.fit.buildtools.cxf.GreenMailService;\n import org.apache.syncope.fit.buildtools.cxf.ProvisioningImpl;\n+import org.apache.syncope.fit.buildtools.cxf.UserService;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n@@ -44,11 +47,10 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.jdbc.datasource.DriverManagerDataSource;\n \n-@SpringBootApplication(scanBasePackages = \"org.apache.syncope.fit.buildtools\",\n-        exclude = {\n-            ErrorMvcAutoConfiguration.class,\n-            WebMvcAutoConfiguration.class,\n-            HttpMessageConvertersAutoConfiguration.class })\n+@SpringBootApplication(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    WebMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class })\n public class SyncopeBuildToolsApplication extends SpringBootServletInitializer {\n \n     public static void main(final String[] args) {\n@@ -70,9 +72,6 @@ public static void main(final String[] args) {\n     @Autowired\n     private Bus bus;\n \n-    @Autowired\n-    private ProvisioningImpl provisioningImpl;\n-\n     @Autowired\n     private ApplicationContext ctx;\n \n@@ -84,21 +83,39 @@ public DriverManagerDataSource testDataSource() {\n     }\n \n     @Bean\n-    public Endpoint soapProvisioning() {\n-        EndpointImpl soapProvisioning = new EndpointImpl(provisioningImpl);\n+    @Autowired\n+    public Provisioning provisioningImpl(@Qualifier(\"testDataSource\") final DataSource dataSource) {\n+        return new ProvisioningImpl(dataSource);\n+    }\n+\n+    @Bean\n+    @Autowired\n+    public Endpoint soapProvisioning(final Provisioning provisioning) {\n+        EndpointImpl soapProvisioning = new EndpointImpl(provisioning);\n         soapProvisioning.setBus(bus);\n         soapProvisioning.publish(\"/soap\");\n         return soapProvisioning;\n     }\n \n     @Bean\n-    public Server restProvisioning() {\n+    public GreenMailService greenMailService() {\n+        return new GreenMailService();\n+    }\n+\n+    @Bean\n+    public UserService userService() {\n+        return new UserService();\n+    }\n+\n+    @Bean\n+    @Autowired\n+    public Server restProvisioning(final GreenMailService greenMailService, final UserService userService) {\n         SpringJAXRSServerFactoryBean restProvisioning = new SpringJAXRSServerFactoryBean();\n         restProvisioning.setApplicationContext(ctx);\n         restProvisioning.setBus(bus);\n         restProvisioning.setAddress(\"/rest\");\n         restProvisioning.setStaticSubresourceResolution(true);\n-        restProvisioning.setBasePackages(List.of(\"org.apache.syncope.fit.buildtools.cxf\"));\n+        restProvisioning.setServiceBeans(List.of(greenMailService, userService));\n         restProvisioning.setProviders(List.of(new JacksonJsonProvider(), new DateParamConverterProvider()));\n         return restProvisioning.create();\n     }"},{"sha":"0cd5cedd64fb75f2622039e735b8698d5bf18959","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/GreenMailService.java","status":"modified","additions":29,"deletions":3,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailService.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -18,17 +18,43 @@\n  */\n package org.apache.syncope.fit.buildtools.cxf;\n \n+import com.icegreen.greenmail.smtp.InterruptableSmtpServer;\n+import com.icegreen.greenmail.util.GreenMail;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n+import javax.ws.rs.core.Context;\n+import org.apache.cxf.jaxrs.ext.MessageContext;\n+import org.apache.syncope.fit.buildtools.GreenMailStartStopListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n @Path(\"greenMail\")\n-public interface GreenMailService {\n+public class GreenMailService {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GreenMailService.class);\n+\n+    @Context\n+    private MessageContext messageContext;\n \n     @POST\n     @Path(\"start\")\n-    void start();\n+    public void start() {\n+        GreenMail greenMail = (GreenMail) messageContext.getServletContext().\n+                getAttribute(GreenMailStartStopListener.GREENMAIL);\n+        if (greenMail != null) {\n+            ((InterruptableSmtpServer) greenMail.getSmtp()).setRejectRequests(false);\n+            LOG.info(\"SMTP server is accepting requests\");\n+        }\n+    }\n \n     @POST\n     @Path(\"stop\")\n-    void stop();\n+    public void stop() {\n+        GreenMail greenMail = (GreenMail) messageContext.getServletContext().\n+                getAttribute(GreenMailStartStopListener.GREENMAIL);\n+        if (greenMail != null) {\n+            ((InterruptableSmtpServer) greenMail.getSmtp()).setRejectRequests(true);\n+            LOG.info(\"SMTP server is rejecting requests\");\n+        }\n+    }\n }"},{"sha":"b4a455e98f2adac080c41c88fa3b4c78b5c39ebe","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/GreenMailServiceImpl.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3a433ded9b1dd8df54575cf67c79b2358602a9d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3a433ded9b1dd8df54575cf67c79b2358602a9d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FGreenMailServiceImpl.java?ref=c3a433ded9b1dd8df54575cf67c79b2358602a9d","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.buildtools.cxf;\n-\n-import com.icegreen.greenmail.smtp.InterruptableSmtpServer;\n-import com.icegreen.greenmail.util.GreenMail;\n-import javax.ws.rs.core.Context;\n-import org.apache.cxf.jaxrs.ext.MessageContext;\n-import org.apache.syncope.fit.buildtools.GreenMailStartStopListener;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class GreenMailServiceImpl implements GreenMailService {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GreenMailService.class);\n-\n-    @Context\n-    private MessageContext messageContext;\n-\n-    @Override\n-    public void start() {\n-        GreenMail greenMail = (GreenMail) messageContext.getServletContext().\n-                getAttribute(GreenMailStartStopListener.GREENMAIL);\n-        if (greenMail != null) {\n-            ((InterruptableSmtpServer) greenMail.getSmtp()).setRejectRequests(false);\n-            LOG.info(\"SMTP server is accepting requests\");\n-        }\n-    }\n-\n-    @Override\n-    public void stop() {\n-        GreenMail greenMail = (GreenMail) messageContext.getServletContext().\n-                getAttribute(GreenMailStartStopListener.GREENMAIL);\n-        if (greenMail != null) {\n-            ((InterruptableSmtpServer) greenMail.getSmtp()).setRejectRequests(true);\n-            LOG.info(\"SMTP server is rejecting requests\");\n-        }\n-    }\n-}"},{"sha":"e22f2109a84fb4047dbace7768c3d939af9358a1","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/ProvisioningImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -29,7 +29,6 @@\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.annotation.Resource;\n import javax.jws.WebService;\n import javax.sql.DataSource;\n import net.tirasa.connid.bundles.soap.exceptions.ProvisioningException;\n@@ -43,18 +42,19 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n-import org.springframework.stereotype.Service;\n \n @WebService(\n         endpointInterface = \"net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning\",\n         serviceName = \"Provisioning\")\n-@Service\n public class ProvisioningImpl implements Provisioning {\n \n     private static final Logger LOG = LoggerFactory.getLogger(Provisioning.class);\n \n-    @Resource(name = \"testDataSource\")\n-    private DataSource dataSource;\n+    private final DataSource dataSource;\n+\n+    public ProvisioningImpl(final DataSource dataSource) {\n+        this.dataSource = dataSource;\n+    }\n \n     @Override\n     public String delete(final String accountid) throws ProvisioningException {\n@@ -184,7 +184,7 @@ public List<WSUser> query(final Operand query) {\n         try {\n \n             String queryString = \"SELECT * FROM user\" + (Optional.ofNullable(query)\n-                .map(operand -> \" WHERE \" + operand.toString()).orElse(\"\"));\n+                    .map(operand -> \" WHERE \" + operand.toString()).orElse(\"\"));\n \n             queryString = queryString.replaceAll(\"__NAME__\", \"userId\").\n                     replaceAll(\"__UID__\", \"userId\")."},{"sha":"e586d382b510e5dd2423bd936569b24b3bfe6957","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/UserService.java","status":"modified","additions":112,"deletions":9,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserService.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -19,56 +19,159 @@\n package org.apache.syncope.fit.buildtools.cxf;\n \n import java.util.Date;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n import java.util.UUID;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import javax.ws.rs.ClientErrorException;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n+import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.Context;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriInfo;\n \n @Path(\"users\")\n-public interface UserService {\n+public class UserService {\n+\n+    private static final Map<UUID, UserMetadata> USERS = new HashMap<>();\n+\n+    @Context\n+    private UriInfo uriInfo;\n \n     @GET\n     @Produces({ MediaType.APPLICATION_JSON })\n-    List<User> list();\n+    public List<User> list() {\n+        return USERS.values().stream().\n+                filter(meta -> !meta.isDeleted()).\n+                map(UserMetadata::getUser).\n+                collect(Collectors.toList());\n+    }\n \n     @GET\n     @Path(\"changelog\")\n     @Produces({ MediaType.APPLICATION_JSON })\n-    List<UserMetadata> changelog(@QueryParam(\"from\") Date from);\n+    public List<UserMetadata> changelog(@QueryParam(\"from\") final Date from) {\n+        Stream<UserMetadata> users = USERS.values().stream();\n+        if (from != null) {\n+            users = users.filter(meta -> meta.getLastChangeDate().after(from));\n+        }\n+        return users.collect(Collectors.toList());\n+    }\n \n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON })\n-    User read(@PathParam(\"key\") UUID key);\n+    public User read(@PathParam(\"key\") final UUID key) {\n+        UserMetadata meta = USERS.get(key);\n+        if (meta == null || meta.isDeleted()) {\n+            throw new NotFoundException(key.toString());\n+        }\n+        return meta.getUser();\n+    }\n \n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON })\n-    Response create(User user);\n+    public Response create(final User user) {\n+        if (user.getKey() == null) {\n+            user.setKey(UUID.randomUUID());\n+        }\n+        if (user.getStatus() == null) {\n+            user.setStatus(User.Status.ACTIVE);\n+        }\n+\n+        UserMetadata meta = USERS.get(user.getKey());\n+        if (meta != null && !meta.isDeleted()) {\n+            throw new ClientErrorException(\"User already exists: \" + user.getKey(), Response.Status.CONFLICT);\n+        }\n+\n+        meta = new UserMetadata();\n+        meta.setLastChangeDate(new Date());\n+        meta.setUser(user);\n+        USERS.put(user.getKey(), meta);\n+\n+        return Response.created(uriInfo.getAbsolutePathBuilder().path(user.getKey().toString()).build()).build();\n+    }\n \n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON })\n-    void update(@PathParam(\"key\") UUID key, User user);\n+    public void update(@PathParam(\"key\") final UUID key, final User updatedUser) {\n+        UserMetadata meta = USERS.get(key);\n+        if (meta == null || meta.isDeleted()) {\n+            throw new NotFoundException(key.toString());\n+        }\n+\n+        if (updatedUser.getUsername() != null) {\n+            meta.getUser().setUsername(updatedUser.getUsername());\n+        }\n+        if (updatedUser.getPassword() != null) {\n+            meta.getUser().setPassword(updatedUser.getPassword());\n+        }\n+        if (updatedUser.getFirstName() != null) {\n+            meta.getUser().setFirstName(updatedUser.getFirstName());\n+        }\n+        if (updatedUser.getSurname() != null) {\n+            meta.getUser().setSurname(updatedUser.getSurname());\n+        }\n+        if (updatedUser.getEmail() != null) {\n+            meta.getUser().setEmail(updatedUser.getEmail());\n+        }\n+        if (updatedUser.getStatus() != null) {\n+            meta.getUser().setStatus(updatedUser.getStatus());\n+        }\n+\n+        meta.setLastChangeDate(new Date());\n+    }\n \n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@PathParam(\"key\") UUID key);\n+    public void delete(@PathParam(\"key\") final UUID key) {\n+        UserMetadata meta = USERS.get(key);\n+        if (meta == null || meta.isDeleted()) {\n+            throw new NotFoundException(key.toString());\n+        }\n+\n+        meta.setDeleted(true);\n+        meta.setLastChangeDate(new Date());\n+    }\n \n     @POST\n     @Path(\"authenticate\")\n     @Produces({ MediaType.APPLICATION_JSON })\n-    User authenticate(@QueryParam(\"username\") String username, @QueryParam(\"password\") String password);\n+    public User authenticate(\n+            @QueryParam(\"username\") final String username,\n+            @QueryParam(\"password\") final String password) {\n+\n+        Optional<User> user = USERS.values().stream().\n+                filter(meta -> !meta.isDeleted() && username.equals(meta.getUser().getUsername())).\n+                findFirst().map(UserMetadata::getUser);\n+\n+        if (user.isEmpty()) {\n+            throw new NotFoundException(username);\n+        }\n+        if (!password.equals(user.get().getPassword())) {\n+            throw new ForbiddenException();\n+        }\n+\n+        return user.get();\n+    }\n \n     @POST\n     @Path(\"clear\")\n-    void clear();\n+    public void clear() {\n+        USERS.clear();\n+    }\n }"},{"sha":"b671f8e9f663d976f99c876a53436933d443a086","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/UserServiceImpl.java","status":"removed","additions":0,"deletions":153,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3a433ded9b1dd8df54575cf67c79b2358602a9d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3a433ded9b1dd8df54575cf67c79b2358602a9d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FUserServiceImpl.java?ref=c3a433ded9b1dd8df54575cf67c79b2358602a9d","patch":"@@ -1,153 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.buildtools.cxf;\n-\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.UUID;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-import javax.ws.rs.ClientErrorException;\n-import javax.ws.rs.ForbiddenException;\n-import javax.ws.rs.NotFoundException;\n-import javax.ws.rs.core.Context;\n-import javax.ws.rs.core.Response;\n-import javax.ws.rs.core.UriInfo;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class UserServiceImpl implements UserService {\n-\n-    private static final Map<UUID, UserMetadata> USERS = new HashMap<>();\n-\n-    @Context\n-    private UriInfo uriInfo;\n-\n-    @Override\n-    public List<User> list() {\n-        return USERS.values().stream().\n-                filter(meta -> !meta.isDeleted()).\n-                map(UserMetadata::getUser).\n-                collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public List<UserMetadata> changelog(final Date from) {\n-        Stream<UserMetadata> users = USERS.values().stream();\n-        if (from != null) {\n-            users = users.filter(meta -> meta.getLastChangeDate().after(from));\n-        }\n-        return users.collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public User read(final UUID key) {\n-        UserMetadata meta = USERS.get(key);\n-        if (meta == null || meta.isDeleted()) {\n-            throw new NotFoundException(key.toString());\n-        }\n-        return meta.getUser();\n-    }\n-\n-    @Override\n-    public Response create(final User user) {\n-        if (user.getKey() == null) {\n-            user.setKey(UUID.randomUUID());\n-        }\n-        if (user.getStatus() == null) {\n-            user.setStatus(User.Status.ACTIVE);\n-        }\n-\n-        UserMetadata meta = USERS.get(user.getKey());\n-        if (meta != null && !meta.isDeleted()) {\n-            throw new ClientErrorException(\"User already exists: \" + user.getKey(), Response.Status.CONFLICT);\n-        }\n-\n-        meta = new UserMetadata();\n-        meta.setLastChangeDate(new Date());\n-        meta.setUser(user);\n-        USERS.put(user.getKey(), meta);\n-\n-        return Response.created(uriInfo.getAbsolutePathBuilder().path(user.getKey().toString()).build()).build();\n-    }\n-\n-    @Override\n-    public void update(final UUID key, final User updatedUser) {\n-        UserMetadata meta = USERS.get(key);\n-        if (meta == null || meta.isDeleted()) {\n-            throw new NotFoundException(key.toString());\n-        }\n-\n-        if (updatedUser.getUsername() != null) {\n-            meta.getUser().setUsername(updatedUser.getUsername());\n-        }\n-        if (updatedUser.getPassword() != null) {\n-            meta.getUser().setPassword(updatedUser.getPassword());\n-        }\n-        if (updatedUser.getFirstName() != null) {\n-            meta.getUser().setFirstName(updatedUser.getFirstName());\n-        }\n-        if (updatedUser.getSurname() != null) {\n-            meta.getUser().setSurname(updatedUser.getSurname());\n-        }\n-        if (updatedUser.getEmail() != null) {\n-            meta.getUser().setEmail(updatedUser.getEmail());\n-        }\n-        if (updatedUser.getStatus() != null) {\n-            meta.getUser().setStatus(updatedUser.getStatus());\n-        }\n-\n-        meta.setLastChangeDate(new Date());\n-    }\n-\n-    @Override\n-    public void delete(final UUID key) {\n-        UserMetadata meta = USERS.get(key);\n-        if (meta == null || meta.isDeleted()) {\n-            throw new NotFoundException(key.toString());\n-        }\n-\n-        meta.setDeleted(true);\n-        meta.setLastChangeDate(new Date());\n-    }\n-\n-    @Override\n-    public User authenticate(final String username, final String password) {\n-        Optional<User> user = USERS.values().stream().\n-                filter(meta -> !meta.isDeleted() && username.equals(meta.getUser().getUsername())).\n-                findFirst().map(UserMetadata::getUser);\n-\n-        if (user.isEmpty()) {\n-            throw new NotFoundException(username);\n-        }\n-        if (!password.equals(user.get().getPassword())) {\n-            throw new ForbiddenException();\n-        }\n-\n-        return user.get();\n-    }\n-\n-    @Override\n-    public void clear() {\n-        USERS.clear();\n-    }\n-}"},{"sha":"02f55a6c078840a3ede242f461386188324dc213","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AnonymousITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAnonymousITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAnonymousITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAnonymousITCase.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.fit.enduser;\n \n-import static org.apache.syncope.fit.enduser.AbstractEnduserITCase.securityQuestionService;\n-import static org.apache.syncope.fit.enduser.AbstractEnduserITCase.userService;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n "},{"sha":"cd8ce723e7efc685f2c52b5bd7295d4e4e1f4d70","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -120,7 +120,7 @@ protected static Triple<String, String, String> parseSAMLRequestForm(final Strin\n         assertNotEquals(-1, begin);\n         int end = responseBody.indexOf(\"\\\"/>\", begin);\n         assertNotEquals(-1, end);\n-        String relayState = responseBody.substring(begin + 25, end);\n+        String relayState = StringEscapeUtils.unescapeXml(responseBody.substring(begin + 25, end));\n         assertNotNull(relayState);\n \n         begin = responseBody.indexOf(\"name=\\\"SAMLRequest\\\" value=\\\"\");"},{"sha":"f65c2876f7355e5890c86ece20b8e9f2928be200","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/SAML2SRAITCase.java","status":"modified","additions":69,"deletions":39,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -104,21 +104,23 @@ public void web() throws IOException {\n         HttpGet get = new HttpGet(SRA_ADDRESS + \"/public/get?\" + QUERY_STRING);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        CloseableHttpResponse response = httpclient.execute(get, context);\n-\n-        ObjectNode headers = checkGetResponse(response, get.getURI().toASCIIString().replace(\"/public\", \"\"));\n-        assertFalse(headers.has(HttpHeaders.COOKIE));\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            ObjectNode headers = checkGetResponse(response, get.getURI().toASCIIString().replace(\"/public\", \"\"));\n+            assertFalse(headers.has(HttpHeaders.COOKIE));\n+        }\n \n         // 2. protected\n         get = new HttpGet(SRA_ADDRESS + \"/protected/get?\" + QUERY_STRING);\n         String originalRequestURI = get.getURI().toASCIIString();\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        String responseBody;\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n \n         // 2a. post SAML request\n-        String responseBody = EntityUtils.toString(response.getEntity());\n         Triple<String, String, String> parsed = parseSAMLRequestForm(responseBody);\n \n         HttpPost post = new HttpPost(parsed.getLeft());\n@@ -127,22 +129,42 @@ public void web() throws IOException {\n         post.setEntity(new UrlEncodedFormEntity(\n                 List.of(new BasicNameValuePair(\"RelayState\", parsed.getMiddle()),\n                         new BasicNameValuePair(\"SAMLRequest\", parsed.getRight())), Consts.UTF_8));\n-        response = httpclient.execute(post, context);\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+        String location;\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+            location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+        }\n \n         // 2b. authenticate\n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n-        get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n-        get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        post = new HttpPost(location);\n+        post.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n+        post.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n+\n+        boolean isOk = false;\n+        try (CloseableHttpResponse response =\n+                authenticateToCas(\"bellini\", \"password\", responseBody, httpclient, context)) {\n+\n+            switch (response.getStatusLine().getStatusCode()) {\n+                case HttpStatus.SC_OK:\n+                    isOk = true;\n+                    responseBody = EntityUtils.toString(response.getEntity());\n+                    break;\n \n-        responseBody = EntityUtils.toString(response.getEntity());\n-        response = authenticateToCas(\"bellini\", \"password\", responseBody, httpclient, context);\n+                case HttpStatus.SC_MOVED_TEMPORARILY:\n+                    location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+                    break;\n+\n+                default:\n+                    fail();\n+            }\n+        }\n \n         // 2c. WA attribute consent screen\n-        if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n-            responseBody = EntityUtils.toString(response.getEntity());\n+        if (isOk) {\n             String execution = extractCASExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n@@ -156,18 +178,21 @@ public void web() throws IOException {\n             post.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n             post.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n             post.setEntity(new UrlEncodedFormEntity(form, Consts.UTF_8));\n-            response = httpclient.execute(post, context);\n+            try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+                assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue().replace(\":8080\", \":9080\");\n+            }\n         }\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n \n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n+        get = new HttpGet(location);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n \n         // 2d. post SAML response\n-        responseBody = EntityUtils.toString(response.getEntity());\n         parsed = parseSAMLResponseForm(responseBody);\n \n         post = new HttpPost(parsed.getLeft());\n@@ -176,25 +201,28 @@ public void web() throws IOException {\n         post.setEntity(new UrlEncodedFormEntity(\n                 List.of(new BasicNameValuePair(\"RelayState\", parsed.getMiddle()),\n                         new BasicNameValuePair(\"SAMLResponse\", parsed.getRight())), Consts.UTF_8));\n-        response = httpclient.execute(post, context);\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+            location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+        }\n \n         // 2e. finally get requested content\n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n+        get = new HttpGet(location);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-\n-        headers = checkGetResponse(response, originalRequestURI.replace(\"/protected\", \"\"));\n-        assertFalse(headers.get(HttpHeaders.COOKIE).asText().isBlank());\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            ObjectNode headers = checkGetResponse(response, originalRequestURI.replace(\"/protected\", \"\"));\n+            assertFalse(headers.get(HttpHeaders.COOKIE).asText().isBlank());\n+        }\n \n         // 3. logout\n         get = new HttpGet(SRA_ADDRESS + \"/protected/logout\");\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n \n         // 3a. post SAML request\n-        responseBody = EntityUtils.toString(response.getEntity());\n         parsed = parseSAMLRequestForm(responseBody);\n \n         post = new HttpPost(parsed.getLeft());\n@@ -203,15 +231,17 @@ public void web() throws IOException {\n         post.setEntity(new UrlEncodedFormEntity(\n                 List.of(new BasicNameValuePair(\"RelayState\", parsed.getMiddle()),\n                         new BasicNameValuePair(\"SAMLRequest\", parsed.getRight())), Consts.UTF_8));\n-        response = httpclient.execute(post, context);\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+            location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+        }\n \n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n+        get = new HttpGet(location);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-\n         // 3b. check logout\n-        checkLogout(response);\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            checkLogout(response);\n+        }\n     }\n }"},{"sha":"26057e1a104555aa862d1681110bf87506eb812d","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":58,"deletions":31,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -181,40 +181,62 @@ protected void sso(final String baseURL, final String username, final String pas\n \n         // 1. fetch login page\n         HttpGet get = new HttpGet(baseURL);\n-        CloseableHttpResponse response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        }\n \n         // 2. click on the SAML 2.0 IdP\n         get = new HttpGet(baseURL + SAML2SP4UIConstants.URL_CONTEXT\n                 + \"/login?idp=http%3A//localhost%3A9080/syncope-wa/saml\");\n-        response = httpclient.execute(get, context);\n-\n-        // 2a. post SAML request\n-        String responseBody = EntityUtils.toString(response.getEntity());\n+        String responseBody;\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n         Triple<String, String, String> parsed = parseSAMLRequestForm(responseBody);\n \n+        // 2a. post SAML request\n         HttpPost post = new HttpPost(parsed.getLeft());\n         post.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         post.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n         post.setEntity(new UrlEncodedFormEntity(\n                 List.of(new BasicNameValuePair(\"RelayState\", parsed.getMiddle()),\n                         new BasicNameValuePair(\"SAMLRequest\", parsed.getRight())), Consts.UTF_8));\n-        response = httpclient.execute(post, context);\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+        String location;\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+            location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+        }\n \n         // 2b. authenticate\n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n-        get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n-        get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n-\n-        responseBody = EntityUtils.toString(response.getEntity());\n-        response = authenticateToCas(username, password, responseBody, httpclient, context);\n+        post = new HttpPost(location);\n+        post.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n+        post.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n+        post.addHeader(HttpHeaders.REFERER, get.getURI().toASCIIString());\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n+        boolean isOk = false;\n+        try (CloseableHttpResponse response =\n+                authenticateToCas(username, password, responseBody, httpclient, context)) {\n+\n+            switch (response.getStatusLine().getStatusCode()) {\n+                case HttpStatus.SC_OK:\n+                    isOk = true;\n+                    responseBody = EntityUtils.toString(response.getEntity());\n+                    break;\n+\n+                case HttpStatus.SC_MOVED_TEMPORARILY:\n+                    location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+                    break;\n+\n+                default:\n+                    fail();\n+            }\n+        }\n \n         // 2c. WA attribute consent screen\n-        if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n-            responseBody = EntityUtils.toString(response.getEntity());\n+        if (isOk) {\n             String execution = extractCASExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n@@ -228,18 +250,21 @@ protected void sso(final String baseURL, final String username, final String pas\n             post.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n             post.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n             post.setEntity(new UrlEncodedFormEntity(form, Consts.UTF_8));\n-            response = httpclient.execute(post, context);\n+            try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+                assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue().replace(\":8080\", \":9080\");\n+            }\n         }\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n \n-        get = new HttpGet(response.getFirstHeader(HttpHeaders.LOCATION).getValue());\n+        get = new HttpGet(location);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            responseBody = EntityUtils.toString(response.getEntity());\n+        }\n \n         // 2d. post SAML response\n-        responseBody = EntityUtils.toString(response.getEntity());\n         parsed = parseSAMLResponseForm(responseBody);\n \n         post = new HttpPost(parsed.getLeft());\n@@ -248,15 +273,17 @@ protected void sso(final String baseURL, final String username, final String pas\n         post.setEntity(new UrlEncodedFormEntity(\n                 List.of(new BasicNameValuePair(\"RelayState\", parsed.getMiddle()),\n                         new BasicNameValuePair(\"SAMLResponse\", parsed.getRight())), Consts.UTF_8));\n-        response = httpclient.execute(post, context);\n-        assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+        try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n+            assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n+            location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n+        }\n \n         // 3. verify that user is now authenticated\n-        get = new HttpGet(baseURL + StringUtils.removeStart(\n-                response.getFirstHeader(HttpHeaders.LOCATION).getValue(), \"../\"));\n-        response = httpclient.execute(get, context);\n-        assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n-        assertTrue(EntityUtils.toString(response.getEntity()).contains(username));\n+        get = new HttpGet(baseURL + StringUtils.removeStart(location, \"../\"));\n+        try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n+            assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n+            assertTrue(EntityUtils.toString(response.getEntity()).contains(username));\n+        }\n     }\n \n     @Override"},{"sha":"52f72d73e0c030ffa1bdb9eed4ed41ac582052e5","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cce345771e11cceed3b7817aadd27aaffdb358b3/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cce345771e11cceed3b7817aadd27aaffdb358b3/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=cce345771e11cceed3b7817aadd27aaffdb358b3","patch":"@@ -403,13 +403,13 @@ under the License.\n     <connid.scimv11.version>1.0.1</connid.scimv11.version>\n     <connid.servicenow.version>1.0.0</connid.servicenow.version>\n \n-    <cxf.version>3.4.5</cxf.version>\n+    <cxf.version>3.5.0</cxf.version>\n     <bouncycastle.version>1.70</bouncycastle.version>\n     <nimbus-jose-jwt.version>9.15.2</nimbus-jose-jwt.version>\n \n     <jackson.version>2.13.1</jackson.version>\n \n-    <spring-boot.version>2.6.1</spring-boot.version>\n+    <spring-boot.version>2.6.2</spring-boot.version>\n     <spring-cloud-gateway.version>3.1.0</spring-cloud-gateway.version>\n \n     <openjpa.version>3.2.0</openjpa.version>\n@@ -472,7 +472,7 @@ under the License.\n     <wicketstuff.version>9.6.0</wicketstuff.version>\n     <wicket-jqueryui.version>9.5.0</wicket-jqueryui.version>\n     <wicket-bootstrap.version>5.0.6</wicket-bootstrap.version>\n-    <wicket-spring-boot.version>3.0.4</wicket-spring-boot.version>\n+    <wicket-spring-boot.version>3.1.6</wicket-spring-boot.version>\n \n     <antlr4.version>4.9.3</antlr4.version>\n "}]}