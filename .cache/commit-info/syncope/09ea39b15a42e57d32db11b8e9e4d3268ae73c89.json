{"sha":"09ea39b15a42e57d32db11b8e9e4d3268ae73c89","node_id":"C_kwDOJfYA1toAKDA5ZWEzOWIxNWE0MmU1N2QzMmRiMTFiOGU5ZTRkMzI2OGFlNzNjODk","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-04T10:17:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-04T10:17:49Z"},"message":"[SYNCOPE-1545] Allow to bypass approval prompt for OIDC apps","tree":{"sha":"ac69c0a5738b21c8cdc2be17f0f364ede5ee4b7a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ac69c0a5738b21c8cdc2be17f0f364ede5ee4b7a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/09ea39b15a42e57d32db11b8e9e4d3268ae73c89","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09ea39b15a42e57d32db11b8e9e4d3268ae73c89","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/09ea39b15a42e57d32db11b8e9e4d3268ae73c89","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e0a89f05bd43bca4e4f9f9c484ffdde24ab439c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0a89f05bd43bca4e4f9f9c484ffdde24ab439c9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0a89f05bd43bca4e4f9f9c484ffdde24ab439c9"}],"stats":{"total":41,"additions":36,"deletions":5},"files":[{"sha":"80d35821f3562000b1a0f97f73c37b13521f1e92","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/OIDCRPClientAppTO.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCRPClientAppTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCRPClientAppTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCRPClientAppTO.java?ref=09ea39b15a42e57d32db11b8e9e4d3268ae73c89","patch":"@@ -53,6 +53,8 @@ public class OIDCRPClientAppTO extends ClientAppTO {\n \n     private String logoutUri;\n \n+    private boolean bypassApprovalPrompt = true;\n+\n     @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n     @JsonProperty(\"_class\")\n     @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.client.OIDCRPTO\")\n@@ -127,6 +129,14 @@ public void setJwtAccessToken(final boolean jwtAccessToken) {\n         this.jwtAccessToken = jwtAccessToken;\n     }\n \n+    public boolean isBypassApprovalPrompt() {\n+        return bypassApprovalPrompt;\n+    }\n+\n+    public void setBypassApprovalPrompt(final boolean bypassApprovalPrompt) {\n+        this.bypassApprovalPrompt = bypassApprovalPrompt;\n+    }\n+\n     @Override\n     public boolean equals(final Object obj) {\n         if (obj == null) {\n@@ -150,6 +160,7 @@ public boolean equals(final Object obj) {\n                 .append(this.supportedResponseTypes, rhs.supportedResponseTypes)\n                 .append(this.logoutUri, rhs.logoutUri)\n                 .append(this.jwtAccessToken, rhs.jwtAccessToken)\n+                .append(this.bypassApprovalPrompt, rhs.bypassApprovalPrompt)\n                 .isEquals();\n     }\n \n@@ -166,6 +177,7 @@ public int hashCode() {\n                 .append(supportedResponseTypes)\n                 .append(logoutUri)\n                 .append(jwtAccessToken)\n+                .append(bypassApprovalPrompt)\n                 .toHashCode();\n     }\n }"},{"sha":"0667c92f96229a4b018bbb22ab414efdc7bc4fe5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/am/OIDCRPClientApp.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FOIDCRPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FOIDCRPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FOIDCRPClientApp.java?ref=09ea39b15a42e57d32db11b8e9e4d3268ae73c89","patch":"@@ -47,6 +47,10 @@ public interface OIDCRPClientApp extends ClientApp {\n \n     void setJwtAccessToken(boolean jwtAccessToken);\n \n+    boolean isBypassApprovalPrompt();\n+\n+    void setBypassApprovalPrompt(boolean bypassApprovalPrompt);\n+\n     OIDCSubjectType getSubjectType();\n \n     void setSubjectType(OIDCSubjectType subjectType);"},{"sha":"b3acd64705d9b69b25cd7d1f021d45aa992f62b7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/JPAOIDCRPClientApp.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java?ref=09ea39b15a42e57d32db11b8e9e4d3268ae73c89","patch":"@@ -51,6 +51,8 @@ public class JPAOIDCRPClientApp extends AbstractClientApp implements OIDCRPClien\n \n     private boolean jwtAccessToken;\n \n+    private boolean bypassApprovalPrompt = true;\n+\n     @Enumerated(EnumType.STRING)\n     private OIDCSubjectType subjectType;\n \n@@ -124,6 +126,16 @@ public void setJwtAccessToken(final boolean jwtAccessToken) {\n         this.jwtAccessToken = jwtAccessToken;\n     }\n \n+    @Override\n+    public boolean isBypassApprovalPrompt() {\n+        return bypassApprovalPrompt;\n+    }\n+\n+    @Override\n+    public void setBypassApprovalPrompt(final boolean bypassApprovalPrompt) {\n+        this.bypassApprovalPrompt = bypassApprovalPrompt;\n+    }\n+\n     @Override\n     public OIDCSubjectType getSubjectType() {\n         return subjectType;"},{"sha":"c7f87c20aa1a5290430ad9f7d6daeee762b05d2e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ClientAppDataBinderImpl.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java?ref=09ea39b15a42e57d32db11b8e9e4d3268ae73c89","patch":"@@ -140,7 +140,7 @@ protected void doUpdate(final SAML2SPClientApp clientApp, final SAML2SPClientApp\n                 clientAppTO.getEncryptionBlackListedAlgorithms());\n     }\n \n-    protected static void copyToTO(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n+    protected void copyToTO(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n         clientAppTO.setName(clientApp.getName());\n         clientAppTO.setKey(clientApp.getKey());\n         clientAppTO.setDescription(clientApp.getDescription());\n@@ -160,7 +160,7 @@ protected static void copyToTO(final ClientApp clientApp, final ClientAppTO clie\n         clientAppTO.getProperties().addAll(clientApp.getProperties());\n     }\n \n-    protected static SAML2SPClientAppTO getSAMLClientAppTO(final SAML2SPClientApp clientApp) {\n+    protected SAML2SPClientAppTO getSAMLClientAppTO(final SAML2SPClientApp clientApp) {\n         SAML2SPClientAppTO clientAppTO = new SAML2SPClientAppTO();\n         copyToTO(clientApp, clientAppTO);\n \n@@ -208,18 +208,18 @@ protected void doUpdate(final OIDCRPClientApp clientApp, final OIDCRPClientAppTO\n         clientApp.setClientId(clientAppTO.getClientId());\n         clientApp.setSignIdToken(clientAppTO.isSignIdToken());\n         clientApp.setJwtAccessToken(clientAppTO.isJwtAccessToken());\n+        clientApp.setBypassApprovalPrompt(clientAppTO.isBypassApprovalPrompt());\n         clientApp.setSubjectType(clientAppTO.getSubjectType());\n         clientApp.getRedirectUris().clear();\n         clientApp.getRedirectUris().addAll(clientAppTO.getRedirectUris());\n         clientApp.getSupportedGrantTypes().clear();\n         clientApp.getSupportedGrantTypes().addAll(clientAppTO.getSupportedGrantTypes());\n         clientApp.getSupportedResponseTypes().clear();\n         clientApp.getSupportedResponseTypes().addAll(clientAppTO.getSupportedResponseTypes());\n-\n         clientApp.setLogoutUri(clientAppTO.getLogoutUri());\n     }\n \n-    protected static OIDCRPClientAppTO getOIDCClientAppTO(final OIDCRPClientApp clientApp) {\n+    protected OIDCRPClientAppTO getOIDCClientAppTO(final OIDCRPClientApp clientApp) {\n         OIDCRPClientAppTO clientAppTO = new OIDCRPClientAppTO();\n         copyToTO(clientApp, clientAppTO);\n \n@@ -232,6 +232,8 @@ protected static OIDCRPClientAppTO getOIDCClientAppTO(final OIDCRPClientApp clie\n         clientAppTO.getSupportedResponseTypes().addAll(clientApp.getSupportedResponseTypes());\n         clientAppTO.setLogoutUri(clientApp.getLogoutUri());\n         clientAppTO.setJwtAccessToken(clientApp.isJwtAccessToken());\n+        clientAppTO.setBypassApprovalPrompt(clientApp.isBypassApprovalPrompt());\n+\n         return clientAppTO;\n     }\n \n@@ -241,7 +243,7 @@ protected void doUpdate(final CASSPClientApp clientApp, final CASSPClientAppTO c\n         clientApp.setServiceId(clientAppTO.getServiceId());\n     }\n \n-    protected static CASSPClientAppTO getCASClientAppTO(final CASSPClientApp clientApp) {\n+    protected CASSPClientAppTO getCASClientAppTO(final CASSPClientApp clientApp) {\n         CASSPClientAppTO clientAppTO = new CASSPClientAppTO();\n         copyToTO(clientApp, clientAppTO);\n         clientAppTO.setServiceId(clientApp.getServiceId());"},{"sha":"458faabc04be95fc7ee4042067f2641290477168","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/OIDCRPClientAppTOMapper.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/09ea39b15a42e57d32db11b8e9e4d3268ae73c89/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java?ref=09ea39b15a42e57d32db11b8e9e4d3268ae73c89","patch":"@@ -71,6 +71,7 @@ public RegisteredService map(\n             service.setIdTokenSigningAlg(\"none\");\n         }\n         service.setJwtAccessToken(rp.isJwtAccessToken());\n+        service.setBypassApprovalPrompt(rp.isBypassApprovalPrompt());\n         service.setSupportedGrantTypes(rp.getSupportedGrantTypes().stream().\n                 map(OIDCGrantType::name).collect(Collectors.toCollection(HashSet::new)));\n         service.setSupportedResponseTypes(rp.getSupportedResponseTypes().stream()."}]}