{"sha":"e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwYzljMWU0YTlmMzY0MjRmMWQ2MmEyNTliZGJlMGU2ZWUwYjkyZGI=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2021-01-28T06:30:36Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2021-01-28T06:35:42Z"},"message":"[SYNCOPE-1610] reconciliation status: accept moreAttrsToGet also when search by anyKey (#239)","tree":{"sha":"6c77eef88ad5eeb7875591ec2f82b1521741bf5b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c77eef88ad5eeb7875591ec2f82b1521741bf5b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7dad3b04501110e3924226f1af13bb59389d384c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7dad3b04501110e3924226f1af13bb59389d384c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7dad3b04501110e3924226f1af13bb59389d384c"}],"stats":{"total":14,"additions":11,"deletions":3},"files":[{"sha":"bdd3763bf713ba63d650a6e20f50af57718073f0","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","patch":"@@ -219,7 +219,12 @@ private Any<?> getAny(final Provision provision, final String anyKey) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdMEntitlement.RESOURCE_GET_CONNOBJECT + \"')\")\n-    public ReconStatus status(final String anyTypeKey, final String resourceKey, final String anyKey) {\n+    public ReconStatus status(\n+            final String anyTypeKey,\n+            final String resourceKey,\n+            final String anyKey,\n+            final Set<String> moreAttrsToGet) {\n+\n         Provision provision = getProvision(anyTypeKey, resourceKey);\n \n         MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision).\n@@ -237,7 +242,8 @@ public ReconStatus status(final String anyTypeKey, final String resourceKey, fin\n         status.setOnSyncope(getOnSyncope(any, connObjectKeyItem, provision));\n \n         List<ConnectorObject> connObjs = outboundMatcher.match(\n-                connFactory.getConnector(provision.getResource()), any, provision, Optional.empty());\n+                connFactory.getConnector(provision.getResource()), any, provision,\n+                Optional.of(moreAttrsToGet.toArray(new String[] {})));\n         if (!connObjs.isEmpty()) {\n             status.setOnResource(ConnObjectUtils.getConnObjectTO(\n                     outboundMatcher.getFIQL(connObjs.get(0), provision), connObjs.get(0).getAttributes()));"},{"sha":"77461d100ff42e90a65f01019442d46fb574f96d","filename":"core/idm/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReconciliationServiceImpl.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java?ref=e0c9c1e4a9f36424f1d62a259bdbe0e6ee0b92db","patch":"@@ -22,6 +22,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import java.util.Optional;\n import javax.validation.ValidationException;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n@@ -98,7 +99,8 @@ public ReconStatus status(final ReconQuery query) {\n         validate(query);\n \n         if (query.getAnyKey() != null) {\n-            return logic.status(query.getAnyTypeKey(), query.getResourceKey(), query.getAnyKey());\n+            return logic.status(query.getAnyTypeKey(), query.getResourceKey(), query.getAnyKey(),\n+                    Optional.ofNullable(query.getMoreAttrsToGet()).orElse(new HashSet<>()));\n         }\n \n         Pair<Filter, Set<String>> fromFIQL = buildFromFIQL(query);"}]}