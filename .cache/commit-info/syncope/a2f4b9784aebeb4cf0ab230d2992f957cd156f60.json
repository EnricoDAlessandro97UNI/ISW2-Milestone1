{"sha":"a2f4b9784aebeb4cf0ab230d2992f957cd156f60","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyZjRiOTc4NGFlYmViNGNmMGFiMjMwZDI5OTJmOTU3Y2QxNTZmNjA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-06T16:02:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-06T16:02:04Z"},"message":"Bug-Fix: __UID__ will be provided to a connector only and only if __NAME__ attribute value is not equals to AccountId\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247241 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"512129591078de0b177c53b92cee9c1525a48f60","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/512129591078de0b177c53b92cee9c1525a48f60"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a2f4b9784aebeb4cf0ab230d2992f957cd156f60","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2f4b9784aebeb4cf0ab230d2992f957cd156f60","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2f4b9784aebeb4cf0ab230d2992f957cd156f60","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2f4b9784aebeb4cf0ab230d2992f957cd156f60/comments","author":null,"committer":null,"parents":[{"sha":"abf6f8e92af4be8e204f21bde30cf95c60ecf234","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/abf6f8e92af4be8e204f21bde30cf95c60ecf234","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/abf6f8e92af4be8e204f21bde30cf95c60ecf234"}],"stats":{"total":17,"additions":12,"deletions":5},"files":[{"sha":"6a84191419c7e774359bbf138e0fa8fe1599e198","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2f4b9784aebeb4cf0ab230d2992f957cd156f60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2f4b9784aebeb4cf0ab230d2992f957cd156f60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=a2f4b9784aebeb4cf0ab230d2992f957cd156f60","patch":"@@ -570,6 +570,7 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n \n             try {\n                 preparedAttribute = prepareAttribute(mapping, user, password);\n+\n                 if (preparedAttribute.getKey() != null) {\n                     accountId = preparedAttribute.getKey();\n                 }\n@@ -836,22 +837,28 @@ public TaskExec execute(final PropagationTask task) {\n                         // 1. get accountId\n                         final String accountId = task.getAccountId();\n \n-                        // 2. check if accountId is not blank\n-                        if (StringUtils.hasText(accountId)) {\n+                        // 2. get name\n+                        final Name name = (Name) AttributeUtil.find(\n+                                Name.NAME, attributes);\n+\n+                        // 3. check if accountId is not blank and is not equals to Name\n+                        if (StringUtils.hasText(accountId)\n+                                && (name == null\n+                                || !accountId.equals(name.getNameValue()))) {\n \n-                            // 2.a retrieve uid\n+                            // 3.a retrieve uid\n                             final Uid uid = (Uid) AttributeUtil.find(\n                                     Uid.NAME, attributes);\n \n-                            // 2.b add Uid if not provided\n+                            // 3.b add Uid if not provided\n                             if (uid == null) {\n                                 attributes.add(AttributeBuilder.build(\n                                         Uid.NAME,\n                                         Collections.singleton(accountId)));\n                             }\n                         }\n \n-                        // 3. provision entry\n+                        // 4. provision entry\n                         connector.create(\n                                 task.getPropagationMode(),\n                                 ObjectClass.ACCOUNT,"}]}