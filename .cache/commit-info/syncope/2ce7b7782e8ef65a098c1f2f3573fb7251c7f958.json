{"sha":"2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjZTdiNzc4MmU4ZWY2NWEwOThjMWYyZjM1NzNmYjcyNTFjN2Y5NTg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-04T15:46:27Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-04T15:46:27Z"},"message":"bug-fix result execution from modal page\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247179 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"972f5a4908338befbaca7543e8c1e46ca1bb31aa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/972f5a4908338befbaca7543e8c1e46ca1bb31aa"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/comments","author":null,"committer":null,"parents":[{"sha":"a2a278194526b909aff05077d570ac38ff99e663","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2a278194526b909aff05077d570ac38ff99e663","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2a278194526b909aff05077d570ac38ff99e663"}],"stats":{"total":260,"additions":172,"deletions":88},"files":[{"sha":"18f7fc083d9cc39926cea58c4e539b63f60a3ad3","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -94,4 +94,8 @@ public void onComponentTag(final Component component,\n     public String getAjaxIndicatorMarkupId() {\n         return \"veil\";\n     }\n+\n+    public FeedbackPanel getFeedbackPanel() {\n+        return feedbackPanel;\n+    }\n }"},{"sha":"17fca3b1702792a093f2f4317b2c4f6a2d47b48f","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -102,6 +102,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                         Constants.PREF_USERS_ATTRIBUTES_VIEW,\n                         selectedSchemas);\n                 ((Users) callerPageRef.getPage()).setModalResult(true);\n+\n                 window.close(target);\n             }\n "},{"sha":"00d674e89b66b7498e01b29033b572658c152cc9","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -38,7 +38,6 @@\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.commons.Constants;\n import org.syncope.console.pages.panels.AttributesPanel;\n import org.syncope.console.pages.panels.DerivedAttributesPanel;\n import org.syncope.console.pages.panels.ResourcesPanel;\n@@ -139,8 +138,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     }\n \n                     ((Users) callerPageRef.getPage()).setModalResult(true);\n-                    ((Users) callerPageRef.getPage()).getPageParameters().set(\n-                            Constants.PAGEPARAM_CREATE, userTO.getId() == 0);\n+\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     LOG.error(\"While creating or updating user\", e);"},{"sha":"94cef11fdb542aeeb24167ca5e5edb69ade6d6bb","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":25,"deletions":8,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -25,6 +25,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -56,6 +57,7 @@\n import org.syncope.console.commons.SearchConditionWrapper.FilterType;\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n import org.syncope.console.pages.panels.ResultSetPanel;\n+import org.syncope.console.pages.panels.ResultSetPanel.EventDataWrapper;\n import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n@@ -169,12 +171,13 @@ public Users(final PageParameters parameters) {\n         editModalWin.setCookieName(\"edit-modal\");\n         add(editModalWin);\n \n-        final ResultSetPanel searchResult = new ResultSetPanel(\n-                \"searchResult\", true, null, parameters, feedbackPanel);\n+        final ResultSetPanel searchResult =\n+                new ResultSetPanel(\"searchResult\", true, null,\n+                getPageReference());\n         add(searchResult);\n \n-        final ResultSetPanel listResult = new ResultSetPanel(\n-                \"listResult\", false, null, parameters, feedbackPanel);\n+        final ResultSetPanel listResult =\n+                new ResultSetPanel(\"listResult\", false, null, getPageReference());\n         add(listResult);\n \n         // create new user\n@@ -331,13 +334,17 @@ private void doSearch(final AjaxRequestTarget target,\n             return;\n         }\n \n-        resultsetPanel.updateTableContent(searchCond, target);\n+        resultsetPanel.search(searchCond, target);\n     }\n \n     public void setModalResult(final boolean modalResult) {\n         this.modalResult = modalResult;\n     }\n \n+    public boolean isModalResult() {\n+        return modalResult;\n+    }\n+\n     private NodeCond buildSearchCond(\n             final List<SearchConditionWrapper> conditions) {\n \n@@ -628,10 +635,20 @@ private void setWindowClosedReloadCallback(\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                for (ResultSetPanel panel : panels) {\n-                    target.add(panel);\n+                final EventDataWrapper data = new EventDataWrapper();\n+                data.setTarget(target);\n+                data.setCreate(true);\n+\n+                send(getPage(), Broadcast.BREADTH, data);\n+\n+                if (isModalResult()) {\n+                    // reset modal result\n+                    setModalResult(false);\n+                    // set operation succeded\n+                    getSession().info(getString(\"operation_succeded\"));\n+                    // refresh feedback panel\n+                    target.add(feedbackPanel);\n                 }\n-                target.add(feedbackPanel);\n             }\n         });\n     }"},{"sha":"c42d025d61685732524f3b941294893c9760ef34","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":141,"deletions":77,"changes":218,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -18,6 +18,7 @@\n import java.util.List;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -46,7 +47,6 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -60,6 +60,7 @@\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.DisplayAttributesModalPage;\n import org.syncope.console.pages.UserModalPage;\n+import org.syncope.console.pages.Users;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n@@ -74,50 +75,107 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     protected static final Logger LOG =\n             LoggerFactory.getLogger(ResultSetPanel.class);\n \n+    /**\n+     * Edit modal window height.\n+     */\n     private final static int EDIT_MODAL_WIN_HEIGHT = 550;\n \n+    /**\n+     * Edit modal window width.\n+     */\n     private final static int EDIT_MODAL_WIN_WIDTH = 800;\n \n+    /**\n+     * Schemas to be shown modal window height.\n+     */\n     private final static int DISPLAYATTRS_MODAL_WIN_HEIGHT = 350;\n \n+    /**\n+     * Schemas to be shown modal window width.\n+     */\n     private final static int DISPLAYATTRS_MODAL_WIN_WIDTH = 550;\n \n+    /**\n+     * Prefix used to dintinguish between derived and not derived schemas.\n+     */\n     private final static String DERIVED_ATTRIBUTE_PREFIX = \"[D] \";\n \n+    /**\n+     * Prefix used to dintinguish between virtual and not virtual schemas.\n+     */\n     private final static String VIRTUAL_ATTRIBUTE_PREFIX = \"[V] \";\n \n+    /**\n+     * User rest client.\n+     */\n     @SpringBean\n-    private UserRestClient restClient;\n+    private UserRestClient userRestClient;\n \n+    /**\n+     * Schema rest client.\n+     */\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n+    /**\n+     * Application preferences.\n+     */\n     @SpringBean\n     private PreferenceManager preferences;\n \n+    /**\n+     * Role reader for authorizations management.\n+     */\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    private int rows = preferences.getPaginatorRows(\n-            getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+    /**\n+     * Number of rows per page.\n+     */\n+    private int rows;\n \n+    /**\n+     * Container used to refresh table.\n+     */\n     final protected WebMarkupContainer container;\n \n+    /**\n+     * Feedback panel specified by the caller.\n+     */\n     final private FeedbackPanel feedbackPanel;\n \n+    /**\n+     * Specify if results are about a filtered search or not.\n+     * Using this attribute it is possible to use this panel to show results\n+     * about user list and user search.\n+     */\n     private boolean filtered;\n \n+    /**\n+     * Filter used in case of filtered search.\n+     */\n     private NodeCond filter;\n \n+    /**\n+     * Result table.\n+     */\n     private AjaxFallbackDefaultDataTable<UserTO> resultTable;\n \n+    /**\n+     * Data provider used to search for users.\n+     */\n     private UserDataProvider dataProvider;\n \n-    // Modal window for editing user attributes (in search tab)\n+    /**\n+     * Modal window used for user profile editing.\n+     * Global visibility is required ...\n+     */\n     private final ModalWindow editmodal = new ModalWindow(\"editModal\");\n \n-    // Modal window for choosing which attributes to display in tables\n-    private final ModalWindow displaymodal = new ModalWindow(\"displayModal\");\n+    /**\n+     * Owner page.\n+     */\n+    private final Users page;\n \n     final private IModel<List<String>> choosableSchemaNames =\n             new LoadableDetachableModel<List<String>>() {\n@@ -162,22 +220,25 @@ public <T extends AbstractAttributableTO> ResultSetPanel(\n             final String id,\n             final boolean filtered,\n             final NodeCond searchCond,\n-            final PageParameters parameters,\n-            final FeedbackPanel feedbackPanel) {\n+            final PageReference callerRef) {\n         super(id);\n \n         setOutputMarkupId(true);\n \n+        page = (Users) callerRef.getPage();\n+\n         this.filtered = filtered;\n         this.filter = searchCond;\n-        this.feedbackPanel = feedbackPanel;\n+        this.feedbackPanel = page.getFeedbackPanel();\n \n         editmodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editmodal.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n         editmodal.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n         editmodal.setCookieName(\"edit-modal\");\n         add(editmodal);\n \n+        // Modal window for choosing which attributes to display in tables\n+        final ModalWindow displaymodal = new ModalWindow(\"displayModal\");\n         displaymodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         displaymodal.setInitialHeight(DISPLAYATTRS_MODAL_WIN_HEIGHT);\n         displaymodal.setInitialWidth(DISPLAYATTRS_MODAL_WIN_WIDTH);\n@@ -189,30 +250,16 @@ public <T extends AbstractAttributableTO> ResultSetPanel(\n         container.setOutputMarkupId(true);\n         add(container);\n \n-        // search result\n-        dataProvider = new UserDataProvider(restClient, rows, filtered);\n-        dataProvider.setSearchCond(filter);\n-\n-        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n-                \"resultTable\", getColumns(), dataProvider, rows);\n-\n-        if (parameters.get(Constants.PAGEPARAM_CREATE).toBoolean(false)) {\n-            resultTable.setCurrentPage(resultTable.getPageCount() - 1);\n-            parameters.remove(Constants.PAGEPARAM_CREATE);\n-        } else {\n-            resultTable.setCurrentPage(parameters.get(resultTable.getId()\n-                    + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n-        }\n-\n-        resultTable.setOutputMarkupId(true);\n-\n-        resultTable.setCurrentPage(parameters.get(\n-                resultTable.getId()\n-                + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n-\n-        container.add(resultTable);\n+        // ---------------------------\n+        // Result table initialization\n+        // ---------------------------\n+        // preferences and container must be not null to use it ...\n+        updateResultTable(false);\n+        // ---------------------------\n \n-        // select attributes to be displayed\n+        // ---------------------------\n+        // Link to select schemas/columns to be shown\n+        // ---------------------------\n         AjaxLink displayAttrsLink = new IndicatingAjaxLink(\"displayAttrsLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n@@ -229,7 +276,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public Page createPage() {\n                                 return new DisplayAttributesModalPage(\n-                                        getWebPage().getPageReference(),\n+                                        page.getPageReference(),\n                                         choosableSchemaNames,\n                                         displaymodal);\n                             }\n@@ -239,6 +286,8 @@ public Page createPage() {\n             }\n         };\n \n+        // Add class to specify relative position of the link.\n+        // Position depends on result pages number.\n         displayAttrsLink.add(new Behavior() {\n \n             @Override\n@@ -255,14 +304,15 @@ public void onComponentTag(\n             }\n         });\n \n-        setWindowClosedReloadCallback(editmodal, resultTable);\n-        setWindowClosedReloadCallback(displaymodal, resultTable);\n-\n         MetaDataRoleAuthorizationStrategy.authorize(displayAttrsLink, ENABLE,\n                 xmlRolesReader.getAllAllowedRoles(\"Users\", \"changeView\"));\n+\n         container.add(displayAttrsLink);\n+        // ---------------------------\n \n-        // search rows-per-page management\n+        // ---------------------------\n+        // Rows-per-page selector\n+        // ---------------------------\n         final Form paginatorForm = new Form(\"paginator\");\n         container.add(paginatorForm);\n \n@@ -283,25 +333,52 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         Constants.PREF_USERS_PAGINATOR_ROWS,\n                         String.valueOf(rows));\n \n-                resultTable.setItemsPerPage(rows);\n-\n                 final EventDataWrapper data = new EventDataWrapper();\n-                data.setTable(resultTable);\n+//                data.setTable(resultTable);\n                 data.setTarget(target);\n \n                 send(getParent(), Broadcast.BREADTH, data);\n             }\n         });\n         paginatorForm.add(rowsChooser);\n+        // ---------------------------\n+\n+        setWindowClosedReloadCallback(editmodal);\n+        setWindowClosedReloadCallback(displaymodal);\n     }\n \n-    public void updateTableContent(\n+    public void search(\n             final NodeCond searchCond, final AjaxRequestTarget target) {\n         this.filter = searchCond;\n         dataProvider.setSearchCond(filter);\n         target.add(container);\n     }\n \n+    private void updateResultTable(final boolean create) {\n+        // Requires preferences/container attributes not null ...\n+\n+        rows = preferences.getPaginatorRows(\n+                getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+\n+        dataProvider = new UserDataProvider(userRestClient, rows, filtered);\n+        dataProvider.setSearchCond(filter);\n+\n+        final int page = resultTable != null\n+                ? (create\n+                ? resultTable.getPageCount() - 1\n+                : resultTable.getCurrentPage())\n+                : 0;\n+\n+        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n+                \"resultTable\", getColumns(), dataProvider, rows);\n+\n+        resultTable.setCurrentPage(page);\n+\n+        resultTable.setOutputMarkupId(true);\n+\n+        container.addOrReplace(resultTable);\n+    }\n+\n     private List<IColumn<UserTO>> getColumns() {\n         List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n         columns.add(new PropertyColumn(\n@@ -349,7 +426,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     @Override\n                                     public Page createPage() {\n                                         return new UserModalPage(\n-                                                getWebPage().getPageReference(),\n+                                                page.getPageReference(),\n                                                 editmodal,\n                                                 model.getObject());\n                                     }\n@@ -383,7 +460,7 @@ public void populateItem(\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.delete(model.getObject().getId());\n+                            userRestClient.delete(model.getObject().getId());\n                             info(getString(\"operation_succeded\"));\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n@@ -485,32 +562,14 @@ public void onEvent(IEvent<?> event) {\n \n             final EventDataWrapper data = (EventDataWrapper) event.getPayload();\n             final AjaxRequestTarget target = data.getTarget();\n-            final AjaxFallbackDefaultDataTable<UserTO> table = data.getTable();\n-\n-            getPage().getPageParameters().set(\n-                    table.getId() + Constants.PAGEPARAM_CURRENT_PAGE,\n-                    table.getCurrentPage());\n-\n-            rows = preferences.getPaginatorRows(\n-                    getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n-\n-            dataProvider = new UserDataProvider(restClient, rows, filtered);\n-            dataProvider.setSearchCond(filter);\n \n-            resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n-                    \"resultTable\",\n-                    getColumns(),\n-                    dataProvider,\n-                    rows);\n+            updateResultTable(data.isCreate());\n \n-            container.replace(resultTable);\n             target.add(container);\n         }\n     }\n \n-    private void setWindowClosedReloadCallback(\n-            final ModalWindow window,\n-            final AjaxFallbackDefaultDataTable<UserTO> table) {\n+    private void setWindowClosedReloadCallback(final ModalWindow window) {\n \n         window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n@@ -519,30 +578,27 @@ private void setWindowClosedReloadCallback(\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 final EventDataWrapper data = new EventDataWrapper();\n-                data.setTable(table);\n                 data.setTarget(target);\n \n                 send(getParent(), Broadcast.BREADTH, data);\n \n-                getSession().info(getString(\"operation_succeded\"));\n-                target.add(feedbackPanel);\n+                if (page.isModalResult()) {\n+                    // reset modal result\n+                    page.setModalResult(false);\n+                    // set operation succeded\n+                    getSession().info(getString(\"operation_succeded\"));\n+                    // refresh feedback panel\n+                    target.add(feedbackPanel);\n+                }\n             }\n         });\n     }\n \n-    private class EventDataWrapper {\n+    public static class EventDataWrapper {\n \n         private AjaxRequestTarget target;\n \n-        private AjaxFallbackDefaultDataTable<UserTO> table;\n-\n-        public AjaxFallbackDefaultDataTable getTable() {\n-            return table;\n-        }\n-\n-        public void setTable(final AjaxFallbackDefaultDataTable<UserTO> table) {\n-            this.table = table;\n-        }\n+        private boolean create;\n \n         public AjaxRequestTarget getTarget() {\n             return target;\n@@ -551,5 +607,13 @@ public AjaxRequestTarget getTarget() {\n         public void setTarget(final AjaxRequestTarget target) {\n             this.target = target;\n         }\n+\n+        public boolean isCreate() {\n+            return create;\n+        }\n+\n+        public void setCreate(boolean create) {\n+            this.create = create;\n+        }\n     }\n }"}]}