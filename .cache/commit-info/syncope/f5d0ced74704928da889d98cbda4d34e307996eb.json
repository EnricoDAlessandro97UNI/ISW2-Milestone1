{"sha":"f5d0ced74704928da889d98cbda4d34e307996eb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1ZDBjZWQ3NDcwNDkyOGRhODg5ZDk4Y2JkYTRkMzRlMzA3OTk2ZWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-01-28T08:09:58Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-01-28T08:09:58Z"},"message":"[SYNCOPE-1610] Yet another missing usage of moreAttrsToGet","tree":{"sha":"7572dfad8d5e12ebe50a2eee9c8f0e0f997598a5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7572dfad8d5e12ebe50a2eee9c8f0e0f997598a5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f5d0ced74704928da889d98cbda4d34e307996eb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5d0ced74704928da889d98cbda4d34e307996eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5d0ced74704928da889d98cbda4d34e307996eb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5d0ced74704928da889d98cbda4d34e307996eb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"478372eaa790ccaef6c446fcce6990e333cdfbd8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/478372eaa790ccaef6c446fcce6990e333cdfbd8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/478372eaa790ccaef6c446fcce6990e333cdfbd8"}],"stats":{"total":33,"additions":24,"deletions":9},"files":[{"sha":"68c92f2405b7308e9f8212f1d26c501f2e2fbcf2","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=f5d0ced74704928da889d98cbda4d34e307996eb","patch":"@@ -241,9 +241,8 @@ public ReconStatus status(\n         status.setRealm(any.getRealm().getFullPath());\n         status.setOnSyncope(getOnSyncope(any, connObjectKeyItem, provision));\n \n-        List<ConnectorObject> connObjs = outboundMatcher.match(\n-                connFactory.getConnector(provision.getResource()), any, provision,\n-                Optional.of(moreAttrsToGet.toArray(new String[] {})));\n+        List<ConnectorObject> connObjs = outboundMatcher.match(connFactory.getConnector(\n+                provision.getResource()), any, provision, Optional.of(moreAttrsToGet.toArray(new String[] {})));\n         if (!connObjs.isEmpty()) {\n             status.setOnResource(ConnObjectUtils.getConnObjectTO(\n                     outboundMatcher.getFIQL(connObjs.get(0), provision), connObjs.get(0).getAttributes()));\n@@ -422,6 +421,7 @@ public List<ProvisioningReport> push(\n     private List<ProvisioningReport> pull(\n             final Provision provision,\n             final ReconFilterBuilder reconFilterBuilder,\n+            final Set<String> moreAttrsToGet,\n             final PullTaskTO pullTask) {\n \n         if (pullTask.getDestinationRealm() == null || realmDAO.findByFullPath(pullTask.getDestinationRealm()) == null) {\n@@ -435,6 +435,7 @@ private List<ProvisioningReport> pull(\n                     provision,\n                     connFactory.getConnector(provision.getResource()),\n                     reconFilterBuilder,\n+                    moreAttrsToGet,\n                     pullTask));\n             if (!results.isEmpty() && results.get(0).getStatus() == ProvisioningReport.Status.FAILURE) {\n                 sce.getElements().add(results.get(0).getMessage());\n@@ -455,6 +456,7 @@ public List<ProvisioningReport> pull(\n             final String anyTypeKey,\n             final String resourceKey,\n             final String anyKey,\n+            final Set<String> moreAttrsToGet,\n             final PullTaskTO pullTask) {\n \n         Provision provision = getProvision(anyTypeKey, resourceKey);\n@@ -475,6 +477,7 @@ public List<ProvisioningReport> pull(\n                 provision,\n                 new KeyValueReconFilterBuilder(\n                         provision.getMapping().getConnObjectKeyItem().get().getExtAttrName(), connObjectKeyValue),\n+                moreAttrsToGet,\n                 pullTask);\n     }\n \n@@ -491,6 +494,7 @@ public List<ProvisioningReport> pull(\n         return pull(\n                 provision,\n                 new ConstantReconFilterBuilder(filter),\n+                moreAttrsToGet,\n                 pullTask);\n     }\n "},{"sha":"0ff718b0d1f3455cd36b7a6cce53f5d4729bc238","filename":"core/idm/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReconciliationServiceImpl.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReconciliationServiceImpl.java?ref=f5d0ced74704928da889d98cbda4d34e307996eb","patch":"@@ -99,8 +99,11 @@ public ReconStatus status(final ReconQuery query) {\n         validate(query);\n \n         if (query.getAnyKey() != null) {\n-            return logic.status(query.getAnyTypeKey(), query.getResourceKey(), query.getAnyKey(),\n-                    Optional.ofNullable(query.getMoreAttrsToGet()).orElse(new HashSet<>()));\n+            return logic.status(\n+                    query.getAnyTypeKey(),\n+                    query.getResourceKey(),\n+                    query.getAnyKey(),\n+                    Optional.ofNullable(query.getMoreAttrsToGet()).orElse(Set.of()));\n         }\n \n         Pair<Filter, Set<String>> fromFIQL = buildFromFIQL(query);\n@@ -125,7 +128,12 @@ public List<ProvisioningReport> pull(final ReconQuery query, final PullTaskTO pu\n         validate(query);\n \n         if (query.getAnyKey() != null) {\n-            return logic.pull(query.getAnyTypeKey(), query.getResourceKey(), query.getAnyKey(), pullTask);\n+            return logic.pull(\n+                    query.getAnyTypeKey(),\n+                    query.getResourceKey(),\n+                    query.getAnyKey(),\n+                    Optional.ofNullable(query.getMoreAttrsToGet()).orElse(Set.of()),\n+                    pullTask);\n         }\n \n         Pair<Filter, Set<String>> fromFIQL = buildFromFIQL(query);"},{"sha":"bedefd4ee44a025f4f908736b3b46131c29d10de","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopeSinglePullExecutor.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java?ref=f5d0ced74704928da889d98cbda4d34e307996eb","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.common.lib.to.ProvisioningReport;\n import java.util.List;\n+import java.util.Set;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.Connector;\n@@ -32,5 +33,6 @@ List<ProvisioningReport> pull(\n             Provision provision,\n             Connector connector,\n             ReconFilterBuilder reconFilterBuilder,\n+            Set<String> moreAttrsToGet,\n             PullTaskTO pullTaskTO) throws JobExecutionException;\n }"},{"sha":"34d0b750a4f3f301e243c25029c70a34ab0faf48","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SinglePullJobDelegate.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5d0ced74704928da889d98cbda4d34e307996eb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java?ref=f5d0ced74704928da889d98cbda4d34e307996eb","patch":"@@ -68,6 +68,7 @@ public List<ProvisioningReport> pull(\n             final Provision provision,\n             final Connector connector,\n             final ReconFilterBuilder reconFilterBuilder,\n+            final Set<String> moreAttrsToGet,\n             final PullTaskTO pullTaskTO) throws JobExecutionException {\n \n         LOG.debug(\"Executing pull on {}\", provision.getResource());\n@@ -147,8 +148,8 @@ public List<ProvisioningReport> pull(\n             handler.setPullExecutor(this);\n \n             // execute filtered pull\n-            Set<String> moreAttrsToGet = new HashSet<>();\n-            actions.forEach(action -> moreAttrsToGet.addAll(action.moreAttrsToGet(profile, provision)));\n+            Set<String> matg = new HashSet<>(moreAttrsToGet);\n+            actions.forEach(action -> matg.addAll(action.moreAttrsToGet(profile, provision)));\n \n             Stream<? extends Item> mapItems = Stream.concat(\n                     MappingUtils.getPullItems(provision.getMapping().getItems().stream()),\n@@ -158,7 +159,7 @@ public List<ProvisioningReport> pull(\n                     provision.getObjectClass(),\n                     reconFilterBuilder,\n                     handler,\n-                    MappingUtils.buildOperationOptions(mapItems, moreAttrsToGet.toArray(new String[0])));\n+                    MappingUtils.buildOperationOptions(mapItems, matg.toArray(new String[0])));\n \n             try {\n                 setGroupOwners(ghandler);"}]}