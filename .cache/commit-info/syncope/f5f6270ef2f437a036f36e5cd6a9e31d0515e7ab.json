{"sha":"f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1ZjYyNzBlZjJmNDM3YTAzNmYzNmU1Y2Q2YTllMzFkMDUxNWU3YWI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-14T14:55:27Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-14T14:55:27Z"},"message":"[SYNCOPE-860] provides role and group members inspecting feature","tree":{"sha":"5f40e7808e3a0aa70440ffdbe85bc1bde1144d45","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5f40e7808e3a0aa70440ffdbe85bc1bde1144d45"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"befa49c32d73a10f6865d7cc13737c9d7a539d51","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/befa49c32d73a10f6865d7cc13737c9d7a539d51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/befa49c32d73a10f6865d7cc13737c9d7a539d51"}],"stats":{"total":973,"additions":754,"deletions":219},"files":[{"sha":"256df5240803e6d92f69dd920530e80e17538431","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -83,7 +83,11 @@\n     protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n \n     protected AnyDirectoryPanel(final String id, final Builder<A, E> builder) {\n-        super(id, builder);\n+        this(id, builder, true);\n+    }\n+\n+    protected AnyDirectoryPanel(final String id, final Builder<A, E> builder, final boolean wizardInModal) {\n+        super(id, builder, wizardInModal);\n         this.realm = builder.realm;\n         this.type = builder.type;\n         this.fiql = builder.fiql;"},{"sha":"5473ee0af6d0fd363a649a6f43eb3c8ddff8366b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":62,"deletions":47,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -60,8 +60,8 @@ public class AnyObjectDirectoryPanel extends AnyDirectoryPanel<AnyObjectTO, AnyO\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected AnyObjectDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder);\n+    protected AnyObjectDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, wizardInModal);\n     }\n \n     @Override\n@@ -106,8 +106,6 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n                     Arrays.asList(AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION));\n         }\n \n-        setWindowClosedReloadCallback(displayAttributeModal);\n-\n         columns.add(new ActionColumn<AnyObjectTO, String>(new ResourceModel(\"actions\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n@@ -118,24 +116,6 @@ public ActionLinksPanel<AnyObjectTO> getActions(final String componentId, final\n \n                 panel.add(new ActionLink<AnyObjectTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        final IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(new AnyWrapper<>(\n-                                model.getObject()));\n-                        altDefaultModal.setFormModel(formModel);\n-\n-                        target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n-\n-                        altDefaultModal.header(new Model<>(\n-                                getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                        altDefaultModal.show(true);\n-                    }\n-                }, ActionType.MANAGE_RESOURCES, AnyEntitlement.READ.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n-\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n@@ -156,31 +136,12 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                         send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n                     }\n-                }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                                utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n-\n-                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n-                        utilityModal.show(true);\n-                    }\n-                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<AnyObjectTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        target.add(utilityModal.setContent(\n-                                new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n-                        utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n+                    protected boolean statusCondition(final AnyObjectTO modelObject) {\n+                        return addAjaxLink.isVisibleInHierarchy();\n                     }\n-                }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<AnyObjectTO>() {\n+                }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770646L;\n \n@@ -192,13 +153,62 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                           SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                     ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n                 }, ActionType.DELETE, AnyEntitlement.DELETE.getFor(type));\n \n+                if (wizardInModal) {\n+                    panel.add(new ActionLink<AnyObjectTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770645L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                            final IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(\n+                                    new AnyWrapper<>(\n+                                            model.getObject()));\n+                            altDefaultModal.setFormModel(formModel);\n+\n+                            target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+\n+                            altDefaultModal.header(new Model<>(\n+                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                            altDefaultModal.show(true);\n+                        }\n+                    }, ActionType.MANAGE_RESOURCES, AnyEntitlement.READ.getFor(type)).add(\n+                            new ActionLink<AnyObjectTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                            target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                                    utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n+\n+                            utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                            utilityModal.show(true);\n+                        }\n+                    }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<AnyObjectTO>() {\n+\n+                                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                                @Override\n+                                public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                                    target.add(utilityModal.setContent(\n+                                            new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n+                                                    pageRef)));\n+                                    utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n+                                    utilityModal.show(true);\n+                                    target.add(utilityModal);\n+                                }\n+                            }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n+                }\n+\n                 return panel.build(componentId, model.getObject());\n             }\n \n@@ -218,6 +228,11 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                         displayAttributeModal.show(true);\n                     }\n+\n+                    @Override\n+                    protected boolean statusCondition(final Serializable modelObject) {\n+                        return wizardInModal;\n+                    }\n                 }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).add(\n                         new ActionLink<Serializable>() {\n \n@@ -250,8 +265,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<AnyObjectTO>> newInstance(final String id) {\n-            return new AnyObjectDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<AnyObjectTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new AnyObjectDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"04d57ffdefefe52a184880be7103ec8048b28d30","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -61,7 +61,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class AnyPanel extends Panel {\n+public class AnyPanel extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -88,6 +88,17 @@ public AnyPanel(\n             final RealmTO realmTO,\n             final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo,\n             final PageReference pageRef) {\n+        this(id, anyTypeTO, realmTO, formLayoutInfo, true, pageRef);\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n+    public AnyPanel(\n+            final String id,\n+            final AnyTypeTO anyTypeTO,\n+            final RealmTO realmTO,\n+            final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo,\n+            final boolean enableSearch,\n+            final PageReference pageRef) {\n \n         super(id);\n         this.anyTypeTO = anyTypeTO;\n@@ -136,7 +147,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n         accordion.setOutputMarkupId(true);\n-        add(accordion);\n+        add(accordion.setEnabled(enableSearch).setVisible(enableSearch));\n \n         directoryPanel = getDirectoryPanel(\"searchResult\");\n         add(directoryPanel);\n@@ -197,7 +208,7 @@ private AbstractSearchPanel getSearchPanel(final String id) {\n         return panel;\n     }\n \n-    private Panel getDirectoryPanel(final String id) {\n+    protected Panel getDirectoryPanel(final String id) {\n         final Panel panel;\n         final String fiql;\n         switch (anyTypeTO.getKind()) {\n@@ -209,7 +220,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         userTO,\n                         anyTypeTO.getClasses(),\n                         formLayoutInfo.getLeft(),\n@@ -225,7 +236,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         groupTO,\n                         anyTypeTO.getClasses(),\n                         formLayoutInfo.getMiddle(),\n@@ -243,7 +254,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n-                        setFiql(fiql).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                        setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         anyObjectTO,\n                         anyTypeTO.getClasses(),\n                         formLayoutInfo.getRight().get(anyTypeTO.getKey()),"},{"sha":"330590e1f111fde80a0003796de6615812b06c77","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -117,7 +117,7 @@ public DirectoryPanel(final String id, final PageReference pageRef, final boolea\n             private static final long serialVersionUID = -8424727765826509309L;\n \n             @Override\n-            protected WizardMgtPanel<W> newInstance(final String id) {\n+            protected WizardMgtPanel<W> newInstance(final String id, final boolean wizardInModal) {\n                 throw new UnsupportedOperationException(\"Not supported yet.\");\n             }\n         }.setFiltered(false), wizardInModal);\n@@ -160,9 +160,12 @@ protected DirectoryPanel(final String id, final Builder<T, W, E> builder, final\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                DirectoryPanel.EventDataWrapper event = new DirectoryPanel.EventDataWrapper();\n-                event.setTarget(target);\n-                send(DirectoryPanel.this, Broadcast.EXACT, event);\n+                final EventDataWrapper data = new EventDataWrapper();\n+                data.setTarget(target);\n+                data.setRows(rows);\n+\n+                send(DirectoryPanel.this, Broadcast.EXACT, data);\n+\n                 modal.show(false);\n             }\n         });"},{"sha":"3da0f444821bdf1ccd45d7c8633be99b9d4192ec","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":123,"deletions":7,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -25,9 +25,13 @@\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.notifications.NotificationTasks;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.status.StatusModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n@@ -41,17 +45,25 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -65,13 +77,103 @@ public class GroupDirectoryPanel extends AnyDirectoryPanel<GroupTO, GroupRestCli\n \n     private final BaseModal<Serializable> typeExtensionsModal = new BaseModal<>(\"outer\");\n \n-    protected GroupDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder);\n+    protected final BaseModal<Serializable> membersModal = new BaseModal<>(\"outer\");\n+\n+    protected final MembersTogglePanel templates;\n+\n+    protected GroupDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, wizardInModal);\n \n         typeExtensionsModal.size(Modal.Size.Large);\n         addOuterObject(typeExtensionsModal);\n         setWindowClosedReloadCallback(typeExtensionsModal);\n         typeExtensionsModal.addSubmitButton();\n+\n+        addOuterObject(membersModal);\n+        membersModal.size(Modal.Size.Large);\n+\n+        templates = new MembersTogglePanel(page.getPageReference()) {\n+\n+            private static final long serialVersionUID = -8765794727538618705L;\n+\n+            @Override\n+            protected Serializable onApplyInternal(\n+                    final GroupTO groupTO, final String type, final AjaxRequestTarget target) {\n+\n+                final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n+                final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n+\n+                final AnyTypeTO anyTypeTO = typeRestClient.read(type);\n+\n+                ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected Panel getDirectoryPanel(final String id) {\n+\n+                        final Panel panel;\n+\n+                        if (AnyTypeKind.USER.name().equals(type)) {\n+                            String query = SyncopeClient.getUserSearchConditionBuilder().and(\n+                                    SyncopeClient.getUserSearchConditionBuilder().inGroups(groupTO.getKey()),\n+                                    SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n+\n+                            panel = new UserDirectoryPanel.Builder(\n+                                    classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                    setRealm(\"/\").\n+                                    setFiltered(true).\n+                                    setFiql(query).\n+                                    disableCheckBoxes().\n+                                    addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                                            new UserTO(),\n+                                            anyTypeTO.getClasses(),\n+                                            FormLayoutInfoUtils.fetch(typeRestClient.list()).getLeft(),\n+                                            pageRef), false).\n+                                    setWizardInModal(false).build(id);\n+\n+                            MetaDataRoleAuthorizationStrategy.authorize(\n+                                    panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n+                        } else {\n+                            String query = SyncopeClient.getAnyObjectSearchConditionBuilder(type).and(\n+                                    SyncopeClient.getUserSearchConditionBuilder().inGroups(groupTO.getKey()),\n+                                    SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n+\n+                            panel = new AnyObjectDirectoryPanel.Builder(\n+                                    classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                    setRealm(\"/\").\n+                                    setFiltered(true).\n+                                    setFiql(query).\n+                                    disableCheckBoxes().\n+                                    addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                                            new AnyObjectTO(),\n+                                            anyTypeTO.getClasses(),\n+                                            FormLayoutInfoUtils.fetch(typeRestClient.list()).getRight().get(type),\n+                                            pageRef), false).\n+                                    setWizardInModal(false).build(id);\n+\n+                            MetaDataRoleAuthorizationStrategy.authorize(\n+                                    panel, WebPage.RENDER, AnyEntitlement.LIST.getFor(anyTypeTO.getKey()));\n+                        }\n+\n+                        return panel;\n+                    }\n+                };\n+\n+                membersModal.header(new StringResourceModel(\n+                        \"group.members\",\n+                        GroupDirectoryPanel.this,\n+                        Model.of(Pair.of(groupTO, type))));\n+\n+                membersModal.setContent(panel);\n+                membersModal.show(true);\n+                target.add(membersModal);\n+\n+                return null;\n+            }\n+        };\n+\n+        addOuterObject(templates);\n     }\n \n     @Override\n@@ -123,6 +225,20 @@ public ActionLinksPanel<GroupTO> getActions(final String componentId, final IMod\n \n                     private static final long serialVersionUID = -7978723352517770645L;\n \n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        templates.setTargetObject(model.getObject());\n+                        templates.toggle(target, true);\n+                    }\n+\n+                    @Override\n+                    public boolean isIndicatorEnabled() {\n+                        return false;\n+                    }\n+                }, ActionType.MEMBERS, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         IModel<AnyWrapper<GroupTO>> formModel = new CompoundPropertyModel<>(\n@@ -203,7 +319,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                           SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                     ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -220,7 +336,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                           SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                     ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -239,7 +355,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n                             LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                           SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                     ? e.getClass().getName() : e.getMessage());\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n@@ -293,8 +409,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<GroupTO>> newInstance(final String id) {\n-            return new GroupDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<GroupTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new GroupDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"b649c4f71d00b935fccde8afe1a3403088794c4b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -100,8 +100,9 @@ private ListViewPanel(\n             final ActionLinksPanel.Builder<T> actions,\n             final CheckAvailability check,\n             final boolean reuseItem,\n+            final boolean wizardInModal,\n             final IModel<? extends Collection<T>> model) {\n-        super(id);\n+        super(id, wizardInModal);\n         setOutputMarkupId(true);\n \n         this.check = Model.of(check);\n@@ -354,8 +355,9 @@ public boolean evaluate(final T object) {\n         }\n \n         @Override\n-        protected WizardMgtPanel<T> newInstance(final String id) {\n-            return new ListViewPanel<T>(id, items, reference, includes, actions, check, reuseItem, model) {\n+        protected WizardMgtPanel<T> newInstance(final String id, final boolean wizardInModal) {\n+            return new ListViewPanel<T>(\n+                    id, items, reference, includes, actions, check, reuseItem, wizardInModal, model) {\n \n                 private static final long serialVersionUID = 1L;\n "},{"sha":"1b8695c9f976983d3551e693c3ab81412b390baa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MembersTogglePanel.java","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+\n+public abstract class MembersTogglePanel extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -3195479265440591519L;\n+\n+    private GroupTO groupTO;\n+\n+    protected final Form<?> form;\n+\n+    protected final Model<String> typeModel = new Model<>();\n+\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected List<String> load() {\n+            final List<String> res = new ArrayList<>();\n+            CollectionUtils.collect(\n+                    CollectionUtils.select(new AnyTypeRestClient().list(), new Predicate<AnyTypeTO>() {\n+\n+                        @Override\n+                        public boolean evaluate(final AnyTypeTO object) {\n+                            return object.getKind() != AnyTypeKind.GROUP;\n+                        }\n+                    }), EntityTOUtils.<AnyTypeTO>keyTransformer(), res);\n+            return res;\n+        }\n+    };\n+\n+    public MembersTogglePanel(final PageReference pageRef) {\n+        super(\"outer\", \"groupMembers\");\n+        this.pageRef = pageRef;\n+\n+        form = new Form<>(\"membersForm\");\n+        addInnerObject(form);\n+\n+        final FieldPanel<String> type = new AjaxDropDownChoicePanel<>(\"type\", \"type\", typeModel, false).\n+                setChoices(anyTypes).\n+                setStyleSheet(\"form-control\").\n+                setRequired(true);\n+\n+        type.hideLabel();\n+        form.add(type);\n+\n+        form.add(new AjaxSubmitLink(\"changeit\", form) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    onApplyInternal(groupTO, typeModel.getObject(), target);\n+                    toggle(target, false);\n+                } catch (SyncopeClientException e) {\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName()\n+                            : e.getMessage());\n+                    LOG.error(\"While inspecting group memebers of type {}\", typeModel.getObject(), e);\n+                }\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+        });\n+    }\n+\n+    protected abstract Serializable onApplyInternal(\n+            final GroupTO groupTO, final String type, final AjaxRequestTarget target);\n+\n+    public void setTargetObject(final GroupTO groupTO) {\n+        this.groupTO = groupTO;\n+    }\n+}"},{"sha":"e1fbfe1db76253c67843e8e45fe7467babde2c22","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -77,8 +77,8 @@ public ParametersPanel(final String id, final PageReference pageRef) {\n             private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n-            protected WizardMgtPanel<AttrTO> newInstance(final String id) {\n-                return new ParametersPanel(id, this);\n+            protected WizardMgtPanel<AttrTO> newInstance(final String id, final boolean wizardInModal) {\n+                throw new UnsupportedOperationException();\n             }\n         });\n \n@@ -173,7 +173,7 @@ public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                   SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                             ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);"},{"sha":"1bcd7bb2827d7bb78d4f099c7560d31385d31720","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":64,"deletions":1,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -29,6 +29,9 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.RoleDataProvider;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -38,24 +41,33 @@\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n \n public class RoleDirectoryPanel extends DirectoryPanel<RoleTO, RoleWrapper, RoleDataProvider, RoleRestClient> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n     protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n \n+    protected final BaseModal<Serializable> membersModal = new BaseModal<>(\"outer\");\n+\n     protected RoleDirectoryPanel(final String id, final Builder builder) {\n         super(id, builder);\n         setShowResultPage(true);\n@@ -68,6 +80,9 @@ protected RoleDirectoryPanel(final String id, final Builder builder) {\n         utilityModal.size(Modal.Size.Large);\n         utilityModal.addSubmitButton();\n \n+        addOuterObject(membersModal);\n+        membersModal.size(Modal.Size.Large);\n+\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.ROLE_CREATE);\n     }\n \n@@ -104,6 +119,54 @@ public ActionLinksPanel<RoleTO> getActions(final String componentId, final IMode\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        final String query = SyncopeClient.getUserSearchConditionBuilder().and(\n+                                SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n+                                SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n+\n+                        final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n+                        final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n+\n+                        final AnyTypeTO anyTypeTO = typeRestClient.read(AnyTypeKind.USER.name());\n+\n+                        ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n+\n+                            private static final long serialVersionUID = 1L;\n+\n+                            @Override\n+                            protected Panel getDirectoryPanel(final String id) {\n+                                final Panel panel = new UserDirectoryPanel.Builder(\n+                                        classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                        setRealm(\"/\").\n+                                        setFiltered(true).\n+                                        setFiql(query).\n+                                        disableCheckBoxes().\n+                                        addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                                                new UserTO(),\n+                                                anyTypeTO.getClasses(),\n+                                                FormLayoutInfoUtils.fetch(typeRestClient.list()).getLeft(),\n+                                                pageRef), false).\n+                                        setWizardInModal(false).build(id);\n+\n+                                MetaDataRoleAuthorizationStrategy.authorize(\n+                                        panel,\n+                                        WebPage.RENDER,\n+                                        StandardEntitlement.USER_LIST);\n+\n+                                return panel;\n+                            }\n+                        };\n+\n+                        membersModal.header(new StringResourceModel(\"role.members\", RoleDirectoryPanel.this, model));\n+                        membersModal.setContent(panel);\n+                        membersModal.show(true);\n+                        target.add(membersModal);\n+                    }\n+                }, ActionLink.ActionType.MEMBERS, StandardEntitlement.USER_LIST).add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                         send(RoleDirectoryPanel.this, Broadcast.EXACT,\n@@ -197,7 +260,7 @@ public Builder(final PageReference pageRef) {\n         }\n \n         @Override\n-        protected WizardMgtPanel<RoleWrapper> newInstance(final String id) {\n+        protected WizardMgtPanel<RoleWrapper> newInstance(final String id, final boolean wizardInModal) {\n             return new RoleDirectoryPanel(id, this);\n         }\n     }"},{"sha":"03af4fe3b17834ab7e6e0f92d7974a8db08ec7d5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -63,8 +63,8 @@ public SecurityQuestionsPanel(final String id, final PageReference pageRef) {\n             private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n-            protected WizardMgtPanel<SecurityQuestionTO> newInstance(final String id) {\n-                return new SecurityQuestionsPanel(id, this);\n+            protected WizardMgtPanel<SecurityQuestionTO> newInstance(final String id, final boolean wizardInModal) {\n+                throw new UnsupportedOperationException();\n             }\n         }.disableCheckBoxes());\n \n@@ -153,7 +153,7 @@ public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ign\n                                     target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                   SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                                             ? e.getClass().getName() : e.getMessage());\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);"},{"sha":"fed9254508ad673ef58e6a05a49384bd7abc319e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":79,"deletions":60,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -62,7 +62,11 @@ public class UserDirectoryPanel extends AnyDirectoryPanel<UserTO, UserRestClient\n     private static final long serialVersionUID = -1100228004207271270L;\n \n     protected UserDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder);\n+        this(id, builder, true);\n+    }\n+\n+    protected UserDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, wizardInModal);\n     }\n \n     @Override\n@@ -144,42 +148,6 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                new AnyWrapper<>(model.getObject()));\n-                        altDefaultModal.setFormModel(formModel);\n-\n-                        target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n-\n-                        altDefaultModal.header(new Model<>(\n-                                getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                        altDefaultModal.show(true);\n-                    }\n-                }, ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                new AnyWrapper<>(model.getObject()));\n-                        altDefaultModal.setFormModel(formModel);\n-\n-                        target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n-\n-                        altDefaultModal.header(new Model<>(\n-                                getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                        altDefaultModal.show(true);\n-                    }\n-                }, ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         send(UserDirectoryPanel.this, Broadcast.EXACT,\n@@ -199,31 +167,13 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         send(UserDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n                     }\n-                }, ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                                utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n-\n-                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n-                        utilityModal.show(true);\n+                    protected boolean statusCondition(final UserTO modelObject) {\n+                        return addAjaxLink.isVisibleInHierarchy();\n                     }\n-                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        target.add(utilityModal.setContent(\n-                                new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n-                        utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n+                }, ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -242,6 +192,70 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     }\n                 }, ActionType.DELETE, StandardEntitlement.USER_DELETE);\n \n+                if (wizardInModal) {\n+                    panel.add(new ActionLink<UserTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                            IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n+                                    new AnyWrapper<>(model.getObject()));\n+                            altDefaultModal.setFormModel(formModel);\n+\n+                            target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+\n+                            altDefaultModal.header(new Model<>(\n+                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                            altDefaultModal.show(true);\n+                        }\n+                    }, ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                            IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n+                                    new AnyWrapper<>(model.getObject()));\n+                            altDefaultModal.setFormModel(formModel);\n+\n+                            target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n+\n+                            altDefaultModal.header(new Model<>(\n+                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                            altDefaultModal.show(true);\n+                        }\n+                    }, ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                            target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                                    utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+\n+                            utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                            utilityModal.show(true);\n+                        }\n+                    }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                            target.add(utilityModal.setContent(\n+                                    new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+                            utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n+                            utilityModal.show(true);\n+                            target.add(utilityModal);\n+                        }\n+                    }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n+                }\n+\n                 return panel.build(componentId, model.getObject());\n             }\n \n@@ -262,6 +276,11 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         displayAttributeModal.addSubmitButton();\n                         displayAttributeModal.show(true);\n                     }\n+\n+                    @Override\n+                    protected boolean statusCondition(final Serializable modelObject) {\n+                        return wizardInModal;\n+                    }\n                 }, ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).add(\n                         new ActionLink<Serializable>() {\n \n@@ -290,8 +309,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<UserTO>> newInstance(final String id) {\n-            return new UserDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<UserTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new UserDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"d89b3ea7ddd961623b837623020fd204b26c9953","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -33,8 +33,8 @@\n \n     private static final long serialVersionUID = -1100228004207271272L;\n \n-    private AnyObjectSelectionDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder, AnyObjectTO.class);\n+    private AnyObjectSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, AnyObjectTO.class, wizardInModal);\n     }\n \n     @Override\n@@ -73,8 +73,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<AnyObjectTO>> newInstance(final String id) {\n-            return new AnyObjectSelectionDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<AnyObjectTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new AnyObjectSelectionDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"5919dee18e86eca1dd19cb44acc0cae3169b90d4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -61,9 +61,12 @@\n     private final Class<A> reference;\n \n     protected AnySelectionDirectoryPanel(\n-            final String id, final AnyDirectoryPanel.Builder<A, E> builder, final Class<A> reference) {\n+            final String id,\n+            final AnyDirectoryPanel.Builder<A, E> builder,\n+            final Class<A> reference,\n+            final boolean wizardInModal) {\n \n-        super(id, builder);\n+        super(id, builder, wizardInModal);\n         this.reference = reference;\n     }\n "},{"sha":"65c7bd624aeaf822f8e51d3858ec220575b08c64","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -32,8 +32,8 @@ public final class GroupSelectionDirectoryPanel extends AnySelectionDirectoryPan\n \n     private static final long serialVersionUID = -1100228004207271271L;\n \n-    private GroupSelectionDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder, GroupTO.class);\n+    private GroupSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, GroupTO.class, wizardInModal);\n     }\n \n     @Override\n@@ -72,8 +72,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<GroupTO>> newInstance(final String id) {\n-            return new GroupSelectionDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<GroupTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new GroupSelectionDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"c3c882598ec552aba3ba78431089a652d7361ab6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -32,8 +32,8 @@ public final class UserSelectionDirectoryPanel extends AnySelectionDirectoryPane\n \n     private static final long serialVersionUID = -1100228004207271272L;\n \n-    private UserSelectionDirectoryPanel(final String id, final Builder builder) {\n-        super(id, builder, UserTO.class);\n+    private UserSelectionDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n+        super(id, builder, UserTO.class, wizardInModal);\n     }\n \n     @Override\n@@ -72,8 +72,8 @@ public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, fi\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyWrapper<UserTO>> newInstance(final String id) {\n-            return new UserSelectionDirectoryPanel(id, this);\n+        protected WizardMgtPanel<AnyWrapper<UserTO>> newInstance(final String id, final boolean wizardInModal) {\n+            return new UserSelectionDirectoryPanel(id, this, wizardInModal);\n         }\n     }\n }"},{"sha":"f772eecf79d75f2db9f97c13cd012ad71ae26842","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -58,6 +58,7 @@ public enum ActionType {\n         ENABLE(\"update\"),\n         NOT_FOND(\"read\"),\n         VIEW(\"view\"),\n+        MEMBERS(\"members\"),\n         SEARCH(\"search\"),\n         DELETE(\"delete\"),\n         EXECUTE(\"execute\"),\n@@ -132,4 +133,8 @@ public final ActionLink<T> disable() {\n     public final boolean isEnabled(final T modelObject) {\n         return this.enabled && statusCondition(modelObject);\n     }\n+\n+    public boolean isIndicatorEnabled() {\n+        return true;\n+    }\n }"},{"sha":"7dc90bf0d3d58b9f71f56804712a0defa3847049","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":122,"deletions":49,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -73,6 +73,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelView\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelMembers\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n@@ -127,7 +128,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -146,7 +148,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -165,7 +168,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -184,7 +188,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -203,7 +208,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -222,7 +228,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -241,7 +248,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -260,7 +268,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -279,7 +288,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -298,7 +308,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -317,7 +328,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -336,7 +348,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -355,7 +368,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -374,7 +388,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -393,7 +408,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -412,7 +428,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -431,7 +448,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -450,7 +468,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -469,7 +488,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -488,7 +508,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -510,7 +531,27 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n+            case MEMBERS:\n+                fragment = new Fragment(\"panelMembers\", \"fragmentMembers\", this);\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"membersLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -529,7 +570,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -548,7 +590,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -567,7 +610,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -586,7 +630,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }).setVisible(link.isEnabled(model.getObject()));\n \n@@ -606,7 +651,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }).setVisible(link.isEnabled(model.getObject()));\n \n@@ -625,7 +671,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }).setVisible(link.isEnabled(model.getObject()));\n \n@@ -645,7 +692,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -664,7 +712,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -683,7 +732,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -702,7 +752,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -721,7 +772,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -740,7 +792,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -759,7 +812,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -778,7 +832,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -797,7 +852,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -816,7 +872,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -835,7 +892,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -854,7 +912,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -874,7 +933,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -893,7 +953,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -912,7 +973,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -931,7 +993,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -950,7 +1013,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -969,7 +1033,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -988,7 +1053,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -1007,7 +1073,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -1026,7 +1093,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -1045,7 +1113,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                        return disableIndicator || !link.isIndicatorEnabled()\n+                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n@@ -1135,6 +1204,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelView\", \"emptyFragment\", this));\n                 break;\n \n+            case MEMBERS:\n+                super.addOrReplace(new Fragment(\"panelMembers\", \"emptyFragment\", this));\n+                break;\n+\n             case SEARCH:\n                 super.addOrReplace(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n                 break;"},{"sha":"4f6d0197754ca3bd090770850caa19862304fe1d","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -201,8 +201,8 @@ private class AvailableJobsPanel extends DirectoryPanel<\n                 private static final long serialVersionUID = 8769126634538601689L;\n \n                 @Override\n-                protected WizardMgtPanel<JobTO> newInstance(final String id) {\n-                    return new AvailableJobsPanel(id, pageRef);\n+                protected WizardMgtPanel<JobTO> newInstance(final String id, final boolean wizardInModal) {\n+                    throw new UnsupportedOperationException();\n                 }\n             }.disableCheckBoxes().hidePaginator());\n \n@@ -308,8 +308,8 @@ private class RecentExecPanel extends DirectoryPanel<\n                 private static final long serialVersionUID = 8769126634538601689L;\n \n                 @Override\n-                protected WizardMgtPanel<ExecTO> newInstance(final String id) {\n-                    return new RecentExecPanel(id, pageRef);\n+                protected WizardMgtPanel<ExecTO> newInstance(final String id, final boolean wizardInModal) {\n+                    throw new UnsupportedOperationException();\n                 }\n             }.disableCheckBoxes().hidePaginator());\n \n@@ -399,8 +399,8 @@ public void run() {\n                 ThreadContext.setSession(session);\n \n                 WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(application);\n-                WebSocketPushBroadcaster broadcaster =\n-                        new WebSocketPushBroadcaster(webSocketSettings.getConnectionRegistry());\n+                WebSocketPushBroadcaster broadcaster = new WebSocketPushBroadcaster(webSocketSettings.\n+                        getConnectionRegistry());\n                 broadcaster.broadcast(\n                         new ConnectedMessage(application, session.getId(), key),\n                         new JobWidgetMessage(getAvailable(session), getRecent(session)));"},{"sha":"5fd1e62845114bdafdf43987c827f61a4fdff8af","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationDetailsModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationDetailsModalPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -82,8 +82,8 @@ private class DiffPanel extends DirectoryPanel<\n                 private static final long serialVersionUID = 8769126634538601689L;\n \n                 @Override\n-                protected WizardMgtPanel<Misaligned> newInstance(final String id) {\n-                    return new DiffPanel(id, pageRef);\n+                protected WizardMgtPanel<Misaligned> newInstance(final String id, final boolean wizardInModal) {\n+                    throw new UnsupportedOperationException();\n                 }\n             }.disableCheckBoxes().hidePaginator());\n "},{"sha":"3fec490d5e9ec0d556332096d31898de477126e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -158,7 +158,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (Exception e) {\n                     LOG.error(\"While starting reconciliation report\", e);\n-                   SyncopeConsoleSession.get().error(\"Could not start reconciliation report\");\n+                    SyncopeConsoleSession.get().error(\"Could not start reconciliation report\");\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }\n@@ -313,8 +313,8 @@ private class AnysReconciliationPanel extends DirectoryPanel<\n                 private static final long serialVersionUID = 8769126634538601689L;\n \n                 @Override\n-                protected WizardMgtPanel<Any> newInstance(final String id) {\n-                    return new AnysReconciliationPanel(id, anys, pageRef);\n+                protected WizardMgtPanel<Any> newInstance(final String id, final boolean wizardInModal) {\n+                    throw new UnsupportedOperationException();\n                 }\n             }.disableCheckBoxes().hidePaginator());\n \n@@ -508,8 +508,8 @@ public boolean evaluate(final JobTO jobTO) {\n                                 SyncopeConsoleApplication.class.cast(application).getReconciliationReportKey());\n \n                         WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(application);\n-                        WebSocketPushBroadcaster broadcaster =\n-                                new WebSocketPushBroadcaster(webSocketSettings.getConnectionRegistry());\n+                        WebSocketPushBroadcaster broadcaster = new WebSocketPushBroadcaster(webSocketSettings.\n+                                getConnectionRegistry());\n                         broadcaster.broadcast(\n                                 new ConnectedMessage(application, session.getId(), key),\n                                 new ReconciliationJobNotRunningMessage());"},{"sha":"c6a5f0105fec1f2a4dd11c4a5e3bbdf205e50d82","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -61,7 +61,7 @@\n \n     private final Fragment initialFragment;\n \n-    private final boolean wizardInModal;\n+    protected final boolean wizardInModal;\n \n     private boolean containerAutoRefresh = true;\n \n@@ -375,11 +375,13 @@ protected void customActionOnCloseCallback(final AjaxRequestTarget target) {\n \n         private boolean showResultPage = false;\n \n+        private boolean wizardInModal = false;\n+\n         protected Builder(final PageReference pageRef) {\n             this.pageRef = pageRef;\n         }\n \n-        protected abstract WizardMgtPanel<T> newInstance(final String id);\n+        protected abstract WizardMgtPanel<T> newInstance(final String id, final boolean wizardInModal);\n \n         /**\n          * Builds a list view.\n@@ -388,7 +390,7 @@ protected Builder(final PageReference pageRef) {\n          * @return List view.\n          */\n         public WizardMgtPanel<T> build(final String id) {\n-            return newInstance(id).\n+            return newInstance(id, wizardInModal).\n                     setPageRef(this.pageRef).\n                     setShowResultPage(this.showResultPage).\n                     addNewItemPanelBuilder(this.newItemPanelBuilder, this.newItemDefaultButtonEnabled).\n@@ -428,6 +430,17 @@ public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel\n             this.notificationPanel = notificationPanel;\n             return this;\n         }\n+\n+        /**\n+         * Specifies to open an edit item wizard into a new modal page.\n+         *\n+         * @param wizardInModal TRUE to request to open wizard in a new modal.\n+         * @return the current builder.\n+         */\n+        public Builder<T> setWizardInModal(final boolean wizardInModal) {\n+            this.wizardInModal = wizardInModal;\n+            return this;\n+        }\n     }\n \n     public static class ExitEvent {"},{"sha":"e41cdea33584b3e62b80efec03ed55be56ee10b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -341,7 +341,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                                 pageRef).setFiltered(true).\n                                 setFiql(SyncopeClient.getAnyObjectSearchConditionBuilder(anyType.getKey()).\n                                         is(\"key\").notNullValue().query()).\n-                                build(\"searchResultPanel\");\n+                                setWizardInModal(true).build(\"searchResultPanel\");\n                         fragment.add(anyObjectDirectoryPanel.setRenderBodyOnly(true));\n                     }\n                     target.add(container);"},{"sha":"13f6c3c16813f69bb921bb6cdee426a9d1cfdf7d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -15,3 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Edit ${anyTO.type} ${anyTO.name}\n+group.members='${right}' members of group '${left.name}' "},{"sha":"f851f3db9c7e918db17b1ae9aa17c3ab821ff2f5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -15,3 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Modifica ${anyTO.type} ${anyTO.name}\n+group.members='${right}' membri del gruppo '${left.name}' "},{"sha":"dee981be77740b5166383237bca3b785c1275ffe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -15,3 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Alterar ${anyTO.type} ${anyTO.name}\n+group.members='${right}' members of group '${left.name}' "},{"sha":"de2959b012a9c48a0e44a913951045222bfc60bd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -17,3 +17,4 @@\n #\n # any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type} ${anyTO.key}\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${anyTO.type} ${anyTO.name}\n+group.members='${right}' members of group '${left.name}' "},{"sha":"340c0e65ae04ee33f9ec500514cd77adcfaa432f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MembersTogglePanel.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -0,0 +1,32 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div id=\"startAtContainer\">\n+      <form wicket:id=\"membersForm\">\n+        <div class=\"input-group\">\n+          <span wicket:id=\"type\"/>\n+          <div class=\"input-group-addon\">\n+            <a wicket:id=\"changeit\"><i class=\"fa fa-users\" alt=\"members icon\" title=\"Members\"></i></a>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"3a27730cea126e34a57f6cf70dfdec15093782da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -16,3 +16,4 @@\n # under the License.\n any.edit=Edit role ${roleTO.key}\n any.new=New role\n+role.members=Role '${key}' members"},{"sha":"04a466ee5a4a606f368668a7bdead72a31a70a0e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_it.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -16,3 +16,4 @@\n # under the License.\n any.edit=Modifica ruolo ${roleTO.key}\n any.new=Nuovo ruolo\n+role.members=Utenti membri del rulo '${key}'"},{"sha":"1de6e43c02f05e69d9b7a7b888e24d9eb31ff093","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_pt_BR.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -16,3 +16,4 @@\n # under the License.\n any.edit=Alterar fun\\u00e7\\u00e3o ${roleTO.key}\n any.new=Novo fun\\u00e7\\u00e3o\n+role.members=Role '${key}' members"},{"sha":"36f5cbf0060470467bd2ce7e5216a8b870702652","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleDirectoryPanel_ru.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel_ru.properties?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -15,7 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# any.edit=Изменить роль ${roleTO.key}\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c ${roleTO.key}\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u0440\\u043e\\u043b\\u044c ${roleTO.key}\n-# any.new=Создать роль\n+# any.new=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\n any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u0440\\u043e\\u043b\\u044c\n+role.members=Role '${key}' members"},{"sha":"9903f9868b89189ca814bd663937590bc86aec03","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -37,6 +37,7 @@\n     <span wicket:id=\"panelSearch\">[plus]</span>\n     <span wicket:id=\"panelNotFound\">[plus]</span>\n     <span wicket:id=\"panelView\">[plus]</span>\n+    <span wicket:id=\"panelMembers\">[plus]</span>\n     <span wicket:id=\"panelMapping\">[plus]</span>\n     <span wicket:id=\"panelSetLatestSyncToken\">[plus]</span>\n     <span wicket:id=\"panelRemoveSyncToken\">[plus]</span>\n@@ -125,6 +126,10 @@\n       <a href=\"#\" wicket:id=\"viewLink\" class=\"btn\"><i class=\"fa fa-eye\" alt=\"view icon\" title=\"View\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentMembers\">\n+      <a href=\"#\" wicket:id=\"membersLink\" class=\"btn\"><i class=\"fa fa-users\" alt=\"members icon\" title=\"Members\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentSearch\">\n       <a href=\"#\" wicket:id=\"searchLink\" class=\"btn\"><i class=\"glyphicon glyphicon-search\" alt=\"search icon\" title=\"Search\"></i></a>\n     </wicket:fragment>"},{"sha":"8568b1a6a0febb953172b1ae72e7023e5a181590","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -64,8 +64,8 @@ public CamelRoutesDirectoryPanel(final String id, final PageReference pageRef, f\n             private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n-            protected WizardMgtPanel<CamelRouteTO> newInstance(final String id) {\n-                return new CamelRoutesDirectoryPanel(id, this, anyTypeKind);\n+            protected WizardMgtPanel<CamelRouteTO> newInstance(final String id, final boolean wizardInModal) {\n+                throw new UnsupportedOperationException();\n             }\n         }.disableCheckBoxes());\n "},{"sha":"0b6ff9cf974a7ff93d56b760fc33dd3d6eace61e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -43,6 +43,34 @@ public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n     }\n \n+    @Test\n+    public void read() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelMembers:membersLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:body:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:6:outer:container:content:togglePanelContainer:membersForm\");\n+\n+        formTester.select(\"type:dropDownChoiceField\", 0);\n+        formTester.submit(\"changeit\");\n+\n+        wicketTester.assertModelValue(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:outer:\"\n+                + \"dialog:header:header-label\", \"'USER' members of group 'artDirector' \");\n+\n+        assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:5:outer:form:content:searchResult:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:\"\n+                + \"outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n+    }\n+\n     @Test\n     public void filteredSearch() {\n         wicketTester.clickLink(\"body:realmsLI:realms\");"},{"sha":"d5991da0304a767cbe315c29415fc4dea30559b2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=f5f6270ef2f437a036f36e5cd6a9e31d0515e7ab","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Roles;\n import org.apache.wicket.Component;\n import org.apache.wicket.util.tester.FormTester;\n@@ -66,6 +68,21 @@ public void login() {\n     public void read() {\n         assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"OTHER\"));\n+\n+        wicketTester.clickLink(\"body:content:rolesPanel:container:content:searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelMembers:membersLink\");\n+\n+        wicketTester.assertModelValue(\n+                \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:header:header-label\",\n+                \"Role 'Other' members\");\n+\n+        assertNotNull(findComponentByProp(\"username\", \"body:content:rolesPanel:outerObjectsRepeater:4:outer:form:\"\n+                + \"content:searchResult:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", \"rossini\"));\n+\n+        wicketTester.executeAjaxEvent(\n+                \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:footer:buttons:0:button\",\n+                Constants.ON_CLICK);\n     }\n \n     @Test"}]}