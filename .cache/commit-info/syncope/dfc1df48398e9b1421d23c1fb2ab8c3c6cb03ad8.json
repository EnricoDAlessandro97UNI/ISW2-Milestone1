{"sha":"dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmYzFkZjQ4Mzk4ZTliMTQyMWQyM2MxZmIyYWI4YzNjNmNiMDNhZDg=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-21T11:28:46Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-21T11:28:46Z"},"message":"refactoring of the domain stack, SYNCOPE-158","tree":{"sha":"4791d0150416844e59bc671de35a30f4cd1d80a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4791d0150416844e59bc671de35a30f4cd1d80a0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"469b7497c989ca9a892065ac81ac664a71790f01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/469b7497c989ca9a892065ac81ac664a71790f01","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/469b7497c989ca9a892065ac81ac664a71790f01"}],"stats":{"total":560,"additions":357,"deletions":203},"files":[{"sha":"de3d0f1507ea18f8059eebb3efa2d9adb39e7850","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ResultManager.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FResultManager.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+\n+public class ResultManager extends CommonsResultManager {\n+\n+}"},{"sha":"ea11a229a55c3112047f22435a40bc2f7c8a5a13","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -20,14 +20,15 @@\n \n import javax.ws.rs.ProcessingException;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.commands.logger.LoggerResultManager;\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n public final class SyncopeAdm {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeAdm.class);\n+    \n+    private static final ResultManager resultManager = new ResultManager();\n \n     public static void main(final String[] args) {\n         LOG.debug(\"Starting with args \\n\");\n@@ -49,12 +50,12 @@ public static void main(final String[] args) {\n             System.out.println(helpMessage());\n         } catch (final IllegalArgumentException ex) {\n             LOG.error(\"Error in main\", ex);\n-            new LoggerResultManager().genericError(ex.getMessage());\n+            resultManager.generic(ex.getMessage());\n             if (!ex.getMessage().startsWith(\"It seems you\")) {\n                 System.out.println(helpMessage());\n             }\n         } catch (final ProcessingException e) {\n-            new LoggerResultManager().genericError(\"Syncope server offline\", e.getCause().getMessage());\n+            resultManager.generic(\"Syncope server offline\", e.getCause().getMessage());\n         }\n \n     }\n@@ -72,7 +73,7 @@ private static String helpMessage() {\n                 helpMessageBuilder.append(\"\\n\");\n             }\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n-            new LoggerResultManager().genericError(ex.getMessage());\n+            resultManager.generic(ex.getMessage());\n         }\n \n         return helpMessageBuilder.toString();"},{"sha":"255b99b6c7de057206307b6f9698ff8d87605fb8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -44,7 +44,7 @@ public void defaultError(final String option, final String helpMessage) {\n         Messages.printDefaultMessage(option, helpMessage);\n     }\n \n-    public void genericError(final String... messages) {\n+    public void generic(final String... messages) {\n         Messages.printMessage(messages);\n     }\n }"},{"sha":"8d4cfdf5209ce0154e1f583aeb631ad634ba4c30","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/DomainCommand.java","status":"removed","additions":0,"deletions":165,"changes":165,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/469b7497c989ca9a892065ac81ac664a71790f01/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/469b7497c989ca9a892065ac81ac664a71790f01/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FDomainCommand.java?ref=469b7497c989ca9a892065ac81ac664a71790f01","patch":"@@ -1,165 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands;\n-\n-import org.apache.syncope.client.cli.commands.logger.LoggerCommand;\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.cli.Command;\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.messages.Messages;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.DomainTO;\n-import org.apache.syncope.common.rest.api.service.DomainService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-@Command(name = \"domain\")\n-public class DomainCommand extends AbstractCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerCommand.class);\n-\n-    private static final String HELP_MESSAGE = \"Usage: domain [options]\\n\"\n-            + \"  Options:\\n\"\n-            + \"    --help \\n\"\n-            + \"    --list \\n\"\n-            + \"    --read \\n\"\n-            + \"       Syntax: --read {DOMAIN-KEY} {DOMAIN-KEY} [...]\\n\"\n-            + \"    --delete \\n\"\n-            + \"       Syntax: --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\\n\";\n-\n-    @Override\n-    public void execute(final Input input) {\n-        LOG.debug(\"Option: {}\", input.getOption());\n-        LOG.debug(\"Parameters:\");\n-        for (final String parameter : input.getParameters()) {\n-            LOG.debug(\"   > \" + parameter);\n-        }\n-\n-        final String[] parameters = input.getParameters();\n-\n-        if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n-        }\n-\n-        final DomainService domainService = SyncopeServices.get(DomainService.class);\n-        switch (Options.fromName(input.getOption())) {\n-            case LIST:\n-                try {\n-                    for (final DomainTO domainTO : domainService.list()) {\n-                        Messages.printMessage(\"Domain key: \" + domainTO.getKey());\n-                    }\n-                } catch (final SyncopeClientException ex) {\n-                    Messages.printMessage(\"Error: \" + ex.getMessage());\n-                }\n-                break;\n-            case READ:\n-                final String readErrorMessage = \"domain --read {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n-                if (parameters.length >= 1) {\n-                    for (final String parameter : parameters) {\n-                        try {\n-                            final DomainTO domainTO = domainService.read(parameter);\n-                            Messages.printMessage(\"Domain key: \" + domainTO.getKey());\n-                        } catch (final SyncopeClientException ex) {\n-                            if (ex.getMessage().startsWith(\"NotFound\")) {\n-                                Messages.printNofFoundMessage(\"Domain\", parameter);\n-                            } else {\n-                                Messages.printMessage(ex.getMessage());\n-                            }\n-                        }\n-                    }\n-                } else {\n-                    Messages.printCommandOptionMessage(readErrorMessage);\n-                }\n-                break;\n-            case DELETE:\n-                final String deleteErrorMessage = \"domain --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n-                if (parameters.length >= 1) {\n-                    for (final String parameter : parameters) {\n-                        try {\n-                            domainService.delete(parameter);\n-                            Messages.printDeletedMessage(\"Domain\", parameter);\n-                        } catch (final SyncopeClientException ex) {\n-                            if (ex.getMessage().startsWith(\"NotFound\")) {\n-                                Messages.printNofFoundMessage(\"Domain\", parameter);\n-                            } else {\n-                                Messages.printMessage(ex.getMessage());\n-                            }\n-                        }\n-                    }\n-                } else {\n-                    Messages.printCommandOptionMessage(deleteErrorMessage);\n-                }\n-                break;\n-            case HELP:\n-                System.out.println(HELP_MESSAGE);\n-                break;\n-            default:\n-                Messages.printDefaultMessage(input.getOption(), HELP_MESSAGE);\n-        }\n-\n-    }\n-\n-    @Override\n-    public String getHelpMessage() {\n-        return HELP_MESSAGE;\n-    }\n-\n-    private enum Options {\n-\n-        HELP(\"--help\"),\n-        LIST(\"--list\"),\n-        READ(\"--read\"),\n-        DELETE(\"--delete\");\n-\n-        private final String optionName;\n-\n-        Options(final String optionName) {\n-            this.optionName = optionName;\n-        }\n-\n-        public String getOptionName() {\n-            return optionName;\n-        }\n-\n-        public boolean equalsOptionName(final String otherName) {\n-            return (otherName == null) ? false : optionName.equals(otherName);\n-        }\n-\n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n-                if (option.equalsOptionName(name)) {\n-                    optionToReturn = option;\n-                }\n-            }\n-            return optionToReturn;\n-        }\n-\n-        public static List<String> toList() {\n-            final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n-                options.add(value.getOptionName());\n-            }\n-            return options;\n-        }\n-    }\n-}"},{"sha":"3d1866bb6607bddcd47fe19625c4ea9335c939ff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/NotificationCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -45,7 +45,7 @@ public class NotificationCommand extends AbstractCommand {\n             + \"       Syntax: --read {NOTIFICATION-ID} \\n\"\n             + \"    --delete \\n\"\n             + \"       Syntax: --delete {NOTIFICATION-ID}\";\n-\n+    \n     @Override\n     public void execute(final Input input) {\n         LOG.debug(\"Option: {}\", input.getOption());"},{"sha":"fc3a8c0d791b199967b722098431a4f0965cf15e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/PolicyCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -49,7 +49,7 @@ public class PolicyCommand extends AbstractCommand {\n             + \"       Syntax: --read {POLICY-ID} {POLICY-ID} [...]\\n\"\n             + \"    --delete \\n\"\n             + \"       Syntax: --delete {POLICY-ID} {POLICY-ID} [...]\";\n-\n+    \n     @Override\n     public void execute(final Input input) {\n         LOG.debug(\"Option: {}\", input.getOption());"},{"sha":"30be7fbf217e682953adb612c7919f4ba1a707ef","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/ReportCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -66,7 +66,7 @@ public class ReportCommand extends AbstractCommand {\n             + \"       Syntax: --export-execution-result {EXECUTION-ID} {EXECUTION-ID} [...] {FORMAT}\\n\"\n             + \"          Format: CSV / HTML / PDF / XML / RTF\"\n             + \"    --reportlet-class\";\n-\n+    \n     @Override\n     public void execute(final Input input) {\n         LOG.debug(\"Option: {}\", input.getOption());"},{"sha":"e00ae3f1b709550e3cfdbfe95893f27dabdaa6ab","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/SchemaCommand.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FSchemaCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -56,7 +56,6 @@ public class SchemaCommand extends AbstractCommand {\n             + \"        Schema type: PLAIN / DERIVED / VIRTUAL\";\n \n     @Override\n-\n     public void execute(final Input input) {\n         LOG.debug(\"Option: {}\", input.getOption());\n         LOG.debug(\"Parameters:\");"},{"sha":"deb00bf6fa1c4757f827cc3ec53cfcb2b26b4592","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/TaskCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FTaskCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -69,7 +69,7 @@ public class TaskCommand extends AbstractCommand {\n             + \"    --execute \\n\"\n             + \"       Syntax: --execute {TASK-ID} {DRY-RUN}\"\n             + \"          Dry run: true / false\";\n-\n+    \n     @Override\n     public void execute(final Input input) {\n         LOG.debug(\"Option: {}\", input.getOption());"},{"sha":"00fe6fafef5dd46bab2d644d3964663d8c6fc4ed","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationCommand.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -24,14 +24,10 @@\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n @Command(name = \"configuration\")\n public class ConfigurationCommand extends AbstractCommand {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ConfigurationCommand.class);\n-\n     private static final String HELP_MESSAGE = \"Usage: configuration [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\""},{"sha":"f308aa99aeeb29cce25e9846b2112451afda857a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -42,9 +42,9 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        configurationResultManager.genericError(\"You cannot delete configuration\", parameter);\n+                        configurationResultManager.generic(\"You cannot delete configuration\", parameter);\n                     } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n+                        configurationResultManager.generic(ex.getMessage());\n                     }\n                     break;\n                 }"},{"sha":"2e61c4fff9985b9d95c2fb220e6506a1ab0a3941","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationExport.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -47,22 +47,22 @@ public void export() {\n                 XMLUtils.createXMLFile(\n                         (SequenceInputStream) configurationService.export().getEntity(),\n                         input.firstParameter() + EXPORT_FILE_NAME);\n-                configurationResultManager.genericError(\n+                configurationResultManager.generic(\n                         input.firstParameter() + EXPORT_FILE_NAME + \" successfully created\");\n             } catch (final IOException ex) {\n-                configurationResultManager.genericError(ex.getMessage());\n+                configurationResultManager.generic(ex.getMessage());\n             } catch (ParserConfigurationException | SAXException | TransformerConfigurationException ex) {\n-                configurationResultManager.genericError(\n+                configurationResultManager.generic(\n                         \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n             } catch (final TransformerException ex) {\n                 if (ex.getCause() instanceof FileNotFoundException) {\n-                    configurationResultManager.genericError(\"Permission denied on \" + input.firstParameter());\n+                    configurationResultManager.generic(\"Permission denied on \" + input.firstParameter());\n                 } else {\n-                    configurationResultManager.genericError(\n+                    configurationResultManager.generic(\n                             \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n                 }\n             } catch (final SyncopeClientException ex) {\n-                configurationResultManager.genericError(\"Error calling configuration service \" + ex.getMessage());\n+                configurationResultManager.generic(\"Error calling configuration service \" + ex.getMessage());\n             }\n         } else {\n             configurationResultManager.commandOptionError(EXPORT_HELP_MESSAGE);"},{"sha":"2aa3ff405e2f4613964d23d3de7cd6ac73c2e8e7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationGet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -29,7 +29,7 @@ public void get() {\n         try {\n             configurationResultManager.fromGet(new LinkedList<>(configurationService.list()));\n         } catch (final Exception ex) {\n-            configurationResultManager.genericError(ex.getMessage());\n+            configurationResultManager.generic(ex.getMessage());\n         }\n     }\n "},{"sha":"c4294e741a5b9f69b8b3649f04455a8142e25e29","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n+                        configurationResultManager.generic(ex.getMessage());\n                     }\n                     failed = true;\n                     break;"},{"sha":"295ebd11b85a3cbe43524eb8f57d6e889f61f307","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -50,17 +50,17 @@ public void update() {\n                     configurationService.set(attrTO);\n                     attrList.add(attrTO);\n                 } catch (final IllegalArgumentException ex) {\n-                    configurationResultManager.genericError(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                    configurationResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n                     failed = true;\n                     break;\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", pairParameter.getKey());\n                     } else if (ex.getMessage().startsWith(\"InvalidValues\")) {\n-                        configurationResultManager.genericError(\n+                        configurationResultManager.generic(\n                                 pairParameter.getValue() + \" is not a valid value for \" + pairParameter.getKey());\n                     } else {\n-                        configurationResultManager.genericError(ex.getMessage());\n+                        configurationResultManager.generic(ex.getMessage());\n                     }\n                     failed = true;\n                     break;"},{"sha":"8650ef7908e2581259ed83cc6c89ea0d7ead66d4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/AbstractDomainCommand.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FAbstractDomainCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.rest.api.service.DomainService;\n+\n+public class AbstractDomainCommand {\n+\n+    protected final DomainService domainService = SyncopeServices.get(DomainService.class);\n+\n+    protected final DomainResultManager domainResultManager = new DomainResultManager();\n+\n+}"},{"sha":"e709b81b81913637835e146914da853478b9b66e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainCommand.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"domain\")\n+public class DomainCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: domain [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\\n\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(Options.HELP.getOptionName());\n+        }\n+        switch (Options.fromName(input.getOption())) {\n+            case LIST:\n+                new DomainList().list();\n+                break;\n+            case DELETE:\n+                new DomainDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new DomainResultManager().deletedMessage(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum Options {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        Options(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static Options fromName(final String name) {\n+            Options optionToReturn = HELP;\n+            for (final Options option : Options.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final Options value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+}"},{"sha":"1b0c235f034601b4f8b43e0e63feb0b7d17b3525","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDelete.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class DomainDelete extends AbstractDomainCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"domain --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n+\n+    private final Input input;\n+\n+    public DomainDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    domainService.delete(parameter);\n+                    domainResultManager.deletedMessage(\"Domain\", parameter);\n+                } catch (final SyncopeClientException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        domainResultManager.notFoundError(\"Domain\", parameter);\n+                    } else {\n+                        domainResultManager.generic(ex.getMessage());\n+                    }\n+                }\n+            }\n+        } else {\n+            domainResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"94329d2cb8f4fe1b98a9484a218f51def79d9677","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainList.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.DomainTO;\n+\n+public class DomainList extends AbstractDomainCommand {\n+\n+    public DomainList() {\n+    }\n+\n+    public void list() {\n+        try {\n+            for (final DomainTO domainTO : domainService.list()) {\n+                domainResultManager.generic(domainTO.getKey());\n+            }\n+        } catch (final SyncopeClientException ex) {\n+            domainResultManager.generic(\"Error: \" + ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"a76711dc90c7b6e95e415705215a6d62fb57774c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainRead.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.DomainTO;\n+\n+public class DomainRead extends AbstractDomainCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"domain --read {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n+\n+    private final Input input;\n+\n+    public DomainRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    final DomainTO domainTO = domainService.read(parameter);\n+                    domainResultManager.generic(domainTO.getKey());\n+                } catch (final SyncopeClientException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        domainResultManager.notFoundError(\"Domain\", parameter);\n+                    } else {\n+                        domainResultManager.generic(ex.getMessage());\n+                    }\n+                }\n+            }\n+        } else {\n+            domainResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"6066c5d9e10679e1f2d17b5077a686ba6ae0ee94","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainResultManager.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+\n+public class DomainResultManager extends CommonsResultManager {\n+\n+}"},{"sha":"7ebd55465b14d4ce5298fe5d012f1dbb34c6067c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -22,15 +22,10 @@\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.commands.logger.LoggerCommand;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n @Command(name = \"install\")\n public class InstallCommand extends AbstractCommand {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(LoggerCommand.class);\n-\n     private static final String HELP_MESSAGE = \"Usage: install [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\""},{"sha":"10995b03f993044ae99784068ac6dc6a94e70b20","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -44,6 +44,9 @@ public class InstallSetup {\n \n     private String syncopeServerRestContext = \"/syncope/rest/\";\n \n+    public InstallSetup() {\n+    }\n+\n     public void setup() {\n         final Scanner scanIn = new Scanner(System.in);\n "},{"sha":"5815b717ce1bc770a3b35b023a6c328931f8f283","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -43,7 +43,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.genericError(ex.getMessage());\n+                        loggerResultManager.generic(ex.getMessage());\n                     }\n                 }\n             }"},{"sha":"d9d4f810e047031a3c1f563c175c948db3a44a8e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -31,7 +31,7 @@ public void list() {\n         try {\n             loggerResultManager.fromList(new LinkedList<>(loggerService.list(LoggerType.LOG)));\n         } catch (final SyncopeClientException ex) {\n-            loggerResultManager.genericError(\"Error: \" + ex.getMessage());\n+            loggerResultManager.generic(\"Error: \" + ex.getMessage());\n         }\n     }\n }"},{"sha":"6e2447d28ade0c5865c13df6d1730847af0d8491","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -46,7 +46,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.genericError(\"Error: \" + ex.getMessage());\n+                        loggerResultManager.generic(\"Error: \" + ex.getMessage());\n                     }\n                     failed = true;\n                     break;"},{"sha":"7279b96d902913e21e7ee9d95440aa87fac1a887","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -54,11 +54,11 @@ public void update() {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n                         loggerResultManager.typeNotValidError(input.firstParameter());\n                     } else if (\"Parameter syntax error!\".equalsIgnoreCase(ex.getMessage())) {\n-                        loggerResultManager.genericError(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        loggerResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n                     } else if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.genericError(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        loggerResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;"},{"sha":"f1c25c2de9db0f8b8173b216d39855536c4ebabf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=dfc1df48398e9b1421d23c1fb2ab8c3c6cb03ad8","patch":"@@ -49,7 +49,7 @@ public void updateAll() {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n                         loggerResultManager.typeNotValidError(input.firstParameter());\n                     } else {\n-                        loggerResultManager.genericError(ex.getMessage(), UPDATE_ALL_HELP_MESSAGE);\n+                        loggerResultManager.generic(ex.getMessage(), UPDATE_ALL_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;"}]}