{"sha":"a22a6b55f83846bf06bbb322e9acc234a9425ea5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyMmE2YjU1ZjgzODQ2YmYwNmJiYjMyMmU5YWNjMjM0YTk0MjVlYTU=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-08-11T10:59:08Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-08-11T12:15:07Z"},"message":"SYNCOPE-1194 - Sign the SAML SSO Service Provider Metadata","tree":{"sha":"0de389f55de4da53dabdb45b52032856d1762398","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0de389f55de4da53dabdb45b52032856d1762398"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a22a6b55f83846bf06bbb322e9acc234a9425ea5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a22a6b55f83846bf06bbb322e9acc234a9425ea5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a22a6b55f83846bf06bbb322e9acc234a9425ea5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a22a6b55f83846bf06bbb322e9acc234a9425ea5/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"5da5326ac44b790ff071e2d6b06681803143cfb4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5da5326ac44b790ff071e2d6b06681803143cfb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5da5326ac44b790ff071e2d6b06681803143cfb4"}],"stats":{"total":22,"additions":20,"deletions":2},"files":[{"sha":"31ef8c49eb61f3d87763085cae68b0110517a48e","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a22a6b55f83846bf06bbb322e9acc234a9425ea5/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a22a6b55f83846bf06bbb322e9acc234a9425ea5/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=a22a6b55f83846bf06bbb322e9acc234a9425ea5","patch":"@@ -200,6 +200,7 @@ public void getMetadata(final String spEntityID, final String urlContext, final\n             }\n \n             spEntityDescriptor.getRoleDescriptors().add(spSSODescriptor);\n+            saml2rw.sign(spEntityDescriptor);\n \n             saml2rw.write(new OutputStreamWriter(os), spEntityDescriptor, true);\n         } catch (Exception e) {"},{"sha":"fa48e778b06a90c6604eb55946647f47a308de85","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2ReaderWriter.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a22a6b55f83846bf06bbb322e9acc234a9425ea5/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a22a6b55f83846bf06bbb322e9acc234a9425ea5/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java?ref=a22a6b55f83846bf06bbb322e9acc234a9425ea5","patch":"@@ -152,14 +152,13 @@ public XMLObject read(final boolean useDeflateEncoding, final String response)\n         return responseObject;\n     }\n \n-    public void sign(final RequestAbstractType request) throws SecurityException {\n+    public void sign(final SignableSAMLObject signableObject) throws SecurityException {\n         org.opensaml.xmlsec.signature.Signature signature = OpenSAMLUtil.buildSignature();\n         signature.setCanonicalizationAlgorithm(SignatureConstants.ALGO_ID_C14N_EXCL_OMIT_COMMENTS);\n         signature.setSignatureAlgorithm(sigAlgo);\n         signature.setSigningCredential(loader.getCredential());\n         signature.setKeyInfo(keyInfoGenerator.generate(loader.getCredential()));\n \n-        SignableSAMLObject signableObject = (SignableSAMLObject) request;\n         signableObject.setSignature(signature);\n         signableObject.releaseDOM();\n         signableObject.releaseChildrenDOM(true);"},{"sha":"93608c2c31c2ace77181d7683845a8160bfb1068","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a22a6b55f83846bf06bbb322e9acc234a9425ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a22a6b55f83846bf06bbb322e9acc234a9425ea5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSAML2ITCase.java?ref=a22a6b55f83846bf06bbb322e9acc234a9425ea5","patch":"@@ -30,10 +30,13 @@\n import java.io.InputStreamReader;\n import java.nio.charset.StandardCharsets;\n import java.security.KeyStore;\n+import java.security.cert.X509Certificate;\n import java.util.Collections;\n import java.util.Optional;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import javax.xml.namespace.QName;\n+\n import org.apache.commons.codec.binary.Base64;\n import org.apache.cxf.helpers.DOMUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -67,13 +70,15 @@\n import org.apache.wss4j.common.util.Loader;\n import org.apache.wss4j.dom.WSConstants;\n import org.apache.wss4j.dom.engine.WSSConfig;\n+import org.apache.xml.security.signature.XMLSignature;\n import org.joda.time.DateTime;\n import org.junit.AfterClass;\n import org.junit.Assume;\n import org.junit.BeforeClass;\n import org.junit.Test;\n import org.opensaml.saml.common.xml.SAMLConstants;\n import org.opensaml.saml.saml2.core.Status;\n+import org.opensaml.xmlsec.signature.support.SignatureConstants;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n \n@@ -142,6 +147,19 @@ public void spMetadata() {\n                     new InputStreamReader((InputStream) response.getEntity(), StandardCharsets.UTF_8));\n             assertEquals(\"EntityDescriptor\", responseDoc.getDocumentElement().getLocalName());\n             assertEquals(\"urn:oasis:names:tc:SAML:2.0:metadata\", responseDoc.getDocumentElement().getNamespaceURI());\n+\n+            // Get the signature\n+            QName signatureQName = new QName(SignatureConstants.XMLSIG_NS, \"Signature\");\n+            Element signatureElement =\n+                DOMUtils.getFirstChildWithName(responseDoc.getDocumentElement(), signatureQName);\n+            assertNotNull(signatureElement);\n+\n+            // Validate the signature\n+            XMLSignature signature = new XMLSignature(signatureElement, null);\n+            KeyStore keystore = KeyStore.getInstance(\"JKS\");\n+            keystore.load(Loader.getResourceAsStream(\"keystore\"), \"changeit\".toCharArray());\n+            assertTrue(signature.checkSignatureValue((X509Certificate)keystore.getCertificate(\"sp\")));\n+\n         } catch (Exception e) {\n             LOG.error(\"During SAML 2.0 SP metadata parsing\", e);\n             fail(e.getMessage());"}]}