{"sha":"f45239a0034cb9c389ccee7f33fa4f11b1be371a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0NTIzOWEwMDM0Y2I5YzM4OWNjZWU3ZjMzZmE0ZjExYjFiZTM3MWE=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:56:46Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T17:56:46Z"},"message":"sonar: add a few javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332764 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"76d9e94ba0f3763a638e6a13fb65d3fbb4f897f2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/76d9e94ba0f3763a638e6a13fb65d3fbb4f897f2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f45239a0034cb9c389ccee7f33fa4f11b1be371a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f45239a0034cb9c389ccee7f33fa4f11b1be371a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f45239a0034cb9c389ccee7f33fa4f11b1be371a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f45239a0034cb9c389ccee7f33fa4f11b1be371a/comments","author":null,"committer":null,"parents":[{"sha":"15efb71d385a019a891324ed4a8381e9148605a6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15efb71d385a019a891324ed4a8381e9148605a6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/15efb71d385a019a891324ed4a8381e9148605a6"}],"stats":{"total":60,"additions":50,"deletions":10},"files":[{"sha":"b0cfb58968e9b43cbc350d84eae6e4417d28ba9d","filename":"client/src/main/java/org/apache/syncope/client/mod/AbstractAttributableMod.java","status":"modified","additions":50,"deletions":10,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f45239a0034cb9c389ccee7f33fa4f11b1be371a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f45239a0034cb9c389ccee7f33fa4f11b1be371a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java?ref=f45239a0034cb9c389ccee7f33fa4f11b1be371a","patch":"@@ -22,28 +22,27 @@\n import java.util.Set;\n import org.apache.syncope.client.AbstractBaseBean;\n \n+/**\n+ * Abstract base class for objects that can have attributes removed, added or updated.\n+ * \n+ * Attributes can be regular attributes, derived attributes, virtual attributes and resources.\n+ */\n public abstract class AbstractAttributableMod extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 3241118574016303198L;\n-\n     protected long id;\n-\n     protected Set<AttributeMod> attributesToBeUpdated;\n-\n     protected Set<String> attributesToBeRemoved;\n-\n     protected Set<String> derivedAttributesToBeAdded;\n-\n     protected Set<String> derivedAttributesToBeRemoved;\n-\n     protected Set<AttributeMod> virtualAttributesToBeUpdated;\n-\n     protected Set<String> virtualAttributesToBeRemoved;\n-\n     protected Set<String> resourcesToBeAdded;\n-\n     protected Set<String> resourcesToBeRemoved;\n \n+    /**\n+     * All attributes are initialized to empty sets.\n+     */\n     public AbstractAttributableMod() {\n         super();\n \n@@ -65,10 +64,22 @@ public void setId(long id) {\n         this.id = id;\n     }\n \n+    /**\n+     * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\n+     * \n+     * @param name (schema) of attribute to be removed.\n+     * @return true on success. \n+     */\n     public boolean addAttributeToBeRemoved(String attribute) {\n         return attributesToBeRemoved.add(attribute);\n     }\n \n+    /**\n+     * Convenience method for removing entire attribute instead removing each value in an AttributeMod object\n+     * \n+     * @param name (schema) of attribute to be removed.\n+     * @return true on success. \n+     */\n     public boolean removeAttributeToBeRemoved(String attribute) {\n         return attributesToBeRemoved.remove(attribute);\n     }\n@@ -81,10 +92,24 @@ public void setAttributesToBeRemoved(Set<String> attributesToBeRemoved) {\n         this.attributesToBeRemoved = attributesToBeRemoved;\n     }\n \n+    /**\n+     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \n+     * \n+     * @param attribute modification object\n+     * @see AttributeMod\n+     * @return true on success\n+     */\n     public boolean addAttributeToBeUpdated(AttributeMod attribute) {\n         return attributesToBeUpdated.add(attribute);\n     }\n \n+    /**\n+     * Remove an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \n+     * \n+     * @param attribute modification object\n+     * @see AttributeMod\n+     * @return true on success\n+     */\n     public boolean removeAttributeToBeUpdated(AttributeMod attribute) {\n         return attributesToBeUpdated.remove(attribute);\n     }\n@@ -94,14 +119,26 @@ public Set<AttributeMod> getAttributesToBeUpdated() {\n     }\n \n     public void setAttributesToBeUpdated(Set<AttributeMod> attributesToBeUpdated) {\n-\n         this.attributesToBeUpdated = attributesToBeUpdated;\n     }\n \n+    /**\n+     * Add an attribute modification object. AttributeMod itself indicates how the attribute should be modified. \n+     * \n+     * @param attribute modification object\n+     * @see AttributeMod\n+     * @return true on success\n+     */\n     public boolean addDerivedAttributeToBeAdded(String derivedAttribute) {\n         return derivedAttributesToBeAdded.add(derivedAttribute);\n     }\n \n+    /**\n+     * Add a derivedattribute. Value is calculated by its definition. \n+     * \n+     * @param derivedAttribute\n+     * @return true on success\n+     */\n     public boolean removeDerivedAttributeToBeAdded(String derivedAttribute) {\n         return derivedAttributesToBeAdded.remove(derivedAttribute);\n     }\n@@ -202,6 +239,9 @@ public void setResourcesToBeRemoved(Set<String> resourcesToBeRemoved) {\n         this.resourcesToBeRemoved = resourcesToBeRemoved;\n     }\n \n+    /**\n+     * @return true is all backing Sets are empty.\n+     */\n     public boolean isEmpty() {\n         return attributesToBeUpdated.isEmpty() && attributesToBeRemoved.isEmpty()\n                 && derivedAttributesToBeAdded.isEmpty() && derivedAttributesToBeRemoved.isEmpty()"}]}