{"sha":"c54adf5ce25d7a4de93a0805b639b25ba83eb34b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM1NGFkZjVjZTI1ZDdhNGRlOTNhMDgwNWI2MzliMjViYTgzZWIzNGI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-01T15:33:55Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-01T15:33:55Z"},"message":"[SYNCOPE-886] fix including integration test improving","tree":{"sha":"a90ce7661b6fed22a31cea00b82b12f0e078ab0e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a90ce7661b6fed22a31cea00b82b12f0e078ab0e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c54adf5ce25d7a4de93a0805b639b25ba83eb34b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c54adf5ce25d7a4de93a0805b639b25ba83eb34b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c54adf5ce25d7a4de93a0805b639b25ba83eb34b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fa1ea266e082e8e65f2d77912173c44f5d39cd49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa1ea266e082e8e65f2d77912173c44f5d39cd49","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fa1ea266e082e8e65f2d77912173c44f5d39cd49"}],"stats":{"total":279,"additions":211,"deletions":68},"files":[{"sha":"bdfe2d5b5353d30cd0b09541ff28c8f62d0bb300","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":53,"deletions":35,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -26,22 +26,22 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.RestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BulkActionResultColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n@@ -122,11 +122,26 @@ public IModel<T> model(final T object) {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n+                @Override\n+                protected boolean statusCondition(final Serializable modelObject) {\n+                    return CollectionUtils.isNotEmpty(items);\n+                }\n+\n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     try {\n+                        if (CollectionUtils.isEmpty(items)) {\n+                            throw new IllegalArgumentException(\"Invalid items\");\n+                        }\n+\n+                        String fieldName = keyFieldName;\n+\n                         BulkActionResult res = null;\n                         try {\n+                            if (items.iterator().next() instanceof StatusBean) {\n+                                throw new IllegalArgumentException(\"Invalid items\");\n+                            }\n+\n                             final BulkAction bulkAction = new BulkAction();\n                             bulkAction.setType(BulkAction.Type.valueOf(actionToBeAddresed.name()));\n                             for (T item : items) {\n@@ -140,17 +155,17 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     bulkActionExecutor.getClass().getMethod(\"bulkAction\", BulkAction.class).invoke(\n                                     bulkActionExecutor, bulkAction));\n                         } catch (IllegalArgumentException biae) {\n+                            if (!(items.iterator().next() instanceof StatusBean)) {\n+                                throw new IllegalArgumentException(\"Invalid items\");\n+                            }\n+\n                             if (!(bulkActionExecutor instanceof AbstractAnyRestClient)) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n                             final AbstractAnyRestClient<?, ?> anyRestClient = AbstractAnyRestClient.class.cast(\n                                     bulkActionExecutor);\n \n-                            if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {\n-                                throw new IllegalArgumentException(\"Invalid items\");\n-                            }\n-\n                             // Group bean information by anyKey\n                             final Map<String, List<StatusBean>> beans = new HashMap<>();\n                             for (T bean : items) {\n@@ -167,34 +182,37 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n                             for (Map.Entry<String, List<StatusBean>> entry : beans.entrySet()) {\n                                 final String etag = anyRestClient.read(entry.getKey()).getETagValue();\n-                                try {\n-                                    switch (ResourceDeassociationAction.valueOf(actionToBeAddresed.name())) {\n-                                        case DEPROVISION:\n-                                            res = anyRestClient.deprovision(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        case UNASSIGN:\n-                                            res = anyRestClient.unassign(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        case UNLINK:\n-                                            res = anyRestClient.unlink(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        default:\n-                                            break;\n-                                    }\n-                                } catch (IllegalArgumentException diae) {\n-                                    switch (ResourceAssociationAction.valueOf(actionToBeAddresed.name())) {\n-                                        case ASSIGN:\n-                                            res = anyRestClient.assign(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        case LINK:\n-                                            res = anyRestClient.link(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        case PROVISION:\n-                                            res = anyRestClient.provision(etag, entry.getKey(), entry.getValue());\n-                                            break;\n-                                        default:\n-                                            break;\n-                                    }\n+                                switch (actionToBeAddresed.name()) {\n+                                    case \"DEPROVISION\":\n+                                        res = anyRestClient.deprovision(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"UNASSIGN\":\n+                                        res = anyRestClient.unassign(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"UNLINK\":\n+                                        res = anyRestClient.unlink(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"ASSIGN\":\n+                                        res = anyRestClient.assign(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"LINK\":\n+                                        res = anyRestClient.link(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"PROVISION\":\n+                                        res = anyRestClient.provision(etag, entry.getKey(), entry.getValue());\n+                                        break;\n+                                    case \"REACTIVATE\":\n+                                        res = ((UserRestClient) anyRestClient).\n+                                                reactivate(etag, entry.getKey(), entry.getValue());\n+                                        fieldName = \"resourceName\";\n+                                        break;\n+                                    case \"SUSPEND\":\n+                                        res = ((UserRestClient) anyRestClient).\n+                                                suspend(etag, entry.getKey(), entry.getValue());\n+                                        fieldName = \"resourceName\";\n+                                        break;\n+                                    default:\n+                                        break;\n                                 }\n                             }\n                         }\n@@ -204,7 +222,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         }\n \n                         final List<IColumn<T, S>> newColumnList = new ArrayList<>(columns);\n-                        newColumnList.add(newColumnList.size(), new BulkActionResultColumn<T, S>(res, keyFieldName));\n+                        newColumnList.add(newColumnList.size(), new BulkActionResultColumn<T, S>(res, fieldName));\n \n                         container.addOrReplace(new AjaxFallbackDefaultDataTable<>(\n                                 \"selectedObjects\","},{"sha":"665870a2a9b4951978c53e6906817ecc7dcf9ef4","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -139,7 +139,7 @@ public static PasswordPatch buildPasswordPatch(final String password, final Coll\n         builder.value(password);\n \n         for (StatusBean status : statuses) {\n-            if (\"syncope\".equalsIgnoreCase(status.getResourceName())) {\n+            if (Constants.SYNCOPE.equalsIgnoreCase(status.getResourceName())) {\n                 builder.onSyncope(true);\n             } else {\n                 builder.resource(status.getResourceName());"},{"sha":"16c5675340a8c0e8cc081750cafbaa326e63820d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -174,7 +174,11 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                             altDefaultModal.setFormModel(formModel);\n \n                             target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+                                    altDefaultModal,\n+                                    pageRef,\n+                                    formModel.getObject().getInnerObject(),\n+                                    \"resourceName\",\n+                                    false)));\n \n                             altDefaultModal.header(new Model<>(\n                                     getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));"},{"sha":"03741176069c9ea3bf88d31575f0582d312c621d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -247,7 +247,11 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         altDefaultModal.setFormModel(formModel);\n \n                         target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+                                altDefaultModal,\n+                                pageRef,\n+                                formModel.getObject().getInnerObject(),\n+                                \"resourceName\",\n+                                false)));\n \n                         altDefaultModal.header(new Model<>(\n                                 getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));"},{"sha":"1683766ab28f989f12046e8d8248d13ce4852be9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":24,"deletions":5,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -41,7 +41,6 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.UserWrapper;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -50,6 +49,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n@@ -68,6 +68,17 @@ protected UserDirectoryPanel(final String id, final Builder builder) {\n \n     protected UserDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n         super(id, builder, wizardInModal);\n+\n+        altDefaultModal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                updateResultTable(target);\n+                modal.show(false);\n+            }\n+        });\n     }\n \n     @Override\n@@ -138,7 +149,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                     model.getObject().getKey());\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n-                        } catch (SyncopeClientException e) {\n+                        } catch (Exception e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                             SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n                                     getName() : e.getMessage());\n@@ -184,7 +195,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                             restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n-                        } catch (SyncopeClientException e) {\n+                        } catch (Exception e) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                             SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n                                     getName() : e.getMessage());\n@@ -205,7 +216,11 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                             altDefaultModal.setFormModel(formModel);\n \n                             target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+                                    altDefaultModal,\n+                                    pageRef,\n+                                    formModel.getObject().getInnerObject(),\n+                                    \"resourceName\",\n+                                    false)));\n \n                             altDefaultModal.header(new Model<>(\n                                     getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n@@ -223,7 +238,11 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                             altDefaultModal.setFormModel(formModel);\n \n                             target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n+                                    altDefaultModal,\n+                                    pageRef,\n+                                    formModel.getObject().getInnerObject(),\n+                                    \"resourceName\",\n+                                    true)));\n \n                             altDefaultModal.header(new Model<>(\n                                     getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));"},{"sha":"68e3a0173da9a4aabbd23a5a3b56a29dc3a2b0f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":47,"deletions":4,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -19,13 +19,18 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import java.util.Map;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n@@ -76,25 +81,63 @@ public ProvisioningResult<UserTO> mustChangePassword(final String etag, final bo\n         return update(etag, userPatch);\n     }\n \n-    public void suspend(final String etag, final String userKey, final List<StatusBean> statuses) {\n+    public BulkActionResult suspend(final String etag, final String userKey, final List<StatusBean> statuses) {\n         StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses, false);\n         statusPatch.setKey(userKey);\n         statusPatch.setType(StatusPatchType.SUSPEND);\n+\n+        BulkActionResult result;\n         synchronized (this) {\n+            result = new BulkActionResult();\n+            Map<String, BulkActionResult.Status> res = result.getResults();\n             UserService service = getService(etag, UserService.class);\n-            service.status(statusPatch);\n+\n+            @SuppressWarnings(\"unchecked\")\n+            ProvisioningResult<UserTO> provisions = (ProvisioningResult<UserTO>) service.status(statusPatch).\n+                    readEntity(ProvisioningResult.class);\n+\n+            if (statusPatch.isOnSyncope()) {\n+                res.put(StringUtils.capitalize(Constants.SYNCOPE),\n+                        \"suspended\".equalsIgnoreCase(provisions.getEntity().getStatus())\n+                        ? BulkActionResult.Status.SUCCESS\n+                        : BulkActionResult.Status.FAILURE);\n+            }\n+\n+            for (PropagationStatus status : provisions.getPropagationStatuses()) {\n+                res.put(status.getResource(), BulkActionResult.Status.valueOf(status.getStatus().name()));\n+            }\n             resetClient(UserService.class);\n         }\n+        return result;\n     }\n \n-    public void reactivate(final String etag, final String userKey, final List<StatusBean> statuses) {\n+    public BulkActionResult reactivate(final String etag, final String userKey, final List<StatusBean> statuses) {\n         StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses, true);\n         statusPatch.setKey(userKey);\n         statusPatch.setType(StatusPatchType.REACTIVATE);\n+\n+        BulkActionResult result;\n         synchronized (this) {\n+            result = new BulkActionResult();\n+            Map<String, BulkActionResult.Status> res = result.getResults();\n             UserService service = getService(etag, UserService.class);\n-            service.status(statusPatch);\n+\n+            @SuppressWarnings(\"unchecked\")\n+            ProvisioningResult<UserTO> provisions = (ProvisioningResult<UserTO>) service.status(statusPatch).\n+                    readEntity(ProvisioningResult.class);\n+\n+            if (statusPatch.isOnSyncope()) {\n+                res.put(StringUtils.capitalize(Constants.SYNCOPE),\n+                        \"active\".equalsIgnoreCase(provisions.getEntity().getStatus())\n+                        ? BulkActionResult.Status.SUCCESS\n+                        : BulkActionResult.Status.FAILURE);\n+            }\n+\n+            for (PropagationStatus status : provisions.getPropagationStatuses()) {\n+                res.put(status.getResource(), BulkActionResult.Status.valueOf(status.getStatus().name()));\n+            }\n             resetClient(UserService.class);\n         }\n+        return result;\n     }\n }"},{"sha":"8699a4275a59cc9571e63b1f09ab4315e452ee56","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -69,28 +69,20 @@\n \n     private final boolean statusOnly;\n \n-    public AnyStatusDirectoryPanel(\n-            final BaseModal<?> baseModal,\n-            final MultilevelPanel multiLevelPanelRef,\n-            final PageReference pageRef,\n-            final AnyTO anyTO) {\n-\n-        this(baseModal, multiLevelPanelRef, pageRef, anyTO, false);\n-    }\n-\n     public AnyStatusDirectoryPanel(\n             final BaseModal<?> baseModal,\n             final MultilevelPanel multiLevelPanelRef,\n             final PageReference pageRef,\n             final AnyTO anyTO,\n+            final String itemKeyFieldName,\n             final boolean statusOnly) {\n \n         super(MultilevelPanel.FIRST_LEVEL_ID, pageRef);\n         this.baseModal = baseModal;\n         this.multiLevelPanelRef = multiLevelPanelRef;\n         this.statusOnly = statusOnly;\n         this.anyTO = anyTO;\n-        this.itemKeyFieldName = statusOnly ? \"anyKey\" : \"resourceName\";\n+        this.itemKeyFieldName = itemKeyFieldName;\n \n         if (anyTO instanceof UserTO) {\n             this.restClient = new UserRestClient();"},{"sha":"3d069f0bb8a07d66a83f08169069df83a50ccc05","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusModal.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -32,8 +32,12 @@\n     private static final long serialVersionUID = 1066124171682570080L;\n \n     public AnyStatusModal(\n-            final BaseModal<?> baseModal, final PageReference pageReference, final T anyTO, final boolean statusOnly) {\n-        super(baseModal, pageReference, anyTO, statusOnly);\n+            final BaseModal<?> baseModal,\n+            final PageReference pageReference,\n+            final T anyTO,\n+            final String itemKeyFieldName,\n+            final boolean statusOnly) {\n+        super(baseModal, pageReference, anyTO, itemKeyFieldName, statusOnly);\n     }\n \n     @Override\n@@ -43,7 +47,8 @@ public AnyStatusModal(\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,\n             final T entity,\n+            final String itemKeyFieldName,\n             final boolean statusOnly) {\n-        return new AnyStatusDirectoryPanel(baseModal, mlp, pageReference, entity, statusOnly);\n+        return new AnyStatusDirectoryPanel(baseModal, mlp, pageReference, entity, itemKeyFieldName, statusOnly);\n     }\n }"},{"sha":"ea07105762574a216d03aca5b7dd4f21089d2492","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusModal.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -47,10 +47,9 @@ public class ResourceStatusModal extends StatusModal<ResourceTO> {\n     public ResourceStatusModal(\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,\n-            final ResourceTO resourceTO,\n-            final boolean statusOnly) {\n+            final ResourceTO resourceTO) {\n \n-        super(baseModal, pageReference, resourceTO, statusOnly);\n+        super(baseModal, pageReference, resourceTO, null, false);\n \n         final LoadableDetachableModel<List<String>> types = new LoadableDetachableModel<List<String>>() {\n \n@@ -87,6 +86,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,\n             final ResourceTO entity,\n+            final String itemKeyFieldName,\n             final boolean statusOnly) {\n \n         return new ResourceStatusDirectoryPanel(baseModal, mlp, pageReference, null, entity);"},{"sha":"9e041514cf0ed17ae18f9471471c7acd7ea2fb21","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusModal.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -39,12 +39,14 @@ public StatusModal(\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,\n             final T entity,\n+            final String itemKeyFieldName,\n             final boolean statusOnly) {\n \n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"status\");\n-        this.directoryPanel = getStatusDirectoryPanel(mlp, baseModal, pageReference, entity, statusOnly);\n+        this.directoryPanel = getStatusDirectoryPanel(\n+                mlp, baseModal, pageReference, entity, itemKeyFieldName, statusOnly);\n         add(mlp.setFirstLevel(this.directoryPanel));\n     }\n \n@@ -54,5 +56,6 @@ public StatusModal(\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,\n             final T entity,\n+            final String itemKeyFieldName,\n             final boolean statusOnly);\n }"},{"sha":"8f58b45e5d6d821ca6a7c6be9e7730aae788fe08","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -351,7 +351,7 @@ public void onClick(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n                 ResourceTO modelObject = resourceRestClient.read(node.getKey().toString());\n                 target.add(propTaskModal.setContent(\n-                        new ResourceStatusModal(propTaskModal, pageRef, modelObject, false)));\n+                        new ResourceStatusModal(propTaskModal, pageRef, modelObject)));\n                 propTaskModal.header(new ResourceModel(\"resource.provisioning.status\", \"Provisioning Status\"));\n                 propTaskModal.show(true);\n             }"},{"sha":"7a19af192ac8e49de6bd084eeb5d574aeaf55f5d","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -366,6 +366,8 @@ public Response bulk(final BulkAction bulkAction) {\n                         StatusPatch statusPatch = new StatusPatch();\n                         statusPatch.setKey(key);\n                         statusPatch.setType(StatusPatchType.SUSPEND);\n+                        statusPatch.setOnSyncope(true);\n+\n                         try {\n                             result.getResults().put(\n                                     ((UserLogic) logic).\n@@ -387,6 +389,8 @@ public Response bulk(final BulkAction bulkAction) {\n                         StatusPatch statusPatch = new StatusPatch();\n                         statusPatch.setKey(key);\n                         statusPatch.setType(StatusPatchType.REACTIVATE);\n+                        statusPatch.setOnSyncope(true);\n+\n                         try {\n                             result.getResults().put(\n                                     ((UserLogic) logic)."},{"sha":"392443a53924c4242cc12249da7e7702d138fb00","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":54,"deletions":3,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c54adf5ce25d7a4de93a0805b639b25ba83eb34b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=c54adf5ce25d7a4de93a0805b639b25ba83eb34b","patch":"@@ -18,9 +18,13 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n \n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.status.Status;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -109,8 +113,16 @@ public void userResourceBulkAction() {\n \n     @Test\n     public void userStatusBulkAction() {\n-        // suspend \n+        userStatusBulkAction(1, \"resource-testdb2\");\n+    }\n \n+    @Test\n+    public void userStatusOnSyncopeOnlyBulkAction() {\n+        userStatusBulkAction(0, \"Syncope\");\n+    }\n+\n+    private void userStatusBulkAction(final int index, final String resourceName) {\n+        // suspend \n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n@@ -124,12 +136,20 @@ public void userStatusBulkAction() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n+        component = findComponentByProp(\"resourceName\",\n+                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n+\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n+        assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n+\n         FormTester formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n-        formTester.select(\"checkgroup\", 2);\n+        formTester.select(\"checkgroup\", index);\n \n         TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n@@ -142,9 +162,23 @@ public void userStatusBulkAction() {\n                 + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n                 Constants.ON_CLICK);\n \n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n         TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n+                Constants.ON_CLICK);\n+\n+        component = findComponentByProp(\"resourceName\",\n+                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n+\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        assertEquals(Status.SUSPENDED, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n+        assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n+\n         // re-activate\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n@@ -164,7 +198,7 @@ public void userStatusBulkAction() {\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n-        formTester.select(\"checkgroup\", 2);\n+        formTester.select(\"checkgroup\", index);\n \n         TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n@@ -177,8 +211,25 @@ public void userStatusBulkAction() {\n                 + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n                 Constants.ON_CLICK);\n \n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n         TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n+\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n+                Constants.ON_CLICK);\n+\n+        component = findComponentByProp(\"resourceName\",\n+                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n+\n+        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n+        assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n+\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\",\n+                Constants.ON_CLICK);\n     }\n \n     @Test"}]}