{"sha":"19fbbb3fdb19eddcb536b5104b121cc44891c88a","node_id":"C_kwDOJfYA1toAKDE5ZmJiYjNmZGIxOWVkZGNiNTM2YjUxMDRiMTIxY2M0NDg5MWM4OGE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-07-01T09:26:28Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-01T09:26:28Z"},"message":"[SYNCOPE-1545] Allow for easier WA customization (#358)","tree":{"sha":"382b43552fd4b9dd38055d00b7f29a2f6f115c4f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/382b43552fd4b9dd38055d00b7f29a2f6f115c4f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/19fbbb3fdb19eddcb536b5104b121cc44891c88a","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivr3ECRBK7hj4Ov3rIwAAaogIAGmErFGs0D3tdg3oF27Esiac\n3G6qW830S210x+V7RcflDZ7Iey1BBJWRRjD/oaFRYFjyC/sNeAF1+FYR+5pAxY3l\nJB757C3glODnStT8V1iVWvaKSwS6wM66IfraSHSYuHsB/dgeRtGz7vLvcMAtDjxU\n+vbQY0yfbQ3tsHlwF4Jl0bu8ya1+VuVmFVBQJntS7RaYETspv6VQGGm4EoyjO0t3\nDLkvZb4j9P6vK54mVS0tow1UeqclQFwCLDl86BmjE6B02IiNptfYnC1TvOLNQdfF\nGnacweMogppGWiIzlHyFHCGFHzokQgbtqMYGHJrt1du+MRSwI3fyLDKnys+qeQM=\n=VZkt\n-----END PGP SIGNATURE-----\n","payload":"tree 382b43552fd4b9dd38055d00b7f29a2f6f115c4f\nparent e962bd0956d013cda6419f8ce1063c653ba55100\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1656667588 +0200\ncommitter GitHub <noreply@github.com> 1656667588 +0200\n\n[SYNCOPE-1545] Allow for easier WA customization (#358)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19fbbb3fdb19eddcb536b5104b121cc44891c88a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/19fbbb3fdb19eddcb536b5104b121cc44891c88a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19fbbb3fdb19eddcb536b5104b121cc44891c88a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e962bd0956d013cda6419f8ce1063c653ba55100","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e962bd0956d013cda6419f8ce1063c653ba55100","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e962bd0956d013cda6419f8ce1063c653ba55100"}],"stats":{"total":226,"additions":143,"deletions":83},"files":[{"sha":"18edec4b4e38df381eefdb01771091a9c4f0ac21","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/AttrRepoConf.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FAttrRepoConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,20 +21,21 @@\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.Map;\n import org.apache.syncope.common.lib.BaseBean;\n+import org.apache.syncope.common.lib.to.AttrRepoTO;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n public interface AttrRepoConf extends BaseBean {\n \n     interface Mapper {\n \n-        Map<String, Object> map(StubAttrRepoConf conf);\n+        Map<String, Object> map(AttrRepoTO attrRepo, StubAttrRepoConf conf);\n \n-        Map<String, Object> map(LDAPAttrRepoConf conf);\n+        Map<String, Object> map(AttrRepoTO attrRepo, LDAPAttrRepoConf conf);\n \n-        Map<String, Object> map(JDBCAttrRepoConf conf);\n+        Map<String, Object> map(AttrRepoTO attrRepo, JDBCAttrRepoConf conf);\n \n-        Map<String, Object> map(SyncopeAttrRepoConf conf);\n+        Map<String, Object> map(AttrRepoTO attrRepo, SyncopeAttrRepoConf conf);\n     }\n \n-    Map<String, Object> map(Mapper mapper);\n+    Map<String, Object> map(AttrRepoTO attrRepo, Mapper mapper);\n }"},{"sha":"1c25e5fe51bd177603581f0f9e55af7de5c0cb91","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/JDBCAttrRepoConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractJDBCConf;\n+import org.apache.syncope.common.lib.to.AttrRepoTO;\n \n public class JDBCAttrRepoConf extends AbstractJDBCConf implements AttrRepoConf {\n \n@@ -151,7 +152,7 @@ public Map<String, String> getQueryAttributes() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AttrRepoTO attrRepo, final Mapper mapper) {\n+        return mapper.map(attrRepo, this);\n     }\n }"},{"sha":"6819a53b12b6689b689d65e1a7b0c4bedf736c80","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/LDAPAttrRepoConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,6 +21,7 @@\n import java.util.HashMap;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractLDAPConf;\n+import org.apache.syncope.common.lib.to.AttrRepoTO;\n \n public class LDAPAttrRepoConf extends AbstractLDAPConf implements AttrRepoConf {\n \n@@ -67,7 +68,7 @@ public Map<String, String> getQueryAttributes() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AttrRepoTO attrRepo, final Mapper mapper) {\n+        return mapper.map(attrRepo, this);\n     }\n }"},{"sha":"4d443eccaa5103da114e4ca73b0a5ca060190b94","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/StubAttrRepoConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FStubAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FStubAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FStubAttrRepoConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AttrRepoTO;\n \n public class StubAttrRepoConf implements AttrRepoConf {\n \n@@ -37,7 +38,7 @@ public Map<String, String> getAttributes() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AttrRepoTO attrRepo, final Mapper mapper) {\n+        return mapper.map(attrRepo, this);\n     }\n }"},{"sha":"0704a4144946a4e404c6190e0fc7dd674afae8e9","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/SyncopeAttrRepoConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FSyncopeAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FSyncopeAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FSyncopeAttrRepoConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,6 +21,7 @@\n import java.util.HashMap;\n import java.util.Map;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AttrRepoTO;\n \n public class SyncopeAttrRepoConf implements AttrRepoConf {\n \n@@ -88,7 +89,7 @@ public Map<String, String> getHeaders() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AttrRepoTO attrRepo, final Mapper mapper) {\n+        return mapper.map(attrRepo, this);\n     }\n }"},{"sha":"bb08dc9c14940327e24b5818b2e2a5ab2115eee2","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/AuthModuleConf.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,34 +21,35 @@\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.Map;\n import org.apache.syncope.common.lib.BaseBean;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n public interface AuthModuleConf extends BaseBean {\n \n     interface Mapper {\n \n-        Map<String, Object> map(StaticAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, StaticAuthModuleConf conf);\n \n-        Map<String, Object> map(LDAPAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, LDAPAuthModuleConf conf);\n \n-        Map<String, Object> map(JDBCAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, JDBCAuthModuleConf conf);\n \n-        Map<String, Object> map(JaasAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, JaasAuthModuleConf conf);\n \n-        Map<String, Object> map(OIDCAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, OIDCAuthModuleConf conf);\n \n-        Map<String, Object> map(SAML2IdPAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, SAML2IdPAuthModuleConf conf);\n \n-        Map<String, Object> map(SyncopeAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, SyncopeAuthModuleConf conf);\n \n-        Map<String, Object> map(GoogleMfaAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, GoogleMfaAuthModuleConf conf);\n \n-        Map<String, Object> map(DuoMfaAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, DuoMfaAuthModuleConf conf);\n \n-        Map<String, Object> map(U2FAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, U2FAuthModuleConf conf);\n \n-        Map<String, Object> map(SimpleMfaAuthModuleConf conf);\n+        Map<String, Object> map(AuthModuleTO authModule, SimpleMfaAuthModuleConf conf);\n     }\n \n-    Map<String, Object> map(Mapper mapper);\n+    Map<String, Object> map(AuthModuleTO authModule, Mapper mapper);\n }"},{"sha":"121f8e9dcab5c1d32cadc5623e53e33fa868a65e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/DuoMfaAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.auth;\n \n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class DuoMfaAuthModuleConf implements MFAAuthModuleConf {\n \n@@ -70,7 +71,7 @@ public void setApiHost(final String apiHost) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"0fa3230002e749e412c60b3070487ef452acfd55","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/GoogleMfaAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractLDAPConf;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class GoogleMfaAuthModuleConf implements MFAAuthModuleConf {\n \n@@ -130,7 +131,7 @@ public void setLdap(final LDAP ldap) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"6b2d750b09f8d44d5d772c2a6b99333a30a3c761","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JDBCAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractJDBCConf;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class JDBCAuthModuleConf extends AbstractJDBCConf implements AuthModuleConf {\n \n@@ -76,7 +77,7 @@ public List<String> getPrincipalAttributeList() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"c2f2ca94f3f7807b69762eb9c5e885c57ea26dd3","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JaasAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.auth;\n \n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class JaasAuthModuleConf implements AuthModuleConf {\n \n@@ -84,7 +85,7 @@ public void setLoginConfigurationFile(final String loginConfigurationFile) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"a3233d75df4ed884c6f99af2b593461ad171f0b8","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/LDAPAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractLDAPConf;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class LDAPAuthModuleConf extends AbstractLDAPConf implements AuthModuleConf {\n \n@@ -52,7 +53,7 @@ public List<String> getPrincipalAttributeList() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"81e65a2738713d21aacfe9255331f281957a7c8f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/OIDCAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class OIDCAuthModuleConf implements AuthModuleConf {\n \n@@ -168,7 +169,7 @@ public void setResponseType(final String responseType) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"29abe71ce0804d59320b7594dbe3d7cb7f6975f6","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SAML2IdPAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n public class SAML2IdPAuthModuleConf implements AuthModuleConf {\n@@ -386,7 +387,7 @@ public void setProviderName(final String providerName) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"9b0bed937b26a1faf89ecce397282eb979c969a5","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SimpleMfaAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSimpleMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSimpleMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSimpleMfaAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.auth;\n \n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class SimpleMfaAuthModuleConf implements MFAAuthModuleConf {\n \n@@ -100,7 +101,7 @@ public void setTokenLength(final int tokenLength) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"cc0c064a6b7fd71202474a3c82779f6ed981cb07","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/StaticAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class StaticAuthModuleConf implements AuthModuleConf {\n \n@@ -32,7 +33,7 @@ public Map<String, String> getUsers() {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"109c858ebe3ce330e162ecd185f56621cf2028d5","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SyncopeAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Map;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class SyncopeAuthModuleConf implements AuthModuleConf {\n \n@@ -36,7 +37,7 @@ public void setDomain(final String domain) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"1ba76264ac77b0e4f1e19bf92bd9d57c0148de9f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/U2FAuthModuleConf.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.auth;\n \n import java.util.Map;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n \n public class U2FAuthModuleConf implements MFAAuthModuleConf {\n \n@@ -70,7 +71,7 @@ public void setExpireDevicesTimeUnit(final String expireDevicesTimeUnit) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final Mapper mapper) {\n-        return mapper.map(this);\n+    public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n+        return mapper.map(authModule, this);\n     }\n }"},{"sha":"5a7b92d858a4dba222cab2bcf5ff8c1765cdd786","filename":"pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -1418,6 +1418,11 @@ under the License.\n         <artifactId>cas-server-support-person-directory</artifactId>\n         <version>${cas.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-person-directory-core</artifactId>\n+        <version>${cas.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.apereo.cas</groupId>\n         <artifactId>cas-server-support-themes</artifactId>"},{"sha":"e42ee01dba92eb189d440eae5608257a21352a5a","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/AttrRepoPropertySourceMapper.java","status":"modified","additions":15,"deletions":11,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.attr.AttrRepoConf;\n import org.apache.syncope.common.lib.attr.JDBCAttrRepoConf;\n import org.apache.syncope.common.lib.attr.LDAPAttrRepoConf;\n@@ -35,17 +36,14 @@\n \n public class AttrRepoPropertySourceMapper extends PropertySourceMapper implements AttrRepoConf.Mapper {\n \n-    protected final String syncopeClientAddress;\n+    protected final WARestClient waRestClient;\n \n-    protected final AttrRepoTO attrRepoTO;\n-\n-    public AttrRepoPropertySourceMapper(final String syncopeClientAddress, final AttrRepoTO attrRepoTO) {\n-        this.syncopeClientAddress = syncopeClientAddress;\n-        this.attrRepoTO = attrRepoTO;\n+    public AttrRepoPropertySourceMapper(final WARestClient waRestClient) {\n+        this.waRestClient = waRestClient;\n     }\n \n     @Override\n-    public Map<String, Object> map(final StubAttrRepoConf conf) {\n+    public Map<String, Object> map(final AttrRepoTO attrRepoTO, final StubAttrRepoConf conf) {\n         StubPrincipalAttributesProperties props = new StubPrincipalAttributesProperties();\n         props.setId(attrRepoTO.getKey());\n         props.setState(AttributeRepositoryStates.valueOf(attrRepoTO.getState().name()));\n@@ -56,7 +54,7 @@ public Map<String, Object> map(final StubAttrRepoConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final LDAPAttrRepoConf conf) {\n+    public Map<String, Object> map(final AttrRepoTO attrRepoTO, final LDAPAttrRepoConf conf) {\n         LdapPrincipalAttributesProperties props = new LdapPrincipalAttributesProperties();\n         props.setId(attrRepoTO.getKey());\n         props.setState(AttributeRepositoryStates.valueOf(attrRepoTO.getState().name()));\n@@ -70,7 +68,7 @@ public Map<String, Object> map(final LDAPAttrRepoConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final JDBCAttrRepoConf conf) {\n+    public Map<String, Object> map(final AttrRepoTO attrRepoTO, final JDBCAttrRepoConf conf) {\n         JdbcPrincipalAttributesProperties props = new JdbcPrincipalAttributesProperties();\n         props.setId(attrRepoTO.getKey());\n         props.setState(AttributeRepositoryStates.valueOf(attrRepoTO.getState().name()));\n@@ -91,13 +89,19 @@ public Map<String, Object> map(final JDBCAttrRepoConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final SyncopeAttrRepoConf conf) {\n+    public Map<String, Object> map(final AttrRepoTO attrRepoTO, final SyncopeAttrRepoConf conf) {\n+        SyncopeClient syncopeClient = waRestClient.getSyncopeClient();\n+        if (syncopeClient == null) {\n+            LOG.warn(\"Application context is not ready to bootstrap WA configuration\");\n+            return Map.of();\n+        }\n+\n         SyncopePrincipalAttributesProperties props = new SyncopePrincipalAttributesProperties();\n         props.setId(attrRepoTO.getKey());\n         props.setState(AttributeRepositoryStates.valueOf(attrRepoTO.getState().name()));\n         props.setOrder(attrRepoTO.getOrder());\n         props.setDomain(conf.getDomain());\n-        props.setUrl(StringUtils.substringBefore(syncopeClientAddress, \"/rest\"));\n+        props.setUrl(StringUtils.substringBefore(syncopeClient.getAddress(), \"/rest\"));\n         props.setSearchFilter(conf.getSearchFilter());\n         props.setBasicAuthUsername(conf.getBasicAuthUsername());\n         props.setBasicAuthPassword(conf.getBasicAuthPassword());"},{"sha":"27b8d268ac1dd5d9b5724b8898e9d54fc3538356","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/AuthModulePropertySourceMapper.java","status":"modified","additions":22,"deletions":18,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -22,6 +22,7 @@\n import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.auth.AuthModuleConf;\n import org.apache.syncope.common.lib.auth.DuoMfaAuthModuleConf;\n import org.apache.syncope.common.lib.auth.GoogleMfaAuthModuleConf;\n@@ -57,17 +58,14 @@\n \n public class AuthModulePropertySourceMapper extends PropertySourceMapper implements AuthModuleConf.Mapper {\n \n-    protected final String syncopeClientAddress;\n+    protected final WARestClient waRestClient;\n \n-    protected final AuthModuleTO authModuleTO;\n-\n-    public AuthModulePropertySourceMapper(final String syncopeClientAddress, final AuthModuleTO attrRepoTO) {\n-        this.syncopeClientAddress = syncopeClientAddress;\n-        this.authModuleTO = attrRepoTO;\n+    public AuthModulePropertySourceMapper(final WARestClient waRestClient) {\n+        this.waRestClient = waRestClient;\n     }\n \n     @Override\n-    public Map<String, Object> map(final StaticAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final StaticAuthModuleConf conf) {\n         AcceptAuthenticationProperties props = new AcceptAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n@@ -81,7 +79,7 @@ public Map<String, Object> map(final StaticAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final LDAPAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final LDAPAuthModuleConf conf) {\n         LdapAuthenticationProperties props = new LdapAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n@@ -97,7 +95,7 @@ public Map<String, Object> map(final LDAPAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final JDBCAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final JDBCAuthModuleConf conf) {\n         QueryJdbcAuthenticationProperties props = new QueryJdbcAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n@@ -113,7 +111,7 @@ public Map<String, Object> map(final JDBCAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final JaasAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final JaasAuthModuleConf conf) {\n         JaasAuthenticationProperties props = new JaasAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n@@ -128,7 +126,7 @@ public Map<String, Object> map(final JaasAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final OIDCAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final OIDCAuthModuleConf conf) {\n         Pac4jGenericOidcClientProperties props = new Pac4jGenericOidcClientProperties();\n         props.setId(conf.getId());\n         props.setEnabled(authModuleTO.getState() == AuthModuleState.ACTIVE);\n@@ -149,7 +147,7 @@ public Map<String, Object> map(final OIDCAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final SAML2IdPAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final SAML2IdPAuthModuleConf conf) {\n         Pac4jSamlClientProperties props = new Pac4jSamlClientProperties();\n         props.setClientName(authModuleTO.getKey());\n         props.setEnabled(authModuleTO.getState() == AuthModuleState.ACTIVE);\n@@ -180,18 +178,24 @@ public Map<String, Object> map(final SAML2IdPAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final SyncopeAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final SyncopeAuthModuleConf conf) {\n+        SyncopeClient syncopeClient = waRestClient.getSyncopeClient();\n+        if (syncopeClient == null) {\n+            LOG.warn(\"Application context is not ready to bootstrap WA configuration\");\n+            return Map.of();\n+        }\n+\n         SyncopeAuthenticationProperties props = new SyncopeAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n         props.setDomain(conf.getDomain());\n-        props.setUrl(StringUtils.substringBefore(syncopeClientAddress, \"/rest\"));\n+        props.setUrl(StringUtils.substringBefore(syncopeClient.getAddress(), \"/rest\"));\n \n         return prefix(\"cas.authn.syncope.\", CasCoreConfigurationUtils.asMap(props));\n     }\n \n     @Override\n-    public Map<String, Object> map(final GoogleMfaAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final GoogleMfaAuthModuleConf conf) {\n         GoogleAuthenticatorMultifactorProperties props = new GoogleAuthenticatorMultifactorProperties();\n         props.setName(authModuleTO.getKey());\n         props.setOrder(authModuleTO.getOrder());\n@@ -213,7 +217,7 @@ public Map<String, Object> map(final GoogleMfaAuthModuleConf conf) {\n \n     @SuppressWarnings(\"deprecation\")\n     @Override\n-    public Map<String, Object> map(final DuoMfaAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final DuoMfaAuthModuleConf conf) {\n         DuoSecurityMultifactorAuthenticationProperties props = new DuoSecurityMultifactorAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setOrder(authModuleTO.getOrder());\n@@ -226,7 +230,7 @@ public Map<String, Object> map(final DuoMfaAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final U2FAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final U2FAuthModuleConf conf) {\n         U2FMultifactorAuthenticationProperties props = new U2FMultifactorAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setOrder(authModuleTO.getOrder());\n@@ -239,7 +243,7 @@ public Map<String, Object> map(final U2FAuthModuleConf conf) {\n     }\n \n     @Override\n-    public Map<String, Object> map(final SimpleMfaAuthModuleConf conf) {\n+    public Map<String, Object> map(final AuthModuleTO authModuleTO, final SimpleMfaAuthModuleConf conf) {\n         CasSimpleMultifactorAuthenticationProperties props = new CasSimpleMultifactorAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setOrder(authModuleTO.getOrder());"},{"sha":"1ffd7a7393cc2fa4d4e2be366143b71d747a09cb","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/WABootstrapConfiguration.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWABootstrapConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWABootstrapConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWABootstrapConfiguration.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.wa.bootstrap;\n \n import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.cloud.bootstrap.config.PropertySourceLocator;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n@@ -50,9 +51,26 @@ public WARestClient waRestClient() {\n     @Configuration(proxyBeanMethods = false)\n     public static class PropertySourceConfiguration {\n \n+        @ConditionalOnMissingBean\n         @Bean\n-        public PropertySourceLocator configPropertySourceLocator(final WARestClient waRestClient) {\n-            return new WAPropertySourceLocator(waRestClient);\n+        public AuthModulePropertySourceMapper authModulePropertySourceMapper(final WARestClient waRestClient) {\n+            return new AuthModulePropertySourceMapper(waRestClient);\n+        }\n+\n+        @ConditionalOnMissingBean\n+        @Bean\n+        public AttrRepoPropertySourceMapper attrRepoPropertySourceMapper(final WARestClient waRestClient) {\n+            return new AttrRepoPropertySourceMapper(waRestClient);\n+        }\n+\n+        @Bean\n+        public PropertySourceLocator configPropertySourceLocator(\n+                final WARestClient waRestClient,\n+                final AuthModulePropertySourceMapper authModulePropertySourceMapper,\n+                final AttrRepoPropertySourceMapper attrRepoPropertySourceMapper) {\n+\n+            return new WAPropertySourceLocator(\n+                    waRestClient, authModulePropertySourceMapper, attrRepoPropertySourceMapper);\n         }\n     }\n }"},{"sha":"1257a57897a89a3517bc72f52d1859a76a6dd8cd","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/WAPropertySourceLocator.java","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWAPropertySourceLocator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWAPropertySourceLocator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FWAPropertySourceLocator.java?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -43,8 +43,18 @@ public class WAPropertySourceLocator implements PropertySourceLocator {\n \n     protected final WARestClient waRestClient;\n \n-    public WAPropertySourceLocator(final WARestClient waRestClient) {\n+    protected final AuthModulePropertySourceMapper authModulePropertySourceMapper;\n+\n+    protected final AttrRepoPropertySourceMapper attrRepoPropertySourceMapper;\n+\n+    public WAPropertySourceLocator(\n+            final WARestClient waRestClient,\n+            final AuthModulePropertySourceMapper authModulePropertySourceMapper,\n+            final AttrRepoPropertySourceMapper attrRepoPropertySourceMapper) {\n+\n         this.waRestClient = waRestClient;\n+        this.authModulePropertySourceMapper = authModulePropertySourceMapper;\n+        this.attrRepoPropertySourceMapper = attrRepoPropertySourceMapper;\n     }\n \n     protected Map<String, Object> index(final Map<String, Object> map, final Map<String, Integer> prefixes) {\n@@ -82,16 +92,14 @@ public PropertySource<?> locate(final Environment environment) {\n         syncopeClient.getService(AuthModuleService.class).list().forEach(authModuleTO -> {\n             LOG.debug(\"Mapping auth module {} \", authModuleTO.getKey());\n \n-            Map<String, Object> map = authModuleTO.getConf().map(\n-                    new AuthModulePropertySourceMapper(syncopeClient.getAddress(), authModuleTO));\n+            Map<String, Object> map = authModuleTO.getConf().map(authModuleTO, authModulePropertySourceMapper);\n             properties.putAll(index(map, prefixes));\n         });\n \n         syncopeClient.getService(AttrRepoService.class).list().forEach(attrRepoTO -> {\n             LOG.debug(\"Mapping attr repo {} \", attrRepoTO.getKey());\n \n-            Map<String, Object> map = attrRepoTO.getConf().map(\n-                    new AttrRepoPropertySourceMapper(syncopeClient.getAddress(), attrRepoTO));\n+            Map<String, Object> map = attrRepoTO.getConf().map(attrRepoTO, attrRepoPropertySourceMapper);\n             properties.putAll(index(map, prefixes));\n         });\n "},{"sha":"8abf4c0bcdbe4e6ea5861d9cf6f8c242a879812e","filename":"wa/starter/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/19fbbb3fdb19eddcb536b5104b121cc44891c88a/wa%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fpom.xml?ref=19fbbb3fdb19eddcb536b5104b121cc44891c88a","patch":"@@ -162,6 +162,10 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-person-directory</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apereo.cas</groupId>\n+      <artifactId>cas-server-support-person-directory-core</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-themes</artifactId>"}]}