{"sha":"972ca985f125db9f5ff64804b49c65e8c0802076","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk3MmNhOTg1ZjEyNWRiOWY1ZmY2NDgwNGI0OWM2NWU4YzA4MDIwNzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-30T15:06:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-30T15:06:37Z"},"message":"[SYNCOPE-538] Merge from 1_2_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1614680 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9262b96686e6ea241fc71d400736e9a714e22314","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9262b96686e6ea241fc71d400736e9a714e22314"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/972ca985f125db9f5ff64804b49c65e8c0802076","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/972ca985f125db9f5ff64804b49c65e8c0802076","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/972ca985f125db9f5ff64804b49c65e8c0802076","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/972ca985f125db9f5ff64804b49c65e8c0802076/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"20f0d874f94ff3d9713ecf50f77f62d39ce71265","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20f0d874f94ff3d9713ecf50f77f62d39ce71265","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/20f0d874f94ff3d9713ecf50f77f62d39ce71265"},{"sha":"feb1dd7056191f216e78e71312484bcc42a23f8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/feb1dd7056191f216e78e71312484bcc42a23f8e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/feb1dd7056191f216e78e71312484bcc42a23f8e"}],"stats":{"total":815,"additions":491,"deletions":324},"files":[{"sha":"c718cecdd0f4d818f477404552981715987d5bf6","filename":"archetype/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -178,7 +178,7 @@ under the License.\n         <directory>../console/src/test/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/test/resources</targetPath>\n         <includes>\n-          <include>configuration.properties</include>\n+          <include>console.properties</include>\n         </includes>\n       </resource>\n     </resources>"},{"sha":"5f3fbf674137d386e80832f20d944822fa6c7927","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -16,7 +16,6 @@ software distributed under the License is distributed on an\n KIND, either express or implied.  See the License for the\r\n specific language governing permissions and limitations\r\n under the License.\r\n-\r\n -->\r\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n \r\n@@ -158,15 +157,12 @@ under the License.\n             </goals>\r\n           </execution>\r\n           <execution>\r\n-            <id>explodeSyncopeWAR</id>\r\n+            <id>setupTestWebapp</id>\r\n             <phase>pre-integration-test</phase>\r\n             <configuration>\r\n               <target>\r\n                 <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\"/>\r\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\r\n-                <copy todir=\"${cargo.run.dir}/WEB-INF/classes\" includeEmptyDirs=\"false\">\r\n-                  <fileset dir=\"${project.build.directory}/test-classes\"/>\r\n-                </copy>\r\n               </target>\r\n             </configuration>\r\n             <goals>\r\n@@ -178,7 +174,9 @@ under the License.\n             <phase>pre-integration-test</phase>\r\n             <configuration>\r\n               <target>\r\n-                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\"/>\r\n+                <copy file=\"${project.build.directory}/test-classes/test.csv\" \r\n+                      todir=\"${test.csvdir.path}\" \r\n+                      overwrite=\"true\"/>\r\n               </target>    \r\n             </configuration>\r\n             <goals>\r\n@@ -200,9 +198,6 @@ under the License.\n                 <artifactId>h2</artifactId>\r\n               </dependency>\r\n             </dependencies>\r\n-            <systemProperties>\r\n-              <syncope.console.configuration>${project.build.directory}/test-classes/configuration.properties</syncope.console.configuration>\r\n-            </systemProperties>\r\n           </container>\r\n           <configuration>\r\n             <type>standalone</type>\r\n@@ -271,9 +266,12 @@ under the License.\n   <profiles>\r\n     <profile>\r\n       <id>embedded</id>\r\n+      \r\n       <properties>\r\n+        <conf.directory>${project.build.directory}/test-classes</conf.directory>\r\n         <skipTests>true</skipTests>\r\n       </properties>\r\n+      \r\n       <build>\r\n         <defaultGoal>clean verify cargo:run</defaultGoal>    \r\n       </build>\r"},{"sha":"92aa30c9f3c983fdd248da3773cbe6ee6c8615c1","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -16,7 +16,6 @@ software distributed under the License is distributed on an\n KIND, either express or implied.  See the License for the\r\n specific language governing permissions and limitations\r\n under the License.\r\n-\r\n -->\r\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n \r\n@@ -136,17 +135,12 @@ under the License.\n         <inherited>true</inherited>\r\n         <executions>\r\n           <execution>\r\n-            <id>explodeSyncopeWAR</id>\r\n+            <id>setupTestWebapp</id>\r\n             <phase>pre-integration-test</phase>\r\n             <configuration>\r\n               <target>\r\n                 <unzip src=\"${project.build.directory}/${project.build.finalName}.war\" dest=\"${cargo.run.dir}\"/>\r\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\r\n-                <copy todir=\"${cargo.run.dir}/WEB-INF/classes\" includeEmptyDirs=\"false\" overwrite=\"true\">\r\n-                  <fileset dir=\"${project.build.directory}/test-classes\">\r\n-                    <exclude name=\"**/*.class\" />\r\n-                  </fileset>\r\n-                </copy>\r\n               </target>\r\n             </configuration>\r\n             <goals>\r\n@@ -158,7 +152,9 @@ under the License.\n             <phase>pre-integration-test</phase>\r\n             <configuration>\r\n               <target>\r\n-                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\"/>\r\n+                <copy file=\"${project.build.directory}/test-classes/test.csv\" \r\n+                      todir=\"${test.csvdir.path}\" \r\n+                      overwrite=\"true\"/>\r\n               </target>    \r\n             </configuration>\r\n             <goals>\r"},{"sha":"63ecda29066efd5b5c562b7c371f7d5e2a044753","filename":"console/pom.xml","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -253,19 +253,18 @@ under the License.\n             </goals>\n           </execution>\n           <execution>\n-            <id>explodeSyncopeWAR</id>\n+            <id>setupTestWebapp</id>\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n                 <unzip src=\"${basedir}/../core/target/syncope.war\" dest=\"${cargo.run.dir}\"/>\n+                <copy file=\"${basedir}/../core/target/test-classes/org/apache/syncope/core/sync/TestSyncActions.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\"/>\n+                <copy file=\"${basedir}/../core/target/test-classes/org/apache/syncope/core/sync/TestSyncRule.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\"/>\n+                <copy file=\"${basedir}/../core/target/test-classes/org/apache/syncope/core/rest/data/DoubleValueAttributableTransformer.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/rest/data\"/>\n                 <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\"/>\n-                <copy todir=\"${cargo.run.dir}/WEB-INF/classes\" includeEmptyDirs=\"false\">\n-                  <fileset dir=\"${project.build.directory}/test-classes\">\n-                    <exclude name=\"**/*.class\"/>\n-                    <exclude name=\"restClientContext.xml\"/>\n-                    <exclude name=\"rest.properties\"/>\n-                  </fileset>\n-                </copy>\n               </target>\n             </configuration>\n             <goals>\n@@ -277,7 +276,9 @@ under the License.\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n-                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\"/>\n+                <copy file=\"${project.build.directory}/test-classes/test.csv\" \n+                      todir=\"${test.csvdir.path}\" \n+                      overwrite=\"true\"/>\n               </target>\n             </configuration>\n             <goals>\n@@ -299,9 +300,6 @@ under the License.\n                 <artifactId>h2</artifactId>\n               </dependency>\n             </dependencies>\n-            <systemProperties>\n-              <syncope.console.configuration>${project.build.directory}/test-classes/configuration.properties</syncope.console.configuration>\n-            </systemProperties>\n           </container>\n           <configuration>\n             <type>standalone</type>\n@@ -467,7 +465,7 @@ under the License.\n             <inherited>true</inherited>\n             <executions>\n               <execution>\n-                <id>explodeSyncopeWAR</id>\n+                <id>setupTestWebapp</id>\n                 <phase>none</phase>\n               </execution>\n               <execution>"},{"sha":"64b69c0e48f7f384f15575de3845af0aabc7fac0","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -74,13 +74,13 @@ public static SyncopeSession get() {\n     public SyncopeSession(final Request request) {\n         super(request);\n \n-        final ApplicationContext applicationContext = WebApplicationContextUtils.\n+        final ApplicationContext ctx = WebApplicationContextUtils.\n                 getWebApplicationContext(WebApplication.get().getServletContext());\n \n-        clientFactory = applicationContext.getBean(SyncopeClientFactoryBean.class).\n+        clientFactory = ctx.getBean(SyncopeClientFactoryBean.class).\n                 setContentType(SyncopeClientFactoryBean.ContentType.JSON);\n-        anonymousUser = applicationContext.getBean(\"anonymousUser\", String.class);\n-        anonymousKey = applicationContext.getBean(\"anonymousKey\", String.class);\n+        anonymousUser = ctx.getBean(\"anonymousUser\", String.class);\n+        anonymousKey = ctx.getBean(\"anonymousKey\", String.class);\n     }\n \n     public void resetClients() {"},{"sha":"50fb943c1cb50748755ba66c2b642e81cdca08f4","filename":"console/src/main/resources/console.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","previous_filename":"console/src/main/resources/configuration.properties"},{"sha":"08a98a51d1eba672ec47cdce7c8c023f6971d28a","filename":"console/src/main/resources/consoleContext.xml","status":"renamed","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FconsoleContext.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -32,22 +32,18 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.console.init\"/>\n   <context:component-scan base-package=\"org.apache.syncope.console.preview\"/>\n \n-  <bean id=\"systemPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"order\" value=\"1\"/>\n-    <property name=\"location\" value=\"file:#{(systemProperties['syncope.console.configuration'])}\"/>\n+    <property name=\"location\" value=\"file:${conf.directory}/console.properties\"/>\n     <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n     <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n   </bean>\n-  <bean id=\"defaultPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>classpath:configuration.properties</value>\n-      </list>\n-    </property>\n+  <bean id=\"classpathPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+    <property name=\"location\" value=\"classpath:console.properties\"/>\n   </bean>\n \n   <bean id=\"version\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${project.parent.version}\"/>\n+    <constructor-arg value=\"${syncope.version}\"/>\n   </bean>\n \n   <bean id=\"site\" class=\"java.lang.String\">","previous_filename":"console/src/main/resources/applicationContext.xml"},{"sha":"7f1d9d12e60bf72072ea88d68d6ac8355af9a0ab","filename":"console/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -32,7 +32,7 @@ under the License.\n \n   <context-param>\n     <param-name>contextConfigLocation</param-name>\n-    <param-value>classpath:applicationContext.xml</param-value>\n+    <param-value>classpath:consoleContext.xml</param-value>\n   </context-param>\n \n   <listener>"},{"sha":"3c40df47e8017bc05b058518ea8c5fe0fdd923b4","filename":"console/src/test/java/org/apache/syncope/console/AbstractTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAbstractTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -32,7 +32,7 @@\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:applicationContext.xml\"})\n+@ContextConfiguration(locations = { \"classpath:consoleContext.xml\" })\n public abstract class AbstractTest extends TestCase {\n \n     /**\n@@ -47,7 +47,7 @@ public abstract class AbstractTest extends TestCase {\n     protected static final String BASE_URL = \"http://localhost:9080/syncope-console/\";\n \n     protected Selenium selenium;\n-    \n+\n     protected WebDriver seleniumDriver;\n \n     @Override"},{"sha":"869174ec2b8fdfdac55e9a477537f6f490c114aa","filename":"console/src/test/resources/console.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","previous_filename":"console/src/test/resources/configuration.properties"},{"sha":"c915d4f691906473202539028a355827e0054885","filename":"console/src/test/resources/web.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fresources%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/console%2Fsrc%2Ftest%2Fresources%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fweb.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -32,7 +32,7 @@ under the License.\n \n   <context-param>\n     <param-name>contextConfigLocation</param-name>\n-    <param-value>classpath:applicationContext.xml</param-value>\n+    <param-value>classpath:consoleContext.xml</param-value>\n   </context-param>\n \n   <listener>"},{"sha":"fd02d531d41664212ac79586ff66b9c3bfa773be","filename":"core/pom.xml","status":"modified","additions":63,"deletions":22,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -450,20 +450,19 @@ under the License.\n         <inherited>true</inherited>\n         <executions>\n           <execution>\n-            <id>explodeSyncopeWAR</id>\n+            <id>setupTestWebapp</id>\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n-                <unzip src=\"${project.build.directory}/${project.build.finalName}.war\" dest=\"${cargo.run.dir}\" />\n-                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncActions.class\" todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\" />\n-                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncRule.class\" todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\" />\n-                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/rest/data/DoubleValueAttributableTransformer.class\" todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/rest/data\" />\n-                <copy file=\"${project.build.directory}/test-classes/db.jsp\" todir=\"${cargo.run.dir}\" />\n-                <copy todir=\"${cargo.run.dir}/WEB-INF/classes\" includeEmptyDirs=\"false\">\n-                  <fileset dir=\"${project.build.directory}/test-classes\">\n-                    <exclude name=\"**/*.class\" />\n-                  </fileset>\n-                </copy>\n+                <unzip src=\"${project.build.directory}/${project.build.finalName}.war\" dest=\"${cargo.run.dir}\"/>\n+                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncActions.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\"/>\n+                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncRule.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync\"/>\n+                <copy file=\"${project.build.directory}/test-classes/org/apache/syncope/core/rest/data/DoubleValueAttributableTransformer.class\" \n+                      todir=\"${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/rest/data\"/>\n+                <copy file=\"${project.build.directory}/test-classes/db.jsp\" \n+                      todir=\"${cargo.run.dir}\"/>\n               </target>\n             </configuration>\n             <goals>\n@@ -475,7 +474,9 @@ under the License.\n             <phase>pre-integration-test</phase>\n             <configuration>\n               <target>\n-                <copy file=\"${project.build.directory}/test-classes/test.csv\" todir=\"${test.csvdir.path}\" overwrite=\"true\" />\n+                <copy file=\"${project.build.directory}/test-classes/test.csv\" \n+                      todir=\"${test.csvdir.path}\" \n+                      overwrite=\"true\"/>\n               </target>\n             </configuration>\n             <goals>\n@@ -929,10 +930,12 @@ under the License.\n \n     <profile>\n       <id>oracle-it</id>\n+\n       <properties>\n         <jdbcdriver.groupId>com.oracle</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>ojdbc6</jdbcdriver.artifactId>\n       </properties>\n+\n       <dependencies>\n         <dependency>\n           <groupId>com.oracle</groupId>\n@@ -941,6 +944,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -955,7 +959,9 @@ under the License.\n                 <phase>process-test-resources</phase>\n                 <configuration>\n                   <target>\n-                    <copy tofile=\"${project.build.directory}/classes/META-INF/orm.xml\" file=\"${basedir}/src/main/resources/META-INF/orm.xml.oracle\" overwrite=\"true\" />\n+                    <copy file=\"${basedir}/src/main/resources/META-INF/orm.xml.oracle\" \n+                          tofile=\"${project.build.directory}/classes/META-INF/orm.xml\"                           \n+                          overwrite=\"true\"/>\n                   </target>\n                 </configuration>\n                 <goals>\n@@ -984,10 +990,12 @@ under the License.\n     \n     <profile>\n       <id>sqlserver-it</id>\n+      \n       <properties>\n         <jdbcdriver.groupId>com.microsoft.sqlserver</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>sqljdbc4</jdbcdriver.artifactId>\n       </properties>\n+      \n       <dependencies>\n         <dependency>\n           <groupId>com.microsoft.sqlserver</groupId>\n@@ -996,10 +1004,20 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n+      \n       <build>\n-        <defaultGoal>clean verify</defaultGoal>\n+        <defaultGoal>clean verify cargo:run</defaultGoal>\n \n         <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-surefire-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <configuration>\n+              <skipTests>true</skipTests>\n+            </configuration>\n+          </plugin>\n+        \n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-antrun-plugin</artifactId>\n@@ -1010,7 +1028,9 @@ under the License.\n                 <phase>process-test-resources</phase>\n                 <configuration>\n                   <target>\n-                    <copy tofile=\"${project.build.directory}/classes/META-INF/orm.xml\" file=\"${basedir}/src/main/resources/META-INF/orm.xml.sqlserver\" overwrite=\"true\" />\n+                    <copy file=\"${basedir}/src/main/resources/META-INF/orm.xml.sqlserver\" \n+                          tofile=\"${project.build.directory}/classes/META-INF/orm.xml\"                          \n+                          overwrite=\"true\"/>\n                   </target>\n                 </configuration>\n                 <goals>\n@@ -1039,18 +1059,21 @@ under the License.\n     \n     <profile>\n       <id>postgres-it</id>\n+\n       <properties>\n         <jdbcdriver.groupId>org.postgresql</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>postgresql</jdbcdriver.artifactId>\n       </properties>\n+\n       <dependencies>\n         <dependency>\n           <groupId>org.postgresql</groupId>\n           <artifactId>postgresql</artifactId>\n-          <version>9.3-1100-jdbc41</version>\n+          <version>9.3-1101-jdbc3</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n+      \n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1072,10 +1095,12 @@ under the License.\n \n     <profile>\n       <id>mysql-it</id>\n+\n       <properties>\n         <jdbcdriver.groupId>mysql</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>mysql-connector-java</jdbcdriver.artifactId>\n       </properties>\n+\n       <dependencies>\n         <dependency>\n           <groupId>mysql</groupId>\n@@ -1084,6 +1109,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n+      \n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1193,9 +1219,14 @@ under the License.\n                 <phase>pre-integration-test</phase>\n                 <configuration>\n                   <target>\n-                    <unzip src=\"${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war\" dest=\"${project.build.directory}/syncope-build-tools-test\" />\n-                    <copy file=\"${project.build.outputDirectory}/META-INF/MANIFEST.MF\" todir=\"${project.build.directory}/syncope-build-tools-test/META-INF\" overwrite=\"true\" />\n-                    <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" todir=\"${project.build.directory}/syncope-build-tools-test/WEB-INF/lib\" overwrite=\"true\" />\n+                    <unzip src=\"${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war\" \n+                           dest=\"${project.build.directory}/syncope-build-tools-test\"/>\n+                    <copy file=\"${project.build.outputDirectory}/META-INF/MANIFEST.MF\" \n+                          todir=\"${project.build.directory}/syncope-build-tools-test/META-INF\" \n+                          overwrite=\"true\"/>\n+                    <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" \n+                          todir=\"${project.build.directory}/syncope-build-tools-test/WEB-INF/lib\" \n+                          overwrite=\"true\"/>\n                   </target>\n                 </configuration>\n                 <goals>\n@@ -1315,12 +1346,17 @@ under the License.\n                 <configuration>\n                   <target>\n                     <!-- Needed because WebLogic has problems in running ApacheDS from the WAR archive -->\n-                    <unzip src=\"${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war\" dest=\"${project.build.directory}/syncope-build-tools-test\" />\n+                    <unzip src=\"${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war\" \n+                           dest=\"${project.build.directory}/syncope-build-tools-test\"/>\n                     <!-- Needed because WebLogic is installed (H2 dependency cannot be injected via cargo) -->\n-                    <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" todir=\"${project.build.directory}/syncope-build-tools-test/WEB-INF/lib\" overwrite=\"true\" />\n+                    <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" \n+                          todir=\"${project.build.directory}/syncope-build-tools-test/WEB-INF/lib\" \n+                          overwrite=\"true\"/>\n                     <!-- Needed because WebLogic deploys first core then build-tools: this JSP will just ask core to\n                     reload all connectors -->\n-                    <copy file=\"${project.build.directory}/test-classes/conninstance-reload.jsp\" todir=\"${project.build.directory}/syncope-build-tools-test\" overwrite=\"true\" />\n+                    <copy file=\"${project.build.directory}/test-classes/conninstance-reload.jsp\" \n+                          todir=\"${project.build.directory}/syncope-build-tools-test\" \n+                          overwrite=\"true\"/>\n                   </target>\n                 </configuration>\n                 <goals>\n@@ -1346,6 +1382,11 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.weblogic.bea.home>${weblogic.home}</cargo.weblogic.bea.home>\n+                  <cargo.jvmargs>-server -Xms1024m -Xmx1024m -XX:PermSize=512m -XX:MaxPermSize=1024m -XX:NewRatio=2 \n+                    -XX:SurvivorRatio=128 -XX:MaxTenuringThreshold=0 -XX:+UseG1GC -XX:MaxGCPauseMillis=200 \n+                    -XX:InitiatingHeapOccupancyPercent=80 -XX:G1HeapRegionSize=2048k -XX:+UseTLAB \n+                    -XX:LargePageSizeInBytes=2048k -XX:+UseLargePages -Dtangosol.coherence.mode=prod \n+                    -Dtangosol.coherence.distributed.localstorage=false</cargo.jvmargs>\n                 </properties>\n               </configuration>\n               <deployables>"},{"sha":"558ed26a8727e2b023c98debad46c01a2e4b067a","filename":"core/src/main/java/org/apache/syncope/core/audit/AuditConnectionFactory.java","status":"modified","additions":33,"deletions":5,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -31,13 +31,14 @@\n import javax.xml.xpath.XPathFactory;\n import org.apache.commons.dbcp.BasicDataSource;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.core.persistence.dao.impl.AbstractContentDealer;\n import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.FileSystemResource;\n import org.springframework.core.io.Resource;\n import org.springframework.core.io.support.PropertiesLoaderUtils;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.jdbc.datasource.init.ScriptUtils;\n+import org.w3c.dom.Document;\n import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n import org.w3c.dom.ls.DOMImplementationLS;\n import org.w3c.dom.ls.LSInput;\n@@ -57,17 +58,28 @@ public final class AuditConnectionFactory {\n     static {\n         // 1. Attempts to lookup for configured JNDI datasource (if present and available)\n         InputStream springConf = AuditConnectionFactory.class.getResourceAsStream(PERSISTENCE_CONTEXT);\n+        String primary = null;\n+        String fallback = null;\n         try {\n             DOMImplementationRegistry reg = DOMImplementationRegistry.newInstance();\n             DOMImplementationLS impl = (DOMImplementationLS) reg.getDOMImplementation(\"LS\");\n             LSParser parser = impl.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS, null);\n             LSInput lsinput = impl.createLSInput();\n             lsinput.setByteStream(springConf);\n+            Document source = parser.parse(lsinput);\n \n             XPathFactory xPathfactory = XPathFactory.newInstance();\n             XPath xpath = xPathfactory.newXPath();\n-            XPathExpression expr = xpath.compile(\"//*[local-name()='property' and @name='jndiName']/@value\");\n-            String jndiName = (String) expr.evaluate(parser.parse(lsinput), XPathConstants.STRING);\n+\n+            XPathExpression expr = xpath.compile(\"//*[local-name()='bean' and @id='persistenceProperties']/\"\n+                    + \"child::*[local-name()='property' and @name='primary']/@value\");\n+            primary = (String) expr.evaluate(source, XPathConstants.STRING);\n+            expr = xpath.compile(\"//*[local-name()='bean' and @id='persistenceProperties']/\"\n+                    + \"child::*[local-name()='property' and @name='fallback']/@value\");\n+            fallback = (String) expr.evaluate(source, XPathConstants.STRING);\n+\n+            expr = xpath.compile(\"//*[local-name()='property' and @name='jndiName']/@value\");\n+            String jndiName = (String) expr.evaluate(source, XPathConstants.STRING);\n \n             Context ctx = new InitialContext();\n             Object obj = ctx.lookup(jndiName);\n@@ -82,8 +94,24 @@ public final class AuditConnectionFactory {\n         // 2. Creates Commons DBCP datasource\n         String initSQLScript = null;\n         try {\n-            Properties persistence = PropertiesLoaderUtils.loadProperties(\n-                    new ClassPathResource(AbstractContentDealer.PERSISTENCE_PROPERTIES));\n+            Resource persistenceProperties = null;\n+            if (primary != null) {\n+                if (primary.startsWith(\"file:\")) {\n+                    persistenceProperties = new FileSystemResource(primary.substring(5));\n+                }\n+                if (primary.startsWith(\"classpath:\")) {\n+                    persistenceProperties = new ClassPathResource(primary.substring(10));\n+                }\n+            }\n+            if ((persistenceProperties == null || !persistenceProperties.exists()) && fallback != null) {\n+                if (fallback.startsWith(\"file:\")) {\n+                    persistenceProperties = new FileSystemResource(fallback.substring(5));\n+                }\n+                if (fallback.startsWith(\"classpath:\")) {\n+                    persistenceProperties = new ClassPathResource(fallback.substring(10));\n+                }\n+            }\n+            Properties persistence = PropertiesLoaderUtils.loadProperties(persistenceProperties);\n \n             initSQLScript = persistence.getProperty(\"audit.sql\");\n "},{"sha":"39a46d6f71125a513ca02fec4431698f6a133757","filename":"core/src/main/java/org/apache/syncope/core/init/ConnectorManager.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManager.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -48,6 +48,9 @@ class ConnectorManager implements ConnectorRegistry, ConnectorFactory {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnectorManager.class);\n \n+    @Autowired\n+    private ConnIdBundleManager connIdBundleManager;\n+\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n@@ -108,7 +111,7 @@ public void load() {\n         CurrentLocale.set(Locale.ENGLISH);\n \n         // Load all connector bundles\n-        ConnIdBundleManager.getConnManagers();\n+        connIdBundleManager.getConnManagers();\n \n         // Load all resource-specific connectors\n         int connectors = 0;\n@@ -141,7 +144,7 @@ public void unload() {\n         LOG.info(\"Done unloading {} connectors\", connectors);\n \n         ConnectorFacadeFactory.getInstance().dispose();\n-        ConnIdBundleManager.resetConnManagers();\n+        connIdBundleManager.resetConnManagers();\n         LOG.info(\"All connector resources disposed\");\n     }\n }"},{"sha":"f5011688f1b14adf3a63434871c54349c34f106e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -31,9 +31,9 @@ public abstract class AbstractAttributable extends AbstractSysInfo {\n     public <T extends AbstractAttr> T getAttr(final String schemaName) {\n         T result = null;\n         for (Iterator<? extends AbstractAttr> itor = getAttrs().iterator(); result == null && itor.hasNext();) {\n-            final T attribute = (T) itor.next();\n-            if (attribute.getSchema() != null && schemaName.equals(attribute.getSchema().getName())) {\n-                result = attribute;\n+            final T attr = (T) itor.next();\n+            if (attr != null && attr.getSchema() != null && schemaName.equals(attr.getSchema().getName())) {\n+                result = attr;\n             }\n         }\n         return result;\n@@ -46,7 +46,7 @@ public <T extends AbstractDerAttr> T getDerAttr(final String derSchemaName) {\n                 result == null && itor.hasNext();) {\n \n             T derAttr = (T) itor.next();\n-            if (derAttr.getSchema() != null\n+            if (derAttr != null && derAttr.getSchema() != null\n                     && derSchemaName.equals(derAttr.getSchema().getName())) {\n \n                 result = derAttr;\n@@ -63,7 +63,7 @@ public <T extends AbstractVirAttr> T getVirAttr(final String virSchemaName) {\n                 result == null && itor.hasNext();) {\n \n             T virAttr = (T) itor.next();\n-            if (virAttr.getSchema() != null\n+            if (virAttr != null && virAttr.getSchema() != null\n                     && virSchemaName.equals(virAttr.getSchema().getName())) {\n \n                 result = virAttr;"},{"sha":"64d49eee42272a47fc1e2bd50fb1d6455283bc30","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -26,6 +26,7 @@\n import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n+import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n@@ -167,6 +168,7 @@ public class ExternalResource extends AbstractSysInfo {\n      * (Optional) classes for PropagationAction.\n      */\n     @ElementCollection(fetch = FetchType.EAGER)\n+    @CollectionTable(name = \"ExternalResource_PropActions\")\n     private List<String> propagationActionsClassNames = new ArrayList<String>();\n \n     /**"},{"sha":"b8fa06d3364af59192be4bb220dc590c24eb34ac","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractContentDealer.java","status":"modified","additions":12,"deletions":26,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -20,11 +20,12 @@\n \n import java.io.IOException;\n import java.util.Properties;\n+import javax.annotation.Resource;\n import javax.sql.DataSource;\n+import org.apache.syncope.core.util.ResourceWithFallbackLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.ClassPathResource;\n import org.springframework.core.io.support.PropertiesLoaderUtils;\n import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n@@ -35,40 +36,24 @@ public abstract class AbstractContentDealer {\n \n     protected static final String ROOT_ELEMENT = \"dataset\";\n \n-    public static final String PERSISTENCE_PROPERTIES = \"/persistence.properties\";\n+    @Resource(name = \"database.schema\")\n+    protected String dbSchema;\n \n-    private static final String VIEWS_XML = \"/views.xml\";\n+    @Resource(name = \"indexesXML\")\n+    private ResourceWithFallbackLoader indexesXML;\n \n-    private static final String INDEXES_XML = \"/indexes.xml\";\n-\n-    protected static String dbSchema;\n-\n-    protected static Properties views;\n-\n-    protected static Properties indexes;\n+    @Resource(name = \"viewsXML\")\n+    private ResourceWithFallbackLoader viewsXML;\n \n     @Autowired\n     protected DataSource dataSource;\n \n-    static {\n-        try {\n-            Properties persistence = PropertiesLoaderUtils.loadProperties(\n-                    new ClassPathResource(PERSISTENCE_PROPERTIES));\n-            dbSchema = persistence.getProperty(\"database.schema\");\n-\n-            views = PropertiesLoaderUtils.loadProperties(new ClassPathResource(VIEWS_XML));\n-\n-            indexes = PropertiesLoaderUtils.loadProperties(new ClassPathResource(INDEXES_XML));\n-        } catch (IOException e) {\n-            LOG.error(\"Could not read one or more properties files\", e);\n-        }\n-    }\n-\n-    protected void createIndexes() {\n+    protected void createIndexes() throws IOException {\n         LOG.debug(\"Creating indexes\");\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n \n+        Properties indexes = PropertiesLoaderUtils.loadProperties(indexesXML.getResource());\n         for (String idx : indexes.stringPropertyNames()) {\n             LOG.debug(\"Creating index {}\", indexes.get(idx).toString());\n \n@@ -82,11 +67,12 @@ protected void createIndexes() {\n         LOG.debug(\"Indexes created\");\n     }\n \n-    protected void createViews() {\n+    protected void createViews() throws IOException {\n         LOG.debug(\"Creating views\");\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n \n+        Properties views = PropertiesLoaderUtils.loadProperties(viewsXML.getResource());\n         for (String idx : views.stringPropertyNames()) {\n             LOG.debug(\"Creating view {}\", views.get(idx).toString());\n "},{"sha":"bee2a1b89c097bbe180fc75e0c895ee37e95f7fe","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ConfDAOImpl.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -35,6 +35,19 @@ public class ConfDAOImpl extends AbstractDAOImpl implements ConfDAO {\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n+    @Override\n+    public SyncopeConf get() {\n+        SyncopeConf instance = entityManager.find(SyncopeConf.class, 1L);\n+        if (instance == null) {\n+            instance = new SyncopeConf();\n+            instance.setId(1L);\n+\n+            instance = entityManager.merge(instance);\n+        }\n+\n+        return instance;\n+    }\n+\n     @Transactional(readOnly = true)\n     @Override\n     public CAttr find(final String key) {\n@@ -44,7 +57,7 @@ public CAttr find(final String key) {\n     @Transactional(readOnly = true)\n     @Override\n     public CAttr find(final String key, final String defaultValue) {\n-        CAttr result = get().getAttr(key);\n+        CAttr result = find(key);\n         if (result == null) {\n             result = new CAttr();\n             result.setSchema(schemaDAO.find(key, CSchema.class));\n@@ -55,19 +68,6 @@ public CAttr find(final String key, final String defaultValue) {\n         return result;\n     }\n \n-    @Override\n-    public SyncopeConf get() {\n-        SyncopeConf instance = entityManager.find(SyncopeConf.class, 1L);\n-        if (instance == null) {\n-            instance = new SyncopeConf();\n-            instance.setId(1L);\n-\n-            instance = entityManager.merge(instance);\n-        }\n-\n-        return instance;\n-    }\n-\n     @Override\n     public SyncopeConf save(final CAttr attr) {\n         delete(attr.getSchema().getName());"},{"sha":"fa8a51274c1e5b932dc8c843905b1cf9bea94fbe","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ContentLoader.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -18,12 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n+import java.io.IOException;\n import java.io.InputStream;\n+import javax.annotation.Resource;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n import org.apache.syncope.core.util.ContentLoaderHandler;\n+import org.apache.syncope.core.util.ResourceWithFallbackLoader;\n import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.stereotype.Component;\n@@ -35,7 +38,8 @@\n @Component\n public class ContentLoader extends AbstractContentDealer {\n \n-    public static final String CONTENT_XML = \"content.xml\";\n+    @Resource(name = \"contentXML\")\n+    private ResourceWithFallbackLoader contentXML;\n \n     @Transactional\n     public void load() {\n@@ -55,23 +59,29 @@ public void load() {\n         } else {\n             LOG.info(\"Empty database found, loading default content\");\n \n-            loadDefaultContent();\n-            createIndexes();\n-            createViews();\n+            try {\n+                loadDefaultContent();\n+            } catch (Exception e) {\n+                LOG.error(\"While loading default content\", e);\n+            }\n+            try {\n+                createIndexes();\n+                createViews();\n+            } catch (IOException e) {\n+                LOG.error(\"While creating indexes and views\", e);\n+            }\n         }\n     }\n \n-    private void loadDefaultContent() {\n+    private void loadDefaultContent() throws Exception {\n         SAXParserFactory factory = SAXParserFactory.newInstance();\n         InputStream in = null;\n         try {\n-            in = getClass().getResourceAsStream(\"/\" + CONTENT_XML);\n+            in = contentXML.getResource().getInputStream();\n \n             SAXParser parser = factory.newSAXParser();\n             parser.parse(in, new ContentLoaderHandler(dataSource, ROOT_ELEMENT));\n             LOG.debug(\"Default content successfully loaded\");\n-        } catch (Exception e) {\n-            LOG.error(\"While loading default content\", e);\n         } finally {\n             IOUtils.closeQuietly(in);\n         }"},{"sha":"edcf626324e8ccafef294b4bfbff38f2f5e2249a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -26,7 +26,9 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n-import org.apache.syncope.core.persistence.beans.user.UAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MAttr;\n+import org.apache.syncope.core.persistence.beans.role.RAttr;\n+import org.apache.syncope.core.persistence.beans.role.RMappingItem;\n import org.apache.syncope.core.persistence.beans.user.UMappingItem;\n import org.apache.syncope.core.persistence.dao.AttrDAO;\n import org.apache.syncope.core.persistence.dao.AttrTemplateDAO;\n@@ -65,7 +67,7 @@ public <T extends AbstractNormalSchema> List<T> findAll(final Class<T> reference\n     public <T extends AbstractAttr> List<T> findAttrs(final AbstractNormalSchema schema, final Class<T> reference) {\n         final StringBuilder queryString =\n                 new StringBuilder(\"SELECT e FROM \").append(reference.getSimpleName()).append(\" e WHERE e.\");\n-        if (!reference.equals(UAttr.class)) {\n+        if (reference.equals(RAttr.class) || reference.equals(MAttr.class)) {\n             queryString.append(\"template.\");\n         }\n         queryString.append(\"schema=:schema\");\n@@ -97,7 +99,9 @@ public void delete(final String name, final AttributableUtil attributableUtil) {\n             attrDAO.delete(attrId, attributableUtil.attrClass());\n         }\n \n-        if (attributableUtil.getType() != AttributableType.USER) {\n+        if (attributableUtil.getType() == AttributableType.ROLE\n+                || attributableUtil.getType() == AttributableType.MEMBERSHIP) {\n+\n             for (Iterator<Number> it = attrTemplateDAO.\n                     findBySchemaName(schema.getName(), attributableUtil.attrTemplateClass()).iterator();\n                     it.hasNext();) {\n@@ -107,6 +111,7 @@ public void delete(final String name, final AttributableUtil attributableUtil) {\n         }\n \n         resourceDAO.deleteMapping(name, attributableUtil.intMappingType(), UMappingItem.class);\n+        resourceDAO.deleteMapping(name, attributableUtil.intMappingType(), RMappingItem.class);\n \n         entityManager.remove(schema);\n     }"},{"sha":"693091a8f49b75f3b94a1a425c63a78f1ec1ab09","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SubjectSearchDAOImpl.java","status":"modified","additions":18,"deletions":24,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -544,49 +544,49 @@ private void fillAttributeQuery(final StringBuilder query, final AbstractAttrVal\n                 if (not) {\n                     query.append(\"<>\");\n                 } else {\n-                    query.append(\"=\");\n+                    query.append('=');\n                 }\n-                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n+                query.append('?').append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case GE:\n                 query.append(column);\n                 if (not) {\n-                    query.append(\"<\");\n+                    query.append('<');\n                 } else {\n                     query.append(\">=\");\n                 }\n-                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n+                query.append('?').append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case GT:\n                 query.append(column);\n                 if (not) {\n                     query.append(\"<=\");\n                 } else {\n-                    query.append(\">\");\n+                    query.append('>');\n                 }\n-                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n+                query.append('?').append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case LE:\n                 query.append(column);\n                 if (not) {\n-                    query.append(\">\");\n+                    query.append('>');\n                 } else {\n                     query.append(\"<=\");\n                 }\n-                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n+                query.append('?').append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case LT:\n                 query.append(column);\n                 if (not) {\n                     query.append(\">=\");\n                 } else {\n-                    query.append(\"<\");\n+                    query.append('<');\n                 }\n-                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n+                query.append('?').append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             default:\n@@ -662,7 +662,7 @@ private String getQuery(final SubjectCond cond, final boolean not, final List<Ob\n         }\n \n         // Deal with subject Integer fields logically mapping to boolean values\n-        // (SyncopeRole.inheritAttributes, for example)\n+        // (SyncopeRole.inheritAttrs, for example)\n         boolean foundBooleanMin = false;\n         boolean foundBooleanMax = false;\n         if (Integer.class.equals(subjectField.getType())) {\n@@ -675,13 +675,7 @@ private String getQuery(final SubjectCond cond, final boolean not, final List<Ob\n             }\n         }\n         if (foundBooleanMin && foundBooleanMax) {\n-            if (\"true\".equalsIgnoreCase(cond.getExpression())) {\n-                cond.setExpression(\"1\");\n-                schema.setType(AttributeSchemaType.Long);\n-            } else if (\"false\".equalsIgnoreCase(cond.getExpression())) {\n-                cond.setExpression(\"0\");\n-                schema.setType(AttributeSchemaType.Long);\n-            }\n+            schema.setType(AttributeSchemaType.Boolean);\n         }\n \n         // Deal with subject fields representing relationships to other entities\n@@ -698,15 +692,15 @@ private String getQuery(final SubjectCond cond, final boolean not, final List<Ob\n         }\n \n         AbstractAttrValue attrValue = attrUtil.newAttrValue();\n-        try {\n-            if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n-                    && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n+        if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n+                && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n \n+            try {\n                 schema.getValidator().validate(cond.getExpression(), attrValue);\n+            } catch (ValidationException e) {\n+                LOG.error(\"Could not validate expression '\" + cond.getExpression() + \"'\", e);\n+                return EMPTY_ATTR_QUERY;\n             }\n-        } catch (ValidationException e) {\n-            LOG.error(\"Could not validate expression '\" + cond.getExpression() + \"'\", e);\n-            return EMPTY_ATTR_QUERY;\n         }\n \n         final StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \")."},{"sha":"980a3dfd9c8d141bb801ee1b6bdb0e01686ada8e","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/ConnectorFacadeProxy.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.propagation.Connector;\n import org.apache.syncope.core.propagation.TimeoutException;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n@@ -96,7 +97,9 @@ public class ConnectorFacadeProxy implements Connector {\n     public ConnectorFacadeProxy(final ConnInstance connInstance) {\n         this.activeConnInstance = connInstance;\n \n-        ConnectorInfo info = ConnIdBundleManager.getConnectorInfo(connInstance.getLocation(),\n+        ConnIdBundleManager connIdBundleManager =\n+                ApplicationContextProvider.getApplicationContext().getBean(ConnIdBundleManager.class);\n+        ConnectorInfo info = connIdBundleManager.getConnectorInfo(connInstance.getLocation(),\n                 connInstance.getBundleName(), connInstance.getVersion(), connInstance.getConnectorName());\n \n         // create default configuration"},{"sha":"32b0a601b84323cd00102b16e51b456a1fe11347","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnectorController.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -56,6 +56,9 @@\n @Component\n public class ConnectorController extends AbstractTransactionalController<ConnInstanceTO> {\n \n+    @Autowired\n+    private ConnIdBundleManager connIdBundleManager;\n+\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n@@ -166,7 +169,7 @@ public List<ConnBundleTO> getBundles(final String lang) {\n         }\n \n         List<ConnBundleTO> connectorBundleTOs = new ArrayList<ConnBundleTO>();\n-        for (Map.Entry<String, List<ConnectorInfo>> entry : ConnIdBundleManager.getConnectorInfos().entrySet()) {\n+        for (Map.Entry<String, List<ConnectorInfo>> entry : connIdBundleManager.getConnectorInfos().entrySet()) {\n             for (ConnectorInfo bundle : entry.getValue()) {\n                 ConnBundleTO connBundleTO = new ConnBundleTO();\n                 connBundleTO.setDisplayName(bundle.getConnectorDisplayName());\n@@ -178,7 +181,7 @@ public List<ConnBundleTO> getBundles(final String lang) {\n                 connBundleTO.setConnectorName(key.getConnectorName());\n                 connBundleTO.setVersion(key.getBundleVersion());\n \n-                ConfigurationProperties properties = ConnIdBundleManager.getConfigurationProperties(bundle);\n+                ConfigurationProperties properties = connIdBundleManager.getConfigurationProperties(bundle);\n \n                 for (String propName : properties.getPropertyNames()) {\n                     connBundleTO.getProperties().add(binder.buildConnConfPropSchema(properties.getProperty(propName)));"},{"sha":"50bcf03a167e106a1b4061134951409dc2208a35","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -45,6 +45,9 @@ public class ConnInstanceDataBinder {\n \n     private static final String[] IGNORE_PROPERTIES = { \"id\", \"poolConf\" };\n \n+    @Autowired\n+    private ConnIdBundleManager connIdBundleManager;\n+\n     @Autowired\n     private ConnInstanceDAO connInstanceDAO;\n \n@@ -203,8 +206,8 @@ public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance) {\n         connInstanceTO.setId(connInstance.getId() == null ? 0L : connInstance.getId().longValue());\n \n         // retrieve the ConfigurationProperties\n-        ConfigurationProperties properties = ConnIdBundleManager.getConfigurationProperties(\n-                ConnIdBundleManager.getConnectorInfo(connInstance.getLocation(),\n+        ConfigurationProperties properties = connIdBundleManager.getConfigurationProperties(\n+                connIdBundleManager.getConnectorInfo(connInstance.getLocation(),\n                         connInstance.getBundleName(), connInstance.getVersion(), connInstance.getConnectorName()));\n \n         BeanUtils.copyProperties(connInstance, connInstanceTO, IGNORE_PROPERTIES);"},{"sha":"2fcd71833a3115a3e4aa9063b0cbc6d773452696","filename":"core/src/main/java/org/apache/syncope/core/services/ConfigurationServiceImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -31,14 +31,15 @@\n import org.apache.syncope.common.wrap.MailTemplate;\r\n import org.apache.syncope.common.wrap.Validator;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n-import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\r\n import org.apache.syncope.core.rest.controller.ConfigurationController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n @Service\r\n public class ConfigurationServiceImpl extends AbstractServiceImpl implements ConfigurationService {\r\n \r\n+    private static final String CONTENT_XML = \"content.xml\";\r\n+\r\n     @Autowired\r\n     private ConfigurationController controller;\r\n \r\n@@ -53,7 +54,7 @@ public void write(final OutputStream os) throws IOException {\n         };\r\n         return Response.ok(sout).\r\n                 type(MediaType.TEXT_XML).\r\n-                header(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\" + ContentLoader.CONTENT_XML).\r\n+                header(HttpHeaders.CONTENT_DISPOSITION, \"attachment; filename=\" + CONTENT_XML).\r\n                 build();\r\n     }\r\n \r"},{"sha":"52ac7989737743e5708b6df9f30e2fbcdfaa5ed0","filename":"core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java","status":"modified","additions":36,"deletions":56,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnIdBundleManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnIdBundleManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnIdBundleManager.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -20,21 +20,17 @@\n \n import java.io.File;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.net.URI;\n import java.net.URL;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Properties;\n import javax.net.ssl.TrustManager;\n import javax.net.ssl.X509TrustManager;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.identityconnectors.common.IOUtil;\n@@ -52,57 +48,43 @@\n /**\n  * Manage information about ConnId connector bundles.\n  */\n-public final class ConnIdBundleManager {\n+public class ConnIdBundleManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnIdBundleManager.class);\n \n-    /**\n-     * Where to find conf properties for ConnId.\n-     */\n-    public static final String CONNID_PROPS = \"/connid.properties\";\n+    private String stringLocations;\n \n     /**\n      * ConnId Locations.\n      */\n-    private static final List<URI> LOCATIONS;\n+    private List<URI> locations;\n \n     /**\n      * ConnectorInfoManager instances.\n      */\n-    private static final Map<URI, ConnectorInfoManager> CONN_MANAGERS;\n-\n-    static {\n-        String[] stringLocations = null;\n-\n-        InputStream propStream = null;\n-        try {\n-            propStream = ConnIdBundleManager.class.getResourceAsStream(CONNID_PROPS);\n-            Properties props = new Properties();\n-            props.load(propStream);\n-            stringLocations = props.getProperty(\"connid.locations\").split(\",\");\n+    private final Map<URI, ConnectorInfoManager> connInfoManagers =\n+            Collections.synchronizedMap(new LinkedHashMap<URI, ConnectorInfoManager>());\n \n-            LOG.debug(\"ConnId locations: {}\", Arrays.asList(stringLocations));\n-        } catch (Exception e) {\n-            LOG.error(\"Could not load {}\", CONNID_PROPS, e);\n-            stringLocations = new String[0];\n-        } finally {\n-            IOUtils.closeQuietly(propStream);\n-        }\n+    public void setStringLocations(final String stringLocations) {\n+        this.stringLocations = stringLocations;\n+    }\n \n-        List<URI> locations = new ArrayList<URI>();\n-        for (String location : stringLocations) {\n-            try {\n-                locations.add(URIUtil.buildForConnId(location));\n-                LOG.info(\"Valid ConnId location: {}\", location.trim());\n-            } catch (Exception e) {\n-                LOG.error(\"Invalid ConnId location: {}\", location.trim(), e);\n+    private void init() {\n+        if (locations == null) {\n+            locations = new ArrayList<URI>();\n+            for (String location : stringLocations == null ? new String[0] : stringLocations.split(\",\")) {\n+                try {\n+                    locations.add(URIUtil.buildForConnId(location));\n+                    LOG.info(\"Valid ConnId location: {}\", location.trim());\n+                } catch (Exception e) {\n+                    LOG.error(\"Invalid ConnId location: {}\", location.trim(), e);\n+                }\n             }\n+            locations = Collections.unmodifiableList(locations);\n         }\n-        LOCATIONS = Collections.unmodifiableList(locations);\n-        CONN_MANAGERS = Collections.synchronizedMap(new LinkedHashMap<URI, ConnectorInfoManager>());\n     }\n \n-    private static void initLocal(final URI location) {\n+    private void initLocal(final URI location) {\n         // 1. Find bundles inside local directory\n         File bundleDirectory = new File(location);\n         String[] bundleFiles = bundleDirectory.list();\n@@ -133,10 +115,10 @@ private static void initLocal(final URI location) {\n             throw new NotFoundException(\"Local ConnectorInfoManager\");\n         }\n \n-        CONN_MANAGERS.put(location, manager);\n+        connInfoManagers.put(location, manager);\n     }\n \n-    private static void initRemote(final URI location) {\n+    private void initRemote(final URI location) {\n         // 1. Extract conf params for remote connection from given URI\n         final String host = location.getHost();\n         final int port = location.getPort();\n@@ -191,16 +173,18 @@ public X509Certificate[] getAcceptedIssuers() {\n             throw new NotFoundException(\"Remote ConnectorInfoManager\");\n         }\n \n-        CONN_MANAGERS.put(location, manager);\n+        connInfoManagers.put(location, manager);\n     }\n \n-    public static void resetConnManagers() {\n-        CONN_MANAGERS.clear();\n+    public void resetConnManagers() {\n+        connInfoManagers.clear();\n     }\n \n-    public static Map<URI, ConnectorInfoManager> getConnManagers() {\n-        if (CONN_MANAGERS.isEmpty()) {\n-            for (URI location : LOCATIONS) {\n+    public Map<URI, ConnectorInfoManager> getConnManagers() {\n+        init();\n+\n+        if (connInfoManagers.isEmpty()) {\n+            for (URI location : locations) {\n                 try {\n                     if (\"file\".equals(location.getScheme())) {\n                         LOG.debug(\"Local initialization: {}\", location);\n@@ -218,18 +202,18 @@ public static Map<URI, ConnectorInfoManager> getConnManagers() {\n         }\n \n         if (LOG.isDebugEnabled()) {\n-            for (Map.Entry<URI, ConnectorInfoManager> entry : CONN_MANAGERS.entrySet()) {\n+            for (Map.Entry<URI, ConnectorInfoManager> entry : connInfoManagers.entrySet()) {\n                 LOG.debug(\"Connector bundles found at {}\", entry.getKey());\n                 for (ConnectorInfo connInfo : entry.getValue().getConnectorInfos()) {\n                     LOG.debug(\"\\t{}\", connInfo.getConnectorDisplayName());\n                 }\n             }\n         }\n \n-        return CONN_MANAGERS;\n+        return connInfoManagers;\n     }\n \n-    public static ConnectorInfo getConnectorInfo(\n+    public ConnectorInfo getConnectorInfo(\n             final String location, final String bundleName, final String bundleVersion, final String connectorName) {\n \n         // check ConnIdLocation\n@@ -261,15 +245,15 @@ public static ConnectorInfo getConnectorInfo(\n         return info;\n     }\n \n-    public static Map<String, List<ConnectorInfo>> getConnectorInfos() {\n+    public Map<String, List<ConnectorInfo>> getConnectorInfos() {\n         final Map<String, List<ConnectorInfo>> infos = new LinkedHashMap<String, List<ConnectorInfo>>();\n-        for (Map.Entry<URI, ConnectorInfoManager> entry : CONN_MANAGERS.entrySet()) {\n+        for (Map.Entry<URI, ConnectorInfoManager> entry : connInfoManagers.entrySet()) {\n             infos.put(entry.getKey().toString(), entry.getValue().getConnectorInfos());\n         }\n         return infos;\n     }\n \n-    public static ConfigurationProperties getConfigurationProperties(final ConnectorInfo info) {\n+    public ConfigurationProperties getConfigurationProperties(final ConnectorInfo info) {\n         if (info == null) {\n             throw new NotFoundException(\"Invalid: connector info is null\");\n         }\n@@ -297,8 +281,4 @@ public static ConfigurationProperties getConfigurationProperties(final Connector\n \n         return properties;\n     }\n-\n-    private ConnIdBundleManager() {\n-        // Empty constructor for static utility class.\n-    }\n }"},{"sha":"5b3435838f5709df773781ba1ede3c78b87c0b8f","filename":"core/src/main/java/org/apache/syncope/core/util/ContentExporter.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentExporter.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -323,9 +323,7 @@ public void export(final OutputStream os, final String wfTablePrefix)\n             conn = DataSourceUtils.getConnection(dataSource);\n             final DatabaseMetaData meta = conn.getMetaData();\n \n-            final String schema = dbSchema;\n-\n-            rs = meta.getTables(null, schema, null, new String[] { \"TABLE\" });\n+            rs = meta.getTables(null, StringUtils.isBlank(dbSchema) ? null : dbSchema, null, new String[] { \"TABLE\" });\n \n             final Set<String> tableNames = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);\n "},{"sha":"e73b4b7f2f63c4d8535599f50b0e0c39df159eb2","filename":"core/src/main/java/org/apache/syncope/core/util/ResourceWithFallbackLoader.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FResourceWithFallbackLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FResourceWithFallbackLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FResourceWithFallbackLoader.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.util;\n+\n+import org.springframework.context.ResourceLoaderAware;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.ResourceLoader;\n+\n+public class ResourceWithFallbackLoader implements ResourceLoaderAware {\n+\n+    private ResourceLoader resourceLoader;\n+\n+    private String primary;\n+\n+    private String fallback;\n+\n+    @Override\n+    public void setResourceLoader(final ResourceLoader resourceLoader) {\n+        this.resourceLoader = resourceLoader;\n+    }\n+\n+    public void setPrimary(final String primary) {\n+        this.primary = primary;\n+    }\n+\n+    public void setFallback(final String fallback) {\n+        this.fallback = fallback;\n+    }\n+\n+    public Resource getResource() {\n+        Resource resource = resourceLoader.getResource(primary);\n+        if (!resource.exists()) {\n+            resource = resourceLoader.getResource(fallback);\n+        }\n+        if (!resource.exists()) {\n+            throw new IllegalArgumentException(\"Neither \" + primary + \" nor \" + fallback + \" were found.\");\n+        }\n+\n+        return resource;\n+    }\n+\n+}"},{"sha":"840ead312659771897420b02fccf5c54e2bb2cf1","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiWorkflowLoader.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiWorkflowLoader.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -24,12 +24,14 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.List;\n+import javax.annotation.Resource;\n import org.activiti.editor.constants.ModelDataJsonConstants;\n import org.activiti.engine.RepositoryService;\n import org.activiti.engine.repository.Model;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.spring.SpringProcessEngineConfiguration;\n import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.core.util.ResourceWithFallbackLoader;\n import org.apache.syncope.core.workflow.WorkflowInstanceLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -39,6 +41,9 @@ public class ActivitiWorkflowLoader implements WorkflowInstanceLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ActivitiWorkflowLoader.class);\n \n+    @Resource(name = \"userWorkflowDef\")\n+    private ResourceWithFallbackLoader userWorkflowDef;\n+\n     @Autowired\n     private RepositoryService repositoryService;\n \n@@ -71,7 +76,7 @@ public void load() {\n         if (processes.isEmpty()) {\n             InputStream wfIn = null;\n             try {\n-                wfIn = getClass().getResourceAsStream(\"/\" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE);\n+                wfIn = userWorkflowDef.getResource().getInputStream();\n                 repositoryService.createDeployment().addInputStream(ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n                         new ByteArrayInputStream(IOUtils.toByteArray(wfIn))).deploy();\n "},{"sha":"20aabc7906b551a8b0bf7ad9928765b74a3c976b","filename":"core/src/main/resources/META-INF/orm.xml.oracle","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -214,7 +214,7 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.beans.membership.CAttrValue\">\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrValue\">\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>"},{"sha":"f63ce4c964661accb4f989c6f479c276441da745","filename":"core/src/main/resources/coreContext.xml","status":"renamed","additions":22,"deletions":5,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -28,20 +28,34 @@ under the License.\n                            http://www.springframework.org/schema/task\n                            http://www.springframework.org/schema/task/spring-task.xsd\">\n \n-  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+    <property name=\"order\" value=\"1\"/>\n+    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n+    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n+    <property name=\"locations\">\n+      <list>\n+        <value>file:${conf.directory}/persistence.properties</value>\n+        <value>file:${conf.directory}/rest.properties</value>\n+        <value>file:${conf.directory}/security.properties</value>\n+        <value>file:${conf.directory}/connid.properties</value>\n+        <value>file:${conf.directory}/workflow.properties</value>\n+        <value>file:${conf.directory}/mail.properties</value>\n+      </list>\n+    </property>\n+  </bean>\n+  <bean id=\"classpathPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"locations\">\n       <list>\n         <value>classpath:persistence.properties</value>\n         <value>classpath:rest.properties</value>\n         <value>classpath:security.properties</value>\n+        <value>classpath:connid.properties</value>\n         <value>classpath:workflow.properties</value>\n         <value>classpath:mail.properties</value>\n       </list>\n     </property>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n   </bean>\n-\n+  \n   <bean id=\"adminUser\" class=\"java.lang.String\">\n     <constructor-arg value=\"${adminUser}\"/>\n   </bean>\n@@ -86,7 +100,10 @@ under the License.\n \n   <bean id=\"auditManager\" class=\"org.apache.syncope.core.audit.AuditManager\"/>\n   \n-  <bean id=\"connectorFacadeProxy\" class=\"org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy\" scope=\"prototype\"/>\n+  <bean id=\"connIdBundleManager\" class=\"org.apache.syncope.core.util.ConnIdBundleManager\" scope=\"singleton\">\n+    <property name=\"stringLocations\" value=\"${connid.locations}\"/>\n+  </bean>\n+  \n   <bean id=\"asyncConnFacade\" class=\"org.apache.syncope.core.propagation.impl.AsyncConnectorFacade\" scope=\"singleton\"/>\n \n   <bean id=\"syncUtilities\" class=\"org.apache.syncope.core.sync.SyncUtilities\"/>","previous_filename":"core/src/main/resources/syncopeContext.xml"},{"sha":"a737b930fa19ee2395e4ce08a267dc4049cf8d79","filename":"core/src/main/resources/persistence.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -24,3 +24,4 @@ jpa.pool.validationQuery=SELECT 1\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n audit.sql=audit.sql\n+database.schema=\n\\ No newline at end of file"},{"sha":"810d892cc5545fc1300a6f2fdc39424368f19f50","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -40,6 +40,26 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.core.util\"/>\n   <context:component-scan base-package=\"org.apache.syncope.core.policy\"/>\n \n+  <bean id=\"database.schema\" class=\"java.lang.String\">\n+    <constructor-arg value=\"${database.schema}\"/>\n+  </bean>\n+  <bean id=\"persistenceProperties\" class=\"org.apache.syncope.core.util.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${conf.directory}/persistence.properties\"/>\n+    <property name=\"fallback\" value=\"classpath:persistence.properties\"/>\n+  </bean>\n+  <bean id=\"contentXML\" class=\"org.apache.syncope.core.util.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${conf.directory}/content.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:content.xml\"/>\n+  </bean>\n+  <bean id=\"viewsXML\" class=\"org.apache.syncope.core.util.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${conf.directory}/views.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:views.xml\"/>\n+  </bean>\n+  <bean id=\"indexesXML\" class=\"org.apache.syncope.core.util.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${conf.directory}/indexes.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:indexes.xml\"/>\n+  </bean>\n+\n   <!-- Use JNDI datasource as default but, when not available, revert to\n   local datasource, with different properties for execution and testing. \n   In any case, get all JDBC connections with a determined isolation level. -->"},{"sha":"644c889da3db05f23a2f32006aa2fd2cbef3284a","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -25,6 +25,11 @@ under the License.\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\">\n \n+  <bean id=\"userWorkflowDef\" class=\"org.apache.syncope.core.util.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${conf.directory}/userWorkflow.bpmn20.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:userWorkflow.bpmn20.xml\"/>\n+  </bean>\n+  \n   <bean id=\"uwfAdapter\" class=\"${uwfAdapter}\"/>\n   <bean id=\"rwfAdapter\" class=\"${rwfAdapter}\"/>\n "},{"sha":"6eeb9c28ea018dd78c62d1aadc5065e29f29e824","filename":"core/src/main/webapp/WEB-INF/weblogic.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -27,6 +27,8 @@ under the License.\n   <container-descriptor>    \n     <prefer-application-packages>\n       <package-name>javax.ws.rs.*</package-name>\n+      <package-name>javax.validation.*</package-name>\n+      <package-name>org.hibernate.validator.*</package-name>\n       <package-name>org.apache.cxf.*</package-name>\n       <package-name>org.apache.commons.*</package-name>\n       <package-name>org.apache.openjpa.*</package-name>"},{"sha":"ba156082cabc8d10f1a715c1449778f36d8205e5","filename":"core/src/test/java/org/apache/syncope/core/AbstractNonDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractNonDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractNonDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractNonDAOTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -24,7 +24,7 @@\n \n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n-    \"classpath:syncopeContext.xml\",\n+    \"classpath:coreContext.xml\",\n     \"classpath:persistenceContext.xml\",\n     \"classpath:schedulingContext.xml\",\n     \"classpath:workflowContext.xml\""},{"sha":"1f2e840b18c11bf538d788d5386ab372f198584c","filename":"core/src/test/java/org/apache/syncope/core/AbstractTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -44,14 +44,14 @@ public abstract class AbstractTest {\n     public static void setUpConnIdBundles() throws IOException {\n         InputStream propStream = null;\n         try {\n-            propStream = AbstractTest.class.getResourceAsStream(ConnIdBundleManager.CONNID_PROPS);\n+            propStream = AbstractTest.class.getResourceAsStream(\"/connid.properties\");\n             Properties props = new Properties();\n             props.load(propStream);\n \n             bundlesDirectory = props.getProperty(\"connid.locations\");\n             connidSoapVersion = props.getProperty(\"connid.soap.version\");\n         } catch (Exception e) {\n-            LOG.error(\"Could not load {}\", ConnIdBundleManager.CONNID_PROPS, e);\n+            LOG.error(\"Could not load /connid.properties\", e);\n         } finally {\n             IOUtils.closeQuietly(propStream);\n         }"},{"sha":"c250d22a30d450d92cc4f59e779f39fcb52722db","filename":"core/src/test/java/org/apache/syncope/core/init/ConnectorManagerTest.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnectorManagerTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.core.propagation.Connector;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.junit.Before;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -37,6 +38,9 @@ public class ConnectorManagerTest extends AbstractNonDAOTest {\n \n     private ConnectorManager connManager;\n \n+    @Autowired\n+    private ConnIdBundleManager connIdBundleManager;\n+\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n@@ -46,6 +50,7 @@ public class ConnectorManagerTest extends AbstractNonDAOTest {\n     @Before\n     public void before() {\n         connManager = new ConnectorManager();\n+        ReflectionTestUtils.setField(connManager, \"connIdBundleManager\", connIdBundleManager);\n         ReflectionTestUtils.setField(connManager, \"resourceDAO\", resourceDAO);\n         ReflectionTestUtils.setField(connManager, \"resourceDataBinder\", resourceDataBinder);\n "},{"sha":"c82578da37200a4771704405c16ecae1a7c9d2ab","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -80,7 +80,7 @@\n \n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n-    \"classpath:syncopeContext.xml\",\n+    \"classpath:coreContext.xml\",\n     \"classpath:restTestEnv.xml\",\n     \"classpath:persistenceContext.xml\",\n     \"classpath:schedulingContext.xml\",\n@@ -94,17 +94,17 @@ public class NotificationTest {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(NotificationTest.class);\n \n-    private static final String smtpHost = \"localhost\";\n+    private static final String SMTP_HOST = \"localhost\";\n \n-    private static final int smtpPort = 2525;\n+    private static final int SMTP_PORT = 2525;\n \n-    private static final String pop3Host = \"localhost\";\n+    private static final String POP3_HOST = \"localhost\";\n \n-    private static final int pop3Port = 1110;\n+    private static final int POP3_PORT = 1110;\n \n-    private static final String mailAddress = \"notificationtest@syncope.apache.org\";\n+    private static final String MAIL_ADDRESS = \"notificationtest@syncope.apache.org\";\n \n-    private static final String mailPassword = \"password\";\n+    private static final String MAIL_PASSWORD = \"password\";\n \n     private static GreenMail greenMail;\n \n@@ -144,10 +144,10 @@ public class NotificationTest {\n     @BeforeClass\n     public static void startGreenMail() {\n         ServerSetup[] config = new ServerSetup[2];\n-        config[0] = new ServerSetup(smtpPort, smtpHost, ServerSetup.PROTOCOL_SMTP);\n-        config[1] = new ServerSetup(pop3Port, pop3Host, ServerSetup.PROTOCOL_POP3);\n+        config[0] = new ServerSetup(SMTP_PORT, SMTP_HOST, ServerSetup.PROTOCOL_SMTP);\n+        config[1] = new ServerSetup(POP3_PORT, POP3_HOST, ServerSetup.PROTOCOL_POP3);\n         greenMail = new GreenMail(config);\n-        greenMail.setUser(mailAddress, mailPassword);\n+        greenMail.setUser(MAIL_ADDRESS, MAIL_PASSWORD);\n         greenMail.start();\n     }\n \n@@ -174,10 +174,10 @@ public void setupSecurity() {\n     public void setupSMTP() throws Exception {\n         JavaMailSenderImpl sender = (JavaMailSenderImpl) mailSender;\n         sender.setDefaultEncoding(SyncopeConstants.DEFAULT_ENCODING);\n-        sender.setHost(smtpHost);\n-        sender.setPort(smtpPort);\n-        sender.setUsername(mailAddress);\n-        sender.setPassword(mailPassword);\n+        sender.setHost(SMTP_HOST);\n+        sender.setPort(SMTP_PORT);\n+        sender.setUsername(MAIL_ADDRESS);\n+        sender.setPassword(MAIL_PASSWORD);\n     }\n \n     private boolean verifyMail(final String sender, final String subject) throws Exception {\n@@ -190,7 +190,7 @@ private boolean verifyMail(final String sender, final String subject) throws Exc\n         boolean found = false;\n         Session session = Session.getDefaultInstance(System.getProperties());\n         Store store = session.getStore(\"pop3\");\n-        store.connect(pop3Host, pop3Port, mailAddress, mailPassword);\n+        store.connect(POP3_HOST, POP3_PORT, MAIL_ADDRESS, MAIL_PASSWORD);\n \n         Folder inbox = store.getFolder(\"INBOX\");\n         assertNotNull(inbox);\n@@ -234,7 +234,7 @@ public void notifyByMail() throws Exception {\n         notificationDAO.flush();\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -291,7 +291,7 @@ public void issueSYNCOPE192() throws Exception {\n         assertNotNull(actual);\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -344,7 +344,7 @@ public void notifyByMailEmptyAbout() throws Exception {\n         notificationDAO.flush();\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -394,7 +394,7 @@ public void notifyByMailWithRetry() throws Exception {\n         notificationDAO.flush();\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -465,7 +465,7 @@ public void issueSYNCOPE445() throws Exception {\n         notificationDAO.flush();\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -526,7 +526,7 @@ public void issueSYNCOPE492() throws Exception {\n         final int tasksNumberBefore = taskDAO.findAll(NotificationTask.class).size();\n \n         // 2. create user\n-        UserTO userTO = UserTestITCase.getUniqueSampleTO(mailAddress);\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(MAIL_ADDRESS);\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(7);\n         userTO.getMemberships().add(membershipTO);\n@@ -552,7 +552,7 @@ public void issueSYNCOPE446() throws Exception {\n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserSchema);\n \n-        notification.getStaticRecipients().add(mailAddress);\n+        notification.getStaticRecipients().add(MAIL_ADDRESS);\n \n         Random random = new Random(System.currentTimeMillis());\n         String sender = \"syncopetest-\" + random.nextLong() + \"@syncope.apache.org\";\n@@ -592,7 +592,7 @@ public void issueSYNCOPE446() throws Exception {\n \n         assertNotNull(taskId);\n         assertNotNull(textBody);\n-        assertTrue(recipients.contains(mailAddress));\n+        assertTrue(recipients.contains(MAIL_ADDRESS));\n \n         // 5. execute Notification task and verify e-mail\n         taskController.execute(taskId, false);"},{"sha":"a4904b8de5592dca884c01ba1b57e984c939c45d","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/AttributableSearchTest.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -25,15 +25,14 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n-import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n-import org.apache.syncope.core.persistence.dao.search.SearchCond;\n import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n+import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n+import org.apache.syncope.core.persistence.dao.search.SearchCond;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n@@ -43,8 +42,12 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = { \"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n-    \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\" })\n+@ContextConfiguration(locations = {\n+    \"classpath:coreContext.xml\",\n+    \"classpath:persistenceContext.xml\",\n+    \"classpath:schedulingContext.xml\",\n+    \"classpath:workflowContext.xml\"\n+})\n @Transactional\n public class AttributableSearchTest {\n "},{"sha":"9f2997ac7ed0d9a18efea4325585a6390af0973b","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnectorTestITCase.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -27,7 +27,6 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.net.URI;\n import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -53,7 +52,6 @@\n import org.apache.syncope.common.types.ConnectorCapability;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.identityconnectors.common.security.GuardedString;\n import org.junit.BeforeClass;\n import org.junit.FixMethodOrder;\n@@ -63,6 +61,8 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ConnectorTestITCase extends AbstractTest {\n \n+    private static String connectorServerLocation;\n+\n     private static String connidSoapVersion;\n \n     private static String connidDbTableVersion;\n@@ -74,18 +74,25 @@ public static void setUpConnIdBundles() throws IOException {\n         InputStream propStream = null;\n         try {\n             Properties props = new Properties();\n-            propStream = ConnectorTestITCase.class.getResourceAsStream(ConnIdBundleManager.CONNID_PROPS);\n+            propStream = ConnectorTestITCase.class.getResourceAsStream(\"/connid.properties\");\n             props.load(propStream);\n \n+            for (String location : props.getProperty(\"connid.locations\").split(\",\")) {\n+                if (!location.startsWith(\"file\")) {\n+                    connectorServerLocation = location;\n+                }\n+            }\n+\n             connidSoapVersion = props.getProperty(\"connid.soap.version\");\n             connidDbTableVersion = props.getProperty(\"connid.db.table.version\");\n \n             testJDBCURL = props.getProperty(\"testdb.url\");\n         } catch (Exception e) {\n-            LOG.error(\"Could not load {}\", ConnIdBundleManager.CONNID_PROPS, e);\n+            LOG.error(\"Could not load /connid.properties\", e);\n         } finally {\n             IOUtils.closeQuietly(propStream);\n         }\n+        assertNotNull(connectorServerLocation);\n         assertNotNull(connidSoapVersion);\n         assertNotNull(connidDbTableVersion);\n         assertNotNull(testJDBCURL);\n@@ -427,22 +434,10 @@ public void checkSelectedLanguage() {\n     @Test\n     public void validate() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n-\n-        for (URI location : ConnIdBundleManager.getConnManagers().keySet()) {\n-            if (!location.getScheme().equals(\"file\")) {\n-                connectorTO.setLocation(location.toString());\n-            }\n-        }\n-\n-        // set connector version\n+        connectorTO.setLocation(connectorServerLocation);\n         connectorTO.setVersion(connidDbTableVersion);\n-\n-        // set connector name\n         connectorTO.setConnectorName(\"org.connid.bundles.db.table.DatabaseTableConnector\");\n-\n-        // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.db.table\");\n-\n         connectorTO.setDisplayName(\"H2Test\");\n \n         // set the connector configuration using PropertyTO"},{"sha":"9428a8102f0978bf053b3a0a03cfb6846f2d31ed","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -417,7 +417,7 @@ public void sync() throws Exception {\n     @Test\n     public void reconcileFromDB() {\n         // update sync task\n-        TaskExecTO execution = execSyncTask(7L, 20, false);\n+        TaskExecTO execution = execSyncTask(7L, 50, false);\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n@@ -431,7 +431,7 @@ public void reconcileFromDB() {\n         jdbcTemplate.execute(\"UPDATE TEST SET STATUS=TRUE\");\n \n         // re-execute the same SyncTask: now user must be active\n-        execution = execSyncTask(7L, 20, false);\n+        execution = execSyncTask(7L, 50, false);\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n@@ -472,7 +472,7 @@ public void reconcileFromLDAP() {\n         ldapCleanup();\n \n         // Update sync task\n-        TaskExecTO execution = execSyncTask(11L, 20, false);\n+        TaskExecTO execution = execSyncTask(11L, 50, false);\n \n         // 1. verify execution status\n         final String status = execution.getStatus();\n@@ -743,7 +743,7 @@ public void issueSYNCOPE144() {\n     @Test\n     public void issueSYNCOPE230() {\n         // 1. read SyncTask for resource-db-sync (table TESTSYNC on external H2)\n-        execSyncTask(10L, 20, false);\n+        execSyncTask(10L, 50, false);\n \n         // 3. read e-mail address for user created by the SyncTask first execution\n         UserTO userTO = readUser(\"issuesyncope230\");\n@@ -756,7 +756,7 @@ public void issueSYNCOPE230() {\n         jdbcTemplate.execute(\"UPDATE TESTSYNC SET email='updatedSYNCOPE230@syncope.apache.org'\");\n \n         // 5. re-execute the SyncTask\n-        execSyncTask(10L, 20, false);\n+        execSyncTask(10L, 50, false);\n \n         // 6. verify that the e-mail was updated\n         userTO = readUser(\"issuesyncope230\");\n@@ -767,7 +767,6 @@ public void issueSYNCOPE230() {\n     }\n \n     private TaskExecTO execSyncTask(final Long taskId, final int maxWaitSeconds, final boolean dryRun) {\n-\n         AbstractTaskTO taskTO = taskService.read(taskId);\n         assertNotNull(taskTO);\n         assertNotNull(taskTO.getExecutions());"},{"sha":"0cf9616890cab63542685a65e1147a6ceca704c2","filename":"core/src/test/java/org/apache/syncope/core/rest/data/DoubleValueAttributableTransformer.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FDoubleValueAttributableTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FDoubleValueAttributableTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FDoubleValueAttributableTransformer.java?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -38,7 +38,11 @@ public <T extends AbstractAttributableTO> T transform(final T input) {\n             if (NAME.equals(attr.getSchema())) {\n                 List<String> values = new ArrayList<String>(attr.getValues().size());\n                 for (String value : attr.getValues()) {\n-                    values.add(String.valueOf(2 * Long.valueOf(value)));\n+                    try {\n+                        values.add(String.valueOf(2 * Long.valueOf(value)));\n+                    } catch (NumberFormatException e) {\n+                        // ignore\n+                    }\n                 }\n                 attr.getValues().clear();\n                 attr.getValues().addAll(values);\n@@ -54,7 +58,11 @@ public <T extends AbstractAttributableMod> T transform(final T input) {\n             if (NAME.equals(attr.getSchema())) {\n                 List<String> values = new ArrayList<String>(attr.getValuesToBeAdded().size());\n                 for (String value : attr.getValuesToBeAdded()) {\n-                    values.add(String.valueOf(2 * Long.valueOf(value)));\n+                    try {\n+                        values.add(String.valueOf(2 * Long.valueOf(value)));\n+                    } catch (NumberFormatException e) {\n+                        // ignore\n+                    }\n                 }\n                 attr.getValuesToBeAdded().clear();\n                 attr.getValuesToBeAdded().addAll(values);"},{"sha":"264c3dd8ba699d5fbe474e9c3714516ab5804369","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -33,8 +33,6 @@ under the License.\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n   <CSchema name=\"notificationjob.cronExpression\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <CAttr id=\"2\" owner_id=\"1\" schema_name=\"notificationjob.cronExpression\"/>\n-  <CAttrValue id=\"2\" attribute_id=\"2\" stringValue=\"\"/>\n \n   <CSchema name=\"notification.maxRetries\" type=\"Long\"\n            mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n@@ -582,8 +580,8 @@ under the License.\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource_propagationActionsClassNames externalResource_name=\"resource-ldap\"\n-                                                 element=\"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\"/>\n+  <ExternalResource_PropActions externalResource_name=\"resource-ldap\"\n+                                element=\"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" "},{"sha":"471d561f622199c9bdd91a18c2f75399e67b3b81","filename":"core/src/test/resources/context.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fcontext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fcontext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontext.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -19,5 +19,5 @@ under the License.\n -->\n <Context>\n   <!-- Disable session persistence across Tomcat restarts -->\n-  <Manager pathname=\"\" />\n+  <Manager pathname=\"\"/>\n </Context>"},{"sha":"c694ba0cbf6bb159e3194b650fe7c58cac197c82","filename":"core/src/test/resources/mysql/persistence.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -25,3 +25,4 @@ quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_mysql.sql\n audit.sql=audit.sql\n+database.schema=\n\\ No newline at end of file"},{"sha":"e3f6af170718ccfc719e1cab5b6060af5a34d8c7","filename":"core/src/test/resources/oracle/persistence.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n jpa.driverClassName=oracle.jdbc.OracleDriver\n-jpa.url=jdbc:oracle:thin:@pioppo:1521:orcl\n+jpa.url=jdbc:oracle:thin:@localhost:1521:xe\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.OracleDictionary\n@@ -25,4 +25,4 @@ quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_oracle.sql\n audit.sql=audit_oracle.sql\n-database.schema=SYNCOPE\n+database.schema=SYNCOPE\n\\ No newline at end of file"},{"sha":"3106b69db4726e8b9ed1f1144fbd7a2a60c19623","filename":"core/src/test/resources/persistence.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -25,3 +25,4 @@ quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_h2.sql\n audit.sql=audit.sql\n+database.schema=\n\\ No newline at end of file"},{"sha":"56e3726ac32a56506ea0cfff785d1a0e9627b40d","filename":"core/src/test/resources/postgres/persistence.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -25,3 +25,4 @@ quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_postgres.sql\n audit.sql=audit.sql\n+database.schema=\n\\ No newline at end of file"},{"sha":"17b73f2414393445ef7ce57a55b671e2bd8831c9","filename":"core/src/test/resources/sqlserver/persistence.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n jpa.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver\n-jpa.url=jdbc:sqlserver://acacia:1433;database=syncope;selectMethod=cursor;sendStringParametersAsUnicode=false\n+jpa.url=jdbc:sqlserver://localhost:1433;database=syncope;selectMethod=cursor;sendStringParametersAsUnicode=false\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n@@ -25,3 +25,4 @@ quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_sqlServer.sql\n audit.sql=audit_sqlserver.sql\n+database.schema=\n\\ No newline at end of file"},{"sha":"8984f8f36348b4a87bd9832e6a0ed5fe1d67b81a","filename":"pom.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -342,13 +342,13 @@ under the License.\n \n     <wicket.version>6.16.0</wicket.version>\n \n-    <groovy.version>2.3.3</groovy.version>\n+    <groovy.version>2.3.4</groovy.version>\n \n-    <h2.version>1.4.179</h2.version>\n+    <h2.version>1.4.180</h2.version>\n \n     <log4j.version>2.0</log4j.version>\n     <slf4j.version>1.7.7</slf4j.version>\n-    <disruptor.version>3.2.1</disruptor.version>\n+    <disruptor.version>3.3.0</disruptor.version>\n \n     <junit.version>4.11</junit.version>\n     <selenium.version>2.42.2</selenium.version>\n@@ -357,7 +357,7 @@ under the License.\n     \n     <httpclient.version>4.3.4</httpclient.version>\n \n-    <tomcat.version>7.0.54</tomcat.version>\n+    <tomcat.version>7.0.55</tomcat.version>\n \n     <jasypt.version>1.9.2</jasypt.version>\n  \n@@ -368,6 +368,7 @@ under the License.\n \n     <izpack.version>5.0.0-rc2</izpack.version>\n  \n+    <conf.directory>${project.build.directory}/test-classes</conf.directory>\n     <bundles.directory>${project.build.directory}/bundles</bundles.directory>\n     <connid.location>file:${bundles.directory}/</connid.location>\n     <log.directory>${project.build.directory}/log</log.directory>"},{"sha":"3719c6a773bc2ed9984a9b9d4a471b01e5868b73","filename":"standalone/pom.xml","status":"modified","additions":26,"deletions":25,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/972ca985f125db9f5ff64804b49c65e8c0802076/standalone%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/972ca985f125db9f5ff64804b49c65e8c0802076/standalone%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2Fpom.xml?ref=972ca985f125db9f5ff64804b49c65e8c0802076","patch":"@@ -89,54 +89,55 @@ under the License.\n             <phase>verify</phase>\n             <configuration>\n               <target>\n-                <mkdir dir=\"${work.dir}\" />\n+                <mkdir dir=\"${work.dir}\"/>\n                 \n                 <!-- legal stuff -->\n-                <copy file=\"${project.build.outputDirectory}/README\" todir=\"${work.dir}\" />\n-                <copy file=\"../legal_ext/LICENSE\" todir=\"${work.dir}\" />\n-                <copy file=\"../legal_ext/NOTICE\" todir=\"${work.dir}\" />\n+                <copy file=\"${project.build.outputDirectory}/README\" todir=\"${work.dir}\"/>\n+                <copy file=\"../legal_ext/LICENSE\" todir=\"${work.dir}\"/>\n+                <copy file=\"../legal_ext/NOTICE\" todir=\"${work.dir}\"/>\n \n                 <!-- Unzip Tomcat and remove docs and examples from webapps (space saving) -->\n-                <unzip src=\"${settings.localRepository}/org/codehaus/cargo/cargo-container-archives/apache-tomcat-${tomcat.version}.zip\" dest=\"${work.dir}\" />\n-                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/docs\" />\n-                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/examples\" />\n+                <unzip src=\"${settings.localRepository}/org/codehaus/cargo/cargo-container-archives/apache-tomcat-${tomcat.version}.zip\" \n+                       dest=\"${work.dir}\"/>\n+                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/docs\"/>\n+                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/examples\"/>\n \n                 <!-- Syncope core (as run for integration tests) -->\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope\">\n-                  <fileset dir=\"../core/target/syncope-core-test\" includes=\"**/*\" />\n+                  <fileset dir=\"../core/target/syncope-core-test\" includes=\"**/*\"/>\n                 </copy>\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope/WEB-INF/classes\" overwrite=\"true\">\n-                  <fileset dir=\"${project.build.outputDirectory}/core\" />\n+                  <fileset dir=\"${project.build.outputDirectory}/core\"/>\n                 </copy>\n                 \n                 <!-- Syncope console (exploded) -->\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-console\">\n-                  <fileset dir=\"../console/target/syncope-console\" includes=\"**/*\" />\n+                  <fileset dir=\"../console/target/syncope-console\" includes=\"**/*\"/>\n                 </copy>\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-console/WEB-INF/classes\" overwrite=\"true\">\n-                  <fileset dir=\"${project.build.outputDirectory}/console\" />\n+                  <fileset dir=\"${project.build.outputDirectory}/console\"/>\n                 </copy>\n                                 \n                 <!-- ConnId's SOAP wssample (provides endpoint for SOAP resources) -->\n-                <copy file=\"${settings.localRepository}/org/connid/bundles/soap/wssample/${connid.soap.version}/wssample-${connid.soap.version}.war\" tofile=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/wssample.war\" />\n+                <copy file=\"${settings.localRepository}/org/connid/bundles/soap/wssample/${connid.soap.version}/wssample-${connid.soap.version}.war\" tofile=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/wssample.war\"/>\n \n                 <!-- Syncope build tools (provide H2 and Apache DS resources + ConnId connector server) -->\n-                <unzip src=\"../build-tools/target/syncope-build-tools-${project.version}.war\" dest=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\" />\n+                <unzip src=\"../build-tools/target/syncope-build-tools-${project.version}.war\" dest=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\"/>\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools/WEB-INF/lib\">\n-                  <fileset dir=\"../core/target/bundles\" includes=\"**/*\" />\n+                  <fileset dir=\"../core/target/bundles\" includes=\"**/*\"/>\n                 </copy>\n-                <zip destfile=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools.war\" basedir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\" />\n-                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\" />                  \n+                <zip destfile=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools.war\" basedir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\"/>\n+                <delete dir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-build-tools\"/>                  \n \n                 <!-- Tomcat shared libraries: H2 and groovy -->\n-                <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/lib\" />\n-                <copy file=\"${settings.localRepository}/org/codehaus/groovy/groovy-all/${groovy.version}/groovy-all-${groovy.version}.jar\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/lib\" />\n+                <copy file=\"${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/lib\"/>\n+                <copy file=\"${settings.localRepository}/org/codehaus/groovy/groovy-all/${groovy.version}/groovy-all-${groovy.version}.jar\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/lib\"/>\n                 \n                 <!-- Other custom Tomcat resources -->\n-                <copy file=\"../core/target/test-classes/context.xml\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/conf\" overwrite=\"true\" />\n-                <copy file=\"src/main/resources/setenv.sh\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/bin\" />\n-                <copy file=\"src/main/resources/setenv.bat\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/bin\" />\n-                <replace file=\"${work.dir}/apache-tomcat-${tomcat.version}/conf/server.xml\" token=\"8080\" value=\"${cargo.servlet.port}\" />\n+                <copy file=\"../core/target/test-classes/context.xml\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/conf\" overwrite=\"true\"/>\n+                <copy file=\"src/main/resources/setenv.sh\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/bin\"/>\n+                <copy file=\"src/main/resources/setenv.bat\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/bin\"/>\n+                <replace file=\"${work.dir}/apache-tomcat-${tomcat.version}/conf/server.xml\" token=\"8080\" value=\"${cargo.servlet.port}\"/>\n               </target>\n             </configuration>\n           </execution>\n@@ -177,23 +178,23 @@ under the License.\n         <filtering>true</filtering>\n         <targetPath>core</targetPath>\n         <includes>\n-          <include>logback.xml</include>\n+          <include>log4j2.xml</include>\n         </includes>\n       </resource>\n       <resource>\n         <directory>../console/src/test/resources</directory>\n         <filtering>true</filtering>\n         <targetPath>console</targetPath>\n         <includes>\n-          <include>configuration.properties</include>\n+          <include>console.properties</include>\n         </includes>\n       </resource>\n       <resource>\n         <directory>../console/src/main/resources</directory>\n         <filtering>true</filtering>\n         <targetPath>console</targetPath>\n         <includes>\n-          <include>logback.xml</include>\n+          <include>log4j2.xml</include>\n         </includes>\n       </resource>\n       <resource>"}]}