{"sha":"81a069506a0a2607961b4d112575dcf9300aae4b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxYTA2OTUwNmEwYTI2MDc5NjFiNGQxMTI1NzVkY2Y5MzAwYWFlNGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-21T10:08:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-21T10:08:37Z"},"message":"[SYNCOPE-440] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1544081 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1c82203ac4f139457b3317cee13bf4dac343f8ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1c82203ac4f139457b3317cee13bf4dac343f8ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/81a069506a0a2607961b4d112575dcf9300aae4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81a069506a0a2607961b4d112575dcf9300aae4b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/81a069506a0a2607961b4d112575dcf9300aae4b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81a069506a0a2607961b4d112575dcf9300aae4b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e66c72730856895b2848deb88bdea9fd96efd739","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e66c72730856895b2848deb88bdea9fd96efd739","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e66c72730856895b2848deb88bdea9fd96efd739"},{"sha":"361b589a9b408c0e1032517d2924c6352cc3b415","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/361b589a9b408c0e1032517d2924c6352cc3b415","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/361b589a9b408c0e1032517d2924c6352cc3b415"}],"stats":{"total":16,"additions":13,"deletions":3},"files":[{"sha":"e24597abc9fff8f9664a54c9e7e3c4ad49b0376d","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncJob.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81a069506a0a2607961b4d112575dcf9300aae4b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81a069506a0a2607961b4d112575dcf9300aae4b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java?ref=81a069506a0a2607961b4d112575dcf9300aae4b","patch":"@@ -46,6 +46,7 @@\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n@@ -386,7 +387,7 @@ protected String executeWithSecurityContext(final boolean dryRun) throws JobExec\n         final SyncopeSyncResultHandler handler =\n                 (SyncopeSyncResultHandler) ((DefaultListableBeanFactory) ApplicationContextProvider.\n                 getApplicationContext().getBeanFactory()).createBean(\n-                SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         handler.setConnector(connector);\n         handler.setActions(actions);\n         handler.setDryRun(dryRun);\n@@ -396,6 +397,15 @@ protected String executeWithSecurityContext(final boolean dryRun) throws JobExec\n \n         actions.beforeAll(handler);\n         try {\n+            SyncToken latestUSyncToken = null;\n+            if (uMapping != null && !syncTask.isFullReconciliation()) {\n+                latestUSyncToken = connector.getLatestSyncToken(ObjectClass.ACCOUNT);\n+            }\n+            SyncToken latestRSyncToken = null;\n+            if (rMapping != null && !syncTask.isFullReconciliation()) {\n+                latestRSyncToken = connector.getLatestSyncToken(ObjectClass.GROUP);\n+            }\n+\n             if (syncTask.isFullReconciliation()) {\n                 if (uMapping != null) {\n                     connector.getAllObjects(ObjectClass.ACCOUNT, handler,\n@@ -420,10 +430,10 @@ protected String executeWithSecurityContext(final boolean dryRun) throws JobExec\n                 try {\n                     ExternalResource resource = resourceDAO.find(syncTask.getResource().getName());\n                     if (uMapping != null) {\n-                        resource.setUsyncToken(connector.getLatestSyncToken(ObjectClass.ACCOUNT));\n+                        resource.setUsyncToken(latestUSyncToken);\n                     }\n                     if (rMapping != null) {\n-                        resource.setRsyncToken(connector.getLatestSyncToken(ObjectClass.GROUP));\n+                        resource.setRsyncToken(latestRSyncToken);\n                     }\n                     resourceDAO.save(resource);\n                 } catch (Exception e) {"}]}