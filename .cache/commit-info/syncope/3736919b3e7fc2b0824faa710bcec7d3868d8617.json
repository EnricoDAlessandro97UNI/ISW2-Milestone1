{"sha":"3736919b3e7fc2b0824faa710bcec7d3868d8617","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM3MzY5MTliM2U3ZmMyYjA4MjRmYWE3MTBiY2VjN2QzODY4ZDg2MTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-07T16:35:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-07T16:35:55Z"},"message":"[SYNCOPE-434] Introducing new conf parameter 'authentication.statuses' for user statuses allowed to authenticate\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1539706 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c1b13611a8c12f455edd40c08192d589e99b793c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c1b13611a8c12f455edd40c08192d589e99b793c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3736919b3e7fc2b0824faa710bcec7d3868d8617","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3736919b3e7fc2b0824faa710bcec7d3868d8617","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3736919b3e7fc2b0824faa710bcec7d3868d8617","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3736919b3e7fc2b0824faa710bcec7d3868d8617/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"133c6b04971522d2123e5a394089e3fdd8cd7495","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/133c6b04971522d2123e5a394089e3fdd8cd7495","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/133c6b04971522d2123e5a394089e3fdd8cd7495"}],"stats":{"total":77,"additions":73,"deletions":4},"files":[{"sha":"2303906f71698cef132d932b9585768484c1d0fc","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":18,"deletions":3,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=3736919b3e7fc2b0824faa710bcec7d3868d8617","patch":"@@ -20,11 +20,14 @@\n \n import java.util.Date;\n import javax.annotation.Resource;\n+import org.apache.commons.lang.ArrayUtils;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.audit.AuditManager;\n+import org.apache.syncope.core.persistence.beans.SyncopeConf;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.util.PasswordEncoder;\n import org.slf4j.Logger;\n@@ -50,6 +53,9 @@ public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n     @Autowired\n     private AuditManager auditManager;\n \n+    @Autowired\n+    private ConfDAO confDAO;\n+\n     @Autowired\n     private UserDAO userDAO;\n \n@@ -81,7 +87,7 @@ public void setSyncopeUserDetailsService(final SyncopeUserDetailsService syncope\n     }\n \n     @Override\n-    @Transactional(noRollbackFor = {BadCredentialsException.class, DisabledException.class})\n+    @Transactional(noRollbackFor = { BadCredentialsException.class, DisabledException.class })\n     public Authentication authenticate(final Authentication authentication)\n             throws AuthenticationException {\n \n@@ -97,10 +103,19 @@ public Authentication authenticate(final Authentication authentication)\n         } else {\n             user = userDAO.find(username);\n \n-            if (user != null && user.isSuspended() != null) {\n-                if (user.isSuspended()) {\n+            if (user != null) {\n+                if (user.isSuspended() != null && user.isSuspended()) {\n                     throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n                 }\n+\n+                SyncopeConf authStatuses = confDAO.find(\"authentication.statuses\", null);\n+                if (authStatuses != null) {\n+                    String[] statuses = authStatuses.getValue().split(\"\\\\|\");\n+                    if (!ArrayUtils.contains(statuses, user.getStatus())) {\n+                        throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n+                    }\n+                }\n+\n                 authenticated = authenticate(\n                         authentication.getCredentials().toString(),\n                         user.getCipherAlgorithm(),"},{"sha":"1c740e55551bdf28e885178e9cd76b33ae710d4a","filename":"core/src/main/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=3736919b3e7fc2b0824faa710bcec7d3868d8617","patch":"@@ -30,6 +30,8 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n+  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n+  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n     \n   <!-- Authentication and authorization -->\n   <Entitlement name=\"SCHEMA_CREATE\"/>"},{"sha":"29a1a7897cd658aa1ddb672b42f4348ac3234e33","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":51,"deletions":1,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=3736919b3e7fc2b0824faa710bcec7d3868d8617","patch":"@@ -28,13 +28,15 @@\n import java.security.AccessControlException;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n \n import org.apache.cxf.transport.http.CXFAuthenticator;\n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.NodeCond;\n+import org.apache.syncope.common.services.EntitlementService;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.SchemaService;\n import org.apache.syncope.common.services.UserService;\n@@ -44,13 +46,17 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormPropertyTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.rest.jaxrs.CXFPatchedAuthenticator;\n+import org.apache.syncope.core.workflow.ActivitiDetector;\n+import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -332,7 +338,7 @@ public void issueSYNCOPE48() {\n         parentRole.addEntitlement(\"ROLE_1\");\n         parentRole.setParent(1L);\n \n-        parentRole =  createRole(roleService, parentRole);\n+        parentRole = createRole(roleService, parentRole);\n         assertNotNull(parentRole);\n \n         // Child role, with no entitlements\n@@ -368,6 +374,50 @@ public void issueSYNCOPE48() {\n         assertNotNull(role1User);\n     }\n \n+    @Test\n+    public void issueSYNCOPE434() {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n+\n+        // 1. create user with role 9 (users with role 9 are defined in workflow as subject to approval)\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"createWithReject@syncope.apache.org\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(9L);\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+        assertEquals(\"createApproval\", userTO.getStatus());\n+\n+        // 2. try to authenticate: fail\n+        EntitlementService myEntitlementService =\n+                setupCredentials(entitlementService, EntitlementService.class, userTO.getUsername(), \"password123\");\n+        try {\n+            myEntitlementService.getMyEntitlements();\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n+\n+        // 3. approve user\n+        super.resetRestTemplate();\n+\n+        WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getId());\n+        form = userWorkflowService.claimForm(form.getTaskId());\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertyMap();\n+        props.get(\"approve\").setValue(Boolean.TRUE.toString());\n+        form.setProperties(props.values());\n+        userTO = userWorkflowService.submitForm(form);\n+        assertNotNull(userTO);\n+        assertEquals(\"active\", userTO.getStatus());\n+\n+        // 4. try to authenticate again: success\n+        myEntitlementService =\n+                setupCredentials(entitlementService, EntitlementService.class, userTO.getUsername(), \"password123\");\n+        assertNotNull(myEntitlementService.getMyEntitlements());\n+\n+        super.resetRestTemplate();\n+    }\n+\n     private int getFailedLogins(UserService testUserService, long userId) {\n         UserTO readUserTO = testUserService.read(userId);\n         assertNotNull(readUserTO);"},{"sha":"a14c1cc8974183f6fedcfdd3b6e2aa619dc2fe84","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3736919b3e7fc2b0824faa710bcec7d3868d8617/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=3736919b3e7fc2b0824faa710bcec7d3868d8617","patch":"@@ -30,6 +30,8 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n+  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n+  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%2F%3E\"/>"}]}