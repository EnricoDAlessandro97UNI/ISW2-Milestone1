{"sha":"110a4dcfcf00fd2338fdf56b107136af9dc82d92","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjExMGE0ZGNmY2YwMGZkMjMzOGZkZjU2YjEwNzEzNmFmOWRjODJkOTI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T10:54:49Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T10:54:49Z"},"message":"Fixes issue 176\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247137 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"14749aeffadded079e43407992bbb06fabfd1fd5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/14749aeffadded079e43407992bbb06fabfd1fd5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/110a4dcfcf00fd2338fdf56b107136af9dc82d92","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/110a4dcfcf00fd2338fdf56b107136af9dc82d92","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/110a4dcfcf00fd2338fdf56b107136af9dc82d92","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/110a4dcfcf00fd2338fdf56b107136af9dc82d92/comments","author":null,"committer":null,"parents":[{"sha":"784f26f41a79f0c0287b167e4751939eff5bd722","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/784f26f41a79f0c0287b167e4751939eff5bd722","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/784f26f41a79f0c0287b167e4751939eff5bd722"}],"stats":{"total":67,"additions":64,"deletions":3},"files":[{"sha":"aa3325b3bc6cc49151bb5ead03066f0208107862","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnInstanceDAO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java?ref=110a4dcfcf00fd2338fdf56b107136af9dc82d92","patch":"@@ -16,6 +16,7 @@\n \n import java.util.List;\n import org.syncope.core.persistence.beans.ConnInstance;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface ConnInstanceDAO extends DAO {\n@@ -24,8 +25,9 @@ public interface ConnInstanceDAO extends DAO {\n \n     List<ConnInstance> findAll();\n \n-    ConnInstance save(ConnInstance connector)\n-            throws InvalidEntityException;\n+    List<TargetResource> findTargetResources(ConnInstance connector);\n+\n+    ConnInstance save(ConnInstance connector) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"f0d073504db01242e0ed85bd37fcfdc9e16d2774","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnInstanceDAOImpl.java","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java?ref=110a4dcfcf00fd2338fdf56b107136af9dc82d92","patch":"@@ -15,11 +15,13 @@\n package org.syncope.core.persistence.dao.impl;\n \n import java.util.List;\n+import javassist.NotFoundException;\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.ConnInstance;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n \n @Repository\n@@ -40,9 +42,32 @@ public List<ConnInstance> findAll() {\n         return query.getResultList();\n     }\n \n+    @Override\n+    public List<TargetResource> findTargetResources(\n+            final ConnInstance connector) {\n+        final Query query = entityManager.createQuery(\n+                \"SELECT e FROM TargetResource e WHERE connector=:connector\");\n+\n+        query.setParameter(\"connector\", connector);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public ConnInstance save(final ConnInstance connector) {\n-        return entityManager.merge(connector);\n+        final ConnInstance merged = entityManager.merge(connector);\n+\n+        final List<TargetResource> resources = findTargetResources(merged);\n+\n+        for (TargetResource resource : resources) {\n+            try {\n+                connInstanceLoader.registerConnector(resource);\n+            } catch (NotFoundException e) {\n+                LOG.error(\"While registering connector for resource\", e);\n+            }\n+        }\n+\n+        return merged;\n     }\n \n     @Override"},{"sha":"8047feac26be582228e93754e09bd64b8e565190","filename":"core/src/test/java/org/syncope/core/persistence/dao/ConnInstanceTest.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/110a4dcfcf00fd2338fdf56b107136af9dc82d92/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=110a4dcfcf00fd2338fdf56b107136af9dc82d92","patch":"@@ -25,7 +25,9 @@\n import org.syncope.types.ConnConfProperty;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.AbstractTest;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.types.ConnConfPropSchema;\n+import org.syncope.types.ConnectorCapability;\n \n @Transactional\n public class ConnInstanceTest extends AbstractTest {\n@@ -138,4 +140,36 @@ public final void delete() {\n         ConnInstance actual = connInstanceDAO.find(100L);\n         assertNull(\"delete did not work\", actual);\n     }\n+\n+    /**\n+     * Connector change used to miss connector bean registration.\n+     * \n+     * http://code.google.com/p/syncope/issues/detail?id=176\n+     */\n+    @Test\n+    public void issue176() {\n+        ConnInstance connectorInstance = connInstanceDAO.find(103L);\n+        assertNotNull(connectorInstance);\n+        assertTrue(connectorInstance.getCapabilities().isEmpty());\n+\n+        List<TargetResource> resources =\n+                connInstanceDAO.findTargetResources(connectorInstance);\n+\n+        assertNotNull(resources);\n+        assertEquals(1, resources.size());\n+        assertEquals(\n+                \"ws-target-resource-nopropagation\", resources.get(0).getName());\n+\n+        connectorInstance.addCapability(ConnectorCapability.SEARCH);\n+\n+        connectorInstance = connInstanceDAO.save(connectorInstance);\n+        assertNotNull(connectorInstance);\n+        assertFalse(connectorInstance.getCapabilities().isEmpty());\n+\n+        resources = connInstanceDAO.findTargetResources(connectorInstance);\n+        assertNotNull(resources);\n+        assertEquals(1, resources.size());\n+        assertEquals(\n+                \"ws-target-resource-nopropagation\", resources.get(0).getName());\n+    }\n }"}]}