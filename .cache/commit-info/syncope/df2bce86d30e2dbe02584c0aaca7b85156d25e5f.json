{"sha":"df2bce86d30e2dbe02584c0aaca7b85156d25e5f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmMmJjZTg2ZDMwZTJkYmUwMjU4NGMwYWFjYTdiODUxNTZkMjVlNWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-17T16:29:34Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-17T16:29:34Z"},"message":"Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1434765 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"10985ea9ce7fa9e43614d9785ea7946d52a99aaf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/10985ea9ce7fa9e43614d9785ea7946d52a99aaf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df2bce86d30e2dbe02584c0aaca7b85156d25e5f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df2bce86d30e2dbe02584c0aaca7b85156d25e5f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df2bce86d30e2dbe02584c0aaca7b85156d25e5f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e199b01d92dd942fd0047af6953a5d803bc278e5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e199b01d92dd942fd0047af6953a5d803bc278e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e199b01d92dd942fd0047af6953a5d803bc278e5"}],"stats":{"total":36,"additions":22,"deletions":14},"files":[{"sha":"a34686f3b020a1002ee82c1bc4904c6bee3b1e3f","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":21,"deletions":11,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=df2bce86d30e2dbe02584c0aaca7b85156d25e5f","patch":"@@ -57,17 +57,17 @@ class NotificationModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -1975312550059578553L;\n \n+    /**\n+     * OnChange event name.\n+     */\n+    private static final String ON_CHANGE = \"onchange\";\n+\n     @SpringBean\n     private NotificationRestClient restClient;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    /**\n-     * OnChange event name.\n-     */\n-    private static String onchange = \"onchange\";\n-\n     public NotificationModalPage(final PageReference callPageRef, final ModalWindow window,\n             final NotificationTO notificationTO, final boolean createFlag) {\n \n@@ -124,7 +124,10 @@ public NotificationModalPage(final PageReference callPageRef, final ModalWindow\n         recipientAttrName.setRequired(true);\n         form.add(recipientAttrName);\n \n-        recipientAttrType.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+        recipientAttrType.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 recipientAttrName.setChoices(getSchemaNames(notificationTO.getRecipientAttrType()));\n@@ -160,7 +163,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         recipientsContainer.add(recipients);\n         recipients.setEnabled(checkRecipients.getModelObject());\n \n-        selfAsRecipient.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+        selfAsRecipient.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n+\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n@@ -175,7 +179,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        checkRecipients.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+        checkRecipients.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n+\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n@@ -191,11 +196,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n \n         AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model<String>(getString(\"submit\"))) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-\n                 notificationTO.setAbout(about.buildSearchCond());\n                 notificationTO.setRecipients(checkRecipients.getModelObject() ? recipients.buildSearchCond() : null);\n \n@@ -225,6 +230,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         final IndicatingAjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -252,20 +258,24 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n     private List<String> getSchemaNames(final IntMappingType type) {\n         if (type == null) {\n-            return Collections.emptyList();\n+            return Collections.<String>emptyList();\n         }\n \n         switch (type) {\n             case UserSchema:\n                 return schemaRestClient.getSchemaNames(AttributableType.USER);\n+\n             case UserDerivedSchema:\n                 return schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+\n             case UserVirtualSchema:\n                 return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+\n             case Username:\n                 return Collections.singletonList(\"Username\");\n+\n             default:\n-                return Collections.emptyList();\n+                return Collections.<String>emptyList();\n         }\n     }\n }"},{"sha":"aecc5be8f5541011c85d25ca80d67ced3a64bbd6","filename":"console/src/main/java/org/apache/syncope/console/rest/BaseRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java?ref=df2bce86d30e2dbe02584c0aaca7b85156d25e5f","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.rest;\n \n import java.io.Serializable;\n-\n import org.apache.syncope.console.SyncopeSession;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -33,7 +32,7 @@ public abstract class BaseRestClient implements Serializable {\n \n     private static final long serialVersionUID = 1523999867826481989L;\n \n-    protected <T> T getService(Class<T> serviceClass) {\n+    protected <T> T getService(final Class<T> serviceClass) {\n         return SyncopeSession.get().getService(serviceClass);\n     }\n }"},{"sha":"1a750103a0897f23e53dac054f3694b014e74213","filename":"console/src/main/java/org/apache/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df2bce86d30e2dbe02584c0aaca7b85156d25e5f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=df2bce86d30e2dbe02584c0aaca7b85156d25e5f","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import org.apache.syncope.client.to.NotificationTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.services.ConfigurationService;"}]}