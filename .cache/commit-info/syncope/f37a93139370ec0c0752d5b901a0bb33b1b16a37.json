{"sha":"f37a93139370ec0c0752d5b901a0bb33b1b16a37","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYzN2E5MzEzOTM3MGVjMGMwNzUyZDViOTAxYTBiYjMzYjFiMTZhMzc=","commit":{"author":{"name":"Misagh Moayyed","email":"misagh.moayyed@gmail.com","date":"2021-03-18T15:11:16Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-03-18T15:11:16Z"},"message":"Auto-configure session tracking modes (#247)","tree":{"sha":"a24b2b881f715238a16e924f410ee68e08a61d87","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a24b2b881f715238a16e924f410ee68e08a61d87"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f37a93139370ec0c0752d5b901a0bb33b1b16a37","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgU22UCRBK7hj4Ov3rIwAAdHIIAG3OkO6oDTf9rapQS9WzKpnH\nxGBfSMAXkt4SbkDX9xwPnisrXoef1aYmpcN1jcwHuPqeF3qycILF51xWcpHfl+0f\nDhXq+37NdsdqKDPD/IcWfiupTVTx2ognOgf0euDEK1sV/YsRikU+rWOISrya8wNj\nAriXdZc+a4Q7wJfJmwFRbDwkWGw98Le+RBvTxhDM3UF2p2uYz3yzrwK0T/Cd8NTn\n+A+0Zan8LWyw4pSf5cUNLj8l7CvBIU6KVqOjoCeigSrZRCm+GNV/uiRq3qYpGEhZ\njnCDDNh16A/0T3R7UOggnfq3f3HdgcFh9TzHhUvht+eE0eCpVcv7ARXmRsaNKLM=\n=3mYe\n-----END PGP SIGNATURE-----\n","payload":"tree a24b2b881f715238a16e924f410ee68e08a61d87\nparent 0bdd2280b1e31f2c4973217990ab57e23f8cf8db\nauthor Misagh Moayyed <misagh.moayyed@gmail.com> 1616080276 +0330\ncommitter GitHub <noreply@github.com> 1616080276 +0330\n\nAuto-configure session tracking modes (#247)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f37a93139370ec0c0752d5b901a0bb33b1b16a37","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f37a93139370ec0c0752d5b901a0bb33b1b16a37","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f37a93139370ec0c0752d5b901a0bb33b1b16a37/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"0bdd2280b1e31f2c4973217990ab57e23f8cf8db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0bdd2280b1e31f2c4973217990ab57e23f8cf8db","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0bdd2280b1e31f2c4973217990ab57e23f8cf8db"}],"stats":{"total":29,"additions":28,"deletions":1},"files":[{"sha":"7aa8a93c566f11262e01fd5634d039a502a93a7a","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/SyncopeWAApplication.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f37a93139370ec0c0752d5b901a0bb33b1b16a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f37a93139370ec0c0752d5b901a0bb33b1b16a37/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java?ref=f37a93139370ec0c0752d5b901a0bb33b1b16a37","patch":"@@ -45,21 +45,28 @@\n import org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration;\n import org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration;\n import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n import org.springframework.boot.builder.SpringApplicationBuilder;\n import org.springframework.boot.context.event.ApplicationReadyEvent;\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.context.annotation.PropertySource;\n import org.springframework.context.event.EventListener;\n import org.springframework.scheduling.annotation.EnableAsync;\n import org.springframework.scheduling.annotation.EnableScheduling;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n+import org.springframework.web.WebApplicationInitializer;\n+\n+import javax.servlet.SessionTrackingMode;\n \n import java.time.LocalDateTime;\n import java.time.ZoneId;\n import java.util.Date;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n \n @PropertySource(\"classpath:wa.properties\")\n @PropertySource(value = \"file:${conf.directory}/wa.properties\", ignoreResourceNotFound = true)\n@@ -77,7 +84,7 @@\n     DataSourceTransactionManagerAutoConfiguration.class,\n     RedisRepositoriesAutoConfiguration.class\n })\n-@EnableConfigurationProperties(CasConfigurationProperties.class)\n+@EnableConfigurationProperties({CasConfigurationProperties.class, ServerProperties.class})\n @EnableAsync\n @EnableAspectJAutoProxy(proxyTargetClass = true)\n @EnableTransactionManagement(proxyTargetClass = true)\n@@ -89,6 +96,9 @@ public class SyncopeWAApplication extends SpringBootServletInitializer {\n     @Autowired\n     private SchedulerFactoryBean scheduler;\n \n+    @Autowired\n+    private ServerProperties serverProperties;\n+\n     @Value(\"${contextRefreshDelay:15}\")\n     private long contextRefreshDelay;\n \n@@ -111,6 +121,18 @@ public void handleApplicationReadyEvent(final ApplicationReadyEvent event) {\n         scheduleJobToRefreshContext();\n     }\n \n+    @Bean\n+    public WebApplicationInitializer syncopeWebApplicationInitializer() {\n+        return servletContext -> {\n+            Set<SessionTrackingMode> trackingModes = serverProperties.getServlet().getSession().getTrackingModes().\n+                stream().\n+                map(mode -> SessionTrackingMode.valueOf(mode.name())).\n+                collect(Collectors.toSet());\n+            servletContext.setSessionTrackingModes(trackingModes);\n+            LOG.debug(\"Set session tracking modes to {}\", trackingModes);\n+        };\n+    }\n+\n     private void scheduleJobToRefreshContext() {\n         try {\n             Date date = Date.from(LocalDateTime.now().plusSeconds(this.contextRefreshDelay)."},{"sha":"0c802412709c00415918f0ec641768efcd120b0d","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/AbstractTest.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f37a93139370ec0c0752d5b901a0bb33b1b16a37/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f37a93139370ec0c0752d5b901a0bb33b1b16a37/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java?ref=f37a93139370ec0c0752d5b901a0bb33b1b16a37","patch":"@@ -19,9 +19,13 @@\n package org.apache.syncope.wa.starter;\n \n import java.util.UUID;\n+\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.test.context.TestConfiguration;\n import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.boot.web.servlet.server.Session;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.test.context.ContextConfiguration;\n@@ -35,6 +39,7 @@\n         \"cas.sso.allow-missing-service-parameter=true\"\n })\n @ContextConfiguration(initializers = ZookeeperTestingServer.class)\n+@EnableConfigurationProperties(ServerProperties.class)\n public abstract class AbstractTest {\n \n     @LocalServerPort"}]}