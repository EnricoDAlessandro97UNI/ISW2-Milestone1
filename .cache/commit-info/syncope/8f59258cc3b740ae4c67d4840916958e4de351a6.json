{"sha":"8f59258cc3b740ae4c67d4840916958e4de351a6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhmNTkyNThjYzNiNzQwYWU0YzY3ZDQ4NDA5MTY5NThlNGRlMzUxYTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-29T15:25:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-29T15:26:57Z"},"message":"[SYNCOPE-953] Fix provided - besides listing, now also searching for Groups does not require special entitlements any more, removing StandardEntitlements.GROUP_SEARCH","tree":{"sha":"65d2eda8d33913af132679a3cb729ef4d1142d19","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/65d2eda8d33913af132679a3cb729ef4d1142d19"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8f59258cc3b740ae4c67d4840916958e4de351a6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8f59258cc3b740ae4c67d4840916958e4de351a6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8f59258cc3b740ae4c67d4840916958e4de351a6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8f59258cc3b740ae4c67d4840916958e4de351a6/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/55b9e83d76d6f8c576a235aeb6f1e3d634656bcf"}],"stats":{"total":62,"additions":36,"deletions":26},"files":[{"sha":"af09113577f9fda34818833689c6d18bd89e60a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ITabComponent.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -16,6 +16,7 @@\n package org.apache.syncope.client.console.commons;\n \n import java.util.UUID;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n@@ -34,7 +35,7 @@ public abstract class ITabComponent extends Component implements ITab {\n     private final IModel<String> title;\n \n     /**\n-     * Constructor\n+     * Constructor.\n      *\n      * @param title IModel used to represent the title of the tab. Must contain a string\n      * @param roles authorized roles\n@@ -45,7 +46,11 @@ public ITabComponent(final IModel<String> title, final String roles) {\n \n         final ActionPermissions permissions = new ActionPermissions();\n         setMetaData(MetaDataRoleAuthorizationStrategy.ACTION_PERMISSIONS, permissions);\n-        permissions.authorize(RENDER, new Roles(roles));\n+        if (StringUtils.isBlank(roles)) {\n+            permissions.authorizeAll(RENDER);\n+        } else {\n+            permissions.authorize(RENDER, new Roles(roles));\n+        }\n     }\n \n     /**"},{"sha":"118c415754248b8d492071848b48a1596208b0f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -395,7 +395,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionType.RELOAD, StandardEntitlement.GROUP_SEARCH).build(componentId);\n+                }, ActionType.RELOAD).build(componentId);\n             }\n         });\n "},{"sha":"857bff0157a717e739143abf4528b3bdd01144f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.Component;\n@@ -85,8 +86,8 @@ public Realm(final String id, final RealmTO realmTO, final PageReference pageRef\n \n         setPageRef(pageRef);\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n-                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n+                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n         addInnerObject(tabbedPanel);\n         this.wizardBuilder = new RealmWizardBuilder(pageRef);\n@@ -157,14 +158,15 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n-                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n+                FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n             tabs.add(new ITabComponent(\n                     new Model<>(anyTypeTO.getKey()),\n-                    String.format(\"%s_SEARCH\", anyTypeTO.getKey())) {\n+                    AnyTypeKind.GROUP.name().equals(anyTypeTO.getKey())\n+                    ? null : String.format(\"%s_SEARCH\", anyTypeTO.getKey())) {\n \n                 private static final long serialVersionUID = 1169585538404171118L;\n \n@@ -202,8 +204,8 @@ protected Panel customResultBody(final String panelId, final RealmTO item, final\n         propagations.add(syncope);\n         propagations.addAll(((ProvisioningResult) result).getPropagationStatuses());\n \n-        ListViewPanel.Builder<PropagationStatus> builder\n-                = new ListViewPanel.Builder<PropagationStatus>(PropagationStatus.class, pageRef) {\n+        ListViewPanel.Builder<PropagationStatus> builder =\n+                new ListViewPanel.Builder<PropagationStatus>(PropagationStatus.class, pageRef) {\n \n             private static final long serialVersionUID = -6809736686861678498L;\n \n@@ -218,7 +220,7 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                                     afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n                             ? StringUtils.EMPTY\n                             : afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n-                            iterator().next();\n+                                    iterator().next();\n \n                     return new Label(\"field\", remoteId);\n                 } else if (\"status\".equalsIgnoreCase(key)) {"},{"sha":"e8aba25985d1dd8a3b277a0663325ccf64fdd953","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -42,10 +42,8 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.lang.Args;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n \n public class Groups extends WizardStep implements ICondition {\n@@ -66,7 +64,7 @@ public <T extends AnyTO> Groups(final T anyTO, final boolean templateMode) {\n         // -----------------------------------------------------------------\n         final ActionPermissions permissions = new ActionPermissions();\n         setMetaData(MetaDataRoleAuthorizationStrategy.ACTION_PERMISSIONS, permissions);\n-        permissions.authorize(RENDER, new Roles(StandardEntitlement.GROUP_SEARCH));\n+        permissions.authorizeAll(RENDER);\n         // -----------------------------------------------------------------\n \n         setOutputMarkupId(true);\n@@ -114,7 +112,7 @@ public List<MembershipTO> execute(final String filter) {\n                         groupRestClient.search(\n                                 realm,\n                                 SyncopeClient.getGroupSearchConditionBuilder().\n-                                isAssignable().and().is(\"name\").equalTo(filter).query(),\n+                                        isAssignable().and().is(\"name\").equalTo(filter).query(),\n                                 -1, -1,\n                                 new SortParam<>(\"name\", true),\n                                 null),\n@@ -160,6 +158,6 @@ public String transform(final GroupTO input) {\n     public boolean evaluate() {\n         return CollectionUtils.isNotEmpty(allGroups)\n                 && SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n-                isActionAuthorized(this, RENDER);\n+                        isActionAuthorized(this, RENDER);\n     }\n }"},{"sha":"9fe6a0f1b3a6b2e6febc1fee25f87a53db801f7a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -106,9 +106,7 @@ public Ownership(final GroupWrapper groupWrapper, final PageReference pageRef) {\n         // -----------------------------------------------------------------\n         final ActionPermissions permissions = new ActionPermissions();\n         setMetaData(MetaDataRoleAuthorizationStrategy.ACTION_PERMISSIONS, permissions);\n-        permissions.authorize(RENDER, new Roles(new StringBuilder().\n-                append(StandardEntitlement.USER_SEARCH).append(\",\").\n-                append(StandardEntitlement.GROUP_SEARCH).toString()));\n+        permissions.authorize(RENDER, new Roles(StandardEntitlement.USER_SEARCH));\n         // -----------------------------------------------------------------\n \n         setTitleModel(new ResourceModel(\"group.ownership\"));"},{"sha":"00998599fe3504750634e3d95a6dc222d5aa8c53","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -23,6 +23,7 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n@@ -55,7 +56,9 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             String realm = java.net.URLDecoder.decode(attributes.getParameters().get(\"realm\").\n                     toString(SyncopeConstants.ROOT_REALM), \"UTF-8\");\n-            final List<GroupTO> groupTOs = groupService.search(new AnyQuery.Builder().realm(realm).build()).getResult();\n+            final List<GroupTO> groupTOs = groupService.search(new AnyQuery.Builder().realm(realm).\n+                    fiql(SyncopeClient.getGroupSearchConditionBuilder().isAssignable().query()).\n+                    build()).getResult();\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"c6b0b4e67db811097ab32aa809c0ac4b9ea996ea","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -181,6 +181,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           for (var i in response) {\n             $scope.dynamicForm.resources.push(response[i].key);\n           }\n+          $scope.dynamicForm.resources.sort();\n         });\n       };\n \n@@ -191,6 +192,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           for (var i in response) {\n             $scope.dynamicForm.groups.push({\"rightKey\": response[i].key, \"groupName\": response[i].name});\n           }\n+          $scope.dynamicForm.groups.sort(function (a, b) {\n+            var x = a.groupName;\n+            var y = b.groupName;\n+            return x < y ? -1 : x > y ? 1 : 0;\n+          });\n         }, function (e) {\n           $scope.showError(\"An error occur during retrieving groups \" + e, $scope.notification)\n         });"},{"sha":"74c59b7e1b15d6be274761b6445a5c8754853153","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/StandardEntitlement.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -96,8 +96,6 @@ public final class StandardEntitlement {\n \n     public static final String USER_DELETE = \"USER_DELETE\";\n \n-    public static final String GROUP_SEARCH = \"GROUP_SEARCH\";\n-\n     public static final String GROUP_CREATE = \"GROUP_CREATE\";\n \n     public static final String GROUP_READ = \"GROUP_READ\";"},{"sha":"157a7d63b14e8238ace4dc4c2f2e30d0dfb7acc4","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8f59258cc3b740ae4c67d4840916958e4de351a6/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8f59258cc3b740ae4c67d4840916958e4de351a6/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=8f59258cc3b740ae4c67d4840916958e4de351a6","patch":"@@ -189,23 +189,23 @@ public GroupTO transform(final Group input) {\n         }, new ArrayList<GroupTO>());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_SEARCH + \"')\")\n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     @Override\n     public int searchCount(final SearchCond searchCondition, final String realm) {\n         return searchDAO.count(\n-                getEffectiveRealms(AuthContextUtils.getAuthorizations().get(StandardEntitlement.GROUP_SEARCH), realm),\n+                getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realm),\n                 searchCondition, AnyTypeKind.GROUP);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_SEARCH + \"')\")\n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     @Override\n     public List<GroupTO> search(final SearchCond searchCondition, final int page, final int size,\n             final List<OrderByClause> orderBy, final String realm, final boolean details) {\n \n         List<Group> matchingGroups = searchDAO.search(\n-                getEffectiveRealms(AuthContextUtils.getAuthorizations().get(StandardEntitlement.GROUP_SEARCH), realm),\n+                getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realm),\n                 searchCondition, page, size, orderBy, AnyTypeKind.GROUP);\n         return CollectionUtils.collect(matchingGroups, new Transformer<Group, GroupTO>() {\n "}]}