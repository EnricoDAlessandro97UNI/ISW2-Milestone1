{"sha":"ded1cf9dba23d9c09cbe67a957a95d190e6e7618","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRlZDFjZjlkYmEyM2Q5YzA5Y2JlNjdhOTU3YTk1ZDE5MGU2ZTc2MTg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-27T14:34:52Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-27T14:34:52Z"},"message":"Map.Entry in place of Pair\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247381 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"615101f9e08543dc00b022d0fddbf0fd55e9fb7d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/615101f9e08543dc00b022d0fddbf0fd55e9fb7d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ded1cf9dba23d9c09cbe67a957a95d190e6e7618","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ded1cf9dba23d9c09cbe67a957a95d190e6e7618","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ded1cf9dba23d9c09cbe67a957a95d190e6e7618","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ded1cf9dba23d9c09cbe67a957a95d190e6e7618/comments","author":null,"committer":null,"parents":[{"sha":"0fd3aa1c4428319f2ace50c68b051b96c4b9260f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0fd3aa1c4428319f2ace50c68b051b96c4b9260f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0fd3aa1c4428319f2ace50c68b051b96c4b9260f"}],"stats":{"total":24,"additions":13,"deletions":11},"files":[{"sha":"9fabfd0b0177bf6bb87f4cea7be47701a852dcb9","filename":"console/src/main/java/org/syncope/console/pages/StatusModalPage.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ded1cf9dba23d9c09cbe67a957a95d190e6e7618/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ded1cf9dba23d9c09cbe67a957a95d190e6e7618/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=ded1cf9dba23d9c09cbe67a957a95d190e6e7618","patch":"@@ -16,7 +16,7 @@\n  */\n package org.syncope.console.pages;\n \n-import com.sun.tools.javac.util.Pair;\n+import java.util.AbstractMap;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -207,11 +207,12 @@ private Map<String, STATUS> getRemoteStatuses(final UserTO userTO) {\n \n         for (String res : userTO.getResources()) {\n             ResourceTO resourceTO = resourceRestClient.read(res);\n-            Pair<IntMappingType, String> accountId = getAccountId(resourceTO);\n+            Map.Entry<IntMappingType, String> accountId = getAccountId(\n+                    resourceTO);\n \n             String objectId = null;\n \n-            switch (accountId != null ? accountId.fst : IntMappingType.SyncopeUserId) {\n+            switch (accountId != null ? accountId.getKey() : IntMappingType.SyncopeUserId) {\n                 case SyncopeUserId:\n                     objectId = String.valueOf(userTO.getId());\n                     break;\n@@ -221,25 +222,25 @@ private Map<String, STATUS> getRemoteStatuses(final UserTO userTO) {\n                 case UserSchema:\n                     AttributeTO attributeTO = null;\n                     attributeTO =\n-                            userTO.getAttributeMap().get(accountId.snd);\n+                            userTO.getAttributeMap().get(accountId.getValue());\n                     objectId =\n                             attributeTO != null\n                             && attributeTO.getValues() != null\n                             && !attributeTO.getValues().isEmpty()\n                             ? attributeTO.getValues().get(0) : null;\n                     break;\n                 case UserDerivedSchema:\n-                    attributeTO =\n-                            userTO.getDerivedAttributeMap().get(accountId.snd);\n+                    attributeTO = userTO.getDerivedAttributeMap().\n+                            get(accountId.getValue());\n                     objectId =\n                             attributeTO != null\n                             && attributeTO.getValues() != null\n                             && !attributeTO.getValues().isEmpty()\n                             ? attributeTO.getValues().get(0) : null;\n                     break;\n                 case UserVirtualSchema:\n-                    attributeTO =\n-                            userTO.getVirtualAttributeMap().get(accountId.snd);\n+                    attributeTO = userTO.getVirtualAttributeMap().\n+                            get(accountId.getValue());\n                     objectId =\n                             attributeTO != null\n                             && attributeTO.getValues() != null\n@@ -285,12 +286,13 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n                 ? Boolean.parseBoolean(status.getValues().get(0)) : null;\n     }\n \n-    private Pair<IntMappingType, String> getAccountId(final ResourceTO resourceTO) {\n-        Pair<IntMappingType, String> accountId = null;\n+    private Map.Entry<IntMappingType, String> getAccountId(\n+            final ResourceTO resourceTO) {\n+        Map.Entry<IntMappingType, String> accountId = null;\n \n         for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n             if (mapping.isAccountid()) {\n-                accountId = new Pair<IntMappingType, String>(\n+                accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(\n                         mapping.getIntMappingType(),\n                         mapping.getIntAttrName());\n             }"}]}