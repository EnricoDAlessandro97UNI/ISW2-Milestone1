{"sha":"a34ebea20cb5f9556e27cbb136adb638d75956de","node_id":"C_kwDOJfYA1toAKGEzNGViZWEyMGNiNWY5NTU2ZTI3Y2JiMTM2YWRiNjM4ZDc1OTU2ZGU","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-03-21T13:07:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-03-21T13:12:50Z"},"message":"[SYNCOPE-1669] Ensuring to create pull results for remediations (#328)","tree":{"sha":"039dd9a4aedc22d10ae89bf10a9c8b855c235545","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/039dd9a4aedc22d10ae89bf10a9c8b855c235545"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a34ebea20cb5f9556e27cbb136adb638d75956de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a34ebea20cb5f9556e27cbb136adb638d75956de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a34ebea20cb5f9556e27cbb136adb638d75956de","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a34ebea20cb5f9556e27cbb136adb638d75956de/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d452cbb4ee5cb44110708ff2440a0aba9c5bdc35","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d452cbb4ee5cb44110708ff2440a0aba9c5bdc35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d452cbb4ee5cb44110708ff2440a0aba9c5bdc35"}],"stats":{"total":58,"additions":38,"deletions":20},"files":[{"sha":"6d9f610cc1b9faedd195ac44d4fe661a0d2cf9b4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":31,"deletions":17,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a34ebea20cb5f9556e27cbb136adb638d75956de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a34ebea20cb5f9556e27cbb136adb638d75956de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=a34ebea20cb5f9556e27cbb136adb638d75956de","patch":"@@ -972,27 +972,27 @@ protected void createRemediationIfNeeded(\n         }\n     }\n \n-    protected Remediation createRemediation(\n+    protected void createRemediation(\n             final AnyType anyType,\n             final AnyCR anyCR,\n             final PullTask pullTask,\n             final ProvisioningReport result,\n             final SyncDelta delta) {\n \n-        return createRemediation(anyType, null, anyCR, null, pullTask, result, delta);\n+        createRemediation(anyType, null, anyCR, null, pullTask, result, delta);\n     }\n \n-    protected Remediation createRemediation(\n+    protected void createRemediation(\n             final AnyType anyType,\n             final AnyUR anyUR,\n             final PullTask pullTask,\n             final ProvisioningReport result,\n             final SyncDelta delta) {\n \n-        return createRemediation(anyType, null, null, anyUR, pullTask, result, delta);\n+        createRemediation(anyType, null, null, anyUR, pullTask, result, delta);\n     }\n \n-    protected Remediation createRemediation(\n+    protected void createRemediation(\n             final AnyType anyType,\n             final String anyKey,\n             final AnyCR anyCR,\n@@ -1001,22 +1001,36 @@ protected Remediation createRemediation(\n             final ProvisioningReport result,\n             final SyncDelta delta) {\n \n-        Remediation entity = entityFactory.newEntity(Remediation.class);\n+        Remediation remediation = entityFactory.newEntity(Remediation.class);\n \n-        entity.setAnyType(anyType);\n-        entity.setOperation(anyUR == null ? ResourceOperation.CREATE : ResourceOperation.UPDATE);\n+        remediation.setAnyType(anyType);\n+        remediation.setOperation(anyUR == null ? ResourceOperation.CREATE : ResourceOperation.UPDATE);\n         if (StringUtils.isNotBlank(anyKey)) {\n-            entity.setPayload(anyKey);\n+            remediation.setPayload(anyKey);\n         } else if (anyCR != null) {\n-            entity.setPayload(anyCR);\n+            remediation.setPayload(anyCR);\n         } else if (anyUR != null) {\n-            entity.setPayload(anyUR);\n+            remediation.setPayload(anyUR);\n         }\n-        entity.setError(result.getMessage());\n-        entity.setInstant(OffsetDateTime.now());\n-        entity.setRemoteName(delta.getObject().getName().getNameValue());\n-        entity.setPullTask(pullTask);\n-\n-        return remediationDAO.save(entity);\n+        remediation.setError(result.getMessage());\n+        remediation.setInstant(OffsetDateTime.now());\n+        remediation.setRemoteName(delta.getObject().getName().getNameValue());\n+        remediation.setPullTask(pullTask);\n+\n+        remediation = remediationDAO.save(remediation);\n+\n+        ProvisioningReport remediationResult = new ProvisioningReport();\n+        remediationResult.setOperation(remediation.getOperation());\n+        remediationResult.setAnyType(anyType.getKey());\n+        remediationResult.setStatus(ProvisioningReport.Status.FAILURE);\n+        remediationResult.setMessage(remediation.getError());\n+        if (StringUtils.isNotBlank(anyKey)) {\n+            remediationResult.setKey(anyKey);\n+        } else if (anyUR != null) {\n+            remediationResult.setKey(anyUR.getKey());\n+        }\n+        remediationResult.setUidValue(delta.getUid().getUidValue());\n+        remediationResult.setName(remediation.getRemoteName());\n+        profile.getResults().add(remediationResult);\n     }\n }"},{"sha":"19026a2e256d77867c12c79fe8a7c760ce7d4ed4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/InboundMatcher.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a34ebea20cb5f9556e27cbb136adb638d75956de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a34ebea20cb5f9556e27cbb136adb638d75956de/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FInboundMatcher.java?ref=a34ebea20cb5f9556e27cbb136adb638d75956de","patch":"@@ -331,9 +331,13 @@ protected List<PullMatch> matchByCorrelationRule(\n \n         List<PullMatch> result = new ArrayList<>();\n \n-        result.addAll(anySearchDAO.search(rule.getSearchCond(syncDelta, provision), type).stream().\n-                map(any -> rule.matching(any, syncDelta, provision)).\n-                collect(Collectors.toList()));\n+        try {\n+            result.addAll(anySearchDAO.search(rule.getSearchCond(syncDelta, provision), type).stream().\n+                    map(any -> rule.matching(any, syncDelta, provision)).\n+                    collect(Collectors.toList()));\n+        } catch (Throwable t) {\n+            LOG.error(\"While searching via {}\", rule.getClass().getName(), t);\n+        }\n \n         if (result.isEmpty()) {\n             rule.unmatching(syncDelta, provision).ifPresent(result::add);"}]}