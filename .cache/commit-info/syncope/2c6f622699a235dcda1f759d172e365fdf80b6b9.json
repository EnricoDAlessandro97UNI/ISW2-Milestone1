{"sha":"2c6f622699a235dcda1f759d172e365fdf80b6b9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjNmY2MjI2OTlhMjM1ZGNkYTFmNzU5ZDE3MmUzNjVmZGY4MGI2Yjk=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-26T15:53:10Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-26T15:53:10Z"},"message":"[SYNCOPE-529] merge from branch 1_2_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1627815 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f1ac3f1113709f612b5aa0847ce4921c68c6af8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f1ac3f1113709f612b5aa0847ce4921c68c6af8e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2c6f622699a235dcda1f759d172e365fdf80b6b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c6f622699a235dcda1f759d172e365fdf80b6b9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2c6f622699a235dcda1f759d172e365fdf80b6b9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c6f622699a235dcda1f759d172e365fdf80b6b9/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8cbafc7c0aebf5bf89697ab89c0828f589af3d49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cbafc7c0aebf5bf89697ab89c0828f589af3d49","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8cbafc7c0aebf5bf89697ab89c0828f589af3d49"},{"sha":"d731d4b8f5aa7c79aae7921c60c16e42e3d9ed0d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d731d4b8f5aa7c79aae7921c60c16e42e3d9ed0d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d731d4b8f5aa7c79aae7921c60c16e42e3d9ed0d"}],"stats":{"total":358,"additions":332,"deletions":26},"files":[{"sha":"a09c58194db270b8d912560393257d8cc0585298","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ArchetypeProcess.java","status":"modified","additions":48,"deletions":5,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -21,14 +21,17 @@\n import org.apache.syncope.installer.utilities.FileSystemUtils;\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n+import java.io.IOException;\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.transform.TransformerException;\n import org.apache.syncope.installer.files.Pom;\n import org.apache.syncope.installer.utilities.InstallLog;\n import org.apache.syncope.installer.utilities.MavenUtils;\n+import org.xml.sax.SAXException;\n \n public class ArchetypeProcess {\n \n     public void run(final AbstractUIProcessHandler handler, final String[] args) {\n-\n         final String installPath = args[0];\n         final String mavenDir = args[1];\n         final String groupId = args[2];\n@@ -40,21 +43,61 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         final String bundlesDirectory = args[8];\n         final String syncopeVersion = args[9];\n         final String syncopeAdminPassword = args[10];\n+        final boolean isProxyEnabled = Boolean.valueOf(args[11]);\n+        final String proxyHost = args[12];\n+        final String proxyPort = args[13];\n+        final String proxyUser = args[14];\n+        final String proxyPwd = args[15];\n+        final boolean mavenProxyAutoconf = Boolean.valueOf(args[16]);\n \n         final FileSystemUtils fileSystemUtils = new FileSystemUtils(handler);\n         fileSystemUtils.createDirectory(installPath);\n         InstallLog.initialize(installPath, handler);\n-\n         final MavenUtils mavenUtils = new MavenUtils(mavenDir, handler);\n+        File customMavenProxySettings = null;\n+        try {\n+            if (isProxyEnabled && mavenProxyAutoconf) {\n+                customMavenProxySettings = MavenUtils.createSettingsWithProxy(installPath, proxyHost, proxyPort,\n+                        proxyUser, proxyPwd);\n+            }\n+        } catch (IOException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"I/O error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (ParserConfigurationException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"Parser configuration error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (TransformerException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"Transformer error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (SAXException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"XML parsing error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        }\n         mavenUtils.archetypeGenerate(\n-                syncopeVersion, groupId, artifactId, secretKey, anonymousKey, installPath);\n+                syncopeVersion, groupId, artifactId, secretKey, anonymousKey, installPath, customMavenProxySettings);\n \n         fileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + Pom.PATH),\n                 String.format(Pom.FILE, syncopeVersion, syncopeVersion, groupId, artifactId));\n         fileSystemUtils.createDirectory(confDirectory);\n         fileSystemUtils.createDirectory(logsDirectory);\n         fileSystemUtils.createDirectory(bundlesDirectory);\n-        mavenUtils.createPackage(installPath + \"/\" + artifactId, confDirectory, logsDirectory, bundlesDirectory);\n+        mavenUtils.createPackage(installPath + \"/\" + artifactId, confDirectory, logsDirectory, bundlesDirectory,\n+                customMavenProxySettings);\n     }\n-\n }"},{"sha":"606e70481b46b9343208a1920f0c70c275f80d54","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ContainerProcess.java","status":"modified","additions":62,"deletions":1,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -21,6 +21,9 @@\n import org.apache.syncope.installer.utilities.FileSystemUtils;\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n+import java.io.IOException;\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.transform.TransformerException;\n import org.apache.syncope.installer.containers.Glassfish;\n import org.apache.syncope.installer.containers.Tomcat;\n import org.apache.syncope.installer.containers.jboss.JBoss;\n@@ -31,6 +34,7 @@\n import org.apache.syncope.installer.files.CoreWebXml;\n import org.apache.syncope.installer.utilities.InstallLog;\n import org.apache.syncope.installer.utilities.MavenUtils;\n+import org.xml.sax.SAXException;\n \n public class ContainerProcess {\n \n@@ -72,6 +76,18 @@ public class ContainerProcess {\n \n     private String jbossAdminPassword;\n \n+    private boolean isProxyEnabled;\n+\n+    private String proxyHost;\n+\n+    private String proxyPort;\n+\n+    private String proxyUser;\n+\n+    private String proxyPwd;\n+\n+    private boolean mavenProxyAutoconf;\n+\n     public void run(final AbstractUIProcessHandler handler, final String[] args) {\n \n         installPath = args[0];\n@@ -94,6 +110,12 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         jbossJdbcModuleName = args[17];\n         jbossAdminUsername = args[18];\n         jbossAdminPassword = args[19];\n+        isProxyEnabled = Boolean.valueOf(args[20]);\n+        proxyHost = args[21];\n+        proxyPort = args[22];\n+        proxyUser = args[23];\n+        proxyPwd = args[24];\n+        mavenProxyAutoconf = Boolean.valueOf(args[25]);\n \n         final FileSystemUtils fileSystemUtils = new FileSystemUtils(handler);\n \n@@ -121,7 +143,46 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         }\n \n         final MavenUtils mavenUtils = new MavenUtils(mavenDir, handler);\n-        mavenUtils.createPackage(installPath + \"/\" + artifactId, confDirectory, logsDirectory, bundlesDirectory);\n+        File customMavenProxySettings = null;\n+        try {\n+            if (isProxyEnabled && mavenProxyAutoconf) {\n+                customMavenProxySettings = MavenUtils.createSettingsWithProxy(installPath, proxyHost, proxyPort,\n+                        proxyUser, proxyPwd);\n+            }\n+        } catch (IOException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"I/O error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (ParserConfigurationException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"Parser configuration error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (TransformerException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"Transformer error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        } catch (SAXException ex) {\n+            final StringBuilder messageError = new StringBuilder(\n+                    \"XML parsing error during creation of Maven custom settings.xml\");\n+            final String emittedError = messageError.toString();\n+            handler.emitError(emittedError, emittedError);\n+            InstallLog.getInstance().error(messageError.append(ex.getMessage() == null ? \"\" : ex.getMessage()).\n+                    toString());\n+        }\n+        mavenUtils.createPackage(installPath + \"/\" + artifactId, confDirectory, logsDirectory, bundlesDirectory,\n+                customMavenProxySettings);\n+        if (isProxyEnabled && mavenProxyAutoconf) {\n+            FileSystemUtils.delete(customMavenProxySettings);\n+        }\n \n         switch (selectedContainer) {\n             case TOMCAT:"},{"sha":"1d97fcf32a1eff2c32c4b3c5dedaa2f87c4ed5a5","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/DriverLoader.java","status":"modified","additions":30,"deletions":8,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -18,19 +18,21 @@\n  */\n package org.apache.syncope.installer.utilities;\n \n+import java.net.Authenticator;\n import java.net.MalformedURLException;\n+import java.net.PasswordAuthentication;\n import org.apache.syncope.installer.enums.DBs;\n \n import java.net.URL;\n import java.net.URLClassLoader;\n import java.sql.Driver;\n \n-public class DriverLoader extends URLClassLoader {\n+public final class DriverLoader extends URLClassLoader {\n \n     private final static String POSTGRES_JAR = \"http://jdbc.postgresql.org/download/postgresql-9.3-1101.jdbc41.jar\";\n \n-    private final static String MYSQL_JAR\n-            = \"http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar\";\n+    private final static String MYSQL_JAR =\n+            \"http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar\";\n \n     private static final String POSTGRES_CLASS_DRIVER = \"org.postgresql.Driver\";\n \n@@ -43,14 +45,17 @@ private DriverLoader(final URL[] urls) {\n \n     private static DriverLoader driverLoader;\n \n-    public static Driver load(final DBs selectedDB) {\n+    public static Driver load(final DBs selectedDB, final boolean isProxyEnabled, final String proxyHost,\n+            final String proxyPort, final String proxyUser, final String proxyPwd) {\n         Driver driver = null;\n         switch (selectedDB) {\n             case POSTGRES:\n-                driver = downloadDriver(POSTGRES_JAR, POSTGRES_CLASS_DRIVER);\n+                driver = downloadDriver(POSTGRES_JAR, POSTGRES_CLASS_DRIVER, isProxyEnabled, proxyHost, proxyPort,\n+                        proxyUser, proxyPwd);\n                 break;\n             case MYSQL:\n-                driver = downloadDriver(MYSQL_JAR, MYSQL_CLASS_DRIVER);\n+                driver = downloadDriver(MYSQL_JAR, MYSQL_CLASS_DRIVER, isProxyEnabled, proxyHost, proxyPort,\n+                        proxyUser, proxyPwd);\n                 break;\n             case SQLSERVER:\n                 break;\n@@ -62,10 +67,27 @@ public static Driver load(final DBs selectedDB) {\n         return driver;\n     }\n \n-    private static Driver downloadDriver(final String driverUrl, final String driverClassName) {\n+    private static Driver downloadDriver(final String driverUrl, final String driverClassName,\n+            final boolean isProxyEnabled, final String proxyHost, final String proxyPort, final String proxyUser,\n+            final String proxyPwd) {\n         Driver driver = null;\n         try {\n-            final URL[] url = {new URL(driverUrl)};\n+            if (isProxyEnabled) {\n+                System.setProperty(\"http.proxyHost\", proxyHost);\n+                System.setProperty(\"http.proxyPort\", proxyPort);\n+                if (proxyUser != null && !proxyUser.isEmpty() && proxyPwd != null) {\n+                    Authenticator.setDefault(new Authenticator() {\n+\n+                        @Override\n+                        public PasswordAuthentication getPasswordAuthentication() {\n+                            return new PasswordAuthentication(proxyUser, proxyPwd.toCharArray());\n+                        }\n+                    });\n+                    System.setProperty(\"http.proxyUser\", proxyUser);\n+                    System.setProperty(\"http.proxyPassword\", proxyPwd);\n+                }\n+            }\n+            final URL[] url = { new URL(driverUrl) };\n             driverLoader = new DriverLoader(url);\n             driver = (Driver) driverLoader.loadClass(driverClassName).newInstance();\n         } catch (ClassNotFoundException e) {"},{"sha":"aea1c95e134e431f973011d7c2ea9280b7ad0874","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -26,7 +26,18 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n import java.io.PrintWriter;\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.IOUtils;\n+import org.w3c.dom.Document;\n \n public class FileSystemUtils {\n \n@@ -100,4 +111,24 @@ public void appendToFile(final File file, final String content) {\n         }\n     }\n \n+    public static void writeXML(final Document doc, final OutputStream out) throws IOException,\n+            TransformerException {\n+        try {\n+            final TransformerFactory factory = TransformerFactory.newInstance();\n+            final Transformer transformer = factory.newTransformer();\n+            transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"no\");\n+            transformer.setOutputProperty(OutputKeys.METHOD, \"xml\");\n+            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n+            transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n+            transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n+            transformer.transform(new DOMSource(doc),\n+                    new StreamResult(new OutputStreamWriter(out, \"UTF-8\")));\n+        } finally {\n+            IOUtils.closeQuietly(out);\n+        }\n+    }\n+\n+    public static void delete(final File file) {\n+        FileUtils.deleteQuietly(file);\n+    }\n }"},{"sha":"6cc3a35db1efd1847f3cdab2af6f08e091421920","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java","status":"modified","additions":73,"deletions":5,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -20,16 +20,26 @@\n \n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.transform.TransformerException;\n+import org.apache.commons.io.FileUtils;\n import org.apache.maven.shared.invoker.DefaultInvocationRequest;\n import org.apache.maven.shared.invoker.DefaultInvoker;\n import org.apache.maven.shared.invoker.InvocationRequest;\n import org.apache.maven.shared.invoker.InvocationResult;\n import org.apache.maven.shared.invoker.Invoker;\n import org.apache.maven.shared.invoker.MavenInvocationException;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.SAXException;\n \n public class MavenUtils {\n \n@@ -45,14 +55,18 @@ public MavenUtils(final String mavenHomeDirectory, final AbstractUIProcessHandle\n     }\n \n     public void archetypeGenerate(final String archetypeVersion, final String groupId,\n-            final String artifactId, final String secretKey, final String anonymousKey, final String installPath) {\n+            final String artifactId, final String secretKey, final String anonymousKey, final String installPath,\n+            final File customSettingsFile) {\n \n         final InvocationRequest request = new DefaultInvocationRequest();\n         request.setGoals(Collections.singletonList(\"archetype:generate\"));\n         request.setInteractive(false);\n-        final Properties properties\n-                = archetypeProperties(archetypeVersion, groupId, artifactId, secretKey, anonymousKey);\n+        final Properties properties =\n+                archetypeProperties(archetypeVersion, groupId, artifactId, secretKey, anonymousKey);\n         request.setProperties(properties);\n+        if (customSettingsFile != null && FileUtils.sizeOf(customSettingsFile) > 0) {\n+            request.setUserSettingsFile(customSettingsFile);\n+        }\n         logToHandler(request.getGoals(), properties);\n         logToFile(request.getGoals(), properties);\n         invoke(request, installPath);\n@@ -73,11 +87,13 @@ private Properties archetypeProperties(final String archetypeVersion, final Stri\n     }\n \n     public void createPackage(final String path, final String confDirectory,\n-            final String logDirectory, final String bundlesDirectory) {\n-\n+            final String logDirectory, final String bundlesDirectory, final File customSettingsFile) {\n         final InvocationRequest request = new DefaultInvocationRequest();\n         final Properties properties = packageProperties(confDirectory, logDirectory, bundlesDirectory);\n         request.setProperties(properties);\n+        if (customSettingsFile != null && FileUtils.sizeOf(customSettingsFile) > 0) {\n+            request.setUserSettingsFile(customSettingsFile);\n+        }\n         final List<String> mavenGoals = new ArrayList<String>();\n         mavenGoals.add(\"clean\");\n         mavenGoals.add(\"package\");\n@@ -135,4 +151,56 @@ private InvocationResult invoke(final InvocationRequest request, final String pa\n         return result;\n     }\n \n+    public static File createSettingsWithProxy(final String path, final String proxyHost, final String proxyPort,\n+            final String proxyUser, final String proxyPassword) throws IOException, ParserConfigurationException,\n+            TransformerException, SAXException {\n+        final File settingsXML = new File(System.getProperty(MAVEN_HOME_PROPERTY) + (System.getProperty(\n+                MAVEN_HOME_PROPERTY).endsWith(\"/\") ? \"conf/settings.xml\" : \"/conf/settings.xml\"));\n+        final File tempSettingsXML = new File(path + (path.endsWith(\"/\") ? \"settings_temp.xml\" : \"/settings_temp.xml\"));\n+        if (settingsXML.canRead() && !tempSettingsXML.exists()) {\n+            tempSettingsXML.createNewFile();\n+\n+            final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+            final DocumentBuilder builder = dbf.newDocumentBuilder();\n+            // parse settings.xml\n+            final Document settings = builder.parse(settingsXML);\n+\n+            final Element proxies = (Element) settings.getDocumentElement().getElementsByTagName(\"proxies\").item(0);\n+\n+            final Element proxy = settings.createElement(\"proxy\");\n+\n+            final Element id = settings.createElement(\"id\");\n+            final Element active = settings.createElement(\"active\");\n+            final Element protocol = settings.createElement(\"protocol\");\n+            final Element host = settings.createElement(\"host\");\n+            final Element port = settings.createElement(\"port\");\n+            final Element nonProxyHosts = settings.createElement(\"nonProxyHosts\");\n+            id.appendChild(settings.createTextNode(\"optional\"));\n+            active.appendChild(settings.createTextNode(\"true\"));\n+            protocol.appendChild(settings.createTextNode(\"http\"));\n+            host.appendChild(settings.createTextNode(proxyHost));\n+            port.appendChild(settings.createTextNode(proxyPort));\n+            proxy.appendChild(id);\n+            proxy.appendChild(active);\n+            proxy.appendChild(protocol);\n+            // create username and password tags only if required\n+            if (proxyUser != null && !proxyUser.isEmpty() && proxyPassword != null) {\n+                final Element username = settings.createElement(\"username\");\n+                final Element password = settings.createElement(\"password\");\n+                username.appendChild(settings.createTextNode(proxyUser));\n+                password.appendChild(settings.createTextNode(proxyPassword));\n+                proxy.appendChild(username);\n+                proxy.appendChild(password);\n+            }\n+            proxy.appendChild(host);\n+            proxy.appendChild(port);\n+            proxy.appendChild(nonProxyHosts);\n+\n+            proxies.appendChild(proxy);\n+\n+            FileSystemUtils.writeXML(settings, new FileOutputStream(tempSettingsXML));\n+\n+        }\n+        return tempSettingsXML;\n+    }\n }"},{"sha":"f76273dcc7ce7d15983ff3e1a33e7c82279e553a","filename":"installer/src/main/java/org/apache/syncope/installer/validators/PersistenceValidator.java","status":"modified","additions":24,"deletions":5,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -20,7 +20,6 @@\n \n import com.izforge.izpack.api.data.InstallData;\n import java.sql.Driver;\n-import java.sql.SQLException;\n import java.util.Properties;\n import org.apache.syncope.installer.enums.DBs;\n import org.apache.syncope.installer.utilities.DriverLoader;\n@@ -37,6 +36,16 @@ public class PersistenceValidator extends AbstractValidator {\n \n     private StringBuilder warning;\n \n+    private boolean isProxyEnabled;\n+\n+    private String proxyHost;\n+\n+    private String proxyPort;\n+\n+    private String proxyUser;\n+\n+    private String proxyPwd;\n+\n     @Override\n     public Status validateData(final InstallData installData) {\n \n@@ -46,6 +55,11 @@ public Status validateData(final InstallData installData) {\n         persistenceUrl = installData.getVariable(\"persistence.url\");\n         persistenceDbuser = installData.getVariable(\"persistence.dbuser\");\n         persistenceDbPassword = installData.getVariable(\"persistence.dbpassword\");\n+        isProxyEnabled = Boolean.valueOf(installData.getVariable(\"mvn.proxy\"));\n+        proxyHost = installData.getVariable(\"mvn.proxy.host\");\n+        proxyPort = installData.getVariable(\"mvn.proxy.port\");\n+        proxyUser = installData.getVariable(\"mvn.proxy.user\");\n+        proxyPwd = installData.getVariable(\"mvn.proxy.pwd\");\n \n         boolean verified = true;\n         error = new StringBuilder(\"Required fields:\\n\");\n@@ -84,16 +98,21 @@ public Status validateData(final InstallData installData) {\n     }\n \n     private Status checkConnection(final DBs selectedDb) {\n-\n+        Driver driver = null;\n         try {\n-            final Driver driver = DriverLoader.load(selectedDb);\n+            driver = DriverLoader.load(selectedDb, isProxyEnabled, proxyHost, proxyPort, proxyUser,\n+                    proxyPwd);\n             final Properties props = new Properties();\n             props.put(\"user\", persistenceDbuser);\n             props.put(\"password\", persistenceDbPassword);\n             driver.connect(persistenceUrl, props);\n             return Status.OK;\n-        } catch (SQLException ex) {\n-            error = new StringBuilder(\"Db connection error: please check your insert data\");\n+        } catch (Exception ex) {\n+            error =\n+                    new StringBuilder(\n+                            \"Error during connection to database: please check inserted data.\");\n+            error.append(driver == null ? new StringBuilder(\" Unable to get \").append(selectedDb.getName()).append(\n+                    \" driver!\").toString() : \"\");\n             return Status.ERROR;\n         }\n     }"},{"sha":"a719da6880574f454165389184fa1cdd428d68a1","filename":"installer/src/main/resources/izpack/ProcessPanel.Spec.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -32,6 +32,12 @@ under the License.\n       <arg>$mvn.bundle.directory</arg>\n       <arg>$mvn.syncope.version</arg>\n       <arg>$mvn.syncope.admin.password</arg>\n+      <arg>$mvn.proxy</arg><!-- 11 -->\n+      <arg>$mvn.proxy.host</arg><!-- 12 -->\n+      <arg>$mvn.proxy.port</arg><!-- 13 -->\n+      <arg>$mvn.proxy.user</arg><!-- 14 -->\n+      <arg>$mvn.proxy.pwd</arg><!-- 15 -->\n+      <arg>$mvn.proxy.autoconf</arg><!-- 16 -->\n     </executeclass>\n   </job>\n   <job name=\"Persistence configuration...\">\n@@ -68,6 +74,12 @@ under the License.\n       <arg>$jboss.container.jdbc.module</arg><!-- 17 -->\n       <arg>$jboss.container.user</arg><!-- 18 -->\n       <arg>$jboss.container.pwd</arg><!-- 19 -->\n+      <arg>$mvn.proxy</arg><!-- 20 -->\n+      <arg>$mvn.proxy.host</arg><!-- 21 -->\n+      <arg>$mvn.proxy.port</arg><!-- 22 -->\n+      <arg>$mvn.proxy.user</arg><!-- 23 -->\n+      <arg>$mvn.proxy.pwd</arg><!-- 24 -->\n+      <arg>$mvn.proxy.autoconf</arg><!-- 25 -->\n     </executeclass>\n   </job>\n   <onFail previous=\"true\" next=\"false\" />"},{"sha":"8be4a4004e5848d6c1a2565e547f1687d67fcda7","filename":"installer/src/main/resources/izpack/install.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -65,6 +65,12 @@ under the License.\n   </dynamicvariables>\n   \n   <conditions>\n+    \n+    <condition type=\"variable\" id=\"mvn.choice.proxy\">\n+      <name>mvn.proxy</name>\n+      <value>true</value>\n+    </condition>\n+    \n     <condition type=\"variable\" id=\"postgres.choice\">\n       <name>install.type.selection</name>\n       <value>postgres</value>"},{"sha":"32655ba0fad9f1f126e7812ced25966569a6b362","filename":"installer/src/main/resources/izpack/userInputLang.xml_eng","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -17,7 +17,7 @@ KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n -->\n-<langpack>+\n+<langpack>\n   <str id=\"mvn.directory.id\" txt=\"Maven home directory:\"/>\n   <str id=\"archetype.mvn.groupid\" txt=\"GroupId:\"/>\n   <str id=\"archetype.mvn.artifactid\" txt=\"ArtifactId:\"/>\n@@ -28,6 +28,13 @@ under the License.\n   <str id=\"archetype.mvn.bundle.directory\" txt=\"Bundle directory name:\"/>\n   <str id=\"mvn.syncope.version.id\" txt=\"Syncope Version:\"/>\n   <str id=\"mvn.syncope.admin.password.id\" txt=\"Admin Password:\"/>\n+  <str id=\"mvn.proxy.id\" txt=\"Use Proxy Server:\"/>\n+  <str id=\"mvn.proxy.autoconf.id\" txt=\"Automatically configure Maven proxy\"/>\n+  <str id=\"mvn.proxy.autoconf.desc.id\" txt=\"Check this field if Maven is not yet configured to use proxy:\"/>\n+  <str id=\"mvn.proxy.host.id\" txt=\"Proxy Host:\"/>\n+  <str id=\"mvn.proxy.port.id\" txt=\"Proxy Port:\"/>\n+  <str id=\"mvn.proxy.user.id\" txt=\"Proxy User (if required):\"/>\n+  <str id=\"mvn.proxy.pwd.id\" txt=\"Proxy Password (if required):\"/>\n   \n   <str id=\"persistence.jdbc.url\" txt=\"Database JDBC url:\"/>\n   <str id=\"persistence.db.user\" txt=\"Username:\"/>"},{"sha":"f22295c2b065fb54162b6fe603761e6a8db7527d","filename":"installer/src/main/resources/izpack/userInputLang.xml_ita","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -28,6 +28,13 @@ under the License.\n   <str id=\"archetype.mvn.bundle.directory\" txt=\"Bundle directory name:\"/>\n   <str id=\"mvn.syncope.version.id\" txt=\"Syncope Version:\"/>\n   <str id=\"mvn.syncope.admin.password.id\" txt=\"Admin Password:\"/>\n+  <str id=\"mvn.proxy.id\" txt=\"Usa un Server Proxy:\"/>\n+  <str id=\"mvn.proxy.autoconf.id\" txt=\"Configura automaticamente il proxy per Maven\"/>\n+  <str id=\"mvn.proxy.autoconf.desc.id\" txt=\"Seleziona questo campo se Maven non è configurato per usare un proxy:\"/>\n+  <str id=\"mvn.proxy.host.id\" txt=\"Proxy Host:\"/>\n+  <str id=\"mvn.proxy.port.id\" txt=\"Proxy Port:\"/>\n+  <str id=\"mvn.proxy.user.id\" txt=\"Proxy User (se richiesto):\"/>\n+  <str id=\"mvn.proxy.pwd.id\" txt=\"Proxy Password (se richiesta):\"/>\n   \n   <str id=\"persistence.jdbc.url\" txt=\"Database JDBC url:\"/>\n   <str id=\"persistence.db.user\" txt=\"Username:\"/>"},{"sha":"fa4c00de71deba9556ace2d753a05660f5d62fb0","filename":"installer/src/main/resources/izpack/userInputSpec.xml","status":"modified","additions":31,"deletions":1,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c6f622699a235dcda1f759d172e365fdf80b6b9/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml?ref=2c6f622699a235dcda1f759d172e365fdf80b6b9","patch":"@@ -61,8 +61,38 @@ under the License.\n     </field>\n     <!--    <field type=\"space\"/>\n     <field type=\"password\" variable=\"mvn.syncope.admin.password\">\n-      <spec id=\"mvn.syncope.admin.password.id\" size=\"20\" set=\"password\"/>\n+      <spec>\n+        <pwd id=\"mvn.syncope.admin.password.id\" size=\"20\" set=\"password\"/>\n+      </spec>\n     </field>-->\n+    <field type=\"space\"/>\n+    <field type=\"divider\" align=\"top\"/>\n+    <field type=\"check\" variable=\"mvn.proxy\">\n+      <spec id=\"mvn.proxy.id\" true=\"true\" false=\"false\" set=\"false\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"check\" variable=\"mvn.proxy.autoconf\" conditionid=\"mvn.choice.proxy\">\n+      <description id=\"mvn.proxy.autoconf.desc.id\"/>\n+      <spec id=\"mvn.proxy.autoconf.id\" true=\"true\" false=\"false\" set=\"false\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"text\" variable=\"mvn.proxy.host\" conditionid=\"mvn.choice.proxy\">\n+      <spec id=\"mvn.proxy.host.id\" size=\"20\" set=\"localhost\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"text\" variable=\"mvn.proxy.port\" conditionid=\"mvn.choice.proxy\">\n+      <spec id=\"mvn.proxy.port.id\" size=\"5\" set=\"3128\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"text\" variable=\"mvn.proxy.user\" conditionid=\"mvn.choice.proxy\">\n+      <spec id=\"mvn.proxy.user.id\" size=\"20\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"password\" variable=\"mvn.proxy.pwd\" conditionid=\"mvn.choice.proxy\">\n+      <spec>\n+        <pwd id=\"mvn.proxy.pwd.id\" size=\"20\"/>\n+      </spec>\n+    </field>\n   </panel>\n   \n   <panel id=\"persistence\" order=\"2\" border=\"false\">"}]}