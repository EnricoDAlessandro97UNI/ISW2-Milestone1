{"sha":"c1b1b74563740969951dcb9fa89cff2143b6f634","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMxYjFiNzQ1NjM3NDA5Njk5NTFkY2I5ZmE4OWNmZjIxNDNiNmY2MzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-30T12:43:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-30T12:43:56Z"},"message":"Upgrading CXF","tree":{"sha":"691ad0ce7fafc320b2d5df8d2094cec25c1a7080","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/691ad0ce7fafc320b2d5df8d2094cec25c1a7080"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c1b1b74563740969951dcb9fa89cff2143b6f634","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1b1b74563740969951dcb9fa89cff2143b6f634","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1b1b74563740969951dcb9fa89cff2143b6f634","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1b1b74563740969951dcb9fa89cff2143b6f634/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"96569beea8cefed71f3d649c44d93021040f77a9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96569beea8cefed71f3d649c44d93021040f77a9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96569beea8cefed71f3d649c44d93021040f77a9"}],"stats":{"total":115,"additions":4,"deletions":111},"files":[{"sha":"267652176c058998f2c2049dc20501063e3339ef","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":3,"deletions":110,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1b1b74563740969951dcb9fa89cff2143b6f634/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1b1b74563740969951dcb9fa89cff2143b6f634/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=c1b1b74563740969951dcb9fa89cff2143b6f634","patch":"@@ -18,11 +18,8 @@\n  */\n package org.apache.syncope.core.rest.cxf;\n \n-import io.swagger.v3.jaxrs2.Reader;\n import io.swagger.v3.oas.integration.api.OpenAPIConfiguration;\n-import io.swagger.v3.oas.models.OpenAPI;\n import io.swagger.v3.oas.models.Operation;\n-import io.swagger.v3.oas.models.PathItem;\n import io.swagger.v3.oas.models.headers.Header;\n import io.swagger.v3.oas.models.media.Content;\n import io.swagger.v3.oas.models.media.MediaType;\n@@ -32,19 +29,15 @@\n import io.swagger.v3.oas.models.responses.ApiResponse;\n import io.swagger.v3.oas.models.responses.ApiResponses;\n import io.swagger.v3.oas.models.servers.Server;\n-import io.swagger.v3.oas.models.tags.Tag;\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.ext.MessageContext;\n-import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n import org.apache.cxf.jaxrs.model.OperationResourceInfo;\n import org.apache.cxf.jaxrs.model.doc.JavaDocProvider;\n import org.apache.cxf.jaxrs.openapi.OpenApiCustomizer;\n@@ -57,42 +50,20 @@\n \n public class SyncopeOpenApiCustomizer extends OpenApiCustomizer {\n \n-    // remove the line below with CXF 3.2.7\n     private JavaDocProvider javadocProvider;\n \n-    // remove the line below with CXF 3.2.7\n-    private boolean replaceTags;\n-\n-    // remove the line below with CXF 3.2.7\n-    private List<ClassResourceInfo> cris;\n-\n     private List<String> domains;\n \n     public SyncopeOpenApiCustomizer() {\n         super();\n \n         URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n         if (javaDocURLs != null) {\n-            // remove the line below with CXF 3.2.7\n             this.javadocProvider = new JavaDocProvider(javaDocURLs);\n-            super.setJavaDocURLs(javaDocURLs);\n+            super.setJavadocProvider(javadocProvider);\n         }\n     }\n \n-    @Override\n-    public void setReplaceTags(final boolean replaceTags) {\n-        // remove this method with CXF 3.2.7\n-        this.replaceTags = replaceTags;\n-        super.setReplaceTags(replaceTags);\n-    }\n-\n-    @Override\n-    public void setClassResourceInfos(final List<ClassResourceInfo> classResourceInfos) {\n-        // remove this method with CXF 3.2.7\n-        this.cris = classResourceInfos;\n-        super.setClassResourceInfos(classResourceInfos);\n-    }\n-\n     @Override\n     public OpenAPIConfiguration customize(final OpenAPIConfiguration configuration) {\n         super.customize(configuration);\n@@ -106,75 +77,6 @@ public OpenAPIConfiguration customize(final OpenAPIConfiguration configuration)\n         return configuration;\n     }\n \n-    @Override\n-    public void customize(final OpenAPI oas) {\n-        // remove this method with CXF 3.2.7\n-        if (replaceTags || javadocProvider != null) {\n-            Map<String, ClassResourceInfo> operations = new HashMap<>();\n-            Map<Pair<String, String>, OperationResourceInfo> methods = new HashMap<>();\n-            cris.forEach(cri -> {\n-                cri.getMethodDispatcher().getOperationResourceInfos().forEach(ori -> {\n-                    String normalizedPath = getNormalizedPath(\n-                            cri.getURITemplate().getValue(), ori.getURITemplate().getValue());\n-\n-                    operations.put(normalizedPath, cri);\n-                    methods.put(Pair.of(ori.getHttpMethod(), normalizedPath), ori);\n-                });\n-            });\n-\n-            List<Tag> tags = new ArrayList<>();\n-            oas.getPaths().forEach((pathKey, pathItem) -> {\n-                Tag tag = null;\n-                if (replaceTags && operations.containsKey(pathKey)) {\n-                    ClassResourceInfo cri = operations.get(pathKey);\n-\n-                    tag = new Tag();\n-                    tag.setName(cri.getURITemplate().getValue().replaceAll(\"/\", \"_\"));\n-                    if (javadocProvider != null) {\n-                        tag.setDescription(javadocProvider.getClassDoc(cri));\n-                    }\n-\n-                    if (!tags.contains(tag)) {\n-                        tags.add(tag);\n-                    }\n-                }\n-\n-                for (Map.Entry<PathItem.HttpMethod, Operation> subentry : pathItem.readOperationsMap().entrySet()) {\n-                    if (replaceTags && tag != null) {\n-                        subentry.getValue().setTags(Collections.singletonList(tag.getName()));\n-                    }\n-\n-                    Pair<String, String> key = Pair.of(subentry.getKey().name(), pathKey);\n-                    if (methods.containsKey(key) && javadocProvider != null) {\n-                        OperationResourceInfo ori = methods.get(key);\n-\n-                        if (StringUtils.isBlank(subentry.getValue().getSummary())) {\n-                            subentry.getValue().setSummary(javadocProvider.getMethodDoc(ori));\n-                        }\n-                        if (subentry.getValue().getParameters() == null) {\n-                            List<Parameter> parameters = new ArrayList<>();\n-                            addParameters(parameters);\n-                            subentry.getValue().setParameters(parameters);\n-                        } else {\n-                            for (int i = 0; i < subentry.getValue().getParameters().size(); i++) {\n-                                if (StringUtils.isBlank(subentry.getValue().getParameters().get(i).getDescription())) {\n-                                    subentry.getValue().getParameters().get(i).\n-                                            setDescription(javadocProvider.getMethodParameterDoc(ori, i));\n-                                }\n-                            }\n-                            addParameters(subentry.getValue().getParameters());\n-                        }\n-\n-                        customizeResponses(subentry.getValue(), ori);\n-                    }\n-                }\n-            });\n-            if (replaceTags && oas.getTags() != null) {\n-                oas.setTags(tags);\n-            }\n-        }\n-    }\n-\n     @Override\n     protected void addParameters(final List<Parameter> parameters) {\n         if (domains == null) {\n@@ -201,18 +103,9 @@ protected void addParameters(final List<Parameter> parameters) {\n         }\n     }\n \n+    @Override\n     protected void customizeResponses(final Operation operation, final OperationResourceInfo ori) {\n-        // this will be replaced by super.customizeResponses(operation, ori);\n-        if (operation.getResponses() != null && !operation.getResponses().isEmpty()) {\n-            ApiResponse response = operation.getResponses().entrySet().iterator().next().getValue();\n-            if (StringUtils.isBlank(response.getDescription())\n-                    || (StringUtils.isNotBlank(javadocProvider.getMethodResponseDoc(ori))\n-                    && Reader.DEFAULT_DESCRIPTION.equals(response.getDescription()))) {\n-\n-                response.setDescription(javadocProvider.getMethodResponseDoc(ori));\n-            }\n-        }\n-        //\n+        super.customizeResponses(operation, ori);\n \n         ApiResponses responses = operation.getResponses();\n         if (responses == null) {"},{"sha":"f7411ad4cd248e33f407921a5a60cc12c4ca3b7c","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c1b1b74563740969951dcb9fa89cff2143b6f634/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c1b1b74563740969951dcb9fa89cff2143b6f634/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c1b1b74563740969951dcb9fa89cff2143b6f634","patch":"@@ -389,7 +389,7 @@ under the License.\n     <connid.scimv11.version>1.0.1</connid.scimv11.version>\n     <connid.servicenow.version>1.0.0</connid.servicenow.version>\n \n-    <cxf.version>3.2.6</cxf.version>\n+    <cxf.version>3.2.7</cxf.version>\n \n     <jackson.version>2.9.7</jackson.version>\n "}]}