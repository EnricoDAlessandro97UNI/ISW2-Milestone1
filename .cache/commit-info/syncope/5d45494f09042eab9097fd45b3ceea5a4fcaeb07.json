{"sha":"5d45494f09042eab9097fd45b3ceea5a4fcaeb07","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkNDU0OTRmMDkwNDJlYWI5MDk3ZmQ0NWIzY2VlYTVhNGZjYWViMDc=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-04-30T16:04:50Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-04-30T16:04:50Z"},"message":"[SYNCOPE-663] Merge from 1_2_X","tree":{"sha":"46628f526dbe1df169b65f3782c7e3ae478b2dbe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/46628f526dbe1df169b65f3782c7e3ae478b2dbe"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5d45494f09042eab9097fd45b3ceea5a4fcaeb07","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d45494f09042eab9097fd45b3ceea5a4fcaeb07","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d45494f09042eab9097fd45b3ceea5a4fcaeb07","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d45494f09042eab9097fd45b3ceea5a4fcaeb07/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"65fbb52aa6dac0c181f6defdfab9612765646cac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65fbb52aa6dac0c181f6defdfab9612765646cac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65fbb52aa6dac0c181f6defdfab9612765646cac"},{"sha":"dda37dcbeb7524a8dc2b5fc9e9f0fbb711f11116","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dda37dcbeb7524a8dc2b5fc9e9f0fbb711f11116","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dda37dcbeb7524a8dc2b5fc9e9f0fbb711f11116"}],"stats":{"total":14,"additions":14,"deletions":0},"files":[{"sha":"520240cdc839f5ca0329a143f3bb2beab47e3e37","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractPushResultHandler.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d45494f09042eab9097fd45b3ceea5a4fcaeb07/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d45494f09042eab9097fd45b3ceea5a4fcaeb07/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java?ref=5d45494f09042eab9097fd45b3ceea5a4fcaeb07","patch":"@@ -83,6 +83,7 @@ public boolean handle(final long subjectKey) {\n             result.setSubjectType(getAttributableUtils().getType());\n             result.setStatus(ProvisioningResult.Status.IGNORE);\n             result.setKey(subjectKey);\n+            profile.getResults().add(result);\n \n             LOG.warn(\"Ignoring during push\", e);\n             return true;\n@@ -262,6 +263,8 @@ protected final void doHandle(final long subjectId)\n                 result.setStatus(ProvisioningResult.Status.SUCCESS);\n                 resultStatus = AuditElements.Result.SUCCESS;\n                 output = getRemoteObject(accountId);\n+            } catch (IgnoreProvisionException e) {\n+                throw e;\n             } catch (Exception e) {\n                 result.setStatus(ProvisioningResult.Status.FAILURE);\n                 result.setMessage(ExceptionUtils.getRootCauseMessage(e));"},{"sha":"b571423863071c2d7ae7f1826bb9efa84d8e1628","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d45494f09042eab9097fd45b3ceea5a4fcaeb07/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d45494f09042eab9097fd45b3ceea5a4fcaeb07/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=5d45494f09042eab9097fd45b3ceea5a4fcaeb07","patch":"@@ -81,6 +81,7 @@ public boolean handle(final SyncDelta delta) {\n             result.setStatus(ProvisioningResult.Status.IGNORE);\n             result.setKey(0L);\n             result.setName(delta.getObject().getName().getNameValue());\n+            profile.getResults().add(result);\n \n             LOG.warn(\"Ignoring during synchronization\", e);\n             return true;\n@@ -190,6 +191,8 @@ private void create(\n             LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n+        } catch (IgnoreProvisionException e) {\n+            throw e;\n         } catch (Exception e) {\n             result.setStatus(ProvisioningResult.Status.FAILURE);\n             result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -265,6 +268,8 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n                         LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -348,6 +353,8 @@ protected List<ProvisioningResult> deprovision(\n                         LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -433,6 +440,8 @@ protected List<ProvisioningResult> link(\n                         LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -488,6 +497,8 @@ protected List<ProvisioningResult> delete(\n                         doDelete(id);\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));"}]}