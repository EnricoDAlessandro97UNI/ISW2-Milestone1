{"sha":"28783291da64c4d4cfd3fe7760cc3ef2826614bf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI4NzgzMjkxZGE2NGM0ZDRjZmQzZmU3NzYwY2MzZWYyODI2NjE0YmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-03-06T10:46:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-03-06T10:46:07Z"},"message":"Cleanup: removing useless public static method","tree":{"sha":"06083c28a80a7868de830c86d1c07fd34a4b3d70","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/06083c28a80a7868de830c86d1c07fd34a4b3d70"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/28783291da64c4d4cfd3fe7760cc3ef2826614bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/28783291da64c4d4cfd3fe7760cc3ef2826614bf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/28783291da64c4d4cfd3fe7760cc3ef2826614bf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/28783291da64c4d4cfd3fe7760cc3ef2826614bf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c6640c99c2cc7d242ba5b7f279de2c967c8cce40","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6640c99c2cc7d242ba5b7f279de2c967c8cce40","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6640c99c2cc7d242ba5b7f279de2c967c8cce40"}],"stats":{"total":48,"additions":15,"deletions":33},"files":[{"sha":"ac31ec4e34c4f9a8106d508d10b27b43f000d405","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":15,"deletions":33,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/28783291da64c4d4cfd3fe7760cc3ef2826614bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/28783291da64c4d4cfd3fe7760cc3ef2826614bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=28783291da64c4d4cfd3fe7760cc3ef2826614bf","patch":"@@ -130,31 +130,26 @@ protected List<PropagationActions> getPropagationActions(final ExternalResource\n         return result;\n     }\n \n-    public static void createOrUpdate(\n-            final ObjectClass oclass,\n-            final String accountId,\n-            final Set<Attribute> attrs,\n-            final String resource,\n-            final PropagationMode propagationMode,\n+    protected void createOrUpdate(\n+            final PropagationTask task,\n             final ConnectorObject beforeObj,\n             final Connector connector,\n-            final Set<String> propagationAttempted,\n-            final ConnObjectUtil connObjectUtil) {\n+            final Set<String> propagationAttempted) {\n \n         // set of attributes to be propagated\n-        final Set<Attribute> attributes = new HashSet<Attribute>(attrs);\n+        final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n \n         // check if there is any missing or null / empty mandatory attribute\n         List<Object> mandatoryAttrNames = new ArrayList<Object>();\n-        Attribute mandatoryMissing = AttributeUtil.find(MANDATORY_MISSING_ATTR_NAME, attrs);\n+        Attribute mandatoryMissing = AttributeUtil.find(MANDATORY_MISSING_ATTR_NAME, task.getAttributes());\n         if (mandatoryMissing != null) {\n             attributes.remove(mandatoryMissing);\n \n             if (beforeObj == null) {\n                 mandatoryAttrNames.addAll(mandatoryMissing.getValue());\n             }\n         }\n-        Attribute mandatoryNullOrEmpty = AttributeUtil.find(MANDATORY_NULL_OR_EMPTY_ATTR_NAME, attrs);\n+        Attribute mandatoryNullOrEmpty = AttributeUtil.find(MANDATORY_NULL_OR_EMPTY_ATTR_NAME, task.getAttributes());\n         if (mandatoryNullOrEmpty != null) {\n             attributes.remove(mandatoryNullOrEmpty);\n \n@@ -166,8 +161,13 @@ public static void createOrUpdate(\n         }\n \n         if (beforeObj == null) {\n-            LOG.debug(\"Create {} on {}\", attributes, resource);\n-            connector.create(propagationMode, oclass, attributes, null, propagationAttempted);\n+            LOG.debug(\"Create {} on {}\", attributes, task.getResource().getName());\n+            connector.create(\n+                    task.getResource().getPropagationMode(),\n+                    new ObjectClass(task.getObjectClassName()),\n+                    attributes,\n+                    null,\n+                    propagationAttempted);\n         } else {\n             // 1. check if rename is really required\n             final Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n@@ -208,32 +208,14 @@ public static void createOrUpdate(\n                 }\n \n                 // 3. provision entry\n-                LOG.debug(\"Update {} on {}\", strictlyModified, resource);\n+                LOG.debug(\"Update {} on {}\", strictlyModified, task.getResource().getName());\n \n-                connector.update(propagationMode, beforeObj.getObjectClass(),\n+                connector.update(task.getResource().getPropagationMode(), beforeObj.getObjectClass(),\n                         beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n             }\n         }\n     }\n \n-    protected void createOrUpdate(\n-            final PropagationTask task,\n-            final ConnectorObject beforeObj,\n-            final Connector connector,\n-            final Set<String> propagationAttempted) {\n-\n-        createOrUpdate(\n-                new ObjectClass(task.getObjectClassName()),\n-                task.getAccountId(),\n-                task.getAttributes(),\n-                task.getResource().getName(),\n-                task.getResource().getPropagationMode(),\n-                beforeObj,\n-                connector,\n-                propagationAttempted,\n-                connObjectUtil);\n-    }\n-\n     protected AbstractSubject getSubject(final PropagationTask task) {\n         AbstractSubject subject = null;\n "}]}