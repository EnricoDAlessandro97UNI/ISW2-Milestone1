{"sha":"f43cea61e4ab570fa3e24197d58227f196b606ce","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0M2NlYTYxZTRhYjU3MGZhM2UyNDE5N2Q1ODIyN2YxOTZiNjA2Y2U=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-08-09T17:00:58Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-08-09T17:00:58Z"},"message":"[SYNCOPE-1618] Spring Boot configuration refactoring (#280)","tree":{"sha":"4dab99de1e56bf976da2aaa69b93b73d44ca51df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4dab99de1e56bf976da2aaa69b93b73d44ca51df"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f43cea61e4ab570fa3e24197d58227f196b606ce","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhEV9KCRBK7hj4Ov3rIwAA1TAIAHessy8VJhaeNdPHmY83N7Es\ncOSadg2KW00VNwjIoli9QTlAOmvEmvzhtLq4U6BU2j7mE8Z/8FCATlrJWIIDcNGn\n8LyFdhXRbaNAoiJ1ASOzMAoAvof8q7QoTf9mGl+KO0icMCrXf8KQp8UrzpyxpEWj\nDf6nngBPWCjIFR+Au7G5EIh6vUWW8daHdVik4oWIuTfd4h6vKrX1Kt+SMaqQCeYd\nH8IhHhZgPA6C6FvOyZmuajwDYqTX24o+bUKdDED8UrJ5Mq1NXPWHf6FzdfCNs16Q\ns0xyl629h9mP2RRJrTSC/lemalkbmFoU/D5SOxTjlK3d/eLQxERcwK7GBKCQOCs=\n=EsvL\n-----END PGP SIGNATURE-----\n","payload":"tree 4dab99de1e56bf976da2aaa69b93b73d44ca51df\nparent ca023d8f8c5b72c60c12920a190e03d9b9a98ecb\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1628528458 +0200\ncommitter GitHub <noreply@github.com> 1628528458 +0200\n\n[SYNCOPE-1618] Spring Boot configuration refactoring (#280)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f43cea61e4ab570fa3e24197d58227f196b606ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f43cea61e4ab570fa3e24197d58227f196b606ce","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f43cea61e4ab570fa3e24197d58227f196b606ce/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"}],"stats":{"total":14457,"additions":6048,"deletions":8409},"files":[{"sha":"55a5f4d34b88294cbec0ab9edc744389288ff8fd","filename":".github/workflows/crosschecks.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fcrosschecks.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fcrosschecks.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fcrosschecks.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -59,4 +59,4 @@ jobs:\n     - name: Test\n       run: mvn -T 1C clean test '-Dinvoker.streamLogs=true' '-Dmodernizer.skip=true' '-Dianal.phase=none' '-Drat.skip=true' '-Dcheckstyle.skip=true' '-Dsass.skip=true'\n     - name: Verify\n-      run: mvn -f fit/core-reference/pom.xml verify '-Dit.test=RESTITCase' '-Dinvoker.streamLogs=true' '-Dmodernizer.skip=true' '-Dianal.phase=none' '-Drat.skip=true' '-Dcheckstyle.skip=true' '-Djacoco.skip=true'\n+      run: mvn -f fit/core-reference/pom.xml verify '-Dit.test=RESTITCase' '-Dinvoker.streamLogs=true' '-Dmodernizer.skip=true' '-Drat.skip=true' '-Dcheckstyle.skip=true' '-Djacoco.skip=true'"},{"sha":"5b983a220624f4cf46240ea6b1ca33d2eceaf0ed","filename":".github/workflows/fit_Elasticsearch.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Elasticsearch.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Elasticsearch.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Elasticsearch.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Elasticsearch / H2 / JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P elasticsearch-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P elasticsearch-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"4440fe89421c785050b7150f0276d2fedb5f36f5","filename":".github/workflows/fit_Payara.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Payara.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Payara.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Payara.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Payara / H2 / JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P payara-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P payara-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"b701b037d07d2f23b4dde72cb08628b2dfc74593","filename":".github/workflows/fit_Tomcat_H2_JSON.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_JSON.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_JSON.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Tomcat_H2_JSON.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Tomcat / H2 / JSON'\n-      run: mvn -f fit/core-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"5064ca4b3886025aef6036d3998a0c374ddab93e","filename":".github/workflows/fit_Tomcat_H2_XML.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_XML.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_XML.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Tomcat_H2_XML.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Tomcat / H2 / XML'\n-      run: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/xml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/xml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"f3b399c5103b71c6f3952a1a58e48f506ab6df77","filename":".github/workflows/fit_Tomcat_H2_YAML.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_YAML.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Tomcat_H2_YAML.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Tomcat_H2_YAML.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Tomcat / H2 / YAML'\n-      run: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/yaml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/yaml -Dit.test=org.apache.syncope.fit.core.*ITCase -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"99a7d7a5be9fc4774d18ac794a2926c3de14f34c","filename":".github/workflows/fit_WA_SAML2PS4UI_OIDCC4UI.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SAML2PS4UI_OIDCC4UI.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SAML2PS4UI_OIDCC4UI.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_WA_SAML2PS4UI_OIDCC4UI.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'WA / SAML2SP4UI, OIDCC4UI'\n-      run: mkdir -p fit/core-reference/target/test-classes && cp fit/core-reference/src/test/resources/saml.keystore.jks fit/core-reference/target/test-classes && mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.ui.*ITCase\n+      run: mkdir -p fit/core-reference/target/test-classes && cp fit/core-reference/src/test/resources/saml.keystore.jks fit/core-reference/target/test-classes && mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.ui.*ITCase"},{"sha":"61cec56b8b29d798ae7e799426519db23ddfa692","filename":".github/workflows/fit_WA_SRA_CASClient.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_CASClient.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_CASClient.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_WA_SRA_CASClient.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'WA / SRA / CAS Client'\n-      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.CASSRAITCase\n+      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.CASSRAITCase"},{"sha":"58e4059e5d3b9f87a42ef62cbd19d9b0416f4a5a","filename":".github/workflows/fit_WA_SRA_OAuth2.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_OAuth2.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_OAuth2.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_WA_SRA_OAuth2.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'WA / SRA / OAuth 2.0'\n-      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.OAUTH2SRAITCase\n+      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.OAUTH2SRAITCase"},{"sha":"662de6a56e29341afdecfe33da43447338154354","filename":".github/workflows/fit_WA_SRA_OIDC.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_OIDC.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_OIDC.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_WA_SRA_OIDC.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'WA / SRA / OpenID Connect 1.0'\n-      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.OIDCSRAITCase\n+      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.OIDCSRAITCase"},{"sha":"f05d96a6815261328b027e2269efb2c86dd851ce","filename":".github/workflows/fit_WA_SRA_SAML2.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_SAML2.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_WA_SRA_SAML2.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_WA_SRA_SAML2.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'WA / SRA / SAML 2.0'\n-      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.SAML2SRAITCase\n+      run: mvn -f fit/wa-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true -Dit.test=org.apache.syncope.fit.sra.SAML2SRAITCase"},{"sha":"7cc9e187e24b0c2fd0aa6fe5e473599b6c8271bd","filename":".github/workflows/fit_Wildfly.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Wildfly.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Wildfly.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Wildfly.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Wildfly / H2 / JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P wildfly-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P wildfly-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"f1724d3423339746f94e081dac6d64d97e0c182c","filename":".github/workflows/fit_Zookeeper.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Zookeeper.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Ffit_Zookeeper.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Ffit_Zookeeper.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Zookeeper / H2 / JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P zookeeper-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P zookeeper-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"58af3e7458178139987c7d99c9a1870b460700e3","filename":".github/workflows/mariadb.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fmariadb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fmariadb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fmariadb.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,4 +48,4 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Integration Tests: MariaDB'\n-      run: mvn -f fit/core-reference/pom.xml -P mariadb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P mariadb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"c8d50870ec4cd9509a3a6acddd27e7fc31d7a625","filename":".github/workflows/mysql.yml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fmysql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fmysql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fmysql.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,8 +48,8 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Unit Tests: MySQL JPA JSON'\n-      run: mvn -f core/persistence-jpa-json/pom.xml -P mysql-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f core/persistence-jpa-json/pom.xml -P myjson -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: MySQL'\n-      run: mvn -f fit/core-reference/pom.xml -P mysql-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P mysql-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: MySQL JPA JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P myjson-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P myjson-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"c796c03d965cc51cc0f3901d1ca2346f3066c92b","filename":".github/workflows/postgresql.yml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fpostgresql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/.github%2Fworkflows%2Fpostgresql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fpostgresql.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,8 +48,8 @@ jobs:\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n     - name: 'Unit Tests: PostgreSQL JPA JSON'\n-      run: mvn -f core/persistence-jpa-json/pom.xml -P postgres-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f core/persistence-jpa-json/pom.xml -P pgjsonb -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: PostgreSQL'\n-      run: mvn -f fit/core-reference/pom.xml -P postgres-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P postgres-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: PostgreSQL JPA JSON'\n-      run: mvn -f fit/core-reference/pom.xml -P pgjsonb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      run: mvn -f fit/core-reference/pom.xml -P pgjsonb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"499f45a19105af0237b99bbb839e3cca8c1d9d7f","filename":"archetype/pom.xml","status":"modified","additions":31,"deletions":90,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -129,7 +129,7 @@ under the License.\n       <resource>\n         <directory>../core/starter/src/main/resources</directory>\n         <includes>\n-          <include>application.properties</include>\n+          <include>core.properties</include>\n         </includes>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n       </resource>\n@@ -156,59 +156,18 @@ under the License.\n         <directory>../core/persistence-jpa/src/test/resources/domains</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources/domains</targetPath>\n       </resource>\n-      <resource>\n-        <directory>../core/logic/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n-      </resource>\n-      <resource>\n-        <directory>../core/spring/src/main/resources</directory>\n-        <includes>\n-          <include>security.properties</include>\n-        </includes>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n-      </resource>\n       <resource>\n         <directory>../fit/core-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n         <includes>\n-          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../ext/self-keymaster/client/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n-        <includes>\n-          <include>keymaster.properties</include>\n-        </includes>\n-      </resource>\n-      <resource>\n-        <directory>../fit/core-reference/src/main/resources/all</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources/all</targetPath>\n-        <excludes>\n-          <exclude>provisioning.properties</exclude>\n-        </excludes>\n-      </resource>\n-      <resource>\n-        <directory>../ext/camel/provisioning-camel/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources/all</targetPath>\n-        <includes>\n-          <include>provisioning.properties</include>\n-        </includes>\n-      </resource>      \n-      <resource>\n-        <directory>../fit/core-reference/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n-        <includes>\n-          <include>keymaster.properties</include>\n-        </includes>\n-      </resource>\n       <resource>\n         <directory>../fit/core-reference/src/test/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n         <includes>\n           <include>keystore</include>\n-          <include>mail.properties</include>\n         </includes>\n       </resource>\n       <resource>\n@@ -219,128 +178,110 @@ under the License.\n         <directory>../fit/core-reference/src/test/resources/rest</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources/rest</targetPath>\n       </resource>\n+      <resource>\n+        <directory>../fit/core-reference/src/main/webapp/WEB-INF</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/webapp/WEB-INF</targetPath>\n+      </resource>\n       <resource>\n         <directory>../fit/core-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n         <includes>\n-          <include>connid.properties</include>\n+          <include>core-embedded.properties</include>\n+          <include>core-all.properties</include>\n           <include>userWorkflow.bpmn20.xml</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../fit/core-reference/src/main/webapp/WEB-INF</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/webapp/WEB-INF</targetPath>\n-      </resource>\n             \n       <resource>\n         <directory>../client/idrepo/console/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n         <includes>\n-          <include>application.properties</include>\n           <include>console.properties</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../ext/self-keymaster/client/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n-        <includes>\n-          <include>keymaster.properties</include>\n-        </includes>\n-      </resource>\n       <resource>\n         <directory>../fit/console-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n         <includes>\n-          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>\n+      <resource>\n+        <directory>../fit/console-reference/src/main/webapp/WEB-INF</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/webapp/WEB-INF</targetPath>\n+      </resource>\n       <resource>\n         <directory>../fit/console-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/test/resources</targetPath>\n         <includes>\n-          <include>console.properties</include>\n-          <include>keymaster.properties</include>\n+          <include>console-embedded.properties</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../fit/console-reference/src/main/webapp/WEB-INF</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/webapp/WEB-INF</targetPath>\n-      </resource>\n       \n       <resource>\n         <directory>../client/idrepo/enduser/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n         <includes>\n-          <include>application.properties</include>\n           <include>enduser.properties</include>\n-          <include>customFormAttributes.json</include>\n-          <include>customTemplate.json</include>\n-        </includes>\n-      </resource>\n-      <resource>\n-        <directory>../ext/self-keymaster/client/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n-        <includes>\n-          <include>keymaster.properties</include>\n+          <include>customFormLayout.json</include>\n         </includes>\n       </resource>\n       <resource>\n         <directory>../fit/enduser-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n         <includes>\n-          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>\n+      <resource>\n+        <directory>../fit/enduser-reference/src/main/webapp/WEB-INF</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/webapp/WEB-INF</targetPath>\n+      </resource>\n       <resource>\n         <directory>../fit/enduser-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/test/resources</targetPath>\n         <includes>\n-          <include>enduser.properties</include>\n-          <include>customFormAttributes.json</include>\n-          <include>customTemplate.json</include>\n-          <include>keymaster.properties</include>\n+          <include>enduser-embedded.properties</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../fit/enduser-reference/src/main/webapp/WEB-INF</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/webapp/WEB-INF</targetPath>\n-      </resource>\n       \n       <resource>\n         <directory>../sra/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/sra/src/main/resources</targetPath>\n       </resource>\n       <resource>\n-        <directory>../sra/src/test/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/sra/src/main/resources</targetPath>\n+        <directory>../fit/wa-reference/src/test/resources</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/sra/src/test/resources</targetPath>\n         <includes>\n-          <include>keymaster.properties</include>          \n+          <include>sra-*.properties</include>\n         </includes>\n       </resource>\n \n       <resource>\n         <directory>../wa/starter/src/main/resources</directory>\n         <includes>\n-          <include>application.properties</include>\n           <include>cas-theme-default.properties</include>\n           <include>wa.properties</include>\n-          <include>log4j2.xml</include>\n         </includes>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n       </resource>\n+      <resource>\n+        <directory>../fit/wa-reference/src/main/webapp/WEB-INF</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/webapp/WEB-INF</targetPath>\n+      </resource>\n       <resource>\n         <directory>../fit/wa-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n         <includes>\n-          <include>application-embedded.properties</include>\n-          <include>keymaster.properties</include>\n+          <include>log4j2.xml</include>\n         </includes>\n       </resource>\n       <resource>\n-        <directory>../fit/wa-reference/src/main/webapp/WEB-INF</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/webapp/WEB-INF</targetPath>\n+        <directory>../fit/wa-reference/src/main/resources</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/test/resources</targetPath>\n+        <includes>\n+          <include>wa-embedded.properties</include>\n+        </includes>\n       </resource>\n     </resources>\n   </build>"},{"sha":"85f1c8c057cf97b71bbe62f18a8c37ba02c669c0","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -43,10 +43,14 @@ under the License.\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-console</artifactId>\n     </dependency>\n-    \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.client.am</groupId>\n+      <artifactId>syncope-client-am-console</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>"},{"sha":"12c5d2205953ad502d0aacec02aa49806886bf92","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -53,13 +53,10 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-rest-cxf</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-self-keymaster-starter</artifactId>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>\n       <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>"},{"sha":"c6cf90c33c7e847904b0fc845cdbfa391de71c18","filename":"archetype/src/main/resources/archetype-resources/enduser/pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -43,10 +43,10 @@ under the License.\n       <groupId>org.apache.syncope.client.idrepo</groupId>\n       <artifactId>syncope-client-idrepo-enduser</artifactId>\n     </dependency>\n-    \n+\n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>"},{"sha":"83c6528b9806553a3d892ea4c4bbc7d1fef522fa","filename":"archetype/src/main/resources/archetype-resources/fit/pom.xml","status":"modified","additions":32,"deletions":12,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -33,10 +33,17 @@ under the License.\n   <packaging>war</packaging>\n \n   <properties>\n+    <spring.profiles.active>embedded</spring.profiles.active>\n     <exec.skip>true</exec.skip>\n   </properties>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.fit</groupId>\n       <artifactId>syncope-fit-build-tools</artifactId>\n@@ -128,28 +135,22 @@ under the License.\n                 <copy todir=\"../core/target/syncope/WEB-INF/classes/domains\">\n                   <fileset dir=\"../core/target/test-classes/domains\"/>\n                 </copy>\n-                <copy file=\"../core/target/test-classes/connid.properties\" \n+                <copy file=\"../core/target/test-classes/core-embedded.properties\" \n                       todir=\"../core/target/syncope/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n-                <copy file=\"../core/target/test-classes/keymaster.properties\" \n+                <copy file=\"../core/target/test-classes/core-all.properties\" \n                       todir=\"../core/target/syncope/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n \n-                <copy file=\"../console/target/test-classes/keymaster.properties\" \n+                <copy file=\"../console/target/test-classes/console-embedded.properties\" \n                       todir=\"../console/target/syncope-console/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n \n-                <copy file=\"../enduser/target/test-classes/keymaster.properties\" \n+                <copy file=\"../enduser/target/test-classes/enduser-embedded.properties\" \n                       todir=\"../enduser/target/syncope-enduser/WEB-INF/classes\" \n                       overwrite=\"true\"/>                \n-                <copy file=\"../enduser/target/test-classes/customFormAttributes.json\" \n-                      todir=\"../enduser/target/syncope-enduser/WEB-INF/classes\" \n-                      overwrite=\"true\"/>\n-                <copy file=\"../enduser/target/test-classes/customTemplate.json\" \n-                      todir=\"../enduser/target/syncope-enduser/WEB-INF/classes\" \n-                      overwrite=\"true\"/>\n \n-                <copy file=\"../wa/target/test-classes/keymaster.properties\" \n+                <copy file=\"../wa/target/test-classes/wa-embedded.properties\" \n                       todir=\"../wa/target/syncope-wa/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n               </target>\n@@ -188,6 +189,7 @@ under the License.\n               </arguments>\n               <environmentVariables>\n                 <LOADER_PATH>${basedir}/../sra/target/test-classes</LOADER_PATH>\n+                <SPRING_PROFILES_ACTIVE>cas</SPRING_PROFILES_ACTIVE>\n               </environmentVariables>\n               <async>true</async>\n               <asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>\n@@ -211,11 +213,17 @@ under the License.\n             <timeout>300000</timeout>\n             <log>${cargo.log}</log>\n             <output>${cargo.output}</output> \n+            <dependencies>\n+              <dependency>\n+                <groupId>com.h2database</groupId>\n+                <artifactId>h2</artifactId>\n+              </dependency>\n+            </dependencies>\n           </container>\n           <configuration>\n             <properties>\n               <cargo.jvmargs>\n-                -Dspring.profiles.active=embedded\n+                -Dspring.profiles.active=${spring.profiles.active}\n                 -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n           </configuration>\n@@ -270,5 +278,17 @@ under the License.\n         <defaultGoal>clean verify cargo:run</defaultGoal>  \n       </build>\n     </profile>\n+\n+    <profile>\n+      <id>all</id>\n+\n+      <properties>\n+        <spring.profiles.active>embedded,all</spring.profiles.active>\n+      </properties>\n+\n+      <build>\n+        <defaultGoal>clean verify cargo:run</defaultGoal>  \n+      </build>\n+    </profile>\n   </profiles>\n </project>"},{"sha":"1547499cb6c15d1b92ecaa912e23b11299b93e0f","filename":"archetype/src/main/resources/archetype-resources/sra/pom.xml","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fsra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fsra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fsra%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>\n@@ -81,5 +81,12 @@ under the License.\n         <filtering>true</filtering>\n       </resource>\n     </resources>\n+\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <filtering>true</filtering>\n+      </testResource>\n+    </testResources>\n   </build>\n </project>"},{"sha":"7a634d2e49e7cd894c60a049a1b71479b3223949","filename":"archetype/src/main/resources/archetype-resources/wa/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n     \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>"},{"sha":"0a453ee810311468bf9087e79962c7e3fc85d797","filename":"archetype/src/main/resources/meta-pom.xml","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -71,6 +71,11 @@ under the License.\n         <version>${syncope.version}</version>\n       </dependency>\n \n+      <dependency>\n+        <groupId>org.apache.syncope.client.am</groupId>\n+        <artifactId>syncope-client-am-console</artifactId>\n+        <version>${syncope.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.apache.syncope.client.idm</groupId>\n         <artifactId>syncope-client-idm-console</artifactId>\n@@ -96,23 +101,19 @@ under the License.\n       </dependency>\n \n       <dependency>\n-        <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-        <artifactId>syncope-ext-self-keymaster-rest-cxf</artifactId>\n-        <version>${syncope.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-        <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+        <groupId>org.apache.syncope.core</groupId>\n+        <artifactId>syncope-core-self-keymaster-starter</artifactId>\n         <version>${syncope.version}</version>\n       </dependency>\n+\n       <dependency>\n         <groupId>org.apache.syncope.common.keymaster</groupId>\n         <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n         <version>${syncope.version}</version>\n       </dependency>        \n       <dependency>\n-        <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-        <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+        <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+        <artifactId>syncope-common-keymaster-client-self</artifactId>\n         <version>${syncope.version}</version>\n       </dependency>\n     </dependencies>"},{"sha":"6f0050c48947aa54dbc6040e4492a6c5b1ce9b9a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPullWizardBuilder.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -100,9 +100,7 @@ public static LineSeparator byRepr(final String repr) {\n     public CSVPullWizardBuilder(final CSVPullSpec defaultItem, final PageReference pageRef) {\n         super(defaultItem, pageRef);\n \n-        this.maxUploadSize = SyncopeWebApplication.get().getMaxUploadFileSizeMB() == null\n-                ? null\n-                : Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n+        this.maxUploadSize = Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n     }\n \n     @Override"},{"sha":"cd47af7a8d7f6dc5d6dcbaf9f53ed00b29b255ef","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/CommonUIProperties.java","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FCommonUIProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FCommonUIProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FCommonUIProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.syncope.common.lib.SyncopeProperties;\n+\n+public abstract class CommonUIProperties extends SyncopeProperties {\n+\n+    private boolean xForward = true;\n+\n+    private String xForwardProtocolHeader = \"X-Forwarded-Proto\";\n+\n+    private int xForwardHttpPort = 80;\n+\n+    private int xForwardHttpsPort = 443;\n+\n+    private boolean csrf = true;\n+\n+    private int maxUploadFileSizeMB = 5;\n+\n+    private long maxWaitTimeOnApplyChanges = 30L;\n+\n+    private final Map<String, String> securityHeaders = new HashMap<>();\n+\n+    public boolean isxForward() {\n+        return xForward;\n+    }\n+\n+    public void setxForward(final boolean xForward) {\n+        this.xForward = xForward;\n+    }\n+\n+    public String getxForwardProtocolHeader() {\n+        return xForwardProtocolHeader;\n+    }\n+\n+    public void setxForwardProtocolHeader(final String xForwardProtocolHeader) {\n+        this.xForwardProtocolHeader = xForwardProtocolHeader;\n+    }\n+\n+    public int getxForwardHttpPort() {\n+        return xForwardHttpPort;\n+    }\n+\n+    public void setxForwardHttpPort(final int xForwardHttpPort) {\n+        this.xForwardHttpPort = xForwardHttpPort;\n+    }\n+\n+    public int getxForwardHttpsPort() {\n+        return xForwardHttpsPort;\n+    }\n+\n+    public void setxForwardHttpsPort(final int xForwardHttpsPort) {\n+        this.xForwardHttpsPort = xForwardHttpsPort;\n+    }\n+\n+    public boolean isCsrf() {\n+        return csrf;\n+    }\n+\n+    public void setCsrf(final boolean csrf) {\n+        this.csrf = csrf;\n+    }\n+\n+    public int getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n+    }\n+\n+    public void setMaxUploadFileSizeMB(final int maxUploadFileSizeMB) {\n+        this.maxUploadFileSizeMB = maxUploadFileSizeMB;\n+    }\n+\n+    public long getMaxWaitTimeOnApplyChanges() {\n+        return maxWaitTimeOnApplyChanges;\n+    }\n+\n+    public void setMaxWaitTimeOnApplyChanges(final long maxWaitTimeOnApplyChanges) {\n+        this.maxWaitTimeOnApplyChanges = maxWaitTimeOnApplyChanges;\n+    }\n+\n+    public Map<String, String> getSecurityHeaders() {\n+        return securityHeaders;\n+    }\n+}"},{"sha":"3ac380f22a6e237a379051345ba8dfb3c21bfac2","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/actuate/SyncopeCoreHealthIndicator.java","status":"modified","additions":16,"deletions":10,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Factuate%2FSyncopeCoreHealthIndicator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Factuate%2FSyncopeCoreHealthIndicator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Factuate%2FSyncopeCoreHealthIndicator.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,8 +25,6 @@\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.actuate.health.Health;\n import org.springframework.boot.actuate.health.HealthIndicator;\n import org.springframework.boot.actuate.health.Status;\n@@ -35,17 +33,25 @@ public class SyncopeCoreHealthIndicator implements HealthIndicator {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeCoreHealthIndicator.class);\n \n-    @Autowired\n-    protected ServiceOps serviceOps;\n+    protected final ServiceOps serviceOps;\n \n-    @Value(\"${anonymousUser}\")\n-    protected String anonymousUser;\n+    protected final String anonymousUser;\n \n-    @Value(\"${anonymousKey}\")\n-    protected String anonymousKey;\n+    protected final String anonymousKey;\n \n-    @Value(\"${useGZIPCompression:false}\")\n-    protected boolean useGZIPCompression;\n+    protected final boolean useGZIPCompression;\n+\n+    public SyncopeCoreHealthIndicator(\n+            final ServiceOps serviceOps,\n+            final String anonymousUser,\n+            final String anonymousKey,\n+            final boolean useGZIPCompression) {\n+\n+        this.serviceOps = serviceOps;\n+        this.anonymousUser = anonymousUser;\n+        this.anonymousKey = anonymousKey;\n+        this.useGZIPCompression = useGZIPCompression;\n+    }\n \n     @Override\n     public Health health() {"},{"sha":"75d644fa4d752e13328cebd5d198eb7c3f49560c","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/BaseBinaryFieldPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FBaseBinaryFieldPanel.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -33,6 +33,4 @@ public BaseBinaryFieldPanel(final String id, final String name, final IModel<Str\n     }\n \n     protected abstract void sendError(Exception exception);\n-\n-    protected abstract Integer getMaxUploadFileSizeMB();\n }"},{"sha":"31ca830d245ec65e1f20b6e6139afe3e86c728d0","filename":"client/idrepo/console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -305,8 +305,8 @@ under the License.\n         </dependency>\n \n         <dependency>\n-          <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-          <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+          <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+          <artifactId>syncope-common-keymaster-client-self</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n "},{"sha":"87089a906a32c2a88c8059298d1c640d467f22cc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/BookmarkablePageLinkBuilder.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,11 +18,10 @@\n  */\n package org.apache.syncope.client.console;\n \n+import java.util.Optional;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n \n-import java.util.Optional;\n-\n public final class BookmarkablePageLinkBuilder {\n \n     public static <T extends BasePage> BookmarkablePageLink<T> build(\n@@ -36,9 +35,7 @@ public static <T extends BasePage> BookmarkablePageLink<T> build(\n \n         @SuppressWarnings(\"unchecked\")\n         Class<T> pageClass = (Class<T>) SyncopeWebApplication.get().getPageClass(key);\n-        return new BookmarkablePageLink<>(\n-                id,\n-            Optional.ofNullable(pageClass).orElse(defaultPageClass));\n+        return new BookmarkablePageLink<>(id, Optional.ofNullable(pageClass).orElse(defaultPageClass));\n     }\n \n     private BookmarkablePageLinkBuilder() {"},{"sha":"d2ef41933b0e615cfd21691fadb888dc1dbcd6ed","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/ConsoleProperties.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FConsoleProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AnyPanel;\n+import org.apache.syncope.client.ui.commons.CommonUIProperties;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"console\")\n+public class ConsoleProperties extends CommonUIProperties {\n+\n+    public static class Topology {\n+\n+        private int corePoolSize = 10;\n+\n+        private int maxPoolSize = 20;\n+\n+        private int queueCapacity = 50;\n+\n+        public int getCorePoolSize() {\n+            return corePoolSize;\n+        }\n+\n+        public void setCorePoolSize(final int corePoolSize) {\n+            this.corePoolSize = corePoolSize;\n+        }\n+\n+        public int getMaxPoolSize() {\n+            return maxPoolSize;\n+        }\n+\n+        public void setMaxPoolSize(final int maxPoolSize) {\n+            this.maxPoolSize = maxPoolSize;\n+        }\n+\n+        public int getQueueCapacity() {\n+            return queueCapacity;\n+        }\n+\n+        public void setQueueCapacity(final int queueCapacity) {\n+            this.queueCapacity = queueCapacity;\n+        }\n+    }\n+\n+    private String reconciliationReportKey;\n+\n+    private final Map<String, Class<? extends BasePage>> page = new HashMap<>();\n+\n+    private String defaultAnyPanelClass = AnyPanel.class.getName();\n+\n+    private final Topology topology = new Topology();\n+\n+    public String getReconciliationReportKey() {\n+        return reconciliationReportKey;\n+    }\n+\n+    public void setReconciliationReportKey(final String reconciliationReportKey) {\n+        this.reconciliationReportKey = reconciliationReportKey;\n+    }\n+\n+    public String getDefaultAnyPanelClass() {\n+        return defaultAnyPanelClass;\n+    }\n+\n+    public void setDefaultAnyPanelClass(final String defaultAnyPanelClass) {\n+        this.defaultAnyPanelClass = defaultAnyPanelClass;\n+    }\n+\n+    public Map<String, Class<? extends BasePage>> getPage() {\n+        return page;\n+    }\n+\n+    public Topology getTopology() {\n+        return topology;\n+    }\n+}"},{"sha":"a77f5cc45f73266dc4632f0e92974f11b1643739","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SecurityConfig.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console;\n \n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n@@ -31,17 +31,14 @@\n @Configuration\n public class SecurityConfig extends WebSecurityConfigurerAdapter {\n \n-    @Value(\"${anonymousUser}\")\n-    private String anonymousUser;\n-\n-    @Value(\"${anonymousKey}\")\n-    private String anonymousKey;\n+    @Autowired\n+    private ConsoleProperties props;\n \n     @Override\n     protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\n         auth.inMemoryAuthentication().\n-                withUser(anonymousUser).\n-                password(\"{noop}\" + anonymousKey).\n+                withUser(props.getAnonymousUser()).\n+                password(\"{noop}\" + props.getAnonymousKey()).\n                 roles(IdRepoEntitlement.ANONYMOUS);\n     }\n "},{"sha":"4348523f8f75c1d5d3cfc497ff0fec9fce87b8f9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":32,"deletions":11,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.client.console;\n \n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n+import java.util.Map;\n+import org.apache.syncope.client.console.actuate.SyncopeConsoleInfoContributor;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n@@ -44,39 +46,48 @@\n import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.client.ui.commons.actuate.SyncopeCoreHealthIndicator;\n+import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.PropertySource;\n \n-@PropertySource(\"classpath:console.properties\")\n-@PropertySource(value = \"file:${console.directory}/console.properties\", ignoreResourceNotFound = true)\n @SpringBootApplication(exclude = {\n     ErrorMvcAutoConfiguration.class,\n     HttpMessageConvertersAutoConfiguration.class })\n+@EnableConfigurationProperties(ConsoleProperties.class)\n public class SyncopeConsoleApplication extends SpringBootServletInitializer {\n \n-    @Autowired\n-    private ApplicationContext ctx;\n-\n     public static void main(final String[] args) {\n-        SpringApplication.run(SyncopeConsoleApplication.class, args);\n+        new SpringApplicationBuilder(SyncopeConsoleApplication.class).\n+                properties(\"spring.config.name:console\").\n+                build().run(args);\n     }\n \n+    @Autowired\n+    private ServiceOps serviceOps;\n+\n+    @Autowired\n+    private ConsoleProperties props;\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n     @Override\n     protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n-        builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n-        return super.configure(builder);\n+        return builder.properties(Map.of(\n+                WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED, false,\n+                \"spring.config.name\", \"console\")).\n+                sources(SyncopeConsoleApplication.class);\n     }\n \n     @Bean\n@@ -87,7 +98,17 @@ public ApplicationContextProvider applicationContextProvider() {\n     @ConditionalOnMissingBean\n     @Bean\n     public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator() {\n-        return new SyncopeCoreHealthIndicator();\n+        return new SyncopeCoreHealthIndicator(\n+                serviceOps,\n+                props.getAnonymousUser(),\n+                props.getAnonymousKey(),\n+                props.isUseGZIPCompression());\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SyncopeConsoleInfoContributor syncopeConsoleInfoContributor() {\n+        return new SyncopeConsoleInfoContributor();\n     }\n \n     @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")"},{"sha":"463300499114912131d4a9ca1ebcded8ee343153","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -43,7 +43,6 @@\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.commons.RealmsUtils;\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.client.lib.batch.BatchRequest;\n@@ -129,20 +128,13 @@ public SyncopeConsoleSession(final Request request) {\n         super(request);\n \n         clientFactory = SyncopeWebApplication.get().newClientFactory();\n-        anonymousClient = clientFactory.create(new AnonymousAuthenticationHandler(\n-                SyncopeWebApplication.get().getAnonymousUser(),\n-                SyncopeWebApplication.get().getAnonymousKey()));\n+        anonymousClient = SyncopeWebApplication.get().newAnonymousClient();\n \n         gitAndBuildInfo = anonymousClient.gitAndBuildInfo();\n         platformInfo = anonymousClient.platform();\n         systemInfo = anonymousClient.system();\n \n-        executor = new ThreadPoolTaskExecutor();\n-        executor.setWaitForTasksToCompleteOnShutdown(false);\n-        executor.setCorePoolSize(SyncopeWebApplication.get().getCorePoolSize());\n-        executor.setMaxPoolSize(SyncopeWebApplication.get().getMaxPoolSize());\n-        executor.setQueueCapacity(SyncopeWebApplication.get().getQueueCapacity());\n-        executor.initialize();\n+        executor = SyncopeWebApplication.get().newThreadPoolTaskExecutor();\n     }\n \n     protected String message(final SyncopeClientException sce) {"},{"sha":"182c114df2529707900e496a6ea7b728fbfeead0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":44,"deletions":132,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,30 +19,19 @@\n package org.apache.syncope.client.console;\n \n import com.giffing.wicket.spring.boot.starter.app.WicketBootSecuredWebApplication;\n-import com.google.common.net.HttpHeaders;\n import de.agilecoders.wicket.core.Bootstrap;\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Properties;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.ClassUtils;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.Dashboard;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.wicket.Page;\n import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n@@ -63,8 +52,10 @@\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.MustChangePassword;\n-import org.apache.syncope.client.console.panels.AnyPanel;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.ui.commons.themes.AdminLTE;\n import org.apache.syncope.client.ui.commons.SyncopeUIRequestCycleListener;\n import org.apache.syncope.client.ui.commons.Constants;\n@@ -75,54 +66,28 @@\n import org.apache.wicket.request.cycle.IRequestCycleListener;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.context.ApplicationContext;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n import org.springframework.stereotype.Component;\n \n @Component\n public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n \n-    private static final String CONSOLE_PROPERTIES = \"console.properties\";\n-\n     public static SyncopeWebApplication get() {\n         return (SyncopeWebApplication) WebApplication.get();\n     }\n \n+    @Autowired\n+    protected ConsoleProperties props;\n+\n     @Autowired\n     protected ClassPathScanImplementationLookup lookup;\n \n     @Autowired\n     protected ServiceOps serviceOps;\n \n-    @Value(\"${anonymousUser}\")\n-    protected String anonymousUser;\n-\n-    @Value(\"${anonymousKey}\")\n-    protected String anonymousKey;\n-\n-    @Value(\"${useGZIPCompression:false}\")\n-    protected boolean useGZIPCompression;\n-\n-    @Value(\"${maxUploadFileSizeMB:#{null}}\")\n-    protected Integer maxUploadFileSizeMB;\n-\n-    @Value(\"${maxWaitTime:30}\")\n-    protected Integer maxWaitTime;\n-\n-    @Value(\"${corePoolSize:5}\")\n-    protected Integer corePoolSize;\n-\n-    @Value(\"${maxPoolSize:10}\")\n-    protected Integer maxPoolSize;\n-\n-    @Value(\"${queueCapacity:50}\")\n-    protected Integer queueCapacity;\n-\n-    @Value(\"${reconciliationReportKey}\")\n-    protected String reconciliationReportKey;\n-\n     @Autowired\n     protected ExternalResourceProvider resourceProvider;\n \n@@ -147,56 +112,10 @@ public static SyncopeWebApplication get() {\n     @Autowired\n     protected ApplicationContext ctx;\n \n-    protected Map<String, Class<? extends BasePage>> pageClasses;\n-\n-    protected String defaultAnyLayoutClass;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    protected void populatePageClasses(final Properties props) {\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String className = propNames.nextElement();\n-            if (className.startsWith(\"page.\")) {\n-                try {\n-                    Class<?> clazz = ClassUtils.getClass(props.getProperty(className));\n-                    if (BasePage.class.isAssignableFrom(clazz)) {\n-                        pageClasses.put(\n-                                StringUtils.substringAfter(className, \"page.\"), (Class<? extends BasePage>) clazz);\n-                    } else {\n-                        LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n-                    }\n-                } catch (ClassNotFoundException e) {\n-                    LOG.error(\"While looking for class identified by property '{}'\", className, e);\n-                }\n-            }\n-        }\n-    }\n-\n-    protected static void setSecurityHeaders(final Properties props, final WebResponse response) {\n-        @SuppressWarnings(\"unchecked\")\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String name = propNames.nextElement();\n-            if (name.startsWith(\"security.headers.\")) {\n-                response.setHeader(StringUtils.substringAfter(name, \"security.headers.\"), props.getProperty(name));\n-            }\n-        }\n-    }\n-\n     @Override\n     protected void init() {\n         super.init();\n \n-        // read console.properties\n-        Properties props = PropertyUtils.read(getClass(), CONSOLE_PROPERTIES, \"console.directory\");\n-\n-        // process page properties\n-        pageClasses = new HashMap<>();\n-        populatePageClasses(props);\n-        pageClasses = Collections.unmodifiableMap(pageClasses);\n-\n-        defaultAnyLayoutClass = props.getProperty(\"default.any.panel.class\", AnyPanel.class.getName());\n-\n         // Application settings\n         IBootstrapSettings settings = new BootstrapSettings();\n \n@@ -236,38 +155,28 @@ protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n             }\n         });\n \n-        if (BooleanUtils.toBoolean(props.getProperty(\"x-forward\"))) {\n+        if (props.isxForward()) {\n             XForwardedRequestWrapperFactory.Config config = new XForwardedRequestWrapperFactory.Config();\n-            config.setProtocolHeader(props.getProperty(\"x-forward.protocol.header\", HttpHeaders.X_FORWARDED_PROTO));\n-            try {\n-                config.setHttpServerPort(Integer.valueOf(props.getProperty(\"x-forward.http.port\", \"80\")));\n-            } catch (NumberFormatException e) {\n-                LOG.error(\"Invalid value provided for 'x-forward.http.port': {}\",\n-                        props.getProperty(\"x-forward.http.port\"));\n-                config.setHttpServerPort(80);\n-            }\n-            try {\n-                config.setHttpsServerPort(Integer.valueOf(props.getProperty(\"x-forward.https.port\", \"443\")));\n-            } catch (NumberFormatException e) {\n-                LOG.error(\"Invalid value provided for 'x-forward.https.port': {}\",\n-                        props.getProperty(\"x-forward.https.port\"));\n-                config.setHttpsServerPort(443);\n-            }\n+            config.setProtocolHeader(props.getxForwardProtocolHeader());\n+            config.setHttpServerPort(props.getxForwardHttpPort());\n+            config.setHttpsServerPort(props.getxForwardHttpsPort());\n \n             XForwardedRequestWrapperFactory factory = new XForwardedRequestWrapperFactory();\n             factory.setConfig(config);\n             getFilterFactoryManager().add(factory);\n         }\n \n-        if (BooleanUtils.toBoolean(props.getProperty(\"csrf\"))) {\n+        if (props.isCsrf()) {\n             getRequestCycleListeners().add(new WebSocketAwareResourceIsolationRequestCycleListener());\n         }\n+\n         getRequestCycleListeners().add(new IRequestCycleListener() {\n \n             @Override\n             public void onEndRequest(final RequestCycle cycle) {\n                 if (cycle.getResponse() instanceof WebResponse && !(cycle.getResponse() instanceof WebSocketResponse)) {\n-                    setSecurityHeaders(props, (WebResponse) cycle.getResponse());\n+                    props.getSecurityHeaders().\n+                            forEach((name, value) -> ((WebResponse) cycle.getResponse()).setHeader(name, value));\n                 }\n             }\n         });\n@@ -322,50 +231,53 @@ public ClassPathScanImplementationLookup getLookup() {\n         return lookup;\n     }\n \n-    public Class<? extends BasePage> getPageClass(final String key) {\n-        return pageClasses.get(key);\n+    public Class<? extends BasePage> getPageClass(final String name) {\n+        return props.getPage().get(name);\n     }\n \n-    public String getAnonymousUser() {\n-        return anonymousUser;\n+    public ThreadPoolTaskExecutor newThreadPoolTaskExecutor() {\n+        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n+        executor.setWaitForTasksToCompleteOnShutdown(false);\n+        executor.setCorePoolSize(props.getTopology().getCorePoolSize());\n+        executor.setMaxPoolSize(props.getTopology().getMaxPoolSize());\n+        executor.setQueueCapacity(props.getTopology().getQueueCapacity());\n+        executor.initialize();\n+        return executor;\n     }\n \n-    public String getAnonymousKey() {\n-        return anonymousKey;\n+    public SyncopeClient newAnonymousClient() {\n+        return newClientFactory().create(\n+                new AnonymousAuthenticationHandler(props.getAnonymousUser(), props.getAnonymousKey()));\n     }\n \n-    public String getReconciliationReportKey() {\n-        return reconciliationReportKey;\n-    }\n-\n-    public Integer getMaxUploadFileSizeMB() {\n-        return maxUploadFileSizeMB;\n+    public SyncopeClientFactoryBean newClientFactory() {\n+        return new SyncopeClientFactoryBean().\n+                setAddress(serviceOps.get(NetworkService.Type.CORE).getAddress()).\n+                setUseCompression(props.isUseGZIPCompression());\n     }\n \n-    public Integer getMaxWaitTimeInSeconds() {\n-        return maxWaitTime;\n+    public String getDefaultAnyPanelClass() {\n+        return props.getDefaultAnyPanelClass();\n     }\n \n-    public Integer getCorePoolSize() {\n-        return corePoolSize;\n+    public String getAnonymousUser() {\n+        return props.getAnonymousUser();\n     }\n \n-    public Integer getMaxPoolSize() {\n-        return maxPoolSize;\n+    public String getAnonymousKey() {\n+        return props.getAnonymousKey();\n     }\n \n-    public Integer getQueueCapacity() {\n-        return queueCapacity;\n+    public String getReconciliationReportKey() {\n+        return props.getReconciliationReportKey();\n     }\n \n-    public String getDefaultAnyLayoutClass() {\n-        return defaultAnyLayoutClass;\n+    public long getMaxWaitTimeInSeconds() {\n+        return props.getMaxWaitTimeOnApplyChanges();\n     }\n \n-    public SyncopeClientFactoryBean newClientFactory() {\n-        return new SyncopeClientFactoryBean().\n-                setAddress(serviceOps.get(NetworkService.Type.CORE).getAddress()).\n-                setUseCompression(useGZIPCompression);\n+    public int getMaxUploadFileSizeMB() {\n+        return props.getMaxUploadFileSizeMB();\n     }\n \n     public ExternalResourceProvider getResourceProvider() {"},{"sha":"e0bcd0e163f40e230baa4b381f0491061a1688f6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/actuate/SyncopeConsoleInfoContributor.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Factuate%2FSyncopeConsoleInfoContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Factuate%2FSyncopeConsoleInfoContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Factuate%2FSyncopeConsoleInfoContributor.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.actuate;\n+\n+import org.apache.syncope.client.console.ConsoleProperties;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.actuate.info.Info;\n+import org.springframework.boot.actuate.info.InfoContributor;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+\n+public class SyncopeConsoleInfoContributor implements InfoContributor {\n+\n+    @Autowired\n+    protected ConsoleProperties consoleProperties;\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Override\n+    public void contribute(final Info.Builder builder) {\n+        builder.withDetail(\"consoleProperties\", consoleProperties);\n+    }\n+}"},{"sha":"ebaec565b63c843d3a25a830cbc8566b3c86a2bd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/AnyLayout.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -41,7 +41,7 @@ public class AnyLayout implements Serializable {\n     private final Map<String, AnyObjectFormLayoutInfo> anyObjects = new HashMap<>();\n \n     public AnyLayout() {\n-        this.anyPanelClass = SyncopeWebApplication.get().getDefaultAnyLayoutClass();\n+        this.anyPanelClass = SyncopeWebApplication.get().getDefaultAnyPanelClass();\n     }\n \n     public String getAnyPanelClass() {"},{"sha":"4fc58f5c2f6b53ee4d66338f75876405ac047840","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -36,8 +36,8 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n@@ -111,9 +111,7 @@ public BinaryFieldPanel(\n \n         previewer = previewUtils.getPreviewer(mimeType);\n \n-        maxUploadSize = SyncopeWebApplication.get().getMaxUploadFileSizeMB() == null\n-                ? null\n-                : Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n+        maxUploadSize = Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n         uploadForm = new StatelessForm<>(\"uploadForm\");\n         uploadForm.setMultiPart(true);\n         add(uploadForm);\n@@ -296,11 +294,6 @@ protected void sendError(final Exception exception) {\n         SyncopeConsoleSession.get().onException(exception);\n     }\n \n-    @Override\n-    protected Integer getMaxUploadFileSizeMB() {\n-        return SyncopeWebApplication.get().getMaxUploadFileSizeMB();\n-    }\n-\n     @Override\n     public FieldPanel<String> setReadOnly(final boolean readOnly) {\n         super.setReadOnly(readOnly);"},{"sha":"bf17a7810c870a2dc1f32c8981375e118a59989c","filename":"client/idrepo/console/src/main/resources/console.properties","status":"modified","additions":52,"deletions":35,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -14,42 +14,59 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-console.directory=${conf.directory}\n+spring.application.name=Apache Syncope ${syncope.version} Console\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n \n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n+server.servlet.encoding.charset=UTF-8\n+server.servlet.encoding.enabled=true\n+server.servlet.encoding.force=true\n \n-useGZIPCompression=true\n-maxUploadFileSizeMB=5\n+server.servlet.contextPath=/syncope-console\n+\n+management.endpoints.web.exposure.include=info,health,loggers\n+management.endpoint.health.show-details=ALWAYS\n+\n+service.discovery.address=http://localhost:8080/syncope-console/\n+\n+wicket.core.csrf.enabled=false\n+\n+logging.config=classpath:/log4j2.xml\n+\n+console.anonymousUser=${anonymousUser}\n+console.anonymousKey=${anonymousKey}\n+\n+console.useGZIPCompression=true\n+console.maxUploadFileSizeMB=5\n \n # Max wait time on apply changes from modals/wizards (given in seconds)\n-maxWaitTimeOnApplyChanges=30\n-\n-reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n-\n-page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n-page.realms=org.apache.syncope.client.console.pages.Realms\n-page.reports=org.apache.syncope.client.console.pages.Reports\n-page.audit=org.apache.syncope.client.console.pages.Audit\n-page.implementations=org.apache.syncope.client.console.pages.Implementations\n-page.logs=org.apache.syncope.client.console.pages.Logs\n-page.security=org.apache.syncope.client.console.pages.Security\n-page.types=org.apache.syncope.client.console.pages.Types\n-page.policies=org.apache.syncope.client.console.pages.Policies\n-page.notifications=org.apache.syncope.client.console.pages.Notifications\n-page.parameters=org.apache.syncope.client.console.pages.Parameters\n-\n-default.any.panel.class=org.apache.syncope.client.console.panels.AnyPanel\n-\n-topology.corePoolSize=10\n-topology.maxPoolSize=20\n-topology.queueCapacity=50\n-\n-x-forward=true\n-csrf=true\n-\n-security.headers.X-XSS-Protection=1; mode=block\n-security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n-security.headers.X-Content-Type-Options=nosniff\n-security.headers.X-Frame-Options=sameorigin\n-#security.headers.Content-Security-Policy=default-src https:\n+console.maxWaitTimeOnApplyChanges=30\n+\n+console.reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n+\n+console.page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n+console.page.realms=org.apache.syncope.client.console.pages.Realms\n+console.page.reports=org.apache.syncope.client.console.pages.Reports\n+console.page.audit=org.apache.syncope.client.console.pages.Audit\n+console.page.implementations=org.apache.syncope.client.console.pages.Implementations\n+console.page.logs=org.apache.syncope.client.console.pages.Logs\n+console.page.security=org.apache.syncope.client.console.pages.Security\n+console.page.types=org.apache.syncope.client.console.pages.Types\n+console.page.policies=org.apache.syncope.client.console.pages.Policies\n+console.page.notifications=org.apache.syncope.client.console.pages.Notifications\n+console.page.parameters=org.apache.syncope.client.console.pages.Parameters\n+\n+console.default-any-panel-class=org.apache.syncope.client.console.panels.AnyPanel\n+\n+console.topology.corePoolSize=10\n+console.topology.maxPoolSize=20\n+console.topology.queueCapacity=50\n+\n+console.x-forward=true\n+console.csrf=true\n+\n+console.security-headers.X-XSS-Protection=1; mode=block\n+console.security-headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+console.security-headers.X-Content-Type-Options=nosniff\n+console.security-headers.X-Frame-Options=sameorigin\n+#console.security-headers.Content-Security-Policy=default-src https:"},{"sha":"a3d45e263e12570dc05eee8af711d02b200cedff","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":17,"deletions":11,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,10 +29,8 @@\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.core.settings.general.GeneralSettingsProperties;\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.HashMap;\n import java.util.List;\n-import java.util.Properties;\n import java.util.Set;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n@@ -90,6 +88,21 @@ public abstract class AbstractTest {\n     @Configuration\n     public static class SyncopeConsoleWebApplicationTestConfig {\n \n+        @Bean\n+        public ConsoleProperties consoleProperties() {\n+            ConsoleProperties consoleProperties = new ConsoleProperties();\n+\n+            consoleProperties.getSecurityHeaders().put(\"X-XSS-Protection\", \"1; mode=block\");\n+            consoleProperties.getSecurityHeaders().\n+                    put(\"Strict-Transport-Security\", \"max-age=31536000; includeSubDomains; preload\");\n+            consoleProperties.getSecurityHeaders().put(\"X-Content-Type-Options\", \"nosniff\");\n+            consoleProperties.getSecurityHeaders().put(\"X-Frame-Options\", \"sameorigin\");\n+\n+            consoleProperties.setAnonymousUser(\"anonymousUser\");\n+\n+            return consoleProperties;\n+        }\n+\n         @Bean\n         public ServiceOps selfServiceOps() {\n             return mock(ServiceOps.class);\n@@ -294,25 +307,18 @@ public SyncopeClientFactoryBean newClientFactory() {\n         }\n     }\n \n-    protected static Properties PROPS;\n+    protected static ConsoleProperties PROPS;\n \n     protected static WicketTester TESTER;\n \n-    @BeforeAll\n-    public static void loadProps() throws IOException {\n-        PROPS = new Properties();\n-        try (InputStream is = AbstractTest.class.getResourceAsStream(\"/console.properties\")) {\n-            PROPS.load(is);\n-        }\n-    }\n-\n     @BeforeAll\n     public static void setupTester() throws IOException {\n         AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n         ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n         ctx.register(TestSyncopeWebApplication.class);\n         ctx.refresh();\n \n+        PROPS = ctx.getBean(ConsoleProperties.class);\n         TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n     }\n }"},{"sha":"da07d3dcba0d0af205fb6c67bec17fed6b8936ab","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/SyncopeConsoleApplicationTest.java","status":"modified","additions":1,"deletions":18,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplicationTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,8 +25,6 @@\n \n import java.io.IOException;\n import java.security.AccessControlException;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.ExecutionException;\n import javax.ws.rs.BadRequestException;\n@@ -42,24 +40,9 @@\n \n public class SyncopeConsoleApplicationTest extends AbstractTest {\n \n-    private Map<String, String> getConfiguredSecurityHeaders() throws IOException {\n-        Map<String, String> securityHeaders = new HashMap<>();\n-\n-        @SuppressWarnings(\"unchecked\")\n-        Enumeration<String> propNames = (Enumeration<String>) PROPS.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String name = propNames.nextElement();\n-            if (name.startsWith(\"security.headers.\")) {\n-                securityHeaders.put(StringUtils.substringAfter(name, \"security.headers.\"), PROPS.getProperty(name));\n-            }\n-        }\n-\n-        return securityHeaders;\n-    }\n-\n     @Test\n     public void securityHeaders() throws IOException {\n-        Map<String, String> securityHeaders = getConfiguredSecurityHeaders();\n+        Map<String, String> securityHeaders = PROPS.getSecurityHeaders();\n         assertEquals(4, securityHeaders.size());\n \n         // 1. anonymous"},{"sha":"990acb05b67630a1472e3a989d426ce7b9c95e31","filename":"client/idrepo/console/src/test/resources/console-debug.properties","status":"renamed","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -20,3 +20,5 @@ keymaster.password=${anonymousKey}\n \n server.port=9090\n service.discovery.address=http://localhost:9090/syncope-console/\n+\n+logging.config=file://${project.build.testOutputDirectory}/log4j2.xml","previous_filename":"client/idrepo/console/src/test/resources/application-debug.properties"},{"sha":"c57064db71385a93c0d6c59bea15eede5a17a096","filename":"client/idrepo/console/src/test/resources/log4j2.xml","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,34 +21,33 @@ under the License.\n \n   <appenders>\n \n-    <Console name=\"main\" target=\"SYSTEM_OUT\">\n-      <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\"/>\n+    <Console name=\"console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+      <PatternLayout pattern=\"%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} [%11.11t] %style{%-60.60c{60}}{cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n     </Console>\n     \n   </appenders>\n-\n+  \n   <loggers>\n-\n+    \n     <asyncLogger name=\"org.apache.syncope.client.lib\" additivity=\"false\" level=\"OFF\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n \n     <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n     \n-    <root level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+    <root level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n     </root>\n-  \n+    \n   </loggers>\n-  \n </configuration>"},{"sha":"6c127c788726096970658d847610cde2df0dba4d","filename":"client/idrepo/enduser/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -297,8 +297,8 @@ under the License.\n         </dependency>\n \n         <dependency>\n-          <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-          <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+          <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+          <artifactId>syncope-common-keymaster-client-self</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n "},{"sha":"95fd53f1da10aa960551668112d7af2011b19677","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/EnduserProperties.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FEnduserProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.syncope.client.enduser.pages.BasePage;\n+import org.apache.syncope.client.enduser.panels.Sidebar;\n+import org.apache.syncope.client.ui.commons.CommonUIProperties;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"enduser\")\n+public class EnduserProperties extends CommonUIProperties {\n+\n+    private String adminUser;\n+\n+    private Class<? extends Sidebar> sidebar = Sidebar.class;\n+\n+    private String customFormLayout = \"classpath:/customFormLayout.json\";\n+\n+    private boolean captcha;\n+\n+    private final Map<String, Class<? extends BasePage>> page = new HashMap<>();\n+\n+    public String getAdminUser() {\n+        return adminUser;\n+    }\n+\n+    public void setAdminUser(final String adminUser) {\n+        this.adminUser = adminUser;\n+    }\n+\n+    public Class<? extends Sidebar> getSidebar() {\n+        return sidebar;\n+    }\n+\n+    public void setSidebar(final Class<? extends Sidebar> sidebar) {\n+        this.sidebar = sidebar;\n+    }\n+\n+    public String getCustomFormLayout() {\n+        return customFormLayout;\n+    }\n+\n+    public void setCustomFormLayout(final String customFormLayout) {\n+        this.customFormLayout = customFormLayout;\n+    }\n+\n+    public boolean isCaptcha() {\n+        return captcha;\n+    }\n+\n+    public void setCaptcha(final boolean captcha) {\n+        this.captcha = captcha;\n+    }\n+\n+    public Map<String, Class<? extends BasePage>> getPage() {\n+        return page;\n+    }\n+}"},{"sha":"a9537a6c340df426f219301804e69f640df3acd1","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SecurityConfig.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.enduser;\n \n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n@@ -31,17 +31,14 @@\n @Configuration\n public class SecurityConfig extends WebSecurityConfigurerAdapter {\n \n-    @Value(\"${anonymousUser}\")\n-    private String anonymousUser;\n-\n-    @Value(\"${anonymousKey}\")\n-    private String anonymousKey;\n+    @Autowired\n+    private EnduserProperties props;\n \n     @Override\n     protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\n         auth.inMemoryAuthentication().\n-                withUser(anonymousUser).\n-                password(\"{noop}\" + anonymousKey).\n+                withUser(props.getAnonymousUser()).\n+                password(\"{noop}\" + props.getAnonymousKey()).\n                 roles(IdRepoEntitlement.ANONYMOUS);\n     }\n "},{"sha":"2dfe2a608703d7deaccc7c72ddfb074842c27d9f","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":30,"deletions":8,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,39 +19,51 @@\n package org.apache.syncope.client.enduser;\n \n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n+import java.util.Map;\n+import org.apache.syncope.client.enduser.actuate.SyncopeEnduserInfoContributor;\n import org.apache.syncope.client.enduser.commons.PreviewUtils;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.client.ui.commons.MIMETypesLoader;\n import org.apache.syncope.client.ui.commons.actuate.SyncopeCoreHealthIndicator;\n+import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n-import org.springframework.boot.SpringApplication;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.PropertySource;\n \n-@PropertySource(\"classpath:enduser.properties\")\n-@PropertySource(value = \"file:${console.directory}/enduser.properties\", ignoreResourceNotFound = true)\n @SpringBootApplication(exclude = {\n     ErrorMvcAutoConfiguration.class,\n     HttpMessageConvertersAutoConfiguration.class })\n+@EnableConfigurationProperties(EnduserProperties.class)\n public class SyncopeEnduserApplication extends SpringBootServletInitializer {\n \n     public static void main(final String[] args) {\n-        SpringApplication.run(SyncopeEnduserApplication.class, args);\n+        new SpringApplicationBuilder(SyncopeEnduserApplication.class).\n+                properties(\"spring.config.name:enduser\").\n+                build().run(args);\n     }\n \n+    @Autowired\n+    private ServiceOps serviceOps;\n+\n+    @Autowired\n+    private EnduserProperties props;\n+\n     @Override\n     protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n-        builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n-        return super.configure(builder);\n+        return builder.properties(Map.of(\n+                WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED, false,\n+                \"spring.config.name\", \"enduser\")).\n+                sources(SyncopeEnduserApplication.class);\n     }\n \n     @Bean\n@@ -62,7 +74,17 @@ public ApplicationContextProvider applicationContextProvider() {\n     @ConditionalOnMissingBean\n     @Bean\n     public SyncopeCoreHealthIndicator syncopeCoreHealthIndicator() {\n-        return new SyncopeCoreHealthIndicator();\n+        return new SyncopeCoreHealthIndicator(\n+                serviceOps,\n+                props.getAnonymousUser(),\n+                props.getAnonymousKey(),\n+                props.isUseGZIPCompression());\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SyncopeEnduserInfoContributor syncopeEnduserInfoContributor() {\n+        return new SyncopeEnduserInfoContributor();\n     }\n \n     @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")"},{"sha":"f5bca470d73f3a8891268ea2f0ea89c3dcc6b48c","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":4,"deletions":25,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,7 +22,6 @@\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.client.ui.commons.BaseSession;\n@@ -39,8 +38,6 @@\n import org.apache.wicket.request.Request;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.core.task.TaskRejectedException;\n-import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n import javax.ws.rs.BadRequestException;\n import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.core.EntityTag;\n@@ -97,8 +94,6 @@ public String fallback() {\n \n     private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<>());\n \n-    private final ThreadPoolTaskExecutor executor;\n-\n     private String domain;\n \n     private SyncopeClient client;\n@@ -113,17 +108,10 @@ public SyncopeEnduserSession(final Request request) {\n         super(request);\n \n         clientFactory = SyncopeWebApplication.get().newClientFactory();\n-        anonymousClient = clientFactory.\n-                create(new AnonymousAuthenticationHandler(\n-                        SyncopeWebApplication.get().getAnonymousUser(),\n-                        SyncopeWebApplication.get().getAnonymousKey()));\n+        anonymousClient = SyncopeWebApplication.get().newAnonymousClient();\n \n         platformInfo = anonymousClient.platform();\n         systemInfo = anonymousClient.system();\n-\n-        executor = new ThreadPoolTaskExecutor();\n-        executor.setWaitForTasksToCompleteOnShutdown(false);\n-        executor.initialize();\n     }\n \n     protected String message(final SyncopeClientException sce) {\n@@ -176,23 +164,14 @@ public MediaType getMediaType() {\n         return clientFactory.getContentType().getMediaType();\n     }\n \n-    public void execute(final Runnable command) {\n-        try {\n-            executor.execute(command);\n-        } catch (TaskRejectedException e) {\n-            LOG.error(\"Could not execute {}\", command, e);\n-        }\n-    }\n-\n     @Override\n     public <T> Future<T> execute(final Callable<T> command) {\n         try {\n-            return executor.submit(command);\n-        } catch (TaskRejectedException e) {\n+            return CompletableFuture.completedFuture(command.call());\n+        } catch (Exception e) {\n             LOG.error(\"Could not execute {}\", command, e);\n-\n-            return new CompletableFuture<>();\n         }\n+        return new CompletableFuture<>();\n     }\n \n     @Override"},{"sha":"95a0d5e80edf0b1802ae2a4ef95452cb5d452a2a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":46,"deletions":244,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,29 +21,13 @@\n import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.giffing.wicket.spring.boot.starter.app.WicketBootStandardWebApplication;\n-import com.google.common.net.HttpHeaders;\n import de.agilecoders.wicket.core.Bootstrap;\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n-import java.io.File;\n-import java.io.IOException;\n import java.io.InputStream;\n-import java.util.Collections;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import org.apache.commons.io.FileUtils;\n-import org.apache.commons.io.monitor.FileAlterationListener;\n-import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;\n-import org.apache.commons.io.monitor.FileAlterationMonitor;\n-import org.apache.commons.io.monitor.FileAlterationObserver;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.ClassUtils;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.enduser.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.enduser.pages.BasePage;\n@@ -52,13 +36,14 @@\n import org.apache.syncope.client.enduser.pages.MustChangePassword;\n import org.apache.syncope.client.enduser.pages.SelfConfirmPasswordReset;\n import org.apache.syncope.client.enduser.panels.Sidebar;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n+import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.client.ui.commons.SyncopeUIRequestCycleListener;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n import org.apache.syncope.client.ui.commons.themes.AdminLTE;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n-import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.wicket.Page;\n import org.apache.wicket.Session;\n import org.apache.wicket.WicketRuntimeException;\n@@ -79,188 +64,41 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.core.io.ResourceLoader;\n import org.springframework.stereotype.Component;\n \n @Component\n public class SyncopeWebApplication extends WicketBootStandardWebApplication {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n-\n-    private static final String ENDUSER_PROPERTIES = \"enduser.properties\";\n-\n-    private static final String CUSTOM_FORM_LAYOUT_FILE = \"customFormLayout.json\";\n+    protected static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n \n     public static final List<Locale> SUPPORTED_LOCALES = List.of(\n             Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE);\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n+    protected static final ObjectMapper MAPPER = new ObjectMapper();\n \n     public static SyncopeWebApplication get() {\n         return (SyncopeWebApplication) WebApplication.get();\n     }\n \n     @Autowired\n-    private ClassPathScanImplementationLookup lookup;\n+    protected ResourceLoader resourceLoader;\n \n     @Autowired\n-    private ServiceOps serviceOps;\n-\n-    @Value(\"${adminUser}\")\n-    private String adminUser;\n-\n-    @Value(\"${anonymousUser}\")\n-    protected String anonymousUser;\n-\n-    @Value(\"${anonymousKey}\")\n-    protected String anonymousKey;\n-\n-    @Value(\"${useGZIPCompression:false}\")\n-    protected boolean useGZIPCompression;\n-\n-    @Value(\"${captchaEnabled:false}\")\n-    private boolean captchaEnabled;\n-\n-    @Value(\"${maxUploadFileSizeMB:#{null}}\")\n-    protected Integer maxUploadFileSizeMB;\n-\n-    @Value(\"${maxWaitTime:30}\")\n-    protected Integer maxWaitTime;\n-\n-    @Value(\"${corePoolSize:5}\")\n-    protected Integer corePoolSize;\n+    protected EnduserProperties props;\n \n-    @Value(\"${maxPoolSize:10}\")\n-    protected Integer maxPoolSize;\n-\n-    @Value(\"${queueCapacity:50}\")\n-    protected Integer queueCapacity;\n-\n-    private FileAlterationMonitor customFormLayoutMonitor;\n-\n-    private Map<String, Class<? extends BasePage>> pageClasses;\n-\n-    private Class<? extends Sidebar> sidebar;\n-\n-    private UserFormLayoutInfo customFormLayout;\n+    @Autowired\n+    protected ClassPathScanImplementationLookup lookup;\n \n-    @SuppressWarnings(\"unchecked\")\n-    protected void populatePageClasses(final Properties props) {\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String className = propNames.nextElement();\n-            if (className.startsWith(\"page.\")) {\n-                try {\n-                    Class<?> clazz = ClassUtils.getClass(props.getProperty(className));\n-                    if (BasePage.class.isAssignableFrom(clazz)) {\n-                        pageClasses.put(\n-                                StringUtils.substringAfter(className, \"page.\"), (Class<? extends BasePage>) clazz);\n-                    } else {\n-                        LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n-                    }\n-                } catch (ClassNotFoundException e) {\n-                    LOG.error(\"While looking for class identified by property '{}'\", className, e);\n-                }\n-            }\n-        }\n-    }\n+    @Autowired\n+    protected ServiceOps serviceOps;\n \n-    protected static void setSecurityHeaders(final Properties props, final WebResponse response) {\n-        @SuppressWarnings(\"unchecked\")\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String name = propNames.nextElement();\n-            if (name.startsWith(\"security.headers.\")) {\n-                response.setHeader(StringUtils.substringAfter(name, \"security.headers.\"), props.getProperty(name));\n-            }\n-        }\n-    }\n+    protected UserFormLayoutInfo customFormLayout;\n \n     @Override\n     protected void init() {\n         super.init();\n \n-        // read enduser.properties\n-        Properties props = PropertyUtils.read(getClass(), ENDUSER_PROPERTIES, \"enduser.directory\");\n-\n-        // read customFormLayout.json\n-        try (InputStream is = SyncopeWebApplication.class.getResourceAsStream('/' + CUSTOM_FORM_LAYOUT_FILE)) {\n-            customFormLayout = MAPPER.readValue(is, new TypeReference<>() {\n-            });\n-            File enduserDir = new File(props.getProperty(\"enduser.directory\"));\n-            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n-            if (existsEnduserDir) {\n-                File customFormLayoutFile = FileUtils.getFile(enduserDir, CUSTOM_FORM_LAYOUT_FILE);\n-                if (customFormLayoutFile.exists()\n-                        && customFormLayoutFile.canRead()\n-                        && customFormLayoutFile.isFile()) {\n-                    customFormLayout = MAPPER.readValue(FileUtils.openInputStream(customFormLayoutFile),\n-                        new TypeReference<>() {\n-                        });\n-                }\n-            }\n-            FileAlterationObserver observer = existsEnduserDir\n-                    ? new FileAlterationObserver(\n-                            enduserDir,\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_LAYOUT_FILE))\n-                    : new FileAlterationObserver(\n-                            SyncopeWebApplication.class.getResource('/' + CUSTOM_FORM_LAYOUT_FILE).getFile(),\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_LAYOUT_FILE));\n-\n-            customFormLayoutMonitor = new FileAlterationMonitor(5000);\n-\n-            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n-\n-                @Override\n-                public void onFileChange(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has changed. Reloading form attributes customization configuration.\",\n-                                CUSTOM_FORM_LAYOUT_FILE);\n-                        customFormLayout = MAPPER.readValue(FileUtils.openInputStream(file),\n-                            new TypeReference<>() {\n-                            });\n-                    } catch (IOException e) {\n-                        LOG.error(\"{} While reading app customization configuration.\",\n-                                CUSTOM_FORM_LAYOUT_FILE, e);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileCreate(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has been created. Loading form attributes customization configuration.\",\n-                                CUSTOM_FORM_LAYOUT_FILE);\n-                        customFormLayout = MAPPER.readValue(FileUtils.openInputStream(file),\n-                            new TypeReference<>() {\n-                            });\n-                    } catch (IOException e) {\n-                        LOG.error(\"{} While reading app customization configuration.\",\n-                                CUSTOM_FORM_LAYOUT_FILE, e);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileDelete(final File file) {\n-                    LOG.trace(\"{} has been deleted. Resetting form attributes customization configuration.\",\n-                            CUSTOM_FORM_LAYOUT_FILE);\n-                    customFormLayout = null;\n-                }\n-            };\n-\n-            observer.addListener(listener);\n-            customFormLayoutMonitor.addObserver(observer);\n-            customFormLayoutMonitor.start();\n-        } catch (Exception e) {\n-            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_FORM_LAYOUT_FILE, e);\n-        }\n-\n-        // process page properties\n-        pageClasses = new HashMap<>();\n-        populatePageClasses(props);\n-        pageClasses = Collections.unmodifiableMap(pageClasses);\n-\n-        buildSidebarClass(props);\n-\n         // Application settings\n         IBootstrapSettings settings = new BootstrapSettings();\n \n@@ -295,38 +133,28 @@ protected IRequestablePage getErrorPage(final PageParameters errorParameters) {\n             }\n         });\n \n-        if (BooleanUtils.toBoolean(props.getProperty(\"x-forward\"))) {\n+        if (props.isxForward()) {\n             XForwardedRequestWrapperFactory.Config config = new XForwardedRequestWrapperFactory.Config();\n-            config.setProtocolHeader(props.getProperty(\"x-forward.protocol.header\", HttpHeaders.X_FORWARDED_PROTO));\n-            try {\n-                config.setHttpServerPort(Integer.valueOf(props.getProperty(\"x-forward.http.port\", \"80\")));\n-            } catch (NumberFormatException e) {\n-                LOG.error(\"Invalid value provided for 'x-forward.http.port': {}\",\n-                        props.getProperty(\"x-forward.http.port\"));\n-                config.setHttpServerPort(80);\n-            }\n-            try {\n-                config.setHttpsServerPort(Integer.valueOf(props.getProperty(\"x-forward.https.port\", \"443\")));\n-            } catch (NumberFormatException e) {\n-                LOG.error(\"Invalid value provided for 'x-forward.https.port': {}\",\n-                        props.getProperty(\"x-forward.https.port\"));\n-                config.setHttpsServerPort(443);\n-            }\n+            config.setProtocolHeader(props.getxForwardProtocolHeader());\n+            config.setHttpServerPort(props.getxForwardHttpPort());\n+            config.setHttpsServerPort(props.getxForwardHttpsPort());\n \n             XForwardedRequestWrapperFactory factory = new XForwardedRequestWrapperFactory();\n             factory.setConfig(config);\n             getFilterFactoryManager().add(factory);\n         }\n \n-        if (BooleanUtils.toBoolean(props.getProperty(\"csrf\"))) {\n+        if (props.isCsrf()) {\n             getRequestCycleListeners().add(new ResourceIsolationRequestCycleListener());\n         }\n+\n         getRequestCycleListeners().add(new IRequestCycleListener() {\n \n             @Override\n             public void onEndRequest(final RequestCycle cycle) {\n                 if (cycle.getResponse() instanceof WebResponse) {\n-                    setSecurityHeaders(props, (WebResponse) cycle.getResponse());\n+                    props.getSecurityHeaders().\n+                            forEach((name, value) -> ((WebResponse) cycle.getResponse()).setHeader(name, value));\n                 }\n             }\n         });\n@@ -354,23 +182,19 @@ public IResource getResource() {\n             }\n         }\n \n+        try (InputStream is = resourceLoader.getResource(props.getCustomFormLayout()).getInputStream()) {\n+            customFormLayout = MAPPER.readValue(is, new TypeReference<>() {\n+            });\n+        } catch (Exception e) {\n+            throw new WicketRuntimeException(\"Could not read \" + props.getCustomFormLayout(), e);\n+        }\n+\n         // enable component path\n         if (getDebugSettings().isAjaxDebugModeEnabled()) {\n             getDebugSettings().setComponentPathAttributeName(\"syncope-path\");\n         }\n     }\n \n-    @Override\n-    protected void onDestroy() {\n-        if (customFormLayoutMonitor != null) {\n-            try {\n-                customFormLayoutMonitor.stop(0);\n-            } catch (Exception e) {\n-                LOG.error(\"{} While stopping file monitor\", CUSTOM_FORM_LAYOUT_FILE, e);\n-            }\n-        }\n-    }\n-\n     @Override\n     public Class<? extends Page> getHomePage() {\n         return SyncopeEnduserSession.get().isAuthenticated()\n@@ -385,85 +209,63 @@ public ClassPathScanImplementationLookup getLookup() {\n         return lookup;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private void buildSidebarClass(final Properties props) {\n-        try {\n-            Class<?> clazz = ClassUtils.getClass(props.getProperty(\"sidebar\", Sidebar.class.getCanonicalName()));\n-            if (Sidebar.class.isAssignableFrom(clazz)) {\n-                sidebar = (Class<? extends Sidebar>) clazz;\n-            } else {\n-                LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), Sidebar.class.getName());\n-            }\n-        } catch (ClassNotFoundException e) {\n-            LOG.error(\"While looking for class identified by property 'sidebar'\", e);\n-        }\n-    }\n-\n     public UserFormLayoutInfo getCustomFormLayout() {\n         return customFormLayout;\n     }\n \n     public Class<? extends Sidebar> getSidebar() {\n-        return sidebar;\n+        return props.getSidebar();\n     }\n \n     @Override\n     public Session newSession(final Request request, final Response response) {\n         return new SyncopeEnduserSession(request);\n     }\n \n+    public SyncopeClient newAnonymousClient() {\n+        return newClientFactory().create(\n+                new AnonymousAuthenticationHandler(props.getAnonymousUser(), props.getAnonymousKey()));\n+    }\n+\n     public SyncopeClientFactoryBean newClientFactory() {\n         return new SyncopeClientFactoryBean().\n                 setAddress(serviceOps.get(NetworkService.Type.CORE).getAddress()).\n-                setUseCompression(useGZIPCompression);\n+                setUseCompression(props.isUseGZIPCompression());\n     }\n \n-    public Class<? extends BasePage> getPageClass(final String key) {\n-        return pageClasses.get(key);\n+    public Class<? extends BasePage> getPageClass(final String name) {\n+        return props.getPage().get(name);\n     }\n \n-    public Class<? extends BasePage> getPageClass(final String key, final Class<? extends BasePage> defaultValue) {\n-        return pageClasses.getOrDefault(key, defaultValue);\n+    public Class<? extends BasePage> getPageClass(final String name, final Class<? extends BasePage> defaultValue) {\n+        return props.getPage().getOrDefault(name, defaultValue);\n     }\n \n     protected Class<? extends WebPage> getSignInPageClass() {\n         return Login.class;\n     }\n \n     public String getAdminUser() {\n-        return adminUser;\n+        return props.getAdminUser();\n     }\n \n     public String getAnonymousUser() {\n-        return anonymousUser;\n+        return props.getAnonymousUser();\n     }\n \n     public String getAnonymousKey() {\n-        return anonymousKey;\n+        return props.getAnonymousKey();\n     }\n \n     public boolean isCaptchaEnabled() {\n-        return captchaEnabled;\n+        return props.isCaptcha();\n     }\n \n-    public Integer getMaxUploadFileSizeMB() {\n-        return maxUploadFileSizeMB;\n-    }\n-\n-    public Integer getCorePoolSize() {\n-        return corePoolSize;\n-    }\n-\n-    public Integer getMaxPoolSize() {\n-        return maxPoolSize;\n+    public long getMaxWaitTimeInSeconds() {\n+        return props.getMaxWaitTimeOnApplyChanges();\n     }\n \n-    public Integer getQueueCapacity() {\n-        return queueCapacity;\n-    }\n-\n-    public Integer getMaxWaitTimeInSeconds() {\n-        return maxWaitTime;\n+    public Integer getMaxUploadFileSizeMB() {\n+        return props.getMaxUploadFileSizeMB();\n     }\n-\n }"},{"sha":"6d4db1b2ea9eda2681d3debe69cff35de2386e05","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/actuate/SyncopeEnduserInfoContributor.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Factuate%2FSyncopeEnduserInfoContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Factuate%2FSyncopeEnduserInfoContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Factuate%2FSyncopeEnduserInfoContributor.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.actuate;\n+\n+import org.apache.syncope.client.enduser.EnduserProperties;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.actuate.info.Info;\n+import org.springframework.boot.actuate.info.InfoContributor;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+\n+public class SyncopeEnduserInfoContributor implements InfoContributor {\n+\n+    @Autowired\n+    protected EnduserProperties enduserProperties;\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Override\n+    public void contribute(final Info.Builder builder) {\n+        builder.withDetail(\"enduserProperties\", enduserProperties);\n+    }\n+}"},{"sha":"751e76ec9b0b19f5ce4f80904a14b68cc7b807d8","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -295,11 +295,6 @@ protected void sendError(final Exception exception) {\n         SyncopeEnduserSession.get().onException(exception);\n     }\n \n-    @Override\n-    protected Integer getMaxUploadFileSizeMB() {\n-        return SyncopeWebApplication.get().getMaxUploadFileSizeMB();\n-    }\n-\n     @Override\n     public FieldPanel<String> setReadOnly(final boolean readOnly) {\n         super.setReadOnly(readOnly);"},{"sha":"2132b5e2ad21e14896ec168ddd99035b05d48bc7","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"943f826f11c84b30c0918d045cfca66ec64b52db","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"aa25cd32c3e63b6b57395ef96129f329f796a08f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"441997fceeec2083aa8a9f8405a54ffab860871a","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-300italic.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"24d28240ab6f2599574ff57433eba3933112e67f","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"9ec7d257b194d4efd4c06cbd56ccffb37f048e92","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"ce5a1cccaeb3442525fdf948fbcf2108982046f4","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"7ed2f82eaad288f8bbb66f86b9906f13acdaedca","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-600italic.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"9fbfe68ce855d8cbb32eb392fc22f8707ab91759","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"096dcb150e9589c39c239199741c97a213097b9c","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-700.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"c1cf1ea7861a760db5b516c1c889d1d7a1f66d5a","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"ff006be7822524e04919e0e7233574f3d85e01b7","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-italic.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"e8a1ac774e4c4e932070d0b23a112535c88810c5","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"1b0bc4683bddcb51584a6ea942372d634cfa9bbf","filename":"client/idrepo/enduser/src/main/resources/META-INF/resources/css/fonts/source-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","status":"removed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ffonts%2Fsource-sans-pro-v11-latin-ext_cyrillic_latin_cyrillic-ext-regular.woff2?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb"},{"sha":"a10cbce281a4e3bc4079294746a5f7725c5adaa2","filename":"client/idrepo/enduser/src/main/resources/enduser.properties","status":"modified","additions":40,"deletions":20,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -14,29 +14,49 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-enduser.directory=${conf.directory}\n+spring.application.name=Apache Syncope ${syncope.version} Enduser\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n \n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-adminUser=${adminUser}\n-useGZIPCompression=true\n-maxUploadFileSizeMB=5\n+server.servlet.encoding.charset=UTF-8\n+server.servlet.encoding.enabled=true\n+server.servlet.encoding.force=true\n \n-x-forward=true\n-captcha=true\n-csrf=true\n+server.servlet.contextPath=/syncope-enduser\n+\n+management.endpoints.web.exposure.include=info,health,loggers\n+management.endpoint.health.show-details=ALWAYS\n+\n+service.discovery.address=http://localhost:8080/syncope-enduser/\n+\n+wicket.core.csrf.enabled=false\n+\n+logging.config=classpath:/log4j2.xml\n+\n+enduser.anonymousUser=${anonymousUser}\n+enduser.anonymousKey=${anonymousKey}\n+enduser.adminUser=${adminUser}\n+enduser.useGZIPCompression=true\n+enduser.maxUploadFileSizeMB=5\n+\n+enduser.x-forward=true\n+enduser.captcha=true\n+enduser.csrf=true\n \n # Sidebar\n-sidebar=org.apache.syncope.client.enduser.panels.Sidebar\n+enduser.sidebar=org.apache.syncope.client.enduser.panels.Sidebar\n \n # Page\n-page.profile=org.apache.syncope.client.enduser.pages.Dashboard\n-page.edituser=org.apache.syncope.client.enduser.pages.EditUser\n-page.editchangepassword=org.apache.syncope.client.enduser.pages.EditChangePassword\n-page.editsecurityquestion=org.apache.syncope.client.enduser.pages.EditSecurityQuestion\n-\n-security.headers.X-XSS-Protection=1; mode=block\n-security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n-security.headers.X-Content-Type-Options=nosniff\n-security.headers.X-Frame-Options=sameorigin\n-#security.headers.Content-Security-Policy=default-src https:\n+enduser.page.profile=org.apache.syncope.client.enduser.pages.Dashboard\n+enduser.page.edituser=org.apache.syncope.client.enduser.pages.EditUser\n+enduser.page.editchangepassword=org.apache.syncope.client.enduser.pages.EditChangePassword\n+enduser.page.editsecurityquestion=org.apache.syncope.client.enduser.pages.EditSecurityQuestion\n+\n+# Custom Form layout\n+enduser.custom-form-layout=classpath:/customFormLayout.json\n+\n+enduser.security.headers.X-XSS-Protection=1; mode=block\n+enduser.security.headers.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload\n+enduser.security.headers.X-Content-Type-Options=nosniff\n+enduser.security.headers.X-Frame-Options=sameorigin\n+#enduser.security.headers.Content-Security-Policy=default-src https:"},{"sha":"9ae41d83aacfcbf05e224613f3b13a15ffd00d6c","filename":"client/idrepo/enduser/src/test/java/org/apache/syncope/client/enduser/AbstractTest.java","status":"modified","additions":19,"deletions":11,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FAbstractTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,10 +29,8 @@\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.core.settings.general.GeneralSettingsProperties;\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.util.HashMap;\n import java.util.List;\n-import java.util.Properties;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n@@ -69,6 +67,23 @@ public abstract class AbstractTest {\n     @Configuration\n     public static class SyncopeEnduserWebApplicationTestConfig {\n \n+        @Bean\n+        public EnduserProperties enduserProperties() {\n+            EnduserProperties enduserProperties = new EnduserProperties();\n+\n+            enduserProperties.getSecurityHeaders().put(\"X-XSS-Protection\", \"1; mode=block\");\n+            enduserProperties.getSecurityHeaders().\n+                    put(\"Strict-Transport-Security\", \"max-age=31536000; includeSubDomains; preload\");\n+            enduserProperties.getSecurityHeaders().put(\"X-Content-Type-Options\", \"nosniff\");\n+            enduserProperties.getSecurityHeaders().put(\"X-Frame-Options\", \"sameorigin\");\n+\n+            enduserProperties.setAdminUser(\"admin\");\n+\n+            enduserProperties.setAnonymousUser(\"anonymousUser\");\n+\n+            return enduserProperties;\n+        }\n+\n         @Bean\n         public ServiceOps selfServiceOps() {\n             return mock(ServiceOps.class);\n@@ -223,25 +238,18 @@ public SyncopeClientFactoryBean newClientFactory() {\n         }\n     }\n \n-    protected static Properties PROPS;\n+    protected static EnduserProperties PROPS;\n \n     protected static WicketTester TESTER;\n \n-    @BeforeAll\n-    public static void loadProps() throws IOException {\n-        PROPS = new Properties();\n-        try (InputStream is = AbstractTest.class.getResourceAsStream(\"/enduser.properties\")) {\n-            PROPS.load(is);\n-        }\n-    }\n-\n     @BeforeAll\n     public static void setupTester() throws IOException {\n         AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n         ctx.register(SyncopeEnduserWebApplicationTestConfig.class);\n         ctx.register(TestSyncopeWebApplication.class);\n         ctx.refresh();\n \n+        PROPS = ctx.getBean(EnduserProperties.class);\n         TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n     }\n }"},{"sha":"fa678ca30b56b64312c7db1ae90c36d2234b9012","filename":"client/idrepo/enduser/src/test/java/org/apache/syncope/client/enduser/SyncopeEnduserApplicationTest.java","status":"modified","additions":1,"deletions":16,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplicationTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -42,24 +42,9 @@\n \n public class SyncopeEnduserApplicationTest extends AbstractTest {\n \n-    private Map<String, String> getConfiguredSecurityHeaders() throws IOException {\n-        Map<String, String> securityHeaders = new HashMap<>();\n-\n-        @SuppressWarnings(\"unchecked\")\n-        Enumeration<String> propNames = (Enumeration<String>) PROPS.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String name = propNames.nextElement();\n-            if (name.startsWith(\"security.headers.\")) {\n-                securityHeaders.put(StringUtils.substringAfter(name, \"security.headers.\"), PROPS.getProperty(name));\n-            }\n-        }\n-\n-        return securityHeaders;\n-    }\n-\n     @Test\n     public void securityHeaders() throws IOException {\n-        Map<String, String> securityHeaders = getConfiguredSecurityHeaders();\n+        Map<String, String> securityHeaders = PROPS.getSecurityHeaders();\n         assertEquals(4, securityHeaders.size());\n \n         // 1. anonymous"},{"sha":"f03153d76745e0f614a204975b9656c2e2dbed68","filename":"client/idrepo/enduser/src/test/resources/enduser-debug.properties","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Fenduser-debug.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,4 +19,6 @@ keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n server.port=9091\n-service.discovery.address=http://localhost:9091/syncope-enduser/\n+service.discovery.address=http://localhost:9090/syncope-console/\n+\n+logging.config=file://${project.build.testOutputDirectory}/log4j2.xml","previous_filename":"client/idrepo/enduser/src/test/resources/application-debug.properties"},{"sha":"debaf21bb7d7e1547df20d21af394e5a67b80db5","filename":"client/idrepo/enduser/src/test/resources/log4j2.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,32 +21,32 @@ under the License.\n \n   <appenders>\n \n-    <Console name=\"main\" target=\"SYSTEM_OUT\">\n-      <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger - %msg%n\"/>\n+    <Console name=\"console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+      <PatternLayout pattern=\"%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} [%11.11t] %style{%-60.60c{60}}{cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n     </Console>\n     \n   </appenders>\n \n   <loggers>\n \n     <asyncLogger name=\"org.apache.syncope.client.lib\" additivity=\"false\" level=\"OFF\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.syncope.client.enduser\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+    <asyncLogger name=\"org.apache.syncope.client.enduser\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n \n     <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+      <appender-ref ref=\"console\"/>\n     </asyncLogger>\n     \n-    <root level=\"ERROR\">\n-      <appender-ref ref=\"main\"/>\n+    <root level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n     </root>\n   \n   </loggers>"},{"sha":"619c07c0626c20287e915d29b0fcd16e77fe6199","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/PropertyUtils.java","status":"removed","additions":0,"deletions":79,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,79 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.InputStream;\n-import java.util.Properties;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Utility class for manipulating properties files.\n- */\n-public final class PropertyUtils {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(PropertyUtils.class);\n-\n-    /**\n-     * Reads the property file with the given name from the directory assigned to the given property, or\n-     * from the classpath if not found.\n-     *\n-     * @param clazz calling class, to access classpath\n-     * @param propertiesFileName property file name\n-     * @param confDirProp property name for the configuration directory\n-     * @return properties, either from configuration directory, or from classpath\n-     */\n-    public static Properties read(\n-            final Class<?> clazz, final String propertiesFileName, final String confDirProp) {\n-\n-        Properties props = new Properties();\n-\n-        try (InputStream is = clazz.getResourceAsStream('/' + propertiesFileName)) {\n-            props.load(is);\n-\n-            String confDirName = props.getProperty(confDirProp);\n-            if (confDirName != null) {\n-                File confDir = new File(confDirName);\n-                if (confDir.exists() && confDir.canRead() && confDir.isDirectory()) {\n-                    File confDirProps = new File(confDir, propertiesFileName);\n-                    if (confDirProps.exists() && confDirProps.canRead() && confDirProps.isFile()) {\n-                        props.clear();\n-                        try (FileInputStream fis = new FileInputStream(confDirProps)) {\n-                            props.load(fis);\n-                        }\n-                    }\n-                } else {\n-                    LOG.warn(\"{} not existing, unreadable or not a directory, ignoring\", confDirName);\n-                }\n-            }\n-        } catch (Exception e) {\n-            throw new RuntimeException(\"Could not read \" + propertiesFileName, e);\n-        }\n-\n-        return props;\n-    }\n-\n-    /**\n-     * Private default constructor, for static-only classes.\n-     */\n-    private PropertyUtils() {\n-    }\n-}"},{"sha":"b3c365496bfb8985a11cd2661a872636cf7d8b1e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/SyncopeProperties.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib;\n+\n+public abstract class SyncopeProperties {\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private boolean useGZIPCompression = true;\n+\n+    public String getAnonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    public void setAnonymousUser(final String anonymousUser) {\n+        this.anonymousUser = anonymousUser;\n+    }\n+\n+    public String getAnonymousKey() {\n+        return anonymousKey;\n+    }\n+\n+    public void setAnonymousKey(final String anonymousKey) {\n+        this.anonymousKey = anonymousKey;\n+    }\n+\n+    public boolean isUseGZIPCompression() {\n+        return useGZIPCompression;\n+    }\n+\n+    public void setUseGZIPCompression(final boolean useGZIPCompression) {\n+        this.useGZIPCompression = useGZIPCompression;\n+    }\n+}"},{"sha":"f88e54a31a9bcc2b7cb0321c6ac47a37064acf14","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractStartEndBean.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -23,6 +23,8 @@\n import java.util.Optional;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.lib.BaseBean;\n \n public class AbstractStartEndBean implements BaseBean {\n@@ -76,4 +78,12 @@ public boolean equals(final Object obj) {\n                 append(end, other.end).\n                 build();\n     }\n+\n+    @Override\n+    public String toString() {\n+        return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n+                append(start).\n+                append(end).\n+                build();\n+    }\n }"},{"sha":"591f2ad7d775e34a858c0117eff390acb6e6a3d1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -186,8 +186,8 @@ public boolean equals(final Object obj) {\n     @Override\n     public String toString() {\n         return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n-                append(this.groupKey).\n-                append(this.groupName).\n+                append(groupKey).\n+                append(groupName).\n                 build();\n     }\n }"},{"sha":"b02a396bdf0a0f050666717d60ea1935bbfb8695","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationTaskTO.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -23,6 +23,8 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n@@ -178,4 +180,20 @@ public boolean equals(final Object obj) {\n                 append(entityKey, other.entityKey).\n                 build();\n     }\n+\n+    @Override\n+    public String toString() {\n+        return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n+                appendSuper(super.toString()).\n+                append(operation).\n+                append(connObjectKey).\n+                append(oldConnObjectKey).\n+                append(attributes).\n+                append(resource).\n+                append(objectClassName).\n+                append(anyTypeKind).\n+                append(anyType).\n+                append(entityKey).\n+                build();\n+    }\n }"},{"sha":"0f55ada540fe2ef14f7a0782877175b3e119cab3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,6 +29,8 @@\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n @JsonPropertyOrder(value = { \"_class\", \"key\" })\n@@ -128,4 +130,16 @@ public boolean equals(final Object obj) {\n                 append(lastExecutor, other.lastExecutor).\n                 build();\n     }\n+\n+    @Override\n+    public String toString() {\n+        return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n+                appendSuper(super.toString()).\n+                append(key).\n+                append(discriminator).\n+                append(executions).\n+                append(latestExecStatus).\n+                append(lastExecutor).\n+                build();\n+    }\n }"},{"sha":"201420be745893bf878cc8a9a8b55107aff0a1d6","filename":"common/keymaster/client-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot</artifactId>\n     </dependency>\n   </dependencies>\n "},{"sha":"1878ebaa54fdf6d52e42f0b99a0b01dffd00405f","filename":"common/keymaster/client-api/src/main/java/org/apache/syncope/common/keymaster/client/api/KeymasterProperties.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2FKeymasterProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.keymaster.client.api;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"keymaster\")\n+public class KeymasterProperties {\n+\n+    private String address;\n+\n+    private String username;\n+\n+    private String password;\n+\n+    private int baseSleepTimeMs = 100;\n+\n+    private int maxRetries = 3;\n+\n+    public String getAddress() {\n+        return address;\n+    }\n+\n+    public void setAddress(final String address) {\n+        this.address = address;\n+    }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    public void setUsername(final String username) {\n+        this.username = username;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public void setPassword(final String password) {\n+        this.password = password;\n+    }\n+\n+    public int getBaseSleepTimeMs() {\n+        return baseSleepTimeMs;\n+    }\n+\n+    public void setBaseSleepTimeMs(final int baseSleepTimeMs) {\n+        this.baseSleepTimeMs = baseSleepTimeMs;\n+    }\n+\n+    public int getMaxRetries() {\n+        return maxRetries;\n+    }\n+\n+    public void setMaxRetries(final int maxRetries) {\n+        this.maxRetries = maxRetries;\n+    }\n+}"},{"sha":"079d8ead1617ec48ba068990fc048e0cf26b1586","filename":"common/keymaster/client-zookeeper/src/main/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperKeymasterClientContext.java","status":"modified","additions":34,"deletions":31,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperKeymasterClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperKeymasterClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperKeymasterClientContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import java.util.regex.Pattern;\n import javax.security.auth.login.AppConfigurationEntry;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.curator.framework.CuratorFramework;\n@@ -29,50 +30,55 @@\n import org.apache.curator.retry.ExponentialBackoffRetry;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.zookeeper.ZooDefs;\n import org.apache.zookeeper.data.ACL;\n import org.apache.zookeeper.server.auth.DigestLoginModule;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.condition.ConditionOutcome;\n+import org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ConditionContext;\n+import org.springframework.context.annotation.Conditional;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.type.AnnotatedTypeMetadata;\n \n-@PropertySource(\"classpath:keymaster.properties\")\n-@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n+@EnableConfigurationProperties(KeymasterProperties.class)\n @Configuration\n public class ZookeeperKeymasterClientContext {\n \n-    @Value(\"${keymaster.address}\")\n-    private String address;\n+    private static final Pattern IPV4 = Pattern.compile(\n+            \"^((\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})|[a-z\\\\.]+):[0-9]+$\");\n \n-    @Value(\"${keymaster.username}\")\n-    private String username;\n+    static class ZookeeperCondition extends SpringBootCondition {\n \n-    @Value(\"${keymaster.password}\")\n-    private String password;\n-\n-    @Value(\"${keymaster.baseSleepTimeMs:100}\")\n-    private Integer baseSleepTimeMs;\n+        @Override\n+        public ConditionOutcome getMatchOutcome(final ConditionContext context, final AnnotatedTypeMetadata metadata) {\n+            String keymasterAddress = context.getEnvironment().getProperty(\"keymaster.address\");\n+            return new ConditionOutcome(\n+                    keymasterAddress != null && IPV4.matcher(keymasterAddress).matches(),\n+                    \"Keymaster address not set for Zookeeper: \" + keymasterAddress);\n+        }\n+    }\n \n-    @Value(\"${keymaster.maxRetries:3}\")\n-    private Integer maxRetries;\n+    @Autowired\n+    private KeymasterProperties props;\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' \"\n-            + \"matches '^((\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})|[a-z\\\\.]+):[0-9]+$'}\")\n+    @Conditional(ZookeeperCondition.class)\n     @Bean\n     public CuratorFramework curatorFramework() throws InterruptedException {\n-        if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {\n+        if (StringUtils.isNotBlank(props.getUsername()) && StringUtils.isNotBlank(props.getPassword())) {\n             javax.security.auth.login.Configuration.setConfiguration(new javax.security.auth.login.Configuration() {\n \n                 private final AppConfigurationEntry[] entries = {\n                     new AppConfigurationEntry(\n                     DigestLoginModule.class.getName(),\n                     AppConfigurationEntry.LoginModuleControlFlag.REQUIRED,\n                     Map.of(\n-                    \"username\", username,\n-                    \"password\", password\n+                    \"username\", props.getUsername(),\n+                    \"password\", props.getPassword()\n                     ))\n                 };\n \n@@ -84,10 +90,10 @@ public AppConfigurationEntry[] getAppConfigurationEntry(final String name) {\n         }\n \n         CuratorFrameworkFactory.Builder clientBuilder = CuratorFrameworkFactory.builder().\n-                connectString(address).\n-                retryPolicy(new ExponentialBackoffRetry(baseSleepTimeMs, maxRetries));\n-        if (StringUtils.isNotBlank(username)) {\n-            clientBuilder.authorization(\"digest\", username.getBytes()).aclProvider(new ACLProvider() {\n+                connectString(props.getAddress()).\n+                retryPolicy(new ExponentialBackoffRetry(props.getBaseSleepTimeMs(), props.getMaxRetries()));\n+        if (StringUtils.isNotBlank(props.getUsername())) {\n+            clientBuilder.authorization(\"digest\", props.getUsername().getBytes()).aclProvider(new ACLProvider() {\n \n                 @Override\n                 public List<ACL> getDefaultAcl() {\n@@ -107,23 +113,20 @@ public List<ACL> getAclForPath(final String path) {\n         return client;\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' \"\n-            + \"matches '^((\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})|[a-z\\\\.]+):[0-9]+$'}\")\n+    @Conditional(ZookeeperCondition.class)\n     @Bean\n     public ConfParamOps selfConfParamOps() {\n         return new ZookeeperConfParamOps();\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' \"\n-            + \"matches '^((\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})|[a-z\\\\.]+):[0-9]+$'}\")\n+    @Conditional(ZookeeperCondition.class)\n     @Bean\n     public ServiceOps serviceOps() {\n         return new ZookeeperServiceDiscoveryOps();\n         //return new ZookeeperServiceOps();\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' \"\n-            + \"matches '^((\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})|[a-z\\\\.]+):[0-9]+$'}\")\n+    @Conditional(ZookeeperCondition.class)\n     @Bean\n     public DomainOps domainOps() {\n         return new ZookeeperDomainOps();"},{"sha":"43084787dfad08232c53b957907dd630aab12d9a","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperConfParamOpsTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperConfParamOpsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperConfParamOpsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperConfParamOpsTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,6 +24,6 @@ public class ZookeeperConfParamOpsTest extends ZookeeperConfParamOpsITCase {\n \n     @BeforeAll\n     public static void setUp() throws Exception {\n-        ZookeeperTestServer.start();\n+        ZookeeperTestingServer.start();\n     }\n }"},{"sha":"217bd250c24166e7692a0acfea01c7c5befe3924","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperDomainOpsTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperDomainOpsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperDomainOpsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperDomainOpsTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,6 +24,6 @@ public class ZookeeperDomainOpsTest extends ZookeeperDomainOpsITCase {\n \n     @BeforeAll\n     public static void setUp() throws Exception {\n-        ZookeeperTestServer.start();\n+        ZookeeperTestingServer.start();\n     }\n }"},{"sha":"a1ecabaa49c23c426946f6f64e954b8577293cf3","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperServiceOpsTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperServiceOpsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperServiceOpsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperServiceOpsTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,6 +24,6 @@ public class ZookeeperServiceOpsTest extends ZookeeperServiceOpsITCase {\n \n     @BeforeAll\n     public static void setUp() throws Exception {\n-        ZookeeperTestServer.start();\n+        ZookeeperTestingServer.start();\n     }\n }"},{"sha":"7b431559aeea896ee3096f9999d28fe25f763808","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperTestContext.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,7 +21,9 @@\n import org.apache.syncope.common.keymaster.client.api.DomainWatcher;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n \n+@PropertySource(\"classpath:test.properties\")\n @Configuration\n public class ZookeeperTestContext {\n "},{"sha":"6fe69af2ba76d2c71333faa02867dd36b9c73739","filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperTestingServer.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestingServer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestingServer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeeper%2FZookeeperTestingServer.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -30,22 +30,22 @@\n import org.apache.curator.test.InstanceSpec;\n import org.apache.curator.test.TestingServer;\n \n-public class ZookeeperTestServer {\n+public class ZookeeperTestingServer {\n \n     private static TestingServer ZK_SERVER;\n \n     public static void start() throws Exception {\n         if (ZK_SERVER == null) {\n             AtomicReference<String> username = new AtomicReference<>();\n             AtomicReference<String> password = new AtomicReference<>();\n-            try (InputStream propStream = ZookeeperServiceOpsTest.class.getResourceAsStream(\"/keymaster.properties\")) {\n+            try (InputStream propStream = ZookeeperServiceOpsTest.class.getResourceAsStream(\"/test.properties\")) {\n                 Properties props = new Properties();\n                 props.load(propStream);\n \n                 username.set(props.getProperty(\"keymaster.username\"));\n                 password.set(props.getProperty(\"keymaster.password\"));\n             } catch (Exception e) {\n-                fail(\"Could not load /keymaster.properties\", e);\n+                fail(\"Could not load /test.properties\", e);\n             }\n \n             Configuration.setConfiguration(new Configuration() {","previous_filename":"common/keymaster/client-zookeeper/src/test/java/org/apache/syncope/common/keymaster/client/zookeeper/ZookeeperTestServer.java"},{"sha":"f374d8ca3a94d0370aa4ab93b5ad8897eb4e944b","filename":"common/keymaster/client-zookeeper/src/test/resources/test.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2Ftest.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2Ftest.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Ftest%2Fresources%2Ftest.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"common/keymaster/client-zookeeper/src/main/resources/keymaster.properties"},{"sha":"901ec64184a39d525b844f302e841bf901b1283a","filename":"common/keymaster/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -40,5 +40,6 @@ under the License.\n   <modules>\n     <module>client-api</module>\n     <module>client-zookeeper</module>\n+    <module>self</module>\n   </modules>\n </project>"},{"sha":"bd1dee78301479a66e89ee5b3223af228b289258","filename":"common/keymaster/self/client-self/pom.xml","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,19 +22,19 @@ under the License.\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n-    <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <groupId>org.apache.syncope.common.keymaster</groupId>\n+    <artifactId>syncope-common-keymaster-self</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: Self Keymaster Client</name>\n-  <description>Apache Syncope Ext: Self Keymaster Client</description>\n-  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-  <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+  <name>Apache Syncope Common Keymaster Client Self</name>\n+  <description>Apache Syncope Common Keymaster Client Self</description>\n+  <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+  <artifactId>syncope-common-keymaster-client-self</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n-    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+    <rootpom.basedir>${basedir}/../../../..</rootpom.basedir>\n   </properties>\n \n   <dependencies>\n@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n     \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-rest-api</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-self-rest-api</artifactId>\n       <version>${project.version}</version>  \n     </dependency>\n     ","previous_filename":"ext/self-keymaster/client/pom.xml"},{"sha":"ecd3426f0fac0e7676382371de7cbab8af24929d","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterClientContext.java","status":"renamed","additions":31,"deletions":22,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,70 +19,79 @@\n package org.apache.syncope.common.keymaster.client.self;\n \n import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n-\n import java.util.List;\n-\n+import java.util.regex.Pattern;\n import org.apache.cxf.ext.logging.LoggingFeature;\n import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.condition.ConditionOutcome;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ConditionContext;\n+import org.springframework.context.annotation.Conditional;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.type.AnnotatedTypeMetadata;\n \n-@PropertySource(\"classpath:keymaster.properties\")\n-@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n+@EnableConfigurationProperties(KeymasterProperties.class)\n @Configuration\n public class SelfKeymasterClientContext {\n \n-    @Value(\"${keymaster.address}\")\n-    private String address;\n+    private static final Pattern HTTP = Pattern.compile(\"^http.+\");\n \n-    @Value(\"${keymaster.username}\")\n-    private String username;\n+    static class SelfKeymasterCondition extends SpringBootCondition {\n \n-    @Value(\"${keymaster.password}\")\n-    private String password;\n+        @Override\n+        public ConditionOutcome getMatchOutcome(final ConditionContext context, final AnnotatedTypeMetadata metadata) {\n+            String keymasterAddress = context.getEnvironment().getProperty(\"keymaster.address\");\n+            return new ConditionOutcome(\n+                    keymasterAddress != null && HTTP.matcher(keymasterAddress).matches(),\n+                    \"Keymaster address not set for Self: \" + keymasterAddress);\n+        }\n+    }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^http.+'}\")\n+    @Autowired\n+    private KeymasterProperties props;\n+\n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     @ConditionalOnMissingBean(name = \"selfKeymasterRESTClientFactoryBean\")\n     public JAXRSClientFactoryBean selfKeymasterRESTClientFactoryBean() {\n         JAXRSClientFactoryBean restClientFactoryBean = new JAXRSClientFactoryBean();\n-        restClientFactoryBean.setAddress(address);\n-        restClientFactoryBean.setUsername(username);\n-        restClientFactoryBean.setPassword(password);\n+        restClientFactoryBean.setAddress(props.getAddress());\n+        restClientFactoryBean.setUsername(props.getUsername());\n+        restClientFactoryBean.setPassword(props.getPassword());\n         restClientFactoryBean.setThreadSafe(true);\n         restClientFactoryBean.setInheritHeaders(true);\n         restClientFactoryBean.setFeatures(List.of(new LoggingFeature()));\n         restClientFactoryBean.setProviders(\n-            List.of(new JacksonJsonProvider(), new SelfKeymasterClientExceptionMapper()));\n+                List.of(new JacksonJsonProvider(), new SelfKeymasterClientExceptionMapper()));\n         return restClientFactoryBean;\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^http.+'}\")\n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     @ConditionalOnMissingBean(name = \"selfConfParamOps\")\n     public ConfParamOps selfConfParamOps() {\n         return new SelfKeymasterConfParamOps(selfKeymasterRESTClientFactoryBean());\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^http.+'}\")\n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     @ConditionalOnMissingBean(name = \"selfServiceOps\")\n     public ServiceOps selfServiceOps() {\n         return new SelfKeymasterServiceOps(selfKeymasterRESTClientFactoryBean(), 5);\n     }\n \n-    @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^http.+'}\")\n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     @ConditionalOnMissingBean(name = \"domainOps\")\n     public DomainOps domainOps() {\n         return new SelfKeymasterDomainOps(selfKeymasterRESTClientFactoryBean());\n     }\n }\n-","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterClientContext.java"},{"sha":"055605745db1e5d4e7faf26fec03041fe50e0c23","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterClientExceptionMapper.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterClientExceptionMapper.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterClientExceptionMapper.java"},{"sha":"770a4425714f5bae2b781d0c898a97ba0dab947a","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterConfParamOps.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterConfParamOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -28,8 +28,8 @@\n import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n+import org.apache.syncope.common.keymaster.rest.api.service.ConfParamService;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.ext.self.keymaster.api.service.ConfParamService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n ","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterConfParamOps.java"},{"sha":"8c9f268dbf946272a4116effc64abd7a0c0cb7e5","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterDomainOps.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterDomainOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterDomainOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterDomainOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n+import org.apache.syncope.common.keymaster.rest.api.service.DomainService;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n-import org.apache.syncope.ext.self.keymaster.api.service.DomainService;\n \n public class SelfKeymasterDomainOps extends SelfKeymasterOps implements DomainOps {\n ","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterDomainOps.java"},{"sha":"2b9f6e32dfd3c97b35092944851af84fc378771e","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterOps.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterOps.java"},{"sha":"f5b8aa6f9c64b317e842ce94067eb116a8281498","filename":"common/keymaster/self/client-self/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterServiceOps.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterServiceOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterServiceOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fself%2FSelfKeymasterServiceOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,8 +29,8 @@\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n-import org.apache.syncope.ext.self.keymaster.api.service.NetworkServiceService;\n-import org.apache.syncope.ext.self.keymaster.api.service.NetworkServiceService.Action;\n+import org.apache.syncope.common.keymaster.rest.api.service.NetworkServiceService;\n+import org.apache.syncope.common.keymaster.rest.api.service.NetworkServiceService.Action;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.backoff.BackOffExecution;","previous_filename":"ext/self-keymaster/client/src/main/java/org/apache/syncope/common/keymaster/client/self/SelfKeymasterServiceOps.java"},{"sha":"188b0c78d645b3c58834d67e3b600b57759d6fc5","filename":"common/keymaster/self/client-self/src/main/resources/META-INF/spring.factories","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fclient-self%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/client/src/main/resources/META-INF/spring.factories"},{"sha":"693d8d81e3f14f25afbca5b6f5d7a062aa01627f","filename":"common/keymaster/self/pom.xml","status":"renamed","additions":10,"deletions":15,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,28 +22,23 @@ under the License.\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n-    <groupId>org.apache.syncope</groupId>\n-    <artifactId>syncope-ext</artifactId>\n+    <groupId>org.apache.syncope.common</groupId>\n+    <artifactId>syncope-common-keymaster</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: Self Keymaster</name>\n-  <description>Apache Syncope Ext: Self Keymaster</description>\n-  <groupId>org.apache.syncope.ext</groupId>\n-  <artifactId>syncope-ext-self-keymaster</artifactId>\n+  <name>Apache Syncope Common Keymaster Self</name>\n+  <description>Apache Syncope Common Keymaster Self</description>\n+  <groupId>org.apache.syncope.common.keymaster</groupId>\n+  <artifactId>syncope-common-keymaster-self</artifactId>\n   <packaging>pom</packaging>\n-  \n+\n   <properties>\n-    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n   </properties>\n-  \n+\n   <modules>\n     <module>rest-api</module>\n-    <module>rest-cxf</module>\n-    <module>logic</module>\n-    <module>persistence-api</module>\n-    <module>persistence-jpa</module>\n-    <module>client</module>\n+    <module>client-self</module>\n   </modules>\n-\n </project>","previous_filename":"ext/self-keymaster/pom.xml"},{"sha":"d507e8ee7be935ba79d2e288b75dd10dbb843748","filename":"common/keymaster/self/rest-api/pom.xml","status":"renamed","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Frest-api%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,19 +22,19 @@ under the License.\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n-    <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <groupId>org.apache.syncope.common.keymaster</groupId>\n+    <artifactId>syncope-common-keymaster-self</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: Self Keymaster REST API</name>\n-  <description>Apache Syncope Ext: Self Keymaster REST API</description>\n-  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-  <artifactId>syncope-ext-self-keymaster-rest-api</artifactId>\n+  <name>Apache Syncope Common Keymaster Self REST API</name>\n+  <description>Apache Syncope Common Keymaster Self REST API</description>\n+  <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+  <artifactId>syncope-common-keymaster-self-rest-api</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n-    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+    <rootpom.basedir>${basedir}/../../../..</rootpom.basedir>\n   </properties>\n \n   <dependencies>\n@@ -43,6 +43,7 @@ under the License.\n       <artifactId>syncope-common-idrepo-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>\n       <artifactId>syncope-common-keymaster-client-api</artifactId>","previous_filename":"ext/self-keymaster/rest-api/pom.xml"},{"sha":"2935d257b012092e68e67577c62d361bf06ecc01","filename":"common/keymaster/self/rest-api/src/main/java/org/apache/syncope/common/keymaster/rest/api/service/ConfParamService.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FConfParamService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FConfParamService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FConfParamService.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.api.service;\n+package org.apache.syncope.common.keymaster.rest.api.service;\n \n import java.io.InputStream;\n import java.io.Serializable;","previous_filename":"ext/self-keymaster/rest-api/src/main/java/org/apache/syncope/ext/self/keymaster/api/service/ConfParamService.java"},{"sha":"bc0cabb59371e8ac547a575edc5733fed17191c8","filename":"common/keymaster/self/rest-api/src/main/java/org/apache/syncope/common/keymaster/rest/api/service/DomainService.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.api.service;\n+package org.apache.syncope.common.keymaster.rest.api.service;\n \n import java.io.Serializable;\n import java.util.List;","previous_filename":"ext/self-keymaster/rest-api/src/main/java/org/apache/syncope/ext/self/keymaster/api/service/DomainService.java"},{"sha":"1ac8376e38dbd1a404631ec545db097386adfbc4","filename":"common/keymaster/self/rest-api/src/main/java/org/apache/syncope/common/keymaster/rest/api/service/NetworkServiceService.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FNetworkServiceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FNetworkServiceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fself%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Frest%2Fapi%2Fservice%2FNetworkServiceService.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.api.service;\n+package org.apache.syncope.common.keymaster.rest.api.service;\n \n import java.io.Serializable;\n import java.util.List;","previous_filename":"ext/self-keymaster/rest-api/src/main/java/org/apache/syncope/ext/self/keymaster/api/service/NetworkServiceService.java"},{"sha":"ad4bf4bf8f33bd88a779b3b4cc39069627ec2492","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/ClientAppLogic.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -27,7 +27,6 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-import javax.annotation.Resource;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.HttpHeaders;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -56,6 +55,7 @@\n import org.apache.syncope.core.persistence.api.entity.auth.SAML2SPClientApp;\n import org.apache.syncope.core.persistence.api.entity.auth.CASSPClientApp;\n import org.apache.syncope.core.persistence.api.entity.auth.OIDCRPClientApp;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n \n @Component\n public class ClientAppLogic extends AbstractTransactionalLogic<ClientAppTO> {\n@@ -78,11 +78,8 @@ public class ClientAppLogic extends AbstractTransactionalLogic<ClientAppTO> {\n     @Autowired\n     private CASSPDAO casspDAO;\n \n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n-\n-    @Resource(name = \"anonymousKey\")\n-    private String anonymousKey;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.CLIENTAPP_LIST + \"')\")\n     public <T extends ClientAppTO> List<T> list(final ClientAppType type) {\n@@ -260,8 +257,8 @@ public void pushToWA() {\n             HttpClient.newBuilder().build().send(\n                     HttpRequest.newBuilder(URI.create(\n                             StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/registeredServices\")).\n-                            header(HttpHeaders.AUTHORIZATION,\n-                                    DefaultBasicAuthSupplier.getBasicAuthHeader(anonymousUser, anonymousKey)).\n+                            header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n                             GET().build(),\n                     HttpResponse.BodyHandlers.discarding());\n         } catch (KeymasterException e) {"},{"sha":"db4d32668aa77467a1f786fc0c68c66582239f93","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/SRARouteLogic.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSRARouteLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSRARouteLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSRARouteLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -26,7 +26,6 @@\n import java.net.http.HttpResponse;\n import java.util.List;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.HttpHeaders;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -42,6 +41,7 @@\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.SRARoute;\n import org.apache.syncope.core.provisioning.api.data.SRARouteDataBinder;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -61,11 +61,8 @@ public class SRARouteLogic extends AbstractTransactionalLogic<SRARouteTO> {\n     @Autowired\n     private ServiceOps serviceOps;\n \n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n-\n-    @Resource(name = \"anonymousKey\")\n-    private String anonymousKey;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @PreAuthorize(\"isAuthenticated()\")\n     public List<SRARouteTO> list() {\n@@ -120,8 +117,8 @@ public void pushToSRA() {\n             HttpClient.newBuilder().build().send(\n                     HttpRequest.newBuilder(URI.create(\n                             StringUtils.appendIfMissing(sra.getAddress(), \"/\") + \"actuator/gateway/refresh\")).\n-                            header(HttpHeaders.AUTHORIZATION,\n-                                    DefaultBasicAuthSupplier.getBasicAuthHeader(anonymousUser, anonymousKey)).\n+                            header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n                             POST(HttpRequest.BodyPublishers.noBody()).build(),\n                     HttpResponse.BodyHandlers.discarding());\n         } catch (KeymasterException e) {"},{"sha":"b02b3dd7662432b027edd59c098090a185642880","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/WAConfigLogic.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWAConfigLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -27,7 +27,6 @@\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.HttpHeaders;\n import org.apache.commons.lang3.StringUtils;\n@@ -44,6 +43,7 @@\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.auth.WAConfigDAO;\n import org.apache.syncope.core.provisioning.api.data.WAConfigDataBinder;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -61,11 +61,8 @@ public class WAConfigLogic extends AbstractTransactionalLogic<EntityTO> {\n     @Autowired\n     private WAConfigDAO waConfigDAO;\n \n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n-\n-    @Resource(name = \"anonymousKey\")\n-    private String anonymousKey;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.WA_CONFIG_LIST + \"') or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n@@ -98,8 +95,8 @@ public void pushToWA() {\n             HttpClient.newBuilder().build().send(\n                     HttpRequest.newBuilder(URI.create(\n                             StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/refresh\")).\n-                            header(HttpHeaders.AUTHORIZATION,\n-                                    DefaultBasicAuthSupplier.getBasicAuthHeader(anonymousUser, anonymousKey)).\n+                            header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n                             POST(HttpRequest.BodyPublishers.noBody()).build(),\n                     HttpResponse.BodyHandlers.discarding());\n         } catch (KeymasterException e) {"},{"sha":"22e90bf5d218da6ee1d3706c79bceb554f57a99d","filename":"core/idm/logic/src/test/java/org/apache/syncope/core/logic/DummyDomainOps.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDummyDomainOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDummyDomainOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDummyDomainOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,11 +22,16 @@\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.api.DomainRegistry;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class DummyDomainOps implements DomainOps {\n \n+    @Autowired\n+    private DomainRegistry domainRegistry;\n+\n     @Override\n     public List<Domain> list() {\n         return List.of();\n@@ -39,7 +44,7 @@ public Domain read(final String key) {\n \n     @Override\n     public void create(final Domain domain) {\n-        // nothing to do\n+        domainRegistry.register(domain);\n     }\n \n     @Override"},{"sha":"3d51425d73c741ed4b1d4d803a0925dbc68f6f36","filename":"core/idm/logic/src/test/java/org/apache/syncope/core/logic/IdMLogicTestContext.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FIdMLogicTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FIdMLogicTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FIdMLogicTestContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import java.io.IOException;\n-import java.lang.reflect.InvocationTargetException;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.jpa.PersistenceContext;\n import org.apache.syncope.core.provisioning.java.ProvisioningContext;\n@@ -30,27 +28,17 @@\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n import org.springframework.context.annotation.Primary;\n-import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+import org.springframework.context.annotation.PropertySource;\n \n+@PropertySource(\"classpath:core-test.properties\")\n @Import({ SecurityContext.class, PersistenceContext.class, ProvisioningContext.class, WorkflowContext.class })\n @ComponentScan(\"org.apache.syncope.core.logic\")\n @Configuration\n public class IdMLogicTestContext {\n \n-    @Bean\n-    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n-        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n-        pspc.setIgnoreResourceNotFound(true);\n-        pspc.setIgnoreUnresolvablePlaceholders(true);\n-        return pspc;\n-    }\n-\n     @Primary\n     @Bean\n-    public ImplementationLookup classPathScanImplementationLookup()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n-\n+    public ImplementationLookup implementationLookup() {\n         return new DummyImplementationLookup();\n     }\n }"},{"sha":"af402848e57f6559a6e27e5219170044d95570bd","filename":"core/idm/logic/src/test/resources/logicTest.xml","status":"removed","additions":0,"deletions":65,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fresources%2FlogicTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fresources%2FlogicTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fresources%2FlogicTest.xml?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,65 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-    \n-  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>classpath:persistence.properties</value>\n-        <value>classpath:domains/*.properties</value>\n-        <value>classpath:security.properties</value>\n-        <value>classpath:connid.properties</value>\n-        <value>classpath:mail.properties</value>\n-        <value>classpath:workflow.properties</value>\n-        <value>classpath:provisioning.properties</value>\n-        <value>classpath:logic.properties</value>\n-      </list>\n-    </property>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n-  </bean>\n-\n-  <bean id=\"jwtIssuer\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${jwtIssuer}\"/>\n-  </bean>\n-  <bean id=\"jwsKey\" class=\"java.lang.String\">\n-    <constructor-arg value=\"ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f\"/>\n-  </bean>\n-  <bean id=\"accessTokenJwsSignatureVerifier\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureVerifier\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f\"/>\n-  </bean>\n-  <bean id=\"accessTokenJwsSignatureProvider\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureProvider\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f\"/>\n-  </bean>\n-  <bean id=\"credentialChecker\" class=\"org.apache.syncope.core.spring.security.DefaultCredentialChecker\">\n-    <constructor-arg value=\"ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f\" index=\"0\"/>\n-    <constructor-arg value=\"DE088591C00CC98B36F5ADAAF7DA2B004CF7F2FE7BBB45B766B6409876E2F3DB13C7905C6AA59464\" index=\"1\"/>\n-    <constructor-arg value=\"anonymousKey\" index=\"2\"/>\n-  </bean>\n-  \n-  <import resource=\"logicContext.xml\"/>\n-</beans>"},{"sha":"69b786b107e2ecb54095cd08c04ba037059238a4","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AccessTokenLogic.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -23,7 +23,6 @@\n import java.util.Date;\n import java.util.List;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n@@ -38,6 +37,7 @@\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -47,8 +47,8 @@ public class AccessTokenLogic extends AbstractTransactionalLogic<AccessTokenTO>\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private AccessTokenDataBinder binder;\n@@ -71,9 +71,9 @@ private static byte[] getAuthorities() {\n \n     @PreAuthorize(\"isAuthenticated()\")\n     public Pair<String, Date> login() {\n-        if (anonymousUser.equals(AuthContextUtils.getUsername())) {\n+        if (securityProperties.getAnonymousUser().equals(AuthContextUtils.getUsername())) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n-            sce.getElements().add(anonymousUser + \" cannot be granted an access token\");\n+            sce.getElements().add(securityProperties.getAnonymousUser() + \" cannot be granted an access token\");\n             throw sce;\n         }\n "},{"sha":"357bea81e7ae0fa4f147702812729dda61bedbb7","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,7 +25,6 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n@@ -67,6 +66,7 @@\n import org.apache.syncope.core.provisioning.java.job.GroupMemberProvisionTaskJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.quartz.JobDataMap;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -87,8 +87,8 @@ public class GroupLogic extends AbstractAnyLogic<GroupTO, GroupCR, GroupUR> {\n     @Autowired\n     protected GroupDAO groupDAO;\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     @Autowired\n     protected AnySearchDAO searchDAO;\n@@ -130,7 +130,7 @@ public GroupTO read(final String key) {\n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"'))\")\n     @Transactional(readOnly = true)\n     public List<GroupTO> own() {\n-        if (adminUser.equals(AuthContextUtils.getUsername())) {\n+        if (securityProperties.getAdminUser().equals(AuthContextUtils.getUsername())) {\n             return List.of();\n         }\n "},{"sha":"af4a2183cbedaeaf0c33440c31c85f43525b5abf","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/LogicContext.java","status":"modified","additions":15,"deletions":32,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -20,53 +20,36 @@\n \n import java.lang.reflect.InvocationTargetException;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n-import org.springframework.context.EnvironmentAware;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n \n-@PropertySource(\"classpath:logic.properties\")\n-@PropertySource(value = \"file:${conf.directory}/logic.properties\", ignoreResourceNotFound = true)\n @ComponentScan(\"org.apache.syncope.core.logic\")\n @EnableAspectJAutoProxy\n+@EnableConfigurationProperties(LogicProperties.class)\n @Configuration\n-public class LogicContext implements EnvironmentAware {\n+public class LogicContext {\n \n-    private Environment env;\n-\n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n-\n-    @Bean\n-    public String version() {\n-        return env.getProperty(\"version\");\n-    }\n-\n-    @Bean\n-    public String buildNumber() {\n-        return env.getProperty(\"buildNumber\");\n-    }\n+    @Autowired\n+    private LogicProperties props;\n \n+    @ConditionalOnMissingBean\n     @Bean\n-    public LogicInvocationHandler logicInvocationHandler()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, \n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+    public LogicInvocationHandler logicInvocationHandler() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (LogicInvocationHandler) Class.forName(env.getProperty(\"logicInvocationHandler\")).\n-                getDeclaredConstructor().newInstance();\n+        return props.getInvocationHandler().getDeclaredConstructor().newInstance();\n     }\n \n+    @ConditionalOnMissingBean\n     @Bean\n-    public ImplementationLookup classPathScanImplementationLookup()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, \n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+    public ImplementationLookup implementationLookup() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (ImplementationLookup) Class.forName(env.getProperty(\"classPathScanImplementationLookup\")).\n-                getDeclaredConstructor().newInstance();\n+        return props.getImplementationLookup().getDeclaredConstructor().newInstance();\n     }\n }"},{"sha":"6c84fcfa2cbdc08a1db1451aa92397e3cc84808d","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/LogicProperties.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import org.apache.syncope.core.logic.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.core.persistence.api.ImplementationLookup;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"logic\")\n+public class LogicProperties {\n+\n+    private Class<? extends LogicInvocationHandler> invocationHandler = LogicInvocationHandler.class;\n+\n+    private Class<? extends ImplementationLookup> implementationLookup = ClassPathScanImplementationLookup.class;\n+\n+    private boolean enableJDBCAuditAppender = true;\n+\n+    public Class<? extends LogicInvocationHandler> getInvocationHandler() {\n+        return invocationHandler;\n+    }\n+\n+    public void setInvocationHandler(final Class<? extends LogicInvocationHandler> invocationHandler) {\n+        this.invocationHandler = invocationHandler;\n+    }\n+\n+    public Class<? extends ImplementationLookup> getImplementationLookup() {\n+        return implementationLookup;\n+    }\n+\n+    public void setImplementationLookup(final Class<? extends ImplementationLookup> implementationLookup) {\n+        this.implementationLookup = implementationLookup;\n+    }\n+\n+    public boolean isEnableJDBCAuditAppender() {\n+        return enableJDBCAuditAppender;\n+    }\n+\n+    public void setEnableJDBCAuditAppender(final boolean enableJDBCAuditAppender) {\n+        this.enableJDBCAuditAppender = enableJDBCAuditAppender;\n+    }\n+}"},{"sha":"eaadf8119a7aa5a742eaedb799ae10a52e9d3fec","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/AuditLoader.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FAuditLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FAuditLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FAuditLoader.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,6 +29,7 @@\n import org.apache.logging.log4j.core.appender.rewrite.RewriteAppender;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.core.logic.LogicProperties;\n import org.apache.syncope.core.logic.audit.AuditAppender;\n import org.apache.syncope.core.logic.audit.JdbcAuditAppender;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n@@ -37,7 +38,6 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.stereotype.Component;\n \n@@ -50,8 +50,8 @@ public class AuditLoader implements SyncopeCoreLoader {\n     @Autowired\n     private ImplementationLookup implementationLookup;\n \n-    @Value(\"${enable.jdbcAuditAppender:true}\")\n-    private boolean enableJdbcAuditAppender;\n+    @Autowired\n+    private LogicProperties props;\n \n     @Override\n     public int getOrder() {\n@@ -62,7 +62,7 @@ public int getOrder() {\n     public void load(final String domain, final DataSource datasource) {\n         LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n \n-        if (enableJdbcAuditAppender) {\n+        if (props.isEnableJDBCAuditAppender()) {\n             JdbcAuditAppender jdbcAuditAppender = (JdbcAuditAppender) ApplicationContextProvider.getBeanFactory().\n                     createBean(JdbcAuditAppender.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n             jdbcAuditAppender.init(domain);"},{"sha":"3da2e2cacc019f57ab2c9becdffc06cfd75f67cd","filename":"core/idrepo/logic/src/main/resources/logic.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-version=${syncope.version}\n-buildNumber=${buildNumber}\n-logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n-classPathScanImplementationLookup=org.apache.syncope.core.logic.init.ClassPathScanImplementationLookup\n-enable.jdbcAuditAppender=true"},{"sha":"d836bcf8760c3582c64edd381ca6f5a02a4d5d79","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RESTCXFContext.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -27,7 +27,6 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.Executor;\n-import javax.annotation.Resource;\n import javax.servlet.ServletRequestListener;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n@@ -65,9 +64,6 @@ public class RESTCXFContext {\n     @Autowired\n     private ApplicationContext ctx;\n \n-    @Resource(name = \"version\")\n-    private String version;\n-\n     @Bean\n     public Executor batchExecutor() {\n         ThreadPoolTaskExecutor batchExecutor = new ThreadPoolTaskExecutor();\n@@ -153,12 +149,16 @@ public AddETagFilter addETagFilter() {\n         return new AddETagFilter();\n     }\n \n+    private String version() {\n+        return ctx.getEnvironment().getProperty(\"version\");\n+    }\n+\n     @Bean\n     public OpenApiFeature openapiFeature() {\n         OpenApiFeature openapiFeature = new OpenApiFeature();\n         openapiFeature.setTitle(\"Apache Syncope\");\n-        openapiFeature.setVersion(version);\n-        openapiFeature.setDescription(\"Apache Syncope \" + version);\n+        openapiFeature.setVersion(version());\n+        openapiFeature.setDescription(\"Apache Syncope \" + version());\n         openapiFeature.setContactName(\"The Apache Syncope community\");\n         openapiFeature.setContactEmail(\"dev@syncope.apache.org\");\n         openapiFeature.setContactUrl(\"http://syncope.apache.org\");"},{"sha":"68f7378928fd9447093c2d06a7461a1ea70ee970","filename":"core/persistence-jpa-json/pom.xml","status":"modified","additions":9,"deletions":21,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -216,7 +216,7 @@ under the License.\n     </profile>\n \n     <profile>\n-      <id>postgres</id>\n+      <id>pgjsonb</id>\n       \n       <dependencies>\n         <dependency>\n@@ -266,7 +266,8 @@ under the License.\n               </includes>\n               <excludedGroups>multitenancy,plainAttrTable</excludedGroups>\n               <systemProperties>\n-                <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>                \n+                <CORE_PROPERTIES>classpath:core-pgjsonb.properties,classpath:core-pgjsonb-test.properties</CORE_PROPERTIES>\n+                <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>\n               </systemProperties>\n             </configuration>\n           </plugin>\n@@ -318,22 +319,15 @@ under the License.\n         \n         <testResources>\n           <testResource>\n-            <directory>src/test/resources/pgjsonb</directory>\n+            <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n           </testResource>\n-          <testResource>\n-            <directory>src/main/resources/pgjsonb</directory>\n-            <filtering>true</filtering>\n-            <excludes>\n-              <exclude>domains/Master.properties</exclude>\n-            </excludes>\n-          </testResource>\n         </testResources>\n       </build>\n     </profile>\n     \n     <profile>\n-      <id>mysql</id>\n+      <id>myjson</id>\n       \n       <dependencies>\n         <dependency>\n@@ -346,7 +340,7 @@ under the License.\n \n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n-        \n+\n         <plugins>\n           <plugin>\n             <groupId>org.codehaus.mojo</groupId>\n@@ -383,7 +377,8 @@ under the License.\n               </includes>\n               <excludedGroups>multitenancy,plainAttrTable</excludedGroups>\n               <systemProperties>\n-                <DB_CONTAINER_IP>${docker.container.mysql.ip}</DB_CONTAINER_IP>                \n+                <CORE_PROPERTIES>classpath:core-myjson.properties,classpath:core-myjson-test.properties</CORE_PROPERTIES>\n+                <DB_CONTAINER_IP>${docker.container.mysql.ip}</DB_CONTAINER_IP>\n               </systemProperties>\n             </configuration>\n           </plugin>\n@@ -437,15 +432,8 @@ under the License.\n         \n         <testResources>\n           <testResource>\n-            <directory>src/test/resources/myjson</directory>\n-            <filtering>true</filtering>\n-          </testResource>\n-          <testResource>\n-            <directory>src/main/resources/myjson</directory>\n+            <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n-            <excludes>\n-              <exclude>domains/Master.properties</exclude>\n-            </excludes>\n           </testResource>\n         </testResources>\n       </build>"},{"sha":"3899035ba7d9a19a5e71ee468698f76bc528201e","filename":"core/persistence-jpa-json/src/main/resources/core-myjson.properties","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,47 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mysql_innodb.sql\n+\n+persistence.entityFactory=org.apache.syncope.core.persistence.jpa.entity.MyJPAJSONEntityFactory\n+persistence.plainSchemaDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONPlainSchemaDAO\n+persistence.plainAttrDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+persistence.plainAttrValueDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAnySearchDAO\n+persistence.searchCondVisitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n+persistence.userDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+persistence.groupDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+persistence.anyObjectDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+persistence.auditConfDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAuditConfDAO\n+\n+persistence.indexesXML=classpath:myjson/indexes.xml\n+persistence.viewsXML=classpath:myjson/views.xml\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=com.mysql.cj.jdbc.Driver\n+persistence.domain[0].jdbcURL=jdbc:mysql://localhost:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+persistence.domain[0].dbUsername=syncope\n+persistence.domain[0].dbPassword=syncope\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n+persistence.domain[0].orm=META-INF/spring-orm-myjson.xml\n+persistence.domain[0].auditSql=audit_myjson.sql\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"fe9154ca352308fa64aad9878a6017635f2ab02e","filename":"core/persistence-jpa-json/src/main/resources/core-pgjsonb.properties","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,44 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+persistence.entityFactory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n+persistence.plainSchemaDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONPlainSchemaDAO\n+persistence.plainAttrDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+persistence.plainAttrValueDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n+persistence.searchCondVisitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n+persistence.userDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+persistence.groupDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+persistence.anyObjectDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+persistence.auditConfDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAuditConfDAO\n+\n+persistence.indexesXML=classpath:pgjsonb/indexes.xml\n+persistence.viewsXML=classpath:pgjsonb/views.xml\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=org.postgresql.Driver\n+persistence.domain[0].jdbcURL=jdbc:postgresql://localhost:5432/syncope?stringtype=unspecified\n+persistence.domain[0].dbUsername=syncope\n+persistence.domain[0].dbPassword=syncope\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+persistence.domain[0].orm=META-INF/spring-orm-pgjsonb.xml\n+persistence.domain[0].auditSql=audit_pgjsonb.sql\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+provisioning.quartz.sql=tables_postgres.sql"},{"sha":"1a52f8f90999d5ad9fafbe6d4bc125fa1187620e","filename":"core/persistence-jpa-json/src/main/resources/domains/MasterContent.xml","status":"removed","additions":0,"deletions":190,"changes":190,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,190 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<dataset>\n-  <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>  \n-\n-  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n-  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- notificationjob.cronExpression:\n-  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n-  + provided as empty string: NotificationJob disabled\n-  + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n-  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <SyncopeSchema id=\"notification.maxRetries\"/>\n-  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.length\"/>\n-  <PlainSchema id=\"token.length\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"token.expireTime\"/>\n-  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n-  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.allowed\"/>\n-  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n-  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.attributes\"/>\n-  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <SyncopeSchema id=\"authentication.statuses\"/>\n-  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Save user login date upon successful authentication -->\n-  <SyncopeSchema id=\"log.lastlogindate\"/>\n-  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n-  <!-- Return hashed password values when reading users -->\n-  <SyncopeSchema id=\"return.password.value\"/>\n-  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  \n-  <!--  JWT lifetime in minutes -->                   \n-  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n-  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n-               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-    \n-  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"\n-               plainAttrs='[{\"values\":[{\"stringValue\":\"SSHA256\"}],\"schema\":\"password.cipher.algorithm\"},{\"values\":[{\"stringValue\":\"\"}],\"schema\":\"notificationjob.cronExpression\"},{\"values\":[{\"longValue\":3}],\"schema\":\"notification.maxRetries\"},{\"values\":[{\"longValue\":256}],\"schema\":\"token.length\"},{\"values\":[{\"longValue\":60}],\"schema\":\"token.expireTime\"},{\"values\":[{\"booleanValue\":true}],\"schema\":\"selfRegistration.allowed\"},{\"values\":[{\"booleanValue\":true}],\"schema\":\"passwordReset.allowed\"},{\"values\":[{\"booleanValue\":true}],\"schema\":\"passwordReset.securityQuestion\"},{\"values\":[{\"stringValue\":\"username\"},{\"stringValue\":\"email\"}],\"schema\":\"authentication.attributes\"},{\"values\":[{\"stringValue\":\"created\"},{\"stringValue\":\"active\"}],\"schema\":\"authentication.statuses\"},{\"values\":[{\"booleanValue\":true}],\"schema\":\"log.lastlogindate\"},{\"values\":[{\"booleanValue\":false}],\"schema\":\"return.password.value\"},{\"values\":[{\"longValue\":120}],\"schema\":\"jwt.lifetime.minutes\"}]'/>\n-\n-  <AnyType id=\"USER\" kind=\"USER\"/>\n-  <AnyTypeClass id=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n-\n-  <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n-  <AnyTypeClass id=\"BaseGroup\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"GROUP\" anyTypeClass_id=\"BaseGroup\"/>\n-        \n-  <!-- Actual plain schemas -->\n-  <Implementation id=\"EmailAddressValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n-  <SyncopeSchema id=\"email\"/>\n-  <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n-               validator_id=\"EmailAddressValidator\"/>\n-  \n-  <Implementation id=\"BinaryValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.BinaryValidator\"/>\n-\n-  <Implementation id=\"PullJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate\"/>\n-  <Implementation id=\"PushJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate\"/>\n-\n-\n-  <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-  <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-\n-  <!-- Password reset notifications -->\n-  <MailTemplate id=\"requestPasswordReset\"\n-                textTemplate=\"Hi,\n-a password reset was requested for ${user.getUsername()}.\n-\n-In order to complete this request, you need to visit this link:\n-\n-http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}\n-\n-If you did not request this reset, just ignore the present e-mail.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,\n-a password reset was requested for ${user.getUsername()}.&lt;/p&gt;\n-\n-&lt;p&gt;In order to complete this request, you need to visit this \n-&lt;a href=&quot;http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n-\n-&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-  <MailTemplate id=\"confirmPasswordReset\"\n-                textTemplate=\"Hi,\n-we are happy to inform you that the password request was successfully executed for your account.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,&lt;/br&gt;\n-we are happy to inform you that the password request was successfully executed for your account.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-\n-  <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n-  \n-  <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n-\n-  <ReportTemplate id=\"empty\"/>  \n-\n-  <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n-  <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n-  <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n-\n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n-</dataset>"},{"sha":"fde13715c9c36c542d22a395e5a778f59ba1bba3","filename":"core/persistence-jpa-json/src/main/resources/domains/jpa-json/MasterContent.xml","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2Fjpa-json%2FMasterContent.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -108,7 +108,7 @@ we are happy to inform you that the password request was successfully executed f\n \n   <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n+                  body='{\"_class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n \n   <SyncopeRole id=\"GROUP_OWNER\"/>","previous_filename":"docker/core/src/main/resources/domains/MasterContent.xml.myjson"},{"sha":"6dfdf264a7b08488962bf989acf210cf97b3b459","filename":"core/persistence-jpa-json/src/main/resources/myjson/domains/Master.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=jdbc:mysql://localhost:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n-Master.schema=\n-Master.username=syncope\n-Master.password=syncope\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n-Master.orm=META-INF/spring-orm-myjson.xml\n-\n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n-\n-Master.audit.sql=audit_myjson.sql"},{"sha":"eae2a7381b46405cc0008c5ebe4e033f8e1e9536","filename":"core/persistence-jpa-json/src/main/resources/myjson/indexes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Findexes.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -44,6 +44,6 @@ under the License.\n \n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n   <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n-  <entry key=\"AnyTemplatePullTask_PullTaskIndex\">CREATE INDEX AnyTemplatePullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NotificationTask_recipientsIndex\">CREATE INDEX NotificationTask_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n+  <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n+  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"fe430c2fcdaa6222ef249f4481344e39239f274d","filename":"core/persistence-jpa-json/src/main/resources/myjson/persistence.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fpersistence.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.MyJPAJSONEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAuditConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"4ab67b09b619d1f0b5c46c79892b8e10d99b68f5","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/domains/Master.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.postgresql.Driver\n-Master.url=jdbc:postgresql://localhost:5432/syncope?stringtype=unspecified\n-Master.schema=\n-Master.username=syncope\n-Master.password=syncope\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n-Master.orm=META-INF/spring-orm-pgjsonb.xml\n-\n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n-\n-Master.audit.sql=audit_pgjsonb.sql"},{"sha":"de3758a6d860f389b51dfec1f4142a1a135b8afd","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/indexes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -48,6 +48,6 @@ under the License.\n \n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n   <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n-  <entry key=\"AnyTemplatePullTaskIndex\">CREATE INDEX AnyTemplatePullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NotificationTask_recipientsIndex\">CREATE INDEX NotificationTask_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n+  <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n+  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"f8eb86e6f83ec54d62d0ab9055f35d026e7b2a30","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/persistence.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAuditConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"694fe06b79bbbde724d9f8a52bb5911ea7dd8e73","filename":"core/persistence-jpa-json/src/test/resources/core-myjson-test.properties","status":"renamed","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -14,15 +14,12 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-Master.driverClassName=org.h2.Driver\n-Master.url=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n-Master.schema=\n-Master.username=sa\n-Master.password=\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n-Master.orm=META-INF/spring-orm.xml\n \n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n+security.adminUser=${adminUser}\n+security.anonymousUser=${anonymousUser}\n+security.jwsKey=${jwsKey}\n+security.secretKey=${secretKey}\n \n-Master.audit.sql=audit.sql\n+persistence.domain[0].jdbcURL=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+\n+provisioning.connIdLocation=${connid.location}","previous_filename":"core/persistence-jpa/src/test/resources/domains/Master.properties"},{"sha":"26e61ced6ec6dd524ee4439010157d1220d5f4cf","filename":"core/persistence-jpa-json/src/test/resources/core-pgjsonb-test.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+security.adminUser=${adminUser}\n+security.anonymousUser=${anonymousUser}\n+security.jwsKey=${jwsKey}\n+security.secretKey=${secretKey}\n+\n+persistence.domain[0].jdbcURL=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope?stringtype=unspecified\n+\n+provisioning.connIdLocation=${connid.location}"},{"sha":"5b36d417c3159688d98fb6a0c204e179602b3e88","filename":"core/persistence-jpa-json/src/test/resources/myjson/domains/Master.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n-Master.schema=\n-Master.username=syncope\n-Master.password=syncope\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n-Master.orm=META-INF/spring-orm-myjson.xml\n-\n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n-\n-Master.audit.sql=audit_myjson.sql"},{"sha":"1e84aea6a91ed748d62138af9b38e2985cb1a9b3","filename":"core/persistence-jpa-json/src/test/resources/persistenceTest.xml","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,55 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>file:${conf.directory}/persistence.properties</value>\n-        <value>file:${conf.directory}/domains/*.properties</value>\n-        <value>classpath:security.properties</value>\n-      </list>\n-    </property>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n-  </bean>\n-  \n-  <bean class=\"org.apache.syncope.core.spring.ApplicationContextProvider\"/>\n-\n-  <bean id=\"adminUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${adminUser}\"/>\n-  </bean>\n-  <bean id=\"anonymousUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${anonymousUser}\"/>\n-  </bean>\n-  \n-  <context:component-scan base-package=\"org.apache.syncope.core.spring.security\"/>\n-\n-  <bean class=\"org.apache.syncope.core.spring.security.DefaultPasswordGenerator\"/>\n-\n-  <import resource=\"persistenceContext.xml\"/>\n-\n-</beans>"},{"sha":"4f42b5619719b8f72348361043e85d1bdac3592a","filename":"core/persistence-jpa-json/src/test/resources/pgjsonb/domains/Master.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.postgresql.Driver\n-Master.url=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope?stringtype=unspecified\n-Master.schema=\n-Master.username=syncope\n-Master.password=syncope\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n-Master.orm=META-INF/spring-orm-pgjsonb.xml\n-\n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n-\n-Master.audit.sql=audit_pgjsonb.sql"},{"sha":"192a4d8a8729ba3c10f3271faaae1bf545360451","filename":"core/persistence-jpa/pom.xml","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -173,7 +173,17 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      \n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <systemProperties>\n+            <CORE_PROPERTIES>classpath:core-test.properties</CORE_PROPERTIES>\n+          </systemProperties>\n+        </configuration>\n+      </plugin>\n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>"},{"sha":"68bb940c1c2487263f1c56c911c700be86cbae20","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/DomainProperties.java","status":"added","additions":189,"deletions":0,"changes":189,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import org.apache.syncope.common.keymaster.client.api.model.Domain;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+\n+public class DomainProperties {\n+\n+    private String key;\n+\n+    private String jdbcDriver;\n+\n+    private String jdbcURL;\n+\n+    private String dbSchema;\n+\n+    private String dbUsername;\n+\n+    private String dbPassword;\n+\n+    private Domain.TransactionIsolation transactionIsolation = Domain.TransactionIsolation.TRANSACTION_READ_COMMITTED;\n+\n+    private int poolMaxActive = 10;\n+\n+    private int poolMinIdle = 2;\n+\n+    private String auditSql = \"audit.sql\";\n+\n+    private String orm = \"META-INF/spring-orm.xml\";\n+\n+    private String databasePlatform;\n+\n+    private String adminPassword;\n+\n+    private CipherAlgorithm adminCipherAlgorithm = CipherAlgorithm.SHA512;\n+\n+    private String content;\n+\n+    private String keymasterConfParams;\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public String getJdbcDriver() {\n+        return jdbcDriver;\n+    }\n+\n+    public void setJdbcDriver(final String jdbcDriver) {\n+        this.jdbcDriver = jdbcDriver;\n+    }\n+\n+    public String getJdbcURL() {\n+        return jdbcURL;\n+    }\n+\n+    public void setJdbcURL(final String jdbcURL) {\n+        this.jdbcURL = jdbcURL;\n+    }\n+\n+    public String getDbSchema() {\n+        return dbSchema;\n+    }\n+\n+    public void setDbSchema(final String dbSchema) {\n+        this.dbSchema = dbSchema;\n+    }\n+\n+    public String getDbUsername() {\n+        return dbUsername;\n+    }\n+\n+    public void setDbUsername(final String dbUsername) {\n+        this.dbUsername = dbUsername;\n+    }\n+\n+    public String getDbPassword() {\n+        return dbPassword;\n+    }\n+\n+    public void setDbPassword(final String dbPassword) {\n+        this.dbPassword = dbPassword;\n+    }\n+\n+    public Domain.TransactionIsolation getTransactionIsolation() {\n+        return transactionIsolation;\n+    }\n+\n+    public void setTransactionIsolation(final Domain.TransactionIsolation transactionIsolation) {\n+        this.transactionIsolation = transactionIsolation;\n+    }\n+\n+    public int getPoolMaxActive() {\n+        return poolMaxActive;\n+    }\n+\n+    public void setPoolMaxActive(final int poolMaxActive) {\n+        this.poolMaxActive = poolMaxActive;\n+    }\n+\n+    public int getPoolMinIdle() {\n+        return poolMinIdle;\n+    }\n+\n+    public void setPoolMinIdle(final int poolMinIdle) {\n+        this.poolMinIdle = poolMinIdle;\n+    }\n+\n+    public String getAuditSql() {\n+        return auditSql;\n+    }\n+\n+    public void setAuditSql(final String auditSql) {\n+        this.auditSql = auditSql;\n+    }\n+\n+    public String getOrm() {\n+        return orm;\n+    }\n+\n+    public void setOrm(final String orm) {\n+        this.orm = orm;\n+    }\n+\n+    public String getDatabasePlatform() {\n+        return databasePlatform;\n+    }\n+\n+    public void setDatabasePlatform(final String databasePlatform) {\n+        this.databasePlatform = databasePlatform;\n+    }\n+\n+    public String getAdminPassword() {\n+        return adminPassword;\n+    }\n+\n+    public void setAdminPassword(final String adminPassword) {\n+        this.adminPassword = adminPassword;\n+    }\n+\n+    public CipherAlgorithm getAdminCipherAlgorithm() {\n+        return adminCipherAlgorithm;\n+    }\n+\n+    public void setAdminCipherAlgorithm(final CipherAlgorithm adminCipherAlgorithm) {\n+        this.adminCipherAlgorithm = adminCipherAlgorithm;\n+    }\n+\n+    public String getContent() {\n+        return content == null\n+                ? \"classpath:domains/\" + key + \"Content.xml\"\n+                : content;\n+    }\n+\n+    public void setContent(final String content) {\n+        this.content = content;\n+    }\n+\n+    public String getKeymasterConfParams() {\n+        return keymasterConfParams == null\n+                ? \"classpath:domains/\" + key + \"KeymasterConfParams.json\"\n+                : keymasterConfParams;\n+    }\n+\n+    public void setKeymasterConfParams(final String keymasterConfParams) {\n+        this.keymasterConfParams = keymasterConfParams;\n+    }\n+}"},{"sha":"215bb9f6209d3ee9f3bf2bc78aee6947761a1d7c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/MasterDomain.java","status":"modified","additions":30,"deletions":89,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -26,107 +26,68 @@\n import java.util.Objects;\n \n import javax.sql.DataSource;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf;\n import org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.context.ConfigurableApplicationContext;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.DependsOn;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n-import org.springframework.core.io.Resource;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.ResourceLoader;\n import org.springframework.jdbc.datasource.init.DataSourceInitializer;\n import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.jndi.JndiObjectFactoryBean;\n import org.springframework.orm.jpa.JpaTransactionManager;\n import org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter;\n import org.springframework.transaction.PlatformTransactionManager;\n \n-@PropertySource(\"classpath:domains/Master.properties\")\n-@PropertySource(value = \"file:${conf.directory}/domains/Master.properties\", ignoreResourceNotFound = true)\n+@EnableConfigurationProperties(PersistenceProperties.class)\n @Configuration\n public class MasterDomain {\n \n     @Autowired\n     private CommonEntityManagerFactoryConf commonEMFConf;\n \n     @Autowired\n-    private ConfigurableApplicationContext ctx;\n+    private ResourceLoader resourceLoader;\n \n     @Autowired\n-    private Environment env;\n+    private PersistenceProperties props;\n \n-    @Value(\"${Master.driverClassName}\")\n-    private String driverClassName;\n-\n-    @Value(\"${Master.url}\")\n-    private String url;\n-\n-    @Value(\"${Master.schema}\")\n-    private String schema;\n-\n-    @Value(\"${Master.username}\")\n-    private String username;\n-\n-    @Value(\"${Master.password}\")\n-    private String password;\n-\n-    @Value(\"${Master.pool.transactionIsolation:TRANSACTION_READ_COMMITTED}\")\n-    private String transactionIsolation;\n-\n-    @Value(\"${Master.pool.maxActive:10}\")\n-    private int maximumPoolSize;\n-\n-    @Value(\"${Master.pool.minIdle:2}\")\n-    private int minimumIdle;\n-\n-    @Value(\"classpath:/audit/${Master.audit.sql}\")\n-    private Resource auditSql;\n-\n-    @Value(\"${Master.orm}\")\n-    private String orm;\n-\n-    @Value(\"${Master.databasePlatform}\")\n-    private String databasePlatform;\n-\n-    @Value(\"${content.directory}\")\n-    private String contentDirectory;\n-\n-    @Bean(name = \"MasterDataSource\")\n     @ConditionalOnMissingBean(name = \"MasterDataSource\")\n+    @Bean(name = \"MasterDataSource\")\n     public JndiObjectFactoryBean masterDataSource() {\n         HikariConfig hikariConfig = new HikariConfig();\n-        hikariConfig.setDriverClassName(driverClassName);\n-        hikariConfig.setJdbcUrl(url);\n-        hikariConfig.setUsername(username);\n-        hikariConfig.setPassword(password);\n-        hikariConfig.setTransactionIsolation(transactionIsolation);\n-        hikariConfig.setMaximumPoolSize(maximumPoolSize);\n-        hikariConfig.setMinimumIdle(minimumIdle);\n+        hikariConfig.setDriverClassName(props.getDomain().get(0).getJdbcDriver());\n+        hikariConfig.setJdbcUrl(props.getDomain().get(0).getJdbcURL());\n+        hikariConfig.setUsername(props.getDomain().get(0).getDbUsername());\n+        hikariConfig.setPassword(props.getDomain().get(0).getDbPassword());\n+        hikariConfig.setTransactionIsolation(props.getDomain().get(0).getTransactionIsolation().name());\n+        hikariConfig.setMaximumPoolSize(props.getDomain().get(0).getPoolMaxActive());\n+        hikariConfig.setMinimumIdle(props.getDomain().get(0).getPoolMinIdle());\n \n         JndiObjectFactoryBean masterDataSource = new JndiObjectFactoryBean();\n         masterDataSource.setJndiName(\"java:comp/env/jdbc/syncopeMasterDataSource\");\n         masterDataSource.setDefaultObject(new HikariDataSource(hikariConfig));\n         return masterDataSource;\n     }\n \n-    @Bean(name = \"MasterResourceDatabasePopulator\")\n     @ConditionalOnMissingBean(name = \"MasterResourceDatabasePopulator\")\n+    @Bean(name = \"MasterResourceDatabasePopulator\")\n     public ResourceDatabasePopulator masterResourceDatabasePopulator() {\n         ResourceDatabasePopulator databasePopulator = new ResourceDatabasePopulator();\n         databasePopulator.setContinueOnError(true);\n         databasePopulator.setIgnoreFailedDrops(true);\n         databasePopulator.setSqlScriptEncoding(\"UTF-8\");\n-        databasePopulator.addScript(auditSql);\n+        databasePopulator.addScript(new ClassPathResource(\"/audit/\" + props.getDomain().get(0).getAuditSql()));\n         return databasePopulator;\n     }\n \n-    @Bean(name = \"MasterDataSourceInitializer\")\n     @ConditionalOnMissingBean(name = \"MasterDataSourceInitializer\")\n+    @Bean(name = \"MasterDataSourceInitializer\")\n     public DataSourceInitializer masterDataSourceInitializer() {\n         DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();\n         dataSourceInitializer.setDataSource((DataSource) Objects.requireNonNull(masterDataSource().getObject()));\n@@ -135,69 +96,49 @@ public DataSourceInitializer masterDataSourceInitializer() {\n         return dataSourceInitializer;\n     }\n \n-    @Bean(name = \"MasterEntityManagerFactory\")\n-    @DependsOn(\"commonEMFConf\")\n     @ConditionalOnMissingBean(name = \"MasterEntityManagerFactory\")\n+    @DependsOn(\"commonEMFConf\")\n+    @Bean(name = \"MasterEntityManagerFactory\")\n     public DomainEntityManagerFactoryBean masterEntityManagerFactory() {\n         OpenJpaVendorAdapter vendorAdapter = new OpenJpaVendorAdapter();\n         vendorAdapter.setShowSql(false);\n         vendorAdapter.setGenerateDdl(true);\n-        vendorAdapter.setDatabasePlatform(databasePlatform);\n-        DomainEntityManagerFactoryBean masterEntityManagerFactory = new DomainEntityManagerFactoryBean();\n-        masterEntityManagerFactory.setMappingResources(orm);\n-        masterEntityManagerFactory.setPersistenceUnitName(\"Master\");\n+        vendorAdapter.setDatabasePlatform(props.getDomain().get(0).getDatabasePlatform());\n \n+        DomainEntityManagerFactoryBean masterEntityManagerFactory = new DomainEntityManagerFactoryBean();\n+        masterEntityManagerFactory.setMappingResources(props.getDomain().get(0).getOrm());\n+        masterEntityManagerFactory.setPersistenceUnitName(SyncopeConstants.MASTER_DOMAIN);\n         masterEntityManagerFactory.setDataSource(Objects.requireNonNull((DataSource) masterDataSource().getObject()));\n         masterEntityManagerFactory.setJpaVendorAdapter(vendorAdapter);\n         masterEntityManagerFactory.setCommonEntityManagerFactoryConf(commonEMFConf);\n \n-        if (env.containsProperty(\"openjpaMetaDataFactory\")) {\n+        if (props.getMetaDataFactory() != null) {\n             masterEntityManagerFactory.setJpaPropertyMap(Map.of(\n                     \"openjpa.MetaDataFactory\",\n-                    Objects.requireNonNull(env.getProperty(\"openjpaMetaDataFactory\")).replace(\"##orm##\", orm)));\n+                    props.getMetaDataFactory().replace(\"##orm##\", props.getDomain().get(0).getOrm())));\n         }\n \n         return masterEntityManagerFactory;\n     }\n \n-    @Bean(name = { \"MasterTransactionManager\", \"Master\" })\n     @ConditionalOnMissingBean(name = \"MasterTransactionManager\")\n+    @Bean(name = { \"MasterTransactionManager\", \"Master\" })\n     public PlatformTransactionManager transactionManager() {\n         return new JpaTransactionManager(Objects.requireNonNull(masterEntityManagerFactory().getObject()));\n     }\n \n-    @Bean(name = \"MasterProperties\")\n-    @ConditionalOnMissingBean(name = \"MasterProperties\")\n-    public ResourceWithFallbackLoader masterProperties() {\n-        ResourceWithFallbackLoader masterProperties = new ResourceWithFallbackLoader();\n-        masterProperties.setPrimary(\"file:\" + contentDirectory + \"/domains/Master.properties\");\n-        masterProperties.setFallback(\"classpath:domains/Master.properties\");\n-        return masterProperties;\n-    }\n-\n     @Bean(name = \"MasterContentXML\")\n-    @ConditionalOnMissingBean(name = \"MasterContentXML\")\n     public InputStream masterContentXML() throws IOException {\n-        ResourceWithFallbackLoader masterContentXML =\n-                ctx.getBeanFactory().createBean(ResourceWithFallbackLoader.class);\n-        masterContentXML.setPrimary(\"file:\" + contentDirectory + \"/domains/MasterContent.xml\");\n-        masterContentXML.setFallback(\"classpath:domains/MasterContent.xml\");\n-        return masterContentXML.getResource().getInputStream();\n+        return resourceLoader.getResource(props.getDomain().get(0).getContent()).getInputStream();\n     }\n \n     @Bean(name = \"MasterKeymasterConfParamsJSON\")\n-    @ConditionalOnMissingBean(name = \"MasterKeymasterConfParamsJSON\")\n     public InputStream masterKeymasterConfParamsJSON() throws IOException {\n-        ResourceWithFallbackLoader keymasterConfParamsJSON =\n-                ctx.getBeanFactory().createBean(ResourceWithFallbackLoader.class);\n-        keymasterConfParamsJSON.setPrimary(\"file:\" + contentDirectory + \"/domains/MasterKeymasterConfParams.json\");\n-        keymasterConfParamsJSON.setFallback(\"classpath:domains/MasterKeymasterConfParams.json\");\n-        return keymasterConfParamsJSON.getResource().getInputStream();\n+        return resourceLoader.getResource(props.getDomain().get(0).getKeymasterConfParams()).getInputStream();\n     }\n \n     @Bean(name = \"MasterDatabaseSchema\")\n-    @ConditionalOnMissingBean(name = \"MasterDatabaseSchema\")\n     public String masterDatabaseSchema() {\n-        return schema;\n+        return props.getDomain().get(0).getDbSchema();\n     }\n }"},{"sha":"11849efca495b031f889b499d72131ae5735d33b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"modified","additions":48,"deletions":77,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,6 +25,7 @@\n import javax.validation.Validator;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.AuditConfDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n@@ -35,40 +36,37 @@\n import org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf;\n import org.apache.syncope.core.persistence.jpa.spring.DomainTransactionInterceptorInjector;\n import org.apache.syncope.core.persistence.jpa.spring.MultiJarAwarePersistenceUnitPostProcessor;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.context.EnvironmentAware;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.ResourceLoader;\n import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;\n-import org.apache.syncope.core.persistence.api.dao.AuditConfDAO;\n \n-@PropertySource(\"classpath:persistence.properties\")\n-@PropertySource(value = \"file:${conf.directory}/persistence.properties\", ignoreResourceNotFound = true)\n @ComponentScan(\"org.apache.syncope.core.persistence.jpa\")\n+@EnableConfigurationProperties(PersistenceProperties.class)\n @Configuration\n-public class PersistenceContext implements EnvironmentAware {\n+public class PersistenceContext {\n \n     private static final Logger OPENJPA_LOG = LoggerFactory.getLogger(\"org.apache.openjpa\");\n \n-    private Environment env;\n-\n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n-\n     @Bean\n     public static BeanFactoryPostProcessor domainTransactionInterceptorInjector() {\n         return new DomainTransactionInterceptorInjector();\n     }\n \n+    @Autowired\n+    private PersistenceProperties props;\n+\n+    @Autowired\n+    private ResourceLoader resourceLoader;\n+\n     @ConditionalOnMissingBean\n     @Bean\n     public CommonEntityManagerFactoryConf commonEMFConf() {\n@@ -96,121 +94,94 @@ public CommonEntityManagerFactoryConf commonEMFConf() {\n         jpaPropertyMap.put(\"openjpa.DataCache\", \"true\");\n         jpaPropertyMap.put(\"openjpa.QueryCache\", \"true\");\n \n-        jpaPropertyMap.put(\"openjpa.RemoteCommitProvider\", env.getProperty(\"openjpa.RemoteCommitProvider\", \"sjvm\"));\n+        jpaPropertyMap.put(\"openjpa.RemoteCommitProvider\", props.getRemoteCommitProvider());\n \n         commonEMFConf.setJpaPropertyMap(jpaPropertyMap);\n         return commonEMFConf;\n     }\n \n     @Bean\n-    public EntityFactory entityFactory()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public EntityFactory entityFactory() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (EntityFactory) Class.forName(env.getProperty(\"entity.factory\")).getConstructor().newInstance();\n+        return props.getEntityFactory().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"plainSchemaDAO\")\n     @Bean\n-    public PlainSchemaDAO plainSchemaDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public PlainSchemaDAO plainSchemaDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainSchemaDAO) Class.forName(env.getProperty(\"plainSchema.dao\")).getConstructor().newInstance();\n+        return props.getPlainSchemaDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"plainAttrDAO\")\n     @Bean\n-    public PlainAttrDAO plainAttrDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public PlainAttrDAO plainAttrDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainAttrDAO) Class.forName(env.getProperty(\"plainAttr.dao\")).getConstructor().newInstance();\n+        return props.getPlainAttrDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"plainAttrValueDAO\")\n     @Bean\n-    public PlainAttrValueDAO plainAttrValueDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public PlainAttrValueDAO plainAttrValueDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainAttrValueDAO) Class.forName(env.getProperty(\"plainAttrValue.dao\")).getConstructor().newInstance();\n+        return props.getPlainAttrValueDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"anySearchDAO\")\n     @Bean\n-    public AnySearchDAO anySearchDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public AnySearchDAO anySearchDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AnySearchDAO) Class.forName(env.getProperty(\"any.search.dao\")).getConstructor().newInstance();\n+        return props.getAnySearchDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"anySearchVisitor\")\n     @Bean\n-    public SearchCondVisitor anySearchVisitor()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public SearchCondVisitor searchCondVisitor() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (SearchCondVisitor) Class.forName(env.getProperty(\"any.search.visitor\")).getConstructor().newInstance();\n+        return props.getSearchCondVisitor().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"userDAO\")\n     @Bean\n-    public UserDAO userDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public UserDAO userDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (UserDAO) Class.forName(env.getProperty(\"user.dao\")).getConstructor().newInstance();\n+        return props.getUserDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"groupDAO\")\n     @Bean\n-    public GroupDAO groupDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public GroupDAO groupDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (GroupDAO) Class.forName(env.getProperty(\"group.dao\")).getConstructor().newInstance();\n+        return props.getGroupDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"anyObjectDAO\")\n     @Bean\n-    public AnyObjectDAO anyObjectDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public AnyObjectDAO anyObjectDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AnyObjectDAO) Class.forName(env.getProperty(\"anyObject.dao\")).getConstructor().newInstance();\n+        return props.getAnyObjectDAO().getDeclaredConstructor().newInstance();\n     }\n \n-    @ConditionalOnMissingBean(name = \"auditDAO\")\n     @Bean\n-    public AuditConfDAO auditDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public AuditConfDAO auditConfDAO() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AuditConfDAO) Class.forName(env.getProperty(\"audit.dao\")).getConstructor().newInstance();\n+        return props.getAuditConfDAO().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n     public Validator localValidatorFactoryBean() {\n         return new LocalValidatorFactoryBean();\n     }\n \n-    @ConditionalOnMissingBean(name = \"viewsXML\")\n     @Bean\n-    public ResourceWithFallbackLoader viewsXML() {\n-        ResourceWithFallbackLoader viewsXML = new ResourceWithFallbackLoader();\n-        viewsXML.setPrimary(\"file:\" + env.getProperty(\"content.directory\") + \"/views.xml\");\n-        viewsXML.setFallback(\"classpath:views.xml\");\n-        return viewsXML;\n+    public Resource viewsXML() {\n+        return resourceLoader.getResource(props.getViewsXML());\n     }\n \n-    @ConditionalOnMissingBean(name = \"indexesXML\")\n     @Bean\n-    public ResourceWithFallbackLoader indexesXML() {\n-        ResourceWithFallbackLoader indexesXML = new ResourceWithFallbackLoader();\n-        indexesXML.setPrimary(\"file:\" + env.getProperty(\"content.directory\") + \"/indexes.xml\");\n-        indexesXML.setFallback(\"classpath:indexes.xml\");\n-        return indexesXML;\n+    public Resource indexesXML() {\n+        return resourceLoader.getResource(props.getIndexesXML());\n     }\n }"},{"sha":"4af0eea04e5283f5692171a20564bad443c38b39","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceProperties.java","status":"added","additions":194,"deletions":0,"changes":194,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,194 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.AuditConfDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.search.SearchCondVisitor;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAAuditConfDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrValueDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.NestedConfigurationProperty;\n+\n+@ConfigurationProperties(\"persistence\")\n+public class PersistenceProperties {\n+\n+    private String remoteCommitProvider = \"sjvm\";\n+\n+    private String metaDataFactory;\n+\n+    private Class<? extends EntityFactory> entityFactory = JPAEntityFactory.class;\n+\n+    private Class<? extends PlainSchemaDAO> plainSchemaDAO = JPAPlainSchemaDAO.class;\n+\n+    private Class<? extends PlainAttrDAO> plainAttrDAO = JPAPlainAttrDAO.class;\n+\n+    private Class<? extends PlainAttrValueDAO> plainAttrValueDAO = JPAPlainAttrValueDAO.class;\n+\n+    private Class<? extends AnySearchDAO> anySearchDAO = JPAAnySearchDAO.class;\n+\n+    private Class<? extends SearchCondVisitor> searchCondVisitor = SearchCondVisitor.class;\n+\n+    private Class<? extends UserDAO> userDAO = JPAUserDAO.class;\n+\n+    private Class<? extends GroupDAO> groupDAO = JPAGroupDAO.class;\n+\n+    private Class<? extends AnyObjectDAO> anyObjectDAO = JPAAnyObjectDAO.class;\n+\n+    private Class<? extends AuditConfDAO> auditConfDAO = JPAAuditConfDAO.class;\n+\n+    private String viewsXML = \"classpath:views.xml\";\n+\n+    private String indexesXML = \"classpath:indexes.xml\";\n+\n+    @NestedConfigurationProperty\n+    private final List<DomainProperties> domain = new ArrayList<>();\n+\n+    public String getRemoteCommitProvider() {\n+        return remoteCommitProvider;\n+    }\n+\n+    public void setRemoteCommitProvider(final String remoteCommitProvider) {\n+        this.remoteCommitProvider = remoteCommitProvider;\n+    }\n+\n+    public String getMetaDataFactory() {\n+        return metaDataFactory;\n+    }\n+\n+    public void setMetaDataFactory(final String metaDataFactory) {\n+        this.metaDataFactory = metaDataFactory;\n+    }\n+\n+    public Class<? extends EntityFactory> getEntityFactory() {\n+        return entityFactory;\n+    }\n+\n+    public void setEntityFactory(final Class<? extends EntityFactory> entityFactory) {\n+        this.entityFactory = entityFactory;\n+    }\n+\n+    public Class<? extends PlainSchemaDAO> getPlainSchemaDAO() {\n+        return plainSchemaDAO;\n+    }\n+\n+    public void setPlainSchemaDAO(final Class<? extends PlainSchemaDAO> plainSchemaDAO) {\n+        this.plainSchemaDAO = plainSchemaDAO;\n+    }\n+\n+    public Class<? extends PlainAttrDAO> getPlainAttrDAO() {\n+        return plainAttrDAO;\n+    }\n+\n+    public void setPlainAttrDAO(final Class<? extends PlainAttrDAO> plainAttrDAO) {\n+        this.plainAttrDAO = plainAttrDAO;\n+    }\n+\n+    public Class<? extends PlainAttrValueDAO> getPlainAttrValueDAO() {\n+        return plainAttrValueDAO;\n+    }\n+\n+    public void setPlainAttrValueDAO(final Class<? extends PlainAttrValueDAO> plainAttrValueDAO) {\n+        this.plainAttrValueDAO = plainAttrValueDAO;\n+    }\n+\n+    public Class<? extends AnySearchDAO> getAnySearchDAO() {\n+        return anySearchDAO;\n+    }\n+\n+    public void setAnySearchDAO(final Class<? extends AnySearchDAO> anySearchDAO) {\n+        this.anySearchDAO = anySearchDAO;\n+    }\n+\n+    public Class<? extends SearchCondVisitor> getSearchCondVisitor() {\n+        return searchCondVisitor;\n+    }\n+\n+    public void setSearchCondVisitor(final Class<? extends SearchCondVisitor> searchCondVisitor) {\n+        this.searchCondVisitor = searchCondVisitor;\n+    }\n+\n+    public Class<? extends UserDAO> getUserDAO() {\n+        return userDAO;\n+    }\n+\n+    public void setUserDAO(final Class<? extends UserDAO> userDAO) {\n+        this.userDAO = userDAO;\n+    }\n+\n+    public Class<? extends GroupDAO> getGroupDAO() {\n+        return groupDAO;\n+    }\n+\n+    public void setGroupDAO(final Class<? extends GroupDAO> groupDAO) {\n+        this.groupDAO = groupDAO;\n+    }\n+\n+    public Class<? extends AnyObjectDAO> getAnyObjectDAO() {\n+        return anyObjectDAO;\n+    }\n+\n+    public void setAnyObjectDAO(final Class<? extends AnyObjectDAO> anyObjectDAO) {\n+        this.anyObjectDAO = anyObjectDAO;\n+    }\n+\n+    public Class<? extends AuditConfDAO> getAuditConfDAO() {\n+        return auditConfDAO;\n+    }\n+\n+    public void setAuditConfDAO(final Class<? extends AuditConfDAO> auditConfDAO) {\n+        this.auditConfDAO = auditConfDAO;\n+    }\n+\n+    public String getViewsXML() {\n+        return viewsXML;\n+    }\n+\n+    public void setViewsXML(final String viewsXML) {\n+        this.viewsXML = viewsXML;\n+    }\n+\n+    public String getIndexesXML() {\n+        return indexesXML;\n+    }\n+\n+    public void setIndexesXML(final String indexesXML) {\n+        this.indexesXML = indexesXML;\n+    }\n+\n+    public List<DomainProperties> getDomain() {\n+        return domain;\n+    }\n+}"},{"sha":"9bfc9099c7053cf0e0a11abddc6bbc6a4bbe6907","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/RuntimeDomainLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FRuntimeDomainLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FRuntimeDomainLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FRuntimeDomainLoader.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -53,7 +53,7 @@ public void added(final Domain domain) {\n \n             ApplicationContextProvider.getApplicationContext().getBeansOfType(SyncopeCoreLoader.class).values().\n                     stream().sorted(Comparator.comparing(SyncopeCoreLoader::getOrder)).\n-                    forEachOrdered(loader -> {\n+                    forEach(loader -> {\n                         String loaderName = AopUtils.getTargetClass(loader).getName();\n \n                         LOG.debug(\"[{}] Starting on domain '{}'\", loaderName, domain);"},{"sha":"b3a6d3e340da4ab2e4983434388de1441a277377","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/StartupDomainLoader.java","status":"modified","additions":50,"deletions":93,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,54 +18,42 @@\n  */\n package org.apache.syncope.core.persistence.jpa;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n-import java.util.Enumeration;\n import java.util.Map;\n-import java.util.Properties;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n-import org.apache.syncope.common.lib.PropertyUtils;\n-import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n import org.apache.syncope.core.persistence.api.DomainRegistry;\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.core.Ordered;\n-import org.springframework.core.io.Resource;\n+import org.springframework.core.io.ResourceLoader;\n import org.springframework.stereotype.Component;\n \n @Component\n public class StartupDomainLoader implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(StartupDomainLoader.class);\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n     @Autowired\n     private DomainOps domainOps;\n \n     @Autowired\n-    private ConfigurableApplicationContext ctx;\n+    private DomainHolder domainHolder;\n \n     @Autowired\n-    private DomainHolder domainHolder;\n+    private PersistenceProperties persistenceProperties;\n \n     @Autowired\n-    private DomainRegistry domainRegistry;\n+    private ResourceLoader resourceLoader;\n \n-    @Value(\"${content.directory}\")\n-    private String contentDirectory;\n+    @Autowired\n+    private DomainRegistry domainRegistry;\n \n     @Override\n     public int getOrder() {\n@@ -74,82 +62,51 @@ public int getOrder() {\n \n     @Override\n     public void load() {\n-        try {\n-            Map<String, Domain> keymasterDomains = domainOps.list().stream().\n-                    collect(Collectors.toMap(Domain::getKey, Function.identity()));\n-\n-            for (Resource domainProp : ctx.getResources(\"classpath:/domains/*.properties\")) {\n-                String domainPropFile = StringUtils.substringAfterLast(domainProp.getURL().toExternalForm(), \"/\");\n-                String key = StringUtils.substringBefore(domainPropFile, \".\");\n-\n-                if (!domainHolder.getDomains().containsKey(key)) {\n-                    if (keymasterDomains.containsKey(key)) {\n-                        LOG.info(\"Domain {} initialization\", key);\n-\n-                        domainRegistry.register(keymasterDomains.get(key));\n-\n-                        LOG.info(\"Domain {} successfully inited\", key);\n-                    } else {\n-                        Domain.Builder builder = new Domain.Builder(key);\n-\n-                        Properties props = PropertyUtils.read(getClass(),\n-                                \"domains/\" + domainPropFile, contentDirectory);\n-                        for (Enumeration<?> e = props.propertyNames(); e.hasMoreElements();) {\n-                            String prop = (String) e.nextElement();\n-\n-                            if (prop.endsWith(\".driverClassName\")) {\n-                                builder.jdbcDriver(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".url\")) {\n-                                builder.jdbcURL(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".schema\")) {\n-                                builder.dbSchema(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".username\")) {\n-                                builder.dbUsername(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".password\")) {\n-                                builder.dbPassword(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".databasePlatform\")) {\n-                                builder.databasePlatform(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".orm\")) {\n-                                builder.orm(props.getProperty(prop));\n-                            } else if (prop.endsWith(\".pool.maxActive\")) {\n-                                builder.poolMaxActive(Integer.parseInt(props.getProperty(prop)));\n-                            } else if (prop.endsWith(\".pool.minIdle\")) {\n-                                builder.poolMinIdle(Integer.parseInt(props.getProperty(prop)));\n-                            } else if (prop.endsWith(\".audit.sql\")) {\n-                                builder.auditSql(props.getProperty(prop));\n-                            }\n-                        }\n-\n-                        ResourceWithFallbackLoader content =\n-                                ctx.getBeanFactory().createBean(ResourceWithFallbackLoader.class);\n-                        content.setPrimary(\"file:\" + contentDirectory + \"/domains/\" + key + \"Content.xml\");\n-                        content.setFallback(\"classpath:domains/\" + key + \"Content.xml\");\n-                        builder.content(IOUtils.toString(content.getResource().getInputStream()));\n-\n-                        ResourceWithFallbackLoader keymasterConfParams =\n-                                ctx.getBeanFactory().createBean(ResourceWithFallbackLoader.class);\n-                        keymasterConfParams.setPrimary(\n-                                \"file:\" + contentDirectory + \"/domains/\" + key + \"KeymasterConfParams.json\");\n-                        keymasterConfParams.setFallback(\"classpath:domains/\" + key + \"KeymasterConfParams.json\");\n-                        builder.keymasterConfParams(\n-                                IOUtils.toString(keymasterConfParams.getResource().getInputStream()));\n-\n-                        ResourceWithFallbackLoader security =\n-                                ctx.getBeanFactory().createBean(ResourceWithFallbackLoader.class);\n-                        security.setPrimary(\"file:\" + contentDirectory + \"/domains/\" + key + \"Security.json\");\n-                        security.setFallback(\"classpath:domains/\" + key + \"Security.json\");\n-\n-                        JsonNode securityInfo = MAPPER.readTree(security.getResource().getInputStream());\n-                        builder.adminPassword(securityInfo.get(\"password\").asText());\n-                        builder.adminCipherAlgorithm(\n-                                CipherAlgorithm.valueOf(securityInfo.get(\"cipherAlgorithm\").asText()));\n-\n-                        domainOps.create(builder.build());\n-                    }\n+        Map<String, Domain> keymasterDomains = domainOps.list().stream().\n+                collect(Collectors.toMap(Domain::getKey, Function.identity()));\n+\n+        persistenceProperties.getDomain().stream().\n+                filter(d -> !domainHolder.getDomains().containsKey(d.getKey())).forEach(domainProps -> {\n+\n+            if (keymasterDomains.containsKey(domainProps.getKey())) {\n+                LOG.info(\"Domain {} initialization\", domainProps.getKey());\n+\n+                domainRegistry.register(keymasterDomains.get(domainProps.getKey()));\n+\n+                LOG.info(\"Domain {} successfully inited\", domainProps.getKey());\n+            } else {\n+                Domain.Builder builder = new Domain.Builder(domainProps.getKey());\n+\n+                builder.adminPassword(domainProps.getAdminPassword());\n+                builder.adminCipherAlgorithm(domainProps.getAdminCipherAlgorithm());\n+\n+                builder.jdbcDriver(domainProps.getJdbcDriver());\n+                builder.jdbcURL(domainProps.getJdbcURL());\n+                builder.dbSchema(domainProps.getDbSchema());\n+                builder.dbUsername(domainProps.getDbUsername());\n+                builder.dbPassword(domainProps.getDbPassword());\n+                builder.databasePlatform(domainProps.getDatabasePlatform());\n+                builder.orm(domainProps.getOrm());\n+                builder.poolMaxActive(domainProps.getPoolMaxActive());\n+                builder.poolMinIdle(domainProps.getPoolMinIdle());\n+                builder.auditSql(domainProps.getAuditSql());\n+\n+                try {\n+                    builder.content(IOUtils.toString(\n+                            resourceLoader.getResource(domainProps.getContent()).getInputStream()));\n+                } catch (IOException e) {\n+                    LOG.error(\"While loading {}\", domainProps.getContent(), e);\n+                }\n+\n+                try {\n+                    builder.keymasterConfParams(IOUtils.toString(\n+                            resourceLoader.getResource(domainProps.getKeymasterConfParams()).getInputStream()));\n+                } catch (IOException e) {\n+                    LOG.error(\"While loading {}\", domainProps.getKeymasterConfParams(), e);\n                 }\n+\n+                domainOps.create(builder.build());\n             }\n-        } catch (IOException | NumberFormatException e) {\n-            LOG.error(\"Error during domain initialization\", e);\n-        }\n+        });\n     }\n }"},{"sha":"d71be3e4213d665db53b3644bd153ca7b9ea040a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -66,6 +66,7 @@\n import javax.xml.transform.stream.StreamResult;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.helpers.IOUtils;\n import org.apache.openjpa.lib.util.collections.BidiMap;\n import org.apache.openjpa.lib.util.collections.DualHashBidiMap;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n@@ -90,7 +91,6 @@\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.tika.io.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -216,14 +216,14 @@ private static String getValues(final ResultSet rs, final String columnName, fin\n                 case Types.LONGVARBINARY:\n                     InputStream is = rs.getBinaryStream(columnName);\n                     if (is != null) {\n-                        res = DatatypeConverter.printHexBinary(IOUtils.toByteArray(is));\n+                        res = DatatypeConverter.printHexBinary(IOUtils.toString(is).getBytes());\n                     }\n                     break;\n \n                 case Types.BLOB:\n                     Blob blob = rs.getBlob(columnName);\n                     if (blob != null) {\n-                        res = DatatypeConverter.printHexBinary(IOUtils.toByteArray(blob.getBinaryStream()));\n+                        res = DatatypeConverter.printHexBinary(IOUtils.toString(blob.getBinaryStream()).getBytes());\n                     }\n                     break;\n \n@@ -517,20 +517,23 @@ public void export(\n             throw new IllegalArgumentException(\"Could not find DataSource for domain \" + domain);\n         }\n \n-        String schema = ApplicationContextProvider.getBeanFactory().containsBean(domain + \"DatabaseSchema\")\n-                ? ApplicationContextProvider.getBeanFactory().getBean(domain + \"DatabaseSchema\", String.class)\n-                : null;\n+        String schema = null;\n+        if (ApplicationContextProvider.getBeanFactory().containsBean(domain + \"DatabaseSchema\")) {\n+            Object schemaBean = ApplicationContextProvider.getBeanFactory().getBean(domain + \"DatabaseSchema\");\n+            if (schemaBean instanceof String) {\n+                schema = (String) schemaBean;\n+            }\n+        }\n \n         Connection conn = null;\n         ResultSet rs = null;\n         try {\n             conn = DataSourceUtils.getConnection(dataSource);\n             final DatabaseMetaData meta = conn.getMetaData();\n \n-            rs = meta.getTables(null, StringUtils.isBlank(schema) ? null : schema, null,\n-                    new String[] { \"TABLE\" });\n+            rs = meta.getTables(null, StringUtils.isBlank(schema) ? null : schema, null, new String[] { \"TABLE\" });\n \n-            final Set<String> tableNames = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+            Set<String> tableNames = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n \n             while (rs.next()) {\n                 String tableName = rs.getString(\"TABLE_NAME\");"},{"sha":"8347ef683cfac8e1890e83aa1d43b7429e9ee805","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,7 +21,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n-import javax.annotation.Resource;\n import javax.sql.DataSource;\n import javax.xml.XMLConstants;\n import javax.xml.parsers.ParserConfigurationException;\n@@ -30,11 +29,11 @@\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.env.Environment;\n+import org.springframework.core.io.Resource;\n import org.springframework.core.io.support.PropertiesLoaderUtils;\n import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n@@ -50,11 +49,11 @@ public class XMLContentLoader implements ContentLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(XMLContentLoader.class);\n \n-    @Resource(name = \"viewsXML\")\n-    private ResourceWithFallbackLoader viewsXML;\n+    @javax.annotation.Resource(name = \"viewsXML\")\n+    private Resource viewsXML;\n \n-    @Resource(name = \"indexesXML\")\n-    private ResourceWithFallbackLoader indexesXML;\n+    @javax.annotation.Resource(name = \"indexesXML\")\n+    private Resource indexesXML;\n \n     @Autowired\n     private Environment env;\n@@ -125,8 +124,8 @@ private void createViews(final String domain, final DataSource dataSource) throw\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n \n-        Properties views = PropertiesLoaderUtils.loadProperties(viewsXML.getResource());\n-        views.stringPropertyNames().stream().sorted().forEachOrdered(idx -> {\n+        Properties views = PropertiesLoaderUtils.loadProperties(viewsXML);\n+        views.stringPropertyNames().stream().sorted().forEach(idx -> {\n             LOG.debug(\"[{}] Creating view {}\", domain, views.get(idx).toString());\n             try {\n                 jdbcTemplate.execute(views.getProperty(idx).replaceAll(\"\\\\n\", \" \"));\n@@ -143,8 +142,8 @@ private void createIndexes(final String domain, final DataSource dataSource) thr\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n \n-        Properties indexes = PropertiesLoaderUtils.loadProperties(indexesXML.getResource());\n-        indexes.stringPropertyNames().stream().sorted().forEachOrdered(idx -> {\n+        Properties indexes = PropertiesLoaderUtils.loadProperties(indexesXML);\n+        indexes.stringPropertyNames().stream().sorted().forEach(idx -> {\n             LOG.debug(\"[{}] Creating index {}\", domain, indexes.get(idx).toString());\n             try {\n                 jdbcTemplate.execute(indexes.getProperty(idx));"},{"sha":"d96848e0a455bfa506a80be155464bcf6e7ca429","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,7 +29,6 @@\n import java.util.Set;\n import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import javax.persistence.NoResultException;\n import javax.persistence.PersistenceException;\n import javax.persistence.Query;\n@@ -74,6 +73,7 @@\n import org.apache.syncope.core.spring.policy.AccountPolicyException;\n import org.apache.syncope.core.spring.policy.PasswordPolicyException;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n@@ -83,8 +83,6 @@ public class JPAUserDAO extends AbstractAnyDAO<User> implements UserDAO {\n     protected static final Pattern USERNAME_PATTERN =\n             Pattern.compile('^' + SyncopeConstants.NAME_PATTERN, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n \n-    protected static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n-\n     @Autowired\n     protected RoleDAO roleDAO;\n \n@@ -100,11 +98,8 @@ public class JPAUserDAO extends AbstractAnyDAO<User> implements UserDAO {\n     @Autowired\n     protected DelegationDAO delegationDAO;\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n-    @Resource(name = \"anonymousUser\")\n-    protected String anonymousUser;\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     @Override\n     protected AnyUtils init() {\n@@ -201,7 +196,7 @@ public void securityChecks(\n     protected void securityChecks(final User user) {\n         // Allows anonymous (during self-registration) and self (during self-update) to read own user,\n         // otherwise goes through security checks to see if required entitlements are owned\n-        if (!AuthContextUtils.getUsername().equals(anonymousUser)\n+        if (!AuthContextUtils.getUsername().equals(securityProperties.getAnonymousUser())\n                 && !AuthContextUtils.getUsername().equals(user.getUsername())) {\n \n             Set<String> authRealms = AuthContextUtils.getAuthorizations().\n@@ -348,7 +343,8 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n                     matching = pwdHistory.subList(policy.getHistoryLength() >= pwdHistory.size()\n                             ? 0\n                             : pwdHistory.size() - policy.getHistoryLength(), pwdHistory.size()).stream().\n-                            map(old -> ENCRYPTOR.verify(user.getClearPassword(), user.getCipherAlgorithm(), old)).\n+                            map(old -> Encryptor.getInstance().verify(\n+                            user.getClearPassword(), user.getCipherAlgorithm(), old)).\n                             reduce(matching, (accumulator, item) -> accumulator | item);\n                 }\n                 if (matching) {\n@@ -394,7 +390,9 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n                 throw new AccountPolicyException(\"Null username\");\n             }\n \n-            if (adminUser.equals(user.getUsername()) || anonymousUser.equals(user.getUsername())) {\n+            if (securityProperties.getAdminUser().equals(user.getUsername())\n+                    || securityProperties.getAnonymousUser().equals(user.getUsername())) {\n+\n                 throw new AccountPolicyException(\"Not allowed: \" + user.getUsername());\n             }\n "},{"sha":"7b4280be69dbd30d78c31d3f761d62c0405ddf43","filename":"core/persistence-jpa/src/main/resources/domains/Master.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.postgresql.Driver\n-Master.url=jdbc:postgresql://localhost:5432/syncope\n-Master.schema=\n-Master.username=syncope\n-Master.password=syncope\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n-Master.orm=META-INF/spring-orm.xml\n-\n-Master.pool.maxActive=10\n-Master.pool.minIdle=2\n-\n-Master.audit.sql=audit.sql"},{"sha":"62f3a8debe5f04ddf21a19f45fb6d6f6caa8a1b7","filename":"core/persistence-jpa/src/main/resources/indexes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -82,6 +82,6 @@ under the License.\n \n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n   <entry key=\"TaskExec_TaskIdIndex\">CREATE INDEX TaskExec_TaskIdIndex ON TaskExec(task_id)</entry>\n-  <entry key=\"AnyTemplatePullTask_PullTaskIndex\">CREATE INDEX AnyTemplatePullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n-  <entry key=\"NotificationTask_recipientsIndex\">CREATE INDEX NotificationTask_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n+  <entry key=\"ATPullTask_PullTaskIndex\">CREATE INDEX ATPullTask_PullTaskIndex ON AnyTemplatePullTask(pullTask_id)</entry>\n+  <entry key=\"NT_recipientsIndex\">CREATE INDEX NT_recipientsIndex ON NotificationTask_recipients(notificationTask_id)</entry>\n </properties>"},{"sha":"0ed337d6cc62bf5bd4c2f9f6b2fa3bfdface88f5","filename":"core/persistence-jpa/src/main/resources/persistence.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAuditConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"529901ece9ce225937e2657195a5e1661358f693","filename":"core/persistence-jpa/src/main/resources/sqlserver_views.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fsqlserver_views.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fsqlserver_views.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fsqlserver_views.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"fit/core-reference/src/main/resources/postgres/views.xml"},{"sha":"658e9290ab43446930578907bdb19795c15c12e6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/PersistenceTestContext.java","status":"modified","additions":24,"deletions":16,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,36 +18,44 @@\n  */\n package org.apache.syncope.core.persistence.jpa;\n \n-import java.io.IOException;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.core.spring.security.DefaultPasswordGenerator;\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n-import org.springframework.context.annotation.PropertySource;\n import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+import org.springframework.core.io.DefaultResourceLoader;\n+import org.springframework.core.io.Resource;\n \n-@PropertySource(\"classpath:security.properties\")\n @Import(PersistenceContext.class)\n @Configuration\n public class PersistenceTestContext {\n \n-    @Value(\"${adminUser}\")\n-    private String adminUser;\n+    @Bean\n+    public static PropertySourcesPlaceholderConfigurer propertyPlaceholderConfigurer() {\n+        PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer();\n \n-    @Value(\"${anonymousUser}\")\n-    private String anonymousUser;\n+        DefaultResourceLoader resourceLoader = new DefaultResourceLoader();\n \n-    @Bean\n-    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n-        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n-        pspc.setIgnoreResourceNotFound(true);\n-        pspc.setIgnoreUnresolvablePlaceholders(true);\n-        return pspc;\n+        List<Resource> locations = new ArrayList<>();\n+        for (String location : System.getProperty(\"CORE_PROPERTIES\").split(\",\")) {\n+            locations.add(resourceLoader.getResource(location));\n+        }\n+        ppc.setLocations(locations.toArray(new Resource[0]));\n+\n+        return ppc;\n     }\n \n+    @Value(\"${security.adminUser}\")\n+    private String adminUser;\n+\n+    @Value(\"${security.anonymousUser}\")\n+    private String anonymousUser;\n+\n     @Bean\n     public String adminUser() {\n         return adminUser;\n@@ -59,8 +67,8 @@ public String anonymousUser() {\n     }\n \n     @Bean\n-    public ApplicationContextProvider applicationContextProvider() {\n-        return new ApplicationContextProvider();\n+    public SecurityProperties securityProperties() {\n+        return new SecurityProperties();\n     }\n \n     @Bean"},{"sha":"d1da5f7ef04d495c8b734286a06786fc1609c2c0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/SAML2SPEntityTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSAML2SPEntityTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSAML2SPEntityTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSAML2SPEntityTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -34,8 +34,8 @@\n import java.security.cert.CertificateFactory;\n import java.util.Date;\n import java.util.UUID;\n+import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.apache.tika.io.IOUtils;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.ClassPathResource;"},{"sha":"2bb59eccb8a816589931333c01b789dd4e8cea5c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/XMLContentExporterTest.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -26,10 +26,11 @@\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n import java.util.stream.Collectors;\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.persistence.api.content.ContentExporter;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.apache.tika.io.IOUtils;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n@@ -49,13 +50,13 @@ public class XMLContentExporterTest extends AbstractTest {\n     public void issueSYNCOPE1128() throws Exception {\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\n \n-        exporter.export(\"Master\", baos, null, null, null);\n+        exporter.export(SyncopeConstants.MASTER_DOMAIN, baos, null, null, null);\n \n         String exported = baos.toString(Charset.defaultCharset());\n         assertTrue(StringUtils.isNotBlank(exported));\n \n         List<String> realms = IOUtils.readLines(\n-                IOUtils.toInputStream(exported), StandardCharsets.UTF_8.name()).stream().\n+                IOUtils.toInputStream(exported, StandardCharsets.UTF_8), StandardCharsets.UTF_8.name()).stream().\n                 filter(row -> row.trim().startsWith(\"<Realm\")).collect(Collectors.toList());\n         assertEquals(4, realms.size());\n         assertTrue(realms.get(0).contains(\"name=\\\"/\\\"\"));"},{"sha":"17d1ed7f71eba10c5f00fc263007b2d29391489c","filename":"core/persistence-jpa/src/test/resources/core-test.properties","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,48 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+security.adminUser=${adminUser}\n+security.anonymousUser=${anonymousUser}\n+security.jwsKey=${jwsKey}\n+security.secretKey=${secretKey}\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=org.h2.Driver\n+persistence.domain[0].jdbcURL=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n+persistence.domain[0].dbUsername=sa\n+persistence.domain[0].dbPassword=\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n+persistence.domain[0].auditSql=audit.sql\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n+\n+persistence.domain[1].key=Two\n+persistence.domain[1].jdbcDriver=org.h2.Driver\n+persistence.domain[1].jdbcURL=jdbc:h2:mem:syncopetwo;DB_CLOSE_DELAY=-1\n+persistence.domain[1].dbUsername=sa\n+persistence.domain[1].dbPassword=\n+persistence.domain[1].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n+persistence.domain[1].auditSql=audit.sql\n+persistence.domain[1].poolMaxActive=10\n+persistence.domain[1].poolMinIdle=2\n+persistence.domain[1].adminPassword=2AA60A8FF7FCD473D321E0146AFD9E26DF395147\n+persistence.domain[1].adminCipherAlgorithm=SHA\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_h2.sql\n+\n+provisioning.connIdLocation=${connid.location}"},{"sha":"e11614d0b91c078c84bddc8106bf2f13cac5404a","filename":"core/persistence-jpa/src/test/resources/domains/Two.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Two.driverClassName=org.h2.Driver\n-Two.url=jdbc:h2:mem:syncopetwo;DB_CLOSE_DELAY=-1\n-Two.schema=\n-Two.username=sa\n-Two.password=\n-Two.databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n-Two.orm=META-INF/spring-orm.xml\n-\n-Two.pool.maxActive=10\n-Two.pool.minIdle=2\n-\n-Two.audit.sql=audit.sql"},{"sha":"b81dcbd9260ac0fc37302a74ce2ad1f97eff21a2","filename":"core/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -89,5 +89,6 @@ under the License.\n     <module>workflow-api</module>\n     <module>workflow-java</module>\n     <module>starter</module>\n+    <module>self-keymaster-starter</module>\n   </modules>\n </project>"},{"sha":"594568c15de84025b4bc3d925846bbacfba4ceb0","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ConnIdBundleManager.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnIdBundleManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnIdBundleManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnIdBundleManager.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -43,7 +43,4 @@ public interface ConnIdBundleManager {\n     void resetConnManagers();\n \n     List<URI> getLocations();\n-\n-    void setStringLocations(String stringLocations);\n-\n }"},{"sha":"f42c689580db21e7c302fddf2c1fb829bc66d4b8","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskInfo.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskInfo.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,6 +21,8 @@\n import java.util.Optional;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.provisioning.api.Connector;\n@@ -106,4 +108,13 @@ public boolean equals(final Object obj) {\n                 append(beforeObj, other.beforeObj).\n                 build();\n     }\n+\n+    @Override\n+    public String toString() {\n+        return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n+                appendSuper(super.toString()).\n+                append(externalResource).\n+                append(beforeObj).\n+                build();\n+    }\n }"},{"sha":"f9d00be0d7485085ccdb5b4327229c247829b29e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java","status":"modified","additions":13,"deletions":27,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnIdBundleManagerImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -53,43 +53,31 @@ public class ConnIdBundleManagerImpl implements ConnIdBundleManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnIdBundleManager.class);\n \n-    private String stringLocations;\n-\n     /**\n      * ConnId Locations.\n      */\n-    private List<URI> locations;\n+    private final List<URI> locations;\n \n     /**\n      * ConnectorInfoManager instances.\n      */\n     private final Map<URI, ConnectorInfoManager> connInfoManagers = Collections.synchronizedMap(new LinkedHashMap<>());\n \n-    @Override\n-    public List<URI> getLocations() {\n-        init();\n-\n-        return locations;\n+    public ConnIdBundleManagerImpl(final List<String> stringLocations) {\n+        locations = new ArrayList<>();\n+        stringLocations.forEach(location -> {\n+            try {\n+                locations.add(URIUtils.buildForConnId(location));\n+                LOG.info(\"Valid ConnId location: {}\", location.trim());\n+            } catch (Exception e) {\n+                LOG.error(\"Invalid ConnId location: {}\", location.trim(), e);\n+            }\n+        });\n     }\n \n     @Override\n-    public void setStringLocations(final String stringLocations) {\n-        this.stringLocations = stringLocations;\n-    }\n-\n-    private void init() {\n-        if (locations == null) {\n-            locations = new ArrayList<>();\n-            for (String location : StringUtils.isBlank(stringLocations) ? new String[0] : stringLocations.split(\",\")) {\n-                try {\n-                    locations.add(URIUtils.buildForConnId(location));\n-                    LOG.info(\"Valid ConnId location: {}\", location.trim());\n-                } catch (Exception e) {\n-                    LOG.error(\"Invalid ConnId location: {}\", location.trim(), e);\n-                }\n-            }\n-            locations = Collections.unmodifiableList(locations);\n-        }\n+    public List<URI> getLocations() {\n+        return locations;\n     }\n \n     private void initLocal(final URI location) {\n@@ -191,8 +179,6 @@ public void resetConnManagers() {\n \n     @Override\n     public Map<URI, ConnectorInfoManager> getConnManagers() {\n-        init();\n-\n         if (connInfoManagers.isEmpty()) {\n             locations.forEach(location -> {\n                 try {"},{"sha":"17ad4c17546f4f2f6dc2863be2790b5d7e86c0a8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":59,"deletions":89,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import java.io.IOException;\n import java.io.PrintStream;\n import java.lang.reflect.InvocationTargetException;\n import java.nio.charset.StandardCharsets;\n-import java.util.Enumeration;\n import java.util.Properties;\n import java.util.concurrent.Executor;\n import java.util.concurrent.ThreadPoolExecutor;\n@@ -32,10 +32,8 @@\n import javax.mail.Transport;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n-import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.LogOutputStream;\n-import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n@@ -51,21 +49,18 @@\n import org.apache.syncope.core.provisioning.java.job.JobManagerImpl;\n import org.apache.syncope.core.provisioning.java.job.SchedulerDBInit;\n import org.apache.syncope.core.provisioning.java.job.SchedulerShutdown;\n-import org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.ApplicationContext;\n-import org.springframework.context.EnvironmentAware;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.DependsOn;\n import org.springframework.context.annotation.Lazy;\n import org.springframework.context.annotation.Primary;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n import org.springframework.core.io.ClassPathResource;\n import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.jndi.JndiObjectFactoryBean;\n@@ -77,16 +72,11 @@\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.transaction.PlatformTransactionManager;\n \n-@PropertySource(\"classpath:connid.properties\")\n-@PropertySource(\"classpath:mail.properties\")\n-@PropertySource(\"classpath:provisioning.properties\")\n-@PropertySource(value = \"file:${conf.directory}/connid.properties\", ignoreResourceNotFound = true)\n-@PropertySource(value = \"file:${conf.directory}/mail.properties\", ignoreResourceNotFound = true)\n-@PropertySource(value = \"file:${conf.directory}/provisioning.properties\", ignoreResourceNotFound = true)\n @ComponentScan(\"org.apache.syncope.core.provisioning.java\")\n @EnableAsync\n+@EnableConfigurationProperties(ProvisioningProperties.class)\n @Configuration\n-public class ProvisioningContext implements EnvironmentAware, AsyncConfigurer {\n+public class ProvisioningContext implements AsyncConfigurer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ProvisioningContext.class);\n \n@@ -97,14 +87,10 @@ public class ProvisioningContext implements EnvironmentAware, AsyncConfigurer {\n     private PlatformTransactionManager masterTransactionManager;\n \n     @Autowired\n-    private ApplicationContext ctx;\n-\n-    private Environment env;\n+    private ProvisioningProperties props;\n \n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n+    @Autowired\n+    private ApplicationContext ctx;\n \n     /**\n      * Annotated as {@code @Primary} because it will be used by {@code @Async} in {@link AsyncConnectorFacade}.\n@@ -115,9 +101,9 @@ public void setEnvironment(final Environment env) {\n     @Primary\n     public Executor asyncConnectorFacadeExecutor() {\n         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n-        executor.setCorePoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.corePoolSize\", Integer.class));\n-        executor.setMaxPoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.maxPoolSize\", Integer.class));\n-        executor.setQueueCapacity(env.getProperty(\"asyncConnectorFacadeExecutor.queueCapacity\", Integer.class));\n+        executor.setCorePoolSize(props.getAsyncConnectorFacadeExecutor().getCorePoolSize());\n+        executor.setMaxPoolSize(props.getAsyncConnectorFacadeExecutor().getMaxPoolSize());\n+        executor.setQueueCapacity(props.getAsyncConnectorFacadeExecutor().getQueueCapacity());\n         executor.setThreadNamePrefix(\"AsyncConnectorFacadeExecutor-\");\n         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n         executor.initialize();\n@@ -137,25 +123,25 @@ public Executor getAsyncExecutor() {\n     @Bean\n     public Executor propagationTaskExecutorAsyncExecutor() {\n         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n-        executor.setCorePoolSize(env.getProperty(\"propagationTaskExecutorAsyncExecutor.corePoolSize\", Integer.class));\n-        executor.setMaxPoolSize(env.getProperty(\"propagationTaskExecutorAsyncExecutor.maxPoolSize\", Integer.class));\n-        executor.setQueueCapacity(env.getProperty(\"propagationTaskExecutorAsyncExecutor.queueCapacity\", Integer.class));\n+        executor.setCorePoolSize(props.getPropagationTaskExecutorAsyncExecutor().getCorePoolSize());\n+        executor.setMaxPoolSize(props.getPropagationTaskExecutorAsyncExecutor().getMaxPoolSize());\n+        executor.setQueueCapacity(props.getPropagationTaskExecutorAsyncExecutor().getQueueCapacity());\n         executor.setThreadNamePrefix(\"PropagationTaskExecutor-\");\n         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n         executor.initialize();\n         return executor;\n     }\n \n     @Bean\n-    public SchedulerDBInit quartzDataSourceInit() {\n+    public SchedulerDBInit quartzDataSourceInit() throws JsonProcessingException {\n         SchedulerDBInit init = new SchedulerDBInit();\n         init.setDataSource(masterDataSource);\n \n         ResourceDatabasePopulator databasePopulator = new ResourceDatabasePopulator();\n         databasePopulator.setContinueOnError(true);\n         databasePopulator.setIgnoreFailedDrops(true);\n         databasePopulator.setSqlScriptEncoding(StandardCharsets.UTF_8.name());\n-        databasePopulator.setScripts(new ClassPathResource(\"/quartz/\" + env.getProperty(\"quartz.sql\")));\n+        databasePopulator.setScripts(new ClassPathResource(\"/quartz/\" + props.getQuartz().getSql()));\n         init.setDatabasePopulator(databasePopulator);\n \n         return init;\n@@ -176,10 +162,14 @@ public SchedulerFactoryBean scheduler() {\n \n         Properties quartzProperties = new Properties();\n         quartzProperties.setProperty(\n-                \"org.quartz.scheduler.idleWaitTime\", env.getProperty(\"quartz.scheduler.idleWaitTime\", \"30000\"));\n+                \"org.quartz.scheduler.idleWaitTime\",\n+                String.valueOf(props.getQuartz().getIdleWaitTime()));\n+        quartzProperties.setProperty(\n+                \"org.quartz.jobStore.misfireThreshold\",\n+                String.valueOf(props.getQuartz().getMisfireThreshold()));\n         quartzProperties.setProperty(\n-                \"org.quartz.jobStore.misfireThreshold\", env.getProperty(\"quartz.misfireThreshold\", \"60000\"));\n-        quartzProperties.setProperty(\"org.quartz.jobStore.driverDelegateClass\", env.getProperty(\"quartz.jobstore\"));\n+                \"org.quartz.jobStore.driverDelegateClass\",\n+                props.getQuartz().getDelegate().getName());\n         quartzProperties.setProperty(\"org.quartz.jobStore.isClustered\", \"true\");\n         quartzProperties.setProperty(\"org.quartz.jobStore.clusterCheckinInterval\", \"20000\");\n         quartzProperties.setProperty(\"org.quartz.scheduler.instanceName\", \"ClusteredScheduler\");\n@@ -198,7 +188,7 @@ public SchedulerShutdown schedulerShutdown() {\n     @Bean\n     public JobManager jobManager() {\n         JobManagerImpl jobManager = new JobManagerImpl();\n-        jobManager.setDisableQuartzInstance(env.getProperty(\"quartz.disableInstance\", Boolean.class, false));\n+        jobManager.setDisableQuartzInstance(props.getQuartz().isDisableInstance());\n         return jobManager;\n     }\n \n@@ -219,12 +209,12 @@ protected Transport connectTransport() throws MessagingException {\n                 return super.connectTransport();\n             }\n         };\n-        mailSender.setDefaultEncoding(env.getProperty(\"smtpEncoding\"));\n-        mailSender.setHost(env.getProperty(\"smtpHost\"));\n-        mailSender.setPort(env.getProperty(\"smtpPort\", Integer.class));\n-        mailSender.setUsername(env.getProperty(\"smtpUsername\"));\n-        mailSender.setPassword(env.getProperty(\"smtpPassword\"));\n-        mailSender.setProtocol(env.getProperty(\"smtpProtocol\"));\n+        mailSender.setDefaultEncoding(props.getSmtp().getDefaultEncoding());\n+        mailSender.setHost(props.getSmtp().getHost());\n+        mailSender.setPort(props.getSmtp().getPort());\n+        mailSender.setUsername(props.getSmtp().getUsername());\n+        mailSender.setPassword(props.getSmtp().getPassword());\n+        mailSender.setProtocol(props.getSmtp().getProtocol());\n \n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"[Mail] host:port = {}:{}\", mailSender.getHost(), mailSender.getPort());\n@@ -245,13 +235,8 @@ protected Transport connectTransport() throws MessagingException {\n         if (session == null) {\n             Properties javaMailProperties = mailSender.getJavaMailProperties();\n \n-            Properties props = PropertyUtils.read(ProvisioningContext.class, \"mail.properties\", \"conf.directory\");\n-            for (Enumeration<?> e = props.propertyNames(); e.hasMoreElements();) {\n-                String prop = (String) e.nextElement();\n-                if (prop.startsWith(\"mail.smtp.\")) {\n-                    javaMailProperties.setProperty(prop, props.getProperty(prop));\n-                }\n-            }\n+            props.getSmtp().getJavamailProperties().\n+                    forEach((key, value) -> javaMailProperties.setProperty(key, value));\n \n             if (StringUtils.isNotBlank(mailSender.getUsername())) {\n                 javaMailProperties.setProperty(\"mail.smtp.auth\", \"true\");\n@@ -262,8 +247,7 @@ protected Transport connectTransport() throws MessagingException {\n                         forEach((key, value) -> LOG.debug(\"[Mail] property: {} = {}\", key, value));\n             }\n \n-            String mailDebug = props.getProperty(\"mail.debug\", \"false\");\n-            if (BooleanUtils.toBoolean(mailDebug)) {\n+            if (props.getSmtp().isDebug()) {\n                 session = mailSender.getSession();\n                 session.setDebug(true);\n                 try (LogOutputStream los = new LogOutputStream(LOG)) {\n@@ -279,16 +263,16 @@ protected Transport connectTransport() throws MessagingException {\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public PropagationManager propagationManager() {\n-        return new PropagationManagerImpl();\n+    public PropagationManager propagationManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n+\n+        return props.getPropagationManager().getDeclaredConstructor().newInstance();\n     }\n \n     @ConditionalOnMissingBean\n     @Bean\n     public ConnIdBundleManager connIdBundleManager() {\n-        ConnIdBundleManagerImpl connIdBundleManager = new ConnIdBundleManagerImpl();\n-        connIdBundleManager.setStringLocations(env.getProperty(\"connid.locations\"));\n-        return connIdBundleManager;\n+        return new ConnIdBundleManagerImpl(props.getConnIdLocation());\n     }\n \n     @Bean\n@@ -297,67 +281,53 @@ public IntAttrNameParser intAttrNameParser() {\n     }\n \n     @Bean\n-    public PropagationTaskExecutor propagationTaskExecutor()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public PropagationTaskExecutor propagationTaskExecutor() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (PropagationTaskExecutor) Class.forName(env.getProperty(\"propagationTaskExecutor\")).\n-                getConstructor().newInstance();\n+        return props.getPropagationTaskExecutor().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public UserProvisioningManager userProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public UserProvisioningManager userProvisioningManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (UserProvisioningManager) Class.forName(env.getProperty(\"userProvisioningManager\")).\n-                getConstructor().newInstance();\n+        return props.getUserProvisioningManager().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public GroupProvisioningManager groupProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public GroupProvisioningManager groupProvisioningManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (GroupProvisioningManager) Class.forName(env.getProperty(\"groupProvisioningManager\")).\n-                getConstructor().newInstance();\n+        return props.getGroupProvisioningManager().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public AnyObjectProvisioningManager anyObjectProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public AnyObjectProvisioningManager anyObjectProvisioningManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AnyObjectProvisioningManager) Class.forName(env.getProperty(\"anyObjectProvisioningManager\")).\n-                getConstructor().newInstance();\n+        return props.getAnyObjectProvisioningManager().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public VirAttrCache virAttrCache()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public VirAttrCache virAttrCache() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        VirAttrCache virAttrCache = (VirAttrCache) Class.forName(env.getProperty(\"virAttrCache\")).\n-                getConstructor().newInstance();\n-        virAttrCache.setCacheSpec(env.getProperty(\"virAttrCacheSpec\", \"maximumSize=5000,expireAfterAccess=1m\"));\n+        VirAttrCache virAttrCache = props.getVirAttrCache().getDeclaredConstructor().newInstance();\n+        virAttrCache.setCacheSpec(props.getVirAttrCacheSpec());\n         return virAttrCache;\n     }\n \n     @Bean\n-    public NotificationManager notificationManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public NotificationManager notificationManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (NotificationManager) Class.forName(env.getProperty(\"notificationManager\")).\n-                getConstructor().newInstance();\n+        return props.getNotifcationManager().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public AuditManager auditManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n-            IllegalArgumentException, InvocationTargetException {\n+    public AuditManager auditManager() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AuditManager) Class.forName(env.getProperty(\"auditManager\")).\n-                getConstructor().newInstance();\n+        return props.getAuditManager().getDeclaredConstructor().newInstance();\n     }\n }"},{"sha":"a86fdab4bf6ae140cf101a78f01347f851e0df0b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningProperties.java","status":"added","additions":332,"deletions":0,"changes":332,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,332 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.AuditManager;\n+import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache;\n+import org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager;\n+import org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor;\n+import org.apache.syncope.core.provisioning.java.propagation.DefaultPropagationManager;\n+import org.quartz.impl.jdbcjobstore.DriverDelegate;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"provisioning\")\n+public class ProvisioningProperties {\n+\n+    public static class ExecutorProperties {\n+\n+        private int corePoolSize = 5;\n+\n+        private int maxPoolSize = 25;\n+\n+        private int queueCapacity = 100;\n+\n+        public int getCorePoolSize() {\n+            return corePoolSize;\n+        }\n+\n+        public void setCorePoolSize(final int corePoolSize) {\n+            this.corePoolSize = corePoolSize;\n+        }\n+\n+        public int getMaxPoolSize() {\n+            return maxPoolSize;\n+        }\n+\n+        public void setMaxPoolSize(final int maxPoolSize) {\n+            this.maxPoolSize = maxPoolSize;\n+        }\n+\n+        public int getQueueCapacity() {\n+            return queueCapacity;\n+        }\n+\n+        public void setQueueCapacity(final int queueCapacity) {\n+            this.queueCapacity = queueCapacity;\n+        }\n+    }\n+\n+    public static class QuartzProperties {\n+\n+        private Class<? extends DriverDelegate> delegate;\n+\n+        private String sql;\n+\n+        private boolean disableInstance = false;\n+\n+        private int idleWaitTime = 30000;\n+\n+        private int misfireThreshold = 60000;\n+\n+        public Class<? extends DriverDelegate> getDelegate() {\n+            return delegate;\n+        }\n+\n+        public void setDelegate(final Class<? extends DriverDelegate> delegate) {\n+            this.delegate = delegate;\n+        }\n+\n+        public String getSql() {\n+            return sql;\n+        }\n+\n+        public void setSql(final String sql) {\n+            this.sql = sql;\n+        }\n+\n+        public boolean isDisableInstance() {\n+            return disableInstance;\n+        }\n+\n+        public void setDisableInstance(final boolean disableInstance) {\n+            this.disableInstance = disableInstance;\n+        }\n+\n+        public int getIdleWaitTime() {\n+            return idleWaitTime;\n+        }\n+\n+        public void setIdleWaitTime(final int idleWaitTime) {\n+            this.idleWaitTime = idleWaitTime;\n+        }\n+\n+        public int getMisfireThreshold() {\n+            return misfireThreshold;\n+        }\n+\n+        public void setMisfireThreshold(final int misfireThreshold) {\n+            this.misfireThreshold = misfireThreshold;\n+        }\n+    }\n+\n+    public static class SMTPProperties {\n+\n+        private String host;\n+\n+        private int port = 25;\n+\n+        private String username;\n+\n+        private String password;\n+\n+        private String protocol = \"smtp\";\n+\n+        private String defaultEncoding = \"UTF-8\";\n+\n+        private boolean debug = false;\n+\n+        private final Map<String, String> javamailProperties = new HashMap<>();\n+\n+        public String getHost() {\n+            return host;\n+        }\n+\n+        public void setHost(final String host) {\n+            this.host = host;\n+        }\n+\n+        public int getPort() {\n+            return port;\n+        }\n+\n+        public void setPort(final int port) {\n+            this.port = port;\n+        }\n+\n+        public String getUsername() {\n+            return username;\n+        }\n+\n+        public void setUsername(final String username) {\n+            this.username = username;\n+        }\n+\n+        public String getPassword() {\n+            return password;\n+        }\n+\n+        public void setPassword(final String password) {\n+            this.password = password;\n+        }\n+\n+        public String getProtocol() {\n+            return protocol;\n+        }\n+\n+        public void setProtocol(final String protocol) {\n+            this.protocol = protocol;\n+        }\n+\n+        public String getDefaultEncoding() {\n+            return defaultEncoding;\n+        }\n+\n+        public void setDefaultEncoding(final String defaultEncoding) {\n+            this.defaultEncoding = defaultEncoding;\n+        }\n+\n+        public boolean isDebug() {\n+            return debug;\n+        }\n+\n+        public void setDebug(final boolean debug) {\n+            this.debug = debug;\n+        }\n+\n+        public Map<String, String> getJavamailProperties() {\n+            return javamailProperties;\n+        }\n+    }\n+\n+    private final ExecutorProperties asyncConnectorFacadeExecutor = new ExecutorProperties();\n+\n+    private final ExecutorProperties propagationTaskExecutorAsyncExecutor = new ExecutorProperties();\n+\n+    private Class<? extends PropagationManager> propagationManager = DefaultPropagationManager.class;\n+\n+    private Class<? extends PropagationTaskExecutor> propagationTaskExecutor = PriorityPropagationTaskExecutor.class;\n+\n+    private Class<? extends UserProvisioningManager> userProvisioningManager =\n+            DefaultUserProvisioningManager.class;\n+\n+    private Class<? extends GroupProvisioningManager> groupProvisioningManager =\n+            DefaultGroupProvisioningManager.class;\n+\n+    private Class<? extends AnyObjectProvisioningManager> anyObjectProvisioningManager =\n+            DefaultAnyObjectProvisioningManager.class;\n+\n+    private Class<? extends VirAttrCache> virAttrCache = CaffeineVirAttrCache.class;\n+\n+    private String virAttrCacheSpec = \"maximumSize=5000,expireAfterAccess=1m\";\n+\n+    private Class<? extends NotificationManager> notifcationManager = DefaultNotificationManager.class;\n+\n+    private Class<? extends AuditManager> auditManager = DefaultAuditManager.class;\n+\n+    private final List<String> connIdLocation = new ArrayList<>();\n+\n+    private final QuartzProperties quartz = new QuartzProperties();\n+\n+    private final SMTPProperties smtp = new SMTPProperties();\n+\n+    public Class<? extends PropagationManager> getPropagationManager() {\n+        return propagationManager;\n+    }\n+\n+    public void setPropagationManager(final Class<? extends PropagationManager> propagationManager) {\n+        this.propagationManager = propagationManager;\n+    }\n+\n+    public Class<? extends PropagationTaskExecutor> getPropagationTaskExecutor() {\n+        return propagationTaskExecutor;\n+    }\n+\n+    public void setPropagationTaskExecutor(final Class<? extends PropagationTaskExecutor> propagationTaskExecutor) {\n+        this.propagationTaskExecutor = propagationTaskExecutor;\n+    }\n+\n+    public Class<? extends UserProvisioningManager> getUserProvisioningManager() {\n+        return userProvisioningManager;\n+    }\n+\n+    public void setUserProvisioningManager(final Class<? extends UserProvisioningManager> userProvisioningManager) {\n+        this.userProvisioningManager = userProvisioningManager;\n+    }\n+\n+    public Class<? extends GroupProvisioningManager> getGroupProvisioningManager() {\n+        return groupProvisioningManager;\n+    }\n+\n+    public void setGroupProvisioningManager(final Class<? extends GroupProvisioningManager> groupProvisioningManager) {\n+        this.groupProvisioningManager = groupProvisioningManager;\n+    }\n+\n+    public Class<? extends AnyObjectProvisioningManager> getAnyObjectProvisioningManager() {\n+        return anyObjectProvisioningManager;\n+    }\n+\n+    public void setAnyObjectProvisioningManager(\n+            final Class<? extends AnyObjectProvisioningManager> anyObjectProvisioningManager) {\n+\n+        this.anyObjectProvisioningManager = anyObjectProvisioningManager;\n+    }\n+\n+    public Class<? extends VirAttrCache> getVirAttrCache() {\n+        return virAttrCache;\n+    }\n+\n+    public void setVirAttrCache(final Class<? extends VirAttrCache> virAttrCache) {\n+        this.virAttrCache = virAttrCache;\n+    }\n+\n+    public String getVirAttrCacheSpec() {\n+        return virAttrCacheSpec;\n+    }\n+\n+    public void setVirAttrCacheSpec(final String virAttrCacheSpec) {\n+        this.virAttrCacheSpec = virAttrCacheSpec;\n+    }\n+\n+    public Class<? extends NotificationManager> getNotifcationManager() {\n+        return notifcationManager;\n+    }\n+\n+    public void setNotifcationManager(final Class<? extends NotificationManager> notifcationManager) {\n+        this.notifcationManager = notifcationManager;\n+    }\n+\n+    public Class<? extends AuditManager> getAuditManager() {\n+        return auditManager;\n+    }\n+\n+    public void setAuditManager(final Class<? extends AuditManager> auditManager) {\n+        this.auditManager = auditManager;\n+    }\n+\n+    public ExecutorProperties getAsyncConnectorFacadeExecutor() {\n+        return asyncConnectorFacadeExecutor;\n+    }\n+\n+    public ExecutorProperties getPropagationTaskExecutorAsyncExecutor() {\n+        return propagationTaskExecutorAsyncExecutor;\n+    }\n+\n+    public List<String> getConnIdLocation() {\n+        return connIdLocation;\n+    }\n+\n+    public QuartzProperties getQuartz() {\n+        return quartz;\n+    }\n+\n+    public SMTPProperties getSmtp() {\n+        return smtp;\n+    }\n+}"},{"sha":"42bd842ef86daedaad46211b03efe7d752f5a1a5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AccessTokenDataBinderImpl.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAccessTokenDataBinderImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -26,7 +26,6 @@\n import java.util.Calendar;\n import java.util.Date;\n import java.util.Map;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -39,18 +38,16 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DefaultCredentialChecker;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.apache.syncope.core.spring.security.jws.AccessTokenJWSSigner;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class AccessTokenDataBinderImpl implements AccessTokenDataBinder {\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n-\n-    @Resource(name = \"jwtIssuer\")\n-    private String jwtIssuer;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private AccessTokenJWSSigner jwsSigner;\n@@ -86,7 +83,7 @@ public Pair<String, Date> generateJWT(\n                 jwtID(tokenId).\n                 subject(subject).\n                 issueTime(currentTime).\n-                issuer(jwtIssuer).\n+                issuer(securityProperties.getJwtIssuer()).\n                 expirationTime(expiration.getTime()).\n                 notBeforeTime(currentTime);\n         claims.forEach(claimsSet::claim);\n@@ -118,7 +115,7 @@ private AccessToken replace(\n         accessToken.setExpirationTime(generated.getRight());\n         accessToken.setOwner(subject);\n \n-        if (!adminUser.equals(accessToken.getOwner())) {\n+        if (!securityProperties.getAdminUser().equals(accessToken.getOwner())) {\n             accessToken.setAuthorities(authorities);\n         }\n \n@@ -179,7 +176,7 @@ public Pair<String, Date> update(final AccessToken accessToken, final byte[] aut\n         accessToken.setBody(body);\n         accessToken.setExpirationTime(expiration.getTime());\n \n-        if (!adminUser.equals(accessToken.getOwner())) {\n+        if (!securityProperties.getAdminUser().equals(accessToken.getOwner())) {\n             accessToken.setAuthorities(authorities);\n         }\n "},{"sha":"4f8f109013c87851e4759829d77434e1f55576ff","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyTypeDataBinderImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeDataBinderImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,7 +22,6 @@\n import java.util.HashSet;\n import java.util.Set;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -42,6 +41,7 @@\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.apache.syncope.core.spring.security.SyncopeGrantedAuthority;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -55,8 +55,8 @@ public class AnyTypeDataBinderImpl implements AnyTypeDataBinder {\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n@@ -77,7 +77,7 @@ public AnyType create(final AnyTypeTO anyTypeTO) {\n \n         Set<String> added = EntitlementsHolder.getInstance().addFor(anyType.getKey());\n \n-        if (!adminUser.equals(AuthContextUtils.getUsername())) {\n+        if (!securityProperties.getAdminUser().equals(AuthContextUtils.getUsername())) {\n             AccessToken accessToken = accessTokenDAO.findByOwner(AuthContextUtils.getUsername());\n             try {\n                 Set<SyncopeGrantedAuthority> authorities = new HashSet<>(POJOHelper.deserialize(\n@@ -134,7 +134,7 @@ public AnyTypeTO delete(final AnyType anyType) {\n \n         final Set<String> removed = EntitlementsHolder.getInstance().removeFor(deleted.getKey());\n \n-        if (!adminUser.equals(AuthContextUtils.getUsername())) {\n+        if (!securityProperties.getAdminUser().equals(AuthContextUtils.getUsername())) {\n             AccessToken accessToken = accessTokenDAO.findByOwner(AuthContextUtils.getUsername());\n             try {\n                 Set<SyncopeGrantedAuthority> authorities = new HashSet<>(POJOHelper.deserialize("},{"sha":"15256602b0afbf8ccf37614326585e26cf1cf345","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -25,7 +25,6 @@\n import java.util.Set;\n import java.util.function.Supplier;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -76,6 +75,7 @@\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -105,11 +105,8 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Autowired\n     private ConfParamOps confParamOps;\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n-\n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Transactional(readOnly = true)\n     @Override\n@@ -127,14 +124,14 @@ public UserTO getAuthenticatedUserTO() {\n         UserTO authUserTO;\n \n         String authUsername = AuthContextUtils.getUsername();\n-        if (anonymousUser.equals(authUsername)) {\n+        if (securityProperties.getAnonymousUser().equals(authUsername)) {\n             authUserTO = new UserTO();\n             authUserTO.setKey(null);\n-            authUserTO.setUsername(anonymousUser);\n-        } else if (adminUser.equals(authUsername)) {\n+            authUserTO.setUsername(securityProperties.getAnonymousUser());\n+        } else if (securityProperties.getAdminUser().equals(authUsername)) {\n             authUserTO = new UserTO();\n             authUserTO.setKey(null);\n-            authUserTO.setUsername(adminUser);\n+            authUserTO.setUsername(securityProperties.getAdminUser());\n         } else {\n             User authUser = userDAO.findByUsername(authUsername);\n             authUserTO = getUserTO(authUser, true);"},{"sha":"59f93b83f02dd269dd0998dc47050fe63e31e079","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,7 +21,6 @@\n import java.util.Date;\n import java.util.Optional;\n import java.util.concurrent.atomic.AtomicReference;\n-import javax.annotation.Resource;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n@@ -34,6 +33,7 @@\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -45,8 +45,8 @@ public abstract class AbstractSchedTaskJobDelegate implements SchedTaskJobDelega\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SchedTaskJobDelegate.class);\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     /**\n      * The actual task to be executed.\n@@ -117,7 +117,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         }\n \n         String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n-                orElse(adminUser);\n+                orElse(securityProperties.getAdminUser());\n         TaskExec execution = entityFactory.newEntity(TaskExec.class);\n         execution.setStart(new Date());\n         execution.setTask(task);"},{"sha":"59cf9816a8e09b502ba54f6615e6f42182308815","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,7 +29,6 @@\n import java.util.Map;\n import java.util.Set;\n \n-import javax.annotation.Resource;\n import javax.sql.DataSource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -77,6 +76,7 @@\n import org.apache.syncope.core.provisioning.java.job.report.ReportJob;\n import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n \n public class JobManagerImpl implements JobManager, SyncopeCoreLoader {\n \n@@ -100,8 +100,8 @@ public class JobManagerImpl implements JobManager, SyncopeCoreLoader {\n     @Autowired\n     private ConfParamOps confParamOps;\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     private boolean disableQuartzInstance;\n \n@@ -347,7 +347,7 @@ public void load(final String domain, final DataSource datasource) {\n             for (Iterator<SchedTask> it = tasks.iterator(); it.hasNext() && !loadException;) {\n                 SchedTask task = it.next();\n                 try {\n-                    register(task, task.getStartAt(), conf.getRight(), adminUser);\n+                    register(task, task.getStartAt(), conf.getRight(), securityProperties.getAdminUser());\n                 } catch (Exception e) {\n                     LOG.error(\"While loading job instance for task \" + task.getKey(), e);\n                     loadException = true;\n@@ -361,7 +361,7 @@ public void load(final String domain, final DataSource datasource) {\n                 for (Iterator<Report> it = reportDAO.findAll().iterator(); it.hasNext() && !loadException;) {\n                     Report report = it.next();\n                     try {\n-                        register(report, null, conf.getRight(), adminUser);\n+                        register(report, null, conf.getRight(), securityProperties.getAdminUser());\n                     } catch (Exception e) {\n                         LOG.error(\"While loading job instance for report \" + report.getName(), e);\n                         loadException = true;\n@@ -387,7 +387,7 @@ public void load(final String domain, final DataSource datasource) {\n \n                 try {\n                     NotificationJob job = createSpringBean(NotificationJob.class);\n-                    Map<String, Object> jobData = createJobMapForExecutionContext(adminUser);\n+                    Map<String, Object> jobData = createJobMapForExecutionContext(securityProperties.getAdminUser());\n                     registerJob(\n                             NOTIFICATION_JOB.getName(),\n                             job,\n@@ -403,7 +403,7 @@ public void load(final String domain, final DataSource datasource) {\n             LOG.debug(\"Registering {}\", SystemLoadReporterJob.class);\n             try {\n                 SystemLoadReporterJob job = createSpringBean(SystemLoadReporterJob.class);\n-                Map<String, Object> jobData = createJobMapForExecutionContext(adminUser);\n+                Map<String, Object> jobData = createJobMapForExecutionContext(securityProperties.getAdminUser());\n                 registerJob(\n                         StringUtils.uncapitalize(SystemLoadReporterJob.class.getSimpleName()),\n                         job,"},{"sha":"a9d9a525385e00caf15e36d87c4e5af5639ecb8b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SetUMembershipsJob.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -23,14 +23,14 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n-import javax.annotation.Resource;\n import org.apache.syncope.common.lib.request.MembershipUR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -51,16 +51,16 @@ public class SetUMembershipsJob extends AbstractInterruptableJob {\n \n     public static final String CONTEXT = \"context\";\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private UserProvisioningManager userProvisioningManager;\n \n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n-                orElse(adminUser);\n+                orElse(securityProperties.getAdminUser());\n \n         try {\n             AuthContextUtils.callAsAdmin(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY), () -> {"},{"sha":"8e88f9e4e16f8a04f0f03fd7ad1f11b015deef89","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/NotificationJob.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.core.provisioning.java.job.notification;\n \n import java.util.Optional;\n-import javax.annotation.Resource;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.api.job.JobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.AbstractInterruptableJob;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -48,12 +48,12 @@ public enum Status {\n \n     }\n \n-    public static final String DEFAULT_CRON_EXP = \"0 0/5 * * * ?\";\n-\n     private static final Logger LOG = LoggerFactory.getLogger(NotificationJob.class);\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    public static final String DEFAULT_CRON_EXP = \"0 0/5 * * * ?\";\n+\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private DomainHolder domainHolder;\n@@ -70,7 +70,7 @@ public JobDelegate getDelegate() {\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n         LOG.debug(\"Waking up...\");\n         String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n-                orElse(adminUser);\n+                orElse(securityProperties.getAdminUser());\n         for (String domain : domainHolder.getDomains().keySet()) {\n             try {\n                 AuthContextUtils.callAsAdmin(domain, () -> {"},{"sha":"7be8405493e07eb348192935d007f24646a68a15","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJob.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.util.Optional;\n-import javax.annotation.Resource;\n import org.apache.syncope.core.provisioning.api.job.JobDelegate;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.java.job.AbstractInterruptableJob;\n@@ -28,6 +27,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.api.job.report.ReportJobDelegate;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -38,8 +38,8 @@ public class ReportJob extends AbstractInterruptableJob {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ReportJob.class);\n \n-    @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     /**\n      * Key, set by the caller, for identifying the report to be executed.\n@@ -68,7 +68,7 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n         try {\n             String domainKey = context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY);\n             String executor = Optional.ofNullable(context.getMergedJobDataMap().getString(JobManager.EXECUTOR_KEY)).\n-                    orElse(adminUser);\n+                    orElse(securityProperties.getAdminUser());\n \n             AuthContextUtils.callAsAdmin(domainKey, () -> {\n                 try {"},{"sha":"2a774e622bd853bd5bfe4a03912474504f05aa24","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationManager.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationManager.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -72,7 +72,7 @@\n  * Manage the data propagation to external resources.\n  */\n @Transactional(rollbackFor = { Throwable.class })\n-public class PropagationManagerImpl implements PropagationManager {\n+public class DefaultPropagationManager implements PropagationManager {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(PropagationManager.class);\n ","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java"},{"sha":"ac41367998c5b78f7adeefc01100da32d5e9eb86","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -473,7 +473,7 @@ protected List<ProvisioningReport> deprovision(\n                                 null,\n                                 null),\n                                 false,\n-                                adminUser);\n+                                securityProperties.getAdminUser());\n \n                         AnyUR anyUR = null;\n                         if (matchingRule == MatchingRule.UNASSIGN) {"},{"sha":"046ab729b0e05e5e32b42c8920f69f8525916a09","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -119,7 +119,7 @@ protected void update(\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.of(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -143,7 +143,7 @@ protected void deprovision(final Any<?> any, final ConnectorObject beforeObj, fi\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.of(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -167,7 +167,7 @@ protected void provision(final Any<?> any, final Boolean enable, final Provision\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.empty());\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }"},{"sha":"5d9d05f66b73348366cf116764b28c29af8a146a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractRealmResultHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n-import javax.annotation.Resource;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n@@ -29,6 +28,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopeResultHandler;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -68,8 +68,8 @@\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     /**\n      * Provisioning profile."},{"sha":"e72983c27fcff9c6b5587faddebfc3696ec6a743","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n-import javax.annotation.Resource;\n import org.apache.syncope.common.lib.request.AnyUR;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n@@ -34,6 +33,7 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n@@ -85,8 +85,8 @@\n     @Autowired\n     protected AnyUtilsFactory anyUtilsFactory;\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     /**\n      * Provisioning profile."},{"sha":"6d26d10f8cd4db5a8399789367f1b2aa7f73e97d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -239,7 +239,7 @@ private void create(\n             propByRes.addAll(ResourceOperation.CREATE, realm.getResourceKeys());\n             if (unmatchingRule == UnmatchingRule.ASSIGN) {\n                 List<PropagationTaskInfo> taskInfos = propagationManager.createTasks(realm, propByRes, null);\n-                taskExecutor.execute(taskInfos, false, adminUser);\n+                taskExecutor.execute(taskInfos, false, securityProperties.getAdminUser());\n             }\n \n             RealmTO actual = binder.getRealmTO(realm, true);\n@@ -314,7 +314,7 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<Realm>\n                     RealmTO updated = binder.getRealmTO(realm, true);\n \n                     List<PropagationTaskInfo> taskInfos = propagationManager.createTasks(realm, propByRes, null);\n-                    taskExecutor.execute(taskInfos, false, adminUser);\n+                    taskExecutor.execute(taskInfos, false, securityProperties.getAdminUser());\n \n                     for (PullActions action : profile.getActions()) {\n                         action.after(profile, delta, updated, result);\n@@ -393,7 +393,9 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<R\n \n                     PropagationByResource<String> propByRes = new PropagationByResource<>();\n                     propByRes.add(ResourceOperation.DELETE, profile.getTask().getResource().getKey());\n-                    taskExecutor.execute(propagationManager.createTasks(realm, propByRes, null), false, adminUser);\n+                    taskExecutor.execute(\n+                            propagationManager.createTasks(realm, propByRes, null),\n+                            false, securityProperties.getAdminUser());\n \n                     RealmTO realmTO;\n                     if (unlink) {\n@@ -572,7 +574,7 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<Realm>\n                         PropagationByResource<String> propByRes = new PropagationByResource<>();\n                         propByRes.addAll(ResourceOperation.DELETE, realm.getResourceKeys());\n                         List<PropagationTaskInfo> taskInfos = propagationManager.createTasks(realm, propByRes, null);\n-                        taskExecutor.execute(taskInfos, false, adminUser);\n+                        taskExecutor.execute(taskInfos, false, securityProperties.getAdminUser());\n \n                         realmDAO.delete(realm);\n "},{"sha":"6195b309ad0ee29d4420f764a3eafa0ace2dfc98","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -111,7 +111,7 @@ private Realm update(final RealmTO realmTO, final ConnectorObject beforeObj, fin\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.ofNullable(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n \n@@ -129,7 +129,7 @@ private void deprovision(final Realm realm, final ConnectorObject beforeObj, fin\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.ofNullable(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -142,7 +142,8 @@ private void provision(final Realm realm, final ProvisioningReport result) {\n         propByRes.add(ResourceOperation.CREATE, profile.getTask().getResource().getKey());\n \n         PropagationReporter reporter = taskExecutor.execute(\n-                propagationManager.createTasks(realm, propByRes, noPropResources), false, adminUser);\n+                propagationManager.createTasks(realm, propByRes, noPropResources),\n+                false, securityProperties.getAdminUser());\n         reportPropagation(result, reporter);\n     }\n "},{"sha":"6827ce0b4b1164ca4742742566afff41698b33a3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPushResultHandler.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -97,7 +97,7 @@ protected void provision(final Any<?> any, final Boolean enabled, final Provisio\n                 before.getVirAttrs(),\n                 noPropResources),\n                 false,\n-                adminUser);\n+                securityProperties.getAdminUser());\n         reportPropagation(result, reporter);\n     }\n \n@@ -136,7 +136,7 @@ protected void update(\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.of(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -167,7 +167,7 @@ protected void deprovision(final Any<?> any, final ConnectorObject beforeObj, fi\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.of(beforeObj));\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -375,7 +375,7 @@ protected void provision(\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.empty());\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }\n@@ -402,7 +402,7 @@ protected void update(\n         if (!taskInfos.isEmpty()) {\n             taskInfos.get(0).setBeforeObj(Optional.empty());\n             PropagationReporter reporter = new DefaultPropagationReporter();\n-            taskExecutor.execute(taskInfos.get(0), reporter, adminUser);\n+            taskExecutor.execute(taskInfos.get(0), reporter, securityProperties.getAdminUser());\n             reportPropagation(result, reporter);\n         }\n     }"},{"sha":"24d5c93f19906ea2fd962240c7de8f07689cb0a9","filename":"core/provisioning-java/src/main/resources/connid.properties","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fconnid.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fconnid.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fconnid.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,17 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-connid.locations=${connid.location}"},{"sha":"e0cb1b0db0c23b82f1ed69d21fec754b4a2ebe3a","filename":"core/provisioning-java/src/main/resources/mail.properties","status":"removed","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,30 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-conf.directory=${conf.directory}\n-\n-smtpHost=none.syncope.apache.org\n-smtpPort=25\n-smtpUser=\n-smtpPassword=\n-smtpProtocol=smtp\n-smtpEncoding=UTF-8\n-mail.debug=false\n-\n-# Add more properties starting with mail.smtp.* from\n-# https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#properties\n-mail.smtp.connectiontimeout=3000\n-mail.smtp.starttls.enable=false"},{"sha":"096c89c70332bd37bca6cbd5bd9c146078abc2ac","filename":"core/provisioning-java/src/main/resources/provisioning.properties","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,36 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n-quartz.sql=tables_postgres.sql\n-quartz.disableInstance=false"},{"sha":"30320dac2df24222c290d54e47bf839219bd69cf","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/DummyDomainOps.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyDomainOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyDomainOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyDomainOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,11 +22,16 @@\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.api.DomainRegistry;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class DummyDomainOps implements DomainOps {\n \n+    @Autowired\n+    private DomainRegistry domainRegistry;\n+\n     @Override\n     public List<Domain> list() {\n         return List.of();\n@@ -39,7 +44,7 @@ public Domain read(final String key) {\n \n     @Override\n     public void create(final Domain domain) {\n-        // nothing to do\n+        domainRegistry.register(domain);\n     }\n \n     @Override"},{"sha":"67b76cb4a5a155b0d671b80826353a21dccf78ec","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ProvisioningTestContext.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,24 +18,15 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n-import java.io.IOException;\n import org.apache.syncope.core.persistence.jpa.PersistenceContext;\n import org.apache.syncope.core.spring.security.SecurityContext;\n import org.apache.syncope.core.workflow.java.WorkflowContext;\n-import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n-import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+import org.springframework.context.annotation.PropertySource;\n \n+@PropertySource(\"classpath:core-test.properties\")\n @Import({ SecurityContext.class, PersistenceContext.class, ProvisioningContext.class, WorkflowContext.class })\n @Configuration\n public class ProvisioningTestContext {\n-\n-    @Bean\n-    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n-        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n-        pspc.setIgnoreResourceNotFound(true);\n-        pspc.setIgnoreUnresolvablePlaceholders(true);\n-        return pspc;\n-    }\n }"},{"sha":"2ea32a489a5ff09cb8dd2243d2ba0a1290e59a4b","filename":"core/self-keymaster-starter/pom.xml","status":"renamed","additions":28,"deletions":28,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,31 +22,32 @@ under the License.\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n-    <groupId>org.apache.syncope.ext</groupId>\n-    <artifactId>syncope-ext-self-keymaster</artifactId>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-core</artifactId>\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Ext: Self Keymaster Persistence JPA</name>\n-  <description>Apache Syncope Ext: Self Keymaster Persistence JPA</description>\n-  <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-  <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+  <name>Apache Syncope Core Spring Boot Starter: Self Keymaster</name>\n+  <description>Apache Syncope Core Spring Boot Starter: Self Keymaster</description>\n+  <groupId>org.apache.syncope.core</groupId>\n+  <artifactId>syncope-core-self-keymaster-starter</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n-    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n \n-  <dependencies>    \n+  <dependencies>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <artifactId>syncope-core-starter</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-persistence-api</artifactId>\n-      <version>${project.version}</version>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-self-rest-api</artifactId>\n+      <version>${project.version}</version>      \n     </dependency>\n   </dependencies>\n \n@@ -64,7 +65,7 @@ under the License.\n           </dependency>\n         </dependencies>\n         <configuration>\n-          <persistenceXmlFile>${rootpom.basedir}/core/persistence-jpa/src/main/resources/persistence-enhance.xml</persistenceXmlFile> \n+          <persistenceXmlFile>${rootpom.basedir}/core/persistence-jpa/src/main/resources/persistence-enhance.xml</persistenceXmlFile>\n           <includes>org/apache/syncope/core/persistence/jpa/entity/**/*.class</includes>\n           <connectionDriverName>org.springframework.jdbc.datasource.DriverManagerDataSource</connectionDriverName>\n           <connectionProperties>\n@@ -84,32 +85,32 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      \n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n     </plugins>\n \n-    <testResources>\n-      <testResource>\n-        <directory>${rootpom.basedir}/core/persistence-jpa/src/main/resources</directory>\n-        <filtering>true</filtering>        \n-      </testResource>\n-    </testResources>\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n   </build>\n-\n+  \n   <profiles>\n     <profile>\n       <id>sqlgen</id>\n-      \n+\n       <properties>\n         <skipTests>true</skipTests>\n       </properties>\n-      \n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n-        \n+\n         <plugins>\n           <plugin>\n             <groupId>org.apache.openjpa</groupId>\n@@ -124,11 +125,10 @@ under the License.\n                 </goals>\n               </execution>\n             </executions>\n-          </plugin>          \n+          </plugin>\n         </plugins>\n       </build>\n-        \n-    </profile>\n-  </profiles>\n \n+    </profile>\n+  </profiles>  \n </project>","previous_filename":"ext/self-keymaster/persistence-jpa/pom.xml"},{"sha":"e3667e833973dde9b0a51250f28855c62edd0099","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/internal/SelfKeymasterInternalConfParamOps.java","status":"renamed","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalConfParamOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalConfParamOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalConfParamOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,20 +16,20 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.client;\n+package org.apache.syncope.core.keymaster.internal;\n \n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.core.logic.ConfParamLogic;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n \n public class SelfKeymasterInternalConfParamOps implements ConfParamOps {\n \n@@ -40,24 +40,23 @@ public class SelfKeymasterInternalConfParamOps implements ConfParamOps {\n     @Autowired\n     private ConfParamLogic logic;\n \n-    @Value(\"${keymaster.username}\")\n-    private String keymasterUser;\n+    @Autowired\n+    private KeymasterProperties props;\n \n     @Override\n     public Map<String, Object> list(final String domain) {\n         return AuthContextUtils.callAs(\n                 domain,\n-                keymasterUser,\n+                props.getUsername(),\n                 List.of(),\n                 () -> logic.list());\n     }\n \n     @Override\n     public <T> T get(final String domain, final String key, final T defaultValue, final Class<T> reference) {\n-\n         JsonNode valueNode = AuthContextUtils.callAs(\n                 domain,\n-                keymasterUser,\n+                props.getUsername(),\n                 List.of(),\n                 () -> logic.get(key));\n         if (valueNode == null) {\n@@ -79,7 +78,7 @@ public <T> void set(final String domain, final String key, final T value) {\n         } else {\n             JsonNode valueNode = MAPPER.valueToTree(value);\n \n-            AuthContextUtils.callAs(domain, keymasterUser, List.of(), () -> {\n+            AuthContextUtils.callAs(domain, props.getUsername(), List.of(), () -> {\n                 logic.set(key, valueNode);\n                 return null;\n             });\n@@ -88,7 +87,7 @@ public <T> void set(final String domain, final String key, final T value) {\n \n     @Override\n     public void remove(final String domain, final String key) {\n-        AuthContextUtils.callAs(domain, keymasterUser, List.of(), () -> {\n+        AuthContextUtils.callAs(domain, props.getUsername(), List.of(), () -> {\n             logic.remove(key);\n             return null;\n         });","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/client/SelfKeymasterInternalConfParamOps.java"},{"sha":"dff60fcb87b9982825dfba3d55f0077ff30b0e45","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/internal/SelfKeymasterInternalDomainOps.java","status":"renamed","additions":19,"deletions":11,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalDomainOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalDomainOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalDomainOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,63 +16,71 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.client;\n+package org.apache.syncope.core.keymaster.internal;\n \n import java.util.List;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.logic.DomainLogic;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n \n public class SelfKeymasterInternalDomainOps implements DomainOps {\n \n     @Autowired\n     private DomainLogic logic;\n \n-    @Value(\"${keymaster.username}\")\n-    private String keymasterUser;\n+    @Autowired\n+    private KeymasterProperties props;\n \n     @Override\n     public List<Domain> list() {\n-        return AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> logic.list());\n+        return AuthContextUtils.callAs(\n+                SyncopeConstants.MASTER_DOMAIN,\n+                props.getUsername(),\n+                List.of(),\n+                () -> logic.list());\n     }\n \n     @Override\n     public Domain read(final String key) {\n-        return AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> logic.read(key));\n+        return AuthContextUtils.callAs(\n+                SyncopeConstants.MASTER_DOMAIN,\n+                props.getUsername(),\n+                List.of(),\n+                () -> logic.read(key));\n     }\n \n     @Override\n     public void create(final Domain domain) {\n-        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> {\n+        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, props.getUsername(), List.of(), () -> {\n             logic.create(domain);\n             return null;\n         });\n     }\n \n     @Override\n     public void changeAdminPassword(final String key, final String password, final CipherAlgorithm cipherAlgorithm) {\n-        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> {\n+        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, props.getUsername(), List.of(), () -> {\n             logic.changeAdminPassword(key, password, cipherAlgorithm);\n             return null;\n         });\n     }\n \n     @Override\n     public void adjustPoolSize(final String key, final int maxPoolSize, final int minIdle) {\n-        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> {\n-            logic.adjustPoolSize(keymasterUser, maxPoolSize, minIdle);\n+        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, props.getUsername(), List.of(), () -> {\n+            logic.adjustPoolSize(props.getUsername(), maxPoolSize, minIdle);\n             return null;\n         });\n     }\n \n     @Override\n     public void delete(final String key) {\n-        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, keymasterUser, List.of(), () -> {\n+        AuthContextUtils.callAs(SyncopeConstants.MASTER_DOMAIN, props.getUsername(), List.of(), () -> {\n             logic.delete(key);\n             return null;\n         });","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/client/SelfKeymasterInternalDomainOps.java"},{"sha":"96edfb92d47cefcca2d60701c1c1921846f0e0de","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/internal/SelfKeymasterInternalServiceOps.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalServiceOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalServiceOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Finternal%2FSelfKeymasterInternalServiceOps.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,31 +16,31 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.client;\n+package org.apache.syncope.core.keymaster.internal;\n \n import java.util.List;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.logic.NetworkServiceLogic;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n \n public class SelfKeymasterInternalServiceOps implements ServiceOps {\n \n     @Autowired\n     private NetworkServiceLogic logic;\n \n-    @Value(\"${keymaster.username}\")\n-    private String keymasterUser;\n+    @Autowired\n+    private KeymasterProperties props;\n \n     @Override\n     public List<NetworkService> list(final NetworkService.Type serviceType) {\n         return AuthContextUtils.callAs(\n                 SyncopeConstants.MASTER_DOMAIN,\n-                keymasterUser,\n+                props.getUsername(),\n                 List.of(),\n                 () -> logic.list(serviceType));\n     }\n@@ -50,7 +50,7 @@ public NetworkService get(final NetworkService.Type serviceType) {\n         try {\n             return AuthContextUtils.callAs(\n                     SyncopeConstants.MASTER_DOMAIN,\n-                    keymasterUser,\n+                    props.getUsername(),\n                     List.of(),\n                     () -> logic.get(serviceType));\n         } catch (Exception e) {\n@@ -62,7 +62,7 @@ public NetworkService get(final NetworkService.Type serviceType) {\n     public void register(final NetworkService service) {\n         AuthContextUtils.callAs(\n                 SyncopeConstants.MASTER_DOMAIN,\n-                keymasterUser,\n+                props.getUsername(),\n                 List.of(),\n                 () -> {\n                     logic.register(service);\n@@ -74,7 +74,7 @@ public void register(final NetworkService service) {\n     public void unregister(final NetworkService service) {\n         AuthContextUtils.callAs(\n                 SyncopeConstants.MASTER_DOMAIN,\n-                keymasterUser,\n+                props.getUsername(),\n                 List.of(),\n                 () -> {\n                     logic.unregister(service);","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/client/SelfKeymasterInternalServiceOps.java"},{"sha":"d468a1e331e0784534bc54656d542ac7ede476a5","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/rest/cxf/service/ConfParamServiceImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FConfParamServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FConfParamServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FConfParamServiceImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,16 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.service;\n+package org.apache.syncope.core.keymaster.rest.cxf.service;\n \n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Map;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.keymaster.rest.api.service.ConfParamService;\n import org.apache.syncope.core.logic.ConfParamLogic;\n-import org.apache.syncope.ext.self.keymaster.api.service.ConfParamService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/service/ConfParamServiceImpl.java"},{"sha":"6a7463d8581fc91674d157f15d0b9bd68d1f4f77","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/rest/cxf/service/DomainServiceImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,18 +16,18 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.service;\n+package org.apache.syncope.core.keymaster.rest.cxf.service;\n \n import java.net.URI;\n import java.util.List;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriInfo;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n+import org.apache.syncope.common.keymaster.rest.api.service.DomainService;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.core.logic.DomainLogic;\n-import org.apache.syncope.ext.self.keymaster.api.service.DomainService;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n ","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/service/DomainServiceImpl.java"},{"sha":"27649ee2058670aa303afe117e39b0b439d67e30","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/keymaster/rest/cxf/service/NetworkServiceServiceImpl.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FNetworkServiceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FNetworkServiceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fkeymaster%2Frest%2Fcxf%2Fservice%2FNetworkServiceServiceImpl.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,13 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.service;\n+package org.apache.syncope.core.keymaster.rest.cxf.service;\n \n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.keymaster.rest.api.service.NetworkServiceService;\n import org.apache.syncope.core.logic.NetworkServiceLogic;\n-import org.apache.syncope.ext.self.keymaster.api.service.NetworkServiceService;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n ","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/service/NetworkServiceServiceImpl.java"},{"sha":"12c59eff8b10219b2a6527eefbaa6600d0c5ff4c","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/logic/ConfParamLogic.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfParamLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/logic/src/main/java/org/apache/syncope/core/logic/ConfParamLogic.java"},{"sha":"61d4ad871092753d4065b6e173dd6c3bae72f45a","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/logic/DomainLogic.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDomainLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDomainLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDomainLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/logic/src/main/java/org/apache/syncope/core/logic/DomainLogic.java"},{"sha":"bd387419b993427bc74dd0d17a07d3b1d94050ba","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/logic/NetworkServiceLogic.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNetworkServiceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNetworkServiceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNetworkServiceLogic.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/logic/src/main/java/org/apache/syncope/core/logic/NetworkServiceLogic.java"},{"sha":"cc1eb8508df7b7c42dd3e9e6102db05a47a1a22c","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/dao/ConfParamDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfParamDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConfParamDAO.java"},{"sha":"cd6a296f1fe10e3c28966be1d3651a15953b9df6","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/dao/DomainDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DomainDAO.java"},{"sha":"ccf2735112636e595dc37860e03d83ec062bad28","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/dao/NetworkServiceDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNetworkServiceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNetworkServiceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNetworkServiceDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/NetworkServiceDAO.java"},{"sha":"791d40b5b7815f9b044e2b1fa75d6dc91a756a78","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/entity/ConfParam.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConfParam.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ConfParam.java"},{"sha":"e49835c0d753ed56045585ba83a7a3dfbbdaece5","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/entity/DomainEntity.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomainEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomainEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomainEntity.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/DomainEntity.java"},{"sha":"d3dbad729d9cb9e323504aa0df2c46c180674c92","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/entity/NetworkServiceEntity.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNetworkServiceEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNetworkServiceEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNetworkServiceEntity.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/NetworkServiceEntity.java"},{"sha":"7725093b1cdefe5921c0e0b52bfdeaffd244ac88","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/api/entity/SelfKeymasterEntityFactory.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSelfKeymasterEntityFactory.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SelfKeymasterEntityFactory.java"},{"sha":"24f14c6e5f19664527ef9761a6c9b418a2bab9ce","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfParamDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfParamDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfParamDAO.java"},{"sha":"fa8f2fe72354512219df33eee400250a15316846","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADomainDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADomainDAO.java"},{"sha":"f1218fc208465da87391c0c31a9f23e95fb218de","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANetworkServiceDAO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANetworkServiceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANetworkServiceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANetworkServiceDAO.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANetworkServiceDAO.java"},{"sha":"a5eda65d743b2c90c2a77179e695d66b130ee68d","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConfParam.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConfParam.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConfParam.java"},{"sha":"a54a4945f253dc4ec80c56e6f806703fbe8e8899","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPADomain.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADomain.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPADomain.java"},{"sha":"10e9f0226aada7ebb3c39cb930077f463ceb178f","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANetworkService.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANetworkService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANetworkService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANetworkService.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANetworkService.java"},{"sha":"18d856da82455e3d8d713b4d1acdd27841678d18","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASelfKeymasterEntityFactory.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASelfKeymasterEntityFactory.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","previous_filename":"ext/self-keymaster/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASelfKeymasterEntityFactory.java"},{"sha":"4c6ae9410ce228fa481b3fe337fbd7138bb6486c","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/rest/security/SelfKeymasterUsernamePasswordAuthenticationProvider.java","status":"renamed","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,30 +16,28 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf.security;\n+package org.apache.syncope.core.rest.security;\n \n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.core.spring.security.SyncopeAuthenticationDetails;\n import org.apache.syncope.core.spring.security.UsernamePasswordAuthenticationProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Configurable;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.security.core.Authentication;\n \n @Configurable\n public class SelfKeymasterUsernamePasswordAuthenticationProvider extends UsernamePasswordAuthenticationProvider {\n \n-    @Value(\"${keymaster.username}\")\n-    private String keymasterUsername;\n-\n-    @Value(\"${keymaster.password}\")\n-    private String keymasterPassword;\n+    @Autowired\n+    private KeymasterProperties props;\n \n     @Override\n     public Authentication authenticate(final Authentication authentication) {\n-        if (keymasterUsername.equals(authentication.getName())) {\n+        if (props.getUsername().equals(authentication.getName())) {\n             return finalizeAuthentication(\n-                    authentication.getCredentials().toString().equals(keymasterPassword),\n+                    authentication.getCredentials().toString().equals(props.getPassword()),\n                     SyncopeAuthenticationDetails.class.cast(authentication.getDetails()).getDomain(),\n-                    keymasterUsername,\n+                    props.getUsername(),\n                     null,\n                     authentication);\n         }","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/security/SelfKeymasterUsernamePasswordAuthenticationProvider.java"},{"sha":"073eb354e690de8b149121b54425c345dfecb19d","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/starter/SelfKeymasterContext.java","status":"renamed","additions":35,"deletions":13,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,11 +16,12 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.ext.self.keymaster.cxf;\n+package org.apache.syncope.core.starter;\n \n import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n import java.util.List;\n import java.util.Map;\n+import java.util.regex.Pattern;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n import org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser.SpringJAXRSServerFactoryBean;\n@@ -29,46 +30,63 @@\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterProperties;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n+import org.apache.syncope.core.keymaster.internal.SelfKeymasterInternalConfParamOps;\n+import org.apache.syncope.core.keymaster.internal.SelfKeymasterInternalDomainOps;\n+import org.apache.syncope.core.keymaster.internal.SelfKeymasterInternalServiceOps;\n import org.apache.syncope.core.rest.cxf.RestServiceExceptionMapper;\n+import org.apache.syncope.core.rest.security.SelfKeymasterUsernamePasswordAuthenticationProvider;\n import org.apache.syncope.core.spring.security.UsernamePasswordAuthenticationProvider;\n import org.apache.syncope.core.spring.security.WebSecurityContext;\n-import org.apache.syncope.ext.self.keymaster.cxf.client.SelfKeymasterInternalConfParamOps;\n-import org.apache.syncope.ext.self.keymaster.cxf.client.SelfKeymasterInternalDomainOps;\n-import org.apache.syncope.ext.self.keymaster.cxf.client.SelfKeymasterInternalServiceOps;\n-import org.apache.syncope.ext.self.keymaster.cxf.security.SelfKeymasterUsernamePasswordAuthenticationProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionOutcome;\n+import org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.ConditionContext;\n+import org.springframework.context.annotation.Conditional;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.type.AnnotatedTypeMetadata;\n \n-@PropertySource(\"classpath:keymaster.properties\")\n-@PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n-@ComponentScan(\"org.apache.syncope.ext.self.keymaster.cxf.service\")\n+@EnableConfigurationProperties(KeymasterProperties.class)\n+@ComponentScan(\"org.apache.syncope.core.keymaster.rest.cxf.service\")\n @Configuration\n @AutoConfigureBefore(WebSecurityContext.class)\n-@ConditionalOnExpression(\"'${keymaster.address}' matches '^http.+'\")\n public class SelfKeymasterContext {\n \n+    private static final Pattern HTTP = Pattern.compile(\"^http.+\");\n+\n+    static class SelfKeymasterCondition extends SpringBootCondition {\n+\n+        @Override\n+        public ConditionOutcome getMatchOutcome(final ConditionContext context, final AnnotatedTypeMetadata metadata) {\n+            String keymasterAddress = context.getEnvironment().getProperty(\"keymaster.address\");\n+            return new ConditionOutcome(\n+                    keymasterAddress != null && HTTP.matcher(keymasterAddress).matches(),\n+                    \"Keymaster address not set for Self: \" + keymasterAddress);\n+        }\n+    }\n+\n     @Autowired\n     private Bus bus;\n \n     @Autowired\n     private ApplicationContext ctx;\n \n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public Server selfKeymasterContainer(final JacksonJsonProvider jsonProvider) {\n         SpringJAXRSServerFactoryBean selfKeymasterContainer = new SpringJAXRSServerFactoryBean();\n         selfKeymasterContainer.setBus(bus);\n         selfKeymasterContainer.setAddress(\"/keymaster\");\n         selfKeymasterContainer.setStaticSubresourceResolution(true);\n         selfKeymasterContainer.setBasePackages(List.of(\n-                \"org.apache.syncope.ext.self.keymaster.api.service\",\n-                \"org.apache.syncope.ext.self.keymaster.cxf.service\"));\n+                \"org.apache.syncope.common.keymaster.rest.api.service\",\n+                \"org.apache.syncope.core.keymaster.rest.cxf.service\"));\n         selfKeymasterContainer.setProperties(Map.of(\"convert.wadl.resources.to.dom\", \"false\"));\n \n         selfKeymasterContainer.setInInterceptors(List.of(\n@@ -86,21 +104,25 @@ public Server selfKeymasterContainer(final JacksonJsonProvider jsonProvider) {\n         return selfKeymasterContainer.create();\n     }\n \n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider() {\n         return new SelfKeymasterUsernamePasswordAuthenticationProvider();\n     }\n \n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public ConfParamOps internalConfParamOps() {\n         return new SelfKeymasterInternalConfParamOps();\n     }\n \n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public ServiceOps internalServiceOps() {\n         return new SelfKeymasterInternalServiceOps();\n     }\n \n+    @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public DomainOps domainOps() {\n         return new SelfKeymasterInternalDomainOps();","previous_filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/SelfKeymasterContext.java"},{"sha":"af8390b1ea240ca3a4ecae978b8d1e73e3b02db9","filename":"core/self-keymaster-starter/src/main/resources/META-INF/spring.factories","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -16,4 +16,4 @@\n # under the License.\n \n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.ext.self.keymaster.cxf.SelfKeymasterContext\n+  org.apache.syncope.core.starter.SelfKeymasterContext","previous_filename":"ext/self-keymaster/rest-cxf/src/main/resources/META-INF/spring.factories"},{"sha":"c4c550c21f0e4942d743097d792ee0525c4ca042","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/ApplicationContextProvider.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -40,8 +40,10 @@ public static void setApplicationContext(final ConfigurableApplicationContext ct\n     }\n \n     public static DefaultListableBeanFactory getBeanFactory() {\n-        return Optional.ofNullable(BEAN_FACTORY).orElseGet(()\n-            -> Optional.ofNullable(CTX).map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).orElse(null));\n+        return Optional.ofNullable(BEAN_FACTORY).\n+                orElseGet(() -> Optional.ofNullable(CTX).\n+                map(ctx -> (DefaultListableBeanFactory) ctx.getBeanFactory()).\n+                orElse(null));\n     }\n \n     public static void setBeanFactory(final DefaultListableBeanFactory beanFactory) {"},{"sha":"846b57551fb306969fca3b2f45c78cd32c910a24","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/ResourceWithFallbackLoader.java","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FResourceWithFallbackLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FResourceWithFallbackLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FResourceWithFallbackLoader.java?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,82 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.spring;\n-\n-import java.io.IOException;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.ArrayUtils;\n-import org.springframework.context.ResourceLoaderAware;\n-import org.springframework.core.io.Resource;\n-import org.springframework.core.io.ResourceLoader;\n-import org.springframework.core.io.support.ResourcePatternResolver;\n-\n-public class ResourceWithFallbackLoader implements ResourceLoaderAware, ResourcePatternResolver {\n-\n-    private ResourcePatternResolver resolver;\n-\n-    private String primary;\n-\n-    private String fallback;\n-\n-    @Override\n-    public void setResourceLoader(final ResourceLoader resourceLoader) {\n-        this.resolver = (ResourcePatternResolver) resourceLoader;\n-    }\n-\n-    public void setPrimary(final String primary) {\n-        this.primary = primary;\n-    }\n-\n-    public void setFallback(final String fallback) {\n-        this.fallback = fallback;\n-    }\n-\n-    @Override\n-    public Resource getResource(final String location) {\n-        Resource resource = resolver.getResource(primary + location);\n-        if (!resource.exists()) {\n-            resource = resolver.getResource(fallback + location);\n-        }\n-\n-        return resource;\n-    }\n-\n-    public Resource getResource() {\n-        return getResource(StringUtils.EMPTY);\n-    }\n-\n-    @Override\n-    public Resource[] getResources(final String locationPattern) throws IOException {\n-        Resource[] resources = resolver.getResources(primary + locationPattern);\n-        if (ArrayUtils.isEmpty(resources)) {\n-            resources = resolver.getResources(fallback + locationPattern);\n-        }\n-\n-        return resources;\n-    }\n-\n-    public Resource[] getResources() throws IOException {\n-        return getResources(StringUtils.EMPTY);\n-    }\n-\n-    @Override\n-    public ClassLoader getClassLoader() {\n-        return resolver.getClassLoader();\n-    }\n-}"},{"sha":"e8e3046cefce9dcca9473e6bb41cacb95b9ae701","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -27,7 +27,6 @@\n import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n-import javax.annotation.Resource;\n import javax.security.auth.login.AccountNotFoundException;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.BooleanUtils;\n@@ -96,11 +95,8 @@ public class AuthDataAccessor {\n     protected static final Set<SyncopeGrantedAuthority> MUST_CHANGE_PASSWORD_AUTHORITIES =\n             Set.of(new SyncopeGrantedAuthority(IdRepoEntitlement.MUST_CHANGE_PASSWORD));\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n-    @Resource(name = \"anonymousUser\")\n-    protected String anonymousUser;\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     @Autowired\n     protected RealmDAO realmDAO;\n@@ -404,9 +400,9 @@ protected Set<SyncopeGrantedAuthority> getDelegatedAuthorities(final Delegation\n     public Set<SyncopeGrantedAuthority> getAuthorities(final String username, final String delegationKey) {\n         Set<SyncopeGrantedAuthority> authorities;\n \n-        if (anonymousUser.equals(username)) {\n+        if (securityProperties.getAnonymousUser().equals(username)) {\n             authorities = ANONYMOUS_AUTHORITIES;\n-        } else if (adminUser.equals(username)) {\n+        } else if (securityProperties.getAdminUser().equals(username)) {\n             authorities = getAdminAuthorities();\n         } else if (delegationKey != null) {\n             Delegation delegation = Optional.ofNullable(delegationDAO.find(delegationKey)).\n@@ -432,14 +428,14 @@ public Pair<String, Set<SyncopeGrantedAuthority>> authenticate(final JWTAuthenti\n         String username;\n         Set<SyncopeGrantedAuthority> authorities;\n \n-        if (adminUser.equals(authentication.getClaims().getSubject())) {\n+        if (securityProperties.getAdminUser().equals(authentication.getClaims().getSubject())) {\n             AccessToken accessToken = accessTokenDAO.find(authentication.getClaims().getJWTID());\n             if (accessToken == null) {\n                 throw new AuthenticationCredentialsNotFoundException(\n                         \"Could not find an Access Token for JWT \" + authentication.getClaims().getJWTID());\n             }\n \n-            username = adminUser;\n+            username = securityProperties.getAdminUser();\n             authorities = getAdminAuthorities();\n         } else {\n             JWTSSOProvider jwtSSOProvider = getJWTSSOProvider(authentication.getClaims().getIssuer());"},{"sha":"52db5fbf8f12e3788bf8ed27d7eaf634dc37f9ce","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java","status":"modified","additions":13,"deletions":85,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,7 +24,6 @@\n import java.security.NoSuchAlgorithmException;\n import java.util.Base64;\n import java.util.Map;\n-import java.util.Properties;\n import java.util.concurrent.ConcurrentHashMap;\n import javax.crypto.BadPaddingException;\n import javax.crypto.Cipher;\n@@ -33,8 +32,8 @@\n import javax.crypto.spec.SecretKeySpec;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.jasypt.commons.CommonUtils;\n import org.jasypt.digest.StandardStringDigester;\n import org.slf4j.Logger;\n@@ -49,85 +48,8 @@ public final class Encryptor {\n \n     private static final String DEFAULT_SECRET_KEY = \"1abcdefghilmnopqrstuvz2!\";\n \n-    /**\n-     * Default value for salted {@link StandardStringDigester#setIterations(int)}.\n-     */\n-    private static final int DEFAULT_SALT_ITERATIONS = 1;\n-\n-    /**\n-     * Default value for {@link StandardStringDigester#setSaltSizeBytes(int)}.\n-     */\n-    private static final int DEFAULT_SALT_SIZE_BYTES = 8;\n-\n-    /**\n-     * Default value for {@link StandardStringDigester#setInvertPositionOfPlainSaltInEncryptionResults(boolean)}.\n-     */\n-    private static final boolean DEFAULT_IPOPSIER = true;\n-\n-    /**\n-     * Default value for salted {@link StandardStringDigester#setInvertPositionOfSaltInMessageBeforeDigesting(boolean)}.\n-     */\n-    private static final boolean DEFAULT_IPOSIMBD = true;\n-\n-    /**\n-     * Default value for salted {@link StandardStringDigester#setUseLenientSaltSizeCheck(boolean)}.\n-     */\n-    private static final boolean DEFAULT_ULSSC = true;\n-\n-    private static String SECRET_KEY;\n-\n-    private static Integer SALT_ITERATIONS;\n-\n-    private static Integer SALT_SIZE_BYTES;\n-\n-    private static Boolean IPOPSIER;\n-\n-    private static Boolean IPOSIMBD;\n-\n-    private static Boolean ULSSC;\n-\n-    static {\n-        try {\n-            Properties props = PropertyUtils.read(Encryptor.class, \"security.properties\", \"conf.directory\");\n-\n-            SECRET_KEY = props.getProperty(\"secretKey\");\n-            SALT_ITERATIONS = Integer.valueOf(props.getProperty(\"digester.saltIterations\"));\n-            SALT_SIZE_BYTES = Integer.valueOf(props.getProperty(\"digester.saltSizeBytes\"));\n-            IPOPSIER = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfPlainSaltInEncryptionResults\"));\n-            IPOSIMBD = Boolean.valueOf(props.getProperty(\"digester.invertPositionOfSaltInMessageBeforeDigesting\"));\n-            ULSSC = Boolean.valueOf(props.getProperty(\"digester.useLenientSaltSizeCheck\"));\n-        } catch (Exception e) {\n-            LOG.error(\"Could not read security parameters\", e);\n-        }\n-\n-        if (SECRET_KEY == null) {\n-            SECRET_KEY = DEFAULT_SECRET_KEY;\n-            LOG.debug(\"secretKey not found, reverting to default\");\n-        }\n-        if (SALT_ITERATIONS == null) {\n-            SALT_ITERATIONS = DEFAULT_SALT_ITERATIONS;\n-            LOG.debug(\"digester.saltIterations not found, reverting to default\");\n-        }\n-        if (SALT_SIZE_BYTES == null) {\n-            SALT_SIZE_BYTES = DEFAULT_SALT_SIZE_BYTES;\n-            LOG.debug(\"digester.saltSizeBytes not found, reverting to default\");\n-        }\n-        if (IPOPSIER == null) {\n-            IPOPSIER = DEFAULT_IPOPSIER;\n-            LOG.debug(\"digester.invertPositionOfPlainSaltInEncryptionResults not found, reverting to default\");\n-        }\n-        if (IPOSIMBD == null) {\n-            IPOSIMBD = DEFAULT_IPOSIMBD;\n-            LOG.debug(\"digester.invertPositionOfSaltInMessageBeforeDigesting not found, reverting to default\");\n-        }\n-        if (ULSSC == null) {\n-            ULSSC = DEFAULT_ULSSC;\n-            LOG.debug(\"digester.useLenientSaltSizeCheck not found, reverting to default\");\n-        }\n-    }\n-\n     public static Encryptor getInstance() {\n-        return getInstance(SECRET_KEY);\n+        return getInstance(null);\n     }\n \n     public static Encryptor getInstance(final String secretKey) {\n@@ -233,13 +155,19 @@ private StandardStringDigester getDigester(final CipherAlgorithm cipherAlgorithm\n             digester = new StandardStringDigester();\n \n             if (cipherAlgorithm.getAlgorithm().startsWith(\"S-\")) {\n+                SecurityProperties securityProperties =\n+                        ApplicationContextProvider.getApplicationContext().getBean(SecurityProperties.class);\n+\n                 // Salted ...\n                 digester.setAlgorithm(cipherAlgorithm.getAlgorithm().replaceFirst(\"S\\\\-\", \"\"));\n-                digester.setIterations(SALT_ITERATIONS);\n-                digester.setSaltSizeBytes(SALT_SIZE_BYTES);\n-                digester.setInvertPositionOfPlainSaltInEncryptionResults(IPOPSIER);\n-                digester.setInvertPositionOfSaltInMessageBeforeDigesting(IPOSIMBD);\n-                digester.setUseLenientSaltSizeCheck(ULSSC);\n+                digester.setIterations(securityProperties.getDigester().getSaltIterations());\n+                digester.setSaltSizeBytes(securityProperties.getDigester().getSaltSizeBytes());\n+                digester.setInvertPositionOfPlainSaltInEncryptionResults(\n+                        securityProperties.getDigester().isInvertPositionOfPlainSaltInEncryptionResults());\n+                digester.setInvertPositionOfSaltInMessageBeforeDigesting(\n+                        securityProperties.getDigester().isInvertPositionOfSaltInMessageBeforeDigesting());\n+                digester.setUseLenientSaltSizeCheck(\n+                        securityProperties.getDigester().isUseLenientSaltSizeCheck());\n             } else {\n                 // Not salted ...\n                 digester.setAlgorithm(cipherAlgorithm.getAlgorithm());"},{"sha":"3fa043c3aba549b22dbccbde456ad40e7ef3a3d6","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SecurityContext.java","status":"modified","additions":50,"deletions":28,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,64 +21,89 @@\n import com.nimbusds.jose.JOSEException;\n import com.nimbusds.jose.JWSAlgorithm;\n import com.nimbusds.jose.KeyLengthException;\n+import java.lang.reflect.InvocationTargetException;\n import java.security.NoSuchAlgorithmException;\n import java.security.spec.InvalidKeySpecException;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.jws.AccessTokenJWSSigner;\n import org.apache.syncope.core.spring.security.jws.AccessTokenJWSVerifier;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.context.EnvironmentAware;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n import org.springframework.security.config.core.GrantedAuthorityDefaults;\n \n-@PropertySource(\"classpath:security.properties\")\n-@PropertySource(value = \"file:${conf.directory}/security.properties\", ignoreResourceNotFound = true)\n+@EnableConfigurationProperties(SecurityProperties.class)\n @Configuration\n-public class SecurityContext implements EnvironmentAware {\n+public class SecurityContext {\n \n-    private Environment env;\n+    private static final Logger LOG = LoggerFactory.getLogger(SecurityContext.class);\n \n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n+    @Autowired\n+    private SecurityProperties props;\n \n     @Bean\n     public String adminUser() {\n-        return env.getProperty(\"adminUser\");\n+        return props.getAdminUser();\n     }\n \n     @Bean\n     public String adminPassword() {\n-        return env.getProperty(\"adminPassword\");\n+        return props.getAdminPassword();\n     }\n \n     @Bean\n-    public String adminPasswordAlgorithm() {\n-        return env.getProperty(\"adminPasswordAlgorithm\");\n+    public CipherAlgorithm adminPasswordAlgorithm() {\n+        return props.getAdminPasswordAlgorithm();\n     }\n \n     @Bean\n     public String anonymousUser() {\n-        return env.getProperty(\"anonymousUser\");\n+        return props.getAnonymousUser();\n     }\n \n     @Bean\n     public String anonymousKey() {\n-        return env.getProperty(\"anonymousKey\");\n+        return props.getAnonymousKey();\n     }\n \n     @Bean\n     public String jwtIssuer() {\n-        return env.getProperty(\"jwtIssuer\");\n+        return props.getJwtIssuer();\n+    }\n+\n+    @Bean\n+    public JWSAlgorithm jwsAlgorithm() {\n+        return JWSAlgorithm.parse(props.getJwsAlgorithm().toUpperCase());\n     }\n \n     @Bean\n     public String jwsKey() {\n-        return env.getProperty(\"jwsKey\");\n+        String jwsKey = props.getJwsKey();\n+        if (jwsKey == null) {\n+            throw new IllegalArgumentException(\"No JWS key provided\");\n+        }\n+\n+        JWSAlgorithm jwsAlgorithm = jwsAlgorithm();\n+        if (JWSAlgorithm.Family.HMAC_SHA.contains(jwsAlgorithm)) {\n+            int minLength = jwsAlgorithm.equals(JWSAlgorithm.HS256)\n+                    ? 256 / 8\n+                    : jwsAlgorithm.equals(JWSAlgorithm.HS384)\n+                    ? 384 / 8\n+                    : 512 / 8;\n+            if (jwsKey.length() < minLength) {\n+                jwsKey = SecureRandomUtils.generateRandomPassword(minLength);\n+                props.setJwsKey(jwsKey);\n+                LOG.warn(\"The configured key for {} must be at least {} bits, generating random: {}\",\n+                        jwsAlgorithm, minLength * 8, jwsKey);\n+            }\n+        }\n+\n+        return jwsKey;\n     }\n \n     @ConditionalOnMissingBean\n@@ -92,25 +117,22 @@ public DefaultCredentialChecker credentialChecker() {\n     public AccessTokenJWSVerifier accessTokenJWSVerifier()\n             throws JOSEException, NoSuchAlgorithmException, InvalidKeySpecException {\n \n-        return new AccessTokenJWSVerifier(\n-                JWSAlgorithm.parse(env.getProperty(\"jwsAlgorithm\")),\n-                jwsKey());\n+        return new AccessTokenJWSVerifier(jwsAlgorithm(), jwsKey());\n     }\n \n     @ConditionalOnMissingBean\n     @Bean\n     public AccessTokenJWSSigner accessTokenJWSSigner()\n             throws KeyLengthException, NoSuchAlgorithmException, InvalidKeySpecException {\n \n-        return new AccessTokenJWSSigner(\n-                JWSAlgorithm.parse(env.getProperty(\"jwsAlgorithm\")),\n-                jwsKey());\n+        return new AccessTokenJWSSigner(jwsAlgorithm(), jwsKey());\n     }\n \n-    @ConditionalOnMissingBean\n     @Bean\n-    public PasswordGenerator passwordGenerator() {\n-        return new DefaultPasswordGenerator();\n+    public PasswordGenerator passwordGenerator() throws NoSuchMethodException,\n+            InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n+\n+        return props.getPasswordGenerator().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean"},{"sha":"7276e78613dc139cf4933921708284f9a76467ab","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SecurityProperties.java","status":"added","additions":190,"deletions":0,"changes":190,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.spring.security;\n+\n+import com.nimbusds.jose.JWSAlgorithm;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"security\")\n+public class SecurityProperties {\n+\n+    public static class DigesterProperties {\n+\n+        private int saltIterations = 1;\n+\n+        private int saltSizeBytes = 8;\n+\n+        private boolean invertPositionOfPlainSaltInEncryptionResults = true;\n+\n+        private boolean invertPositionOfSaltInMessageBeforeDigesting = true;\n+\n+        private boolean useLenientSaltSizeCheck = true;\n+\n+        public int getSaltIterations() {\n+            return saltIterations;\n+        }\n+\n+        public void setSaltIterations(final int saltIterations) {\n+            this.saltIterations = saltIterations;\n+        }\n+\n+        public int getSaltSizeBytes() {\n+            return saltSizeBytes;\n+        }\n+\n+        public void setSaltSizeBytes(final int saltSizeBytes) {\n+            this.saltSizeBytes = saltSizeBytes;\n+        }\n+\n+        public boolean isInvertPositionOfPlainSaltInEncryptionResults() {\n+            return invertPositionOfPlainSaltInEncryptionResults;\n+        }\n+\n+        public void setInvertPositionOfPlainSaltInEncryptionResults(\n+                final boolean invertPositionOfPlainSaltInEncryptionResults) {\n+\n+            this.invertPositionOfPlainSaltInEncryptionResults = invertPositionOfPlainSaltInEncryptionResults;\n+        }\n+\n+        public boolean isInvertPositionOfSaltInMessageBeforeDigesting() {\n+            return invertPositionOfSaltInMessageBeforeDigesting;\n+        }\n+\n+        public void setInvertPositionOfSaltInMessageBeforeDigesting(\n+                final boolean invertPositionOfSaltInMessageBeforeDigesting) {\n+\n+            this.invertPositionOfSaltInMessageBeforeDigesting = invertPositionOfSaltInMessageBeforeDigesting;\n+        }\n+\n+        public boolean isUseLenientSaltSizeCheck() {\n+            return useLenientSaltSizeCheck;\n+        }\n+\n+        public void setUseLenientSaltSizeCheck(final boolean useLenientSaltSizeCheck) {\n+            this.useLenientSaltSizeCheck = useLenientSaltSizeCheck;\n+        }\n+    }\n+\n+    private String adminUser;\n+\n+    private String adminPassword;\n+\n+    private CipherAlgorithm adminPasswordAlgorithm;\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private String jwtIssuer = \"ApacheSyncope\";\n+\n+    private String jwsKey;\n+\n+    private String jwsAlgorithm = JWSAlgorithm.HS512.getName();\n+\n+    private String secretKey;\n+\n+    private Class<? extends PasswordGenerator> passwordGenerator = DefaultPasswordGenerator.class;\n+\n+    private final DigesterProperties digester = new DigesterProperties();\n+\n+    public String getAdminUser() {\n+        return adminUser;\n+    }\n+\n+    public void setAdminUser(final String adminUser) {\n+        this.adminUser = adminUser;\n+    }\n+\n+    public String getAdminPassword() {\n+        return adminPassword;\n+    }\n+\n+    public void setAdminPassword(final String adminPassword) {\n+        this.adminPassword = adminPassword;\n+    }\n+\n+    public CipherAlgorithm getAdminPasswordAlgorithm() {\n+        return adminPasswordAlgorithm;\n+    }\n+\n+    public void setAdminPasswordAlgorithm(final CipherAlgorithm adminPasswordAlgorithm) {\n+        this.adminPasswordAlgorithm = adminPasswordAlgorithm;\n+    }\n+\n+    public String getAnonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    public void setAnonymousUser(final String anonymousUser) {\n+        this.anonymousUser = anonymousUser;\n+    }\n+\n+    public String getAnonymousKey() {\n+        return anonymousKey;\n+    }\n+\n+    public void setAnonymousKey(final String anonymousKey) {\n+        this.anonymousKey = anonymousKey;\n+    }\n+\n+    public String getJwtIssuer() {\n+        return jwtIssuer;\n+    }\n+\n+    public void setJwtIssuer(final String jwtIssuer) {\n+        this.jwtIssuer = jwtIssuer;\n+    }\n+\n+    public String getJwsKey() {\n+        return jwsKey;\n+    }\n+\n+    public void setJwsKey(final String jwsKey) {\n+        this.jwsKey = jwsKey;\n+    }\n+\n+    public String getJwsAlgorithm() {\n+        return jwsAlgorithm;\n+    }\n+\n+    public void setJwsAlgorithm(final String jwsAlgorithm) {\n+        this.jwsAlgorithm = jwsAlgorithm;\n+    }\n+\n+    public String getSecretKey() {\n+        return secretKey;\n+    }\n+\n+    public void setSecretKey(final String secretKey) {\n+        this.secretKey = secretKey;\n+    }\n+\n+    public Class<? extends PasswordGenerator> getPasswordGenerator() {\n+        return passwordGenerator;\n+    }\n+\n+    public void setPasswordGenerator(final Class<? extends PasswordGenerator> passwordGenerator) {\n+        this.passwordGenerator = passwordGenerator;\n+    }\n+\n+    public DigesterProperties getDigester() {\n+        return digester;\n+    }\n+}"},{"sha":"ebf5d815f9f16be5cbd4050e53b3ba76d668db56","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeJWTSSOProvider.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -26,7 +26,6 @@\n import com.nimbusds.jose.util.Base64URL;\n import com.nimbusds.jwt.JWTClaimsSet;\n import java.util.Set;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n@@ -49,8 +48,8 @@ public class SyncopeJWTSSOProvider implements JWTSSOProvider {\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n-    @Resource(name = \"jwtIssuer\")\n-    private String jwtIssuer;\n+    @Autowired\n+    private SecurityProperties securityProperties;\n \n     @Autowired\n     private AccessTokenJWSVerifier delegate;\n@@ -63,7 +62,7 @@ public class SyncopeJWTSSOProvider implements JWTSSOProvider {\n \n     @Override\n     public String getIssuer() {\n-        return jwtIssuer;\n+        return securityProperties.getJwtIssuer();\n     }\n \n     @Override\n@@ -96,8 +95,8 @@ public Pair<User, Set<SyncopeGrantedAuthority>> resolve(final JWTClaimsSet jwtCl\n                 try {\n                     authorities = POJOHelper.deserialize(\n                             ENCRYPTOR.decode(new String(accessToken.getAuthorities()), CipherAlgorithm.AES),\n-                        new TypeReference<>() {\n-                        });\n+                            new TypeReference<>() {\n+                    });\n                 } catch (Throwable t) {\n                     LOG.error(\"Could not read stored authorities\", t);\n                 }"},{"sha":"5875e2be4e438f583b4a20252248213e6049741f","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":12,"deletions":45,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -19,15 +19,13 @@\n package org.apache.syncope.core.spring.security;\n \n import java.util.concurrent.atomic.AtomicReference;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n-import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n@@ -59,41 +57,8 @@ public class UsernamePasswordAuthenticationProvider implements AuthenticationPro\n     @Autowired\n     protected DefaultCredentialChecker credentialChecker;\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n-    @Resource(name = \"adminPassword\")\n-    protected String adminPassword;\n-\n-    @Resource(name = \"adminPasswordAlgorithm\")\n-    protected String adminPasswordAlgorithm;\n-\n-    @Resource(name = \"anonymousUser\")\n-    protected String anonymousUser;\n-\n-    @Resource(name = \"anonymousKey\")\n-    protected String anonymousKey;\n-\n-    /**\n-     * @param adminPassword the adminPassword to set\n-     */\n-    public void setAdminPassword(final String adminPassword) {\n-        this.adminPassword = adminPassword;\n-    }\n-\n-    /**\n-     * @param adminPasswordAlgorithm the adminPasswordAlgorithm to set\n-     */\n-    public void setAdminPasswordAlgorithm(final String adminPasswordAlgorithm) {\n-        this.adminPasswordAlgorithm = adminPasswordAlgorithm;\n-    }\n-\n-    /**\n-     * @param anonymousKey the anonymousKey to set\n-     */\n-    public void setAnonymousKey(final String anonymousKey) {\n-        this.anonymousKey = anonymousKey;\n-    }\n+    @Autowired\n+    protected SecurityProperties securityProperties;\n \n     @Override\n     public Authentication authenticate(final Authentication authentication) {\n@@ -116,18 +81,18 @@ public Authentication authenticate(final Authentication authentication) {\n         Boolean authenticated;\n         AtomicReference<String> delegationKey = new AtomicReference<>();\n \n-        if (anonymousUser.equals(authentication.getName())) {\n-            username.set(anonymousUser);\n+        if (securityProperties.getAnonymousUser().equals(authentication.getName())) {\n+            username.set(securityProperties.getAnonymousUser());\n             credentialChecker.checkIsDefaultAnonymousKeyInUse();\n-            authenticated = authentication.getCredentials().toString().equals(anonymousKey);\n-        } else if (adminUser.equals(authentication.getName())) {\n-            username.set(adminUser);\n+            authenticated = authentication.getCredentials().toString().equals(securityProperties.getAnonymousKey());\n+        } else if (securityProperties.getAdminUser().equals(authentication.getName())) {\n+            username.set(securityProperties.getAdminUser());\n             if (SyncopeConstants.MASTER_DOMAIN.equals(domain.getKey())) {\n                 credentialChecker.checkIsDefaultAdminPasswordInUse();\n                 authenticated = ENCRYPTOR.verify(\n                         authentication.getCredentials().toString(),\n-                        CipherAlgorithm.valueOf(adminPasswordAlgorithm),\n-                        adminPassword);\n+                        securityProperties.getAdminPasswordAlgorithm(),\n+                        securityProperties.getAdminPassword());\n             } else {\n                 authenticated = ENCRYPTOR.verify(\n                         authentication.getCredentials().toString(),\n@@ -144,7 +109,9 @@ public Authentication authenticate(final Authentication authentication) {\n                 if (!authenticated) {\n                     AuthContextUtils.callAsAdmin(domain.getKey(), () -> {\n                         provisioningManager.internalSuspend(\n-                                authResult.getLeft().getKey(), adminUser, \"Failed authentication\");\n+                                authResult.getLeft().getKey(),\n+                                securityProperties.getAdminUser(),\n+                                \"Failed authentication\");\n                         return null;\n                     });\n                 }"},{"sha":"0de9625ff09af2e6a3dcb6fb0ef0af1d604fcf3d","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/WebSecurityContext.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.spring.security;\n \n-import javax.annotation.Resource;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.ApplicationContext;\n@@ -42,9 +41,9 @@\n @EnableGlobalMethodSecurity(prePostEnabled = true)\n public class WebSecurityContext extends WebSecurityConfigurerAdapter {\n \n-    @Resource(name = \"anonymousUser\")\n-    private String anonymousUser;\n-\n+    @Autowired\n+    private SecurityProperties securityProperties;\n+    \n     @Autowired\n     private ApplicationContext ctx;\n \n@@ -106,7 +105,7 @@ protected void configure(final HttpSecurity http) throws Exception {\n                 antMatchers(\"/**\").permitAll().and().\n                 sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().\n                 securityContext().securityContextRepository(new NullSecurityContextRepository()).and().\n-                anonymous().principal(anonymousUser).and().\n+                anonymous().principal(securityProperties.getAnonymousUser()).and().\n                 httpBasic().authenticationEntryPoint(basicAuthenticationEntryPoint).\n                 authenticationDetailsSource(authenticationDetailsSource).and().\n                 exceptionHandling().accessDeniedHandler(accessDeniedHandler()).and()."},{"sha":"029e555d8c74111ec1331993a1dfeac6a35dad66","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/jws/AccessTokenJWSSigner.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSSigner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSSigner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSSigner.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -44,13 +44,10 @@ public class AccessTokenJWSSigner implements JWSSigner {\n     public AccessTokenJWSSigner(final JWSAlgorithm jwsAlgorithm, final String jwsKey)\n             throws KeyLengthException, NoSuchAlgorithmException, InvalidKeySpecException {\n \n-        if (jwsAlgorithm == null) {\n-            throw new IllegalArgumentException(\"An instance of \" + JWSAlgorithm.class + \" is required\");\n-        }\n         this.jwsAlgorithm = jwsAlgorithm;\n \n         if (JWSAlgorithm.Family.RSA.contains(jwsAlgorithm)) {\n-            if (jwsKey == null || jwsKey.indexOf(':') == -1) {\n+            if (jwsKey.indexOf(':') == -1) {\n                 throw new IllegalArgumentException(\"A key pair is required, in the 'private:public' format\");\n             }\n \n@@ -59,10 +56,6 @@ public AccessTokenJWSSigner(final JWSAlgorithm jwsAlgorithm, final String jwsKey\n                     Base64.getDecoder().decode(StringUtils.substringBefore(jwsKey, \":\").getBytes()));\n             delegate = new RSASSASigner(kf.generatePrivate(keySpecPKCS8));\n         } else if (JWSAlgorithm.Family.HMAC_SHA.contains(jwsAlgorithm)) {\n-            if (jwsKey == null) {\n-                throw new IllegalArgumentException(\"A shared key is required\");\n-            }\n-\n             delegate = new MACSigner(jwsKey);\n         } else {\n             throw new IllegalArgumentException(\"Unsupported JWS algorithm: \" + jwsAlgorithm.getName());"},{"sha":"1613245bf4be7f0158a6832f55123f2abe748616","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/jws/AccessTokenJWSVerifier.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSVerifier.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSVerifier.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2Fjws%2FAccessTokenJWSVerifier.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -42,12 +42,8 @@ public class AccessTokenJWSVerifier implements JWSVerifier {\n     public AccessTokenJWSVerifier(final JWSAlgorithm jwsAlgorithm, final String jwsKey)\n             throws JOSEException, NoSuchAlgorithmException, InvalidKeySpecException {\n \n-        if (jwsAlgorithm == null) {\n-            throw new IllegalArgumentException(\"An instance of \" + JWSAlgorithm.class + \" is required\");\n-        }\n-\n         if (JWSAlgorithm.Family.RSA.contains(jwsAlgorithm)) {\n-            if (jwsKey == null || jwsKey.indexOf(':') == -1) {\n+            if (jwsKey.indexOf(':') == -1) {\n                 throw new IllegalArgumentException(\"A key pair is required, in the 'private:public' format\");\n             }\n \n@@ -56,10 +52,6 @@ public AccessTokenJWSVerifier(final JWSAlgorithm jwsAlgorithm, final String jwsK\n                     Base64.getDecoder().decode(StringUtils.substringAfter(jwsKey, \":\").getBytes()));\n             delegate = new RSASSAVerifier((RSAPublicKey) kf.generatePublic(keySpecX509));\n         } else if (JWSAlgorithm.Family.HMAC_SHA.contains(jwsAlgorithm)) {\n-            if (jwsKey == null) {\n-                throw new IllegalArgumentException(\"A shared key is required\");\n-            }\n-\n             delegate = new MACVerifier(jwsKey);\n         } else {\n             throw new IllegalArgumentException(\"Unsupported JWS algorithm: \" + jwsAlgorithm.getName());"},{"sha":"4e32e2fb312c641c6bd86b70d71841605c591ecf","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/ImplementationManagerTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManagerTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -34,7 +34,7 @@\n import java.util.concurrent.locks.ReentrantLock;\n import java.util.stream.Collectors;\n \n-@SpringJUnitConfig(locations = { \"classpath:springTest.xml\" })\n+@SpringJUnitConfig(classes = { SpringTestConfiguration.class })\n public class ImplementationManagerTest {\n \n     private static DefaultPasswordRuleConf createBaseDefaultPasswordRuleConf() {\n@@ -98,7 +98,7 @@ public void concurrentPasswordRuleBuilding() {\n \n             assertTrue(\n                     errorMessages.isEmpty(),\n-                () -> errorMessages.stream().collect(Collectors.joining(System.lineSeparator())));\n+                    () -> errorMessages.stream().collect(Collectors.joining(System.lineSeparator())));\n         });\n     }\n }"},{"sha":"6947097ad3b5a92c7aabce8ff780ec8842c2239d","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/SpringTestConfiguration.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FSpringTestConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FSpringTestConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FSpringTestConfiguration.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.spring;\n+\n+import org.apache.syncope.core.persistence.api.ImplementationLookup;\n+import org.apache.syncope.core.spring.security.DummyImplementationLookup;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+\n+@Configuration\n+public class SpringTestConfiguration {\n+\n+    @Bean\n+    public ApplicationContextProvider applicationContextProvider() {\n+        return new ApplicationContextProvider();\n+    }\n+\n+    @Primary\n+    @Bean\n+    public ImplementationLookup implementationLookup() {\n+        return new DummyImplementationLookup();\n+    }\n+}"},{"sha":"8f4cf5b75a0901c156b5da91e3edafab7821de6c","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/security/EncryptorTest.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,14 +24,22 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n public class EncryptorTest {\n \n-    private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n-\n     private static final String PASSWORD_VALUE = \"password\";\n \n+    private static Encryptor ENCRYPTOR;\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        ApplicationContextProvider.getBeanFactory().registerSingleton(\"securityProperties\", new SecurityProperties());\n+        ENCRYPTOR = Encryptor.getInstance();\n+    }\n+\n     @Test\n     public void encoder() throws Exception {\n         for (CipherAlgorithm cipherAlgorithm : CipherAlgorithm.values()) {"},{"sha":"0cf68d9f4af840dbbee6ac15237a5217ea4ca86c","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/security/PasswordGeneratorTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FPasswordGeneratorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FPasswordGeneratorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FPasswordGeneratorTest.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -29,12 +29,13 @@\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.spring.SpringTestConfiguration;\n import org.apache.syncope.core.spring.policy.InvalidPasswordRuleConf;\n import org.apache.syncope.core.spring.policy.PolicyPattern;\n import org.junit.jupiter.api.Test;\n import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n \n-@SpringJUnitConfig(locations = { \"classpath:springTest.xml\" })\n+@SpringJUnitConfig(classes = { SpringTestConfiguration.class })\n public class PasswordGeneratorTest {\n \n     private final DefaultPasswordGenerator passwordGenerator = new DefaultPasswordGenerator();"},{"sha":"76ae5117e8e3dececaff467c5391013101094797","filename":"core/spring/src/test/resources/springTest.xml","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fspring%2Fsrc%2Ftest%2Fresources%2FspringTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fspring%2Fsrc%2Ftest%2Fresources%2FspringTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fresources%2FspringTest.xml?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,31 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <bean class=\"org.apache.syncope.core.spring.ApplicationContextProvider\"/>\n-  <bean class=\"org.apache.syncope.core.spring.security.DummyImplementationLookup\"/>\n-\n-</beans>"},{"sha":"c5ec55117e6023b0daef5ad185a33e38f574e7dd","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/SyncopeCoreApplication.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,15 +18,14 @@\n  */\n package org.apache.syncope.core.starter;\n \n-import java.io.IOException;\n+import java.util.Map;\n import org.apache.cxf.spring.boot.autoconfigure.openapi.OpenApiAutoConfiguration;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n import org.apache.syncope.core.starter.actuate.DomainsHealthIndicator;\n import org.apache.syncope.core.starter.actuate.ExternalResourcesHealthIndicator;\n import org.apache.syncope.core.starter.actuate.SyncopeCoreInfoContributor;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.SpringApplication;\n import org.springframework.boot.actuate.mail.MailHealthIndicator;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n@@ -37,9 +36,9 @@\n import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration;\n import org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.builder.SpringApplicationBuilder;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n import org.springframework.context.annotation.Bean;\n-import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n import org.springframework.mail.javamail.JavaMailSender;\n import org.springframework.mail.javamail.JavaMailSenderImpl;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n@@ -56,21 +55,19 @@\n public class SyncopeCoreApplication extends SpringBootServletInitializer {\n \n     public static void main(final String[] args) {\n-        SpringApplication.run(SyncopeCoreApplication.class, args);\n-    }\n-\n-    @ConditionalOnMissingBean(name = \"propertySourcesPlaceholderConfigurer\")\n-    @Bean\n-    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n-        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n-        pspc.setIgnoreResourceNotFound(true);\n-        pspc.setIgnoreUnresolvablePlaceholders(true);\n-        return pspc;\n+        new SpringApplicationBuilder(SyncopeCoreApplication.class).\n+                properties(\"spring.config.name:core\").\n+                build().run(args);\n     }\n \n     @Autowired\n     protected JavaMailSender mailSender;\n \n+    @Override\n+    protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n+        return builder.properties(Map.of(\"spring.config.name\", \"core\")).sources(SyncopeCoreApplication.class);\n+    }\n+\n     @ConditionalOnMissingBean\n     @Bean\n     public SyncopeCoreInfoContributor syncopeCoreInfoContributor() {"},{"sha":"d77e26cea65897ff194e4e3db4a83505595bebd2","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/actuate/SyncopeCoreInfoContributor.java","status":"modified","additions":31,"deletions":20,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2Factuate%2FSyncopeCoreInfoContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2Factuate%2FSyncopeCoreInfoContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2Factuate%2FSyncopeCoreInfoContributor.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.starter.actuate;\n \n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.lang.management.ManagementFactory;\n import java.lang.management.OperatingSystemMXBean;\n import java.lang.management.RuntimeMXBean;\n@@ -42,6 +40,7 @@\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n import org.apache.syncope.common.lib.types.ImplementationTypesHolder;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.core.logic.LogicProperties;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n@@ -64,6 +63,7 @@\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n+import org.apache.syncope.core.persistence.jpa.PersistenceProperties;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n@@ -72,11 +72,14 @@\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.provisioning.java.ProvisioningProperties;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n+import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n+import org.apache.syncope.core.workflow.java.WorkflowProperties;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.aop.support.AopUtils;\n@@ -93,8 +96,6 @@ public class SyncopeCoreInfoContributor implements InfoContributor {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeCoreInfoContributor.class);\n \n-    protected static final ObjectMapper MAPPER = new ObjectMapper().findAndRegisterModules();\n-\n     protected static final Object MONITOR = new Object();\n \n     protected static PlatformInfo PLATFORM_INFO;\n@@ -165,6 +166,21 @@ public void addLoadInstant(final PayloadApplicationEvent<SystemInfo.LoadInstant>\n         }\n     }\n \n+    @Autowired\n+    protected SecurityProperties securityProperties;\n+\n+    @Autowired\n+    protected PersistenceProperties persistenceProperties;\n+\n+    @Autowired\n+    protected ProvisioningProperties provisioningProperties;\n+\n+    @Autowired\n+    protected LogicProperties logicProperties;\n+\n+    @Autowired\n+    protected WorkflowProperties workflowProperties;\n+\n     @Autowired\n     protected AnyTypeDAO anyTypeDAO;\n \n@@ -286,10 +302,8 @@ protected void buildPlatform() {\n                 PLATFORM_INFO.setKeymasterConfParamOps(AopUtils.getTargetClass(confParamOps).getName());\n                 PLATFORM_INFO.setKeymasterServiceOps(AopUtils.getTargetClass(serviceOps).getName());\n \n-                if (bundleManager.getLocations() != null) {\n-                    PLATFORM_INFO.getConnIdLocations().addAll(bundleManager.getLocations().stream().\n-                            map(URI::toASCIIString).collect(Collectors.toList()));\n-                }\n+                PLATFORM_INFO.getConnIdLocations().addAll(bundleManager.getLocations().stream().\n+                        map(URI::toASCIIString).collect(Collectors.toList()));\n \n                 PLATFORM_INFO.getWorkflowInfo().\n                         setAnyObjectWorkflowAdapter(AopUtils.getTargetClass(awfAdapter).getName());\n@@ -446,20 +460,17 @@ protected void buildSystem() {\n     @Override\n     public void contribute(final Info.Builder builder) {\n         buildPlatform();\n-        builder.withDetail(\n-                \"platform\",\n-                MAPPER.convertValue(PLATFORM_INFO, new TypeReference<Map<String, Object>>() {\n-                }));\n+        builder.withDetail(\"platform\", PLATFORM_INFO);\n \n-        builder.withDetail(\n-                \"numbers\",\n-                MAPPER.convertValue(buildNumbers(), new TypeReference<Map<String, Object>>() {\n-                }));\n+        builder.withDetail(\"numbers\", buildNumbers());\n \n         buildSystem();\n-        builder.withDetail(\n-                \"system\",\n-                MAPPER.convertValue(SYSTEM_INFO, new TypeReference<Map<String, Object>>() {\n-                }));\n+        builder.withDetail(\"system\", SYSTEM_INFO);\n+\n+        builder.withDetail(\"securityProperties\", securityProperties);\n+        builder.withDetail(\"persistenceProperties\", persistenceProperties);\n+        builder.withDetail(\"provisioningProperties\", provisioningProperties);\n+        builder.withDetail(\"logicProperties\", logicProperties);\n+        builder.withDetail(\"workflowProperties\", workflowProperties);\n     }\n }"},{"sha":"0363a8df4822de19af030699016d0f59994b8bbe","filename":"core/starter/src/main/resources/application.properties","status":"removed","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,33 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} Core\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-conf.directory=${conf.directory}\n-\n-server.servlet.contextPath=/syncope\n-cxf.path=/rest\n-\n-management.endpoints.web.exposure.include=health,info,loggers\n-management.endpoint.health.show-details=ALWAYS\n-\n-service.discovery.address=http://localhost:8080/syncope/rest/"},{"sha":"27308aedc8c18a986b300b2b10dbea681db5884b","filename":"core/starter/src/main/resources/core.properties","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,143 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Core\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+version=${syncope.version}\n+\n+server.servlet.encoding.charset=UTF-8\n+server.servlet.encoding.enabled=true\n+server.servlet.encoding.force=true\n+\n+conf.directory=${conf.directory}\n+\n+server.servlet.contextPath=/syncope\n+cxf.path=/rest\n+\n+management.endpoints.web.exposure.include=health,info,loggers\n+management.endpoint.health.show-details=ALWAYS\n+\n+service.discovery.address=http://localhost:8080/syncope/rest/\n+\n+###############\n+# Persistence #\n+###############\n+\n+persistence.entityFactory=org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory\n+persistence.plainSchemaDao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO\n+persistence.plainAttrDao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO\n+persistence.plainAttrValueDao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrValueDAO\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO\n+persistence.searchCondVisitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n+persistence.userDao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n+persistence.groupDao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n+persistence.anyObjectDao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n+persistence.auditConfDao=org.apache.syncope.core.persistence.jpa.dao.JPAAuditConfDAO\n+persistence.remoteCommitProvider=sjvm\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=org.postgresql.Driver\n+persistence.domain[0].jdbcURL=jdbc:postgresql://localhost:5432/syncope\n+persistence.domain[0].dbUsername=syncope\n+persistence.domain[0].dbPassword=syncope\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+persistence.domain[0].auditSql=audit.sql\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n+\n+################\n+# Provisioning #\n+################\n+\n+provisioning.asyncConnectorFacadeExecutor.corePoolSize=5\n+provisioning.asyncConnectorFacadeExecutor.maxPoolSize=25\n+provisioning.asyncConnectorFacadeExecutor.queueCapacity=100\n+\n+provisioning.propagationTaskExecutorAsyncExecutor.corePoolSize=5\n+provisioning.propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n+provisioning.propagationTaskExecutorAsyncExecutor.queueCapacity=100\n+\n+provisioning.propagationManager=org.apache.syncope.core.provisioning.java.propagation.DefaultPropagationManager\n+provisioning.propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n+provisioning.userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n+provisioning.groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n+provisioning.anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n+provisioning.virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n+provisioning.virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n+provisioning.notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+provisioning.auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n+\n+provisioning.connIdLocation=${connid.location}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+provisioning.quartz.sql=tables_postgres.sql\n+provisioning.quartz.disableInstance=false\n+\n+provisioning.smtp.host=none.syncope.apache.org\n+provisioning.smtp.port=25\n+provisioning.smtp.username=\n+provisioning.smtp.password=\n+provisioning.smtp.protocol=smtp\n+provisioning.smtp.defaultEncoding=UTF-8\n+provisioning.smtp.debug=false\n+# Add more properties starting with mail.smtp.* from\n+# https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#properties\n+provisioning.smtp.javamailProperties[mail.smtp.connectiontimeout]=3000\n+provisioning.smtp.javamailProperties[mail.smtp.starttls.enable]=false\n+\n+############\n+# Security #\n+############\n+\n+security.adminUser=${adminUser}\n+security.adminPassword=${adminPassword}\n+security.adminPasswordAlgorithm=SSHA256\n+\n+security.anonymousUser=${anonymousUser}\n+security.anonymousKey=${anonymousKey}\n+\n+security.jwtIssuer=ApacheSyncope\n+security.jwsAlgorithm=HS512\n+security.jwsKey=${jwsKey}\n+\n+security.secretKey=${secretKey}\n+\n+# default for LDAP / RFC2307 SSHA\n+security.digester.saltIterations=1\n+security.digester.saltSizeBytes=8\n+security.digester.invertPositionOfPlainSaltInEncryptionResults=true\n+security.digester.invertPositionOfSaltInMessageBeforeDigesting=true\n+security.digester.useLenientSaltSizeCheck=true\n+\n+security.passwordGenerator=org.apache.syncope.core.spring.security.DefaultPasswordGenerator\n+\n+############\n+# Workflow #\n+############\n+\n+workflow.uwfAdapter=org.apache.syncope.core.workflow.java.DefaultUserWorkflowAdapter\n+workflow.gwfAdapter=org.apache.syncope.core.workflow.java.DefaultGroupWorkflowAdapter\n+workflow.awfAdapter=org.apache.syncope.core.workflow.java.DefaultAnyObjectWorkflowAdapter\n+\n+#########\n+# Logic #\n+#########\n+\n+logic.invocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n+logic.implementationLookup=org.apache.syncope.core.logic.init.ClassPathScanImplementationLookup\n+logic.enableJDBCAuditAppender=true"},{"sha":"4003615879b358c7eed06ba7e171d8bf6da00f2a","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/WorkflowContext.java","status":"modified","additions":15,"deletions":27,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -22,48 +22,36 @@\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n-import org.springframework.context.EnvironmentAware;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n-import org.springframework.core.env.Environment;\n \n-@PropertySource(\"classpath:workflow.properties\")\n-@PropertySource(value = \"file:${conf.directory}/workflow.properties\", ignoreResourceNotFound = true)\n+@EnableConfigurationProperties(WorkflowProperties.class)\n @Configuration\n-public class WorkflowContext implements EnvironmentAware {\n+public class WorkflowContext {\n \n-    private Environment env;\n-\n-    @Override\n-    public void setEnvironment(final Environment env) {\n-        this.env = env;\n-    }\n+    @Autowired\n+    private WorkflowProperties props;\n \n     @Bean\n-    public UserWorkflowAdapter uwfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+    public UserWorkflowAdapter uwfAdapter() throws NoSuchMethodException, InstantiationException,\n+            IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (UserWorkflowAdapter) Class.forName(env.getProperty(\"uwfAdapter\")).\n-                getDeclaredConstructor().newInstance();\n+        return props.getUwfAdapter().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public GroupWorkflowAdapter gwfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+    public GroupWorkflowAdapter gwfAdapter() throws NoSuchMethodException, InstantiationException,\n+            IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (GroupWorkflowAdapter) Class.forName(env.getProperty(\"gwfAdapter\")).\n-                getDeclaredConstructor().newInstance();\n+        return props.getGwfAdapter().getDeclaredConstructor().newInstance();\n     }\n \n     @Bean\n-    public AnyObjectWorkflowAdapter awfAdapter()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException,\n-            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+    public AnyObjectWorkflowAdapter awfAdapter() throws NoSuchMethodException, InstantiationException,\n+            IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n \n-        return (AnyObjectWorkflowAdapter) Class.forName(env.getProperty(\"awfAdapter\")).\n-                getDeclaredConstructor().newInstance();\n+        return props.getAwfAdapter().getDeclaredConstructor().newInstance();\n     }\n }"},{"sha":"c74b84a9238482e8bae9721dd18f29505e7e2e83","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/WorkflowProperties.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowProperties.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.java;\n+\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+\n+@ConfigurationProperties(\"workflow\")\n+public class WorkflowProperties {\n+\n+    private Class<? extends UserWorkflowAdapter> uwfAdapter = DefaultUserWorkflowAdapter.class;\n+\n+    private Class<? extends GroupWorkflowAdapter> gwfAdapter = DefaultGroupWorkflowAdapter.class;\n+\n+    private Class<? extends AnyObjectWorkflowAdapter> awfAdapter = DefaultAnyObjectWorkflowAdapter.class;\n+\n+    public Class<? extends UserWorkflowAdapter> getUwfAdapter() {\n+        return uwfAdapter;\n+    }\n+\n+    public void setUwfAdapter(final Class<? extends UserWorkflowAdapter> uwfAdapter) {\n+        this.uwfAdapter = uwfAdapter;\n+    }\n+\n+    public Class<? extends GroupWorkflowAdapter> getGwfAdapter() {\n+        return gwfAdapter;\n+    }\n+\n+    public void setGwfAdapter(final Class<? extends GroupWorkflowAdapter> gwfAdapter) {\n+        this.gwfAdapter = gwfAdapter;\n+    }\n+\n+    public Class<? extends AnyObjectWorkflowAdapter> getAwfAdapter() {\n+        return awfAdapter;\n+    }\n+\n+    public void setAwfAdapter(final Class<? extends AnyObjectWorkflowAdapter> awfAdapter) {\n+        this.awfAdapter = awfAdapter;\n+    }\n+}"},{"sha":"8e5f662a1e849cd27d1ad2da447c0543960f786e","filename":"core/workflow-java/src/main/resources/workflow.properties","status":"removed","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,20 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-wf.directory=${conf.directory}\n-uwfAdapter=org.apache.syncope.core.workflow.java.DefaultUserWorkflowAdapter\n-gwfAdapter=org.apache.syncope.core.workflow.java.DefaultGroupWorkflowAdapter\n-awfAdapter=org.apache.syncope.core.workflow.java.DefaultAnyObjectWorkflowAdapter"},{"sha":"a8786d7fd5a663de43d7b4a5b904d4a8fcd9f105","filename":"docker/console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -55,8 +55,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>"},{"sha":"154b4f249ccd19c907b9523cdae344582422d523","filename":"docker/console/src/main/resources/Dockerfile","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -31,6 +31,9 @@ COPY log4j2.xml /opt/syncope/conf/\n \n COPY syncope-docker-console-*war /opt/syncope/lib/syncope-console.war\n \n+ENV SPRING_PROFILES_ACTIVE=docker\n+ENV LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+\n COPY startup.sh /opt/syncope/bin\n RUN chmod 755 /opt/syncope/bin/startup.sh\n CMD [\"/opt/syncope/bin/startup.sh\"]"},{"sha":"f50ca0c9498d1942148091f25619d70aa7e814d8","filename":"docker/console/src/main/resources/application.properties","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,32 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} Console\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-server.servlet.contextPath=/syncope-console\n-\n-management.endpoints.web.exposure.include=info,health,loggers\n-management.endpoint.health.show-details=ALWAYS\n-\n-service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n-\n-wicket.core.csrf.enabled=false"},{"sha":"6891bea30b4ee13e899dd40edddf93ad05c5fab0","filename":"docker/console/src/main/resources/console-docker.properties","status":"renamed","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole-docker.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole-docker.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole-docker.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,3 +17,10 @@\n keymaster.address=${KEYMASTER_ADDRESS}\n keymaster.username=${KEYMASTER_USERNAME}\n keymaster.password=${KEYMASTER_PASSWORD}\n+\n+service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+console.anonymousUser=${ANONYMOUS_USER:anonymous}\n+console.anonymousKey=${ANONYMOUS_KEY:anonymousKey}\n+\n+logging.config=file:///opt/syncope/conf/log4j2.xml","previous_filename":"docker/sra/src/main/resources/keymaster.properties"},{"sha":"b12192ce2ae8b51823a170a01b1b4388a1fa3e43","filename":"docker/console/src/main/resources/startup.sh","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,6 +17,5 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n  -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope-console.war"},{"sha":"b6ed6ec5c0b41bc55bc6836948e977870f184f0f","filename":"docker/core/pom.xml","status":"modified","additions":10,"deletions":44,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -60,15 +60,11 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-rest-cxf</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-self-keymaster-starter</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.common.keymaster</groupId>\n       <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n@@ -161,6 +157,12 @@ under the License.\n       <version>${jdbc.mssql.version}11</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.oracle.database.jdbc</groupId>\n+      <artifactId>ojdbc11</artifactId>\n+      <version>${jdbc.oracle.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>\n@@ -197,6 +199,7 @@ under the License.\n                 <copy file=\"${settings.localRepository}/mysql/mysql-connector-java/${jdbc.mysql.version}/mysql-connector-java-${jdbc.mysql.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\"/>\n                 <copy file=\"${settings.localRepository}/org/mariadb/jdbc/mariadb-java-client/${jdbc.mariadb.version}/mariadb-java-client-${jdbc.mariadb.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\"/>\n                 <copy file=\"${settings.localRepository}/com/microsoft/sqlserver/mssql-jdbc/${jdbc.mssql.version}11/mssql-jdbc-${jdbc.mssql.version}11.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\"/>\n+                <copy file=\"${settings.localRepository}/com/oracle/database/jdbc/ojdbc11/${jdbc.oracle.version}/ojdbc11-${jdbc.oracle.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\"/>\n \n                 <copy file=\"${basedir}/../../core/persistence-jpa-json/target/syncope-core-persistence-jpa-json-${project.version}.jar\" todir=\"${project.build.outputDirectory}/jpa-json\" overwrite=\"true\"/>\n               </target>\n@@ -286,43 +289,6 @@ under the License.\n         <filtering>true</filtering>\n       </resource>\n \n-      <resource>\n-        <directory>${basedir}/../../core/spring/src/main/resources</directory>\n-        <includes>\n-          <include>security.properties</include>\n-        </includes>\n-        <filtering>true</filtering>\n-      </resource>\n-      <resource>\n-        <directory>${basedir}/../../ext/flowable/flowable-bpmn/src/main/resources</directory>\n-        <includes>\n-          <include>workflow.properties</include>\n-          <include>userWorkflow.bpmn20.xml</include>\n-        </includes>\n-        <filtering>true</filtering>\n-      </resource>\n-      <resource>\n-        <directory>${basedir}/../../core/provisioning-java/src/main/resources</directory>\n-        <includes>\n-          <include>mail.properties</include>\n-          <include>connid.properties</include>\n-        </includes>\n-        <filtering>true</filtering>\n-      </resource>\n-      <resource>\n-        <directory>${basedir}/../../core/idrepo/logic/src/main/resources</directory>\n-        <includes>\n-          <include>logic.properties</include>\n-        </includes>\n-        <filtering>true</filtering>\n-      </resource>\n-      <resource>\n-        <directory>${project.basedir}/../../ext/saml2sp4ui/logic/src/main/resources</directory>\n-        <includes>\n-          <include>saml2sp4ui-logic.properties</include>\n-        </includes>\n-        <filtering>true</filtering>\n-      </resource>\n       <resource>\n         <directory>${basedir}/../../fit/core-reference/src/test/resources</directory>\n         <includes>"},{"sha":"9d13cd00cb4d2239ceded98c4121e14af7f1cbf2","filename":"docker/core/src/main/resources/Dockerfile","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,22 +24,23 @@ RUN mkdir /opt/syncope\n RUN mkdir /opt/syncope/bin\n RUN mkdir /opt/syncope/bundles\n RUN mkdir /opt/syncope/conf\n-RUN mkdir /opt/syncope/conf/domains\n RUN mkdir /opt/syncope/lib\n RUN mkdir /opt/syncope/jpa-json\n RUN mkdir /opt/syncope/log\n \n-COPY *.properties* /opt/syncope/conf/\n-COPY *.xml* /opt/syncope/conf/\n+COPY *.properties /opt/syncope/conf/\n+COPY *.xml /opt/syncope/conf/\n COPY saml.keystore.jks /opt/syncope/conf/\n-COPY domains/* /opt/syncope/conf/domains/\n \n COPY bundles/*.jar /opt/syncope/bundles/\n COPY lib/*.jar /opt/syncope/lib/\n COPY jpa-json/*.jar /opt/syncope/jpa-json/\n \n COPY lib/syncope-docker-core-*war /opt/syncope/lib/syncope.war\n \n+ENV SPRING_PROFILES_ACTIVE=docker\n+ENV LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+\n COPY startup.sh /opt/syncope/bin\n RUN chmod 755 /opt/syncope/bin/startup.sh\n CMD [\"/opt/syncope/bin/startup.sh\"]"},{"sha":"6cb0197777069ac16b8bdef61e7e6a6cb0adbea4","filename":"docker/core/src/main/resources/application.properties","status":"removed","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,33 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} Core\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-conf.directory=${conf.directory}\n-\n-server.servlet.contextPath=/syncope\n-cxf.path=/rest\n-\n-management.endpoints.web.exposure.include=health,info,loggers\n-management.endpoint.health.show-details=ALWAYS\n-\n-service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}"},{"sha":"44fe8dc9b71f153f9e80a05e761684416103cd96","filename":"docker/core/src/main/resources/core-docker.properties","status":"renamed","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-docker.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-docker.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-docker.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,3 +17,14 @@\n keymaster.address=${KEYMASTER_ADDRESS}\n keymaster.username=${KEYMASTER_USERNAME}\n keymaster.password=${KEYMASTER_PASSWORD}\n+\n+service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+security.anonymousUser=${ANONYMOUS_USER:anonymous}\n+security.anonymousKey=${ANONYMOUS_KEY:anonymousKey}\n+\n+persistence.remoteCommitProvider=${OPENJPA_REMOTE_COMMIT}\n+\n+provisioning.connIdLocation=${connid.location}\n+\n+logging.config=file:///opt/syncope/conf/log4j2.xml","previous_filename":"docker/enduser/src/main/resources/keymaster.properties"},{"sha":"a1412f4f2c2435675b966485d3ce585644ea6f5f","filename":"docker/core/src/main/resources/core-mariadb.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=org.mariadb.jdbc.Driver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MariaDBDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n+persistence.domain[0].auditSql=audit_mariadb.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mariadb.sql"},{"sha":"62d0454ea79ead09d5e93d2f48f36a02bb2acb53","filename":"docker/core/src/main/resources/core-myjson.properties","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,48 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mysql_innodb.sql\n+\n+persistence.entityFactory=org.apache.syncope.core.persistence.jpa.entity.MyJPAJSONEntityFactory\n+persistence.plainSchemaDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONPlainSchemaDAO\n+persistence.plainAttrDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+persistence.plainAttrValueDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAnySearchDAO\n+persistence.searchCondVisitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n+persistence.userDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+persistence.groupDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+persistence.anyObjectDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+persistence.auditConfDao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAuditConfDAO\n+\n+persistence.indexesXML=classpath:myjson/indexes.xml\n+persistence.viewsXML=classpath:myjson/views.xml\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].content=classpath:domains/jpa-json/MasterContent.xml\n+persistence.domain[0].jdbcDriver=com.mysql.cj.jdbc.Driver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n+persistence.domain[0].orm=META-INF/spring-orm-myjson.xml\n+persistence.domain[0].auditSql=audit_myjson.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"12b2f297b4b6b2ee87deb3ebd9fd8581f62fddab","filename":"docker/core/src/main/resources/core-mysql.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=com.mysql.cj.jdbc.Driver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n+persistence.domain[0].auditSql=audit_mysql_innodb.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"88a8df9ba92314fbe8c5379221beac51b3ac66be","filename":"docker/core/src/main/resources/core-oracle.properties","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,31 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=oracle.jdbc.OracleDriver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].schema=${DB_SCHEMA}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n+persistence.domain[0].orm=META-INF/spring-orm-oracle.xml\n+persistence.domain[0].auditSql=audit_oracle.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n+provisioning.quartz.sql=tables_oracle.sql"},{"sha":"030d7ec54a500985b0803996aa64817024cd54e7","filename":"docker/core/src/main/resources/core-pgjsonb.properties","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,45 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+persistence.entityFactory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n+persistence.plainSchemaDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONPlainSchemaDAO\n+persistence.plainAttrDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+persistence.plainAttrValueDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n+persistence.searchCondVisitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n+persistence.userDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+persistence.groupDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+persistence.anyObjectDao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+persistence.auditConfDao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAuditConfDAO\n+\n+persistence.indexesXML=classpath:pgjsonb/indexes.xml\n+persistence.viewsXML=classpath:pgjsonb/views.xml\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].content=classpath:domains/jpa-json/MasterContent.xml\n+persistence.domain[0].jdbcDriver=org.postgresql.Driver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+persistence.domain[0].orm=META-INF/spring-orm-pgjsonb.xml\n+persistence.domain[0].auditSql=audit_pgjsonb.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+provisioning.quartz.sql=tables_postgres.sql"},{"sha":"d35e3303d47b0417af420c7cb6ae938366b2c598","filename":"docker/core/src/main/resources/core-postgresql.properties","status":"renamed","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-postgresql.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-postgresql.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-postgresql.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -14,19 +14,15 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-spring.application.name=Apache Syncope ${syncope.version} Enduser\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=org.postgresql.Driver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+persistence.domain[0].auditSql=audit.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n \n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-server.servlet.contextPath=/syncope-enduser\n-\n-management.endpoints.web.exposure.include=info,health,loggers\n-management.endpoint.health.show-details=ALWAYS\n-\n-service.discovery.address=http://localhost:8080/syncope-enduser/\n-\n-wicket.core.csrf.enabled=false\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+provisioning.quartz.sql=tables_postgres.sql","previous_filename":"client/idrepo/enduser/src/main/resources/application.properties"},{"sha":"91d29096a9e6d05d22c0378565881ecde628362c","filename":"docker/core/src/main/resources/core-sqlserver.properties","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+persistence.domain[0].key=Master\n+persistence.domain[0].jdbcDriver=com.microsoft.sqlserver.jdbc.SQLServerDriver\n+persistence.domain[0].jdbcURL=${DB_URL}\n+persistence.domain[0].schema=${DB_SCHEMA}\n+persistence.domain[0].dbUsername=${DB_USER}\n+persistence.domain[0].dbPassword=${DB_PASSWORD}\n+persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n+persistence.domain[0].orm=META-INF/spring-orm-sqlserver.xml\n+persistence.domain[0].auditSql=audit_sqlserver.sql\n+persistence.domain[0].poolMaxActive=${DB_POOL_MAX}\n+persistence.domain[0].poolMinIdle=${DB_POOL_MIN}\n+\n+persistence.viewsXML=classpath:sqlserver_views.xml\n+\n+provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n+provisioning.quartz.sql=tables_sqlServer.sql"},{"sha":"f5aeab8521e4f231d74af0229f148a90419e0ca8","filename":"docker/core/src/main/resources/domains/Master.properties.mariadb","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.mariadb.jdbc.Driver\n-Master.url=${DB_URL}\n-Master.schema=\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.MariaDBDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n-Master.orm=META-INF/spring-orm.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit.sql"},{"sha":"108e1fe1557310a255068fba4f126702e7c12fef","filename":"docker/core/src/main/resources/domains/Master.properties.mssql","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver\n-Master.url=${DB_URL}\n-Master.schema=${DB_SCHEMA}\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n-Master.orm=META-INF/spring-orm-sqlserver.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit_sqlserver.sql"},{"sha":"958fd2ed2df28c7941942d1eb8e35f4d4ddd5b61","filename":"docker/core/src/main/resources/domains/Master.properties.myjson","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.myjson?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=${DB_URL}\n-Master.schema=\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n-Master.orm=META-INF/spring-orm-myjson.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit_myjson.sql"},{"sha":"86e634a943ae3322fbf06f58699d9a247761c435","filename":"docker/core/src/main/resources/domains/Master.properties.mysql","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=${DB_URL}\n-Master.schema=\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n-Master.orm=META-INF/spring-orm.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit_mysql_innodb.sql"},{"sha":"8cb007d4e308feb85cc0aa893789c885d39f21e1","filename":"docker/core/src/main/resources/domains/Master.properties.pgjsonb","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.postgresql.Driver\n-Master.url=${DB_URL}\n-Master.schema=\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n-Master.orm=META-INF/spring-orm-pgjsonb.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit_pgjsonb.sql"},{"sha":"74b347166163da74122a3f67e4450c535191b70d","filename":"docker/core/src/main/resources/domains/Master.properties.postgresql","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-Master.driverClassName=org.postgresql.Driver\n-Master.url=${DB_URL}\n-Master.schema=\n-Master.username=${DB_USER}\n-Master.password=${DB_PASSWORD}\n-Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n-Master.orm=META-INF/spring-orm.xml\n-\n-Master.pool.maxActive=${DB_POOL_MAX}\n-Master.pool.minIdle=${DB_POOL_MIN}\n-\n-Master.audit.sql=audit.sql"},{"sha":"932d2f4988678aca0c5da06ca1bab4262f952a97","filename":"docker/core/src/main/resources/domains/MasterContent.xml.all","status":"removed","additions":0,"deletions":130,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.all","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.all","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.all?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,130 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<dataset>\n-  <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>\n-\n-  <AnyType id=\"USER\" kind=\"USER\"/>\n-  <AnyTypeClass id=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n-\n-  <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n-  <AnyTypeClass id=\"BaseGroup\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"GROUP\" anyTypeClass_id=\"BaseGroup\"/>\n-        \n-  <!-- Actual plain schemas -->\n-  <Implementation id=\"EmailAddressValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n-  <SyncopeSchema id=\"email\"/>\n-  <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n-               validator_id=\"EmailAddressValidator\"/>\n-  \n-  <Implementation id=\"BinaryValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.BinaryValidator\"/>\n-\n-  <Implementation id=\"PullJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate\"/>\n-  <Implementation id=\"PushJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate\"/>\n-\n-\n-  <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-  <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-\n-  <!-- Password reset notifications -->\n-  <MailTemplate id=\"requestPasswordReset\"\n-                textTemplate=\"Hi,\n-a password reset was requested for ${user.getUsername()}.\n-\n-In order to complete this request, you need to visit this link:\n-\n-http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}\n-\n-If you did not request this reset, just ignore the present e-mail.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,\n-a password reset was requested for ${user.getUsername()}.&lt;/p&gt;\n-\n-&lt;p&gt;In order to complete this request, you need to visit this \n-&lt;a href=&quot;http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n-\n-&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-  <MailTemplate id=\"confirmPasswordReset\"\n-                textTemplate=\"Hi,\n-we are happy to inform you that the password request was successfully executed for your account.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,&lt;/br&gt;\n-we are happy to inform you that the password request was successfully executed for your account.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-\n-  <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n-  \n-  <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n-\n-  <ReportTemplate id=\"empty\"/>  \n-\n-  <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n-  <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n-  <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n-\n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n-</dataset>"},{"sha":"0e35f39343815f7565eb9d049d4d3b722f938cf6","filename":"docker/core/src/main/resources/domains/MasterContent.xml.pgjsonb","status":"removed","additions":0,"deletions":130,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,130 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-     http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<dataset>\n-  <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>  \n-\n-  <AnyType id=\"USER\" kind=\"USER\"/>\n-  <AnyTypeClass id=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>\n-\n-  <AnyType id=\"GROUP\" kind=\"GROUP\"/>\n-  <AnyTypeClass id=\"BaseGroup\"/>\n-  <AnyType_AnyTypeClass anyType_id=\"GROUP\" anyTypeClass_id=\"BaseGroup\"/>\n-        \n-  <!-- Actual plain schemas -->\n-  <Implementation id=\"EmailAddressValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n-  <SyncopeSchema id=\"email\"/>\n-  <PlainSchema id=\"email\" type=\"String\" anyTypeClass_id=\"BaseUser\"\n-               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n-               validator_id=\"EmailAddressValidator\"/>\n-  \n-  <Implementation id=\"BinaryValidator\" type=\"VALIDATOR\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.BinaryValidator\"/>\n-\n-  <Implementation id=\"PullJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate\"/>\n-  <Implementation id=\"PushJobDelegate\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate\"/>\n-\n-\n-  <Implementation id=\"ExpiredAccessTokenCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredAccessTokenCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"89de5014-e3f5-4462-84d8-d97575740baf\" name=\"Access Token Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredAccessTokenCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-  <Implementation id=\"ExpiredBatchCleanup\" type=\"TASKJOB_DELEGATE\" engine=\"JAVA\"\n-                  body=\"org.apache.syncope.core.provisioning.java.job.ExpiredBatchCleanup\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"8ea0ea51-ce08-4fe3-a0c8-c281b31b5893\" name=\"Expired Batch Operations Cleanup Task\"  active=\"1\"\n-        jobDelegate_id=\"ExpiredBatchCleanup\" cronExpression=\"0 0/5 * * * ?\"/>\n-\n-  <!-- Password reset notifications -->\n-  <MailTemplate id=\"requestPasswordReset\"\n-                textTemplate=\"Hi,\n-a password reset was requested for ${user.getUsername()}.\n-\n-In order to complete this request, you need to visit this link:\n-\n-http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}\n-\n-If you did not request this reset, just ignore the present e-mail.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,\n-a password reset was requested for ${user.getUsername()}.&lt;/p&gt;\n-\n-&lt;p&gt;In order to complete this request, you need to visit this \n-&lt;a href=&quot;http://localhost:9080/syncope-enduser/confirmpasswordreset?token=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n-\n-&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-  <MailTemplate id=\"confirmPasswordReset\"\n-                textTemplate=\"Hi,\n-we are happy to inform you that the password request was successfully executed for your account.\n-\n-Best regards.\"\n-                htmlTemplate=\"&lt;html&gt;\n-&lt;body&gt;\n-&lt;p&gt;Hi,&lt;/br&gt;\n-we are happy to inform you that the password request was successfully executed for your account.&lt;/p&gt;\n-\n-&lt;p&gt;Best regards.&lt;/p&gt;\n-&lt;/body&gt;\n-&lt;/html&gt;\"/>\n-\n-  <Notification id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_id=\"requestPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"a328f2e6-25e9-4cc1-badf-7425d7be4b39\" anyType_id=\"USER\" notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" filter=\"token!=$null\"/>\n-  <Notification_events notification_id=\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n-  \n-  <Notification id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" active=\"1\" recipientAttrName=\"email\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_id=\"confirmPasswordReset\" \n-                traceLevel=\"FAILURES\"/> \n-  <Notification_events notification_id=\"bef0c250-e8a7-4848-bb63-2564fc409ce2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n-\n-  <ReportTemplate id=\"empty\"/>  \n-\n-  <Report id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" name=\"reconciliation\" active=\"1\" template_id=\"empty\"/>\n-  <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n-                  body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n-  <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n-\n-  <SyncopeRole id=\"GROUP_OWNER\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_CREATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"USER_DELETE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPECLASS_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"RELATIONSHIPTYPE_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"ANYTYPE_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"REALM_LIST\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_SEARCH\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_READ\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_UPDATE\"/>\n-  <SyncopeRole_entitlements role_id=\"GROUP_OWNER\" entitlement=\"GROUP_DELETE\"/>\n-</dataset>"},{"sha":"08340e6461663bd5cacd2be284057fb81767e8dd","filename":"docker/core/src/main/resources/index.xml.myjson","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findex.xml.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findex.xml.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findex.xml.myjson?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  <comment>Additional indexes (in respect to JPA's)</comment>\n-\n-  <entry key=\"UDynGroupMembers_any_id\">CREATE INDEX UDynGroupMembers_any_id ON UDynGroupMembers(any_id)</entry>\n-  <entry key=\"UDynGroupMembers_group_id\">CREATE INDEX UDynGroupMembers_group_id ON UDynGroupMembers(group_id)</entry>\n-  <entry key=\"ADynGroupMembers_any_id\">CREATE INDEX ADynGroupMembers_any_id ON ADynGroupMembers(any_id)</entry>\n-  <entry key=\"ADynGroupMembers_group_id\">CREATE INDEX ADynGroupMembers_group_id ON ADynGroupMembers(group_id)</entry>\n-\n-  <entry key=\"DynRoleMembers_any_id\">CREATE INDEX DynRoleMembers_any_id ON DynRoleMembers(any_id)</entry>\n-  <entry key=\"DynRoleMembers_role_id\">CREATE INDEX DynRoleMembers_role_id ON DynRoleMembers(role_id)</entry>\n-\n-  <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n-  <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n-\n-  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n-  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n-  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n-  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n-\n-  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n-  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n-  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n-  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n-\n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-</properties>"},{"sha":"9de817a0f65aaaceee94030664227545d008d046","filename":"docker/core/src/main/resources/indexes.xml.pgjsonb","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,50 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  <comment>Additional indexes (in respect to JPA's)</comment>\n-\n-  <entry key=\"SyncopeUser_plainAttrs_idx\">CREATE INDEX SyncopeUser_plainAttrs_idx ON SyncopeUser USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-  <entry key=\"SyncopeGroup_plainAttrs_idx\">CREATE INDEX SyncopeGroup_plainAttrs_idx ON SyncopeGroup USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-  <entry key=\"AnyObject_plainAttrs_idx\">CREATE INDEX AnyObject_plainAttrs_idx ON AnyObject USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-\n-  <entry key=\"UDynGroupMembers_any_id\">CREATE INDEX UDynGroupMembers_any_id ON UDynGroupMembers(any_id)</entry>\n-  <entry key=\"UDynGroupMembers_group_id\">CREATE INDEX UDynGroupMembers_group_id ON UDynGroupMembers(group_id)</entry>\n-  <entry key=\"ADynGroupMembers_any_id\">CREATE INDEX ADynGroupMembers_any_id ON ADynGroupMembers(any_id)</entry>\n-  <entry key=\"ADynGroupMembers_group_id\">CREATE INDEX ADynGroupMembers_group_id ON ADynGroupMembers(group_id)</entry>\n-\n-  <entry key=\"DynRoleMembers_any_id\">CREATE INDEX DynRoleMembers_any_id ON DynRoleMembers(any_id)</entry>\n-  <entry key=\"DynRoleMembers_role_id\">CREATE INDEX DynRoleMembers_role_id ON DynRoleMembers(role_id)</entry>\n-\n-  <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n-  <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n-\n-  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n-  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n-  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n-  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n-\n-  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n-  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n-  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n-  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n-\n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-</properties>"},{"sha":"34293b8b332c6413eb29c1c0f80e397e30182f82","filename":"docker/core/src/main/resources/persistence.properties.all","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.all?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAuditConfDAO\n-openjpa.RemoteCommitProvider=${OPENJPA_REMOTE_COMMIT}"},{"sha":"f32258e7e8f7f7f080445644b77532c1368ee882","filename":"docker/core/src/main/resources/persistence.properties.myjson","status":"removed","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.myjson?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,29 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.MyJPAJSONEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.MyJPAJSONAuditConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"ab20e0ddb4b14858c89be34241b716f36d8644d6","filename":"docker/core/src/main/resources/persistence.properties.pgjsonb","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAuditConfDAO\n-openjpa.RemoteCommitProvider=${OPENJPA_REMOTE_COMMIT}"},{"sha":"8ed216e7bceb108dd953a58d8b867983b1dc976a","filename":"docker/core/src/main/resources/provisioning.properties.mariadb","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,37 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n-quartz.sql=tables_mariadb.sql\n-quartz.scheduler.idleWaitTime=5000\n-quartz.disableInstance=false"},{"sha":"32fead97c6d40abf07626cf001f2583ee3657264","filename":"docker/core/src/main/resources/provisioning.properties.mssql","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,37 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n-quartz.sql=tables_sqlServer.sql\n-quartz.scheduler.idleWaitTime=5000\n-quartz.disableInstance=false"},{"sha":"6dfcbefe08285d27bcd850de35d987833a8e6776","filename":"docker/core/src/main/resources/provisioning.properties.myjson","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,37 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n-quartz.sql=tables_mysql_innodb.sql\n-quartz.scheduler.idleWaitTime=5000\n-quartz.disableInstance=false"},{"sha":"6dfcbefe08285d27bcd850de35d987833a8e6776","filename":"docker/core/src/main/resources/provisioning.properties.mysql","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,37 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n-quartz.sql=tables_mysql_innodb.sql\n-quartz.scheduler.idleWaitTime=5000\n-quartz.disableInstance=false"},{"sha":"8ff6643ae3daf606cbe7dd4c8660957000eca5f9","filename":"docker/core/src/main/resources/provisioning.properties.pgjsonb","status":"removed","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,37 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n-quartz.sql=tables_postgres.sql\n-quartz.scheduler.idleWaitTime=5000\n-quartz.disableInstance=false"},{"sha":"096c89c70332bd37bca6cbd5bd9c146078abc2ac","filename":"docker/core/src/main/resources/provisioning.properties.postgresql","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,36 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n-quartz.sql=tables_postgres.sql\n-quartz.disableInstance=false"},{"sha":"f0007cf94315b9ba83b6bd345e9929582e79902f","filename":"docker/core/src/main/resources/startup.sh","status":"modified","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,51 +17,5 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-cd /opt/syncope/conf\n-\n-rm -f provisioning.properties\n-ln -s provisioning.properties.$DBMS provisioning.properties\n-\n-rm -f persistence.properties\n-if [ $DBMS = \"pgjsonb\" ]; then\n-  ln -s persistence.properties.pgjsonb persistence.properties\n-elif [ $DBMS = \"myjson\" ]; then\n-  ln -s persistence.properties.myjson persistence.properties\n-else\n-  ln -s persistence.properties.all persistence.properties\n-fi\n-\n-rm -f views.xml\n-ln -s views.xml.$DBMS views.xml\n-\n-if [ $DBMS = \"pgjsonb\" ]; then\n-  ln -s indexes.xml.pgjsonb indexes.xml\n-elif [ $DBMS = \"myjson\" ]; then\n-  ln -s indexes.xml.myjson indexes.xml\n-else\n-  rm -f indexes.xml\n-fi\n-\n-cd domains\n-\n-if [ $DBMS = \"pgjsonb\" ]; then\n-  mv MasterContent.xml MasterContent.xml.all\n-  ln -s MasterContent.xml.pgjsonb MasterContent.xml\n-elif [ $DBMS = \"myjson\" ]; then\n-  mv MasterContent.xml MasterContent.xml.all\n-  ln -s MasterContent.xml.myjson MasterContent.xml\n-else\n-  rm -f MasterContent.xml\n-  mv MasterContent.xml.all MasterContent.xml\n-fi\n-\n-rm -f Master.properties\n-ln -s Master.properties.$DBMS Master.properties\n-\n-if [ $DBMS = \"pgjsonb\" ] || [ $DBMS = \"myjson\" ] ; then\n-export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib,/opt/syncope/jpa-json\"\n-else\n-export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n-fi\n java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n  -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope.war"},{"sha":"e8e9a2177d4c4d7846623a606659a770082a8d77","filename":"docker/core/src/main/resources/views.xml.mariadb","status":"removed","additions":0,"deletions":268,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,268 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n- \n-    SELECT u.id as any_id, u.* FROM SyncopeUser u\n-  </entry>\n-  <entry key=\"user_search_unique_attr\">\n-    CREATE VIEW user_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_attr\">\n-    CREATE VIEW user_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n- \n-    SELECT a.id as any_id, a.* FROM AnyObject a\n-  </entry>\n-  <entry key=\"anyObject_search_unique_attr\">\n-    CREATE VIEW anyObject_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrUniqueValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_attr\">\n-    CREATE VIEW anyObject_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n- \n-    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n-  </entry>\n-  <entry key=\"group_search_unique_attr\">\n-    CREATE VIEW group_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_attr\">\n-    CREATE VIEW group_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>\n\\ No newline at end of file"},{"sha":"ab6be98640a00c6176b1e283a979836a6a8b290d","filename":"docker/core/src/main/resources/views.xml.mssql","status":"removed","additions":0,"deletions":268,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,268 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n- \n-    SELECT u.id as any_id, u.* FROM SyncopeUser u\n-  </entry>\n-  <entry key=\"user_search_unique_attr\">\n-    CREATE VIEW user_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_attr\">\n-    CREATE VIEW user_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n- \n-    SELECT a.id as any_id, a.* FROM AnyObject a\n-  </entry>\n-  <entry key=\"anyObject_search_unique_attr\">\n-    CREATE VIEW anyObject_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrUniqueValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_attr\">\n-    CREATE VIEW anyObject_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n- \n-    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n-  </entry>\n-  <entry key=\"group_search_unique_attr\">\n-    CREATE VIEW group_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_attr\">\n-    CREATE VIEW group_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>"},{"sha":"aa0e3c0ae0c8d9c8b6010eaf5c30d6e3bb46ebc0","filename":"docker/core/src/main/resources/views.xml.myjson","status":"removed","additions":0,"deletions":181,"changes":181,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.myjson?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,181 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n-\n-    SELECT u.id as any_id, u.*, attrs.*\n-    FROM SyncopeUser u, JSON_TABLE(COALESCE(plainAttrs, '[{}]'), '$[*]' COLUMNS (\n-    plainSchema VARCHAR(255) PATH '$.schema',\n-    NESTED PATH '$.values[*]' COLUMNS (\n-    binaryValue LONGBLOB PATH '$.binaryValue',\n-    booleanValue INT PATH '$.booleanValue',\n-    dateValue BIGINT(20) PATH '$.dateValue',\n-    doubleValue DOUBLE PATH '$.doubleValue',\n-    longValue BIGINT(20) PATH '$.longValue',\n-    stringValue VARCHAR(255) PATH '$.stringValue'),\n-    attrUniqueValue JSON PATH '$.uniqueValue')\n-    ) AS attrs\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n- \n-    SELECT a.id as any_id, a.*, attrs.*\n-    FROM AnyObject a, JSON_TABLE(COALESCE(plainAttrs, '[{}]'), '$[*]' COLUMNS (\n-    plainSchema VARCHAR(255) PATH '$.schema',\n-    NESTED PATH '$.values[*]' COLUMNS (\n-    binaryValue LONGBLOB PATH '$.binaryValue',\n-    booleanValue INT PATH '$.booleanValue',\n-    dateValue BIGINT(20) PATH '$.dateValue',\n-    doubleValue DOUBLE PATH '$.doubleValue',\n-    longValue BIGINT(20) PATH '$.longValue',\n-    stringValue VARCHAR(255) PATH '$.stringValue'),\n-    attrUniqueValue JSON PATH '$.uniqueValue')\n-    ) AS attrs\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n- \n-    SELECT g.id as any_id, g.*, attrs.*\n-    FROM SyncopeGroup g, JSON_TABLE(COALESCE(plainAttrs, '[{}]'), '$[*]' COLUMNS (\n-    plainSchema VARCHAR(255) PATH '$.schema',\n-    NESTED PATH '$.values[*]' COLUMNS (\n-    binaryValue LONGBLOB PATH '$.binaryValue',\n-    booleanValue INT PATH '$.booleanValue',\n-    dateValue BIGINT(20) PATH '$.dateValue',\n-    doubleValue DOUBLE PATH '$.doubleValue',\n-    longValue BIGINT(20) PATH '$.longValue',\n-    stringValue VARCHAR(255) PATH '$.stringValue'),\n-    attrUniqueValue JSON PATH '$.uniqueValue')\n-    ) AS attrs\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>"},{"sha":"e8e9a2177d4c4d7846623a606659a770082a8d77","filename":"docker/core/src/main/resources/views.xml.mysql","status":"removed","additions":0,"deletions":268,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,268 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n- \n-    SELECT u.id as any_id, u.* FROM SyncopeUser u\n-  </entry>\n-  <entry key=\"user_search_unique_attr\">\n-    CREATE VIEW user_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_attr\">\n-    CREATE VIEW user_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n- \n-    SELECT a.id as any_id, a.* FROM AnyObject a\n-  </entry>\n-  <entry key=\"anyObject_search_unique_attr\">\n-    CREATE VIEW anyObject_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrUniqueValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_attr\">\n-    CREATE VIEW anyObject_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n- \n-    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n-  </entry>\n-  <entry key=\"group_search_unique_attr\">\n-    CREATE VIEW group_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_attr\">\n-    CREATE VIEW group_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>\n\\ No newline at end of file"},{"sha":"eb450bef723821f0c0549b32702d5b95c7068e28","filename":"docker/core/src/main/resources/views.xml.pgjsonb","status":"removed","additions":0,"deletions":154,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,154 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n-\n-    SELECT u.id as any_id, u.*,attrs,attrValues\n-    FROM SyncopeUser u, jsonb_array_elements(COALESCE(u.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n-\n-    SELECT a.id as any_id, a.*,attrs,attrValues\n-    FROM AnyObject a, jsonb_array_elements(COALESCE(a.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n-\n-    SELECT g.id as any_id, g.*,attrs,attrValues\n-    FROM SyncopeGroup g, jsonb_array_elements(COALESCE(g.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>"},{"sha":"b6664c00334ad3a6bea04eb3f00092a65071a9b7","filename":"docker/core/src/main/resources/views.xml.postgresql","status":"removed","additions":0,"deletions":268,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,268 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n- \n-    SELECT u.id as any_id, u.* FROM SyncopeUser u\n-  </entry>\n-  <entry key=\"user_search_unique_attr\">\n-    CREATE VIEW user_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_attr\">\n-    CREATE VIEW user_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM UPlainAttrValue uav, UPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n- \n-    SELECT a.id as any_id, a.* FROM AnyObject a\n-  </entry>\n-  <entry key=\"anyObject_search_unique_attr\">\n-    CREATE VIEW anyObject_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrUniqueValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_attr\">\n-    CREATE VIEW anyObject_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM APlainAttrValue uav, APlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n- \n-    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n-  </entry>\n-  <entry key=\"group_search_unique_attr\">\n-    CREATE VIEW group_search_unique_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_attr\">\n-    CREATE VIEW group_search_attr AS\n-\n-    SELECT ua.owner_id AS any_id,\n-    ua.schema_id AS schema_id,\n-    uav.booleanvalue AS booleanvalue,\n-    uav.datevalue AS datevalue,\n-    uav.doublevalue AS doublevalue,\n-    uav.longvalue AS longvalue,\n-    uav.stringvalue AS stringvalue\n-    FROM GPlainAttrValue uav, GPlainAttr ua\n-    WHERE uav.attribute_id = ua.id\n-  </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>"},{"sha":"d94a702e9e56162d5b231286a557bb69a50d2b53","filename":"docker/enduser/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -50,8 +50,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>"},{"sha":"4ce3a01312526489d3edf8650d0560685f7b81d6","filename":"docker/enduser/src/main/resources/Dockerfile","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -33,6 +33,9 @@ COPY log4j2.xml /opt/syncope/conf/\n \n COPY syncope-docker-enduser-*war /opt/syncope/lib/syncope-enduser.war\n \n+ENV SPRING_PROFILES_ACTIVE=docker\n+ENV LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+\n COPY startup.sh /opt/syncope/bin\n RUN chmod 755 /opt/syncope/bin/startup.sh\n CMD [\"/opt/syncope/bin/startup.sh\"]"},{"sha":"2b3c7b2d6822e22834d2cf7250bf2a8ce3f3ad60","filename":"docker/enduser/src/main/resources/application.properties","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,32 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} Enduser\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-server.servlet.contextPath=/syncope-enduser\n-\n-management.endpoints.web.exposure.include=info,health,loggers\n-management.endpoint.health.show-details=ALWAYS\n-\n-service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n-\n-wicket.core.csrf.enabled=false"},{"sha":"ef5b6d2d08bcefcdb3d9d3a8e834255f8e503074","filename":"docker/enduser/src/main/resources/enduser-docker.properties","status":"renamed","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser-docker.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser-docker.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser-docker.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,3 +17,10 @@\n keymaster.address=${KEYMASTER_ADDRESS}\n keymaster.username=${KEYMASTER_USERNAME}\n keymaster.password=${KEYMASTER_PASSWORD}\n+\n+service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+enduser.anonymousUser=${ANONYMOUS_USER:anonymous}\n+enduser.anonymousKey=${ANONYMOUS_KEY:anonymousKey}\n+\n+logging.config=file:///opt/syncope/conf/log4j2.xml","previous_filename":"docker/core/src/main/resources/keymaster.properties"},{"sha":"42656c68c98ba8ce8c5edd4ca9f99b6661208270","filename":"docker/enduser/src/main/resources/startup.sh","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,6 +17,5 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n  -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope-enduser.war"},{"sha":"e8c1bd6f6d09071d430bc154d98bd67603861d36","filename":"docker/sra/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -45,8 +45,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>"},{"sha":"f95554f1e8faad6d305b597b161cb8971d52e6ba","filename":"docker/sra/src/main/resources/Dockerfile","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -31,6 +31,8 @@ COPY log4j2.xml /opt/syncope/conf/\n \n COPY syncope-docker-sra-*jar /opt/syncope/lib/syncope-sra.jar\n \n+ENV SPRING_PROFILES_ACTIVE=docker\n+\n COPY startup.sh /opt/syncope/bin\n RUN chmod 755 /opt/syncope/bin/startup.sh\n CMD [\"/opt/syncope/bin/startup.sh\"]"},{"sha":"2e2da4405f4585966f2f93e256dcf62ee9f28fd2","filename":"docker/sra/src/main/resources/application.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} SRA\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.port=8080\n-\n-management.endpoint.gateway.enabled=true\n-management.endpoints.web.exposure.include=info,health,loggers,metrics,gateway,sraSessions\n-management.endpoint.health.show-details=ALWAYS\n-spring.cloud.discovery.client.health-indicator.enabled=false\n-\n-service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}"},{"sha":"8f9e096e0db0648cd73e19c78559855dc7cdb119","filename":"docker/sra/src/main/resources/sra-docker.properties","status":"renamed","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fsra-docker.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fsra-docker.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fsra-docker.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -17,3 +17,10 @@\n keymaster.address=${KEYMASTER_ADDRESS}\n keymaster.username=${KEYMASTER_USERNAME}\n keymaster.password=${KEYMASTER_PASSWORD}\n+\n+service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+sra.anonymousUser=${ANONYMOUS_USER:anonymous}\n+sra.anonymousKey=${ANONYMOUS_KEY:anonymousKey}\n+\n+logging.config=file:///opt/syncope/conf/log4j2.xml","previous_filename":"docker/console/src/main/resources/keymaster.properties"},{"sha":"65b7247741161d114da6d02328abbb993b065f23","filename":"docker/src/main/resources/docker-compose/docker-compose-all.yml","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -24,7 +24,7 @@ version: '3.3'\n \n services:\n    keymaster:\n-     image: zookeeper:3.5.6\n+     image: zookeeper:3.7.0\n      restart: always\n \n    db:\n@@ -44,7 +44,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: postgresql\n+       SPRING_PROFILES_ACTIVE: docker,postgresql\n        DB_URL: jdbc:postgresql://db:5432/syncope\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -65,6 +65,7 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}\n@@ -79,6 +80,7 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}\n@@ -93,10 +95,12 @@ services:\n        - \"48080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-wa:8080/syncope-wa/\n+       CAS_SERVER_NAME: http://localhost:48080\n \n    syncope-sra:\n      depends_on:\n@@ -107,6 +111,7 @@ services:\n        - \"58080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}"},{"sha":"82bae44b0a3bad4a85a868c729e7accfaae106a7","filename":"docker/src/main/resources/docker-compose/docker-compose-ha.yml","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -37,7 +37,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: postgresql\n+       SPRING_PROFILES_ACTIVE: docker,postgresql\n        DB_URL: jdbc:postgresql://db:5432/syncope\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -48,6 +48,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope1:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope2:\n      depends_on:\n@@ -57,7 +59,7 @@ services:\n        - \"18081:8080\"\n      restart: always\n      environment:\n-       DBMS: postgresql\n+       SPRING_PROFILES_ACTIVE: docker,postgresql\n        DB_URL: jdbc:postgresql://db:5432/syncope\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -68,6 +70,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope2:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -77,10 +81,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope1:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -90,7 +97,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope1:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"663b049c61791a47760d8d5fc9f3012cff3f1e0a","filename":"docker/src/main/resources/docker-compose/docker-compose-mariadb.yml","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -21,7 +21,7 @@ version: '3.3'\n \n services:\n    db:\n-     image: mariadb:10.5\n+     image: mariadb:10.6\n      restart: always\n      environment:\n        MYSQL_ROOT_PASSWORD: password\n@@ -37,7 +37,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: mariadb\n+       SPRING_PROFILES_ACTIVE: docker,mariadb\n        DB_URL: jdbc:mysql://db:3306/syncope?characterEncoding=UTF-8&relaxAutoCommit=true&useSSL=false\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -48,6 +48,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -57,10 +59,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -70,7 +75,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"bfe4f7e195de85e298a765f16e65b5b576eba5ad","filename":"docker/src/main/resources/docker-compose/docker-compose-myjson.yml","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -38,7 +38,8 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: myjson\n+       SPRING_PROFILES_ACTIVE: docker,myjson\n+       LOADER_PATH: \"/opt/syncope/conf,/opt/syncope/lib,/opt/syncope/jpa-json\"\n        DB_URL: jdbc:mysql://db:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -49,6 +50,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -58,10 +61,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -71,7 +77,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"83b6b7cd37cd74bb456c5c1e852e71b5ba6e0105","filename":"docker/src/main/resources/docker-compose/docker-compose-mysql.yml","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -38,7 +38,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: mysql\n+       SPRING_PROFILES_ACTIVE: docker,mysql\n        DB_URL: jdbc:mysql://db:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -49,6 +49,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -58,10 +60,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -71,7 +76,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"77e2f2adc48fd479e5e08676f37954dbad75c706","filename":"docker/src/main/resources/docker-compose/docker-compose-pgjsonb.yml","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -36,7 +36,8 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: pgjsonb\n+       SPRING_PROFILES_ACTIVE: docker,pgjsonb\n+       LOADER_PATH: \"/opt/syncope/conf,/opt/syncope/lib,/opt/syncope/jpa-json\"\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -47,6 +48,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -56,10 +59,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -69,7 +75,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"8abc4987a700fbc6827fc6007645814e58b7fcd2","filename":"docker/src/main/resources/docker-compose/docker-compose-postgresql.yml","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -36,7 +36,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: postgresql\n+       SPRING_PROFILES_ACTIVE: docker,postgresql\n        DB_URL: jdbc:postgresql://db:5432/syncope\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n@@ -47,6 +47,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -56,10 +58,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -69,7 +74,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}"},{"sha":"c3d5fbc7f784011ef5a2dbb7174d5ec56337e884","filename":"docker/src/main/resources/docker-compose/docker-compose-sqlserver.yml","status":"renamed","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -38,7 +38,7 @@ services:\n        - \"18080:8080\"\n      restart: always\n      environment:\n-       DBMS: mssql\n+       SPRING_PROFILES_ACTIVE: docker,sqlserver\n        DB_URL: jdbc:sqlserver://db:1433;databaseName=syncope\n        DB_SCHEMA: dbo\n        DB_USER: syncope\n@@ -50,6 +50,8 @@ services:\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope:8080/syncope/rest/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-console:\n      depends_on:\n@@ -59,10 +61,13 @@ services:\n        - \"28080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-console:8080/syncope-console/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}\n \n    syncope-enduser:\n      depends_on:\n@@ -72,7 +77,10 @@ services:\n        - \"38080:8080\"\n      restart: always\n      environment:\n+       SPRING_PROFILES_ACTIVE: docker\n        KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n        KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n        SERVICE_DISCOVERY_ADDRESS: http://syncope-enduser:8080/syncope-enduser/\n+       ANONYMOUS_USER: ${ANONYMOUS_USER}\n+       ANONYMOUS_KEY: ${ANONYMOUS_KEY}","previous_filename":"docker/src/main/resources/docker-compose/docker-compose-mssql.yml"},{"sha":"f2acf943916a4b54862b5c9975af4be95e3856de","filename":"docker/wa/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fpom.xml?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -50,8 +50,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n-      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <groupId>org.apache.syncope.common.keymaster.self</groupId>\n+      <artifactId>syncope-common-keymaster-client-self</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>"},{"sha":"7aa71e4314eb66df1e410824a61e6c947f07ec60","filename":"docker/wa/src/main/resources/Dockerfile","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -32,6 +32,8 @@ COPY log4j2.xml /opt/syncope/conf/\n \n COPY syncope-docker-wa-*war /opt/syncope/lib/syncope-wa.war\n \n+ENV SPRING_PROFILES_ACTIVE=docker\n+\n COPY startup.sh /opt/syncope/bin\n RUN chmod 755 /opt/syncope/bin/startup.sh\n CMD [\"/opt/syncope/bin/startup.sh\"]"},{"sha":"b8b2171b25dade5521077ebadc9d67dadb3a331a","filename":"docker/wa/src/main/resources/application.properties","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,58 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-spring.application.name=Apache Syncope ${syncope.version} WA\n-spring.groovy.template.check-template-location=false\n-spring.main.banner-mode=log\n-\n-server.port=8080\n-\n-server.servlet.encoding.charset=UTF-8\n-server.servlet.encoding.enabled=true\n-server.servlet.encoding.force=true\n-\n-server.servlet.contextPath=/syncope-wa\n-\n-server.servlet.session.timeout=300\n-server.servlet.session.cookie.http-only=true\n-server.servlet.session.tracking-modes=COOKIE\n-\n-spring.web.resources.static-locations=classpath:/thymeleaf/static,classpath:/syncope/static,classpath:/static\n-\n-cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n-management.endpoints.enabled-by-default=true\n-management.endpoints.web.exposure.include=info,health,loggers,ssoSessions,registeredServices\n-management.endpoint.health.show-details=ALWAYS\n-spring.cloud.discovery.client.health-indicator.enabled=false\n-\n-# Cache service definitions for 5 minutes\n-cas.service-registry.cache.duration=PT5M\n-\n-# Reload services and hydrate the cache every 5 minutes\n-cas.service-registry.schedule.repeat-interval=PT5M\n-cas.service-registry.schedule.start-delay=PT30S\n-\n-cas.events.core.enabled=false\n-\n-##\n-# Allow configuration classes to override bean definitions from Spring Boot\n-#\n-spring.main.allow-bean-definition-overriding=true\n-spring.main.lazy-initialization=false\n-\n-service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n-\n-version=${syncope.version}"},{"sha":"14e8ca6cf0494f0e8e28d69cdfcd1d39b36603d5","filename":"docker/wa/src/main/resources/keymaster.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-keymaster.address=${KEYMASTER_ADDRESS}\n-keymaster.username=${KEYMASTER_USERNAME}\n-keymaster.password=${KEYMASTER_PASSWORD}"},{"sha":"238772782e6fe11680ad58f00cf528cfb4de8137","filename":"docker/wa/src/main/resources/wa-docker.properties","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa-docker.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa-docker.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa-docker.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,32 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=${KEYMASTER_ADDRESS}\n+keymaster.username=${KEYMASTER_USERNAME}\n+keymaster.password=${KEYMASTER_PASSWORD}\n+\n+cas.server.name=${CAS_SERVER_NAME}\n+\n+conf.directory=/opt/syncope/conf\n+cas.standalone.configuration-directory=${conf.directory}\n+cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}/saml\n+\n+service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+wa.anonymousUser=${ANONYMOUS_USER:anonymous}\n+wa.anonymousKey=${ANONYMOUS_KEY:anonymousKey}\n+\n+logging.config=file:///opt/syncope/conf/log4j2.xml"},{"sha":"b522f7d7147e926a9006fd5d1f539b64b81ec363","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/init/CamelRouteLoader.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.CamelEntitlement;\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n import org.slf4j.Logger;\n@@ -74,13 +73,13 @@ private static boolean isJBoss() {\n     }\n \n     @javax.annotation.Resource(name = \"userRoutes\")\n-    private ResourceWithFallbackLoader userRoutesLoader;\n+    private Resource userRoutes;\n \n     @javax.annotation.Resource(name = \"groupRoutes\")\n-    private ResourceWithFallbackLoader groupRoutesLoader;\n+    private Resource groupRoutes;\n \n     @javax.annotation.Resource(name = \"anyObjectRoutes\")\n-    private ResourceWithFallbackLoader anyObjectRoutesLoader;\n+    private Resource anyObjectRoutes;\n \n     @Override\n     public int getOrder() {\n@@ -94,9 +93,9 @@ public void load() {\n \n     @Override\n     public void load(final String domain, final DataSource datasource) {\n-        loadRoutes(domain, datasource, userRoutesLoader.getResource(), AnyTypeKind.USER);\n-        loadRoutes(domain, datasource, groupRoutesLoader.getResource(), AnyTypeKind.GROUP);\n-        loadRoutes(domain, datasource, anyObjectRoutesLoader.getResource(), AnyTypeKind.ANY_OBJECT);\n+        loadRoutes(domain, datasource, userRoutes, AnyTypeKind.USER);\n+        loadRoutes(domain, datasource, groupRoutes, AnyTypeKind.GROUP);\n+        loadRoutes(domain, datasource, anyObjectRoutes, AnyTypeKind.ANY_OBJECT);\n     }\n \n     private static String nodeToString(final Node content, final DOMImplementationLS domImpl) {\n@@ -130,7 +129,7 @@ private static String nodeToString(final Node content, final TransformerFactory\n     }\n \n     private static void loadRoutes(\n-        final String domain, final DataSource dataSource, final Resource resource, final AnyTypeKind anyTypeKind) {\n+            final String domain, final DataSource dataSource, final Resource resource, final AnyTypeKind anyTypeKind) {\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n         boolean shouldLoadRoutes = jdbcTemplate.queryForList("},{"sha":"45540d9ffb3ffba681b9731724532e082e4eec43","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/ProvisioningCamelContext.java","status":"modified","additions":8,"deletions":20,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -18,40 +18,28 @@\n  */\n package org.apache.syncope.core.provisioning.camel;\n \n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n \n @ComponentScan(\"org.apache.syncope.core.provisioning.camel\")\n @Configuration\n public class ProvisioningCamelContext {\n \n-    @Value(\"${camel.directory}\")\n-    private String camelDirectory;\n-\n     @Bean\n-    public ResourceWithFallbackLoader userRoutes() {\n-        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n-        routes.setPrimary(\"file:\" + camelDirectory + \"/userRoutes.xml\");\n-        routes.setFallback(\"classpath:userRoutes.xml\");\n-        return routes;\n+    public Resource userRoutes() {\n+        return new ClassPathResource(\"userRoutes.xml\");\n     }\n \n     @Bean\n-    public ResourceWithFallbackLoader groupRoutes() {\n-        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n-        routes.setPrimary(\"file:\" + camelDirectory + \"/groupRoutes.xml\");\n-        routes.setFallback(\"classpath:groupRoutes.xml\");\n-        return routes;\n+    public Resource groupRoutes() {\n+        return new ClassPathResource(\"groupRoutes.xml\");\n     }\n \n     @Bean\n-    public ResourceWithFallbackLoader anyObjectRoutes() {\n-        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n-        routes.setPrimary(\"file:\" + camelDirectory + \"/anyObjectRoutes.xml\");\n-        routes.setFallback(\"classpath:anyObjectRoutes.xml\");\n-        return routes;\n+    public Resource anyObjectRoutes() {\n+        return new ClassPathResource(\"anyObjectRoutes.xml\");\n     }\n }"},{"sha":"79038ad3384d1b453bed979a57ec9d8d6ac92d16","filename":"ext/camel/provisioning-camel/src/main/resources/core-camel.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fcore-camel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fcore-camel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fcore-camel.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+provisioning.userProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelUserProvisioningManager\n+provisioning.groupProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelGroupProvisioningManager\n+provisioning.anyObjectProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelAnyObjectProvisioningManager"},{"sha":"65c9058f3a71a2334e0f9b9ca246a0a7cdb1008a","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,38 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-camel.directory=${conf.directory}\n-\n-asyncConnectorFacadeExecutor.corePoolSize=5\n-asyncConnectorFacadeExecutor.maxPoolSize=25\n-asyncConnectorFacadeExecutor.queueCapacity=100\n-\n-propagationTaskExecutorAsyncExecutor.corePoolSize=5\n-propagationTaskExecutorAsyncExecutor.maxPoolSize=25\n-propagationTaskExecutorAsyncExecutor.queueCapacity=100\n-propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n-\n-userProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelUserProvisioningManager\n-groupProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelAnyObjectProvisioningManager\n-virAttrCache=org.apache.syncope.core.provisioning.java.cache.CaffeineVirAttrCache\n-virAttrCacheSpec=maximumSize=5000,expireAfterAccess=1m\n-notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n-auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n-\n-quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n-quartz.sql=tables_postgres.sql\n-quartz.disableInstance=false"},{"sha":"336098864364f88fa54e3dd1a5159a3d8d37b009","filename":"ext/elasticsearch/persistence-jpa/src/main/resources/core-elasticsearch.properties","status":"renamed","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fcore-elasticsearch.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fcore-elasticsearch.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fcore-elasticsearch.properties?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -14,7 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n \n-useGZIPCompression=true\n+persistence.anySearchDao=org.apache.syncope.core.persistence.jpa.dao.ElasticsearchAnySearchDAO","previous_filename":"docker/sra/src/main/resources/sra.properties"},{"sha":"6cbab3802bf5caa88fcb1ae9c7c2a85a1f5a22fb","filename":"ext/elasticsearch/persistence-jpa/src/main/resources/persistence.properties","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,28 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.ElasticsearchAnySearchDAO\n-any.search.visitor=org.apache.syncope.core.persistence.api.search.SearchCondVisitor\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAnyObjectDAO\n-audit.dao=org.apache.syncope.core.persistence.jpa.dao.JPAAuditConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"6037f05ea9cf0422b077b80e587bf3cfa95c2194","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/Flowable.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -78,15 +78,14 @@ public Flowable(final PageParameters parameters) {\n             protected void populateItem(final Item<UserRequest> item) {\n                 final UserRequest userRequest = item.getModelObject();\n                 item.add(new Accordion(\"userRequestDetails\", Collections.<ITab>singletonList(new AbstractTab(\n-                    new StringResourceModel(\"user.requests.accordion\", container, Model.of(userRequest))) {\n+                        new StringResourceModel(\"user.requests.accordion\", container, Model.of(userRequest))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         // find the form associated to the current request, if any\n-                        return new UserRequestDetails(\n-                            panelId, userRequest, container, notificationPanel, getPageReference());\n+                        return new UserRequestDetails(panelId, userRequest, container, notificationPanel);\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -109,7 +108,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     } catch (Exception e) {\n                         LOG.error(\"Unable to start bpmnProcess [{}]\", bpmnProcessModel.getObject(), e);\n                         SyncopeEnduserSession.get()\n-                            .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n+                                .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n                         notificationPanel.refresh(target);\n                     }\n                     target.add(container);"},{"sha":"42701db2bdce7ac35aad6e0fc86e3fd11e6ed69f","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/panels/UserRequestDetails.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FUserRequestDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f43cea61e4ab570fa3e24197d58227f196b606ce/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FUserRequestDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FUserRequestDetails.java?ref=f43cea61e4ab570fa3e24197d58227f196b606ce","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.ExecStatus;\n import org.apache.syncope.ext.client.common.ui.panels.UserRequestFormPanel;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -52,8 +51,7 @@ public UserRequestDetails(\n             final String id,\n             final UserRequest userRequest,\n             final WebMarkupContainer container,\n-            final NotificationPanel notificationPanel,\n-            final PageReference pageRef) {\n+            final NotificationPanel notificationPanel) {\n \n         super(id);\n \n@@ -70,7 +68,7 @@ public UserRequestDetails(\n         } else {\n             Form<Void> form = new Form<>(\"userRequestWrapForm\");\n \n-            form.add(new UserRequestFormPanel(\"userRequestFormPanel\", pageRef, formTO, false) {\n+            form.add(new UserRequestFormPanel(\"userRequestFormPanel\", formTO, false) {\n \n                 private static final long serialVersionUID = 3617895525072546591L;\n "},{"sha":"c93fefd4d0da12c52dd4f9e45b8e3a9fcad1112f","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.java","status":"removed","additions":0,"deletions":220,"changes":220,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,220 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.ext.client.common.ui.panels;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.math.NumberUtils;\n-import org.apache.commons.lang3.time.FastDateFormat;\n-import org.apache.syncope.client.ui.commons.MapChoiceRenderer;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateTimeFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.common.lib.to.UserRequestForm;\n-import org.apache.syncope.common.lib.to.UserRequestFormProperty;\n-import org.apache.syncope.common.lib.to.UserRequestFormPropertyValue;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.PropertyModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import java.text.ParseException;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-public abstract class UserRequestFormPanel extends Panel {\n-\n-    private static final long serialVersionUID = -8847854414429745216L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(UserRequestFormPanel.class);\n-\n-    public UserRequestFormPanel(final String id, final PageReference pageRef, final UserRequestForm form) {\n-        this(id, pageRef, form, true);\n-    }\n-\n-    public UserRequestFormPanel(final String id, final PageReference pageRef, final UserRequestForm form,\n-            final boolean showDetails) {\n-        super(id);\n-\n-        IModel<List<UserRequestFormProperty>> formProps = new LoadableDetachableModel<>() {\n-\n-            private static final long serialVersionUID = 3169142472626817508L;\n-\n-            @Override\n-            protected List<UserRequestFormProperty> load() {\n-                return form.getProperties();\n-            }\n-        };\n-\n-        ListView<UserRequestFormProperty> propView = new ListView<>(\"propView\", formProps) {\n-\n-            private static final long serialVersionUID = 9101744072914090143L;\n-\n-            @Override\n-            @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n-            protected void populateItem(final ListItem<UserRequestFormProperty> item) {\n-                final UserRequestFormProperty prop = item.getModelObject();\n-\n-                String label = StringUtils.isBlank(prop.getName()) ? prop.getId() : prop.getName();\n-\n-                FieldPanel field;\n-                switch (prop.getType()) {\n-                    case Boolean:\n-                        field = new AjaxDropDownChoicePanel(\"value\", label, new PropertyModel<String>(prop, \"value\") {\n-\n-                            private static final long serialVersionUID = -3743432456095828573L;\n-\n-                            @Override\n-                            public String getObject() {\n-                                return StringUtils.isBlank(prop.getValue())\n-                                    ? null\n-                                    : prop.getValue().equals(\"true\") ? \"Yes\" : \"No\";\n-                            }\n-\n-                            @Override\n-                            public void setObject(final String object) {\n-                                prop.setValue(String.valueOf(object.equalsIgnoreCase(\"yes\")));\n-                            }\n-\n-                        }, false).setChoices(Arrays.asList(new String[]{\"Yes\", \"No\"}));\n-                        break;\n-\n-                    case Date:\n-                        FastDateFormat formatter = FastDateFormat.getInstance(prop.getDatePattern());\n-                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<>(prop, \"value\") {\n-\n-                            private static final long serialVersionUID = -3743432456095828573L;\n-\n-                            @Override\n-                            public Date getObject() {\n-                                try {\n-                                    return StringUtils.isBlank(prop.getValue())\n-                                        ? null\n-                                        : formatter.parse(prop.getValue());\n-                                } catch (ParseException e) {\n-                                    LOG.error(\"Unparsable date: {}\", prop.getValue(), e);\n-                                    return null;\n-                                }\n-                            }\n-\n-                            @Override\n-                            public void setObject(final Date object) {\n-                                prop.setValue(formatter.format(object));\n-                            }\n-\n-                        }, formatter);\n-                        break;\n-\n-                    case Enum:\n-                        field = new AjaxDropDownChoicePanel(\n-                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                            setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n-                                collect(Collectors.toMap(\n-                                    UserRequestFormPropertyValue::getKey,\n-                                    UserRequestFormPropertyValue::getValue)))).\n-                            setChoices(new ArrayList<>(prop.getEnumValues().stream().\n-                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList())));\n-                        break;\n-\n-                    case Dropdown:\n-                        field = new AjaxDropDownChoicePanel(\n-                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                            setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n-                                collect(Collectors.toMap(\n-                                    UserRequestFormPropertyValue::getKey,\n-                                    UserRequestFormPropertyValue::getValue)))).\n-                            setChoices(prop.getDropdownValues().stream().\n-                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n-                        break;\n-\n-                    case Long:\n-                        field = new AjaxSpinnerFieldPanel.Builder<Long>().build(\n-                            \"value\",\n-                            label,\n-                            Long.class,\n-                            new PropertyModel<>(prop, \"value\") {\n-\n-                                private static final long serialVersionUID = -7688359318035249200L;\n-\n-                                @Override\n-                                public Long getObject() {\n-                                    return StringUtils.isBlank(prop.getValue())\n-                                        ? null\n-                                        : NumberUtils.toLong(prop.getValue());\n-                                }\n-\n-                                @Override\n-                                public void setObject(final Long object) {\n-                                    prop.setValue(String.valueOf(object));\n-                                }\n-                            });\n-                        break;\n-\n-                    case Password:\n-                        field = new AjaxPasswordFieldPanel(\"value\", label, new PropertyModel<>(prop, \"value\"), false);\n-                        break;\n-\n-                    case String:\n-                    default:\n-                        field = new AjaxTextFieldPanel(\"value\", label, new PropertyModel<>(prop, \"value\"), false);\n-                        break;\n-                }\n-\n-                field.setReadOnly(!prop.isWritable());\n-                if (prop.isRequired()) {\n-                    field.addRequiredLabel();\n-                }\n-\n-                item.add(field);\n-            }\n-        };\n-\n-        AjaxLink<String> userDetails = new AjaxLink<>(\"userDetails\") {\n-\n-            private static final long serialVersionUID = -4804368561204623354L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                viewDetails(target);\n-            }\n-        };\n-        MetaDataRoleAuthorizationStrategy.authorize(userDetails, ENABLE, IdRepoEntitlement.USER_READ);\n-\n-        boolean enabled = form.getUserTO() != null;\n-        userDetails.setVisible(enabled && showDetails).setEnabled(enabled);\n-\n-        add(propView);\n-        add(userDetails);\n-    }\n-\n-    protected abstract void viewDetails(AjaxRequestTarget target);\n-}"},{"sha":"7a9b26bebe8eef489820c53100553c94c8ad18a5","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.html","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.html?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,32 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div wicket:id=\"propView\">\n-      <span wicket:id=\"value\">[value]</span>\n-    </div>\n-\n-    <div style=\"margin: 20px 0\">\n-      <a href=\"#\" alt=\"user details\" class=\"btn btn-success btn-circle btn-lg\" wicket:id=\"userDetails\" wicket:message=\"title:userDetails\">\n-        <i class=\"fas fa-eye\"></i>\n-      </a>\n-    </div>\n-  </wicket:panel>\n-</html>"},{"sha":"450ff508db4955139864fbf072dcbc182ffe8cdf","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-userDetails=User details\n-userForm=Edit User"},{"sha":"92c475d20e9f23baa636ca3228169e5c214b91e9","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel_it.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca023d8f8c5b72c60c12920a190e03d9b9a98ecb/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel_it.properties?ref=ca023d8f8c5b72c60c12920a190e03d9b9a98ecb","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-userDetails=Dettagli utente\n-userForm=Modifica utente"}]}