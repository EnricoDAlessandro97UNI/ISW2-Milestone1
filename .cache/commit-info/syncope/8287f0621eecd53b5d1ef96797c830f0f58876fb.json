{"sha":"8287f0621eecd53b5d1ef96797c830f0f58876fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgyODdmMDYyMWVlY2Q1M2I1ZDFlZjk2Nzk3YzgzMGYwZjU4ODc2ZmI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-17T16:47:28Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-17T16:47:28Z"},"message":"[SYNCOPE-752] providing console test for users, groups and any objects","tree":{"sha":"29132fb97f833abae9b5baea71801dbd247d4d5d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/29132fb97f833abae9b5baea71801dbd247d4d5d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8287f0621eecd53b5d1ef96797c830f0f58876fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8287f0621eecd53b5d1ef96797c830f0f58876fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8287f0621eecd53b5d1ef96797c830f0f58876fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8287f0621eecd53b5d1ef96797c830f0f58876fb/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"96fd9f55c3ecb04d6727bae018b821f08bc2459d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96fd9f55c3ecb04d6727bae018b821f08bc2459d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96fd9f55c3ecb04d6727bae018b821f08bc2459d"}],"stats":{"total":483,"additions":474,"deletions":9},"files":[{"sha":"52e1ada4860c78e477e46d35cede6c57a118e622","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -57,7 +57,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelAccountLink\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelResetPwd\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n@@ -214,9 +214,9 @@ public String getAjaxIndicatorMarkupId() {\n                 break;\n \n             case MUSTCHANGEPASSWORD:\n-                fragment = new Fragment(\"panelResetPwd\", \"fragmentResetPwd\", this);\n+                fragment = new Fragment(\"panelMustChangePassword\", \"fragmentMustChangePassword\", this);\n \n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetPwdLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"MustChangePasswordLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -813,7 +813,7 @@ public void remove(final ActionLink.ActionType type) {\n                 break;\n \n             case MUSTCHANGEPASSWORD:\n-                super.addOrReplace(new Fragment(\"panelResetPwd\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n                 break;\n \n             case RESET_TIME:"},{"sha":"3450aed7e1cefa2b28346c3e1fca229efa417cab","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -144,7 +144,8 @@ public void setObject(final List<String> object) {\n                     modelObject.getEntitlements().clear();\n                     modelObject.getEntitlements().addAll(object);\n                 }\n-            }, new ListModel<>(new RoleRestClient().getAllAvailableEntitlements())).setOutputMarkupId(true));\n+            }, new ListModel<>(new RoleRestClient().getAllAvailableEntitlements())).\n+                    hideLabel().setOutputMarkupId(true));\n         }\n     }\n \n@@ -162,7 +163,7 @@ public Realms(final RoleTO modelObject) {\n                                 public String transform(final RealmTO input) {\n                                     return input.getFullPath();\n                                 }\n-                            }, new ArrayList<String>()))).setOutputMarkupId(true));\n+                            }, new ArrayList<String>()))).hideLabel().setOutputMarkupId(true));\n         }\n     }\n "},{"sha":"bae38daac387739750efd23ea09f1ebdc16bb4e2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -16,6 +16,7 @@\n # under the License.\n displayRows=Display rows\n \n+mustChangePassword=Must Change Password\n firstname=Firstname\n surname=Surname\n userId=User Id"},{"sha":"77b8ba87fa43fe9b5d5478dd74d34ea2a11aef6d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -16,6 +16,7 @@\n # under the License.\n displayRows=display rows\n \n+mustChangePassword=Deve Cambiare Password\n firstname=Nome\n surname=Cognome\n userId=User Id"},{"sha":"84ecd6de13e8fd8edaa8d199a40e1c14aaac993c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -16,6 +16,7 @@\n # under the License.\n displayRows=Mostrar linhas\n \n+mustChangePassword=Must Change Password\n firstname=Nome\n surname=Sobrenome\n userId=Identificador do Usu\\u00e1rio"},{"sha":"f8a868b636da4213def0397aa26d99656bd66aa6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -26,7 +26,7 @@\n     </style>\n   </wicket:head>\n   <wicket:panel>\n-    <span wicket:id=\"panelResetPwd\">[plus]</span>\n+    <span wicket:id=\"panelMustChangePassword\">[plus]</span>\n     <span wicket:id=\"panelClaim\">[plus]</span>\n     <span wicket:id=\"panelManageResources\">[plus]</span>\n     <span wicket:id=\"panelManageUsers\">[plus]</span>\n@@ -63,8 +63,8 @@\n     <span wicket:id=\"panelZoomIn\">[plus]</span>\n     <span wicket:id=\"panelZoomOut\">[plus]</span>\n \n-    <wicket:fragment wicket:id=\"fragmentResetPwd\">\n-      <a href=\"#\" wicket:id=\"resetPwdLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"reset password icon\" title=\"Reset password\"></i></a>\n+    <wicket:fragment wicket:id=\"fragmentMustChangePassword\">\n+      <a href=\"#\" wicket:id=\"MustChangePasswordLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"must change password icon\" title=\"Force change password\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentClaim\">"},{"sha":"6f877656ad323905bc3a7be72b7dacb2648769ca","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"added","additions":141,"deletions":0,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+import org.apache.wicket.markup.html.form.TextField;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class AnyObjectsITCase extends AbstractConsoleITCase {\n+\n+    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+\n+    private final String searchResultContainer = tabPanel + \"container:content:\";\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+    }\n+\n+    @Test\n+    public void filteredSearch() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\n+                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n+                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+    }\n+\n+    @Test\n+    public void clickToClonePrinter() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+\n+        Component component = findComponentByProp(\"key\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:3:cell:panelClone:cloneLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:cancel\");\n+    }\n+\n+    @Test\n+    public void editPrinter() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+\n+        Component component = findComponentByProp(\"key\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+\n+        wicketTester.assertComponent(tabPanel + \"modal:form:content:form:view:status:resources:firstLevelContainer:\"\n+                + \"first:container:content:group:beans:0:fields:0\", ListItem.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+        \n+        wicketTester.cleanupFeedbackMessages();\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.assertComponent(tabPanel\n+                + \"modal:form:content:customResultBody:resources:firstLevelContainer:first:container:content:\"\n+                + \"group:beans:0:fields:0:field\", Label.class);\n+\n+        wicketTester.clickLink(tabPanel + \"modal:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"key\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n+        assertNotNull(component);\n+    }\n+\n+    @Test\n+    public void checkDeletePrinterLink() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+\n+        Component component = findComponentByProp(\"key\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n+        assertNotNull(component);\n+\n+        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\",\n+                IndicatingOnConfirmAjaxLink.class);\n+    }\n+}"},{"sha":"eddfef4cc73278968ba547d04bd1d027cfbfbb2f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class GroupsITCase extends AbstractConsoleITCase {\n+\n+    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+\n+    private final String searchResultContainer = tabPanel + \"container:content:\";\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+    }\n+\n+    @Test\n+    public void filteredSearch() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\n+                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n+                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+    }\n+\n+    @Test\n+    public void clickToCloneGroup() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n+\n+        wicketTester.assertComponent(tabPanel + \"modal:form:content:form:view:name:textField\", TextField.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:cancel\");\n+    }\n+\n+    @Test\n+    public void editGroup() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+\n+        wicketTester.assertComponent(tabPanel + \"modal:form:content:form:view:name:textField\", TextField.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.assertComponent(tabPanel\n+                + \"modal:form:content:customResultBody:resources:firstLevelContainer:first:container:content:\"\n+                + \"group:beans:0:fields:0:field\", Label.class);\n+\n+        wicketTester.clickLink(tabPanel + \"modal:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n+        assertNotNull(component);\n+\n+    }\n+\n+    @Test\n+    public void checkDeleteGroupLink() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        Component component = findComponentByProp(\"name\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n+        assertNotNull(component);\n+\n+        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n+                IndicatingOnConfirmAjaxLink.class);\n+    }\n+}"},{"sha":"721c5ab777f3a727bf022d7de857c0bf0a31ebc5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"added","additions":167,"deletions":0,"changes":167,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8287f0621eecd53b5d1ef96797c830f0f58876fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=8287f0621eecd53b5d1ef96797c830f0f58876fb","patch":"@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class UsersITCase extends AbstractConsoleITCase {\n+\n+    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+\n+    private final String searchResultContainer = tabPanel + \"container:content:\";\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+    }\n+\n+    @Test\n+    public void filteredSearch() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\n+                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n+                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+    }\n+\n+    @Test\n+    public void forceChangePassword() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath()\n+                + \":cells:6:cell:panelMustChangePassword:MustChangePasswordLink\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+    }\n+\n+    @Test\n+    public void clickToCloneUser() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+\n+        wicketTester.assertComponent(tabPanel + \"modal:form:content:form:view:username:textField\", TextField.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:cancel\");\n+    }\n+\n+    @Test\n+    public void editUser() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+\n+        wicketTester.assertComponent(tabPanel + \"modal:form:content:form:view:username:textField\", TextField.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(tabPanel + \"modal:form:content:form\");\n+        assertNotNull(formTester);\n+        formTester.submit(\"buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.assertComponent(tabPanel\n+                + \"modal:form:content:customResultBody:resources:firstLevelContainer:first:container:content:\"\n+                + \"group:beans:0:fields:1:field\", Label.class);\n+\n+        wicketTester.clickLink(tabPanel + \"modal:form:content:action:panelClose:closeLink\");\n+\n+        component = findComponentByProp(\"username\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n+        assertNotNull(component);\n+    }\n+\n+    @Test\n+    public void checkDeleteUsrLink() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", searchResultContainer\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n+                IndicatingOnConfirmAjaxLink.class);\n+    }\n+}"}]}