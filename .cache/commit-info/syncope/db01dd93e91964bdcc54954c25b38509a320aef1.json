{"sha":"db01dd93e91964bdcc54954c25b38509a320aef1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiMDFkZDkzZTkxOTY0YmRjYzU0OTU0YzI1YjM4NTA5YTMyMGFlZjE=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-14T09:38:34Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-14T09:38:34Z"},"message":"SYNCOPE-459 merged from the branch 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1550915 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a8f4c145807af2349b8ddae80d9bd612a49ea732","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a8f4c145807af2349b8ddae80d9bd612a49ea732"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/db01dd93e91964bdcc54954c25b38509a320aef1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db01dd93e91964bdcc54954c25b38509a320aef1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/db01dd93e91964bdcc54954c25b38509a320aef1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db01dd93e91964bdcc54954c25b38509a320aef1/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8d1188ac339ef367fcf72a28f256aa4566cb7c64","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d1188ac339ef367fcf72a28f256aa4566cb7c64","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d1188ac339ef367fcf72a28f256aa4566cb7c64"},{"sha":"e16d3b9d6209b6081873a85493839447b332f469","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e16d3b9d6209b6081873a85493839447b332f469","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e16d3b9d6209b6081873a85493839447b332f469"}],"stats":{"total":88,"additions":79,"deletions":9},"files":[{"sha":"07c08a67fe8d0b0becf907395681768a485398e9","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -74,7 +74,18 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n                     ? new HashSet<String>(originalAttrs.get(entry.getKey()).getValues())\r\n                     : Collections.<String>emptySet();\r\n \r\n-            if (!updatedValues.equals(originalValues)) {\r\n+            if (!originalAttrs.containsKey(entry.getKey())) {\r\n+                // SYNCOPE-459: take care of user virtual attributes without any value\r\n+                updatedValues.remove(\"\");\r\n+                mod.getValuesToBeAdded().addAll(new ArrayList<String>(updatedValues));\r\n+\r\n+                if (virtuals) {\r\n+                    result.getVirAttrsToUpdate().add(mod);\r\n+                } else {\r\n+                    result.getAttrsToUpdate().add(mod);\r\n+                }\r\n+\r\n+            } else if (!updatedValues.equals(originalValues)) {\r\n                 // avoid unwanted inputs\r\n                 updatedValues.remove(\"\");\r\n                 if (!entry.getValue().isReadonly()) {\r"},{"sha":"717e8b7a8c78932823904794f85e6ad695be5965","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -256,11 +256,21 @@ public UserTO update(final UserMod userMod) {\n \n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n                 getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n+\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            binder.forceVirtualAttributes(\n+                    updated.getResult().getKey().getId(),\n+                    actual.getVirAttrsToRemove(),\n+                    actual.getVirAttrsToUpdate());\n+\n+        } else {\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n+            }\n         }\n \n         final UserTO updatedTO = binder.getUserTO(updated.getResult().getKey().getId());"},{"sha":"63a02d81e7a4510bf909d8e59b8a04604c9ba20a","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -191,7 +191,7 @@ private <T extends AbstractVirSchema> T getVirSchema(final String virSchemaName,\n                 LOG.debug(\"Ignoring invalid virtual schema {}\", virSchemaName);\n             }\n         }\n-        \n+\n         return virtualSchema;\n     }\n "},{"sha":"65043c179dc75d41e145d54291469541b6acc1a1","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -66,7 +66,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class RoleDataBinder extends AbstractAttributableDataBinder {\n \n     @Autowired"},{"sha":"9f4f65b84046ce0bc26dd786faa7c78cc4879bad","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -23,6 +23,7 @@\n import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.MembershipTO;\n@@ -61,7 +62,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n     private static final String[] IGNORE_USER_PROPERTIES = {\n@@ -430,4 +431,24 @@ public UserTO getUserTO(final String username) {\n     public UserTO getUserTO(final Long userId) {\n         return getUserTO(getUserFromId(userId));\n     }\n+\n+    /**\n+     * SYNCOPE-459: force virtual attribute changes.\n+     * <br />\n+     * To be used in case of no propagation task defined.\n+     *\n+     * @param id attributable id\n+     * @param vAttrsToBeRemoved virtual attribute to be removed.\n+     * @param vAttrsToBeUpdated virtyal attribute to be updated.\n+     */\n+    public void forceVirtualAttributes(\n+            final Long id, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated) {\n+        final SyncopeUser syncopeUser = getUserFromId(id);\n+\n+        fillVirtual(\n+                syncopeUser,\n+                vAttrsToBeRemoved,\n+                vAttrsToBeUpdated,\n+                AttributableUtil.getInstance(syncopeUser));\n+    }\n }"},{"sha":"9687e63a3094ef5ac8e974fe6034d15bf0d1bac5","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db01dd93e91964bdcc54954c25b38509a320aef1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=db01dd93e91964bdcc54954c25b38509a320aef1","patch":"@@ -527,4 +527,32 @@ public void issueSYNCOPE453() {\n         roleService.delete(roleTO.getId());\n         // -------------------------------------------\n     }\n+\n+    @Test\n+    public void issueSYNCOPE459() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope459@apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getVirAttrs().clear();\n+\n+        final AttributeTO virtualReadOnly = attributeTO(\"virtualReadOnly\", \"\");\n+        virtualReadOnly.getValues().clear();\n+\n+        userTO.getVirAttrs().add(virtualReadOnly);\n+\n+        userTO = createUser(userTO);\n+\n+        assertNotNull(userTO.getVirAttrMap().get(\"virtualReadOnly\"));\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        AttributeMod virtualdata = new AttributeMod();\n+        virtualdata.setSchema(\"virtualdata\");\n+\n+        userMod.getVirAttrsToUpdate().add(virtualdata);\n+\n+        userTO = updateUser(userMod);\n+        assertNotNull(userTO.getVirAttrMap().get(\"virtualdata\"));\n+    }\n }"}]}