{"sha":"73c7704002f96a8732a34e664049d24e704e88b7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjczYzc3MDQwMDJmOTZhODczMmEzNGU2NjQwNDlkMjRlNzA0ZTg4Yjc=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-05-24T13:39:46Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-05-24T13:40:42Z"},"message":"[SYNCOPE-1091] fixed binary attribute content download","tree":{"sha":"6eac32c59d0ce69ce3f26d2974bd56423101d302","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6eac32c59d0ce69ce3f26d2974bd56423101d302"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/73c7704002f96a8732a34e664049d24e704e88b7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73c7704002f96a8732a34e664049d24e704e88b7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/73c7704002f96a8732a34e664049d24e704e88b7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73c7704002f96a8732a34e664049d24e704e88b7/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"be031e8bd96025a13c2fcf2021eec78a6c95820d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/be031e8bd96025a13c2fcf2021eec78a6c95820d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/be031e8bd96025a13c2fcf2021eec78a6c95820d"}],"stats":{"total":93,"additions":82,"deletions":11},"files":[{"sha":"20a1d25e10ec7fee4e75f5b567f042310b434307","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDownload.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73c7704002f96a8732a34e664049d24e704e88b7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73c7704002f96a8732a34e664049d24e704e88b7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java?ref=73c7704002f96a8732a34e664049d24e704e88b7","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.AbstractAjaxBehavior;\n+import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n+import org.apache.wicket.request.resource.ContentDisposition;\n+\n+public abstract class AjaxDownload extends AbstractAjaxBehavior {\n+\n+    private static final long serialVersionUID = 7203445884857810583L;\n+\n+    private final String name;\n+\n+    private final boolean addAntiCache;\n+\n+    public AjaxDownload(final String name, final boolean addAntiCache) {\n+        super();\n+        this.name = name;\n+        this.addAntiCache = addAntiCache;\n+    }\n+\n+    public void initiate(final AjaxRequestTarget target) {\n+\n+        String url = getCallbackUrl().toString();\n+        if (addAntiCache) {\n+            url = url + (url.contains(\"?\") ? \"&\" : \"?\");\n+            url = url + \"antiCache=\" + System.currentTimeMillis();\n+        }\n+        target.appendJavaScript(\"setTimeout(\\\"window.location.href='\" + url + \"'\\\", 100);\");\n+    }\n+\n+    @Override\n+    public void onRequest() {\n+        HttpResourceStream stream = getResourceStream();\n+        ResourceStreamRequestHandler handler = new ResourceStreamRequestHandler(stream);\n+        handler.setFileName(stream.getFilename() == null ? name : stream.getFilename());\n+        handler.setContentDisposition(ContentDisposition.ATTACHMENT);\n+        getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(handler);\n+    }\n+\n+    protected abstract HttpResourceStream getResourceStream();\n+\n+}"},{"sha":"f60ac2efee9b48114a34f2fc405df7fdacade2da","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":20,"deletions":11,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73c7704002f96a8732a34e664049d24e704e88b7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73c7704002f96a8732a34e664049d24e704e88b7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=73c7704002f96a8732a34e664049d24e704e88b7","patch":"@@ -32,8 +32,8 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.wicket.Component;\n@@ -53,15 +53,13 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.util.ListModel;\n-import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n-import org.apache.wicket.request.resource.ContentDisposition;\n import org.apache.wicket.util.crypt.Base64;\n import org.apache.wicket.util.lang.Bytes;\n \n public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = 6264462604183088931L;\n-    \n+\n     private static final PreviewUtils PREVIEW_UTILS = PreviewUtils.getInstance();\n \n     private final String mimeType;\n@@ -76,6 +74,10 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final BootstrapFileInputField fileUpload;\n \n+    private final AjaxDownload fileDownload;\n+\n+    private final transient PreviewUtils previewUtils = PreviewUtils.getInstance();\n+\n     private final AbstractBinaryPreviewer previewer;\n \n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n@@ -125,20 +127,27 @@ public String build() {\n \n         uploadForm.add(new Label(\"preview\", StringUtils.isBlank(mimeType) ? StringUtils.EMPTY : \"(\" + mimeType + \")\"));\n \n+        fileDownload = new AjaxDownload(name, true) {\n+\n+            private static final long serialVersionUID = 7203445884857810583L;\n+\n+            @Override\n+            protected HttpResourceStream getResourceStream() {\n+                return new HttpResourceStream(buildResponse());\n+            }\n+\n+        };\n+\n+        add(fileDownload);\n+\n         downloadLink = new AjaxLink<Void>(\"downloadLink\") {\n \n             private static final long serialVersionUID = -4331619903296515985L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    HttpResourceStream stream = new HttpResourceStream(buildResponse());\n-\n-                    ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n-                    rsrh.setFileName(stream.getFilename() == null ? name : stream.getFilename());\n-                    rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);\n-\n-                    getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);\n+                    fileDownload.initiate(target);\n                 } catch (Exception e) {\n                     SyncopeConsoleSession.get().error(\n                             StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());"}]}