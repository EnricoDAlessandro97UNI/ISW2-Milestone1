{"sha":"e0d5229a7e9a7535b3dd9013dd4a842b79883e35","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwZDUyMjlhN2U5YTc1MzViM2RkOTAxM2RkNGE4NDJiNzk4ODNlMzU=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-12-27T11:28:03Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-12-27T11:38:58Z"},"message":"[SYNCOPE-1416] fixes searches for unique attributes","tree":{"sha":"f59c99ab5926fd8cbb38ee7ea09556068a52781b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f59c99ab5926fd8cbb38ee7ea09556068a52781b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e0d5229a7e9a7535b3dd9013dd4a842b79883e35","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0d5229a7e9a7535b3dd9013dd4a842b79883e35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0d5229a7e9a7535b3dd9013dd4a842b79883e35","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a31720b593b722b9c81d20758bb55288debf105d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a31720b593b722b9c81d20758bb55288debf105d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a31720b593b722b9c81d20758bb55288debf105d"}],"stats":{"total":74,"additions":58,"deletions":16},"files":[{"sha":"d0b958bcf499dd800ba1f4fb4721ee4aac50c5ba","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=e0d5229a7e9a7535b3dd9013dd4a842b79883e35","patch":"@@ -974,17 +974,21 @@ protected String getQuery(\n         StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \");\n         switch (cond.getType()) {\n             case ISNOTNULL:\n-                query.append(svs.asSearchViewSupport().attr().name).append(\" WHERE schema_id=\").\n-                        append(\"'\").append(checked.getLeft().getKey()).append(\"'\");\n+                query.append(checked.getLeft().isUniqueConstraint()\n+                        ? svs.asSearchViewSupport().uniqueAttr().name\n+                        : svs.asSearchViewSupport().attr().name).\n+                        append(\" WHERE schema_id=\").append(\"'\").append(checked.getLeft().getKey()).append(\"'\");\n                 break;\n \n             case ISNULL:\n                 query.append(svs.field().name).\n                         append(\" WHERE any_id NOT IN \").\n                         append(\"(\").\n                         append(\"SELECT DISTINCT any_id FROM \").\n-                        append(svs.asSearchViewSupport().attr().name).append(\" WHERE schema_id=\").\n-                        append(\"'\").append(checked.getLeft().getKey()).append(\"'\").\n+                        append(checked.getLeft().isUniqueConstraint()\n+                                ? svs.asSearchViewSupport().uniqueAttr().name\n+                                : svs.asSearchViewSupport().attr().name).\n+                        append(\" WHERE schema_id=\").append(\"'\").append(checked.getLeft().getKey()).append(\"'\").\n                         append(\")\");\n                 break;\n "},{"sha":"422328267855a62bb8fc3a18b4b3e446cc451fb0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=e0d5229a7e9a7535b3dd9013dd4a842b79883e35","patch":"@@ -769,6 +769,25 @@ public void issueSYNCOPE1416() {\n         assertEquals(\n                 searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, searchCondition, AnyTypeKind.USER),\n                 users.size());\n+        \n+        // search by attribute with unique constraint\n+        AttributeCond fullnameCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n+        fullnameCond.setSchema(\"fullname\");\n+\n+        SearchCond cond = SearchCond.getLeafCond(fullnameCond);\n+        assertTrue(cond.isValid());\n+\n+        users = searchDAO.search(cond, AnyTypeKind.USER);\n+        assertEquals(5, users.size());\n+        \n+        fullnameCond = new AttributeCond(AttributeCond.Type.ISNULL);\n+        fullnameCond.setSchema(\"fullname\");\n+\n+        cond = SearchCond.getLeafCond(fullnameCond);\n+        assertTrue(cond.isValid());\n+\n+        users = searchDAO.search(cond, AnyTypeKind.USER);\n+        assertTrue(users.isEmpty());\n     }\n \n     @Test"},{"sha":"cc88ad87b4d13307859bf304adf9cdadfd4c7f53","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":31,"deletions":12,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0d5229a7e9a7535b3dd9013dd4a842b79883e35/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=e0d5229a7e9a7535b3dd9013dd4a842b79883e35","patch":"@@ -290,17 +290,6 @@ public void searchByDate() {\n                         and(\"username\").equalTo(\"bellini\").query()).\n                 build());\n         assertEquals(users, issueSYNCOPE1321);\n-\n-        // SYNCOPE-1416 (check the search for attributes of type different from stringvalue)\n-        PagedResult<UserTO> issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n-                realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().\n-                        is(\"loginDate\").lexicalNotBefore(\"2009-05-26T00:00:00+0300\").\n-                        and(\"username\").equalTo(\"rossini\").query()).\n-                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"loginDate\").build()).\n-                build());\n-        assertEquals(1, issueSYNCOPE1416.getSize());\n-        assertEquals(\"rossini\", issueSYNCOPE1416.getResult().get(0).getUsername());\n     }\n \n     @Test\n@@ -557,6 +546,36 @@ public void issueSYNCOPE1304() {\n         assertFalse(groups.getResult().isEmpty());\n     }\n \n+    @Test\n+    public void issueSYNCOPE1416() {\n+        // check the search for attributes of type different from stringvalue\n+        PagedResult<UserTO> issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n+                realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                        is(\"loginDate\").lexicalNotBefore(\"2009-05-26\").\n+                        and(\"username\").equalTo(\"rossini\").query()).\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"loginDate\").build()).\n+                build());\n+        assertEquals(1, issueSYNCOPE1416.getSize());\n+        assertEquals(\"rossini\", issueSYNCOPE1416.getResult().get(0).getUsername());\n+        \n+        // search by attribute with unique constraint\n+        issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n+                realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"fullname\").query()).\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"loginDate\").build()).\n+                build());\n+        // some identities could have been imported by pull tasks executions\n+        assertTrue(issueSYNCOPE1416.getSize() >= 5);\n+        \n+        issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n+                realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().isNull(\"fullname\").query()).\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"loginDate\").build()).\n+                build());\n+        assertEquals(0, issueSYNCOPE1416.getSize());\n+    }\n+    \n     @Test\n     public void issueSYNCOPE1417() {\n         try {\n@@ -588,6 +607,6 @@ public void issueSYNCOPE1419() {\n                                 is(\"loginDate\").notEqualTo(\"2009-05-26\").query()).page(1).size(1).build());\n         assertTrue(unmatching.getSize() > 0);\n \n-        assertEquals(total.getTotalCount(), matching.getTotalCount() + unmatching.getTotalCount());;\n+        assertEquals(total.getTotalCount(), matching.getTotalCount() + unmatching.getTotalCount());\n     }\n }"}]}