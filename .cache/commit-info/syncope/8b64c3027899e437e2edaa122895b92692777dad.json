{"sha":"8b64c3027899e437e2edaa122895b92692777dad","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiNjRjMzAyNzg5OWU0MzdlMmVkYWExMjI4OTViOTI2OTI3NzdkYWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-29T14:34:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-29T14:34:46Z"},"message":"Fixing some minor issues after some tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1415183 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d8862bf137c233936445c8833fd8dee43839cf38","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d8862bf137c233936445c8833fd8dee43839cf38"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8b64c3027899e437e2edaa122895b92692777dad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b64c3027899e437e2edaa122895b92692777dad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b64c3027899e437e2edaa122895b92692777dad","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b64c3027899e437e2edaa122895b92692777dad/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1c913ce710df8b5a73ae1af14df4199b14a71d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a1c913ce710df8b5a73ae1af14df4199b14a71d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a1c913ce710df8b5a73ae1af14df4199b14a71d9"}],"stats":{"total":33,"additions":21,"deletions":12},"files":[{"sha":"ff4a319d8f765a48a59e9c47e8c327bd0b31ec17","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=8b64c3027899e437e2edaa122895b92692777dad","patch":"@@ -53,10 +53,6 @@\n import org.apache.syncope.types.AuditElements.RoleSubCategory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.GrantedAuthority;\n-import org.springframework.security.core.authority.SimpleGrantedAuthority;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Controller;\n import org.springframework.transaction.annotation.Transactional;\n@@ -301,13 +297,7 @@ public RoleTO create(final HttpServletResponse response, @RequestBody final Role\n \n         WorkflowResult<Long> created = rwfAdapter.create(roleTO);\n \n-        // Extend the current authentication context to include the role just created\n-        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n-        List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>(auth.getAuthorities());\n-        authorities.add(new SimpleGrantedAuthority(EntitlementUtil.getEntitlementNameFromRoleId(created.getResult())));\n-        Authentication newAuth = new UsernamePasswordAuthenticationToken(\n-                auth.getPrincipal(), auth.getCredentials(), authorities);\n-        SecurityContextHolder.getContext().setAuthentication(newAuth);\n+        EntitlementUtil.extendAuthContext(created.getResult());\n \n         List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, roleTO.getVirtualAttributes());\n "},{"sha":"03556a9c394a8116926f065cc12619d098379b38","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=8b64c3027899e437e2edaa122895b92692777dad","patch":"@@ -162,7 +162,6 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n \n         // Failures\n         if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n-\n             if (!createdFailed.isEmpty()) {\n                 report.append(\"\\n\\nFailed to create: \");\n                 report.append(SyncResult.reportSetOfSynchronizationResult(createdFailed, syncTraceLevel));"},{"sha":"71eaab4c49f23007bcf0b3f6656cc2e5cf133e2c","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHandler.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java?ref=8b64c3027899e437e2edaa122895b92692777dad","patch":"@@ -427,6 +427,8 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                 if (AttributableType.ROLE == attrUtil.getType()) {\n                     WorkflowResult<Long> created = rwfAdapter.create((RoleTO) subjectTO);\n \n+                    EntitlementUtil.extendAuthContext(created.getResult());\n+\n                     List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n                             subjectTO.getVirtualAttributes(), Collections.singleton(syncTask.getResource().getName()));\n "},{"sha":"373b45794cd87b09b374bd82b1f95c1a6bb2a297","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b64c3027899e437e2edaa122895b92692777dad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=8b64c3027899e437e2edaa122895b92692777dad","patch":"@@ -18,14 +18,18 @@\n  */\n package org.apache.syncope.core.util;\n \n+import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import java.util.regex.Pattern;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n \n@@ -101,6 +105,20 @@ public static Set<Long> getRoleIds(final List<Entitlement> entitlements) {\n         return getRoleIds(names);\n     }\n \n+    /**\n+     * Extend the current authentication context to include the given role.\n+     * \n+     * @param roleId role id\n+     */\n+    public static void extendAuthContext(final Long roleId) {\n+        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n+        List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>(auth.getAuthorities());\n+        authorities.add(new SimpleGrantedAuthority(EntitlementUtil.getEntitlementNameFromRoleId(roleId)));\n+        Authentication newAuth = new UsernamePasswordAuthenticationToken(\n+                auth.getPrincipal(), auth.getCredentials(), authorities);\n+        SecurityContextHolder.getContext().setAuthentication(newAuth);\n+    }\n+\n     /**\n      * Private default constructor, for static-only classes.\n      */"}]}