{"sha":"3d7405db84e40dc15a4e65d95667cf6075b1056d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkNzQwNWRiODRlNDBkYzE1YTRlNjVkOTU2NjdjZjYwNzViMTA1NmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-22T15:17:29Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-31T13:37:54Z"},"message":"[SYNCOPE-1041] SAML 2.0 SP extension: console management","tree":{"sha":"93ad8962cc92bee986455cc75f0f35a09bd02583","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/93ad8962cc92bee986455cc75f0f35a09bd02583"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3d7405db84e40dc15a4e65d95667cf6075b1056d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d7405db84e40dc15a4e65d95667cf6075b1056d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d7405db84e40dc15a4e65d95667cf6075b1056d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d7405db84e40dc15a4e65d95667cf6075b1056d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"00a19145bd3980df01f38b848747153e18ffa78e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/00a19145bd3980df01f38b848747153e18ffa78e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/00a19145bd3980df01f38b848747153e18ffa78e"}],"stats":{"total":2603,"additions":2011,"deletions":592},"files":[{"sha":"e93489be3585d1d7344cab80fe5d94dd5299e52a","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ConnIdSpecialName.java","status":"renamed","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnIdSpecialName.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n-public final class ConnIdSpecialAttributeName {\n+public final class ConnIdSpecialName {\n \n     public static final String ENABLE = \"__ENABLE__\";\n \n@@ -28,7 +28,11 @@ public final class ConnIdSpecialAttributeName {\n \n     public static final String PASSWORD = \"__PASSWORD__\";\n \n-    private ConnIdSpecialAttributeName() {\n+    public static final String ACCOUNT = \"__ACCOUNT__\";\n+\n+    public static final String GROUP = \"__GROUP__\";\n+\n+    private ConnIdSpecialName() {\n         // private constructor for static utility class\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ConnIdSpecialAttributeName.java"},{"sha":"baf5b9bcb45fcca491168981df737e8acb31ce40","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -25,7 +25,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.LabelPanel;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n@@ -115,7 +115,7 @@ public StatusBean getStatusBean(\n     private Boolean isEnabled(final ConnObjectTO objectTO) {\n         final Map<String, AttrTO> attributeTOs = objectTO.getAttrMap();\n \n-        final AttrTO status = attributeTOs.get(ConnIdSpecialAttributeName.ENABLE);\n+        final AttrTO status = attributeTOs.get(ConnIdSpecialName.ENABLE);\n \n         return status != null && status.getValues() != null && !status.getValues().isEmpty()\n                 ? Boolean.valueOf(status.getValues().get(0))\n@@ -127,7 +127,7 @@ private String getConnObjectLink(final ConnObjectTO objectTO) {\n                 ? Collections.<String, AttrTO>emptyMap()\n                 : objectTO.getAttrMap();\n \n-        final AttrTO name = attributeTOs.get(ConnIdSpecialAttributeName.NAME);\n+        final AttrTO name = attributeTOs.get(ConnIdSpecialName.NAME);\n \n         return name != null && name.getValues() != null && !name.getValues().isEmpty()\n                 ? name.getValues().get(0)"},{"sha":"54a6a2907b3be3a2b81632b69254a0d1885632c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -347,7 +348,9 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n \n                 BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n                 link.add(new Label(\"extPageLabel\", ann.label()));\n-                MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, ann.listEntitlement());\n+                if (StringUtils.isNotBlank(ann.listEntitlement())) {\n+                    MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, ann.listEntitlement());\n+                }\n                 containingLI.add(link);\n \n                 Label extPageIcon = new Label(\"extPageIcon\");"},{"sha":"60daaf771c1e67fe2bc734fb663b4e2e18d9a4e8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -25,7 +25,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.panels.ListViewPanel.ListViewReload;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPanel;\n@@ -94,10 +94,9 @@ public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObje\n             }\n         }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT).\n                 setItems(listOfItems).\n-                includes(\n-                        ConnIdSpecialAttributeName.UID,\n-                        ConnIdSpecialAttributeName.NAME,\n-                        ConnIdSpecialAttributeName.ENABLE).\n+                includes(ConnIdSpecialName.UID,\n+                        ConnIdSpecialName.NAME,\n+                        ConnIdSpecialName.ENABLE).\n                 withChecks(ListViewPanel.CheckAvailability.NONE).\n                 setReuseItem(false);\n \n@@ -132,12 +131,11 @@ private List<ConnObjectTO> reloadItems(\n             final String anyType,\n             final String cookie) {\n \n-        final Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().listConnObjects(\n-                resource,\n+        final Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().listConnObjects(resource,\n                 anyType,\n                 SIZE,\n                 cookie,\n-                new SortParam<String>(ConnIdSpecialAttributeName.UID, true));\n+                new SortParam<String>(ConnIdSpecialName.UID, true));\n \n         nextPageCookie = items.getLeft();\n         return items.getRight();"},{"sha":"4422b51d9e8d160f1e1dc0542608a26deaa7c460","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -32,7 +32,7 @@\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.commons.AnyTypeComparator;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.ITabComponent;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n@@ -215,11 +215,10 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                     ConnObjectTO afterObj = bean.getAfterObj();\n                     String remoteId = afterObj == null\n                             || MapUtils.isEmpty(afterObj.getAttrMap())\n-                            || !afterObj.getAttrMap().containsKey(ConnIdSpecialAttributeName.NAME)\n-                            || CollectionUtils.isEmpty(\n-                                    afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n+                            || !afterObj.getAttrMap().containsKey(ConnIdSpecialName.NAME)\n+                            || CollectionUtils.isEmpty(afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues())\n                             ? StringUtils.EMPTY\n-                            : afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n+                            : afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues().\n                             iterator().next();\n \n                     return new Label(\"field\", remoteId);"},{"sha":"403938ecf073637ab04994474079e256d745a453","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -142,7 +142,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n                         ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n \n-                            private static final long serialVersionUID = 1L;\n+                            private static final long serialVersionUID = -7514498203393023415L;\n \n                             @Override\n                             protected Panel getDirectoryPanel(final String id) {"},{"sha":"9e7d7a098b27c002cc03a4a47adcbfcefb3305b5","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/AccountPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -45,8 +45,7 @@ public class AccountPolicyDirectoryPanel extends PolicyDirectoryPanel<AccountPol\n     public AccountPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, PolicyType.ACCOUNT, pageRef);\n \n-        this.addNewItemPanelBuilder(new PolicyModalPanelBuilder<>(\n-                new AccountPolicyTO(), modal, pageRef), true);\n+        this.addNewItemPanelBuilder(new PolicyModalPanelBuilder<>(new AccountPolicyTO(), modal, pageRef), true);\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.POLICY_CREATE);\n \n         initResultTable();"},{"sha":"05f123f564e295f135632186b5b731e9c7b6af4c","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -100,48 +100,47 @@ public Profile(final T policyTO, final BaseModal<T> modal, final PageReference p\n \n             this.policyTO = policyTO;\n \n-            final List<Component> components = new ArrayList<>();\n+            final List<Component> fields = new ArrayList<>();\n \n-            FieldPanel<String> description = \n-                new AjaxTextFieldPanel(\"field\", \"description\", \n-                                       new PropertyModel<String>(policyTO, \"description\"), false);\n+            FieldPanel<String> description = new AjaxTextFieldPanel(\"field\", \"description\",\n+                    new PropertyModel<String>(policyTO, \"description\"), false);\n             description.setRequired(true);\n-            components.add(description);\n+            fields.add(description);\n \n             if (policyTO instanceof AccountPolicyTO) {\n-                components.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n+                fields.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n                         \"field\",\n                         \"maxAuthenticationAttempts\",\n                         Integer.class,\n                         new PropertyModel<Integer>(policyTO, \"maxAuthenticationAttempts\")));\n \n-                components.add(new AjaxCheckBoxPanel(\n+                fields.add(new AjaxCheckBoxPanel(\n                         \"field\",\n                         \"propagateSuspension\",\n                         new PropertyModel<Boolean>(policyTO, \"propagateSuspension\"),\n                         false));\n \n-                components.add(new AjaxPalettePanel.Builder<String>().setName(\"passthroughResources\").build(\n+                fields.add(new AjaxPalettePanel.Builder<String>().setName(\"passthroughResources\").build(\n                         \"field\",\n                         new PropertyModel<List<String>>(policyTO, \"passthroughResources\"),\n                         new ListModel<String>(resources.getObject())));\n             }\n \n             if (policyTO instanceof PasswordPolicyTO) {\n-                components.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n+                fields.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n                         \"field\",\n                         \"historyLength\",\n                         Integer.class,\n                         new PropertyModel<Integer>(policyTO, \"historyLength\")));\n \n-                components.add(new AjaxCheckBoxPanel(\n+                fields.add(new AjaxCheckBoxPanel(\n                         \"field\",\n                         \"allowNullPassword\",\n                         new PropertyModel<Boolean>(policyTO, \"allowNullPassword\"),\n                         false));\n             }\n \n-            add(new ListView<Component>(\"fields\", components) {\n+            add(new ListView<Component>(\"fields\", fields) {\n \n                 private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"7efb694d90fac7ea1714bd0fa5af49fa20991c47","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/JsonEditorPanel.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -32,17 +32,22 @@ public class JsonEditorPanel extends AbstractModalPanel<String> {\n \n     private final IModel<String> content;\n \n+    private final boolean readOnly;\n+\n     public JsonEditorPanel(final IModel<String> content) {\n-        this(null, content, null);\n+        this(null, content, false, null);\n     }\n \n     public JsonEditorPanel(\n             final BaseModal<String> modal,\n             final IModel<String> content,\n+            final boolean readOnly,\n             final PageReference pageRef) {\n+\n         super(modal, pageRef);\n         this.content = content;\n-        final TextArea<String> jsonEditorInfoDefArea = new TextArea<>(\"jsonEditorInfo\", this.content);\n+        this.readOnly = readOnly;\n+        TextArea<String> jsonEditorInfoDefArea = new TextArea<>(\"jsonEditorInfo\", this.content);\n         jsonEditorInfoDefArea.setMarkupId(\"jsonEditorInfo\").setOutputMarkupPlaceholderTag(true);\n         add(jsonEditorInfoDefArea);\n     }\n@@ -52,6 +57,7 @@ public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n         response.render(OnLoadHeaderItem.forScript(\n                 \"CodeMirror.fromTextArea(document.getElementById('jsonEditorInfo'), {\"\n+                + \"  readOnly: \" + readOnly + \", \"\n                 + \"  lineNumbers: true, \"\n                 + \"  lineWrapping: true, \"\n                 + \"  matchBrackets: true,\""},{"sha":"7a5e6ce9f1c7512e15ad397bd83a4d0a6818edb8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MappingPurposePanel.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -103,31 +103,31 @@ public void onClick(final AjaxRequestTarget target) {\n     private void setOpacity(final MappingPurpose mappingPurpose) {\n         switch (mappingPurpose) {\n             case PROPAGATION:\n-                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 1;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n                 break;\n \n             case PULL:\n-                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n                 break;\n \n             case BOTH:\n-                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n                 break;\n \n             case NONE:\n-                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n-                pull.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n-                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 1;\")));\n+                pull.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0.3;\")));\n                 break;\n \n             default:"},{"sha":"424964157f39ddf63d209ae5b6eb11fe18ab1f86","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/XMLEditorPanel.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.IModel;\n+\n+public class XMLEditorPanel extends AbstractModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = -5110368813584745668L;\n+\n+    private final IModel<String> content;\n+\n+    private final boolean readOnly;\n+\n+    public XMLEditorPanel(final IModel<String> content) {\n+        this(null, content, false, null);\n+    }\n+\n+    public XMLEditorPanel(\n+            final BaseModal<Serializable> modal,\n+            final IModel<String> content,\n+            final boolean readOnly,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.content = content;\n+        this.readOnly = readOnly;\n+        final TextArea<String> xmlEditorInfoDefArea = new TextArea<>(\"xmlEditorInfo\", this.content);\n+        xmlEditorInfoDefArea.setMarkupId(\"xmlEditorInfo\").setOutputMarkupPlaceholderTag(true);\n+        add(xmlEditorInfoDefArea);\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(OnLoadHeaderItem.forScript(\n+                \"CodeMirror.fromTextArea(document.getElementById('xmlEditorInfo'), {\"\n+                + \"  readOnly: \" + readOnly + \", \"\n+                + \"  lineNumbers: true, \"\n+                + \"  lineWrapping: true, \"\n+                + \"  autoCloseTags: true, \"\n+                + \"  mode: 'text/html', \"\n+                + \"  autoRefresh: true\"\n+                + \"}).on('change', updateTextArea);\"));\n+    }\n+\n+    @Override\n+    public IModel<String> getItem() {\n+        return content;\n+    }\n+}"},{"sha":"382250d7413bb1216e1e5f05a47d0617c4601b6b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractMappingPanel.java","status":"added","additions":464,"deletions":0,"changes":464,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,464 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverConfig;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.commons.lang3.ClassUtils;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n+import org.apache.syncope.client.console.widgets.JEXLTransformerWidget;\n+import org.apache.syncope.client.console.widgets.MappingItemTransformerWidget;\n+import org.apache.syncope.client.console.wizards.resources.JEXLTransformersTogglePanel;\n+import org.apache.syncope.client.console.wizards.resources.MappingItemTransformersTogglePanel;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class AbstractMappingPanel extends Panel {\n+\n+    private static final long serialVersionUID = -8295587900937040104L;\n+\n+    protected static final Set<String> USER_FIELD_NAMES = new HashSet<>();\n+\n+    protected static final Set<String> GROUP_FIELD_NAMES = new HashSet<>();\n+\n+    protected static final Set<String> ANY_OBJECT_FIELD_NAMES = new HashSet<>();\n+\n+    static {\n+        initFieldNames(UserTO.class, USER_FIELD_NAMES);\n+        initFieldNames(GroupTO.class, GROUP_FIELD_NAMES);\n+        initFieldNames(AnyObjectTO.class, ANY_OBJECT_FIELD_NAMES);\n+    }\n+\n+    private static void initFieldNames(final Class<?> entityClass, final Set<String> keys) {\n+        List<Class<?>> classes = ClassUtils.getAllSuperclasses(entityClass);\n+        classes.add(entityClass);\n+        for (Class<?> clazz : classes) {\n+            for (Field field : clazz.getDeclaredFields()) {\n+                if (!Modifier.isStatic(field.getModifiers())\n+                        && !Collection.class.isAssignableFrom(field.getType())\n+                        && !Map.class.isAssignableFrom(field.getType())) {\n+\n+                    keys.add(field.getName());\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Any type rest client.\n+     */\n+    protected final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n+    /**\n+     * Any type class rest client.\n+     */\n+    protected final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n+\n+    protected final Label passwordLabel;\n+\n+    protected final Label purposeLabel;\n+\n+    /**\n+     * Add mapping button.\n+     */\n+    protected final AjaxButton addMappingBtn;\n+\n+    /**\n+     * All mappings.\n+     */\n+    protected final ListView<MappingItemTO> mappings;\n+\n+    /**\n+     * Mapping container.\n+     */\n+    protected final WebMarkupContainer mappingContainer;\n+\n+    protected final IModel<List<MappingItemTO>> model;\n+\n+    public AbstractMappingPanel(\n+            final String id,\n+            final MappingItemTransformersTogglePanel mapItemTransformers,\n+            final JEXLTransformersTogglePanel jexlTransformers,\n+            final IModel<List<MappingItemTO>> model,\n+            final boolean addMappingBtnVisible,\n+            final boolean hidePurpose,\n+            final MappingPurpose defaultPurpose) {\n+\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        this.model = model;\n+\n+        mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n+        mappingContainer.setOutputMarkupId(true);\n+        add(mappingContainer);\n+\n+        passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n+        mappingContainer.add(passwordLabel);\n+\n+        purposeLabel = new Label(\"purposeLabel\", new ResourceModel(\"purpose\"));\n+        mappingContainer.add(purposeLabel);\n+\n+        mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n+                Model.<String>of(),\n+                Model.of(getString(\"intAttrNameInfo.help\")\n+                        + \"<div style=\\\"font-size: 10px;\\\">\"\n+                        + \"<code>groups[groupName].attribute</code>\\n\"\n+                        + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n+                        + \"<code>memberships[groupName].attribute</code>\\n\"\n+                        + \"</div>\"),\n+                new PopoverConfig().withHtml(true).withPlacement(TooltipConfig.Placement.bottom)) {\n+\n+            private static final long serialVersionUID = -7867802555691605021L;\n+\n+            @Override\n+            protected String createRelAttribute() {\n+                return \"intAttrNameInfo\";\n+            }\n+        }));\n+\n+        mappingContainer.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n+\n+        Collections.sort(model.getObject(), new Comparator<MappingItemTO>() {\n+\n+            @Override\n+            public int compare(final MappingItemTO left, final MappingItemTO right) {\n+                int compared;\n+                if (left == null && right == null) {\n+                    compared = 0;\n+                } else if (left == null) {\n+                    compared = 1;\n+                } else if (right == null) {\n+                    compared = -1;\n+                } else if (left.isConnObjectKey()) {\n+                    compared = -1;\n+                } else if (right.isConnObjectKey()) {\n+                    compared = 1;\n+                } else if (left.isPassword()) {\n+                    compared = -1;\n+                } else if (right.isPassword()) {\n+                    compared = 1;\n+                } else if (left.getPurpose() == MappingPurpose.BOTH && right.getPurpose() != MappingPurpose.BOTH) {\n+                    compared = -1;\n+                } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n+                    compared = 1;\n+                } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n+                        && (right.getPurpose() == MappingPurpose.PULL\n+                        || right.getPurpose() == MappingPurpose.NONE)) {\n+                    compared = -1;\n+                } else if (left.getPurpose() == MappingPurpose.PULL\n+                        && right.getPurpose() == MappingPurpose.PROPAGATION) {\n+                    compared = 1;\n+                } else if (left.getPurpose() == MappingPurpose.PULL\n+                        && right.getPurpose() == MappingPurpose.NONE) {\n+                    compared = -1;\n+                } else if (left.getPurpose() == MappingPurpose.NONE\n+                        && right.getPurpose() != MappingPurpose.NONE) {\n+                    compared = 1;\n+                } else {\n+                    compared = left.getIntAttrName().compareTo(right.getIntAttrName());\n+                }\n+                return compared;\n+            }\n+        });\n+\n+        mappings = new ListView<MappingItemTO>(\"mappings\", model.getObject()) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<MappingItemTO> item) {\n+                final MappingItemTO mapItem = item.getModelObject();\n+                if (mapItem.getPurpose() == null) {\n+                    mapItem.setPurpose(defaultPurpose);\n+                }\n+\n+                //--------------------------------\n+                // Internal attribute\n+                // -------------------------------\n+                AjaxTextFieldPanel intAttrName = new AjaxTextFieldPanel(\n+                        \"intAttrName\",\n+                        getString(\"intAttrName\"),\n+                        new PropertyModel<String>(mapItem, \"intAttrName\"),\n+                        false);\n+                intAttrName.setChoices(Collections.<String>emptyList());\n+                intAttrName.setRequired(true).hideLabel();\n+                item.add(intAttrName);\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // External attribute\n+                // -------------------------------\n+                final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n+                        \"extAttrName\",\n+                        getString(\"extAttrName\"),\n+                        new PropertyModel<String>(mapItem, \"extAttrName\"));\n+                extAttrName.setChoices(getExtAttrNames().getObject());\n+\n+                boolean required = !mapItem.isPassword();\n+                extAttrName.setRequired(required).hideLabel();\n+                extAttrName.setEnabled(required);\n+                item.add(extAttrName);\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // JEXL transformers\n+                // -------------------------------\n+                item.add(new JEXLTransformerWidget(\n+                        \"jexlTransformers\", mapItem, jexlTransformers).setRenderBodyOnly(true));\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Mapping item transformers\n+                // -------------------------------\n+                item.add(new MappingItemTransformerWidget(\n+                        \"mappingItemTransformers\", mapItem, mapItemTransformers).setRenderBodyOnly(true));\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Mandatory\n+                // -------------------------------\n+                final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\n+                        \"mandatoryCondition\",\n+                        new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n+                        new PropertyModel<String>(mapItem, \"mandatoryCondition\"));\n+                mandatory.hideLabel();\n+                mandatory.setChoices(Arrays.asList(new String[] { \"true\", \"false\" }));\n+                mandatory.setEnabled(!mapItem.isConnObjectKey());\n+                item.add(mandatory);\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Connector object key\n+                // -------------------------------\n+                final AjaxCheckBoxPanel connObjectKey = new AjaxCheckBoxPanel(\n+                        \"connObjectKey\",\n+                        new ResourceModel(\"connObjectKey\", \"connObjectKey\").getObject(),\n+                        new PropertyModel<Boolean>(mapItem, \"connObjectKey\"), false);\n+                connObjectKey.hideLabel();\n+                item.add(connObjectKey);\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Password\n+                // -------------------------------\n+                final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\n+                        \"password\",\n+                        new ResourceModel(\"password\", \"password\").getObject(),\n+                        new PropertyModel<Boolean>(mapItem, \"password\"), false);\n+                item.add(password.hideLabel());\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Purpose\n+                // -------------------------------\n+                WebMarkupContainer purpose = new WebMarkupContainer(\"purpose\");\n+                purpose.setOutputMarkupId(Boolean.TRUE);\n+\n+                final MappingPurposePanel purposeActions = new MappingPurposePanel(\n+                        \"purposeActions\", new PropertyModel<MappingPurpose>(mapItem, \"purpose\"), purpose);\n+                purpose.add(purposeActions.setRenderBodyOnly(true));\n+                item.add(purpose);\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Remove\n+                // -------------------------------\n+                final ActionLinksPanel.Builder<Serializable> actions = ActionLinksPanel.builder();\n+                actions.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        int index = -1;\n+                        for (int i = 0; i < model.getObject().size() && index == -1; i++) {\n+                            if (mapItem.equals(model.getObject().get(i))) {\n+                                index = i;\n+                            }\n+                        }\n+\n+                        if (index != -1) {\n+                            model.getObject().remove(index);\n+                            item.getParent().removeAll();\n+                            target.add(AbstractMappingPanel.this);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_UPDATE);\n+                item.add(actions.build(\"toRemove\"));\n+                // -------------------------------\n+\n+                intAttrName.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                    }\n+                });\n+\n+                connObjectKey.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        if (connObjectKey.getModelObject()) {\n+                            mapItem.setMandatoryCondition(\"true\");\n+                            mandatory.setModelObject(\"true\");\n+                            mandatory.setEnabled(false);\n+                        } else {\n+                            mapItem.setMandatoryCondition(\"false\");\n+                            mandatory.setModelObject(\"false\");\n+                            mandatory.setEnabled(true);\n+                        }\n+                        target.add(mandatory);\n+                    }\n+                });\n+\n+                password.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        extAttrName.setEnabled(!password.getModelObject());\n+                        extAttrName.setModelObject(password.getModelObject()\n+                                ? ConnIdSpecialName.PASSWORD : extAttrName.getModelObject());\n+                        extAttrName.setRequired(!password.getModelObject());\n+                        target.add(extAttrName);\n+\n+                        setConnObjectKey(connObjectKey, password);\n+                        target.add(connObjectKey);\n+                    }\n+                });\n+\n+                setConnObjectKey(connObjectKey, password);\n+                setAttrNames(intAttrName);\n+\n+                if (hidePassword()) {\n+                    password.setVisible(false);\n+\n+                    // Changes required by clone ....\n+                    extAttrName.setEnabled(true);\n+                    if (mapItem.isPassword()) {\n+                        // re-enable if and only if cloned object mapping item was a password\n+                        intAttrName.setEnabled(true);\n+                    }\n+                    mapItem.setPassword(false);\n+                }\n+\n+                if (hidePurpose) {\n+                    purpose.setVisible(false);\n+                }\n+            }\n+        };\n+\n+        mappings.setReuseItems(true);\n+        mappingContainer.add(mappings);\n+\n+        addMappingBtn = new IndicatingAjaxButton(\"addMappingBtn\", new ResourceModel(\"add\")) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                model.getObject().add(new MappingItemTO());\n+                target.add(AbstractMappingPanel.this);\n+            }\n+        };\n+        addMappingBtn.setDefaultFormProcessing(false);\n+        addMappingBtn.setEnabled(addMappingBtnVisible);\n+        mappingContainer.add(addMappingBtn);\n+\n+    }\n+\n+    protected boolean hidePassword() {\n+        return true;\n+    }\n+\n+    protected abstract IModel<List<String>> getExtAttrNames();\n+\n+    /**\n+     * Set attribute names for a drop down choice list.\n+     *\n+     * @param toBeUpdated drop down choice to be updated.\n+     */\n+    protected abstract void setAttrNames(AjaxTextFieldPanel toBeUpdated);\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+        passwordLabel.setVisible(false);\n+        purposeLabel.setVisible(true);\n+    }\n+\n+    /**\n+     * Enable/Disable connObjectKey checkbox.\n+     *\n+     * @param connObjectKey connObjectKey checkbox.\n+     * @param password password checkbox.\n+     */\n+    private void setConnObjectKey(final AjaxCheckBoxPanel connObjectKey, final AjaxCheckBoxPanel password) {\n+        if (password.getModelObject()) {\n+            connObjectKey.setReadOnly(true);\n+            connObjectKey.setModelObject(false);\n+        } else {\n+            connObjectKey.setReadOnly(false);\n+        }\n+    }\n+}"},{"sha":"7d3f6123aef12e97e40410af380ba4c8aee9730e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -26,7 +26,7 @@\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -155,7 +155,7 @@ private Panel getValuePanel(final String id, final String schemaName, final Attr\n             field = new AjaxTextFieldPanel(id, schemaName, new Model<String>());\n         } else if (CollectionUtils.isEmpty(attrTO.getValues())) {\n             field = new AjaxTextFieldPanel(id, schemaName, new Model<String>());\n-        } else if (ConnIdSpecialAttributeName.PASSWORD.equals(schemaName)) {\n+        } else if (ConnIdSpecialName.PASSWORD.equals(schemaName)) {\n             field = new AjaxTextFieldPanel(id, schemaName, new Model<>(\"********\"));\n         } else if (attrTO.getValues().size() == 1) {\n             field = new AjaxTextFieldPanel(id, schemaName, new Model<>(attrTO.getValues().get(0)));"},{"sha":"704501330472e051f5d0dceed093c9f8f894c98e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":26,"deletions":27,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -26,6 +26,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ProvisionAuxClassesPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n@@ -37,6 +38,7 @@\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -53,7 +55,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class ProvisionWizardBuilder extends AjaxWizardBuilder<ProvisionTO> implements Serializable {\n+public class ProvisionWizardBuilder extends AjaxWizardBuilder<ProvisionTO> {\n \n     private static final long serialVersionUID = 3739399543837732640L;\n \n@@ -98,10 +100,6 @@ private final class ObjectType extends WizardStep {\n \n         private static final long serialVersionUID = -1657800545799468278L;\n \n-        private static final String ACCOUNT = \"__ACCOUNT__\";\n-\n-        private static final String GROUP = \"__GROUP__\";\n-\n         ObjectType(final ProvisionTO item) {\n             super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n                     new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<>(item));\n@@ -128,10 +126,10 @@ private final class ObjectType extends WizardStep {\n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     if (AnyTypeKind.USER.name().equals(type.getModelObject())) {\n-                        clazz.setModelObject(ACCOUNT);\n+                        clazz.setModelObject(ConnIdSpecialName.ACCOUNT);\n                         target.add(container);\n                     } else if (AnyTypeKind.GROUP.name().equals(type.getModelObject())) {\n-                        clazz.setModelObject(GROUP);\n+                        clazz.setModelObject(ConnIdSpecialName.GROUP);\n                         target.add(container);\n                     }\n                 }\n@@ -161,8 +159,8 @@ private static final class Mapping extends WizardStep {\n         private static final long serialVersionUID = 3454904947720856253L;\n \n         Mapping(final ProvisionTO item) {\n-            setTitleModel(new ResourceModel(\"mapping.title\"));\n-            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<>(item)));\n+            setTitleModel(Model.of(\"Mapping\"));\n+            setSummaryModel(Model.of(StringUtils.EMPTY));\n         }\n     }\n \n@@ -242,11 +240,14 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n         Mapping mapping = new Mapping(modelObject);\n         mapping.setOutputMarkupId(true);\n \n-        MappingItemTransformersTogglePanel mapItemTransformers\n-                = new MappingItemTransformersTogglePanel(mapping, pageRef);\n+        MappingItemTransformersTogglePanel mapItemTransformers =\n+                new MappingItemTransformersTogglePanel(mapping, pageRef);\n         addOuterObject(mapItemTransformers);\n         JEXLTransformersTogglePanel jexlTransformers = new JEXLTransformersTogglePanel(mapping, pageRef);\n         addOuterObject(jexlTransformers);\n+        if (modelObject.getMapping() == null) {\n+            modelObject.setMapping(new MappingTO());\n+        }\n         mapping.add(new ResourceMappingPanel(\n                 \"mapping\", resourceTO, modelObject, mapItemTransformers, jexlTransformers));\n \n@@ -260,23 +261,21 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n     protected Serializable onApplyInternal(final ProvisionTO modelObject) {\n         final List<ProvisionTO> provisions;\n         if (modelObject.getKey() == null) {\n-            provisions\n-                    = ListUtils.select(this.resourceTO.getProvisions(), new Predicate<ProvisionTO>() {\n-\n-                        @Override\n-                        public boolean evaluate(final ProvisionTO object) {\n-                            return !modelObject.getAnyType().equals(object.getAnyType());\n-                        }\n-                    });\n+            provisions = ListUtils.select(this.resourceTO.getProvisions(), new Predicate<ProvisionTO>() {\n+\n+                @Override\n+                public boolean evaluate(final ProvisionTO object) {\n+                    return !modelObject.getAnyType().equals(object.getAnyType());\n+                }\n+            });\n         } else {\n-            provisions\n-                    = ListUtils.select(this.resourceTO.getProvisions(), new Predicate<ProvisionTO>() {\n-\n-                        @Override\n-                        public boolean evaluate(final ProvisionTO object) {\n-                            return !modelObject.getKey().equals(object.getKey());\n-                        }\n-                    });\n+            provisions = ListUtils.select(this.resourceTO.getProvisions(), new Predicate<ProvisionTO>() {\n+\n+                @Override\n+                public boolean evaluate(final ProvisionTO object) {\n+                    return !modelObject.getKey().equals(object.getKey());\n+                }\n+            });\n         }\n         provisions.add(modelObject);\n         this.resourceTO.getProvisions().clear();"},{"sha":"ee13453c1c1c459c04778be5c0f93aa825a68d48","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":25,"deletions":397,"changes":422,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -18,126 +18,36 @@\n  */\n package org.apache.syncope.client.console.wizards.resources;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverBehavior;\n-import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverConfig;\n-import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n-import java.io.Serializable;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.commons.lang3.ClassUtils;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n-import org.apache.syncope.client.console.widgets.JEXLTransformerWidget;\n-import org.apache.syncope.client.console.widgets.MappingItemTransformerWidget;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.client.console.wizards.AbstractMappingPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n-import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n \n /**\n  * Resource mapping panel.\n  */\n-public class ResourceMappingPanel extends Panel {\n+public class ResourceMappingPanel extends AbstractMappingPanel {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private static final Set<String> USER_FIELD_NAMES = new HashSet<>();\n-\n-    private static final Set<String> GROUP_FIELD_NAMES = new HashSet<>();\n-\n-    private static final Set<String> ANY_OBJECT_FIELD_NAMES = new HashSet<>();\n-\n-    static {\n-        initFieldNames(UserTO.class, USER_FIELD_NAMES);\n-        initFieldNames(GroupTO.class, GROUP_FIELD_NAMES);\n-        initFieldNames(AnyObjectTO.class, ANY_OBJECT_FIELD_NAMES);\n-    }\n-\n-    private static void initFieldNames(final Class<?> entityClass, final Set<String> keys) {\n-        List<Class<?>> classes = ClassUtils.getAllSuperclasses(entityClass);\n-        classes.add(entityClass);\n-        for (Class<?> clazz : classes) {\n-            for (Field field : clazz.getDeclaredFields()) {\n-                if (!Modifier.isStatic(field.getModifiers())\n-                        && !Collection.class.isAssignableFrom(field.getType())\n-                        && !Map.class.isAssignableFrom(field.getType())) {\n-\n-                    keys.add(field.getName());\n-                }\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Any type rest client.\n-     */\n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n-    /**\n-     * Any type class rest client.\n-     */\n-    private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n-\n-    private final Label passwordLabel;\n-\n-    /**\n-     * Add mapping button.\n-     */\n-    private final AjaxButton addMappingBtn;\n-\n-    /**\n-     * All mappings.\n-     */\n-    private final ListView<MappingItemTO> mappings;\n-\n     /**\n      * External resource provisioning configuration instance to be updated.\n      */\n     private final ProvisionTO provisionTO;\n \n-    /**\n-     * Mapping container.\n-     */\n-    private final WebMarkupContainer mappingContainer;\n+    private final LoadableDetachableModel<List<String>> extAttrNames;\n \n     /**\n      * Attribute Mapping Panel.\n@@ -155,15 +65,19 @@ public ResourceMappingPanel(\n             final MappingItemTransformersTogglePanel mapItemTransformers,\n             final JEXLTransformersTogglePanel jexlTransformers) {\n \n-        super(id);\n+        super(id,\n+                mapItemTransformers,\n+                jexlTransformers,\n+                new ListModel<MappingItemTO>(provisionTO.getMapping().getItems()),\n+                resourceTO.getConnector() != null,\n+                false,\n+                MappingPurpose.BOTH);\n+\n         setOutputMarkupId(true);\n \n         this.provisionTO = provisionTO;\n-        if (provisionTO.getMapping() == null) {\n-            provisionTO.setMapping(new MappingTO());\n-        }\n \n-        final LoadableDetachableModel<List<String>> extAttrNames = new LoadableDetachableModel<List<String>>() {\n+        extAttrNames = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -175,282 +89,16 @@ protected List<String> load() {\n                         resourceTO.getConfOverride());\n             }\n         };\n+    }\n \n-        this.mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n-        this.mappingContainer.setOutputMarkupId(true);\n-        add(this.mappingContainer);\n-\n-        mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n-                Model.<String>of(),\n-                Model.of(getString(\"intAttrNameInfo.help\")\n-                + \"<div style=\\\"font-size: 10px;\\\">\"\n-                + \"<code>groups[groupName].attribute</code>\\n\"\n-                + \"<code>anyObjects[anyObjectName].attribute</code>\\n\"\n-                + \"<code>memberships[groupName].attribute</code>\\n\"\n-                + \"</div>\"),\n-                new PopoverConfig().withHtml(true).withPlacement(TooltipConfig.Placement.bottom)) {\n-\n-            private static final long serialVersionUID = -7867802555691605021L;\n-\n-            @Override\n-            protected String createRelAttribute() {\n-                return \"intAttrNameInfo\";\n-            }\n-        }));\n-\n-        mappingContainer.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n-\n-        passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n-        mappingContainer.add(passwordLabel);\n-\n-        Collections.sort(provisionTO.getMapping().getItems(), new Comparator<MappingItemTO>() {\n-\n-            @Override\n-            public int compare(final MappingItemTO left, final MappingItemTO right) {\n-                int compared;\n-                if (left == null && right == null) {\n-                    compared = 0;\n-                } else if (left == null) {\n-                    compared = 1;\n-                } else if (right == null) {\n-                    compared = -1;\n-                } else if (left.isConnObjectKey()) {\n-                    compared = -1;\n-                } else if (right.isConnObjectKey()) {\n-                    compared = 1;\n-                } else if (left.isPassword()) {\n-                    compared = -1;\n-                } else if (right.isPassword()) {\n-                    compared = 1;\n-                } else if (left.getPurpose() == MappingPurpose.BOTH && right.getPurpose() != MappingPurpose.BOTH) {\n-                    compared = -1;\n-                } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n-                    compared = 1;\n-                } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n-                        && (right.getPurpose() == MappingPurpose.PULL\n-                        || right.getPurpose() == MappingPurpose.NONE)) {\n-                    compared = -1;\n-                } else if (left.getPurpose() == MappingPurpose.PULL\n-                        && right.getPurpose() == MappingPurpose.PROPAGATION) {\n-                    compared = 1;\n-                } else if (left.getPurpose() == MappingPurpose.PULL\n-                        && right.getPurpose() == MappingPurpose.NONE) {\n-                    compared = -1;\n-                } else if (left.getPurpose() == MappingPurpose.NONE\n-                        && right.getPurpose() != MappingPurpose.NONE) {\n-                    compared = 1;\n-                } else {\n-                    compared = left.getIntAttrName().compareTo(right.getIntAttrName());\n-                }\n-                return compared;\n-            }\n-        });\n-\n-        mappings = new ListView<MappingItemTO>(\"mappings\", provisionTO.getMapping().getItems()) {\n-\n-            private static final long serialVersionUID = 4949588177564901031L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<MappingItemTO> item) {\n-                final MappingItemTO mapItem = item.getModelObject();\n-                if (mapItem.getPurpose() == null) {\n-                    mapItem.setPurpose(MappingPurpose.BOTH);\n-                }\n-\n-                //--------------------------------\n-                // Internal attribute\n-                // -------------------------------\n-                AjaxTextFieldPanel intAttrName = new AjaxTextFieldPanel(\n-                        \"intAttrName\",\n-                        getString(\"intAttrName\"),\n-                        new PropertyModel<String>(mapItem, \"intAttrName\"),\n-                        false);\n-                intAttrName.setChoices(Collections.<String>emptyList());\n-                intAttrName.setRequired(true).hideLabel();\n-                item.add(intAttrName);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // External attribute\n-                // -------------------------------\n-                final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n-                        \"extAttrName\",\n-                        getString(\"extAttrName\"),\n-                        new PropertyModel<String>(mapItem, \"extAttrName\"));\n-                extAttrName.setChoices(extAttrNames.getObject());\n-\n-                boolean required = !mapItem.isPassword();\n-                extAttrName.setRequired(required).hideLabel();\n-                extAttrName.setEnabled(required);\n-                item.add(extAttrName);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // JEXL transformers\n-                // -------------------------------\n-                item.add(new JEXLTransformerWidget(\n-                        \"jexlTransformers\", mapItem, jexlTransformers).setRenderBodyOnly(true));\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Mapping item transformers\n-                // -------------------------------\n-                item.add(new MappingItemTransformerWidget(\n-                        \"mappingItemTransformers\", mapItem, mapItemTransformers).setRenderBodyOnly(true));\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Mandatory\n-                // -------------------------------\n-                final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\n-                        \"mandatoryCondition\",\n-                        new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n-                        new PropertyModel<String>(mapItem, \"mandatoryCondition\"));\n-                mandatory.hideLabel();\n-                mandatory.setChoices(Arrays.asList(new String[] { \"true\", \"false\" }));\n-                mandatory.setEnabled(!mapItem.isConnObjectKey());\n-                item.add(mandatory);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Connector object key\n-                // -------------------------------\n-                final AjaxCheckBoxPanel connObjectKey = new AjaxCheckBoxPanel(\n-                        \"connObjectKey\",\n-                        new ResourceModel(\"connObjectKey\", \"connObjectKey\").getObject(),\n-                        new PropertyModel<Boolean>(mapItem, \"connObjectKey\"), false);\n-                connObjectKey.hideLabel();\n-                item.add(connObjectKey);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Password\n-                // -------------------------------\n-                final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\n-                        \"password\",\n-                        new ResourceModel(\"password\", \"password\").getObject(),\n-                        new PropertyModel<Boolean>(mapItem, \"password\"), false);\n-                item.add(password.hideLabel());\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Purpose\n-                // -------------------------------\n-                WebMarkupContainer purpose = new WebMarkupContainer(\"purpose\");\n-                purpose.setOutputMarkupId(Boolean.TRUE);\n-\n-                final MappingPurposePanel panel = new MappingPurposePanel(\n-                        \"purposeActions\", new PropertyModel<MappingPurpose>(mapItem, \"purpose\"), purpose);\n-\n-                purpose.add(panel.setRenderBodyOnly(true));\n-                item.add(purpose);\n-                // -------------------------------\n-\n-                //--------------------------------\n-                // Remove\n-                // -------------------------------\n-                final ActionLinksPanel.Builder<Serializable> actions = ActionLinksPanel.builder();\n-                actions.add(new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        int index = -1;\n-                        for (int i = 0; i < provisionTO.getMapping().getItems().size() && index == -1; i++) {\n-                            if (mapItem.equals(provisionTO.getMapping().getItems().get(i))) {\n-                                index = i;\n-                            }\n-                        }\n-\n-                        if (index != -1) {\n-                            provisionTO.getMapping().getItems().remove(index);\n-                            item.getParent().removeAll();\n-                            target.add(ResourceMappingPanel.this);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_UPDATE);\n-                item.add(actions.build(\"toRemove\"));\n-                // -------------------------------\n-\n-                intAttrName.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                    }\n-                });\n-\n-                connObjectKey.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        if (connObjectKey.getModelObject()) {\n-                            mapItem.setMandatoryCondition(\"true\");\n-                            mandatory.setModelObject(\"true\");\n-                            mandatory.setEnabled(false);\n-                        } else {\n-                            mapItem.setMandatoryCondition(\"false\");\n-                            mandatory.setModelObject(\"false\");\n-                            mandatory.setEnabled(true);\n-                        }\n-                        target.add(mandatory);\n-                    }\n-                });\n-\n-                password.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        extAttrName.setEnabled(!mapItem.isConnObjectKey() && !password.getModelObject());\n-                        extAttrName.setModelObject(password.getModelObject()\n-                                ? ConnIdSpecialAttributeName.PASSWORD : extAttrName.getModelObject());\n-                        extAttrName.setRequired(!password.getModelObject());\n-                        target.add(extAttrName);\n-\n-                        setConnObjectKey(connObjectKey, password);\n-                        target.add(connObjectKey);\n-                    }\n-                });\n-\n-                setConnObjectKey(connObjectKey, password);\n-                setAttrNames(intAttrName);\n-\n-                if (!AnyTypeKind.USER.name().equals(provisionTO.getAnyType())) {\n-                    password.setVisible(false);\n-\n-                    // Changes required by clone ....\n-                    extAttrName.setEnabled(!mapItem.isConnObjectKey());\n-                    if (mapItem.isPassword()) {\n-                        // re-enable if and only if cloned objec mapping item was a password\n-                        intAttrName.setEnabled(true);\n-                    }\n-                    mapItem.setPassword(false);\n-                }\n-            }\n-        };\n-\n-        mappings.setReuseItems(true);\n-        mappingContainer.add(mappings);\n-\n-        addMappingBtn = new IndicatingAjaxButton(\"addMappingBtn\", new ResourceModel(\"add\")) {\n-\n-            private static final long serialVersionUID = -4804368561204623354L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                provisionTO.getMapping().getItems().add(new MappingItemTO());\n-                target.add(ResourceMappingPanel.this);\n-            }\n-        };\n-        addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(resourceTO.getConnector() != null);\n-        mappingContainer.add(addMappingBtn);\n+    @Override\n+    protected boolean hidePassword() {\n+        return !AnyTypeKind.USER.name().equals(provisionTO.getAnyType());\n+    }\n+    \n+    @Override\n+    protected IModel<List<String>> getExtAttrNames() {\n+        return extAttrNames;\n     }\n \n     @Override\n@@ -459,13 +107,8 @@ protected void onBeforeRender() {\n         passwordLabel.setVisible(AnyTypeKind.USER.name().equals(this.provisionTO.getAnyType()));\n     }\n \n-    /**\n-     * Set attribute names for a drop down choice list.\n-     *\n-     * @param type attribute type.\n-     * @param toBeUpdated drop down choice to be updated.\n-     */\n-    private void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n+    @Override\n+    protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n \n@@ -501,19 +144,4 @@ private void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n         Collections.sort(choices);\n         toBeUpdated.setChoices(choices);\n     }\n-\n-    /**\n-     * Enable/Disable connObjectKey checkbox.\n-     *\n-     * @param connObjectKey connObjectKey checkbox.\n-     * @param password password checkbox.\n-     */\n-    private void setConnObjectKey(final AjaxCheckBoxPanel connObjectKey, final AjaxCheckBoxPanel password) {\n-        if (password.getModelObject()) {\n-            connObjectKey.setReadOnly(true);\n-            connObjectKey.setModelObject(false);\n-        } else {\n-            connObjectKey.setReadOnly(false);\n-        }\n-    }\n }"},{"sha":"6901480cf14c460254b48aabb7d9b8a3ff8b0a78","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -323,9 +323,9 @@ public boolean evaluate(final MappingItemTO item) {\n                         });\n \n                         if (connObjectKeyCount != 1) {\n-                            throw new RuntimeException(provision.getAnyType() + \": \"\n+                            throw new IllegalArgumentException(provision.getAnyType() + \": \"\n                                     + new StringResourceModel(\"connObjectKeyValidation\", ResourceProvisionPanel.this).\n-                                    getString());\n+                                            getString());\n                         }\n                     }\n                 }"},{"sha":"e42c0f762af48088b5350b493769ba4f9343166d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/XMLEditorPanel.html","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FXMLEditorPanel.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,54 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/matchbrackets.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closebrackets.js\"></script>\n+    <script type=\"text/javascript\">\n+      function updateTextArea(editor) {\n+        document.getElementById(\"xmlEditorInfoDefForm\").children[\"xmlEditorInfo\"].value = editor.getValue();\n+      }\n+    </script>\n+    <style>\n+      .w_content_3 {\n+        padding: 0;\n+        color: #333333;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        font-size: 100%;\n+        border: 1px solid #BBBBBB;\n+        padding: 1%;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div style=\"padding: 1%;\">\n+      <div class=\"w_content_3\" id=\"xmlEditorInfoDefForm\">\n+        <textarea wicket:id=\"xmlEditorInfo\" id=\"consoleLayoutInfo\" name=\"xmlEditorInfo\" style=\"width: 100%; height: 350px;\">\n+        </textarea>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"ddca6f745ab84da83cd663cd75c405ed4927c72c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -40,7 +40,7 @@\n               </th>\n               <th><wicket:message key=\"connObjectKey\"/></th>\n               <th><label wicket:id=\"passwordLabel\"/></th>\n-              <th><wicket:message key=\"purpose\"/></th>\n+              <th><label wicket:id=\"purposeLabel\"/></th>\n               <th></th>\n             </tr>\n             <tr wicket:id=\"mappings\">","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.html"},{"sha":"0f1691dc0724bf86dae9579d3608bfbf2bf760fe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+extAttrName=External attribute\n+connObjectKey=Remote Key\n+mandatoryCondition=Mandatory\n+password=Password\n+purpose=Purpose\n+delete=Delete\n+intAttrName=Internal attribute\n+enforceMandatoryCondition=Enforce mandatory condition"},{"sha":"cf01280184fc38a5fd08e19596f002bd2be2b4ca","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_it.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+extAttrName=Attributo esterno\n+connObjectKey=Chiave remota\n+mandatoryCondition=Obbligatorio\n+password=Password\n+purpose=Scopo\n+delete=Rimuovi\n+intAttrName=Attributo interno\n+enforceMandatoryCondition=Abilita mandatory condition"},{"sha":"33f66a5cd154e2dff6ef0392545b88f4da513d7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_pt_BR.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+extAttrName=Atributo Externo\n+connObjectKey=Remote Key\n+mandatoryCondition=Obrigat\\u00f3rio\n+password=Senha\n+purpose=Prop\\u00f3sito\n+delete=Excluir\n+intAttrName=Atributo interno\n+enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria"},{"sha":"1f4c277e0d80170ef7214d5d193e8d9403fe4725","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel_ru.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel_ru.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+extAttrName=\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+connObjectKey=\\u0414\\u0438\\u0441\\u0442\\u0430\\u043d\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043b\\u044e\\u0447\n+mandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439\n+password=\\u041f\\u0430\\u0440\\u043e\\u043b\\u044c\n+purpose=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\n+delete=\\u0423\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c\n+intAttrName=\\u0412\\u043d\\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+enforceMandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439 (\\u043f\\u0440\\u0438\\u043d\\u0443\\u0434\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e)"},{"sha":"a50917dd735077df3142ed363c06df6b957943cf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.properties","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -16,22 +16,9 @@\n # under the License.\n anyType=Object Type\n objectClass= Object Class\n-__ACCOUNT__=ACCOUNT\n-__GROUP__=GROUP\n auxClasses=Auxiliary Classes\n \n extAttrName=External attribute\n-entity=Entity\n-groupSchema=Role Schema\n-connObjectKey=Remote Key\n-transformers=Item Transformers\n-mandatoryCondition=Mandatory\n-password=Password\n-purpose=Purpose\n-delete=Delete\n-intAttrName=Internal attribute\n-enforceMandatoryCondition=Enforce mandatory condition\n-fieldName=Field name\n \n connObjectKeyValidation=There must be exactly one Remote Key\n propagationMode=Propagation mode"},{"sha":"6e7dac6d343d59473d306d8d45c8b3fe93b0d949","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_it.properties","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -16,22 +16,9 @@\n # under the License.\n anyType=Tipo oggetto\n objectClass=Classe\n-__ACCOUNT__=ACCOUNT\n-__GROUP__=GROUP\n auxClasses=Classi Ausiliarie\n \n extAttrName=Attributo esterno\n-entity=Entit&agrave;\n-groupSchema=Schema Ruolo\n-connObjectKey=Chiave remota\n-transformers=Item Transformers\n-mandatoryCondition=Obbligatorio\n-password=Password\n-purpose=Scopo\n-delete=Rimuovi\n-intAttrName=Attributo interno\n-enforceMandatoryCondition=Abilita mandatory condition\n-fieldName=Nome campo\n \n connObjectKeyValidation=Deve essere definito esattamente una Chiave remota\n propagationMode=Modalit\\u00e0 di propagazione"},{"sha":"bdd9e9265dbfb0ca82a6d765cada2cf606f053c6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_pt_BR.properties","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -16,22 +16,9 @@\n # under the License.\n anyType=Object Type\n objectClass=Classe\n-__ACCOUNT__=ACCOUNT\n-__GROUP__=GROUP\n auxClasses=Classes Auxiliares\n \n extAttrName=Atributo Externo\n-entity=Entidade\n-groupSchema=Esquema de Fun\\u00e7\\u00e3o\n-connObjectKey=Remote Key\n-transformers=Item Transformers\n-mandatoryCondition=Obrigat\\u00f3rio\n-password=Senha\n-purpose=Prop\\u00f3sito\n-delete=Excluir\n-intAttrName=Atributo interno\n-enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n-fieldName=Nome do Campo\n \n connObjectKeyValidation=Precisa ser exatamente um Remote Key\n propagationMode=Modo de propaga\\u00e7\\u00e3o"},{"sha":"b06c382750512a3df1048077237d74dadd72e11c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_ru.properties","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -14,25 +14,11 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n anyType=\\u0422\\u0438\\u043f \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430\n objectClass=\\u041a\\u043b\\u0430\\u0441\\u0441 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430\n-__ACCOUNT__=\\u0423\\u0427\\u0415\\u0422\\u041d\\u0410\\u042f \\u0417\\u0410\\u041f\\u0418\\u0421\\u042c\n-__GROUP__=\\u0413\\u0420\\u0423\\u041f\\u041f\\u0410\n auxClasses=\\u0434\\u0438\\u0441\\u0442\\u0430\\u043d\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043b\\u044e\\u0447\n \n extAttrName=\\u0412\\u043d\\u0435\\u0448\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n-entity=\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\n-groupSchema=\\u0410\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442 \\u0433\\u0440\\u0443\\u043f\\u043f\\u044b\n-connObjectKey=\\u0414\\u0438\\u0441\\u0442\\u0430\\u043d\\u0446\\u0438\\u043e\\u043d\\u043d\\u044b\\u0439 \\u043a\\u043b\\u044e\\u0447\n-transformers=\\u041c\\u043e\\u0434\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\\u044b \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u043e\\u0432\n-mandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439\n-password=\\u041f\\u0430\\u0440\\u043e\\u043b\\u044c\n-purpose=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\n-delete=\\u0423\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c\n-intAttrName=\\u0412\\u043d\\u0443\\u0442\\u0440\\u0435\\u043d\\u043d\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n-enforceMandatoryCondition=\\u041e\\u0431\\u044f\\u0437\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0439 (\\u043f\\u0440\\u0438\\u043d\\u0443\\u0434\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e)\n-fieldName=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435 \\u043f\\u043e\\u043b\\u044f\n \n connObjectKeyValidation=\\u0422\\u0430\\u043c \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0431\\u044b\\u0442\\u044c \\u0440\\u043e\\u0432\\u043d\\u043e \\u043e\\u0434\\u0438\\u043d \\u0434\\u0438\\u0441\\u0442\\u0430\\u043d\\u0446\\u0438\\u043e\\u043d\\u043d\\u043e\\u0433\\u043e \\u043a\\u043b\\u044e\\u0447\\u0430\n propagationMode=\\u0420\\u0435\\u0436\\u0438\\u043c \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439"},{"sha":"1b7c89cd79d7b5009760be8f619d88a714d317d4","filename":"ext/camel/client-console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Client Console</name>\n-  <description>Apache Syncope Extensions: Camel Client Console</description>\n+  <name>Apache Syncope Ext: Camel Client Console</name>\n+  <description>Apache Syncope Ext: Camel Client Console</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-client-console</artifactId>\n   <packaging>jar</packaging>"},{"sha":"70e523ded7a4767a852235144505becb0ca85362","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRoutesRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,9 +27,7 @@\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.service.CamelRouteService;\n-import org.springframework.stereotype.Component;\n \n-@Component\n public class CamelRoutesRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2018208424159468912L;"},{"sha":"8b6aab4831161daa4d46fee8d0574566444496b5","filename":"ext/camel/common-lib/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Common Lib</name>\n-  <description>Apache Syncope Extensions: Camel Common Lib</description>\n+  <name>Apache Syncope Ext: Camel Common Lib</name>\n+  <description>Apache Syncope Ext: Camel Common Lib</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-common-lib</artifactId>\n   <packaging>jar</packaging>"},{"sha":"dfa43ff0b952a3b1c32420a7758718ddc52ef665","filename":"ext/camel/logic/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Logic</name>\n-  <description>Apache Syncope Extensions: Camel Logic</description>\n+  <name>Apache Syncope Ext: Camel Logic</name>\n+  <description>Apache Syncope Ext: Camel Logic</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-logic</artifactId>\n   <packaging>jar</packaging>"},{"sha":"0828c6ce37059ec42b1217e1ec86ae51ac15028a","filename":"ext/camel/persistence-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Persistence API</name>\n-  <description>Apache Syncope Extensions: Camel Persistence API</description>\n+  <name>Apache Syncope Ext: Camel Persistence API</name>\n+  <description>Apache Syncope Ext: Camel Persistence API</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-persistence-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"6f372e9671584bc19f790d3d524822a81526af6f","filename":"ext/camel/persistence-jpa/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Persistence JPA</name>\n-  <description>Apache Syncope Extensions: Camel Persistence JPA</description>\n+  <name>Apache Syncope Ext: Camel Persistence JPA</name>\n+  <description>Apache Syncope Ext: Camel Persistence JPA</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-persistence-jpa</artifactId>\n   <packaging>jar</packaging>"},{"sha":"3ce77584dcc84af7bc6b1361b9e2f68386601ce9","filename":"ext/camel/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel</name>\n-  <description>Apache Syncope Extensions: Camel</description>\n+  <name>Apache Syncope Ext: Camel</name>\n+  <description>Apache Syncope Ext: Camel</description>\n   <groupId>org.apache.syncope.ext</groupId>\n   <artifactId>syncope-ext-camel</artifactId>\n   <packaging>pom</packaging>"},{"sha":"effa52285487f2284f6226542cccd87d644be274","filename":"ext/camel/provisioning-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Provisioning API</name>\n-  <description>Apache Syncope Extensions: Camel Provisioning API</description>\n+  <name>Apache Syncope Ext: Camel Provisioning API</name>\n+  <description>Apache Syncope Ext: Camel Provisioning API</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-provisioning-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"19e31cdf2f36fdacf2efc95092981129d5a578c8","filename":"ext/camel/provisioning-camel/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel Provisioning</name>\n-  <description>Apache Syncope Extensions: Camel Provisioning</description>\n+  <name>Apache Syncope Ext: Camel Provisioning</name>\n+  <description>Apache Syncope Ext: Camel Provisioning</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-provisioning</artifactId>\n   <packaging>jar</packaging>"},{"sha":"658ce1464249d08b4646e035c8b319cb7bc44a3c","filename":"ext/camel/rest-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel REST API</name>\n-  <description>Apache Syncope Extensions: Camel REST API</description>\n+  <name>Apache Syncope Ext: Camel REST API</name>\n+  <description>Apache Syncope Ext: Camel REST API</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-rest-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"d5b73fd22b5d0abdbf2c2ec8215435e03672cdb0","filename":"ext/camel/rest-cxf/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fcamel%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Camel REST CXF</name>\n-  <description>Apache Syncope Extensions: Camel REST CXF</description>\n+  <name>Apache Syncope Ext: Camel REST CXF</name>\n+  <description>Apache Syncope Ext: Camel REST CXF</description>\n   <groupId>org.apache.syncope.ext.camel</groupId>\n   <artifactId>syncope-ext-camel-rest-cxf</artifactId>\n   <packaging>jar</packaging>"},{"sha":"f832188613d501e1041105778dfc214d3987312a","filename":"ext/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions</name>\n-  <description>Apache Syncope Extensions</description>\n+  <name>Apache Syncope Ext</name>\n+  <description>Apache Syncope Ext</description>\n   <groupId>org.apache.syncope</groupId>\n   <artifactId>syncope-ext</artifactId>\n   <packaging>pom</packaging>"},{"sha":"a72d507deca94eb3a733ab6c0a5fc6a8e1a240b4","filename":"ext/saml2sp/agent/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fagent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fagent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Agent</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Agent</description>\n+  <name>Apache Syncope Ext: SAML2 SP Agent</name>\n+  <description>Apache Syncope Ext: SAML2 SP Agent</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-agent</artifactId>\n   <packaging>jar</packaging>"},{"sha":"a9e29349c3a7f1af59b9b1cdac7ed2d468d0cbcc","filename":"ext/saml2sp/client-console/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.0.3-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Client Console</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Client Console</description>\n+  <name>Apache Syncope Ext: SAML2 SP Client Console</name>\n+  <description>Apache Syncope Ext: SAML2 SP Client Console</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n   <packaging>jar</packaging>"},{"sha":"8399ff0b7a4af5e6273f7994fd6ed88522ff508a","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SP.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.annotations.ExtPage;\n+import org.apache.syncope.client.console.panels.SAML2IdPsDirectoryPanel;\n+import org.apache.syncope.client.console.panels.SAML2SPPanel;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+@ExtPage(label = \"SAML 2.0 SP\", icon = \"fa-sign-in\", listEntitlement = \"\", priority = 100)\n+public class SAML2SP extends BaseExtPage {\n+\n+    private static final long serialVersionUID = -4837201407211278956L;\n+\n+    public SAML2SP(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n+        body.add(content);\n+    }\n+\n+    private List<ITab> buildTabList() {\n+\n+        final List<ITab> tabs = new ArrayList<>(2);\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"idps\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new SAML2IdPsDirectoryPanel(panelId, getPageReference());\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"sp\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new SAML2SPPanel(panelId);\n+            }\n+        });\n+\n+        return tabs;\n+    }\n+}"},{"sha":"52a05a6f3a028d648ee0664a1219a57823596da4","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/ImportMetadata.java","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.TogglePanel.LOG;\n+\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.BootstrapFileInputField;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileInputConfig;\n+import java.io.ByteArrayInputStream;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.upload.FileUpload;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class ImportMetadata extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = 6959177759869415782L;\n+\n+    private final SAML2IdPsRestClient restClient = new SAML2IdPsRestClient();\n+\n+    private final Form<?> form;\n+\n+    public ImportMetadata(final String id, final WebMarkupContainer container, final PageReference pageRef) {\n+        super(id, pageRef);\n+\n+        form = new Form<>(\"metadataForm\");\n+        addInnerObject(form);\n+\n+        final Model<byte[]> metadata = new Model<>();\n+\n+        FileInputConfig config = new FileInputConfig();\n+        config.showUpload(false);\n+        config.showRemove(false);\n+        config.showPreview(false);\n+        final BootstrapFileInputField fileUpload =\n+                new BootstrapFileInputField(\"fileUpload\", new ListModel<>(new ArrayList<FileUpload>()), config);\n+        fileUpload.setOutputMarkupId(true);\n+        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = 5538299138211283825L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target) {\n+                FileUpload uploadedFile = fileUpload.getFileUpload();\n+                if (uploadedFile != null) {\n+                    metadata.setObject(uploadedFile.getBytes());\n+                }\n+            }\n+        });\n+        form.add(fileUpload);\n+\n+        form.add(new AjaxSubmitLink(\"doUpload\", form) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                if (ArrayUtils.isNotEmpty(metadata.getObject())) {\n+                    try {\n+                        restClient.importIdPs(new ByteArrayInputStream(metadata.getObject()));\n+                        metadata.setObject(null);\n+\n+                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                        toggle(target, false);\n+                        target.add(container);\n+                    } catch (Exception e) {\n+                        LOG.error(\"While importing SAML 2.0 IdP metadata\", e);\n+                        SyncopeConsoleSession.get().error(\n+                                StringUtils.isBlank(e.getMessage())\n+                                ? e.getClass().getName() : e.getMessage());\n+                    }\n+                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        });\n+    }\n+\n+}"},{"sha":"8a8d06e6c437650d009e199eaef82b0dbca4b0bd","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"added","additions":258,"deletions":0,"changes":258,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,258 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wizards.SAML2IdPWizardBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.SAML2IdPsDirectoryPanel.SAML2IdPsProvider;\n+import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.SAML2IdPTO;\n+import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.util.crypt.Base64;\n+\n+public class SAML2IdPsDirectoryPanel extends DirectoryPanel<\n+        SAML2IdPTO, SAML2IdPTO, SAML2IdPsProvider, SAML2IdPsRestClient> {\n+\n+    private static final long serialVersionUID = 4792356089584116041L;\n+\n+    private static final String PREF_SAML2_IDPS_PAGINATOR_ROWS = \"saml2.idps.paginator.rows\";\n+\n+    private final BaseModal<Serializable> metadataModal = new BaseModal<>(\"outer\");\n+\n+    public SAML2IdPsDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, new Builder<SAML2IdPTO, SAML2IdPTO, SAML2IdPsRestClient>(new SAML2IdPsRestClient(), pageRef) {\n+\n+            private static final long serialVersionUID = 8517982765290075155L;\n+\n+            @Override\n+            protected WizardMgtPanel<SAML2IdPTO> newInstance(final String id, final boolean wizardInModal) {\n+                throw new UnsupportedOperationException();\n+            }\n+        }.disableCheckBoxes());\n+        this.addNewItemPanelBuilder(new SAML2IdPWizardBuilder(this, new SAML2IdPTO(), pageRef), false);\n+\n+        modal.addSubmitButton();\n+        modal.size(Modal.Size.Large);\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                updateResultTable(target);\n+                modal.show(false);\n+            }\n+        });\n+\n+        addOuterObject(metadataModal);\n+        setWindowClosedReloadCallback(metadataModal);\n+        metadataModal.size(Modal.Size.Large);\n+\n+        initResultTable();\n+\n+        final ImportMetadata importMetadata = new ImportMetadata(\"importMetadata\", container, pageRef);\n+        addInnerObject(importMetadata);\n+        AjaxLink<Void> importMetadataLink = new AjaxLink<Void>(\"add\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                importMetadata.toggle(target, true);\n+            }\n+        };\n+\n+        ((WebMarkupContainer) get(\"container:content\")).addOrReplace(importMetadataLink);\n+    }\n+\n+    @Override\n+    protected SAML2IdPsProvider dataProvider() {\n+        return new SAML2IdPsProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return PREF_SAML2_IDPS_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    @Override\n+    protected List<IColumn<SAML2IdPTO, String>> getColumns() {\n+        List<IColumn<SAML2IdPTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<SAML2IdPTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+\n+        columns.add(new PropertyColumn<SAML2IdPTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<SAML2IdPTO, String>(new ResourceModel(\"entityID\"), \"entityID\", \"entityID\"));\n+        columns.add(new BooleanPropertyColumn<SAML2IdPTO>(\n+                new ResourceModel(\"useDeflateEncoding\"), \"useDeflateEncoding\", \"useDeflateEncoding\"));\n+        columns.add(new BooleanPropertyColumn<SAML2IdPTO>(\n+                new ResourceModel(\"logoutSupported\"), \"logoutSupported\", \"logoutSupported\"));\n+\n+        columns.add(new ActionColumn<SAML2IdPTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 906457126287899096L;\n+\n+            @Override\n+            public ActionLinksPanel<SAML2IdPTO> getActions(\n+                    final String componentId, final IModel<SAML2IdPTO> model) {\n+\n+                ActionLinksPanel<SAML2IdPTO> panel = ActionLinksPanel.<SAML2IdPTO>builder().\n+                        add(new ActionLink<SAML2IdPTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n+                                send(SAML2IdPsDirectoryPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(object, target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, SAML2SPEntitlement.IDP_UPDATE).\n+                        add(new ActionLink<SAML2IdPTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770645L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n+                                metadataModal.header(Model.of(object.getName() + \" - Metadata\"));\n+                                metadataModal.setContent(new XMLEditorPanel(\n+                                        metadataModal,\n+                                        Model.of(new String(Base64.decodeBase64(object.getMetadata()))),\n+                                        true,\n+                                        pageRef));\n+                                metadataModal.show(true);\n+                                target.add(metadataModal);\n+                            }\n+                        }, ActionLink.ActionType.HTML, SAML2SPEntitlement.IDP_READ).\n+                        add(new ActionLink<SAML2IdPTO>() {\n+\n+                            private static final long serialVersionUID = -5467832321897812767L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                                try {\n+                                    restClient.delete(model.getObject().getKey());\n+                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n+                                }\n+                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, SAML2SPEntitlement.IDP_DELETE).\n+                        build(componentId);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<SAML2IdPTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<SAML2IdPTO> panel = ActionLinksPanel.builder();\n+\n+                return panel.add(new ActionLink<SAML2IdPTO>() {\n+\n+                    private static final long serialVersionUID = -5467832321897812767L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    protected final class SAML2IdPsProvider extends DirectoryDataProvider<SAML2IdPTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<SAML2IdPTO> comparator;\n+\n+        private SAML2IdPsProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+\n+            setSort(\"name\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<SAML2IdPTO> iterator(final long first, final long count) {\n+            List<SAML2IdPTO> list = restClient.list();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.list().size();\n+        }\n+\n+        @Override\n+        public IModel<SAML2IdPTO> model(final SAML2IdPTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"c00400b5dd3d4f0b9358a477290a86c88189d220","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2SPPanel.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import javax.ws.rs.client.ClientBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.HttpResourceStream;\n+import org.apache.wicket.markup.html.link.Link;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.request.Url;\n+import org.apache.wicket.request.UrlUtils;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n+import org.apache.wicket.request.resource.ContentDisposition;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SAML2SPPanel extends Panel {\n+\n+    private static final long serialVersionUID = 2806917712636062674L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(SAML2SPPanel.class);\n+\n+    public SAML2SPPanel(final String id) {\n+        super(id);\n+\n+        add(new Link<Void>(\"downloadMetadata\") {\n+\n+            private static final long serialVersionUID = -4331619903296515985L;\n+\n+            @Override\n+            public void onClick() {\n+                try {\n+                    HttpResourceStream stream = new HttpResourceStream(ClientBuilder.newClient().\n+                            target(RequestCycle.get().getUrlRenderer().renderFullUrl(Url.parse(\n+                                    UrlUtils.rewriteToContextRelative(\"saml2sp/metadata\", RequestCycle.get())))).\n+                            request().get());\n+\n+                    ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n+                    rsrh.setFileName(stream.getFilename() == null\n+                            ? SyncopeConsoleSession.get().getDomain() + \"-SAML-SP-Metadata.xml\"\n+                            : stream.getFilename());\n+                    rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);\n+\n+                    getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);\n+                } catch (Exception e) {\n+                    LOG.error(\"While exporting SAML 2.0 SP metadata\", e);\n+                    SyncopeConsoleSession.get().error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                }\n+            }\n+        });\n+    }\n+\n+}"},{"sha":"ba67f575f408383c7931dd1ef2951fffdc863b0e","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/rest/SAML2IdPsRestClient.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.io.InputStream;\n+import java.util.List;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.common.lib.to.SAML2IdPTO;\n+import org.apache.syncope.common.rest.api.service.SAML2IdPService;\n+\n+public class SAML2IdPsRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -5084300184764037527L;\n+\n+    public List<SAML2IdPTO> list() {\n+        return getService(SAML2IdPService.class).list();\n+    }\n+\n+    public void importIdPs(final InputStream input) {\n+        SyncopeConsoleSession.get().\n+                getService(MediaType.APPLICATION_XML_TYPE, SAML2IdPService.class).importFromMetadata(input);\n+    }\n+\n+    public SAML2IdPTO read(final String key) {\n+        return getService(SAML2IdPService.class).read(key);\n+    }\n+\n+    public void update(final SAML2IdPTO idp) {\n+        getService(SAML2IdPService.class).update(idp);\n+    }\n+\n+    public void delete(final String key) {\n+        getService(SAML2IdPService.class).delete(key);\n+    }\n+\n+}"},{"sha":"2597f427d4258889603fa9d6b0e26e163e0604f7","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPMappingPanel.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPMappingPanel.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.resources.JEXLTransformersTogglePanel;\n+import org.apache.syncope.client.console.wizards.resources.MappingItemTransformersTogglePanel;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.SAML2IdPTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class SAML2IdPMappingPanel extends AbstractMappingPanel {\n+\n+    private static final long serialVersionUID = 2248901624411541853L;\n+\n+    public SAML2IdPMappingPanel(\n+            final String id,\n+            final SAML2IdPTO idpTO,\n+            final MappingItemTransformersTogglePanel mapItemTransformers,\n+            final JEXLTransformersTogglePanel jexlTransformers) {\n+\n+        super(id,\n+                mapItemTransformers,\n+                jexlTransformers,\n+                new ListModel<MappingItemTO>(idpTO.getMappingItems()),\n+                true,\n+                true,\n+                MappingPurpose.NONE);\n+\n+        setOutputMarkupId(true);\n+    }\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+        purposeLabel.setVisible(false);\n+    }\n+\n+    @Override\n+    protected IModel<List<String>> getExtAttrNames() {\n+        return Model.ofList(Collections.<String>singletonList(\"NameID\"));\n+    }\n+\n+    @Override\n+    protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n+        toBeUpdated.setRequired(true);\n+        toBeUpdated.setEnabled(true);\n+\n+        List<String> choices = new ArrayList<>(USER_FIELD_NAMES);\n+\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassRestClient.list(\n+                anyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses())) {\n+\n+            choices.addAll(anyTypeClassTO.getPlainSchemas());\n+            choices.addAll(anyTypeClassTO.getDerSchemas());\n+            choices.addAll(anyTypeClassTO.getVirSchemas());\n+        }\n+\n+        Collections.sort(choices);\n+        toBeUpdated.setChoices(choices);\n+    }\n+\n+}"},{"sha":"333c00e96f6ebb7d0e1ba94acd52de63596f1f0f","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.SAML2IdPsDirectoryPanel;\n+import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wizards.resources.JEXLTransformersTogglePanel;\n+import org.apache.syncope.client.console.wizards.resources.MappingItemTransformersTogglePanel;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.SAML2IdPTO;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class SAML2IdPWizardBuilder extends AjaxWizardBuilder<SAML2IdPTO> {\n+\n+    private static final long serialVersionUID = 5952696913893950460L;\n+\n+    private final SAML2IdPsRestClient restClient = new SAML2IdPsRestClient();\n+\n+    private final SAML2IdPsDirectoryPanel directoryPanel;\n+\n+    public SAML2IdPWizardBuilder(\n+            final SAML2IdPsDirectoryPanel directoryPanel, final SAML2IdPTO idpTO, final PageReference pageRef) {\n+\n+        super(idpTO, pageRef);\n+        this.directoryPanel = directoryPanel;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final SAML2IdPTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new IdP(modelObject));\n+\n+        Mapping mapping = new Mapping(modelObject);\n+        mapping.setOutputMarkupId(true);\n+\n+        MappingItemTransformersTogglePanel mapItemTransformers =\n+                new MappingItemTransformersTogglePanel(mapping, pageRef);\n+        addOuterObject(mapItemTransformers);\n+        JEXLTransformersTogglePanel jexlTransformers = new JEXLTransformersTogglePanel(mapping, pageRef);\n+        addOuterObject(jexlTransformers);\n+        mapping.add(new SAML2IdPMappingPanel(\"mapping\", modelObject, mapItemTransformers, jexlTransformers));\n+\n+        wizardModel.add(mapping);\n+\n+        return wizardModel;\n+    }\n+\n+    private static final class IdP extends WizardStep {\n+\n+        private static final long serialVersionUID = 854012593185195024L;\n+\n+        IdP(final SAML2IdPTO idpTO) {\n+            super(StringUtils.EMPTY, StringUtils.EMPTY);\n+\n+            List<Component> fields = new ArrayList<>();\n+\n+            FieldPanel<String> name = new AjaxTextFieldPanel(\n+                    \"field\", \"name\", new PropertyModel<String>(idpTO, \"name\"), false);\n+            name.setRequired(true);\n+            fields.add(name);\n+\n+            AjaxCheckBoxPanel useDeflateEncoding = new AjaxCheckBoxPanel(\n+                    \"field\", \"useDeflateEncoding\", new PropertyModel<Boolean>(idpTO, \"useDeflateEncoding\"), false);\n+            fields.add(useDeflateEncoding);\n+\n+            add(new ListView<Component>(\"fields\", fields) {\n+\n+                private static final long serialVersionUID = -9180479401817023838L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<Component> item) {\n+                    item.add(item.getModelObject());\n+                }\n+\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Mapping definition step.\n+     */\n+    private static final class Mapping extends WizardStep {\n+\n+        private static final long serialVersionUID = 3454904947720856253L;\n+\n+        Mapping(final SAML2IdPTO item) {\n+            setTitleModel(Model.of(\"Mapping\"));\n+            setSummaryModel(Model.of(StringUtils.EMPTY));\n+        }\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final SAML2IdPTO modelObject) {\n+        long connObjectKeyCount = IterableUtils.countMatches(\n+                modelObject.getMappingItems(), new Predicate<MappingItemTO>() {\n+\n+            @Override\n+            public boolean evaluate(final MappingItemTO item) {\n+                return item.isConnObjectKey();\n+            }\n+        });\n+        if (connObjectKeyCount != 1) {\n+            throw new IllegalArgumentException(\n+                    new StringResourceModel(\"connObjectKeyValidation\", directoryPanel).getString());\n+        }\n+\n+        restClient.update(modelObject);\n+        return modelObject;\n+    }\n+\n+}"},{"sha":"63e124b110efc793c9167cf20282c5b70aa7468c","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/pages/SAML2SP.html","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,37 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n+        <li class=\"active\"><wicket:message key=\"extensions\"/></li>\n+        <li class=\"active\">SAML 2.0 SP</li>\n+      </ol>\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"tabbedPanel\"/>\n+      </div>\n+    </section>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"ead24e7b81cd0d52c7ed5d08b2c00580e20b602f","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/pages/SAML2SP.properties","status":"renamed","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -14,7 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n-mapping.title=Mapping\n-mapping.summary=\n-\n+idps=Identity Providers\n+sp=Service Provider","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$Mapping.properties"},{"sha":"ead24e7b81cd0d52c7ed5d08b2c00580e20b602f","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/pages/SAML2SP_it.properties","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_it.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -14,6 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n-mapping.title=Mapping\n-mapping.summary=\n+idps=Identity Providers\n+sp=Service Provider","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$Mapping_it.properties"},{"sha":"ead24e7b81cd0d52c7ed5d08b2c00580e20b602f","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/pages/SAML2SP_pt_BR.properties","status":"renamed","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_pt_BR.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -14,7 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n-mapping.title=Mapping\n-mapping.summary=\n-\n+idps=Identity Providers\n+sp=Service Provider","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$Mapping_pt_BR.properties"},{"sha":"ead24e7b81cd0d52c7ed5d08b2c00580e20b602f","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/pages/SAML2SP_ru.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SP_ru.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+idps=Identity Providers\n+sp=Service Provider"},{"sha":"30a3c6e52ceabd5bdeaefe8495bf474219c76a18","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/ImportMetadata.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,32 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div id=\"startAtContainer\">\n+      <form wicket:id=\"metadataForm\" encType=\"multipart/form-data\" method=\"post\" accept-charset=\"UTF-8\">\n+        <div class=\"input-group\">\n+          <input wicket:id=\"fileUpload\" type=\"file\"/>\n+          <div class=\"input-group-addon\">\n+            <a wicket:id=\"doUpload\"><i class=\"fa fa-upload\" alt=\"upload\" title=\"Upload\"></i></a>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"f912857d8cd9f18d567f3565d3c76f682f7d8bb3","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <span wicket:id=\"importMetadata\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"e1ecb172f7ef3bc5249e699996f1e0f44b055908","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+entityID=Entity ID\n+useDeflateEncoding=Deflate Encoding\n+logoutSupported=Logout supported\n+any.edit=Edit ${entityID}\n+connObjectKeyValidation=There must be exactly one Remote Key"},{"sha":"3fa90a9eee29607aa348bb7ce1585e5c2dfa4e6e","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+entityID=Entity ID\n+useDeflateEncoding=Deflate Encoding\n+logoutSupported=Logout supportato\n+any.edit=Modifica ${entityID}\n+connObjectKeyValidation=Deve essere definito esattamente una Chiave remota"},{"sha":"9bb0b82815902c912ac9443d11c23da18835f5a7","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+entityID=Entity ID\n+useDeflateEncoding=Deflate Encoding\n+logoutSupported=Logout supported\n+any.edit=Alterar ${entityID}\n+connObjectKeyValidation=Precisa ser exatamente um Remote Key"},{"sha":"ba8528906e2985d7e5d791941c599c8c9fd5cb8e","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_ru.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+entityID=Entity ID\n+useDeflateEncoding=Deflate Encoding\n+logoutSupported=Logout supported\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${entityID}\n+connObjectKeyValidation=\\u0422\\u0430\\u043c \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0431\\u044b\\u0442\\u044c \\u0440\\u043e\\u0432\\u043d\\u043e \\u043e\\u0434\\u0438\\u043d \\u0434\\u0438\\u0441\\u0442\\u0430\\u043d\\u0446\\u0438\\u043e\\u043d\\u043d\\u043e\\u0433\\u043e \\u043a\\u043b\\u044e\\u0447\\u0430"},{"sha":"2434e8daf66aa7ff860b64964b77b59a7bad3202","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2SPPanel.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"logviewer-btn\">\n+      <a class=\"btn btn-primary\" wicket:id=\"downloadMetadata\">\n+        <span class=\"fa fa-download\"></span> Metadata\n+      </a>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"78bd42627ac579b01e95f0eb9059197fea88854b","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder$IdP.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24IdP.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24IdP.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24IdP.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"fields\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"field\"/>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"11b1a5259058e6902e02b9f380d437cc5cdb4442","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder$Mapping.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder%24Mapping.html?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"mapping\" />\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"24cfc0b0df46694dae9d7fb85cacfa1091b5d598","filename":"ext/saml2sp/client-enduser/pom.xml","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-enduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fclient-enduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-enduser%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -0,0 +1,83 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-saml2sp</artifactId>\n+    <version>2.0.3-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SAML2 SP Client Enduser</name>\n+  <description>Apache Syncope Ext: SAML2 SP Client Enduser</description>\n+  <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+  <artifactId>syncope-ext-saml2sp-client-enduser</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-agent</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-enduser</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"a8999218afd004fe8b9ef06853ff258670b15036","filename":"ext/saml2sp/common-lib/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Common Lib</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Common Lib</description>\n+  <name>Apache Syncope Ext: SAML2 SP Common Lib</name>\n+  <description>Apache Syncope Ext: SAML2 SP Common Lib</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-common-lib</artifactId>\n   <packaging>jar</packaging>"},{"sha":"8fcccc4c7736d9c7041ea9807526f9fffeefa8a0","filename":"ext/saml2sp/logic/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Logic</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Logic</description>\n+  <name>Apache Syncope Ext: SAML2 SP Logic</name>\n+  <description>Apache Syncope Ext: SAML2 SP Logic</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-logic</artifactId>\n   <packaging>jar</packaging>"},{"sha":"80bfd3ade4796d093cad5cecab2152cfd8a24adf","filename":"ext/saml2sp/persistence-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Persistence API</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Persistence API</description>\n+  <name>Apache Syncope Ext: SAML2 SP Persistence API</name>\n+  <description>Apache Syncope Ext: SAML2 SP Persistence API</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-persistence-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"702a33b3717a0ef0b5d1ce156d2b81bcefdb6b34","filename":"ext/saml2sp/persistence-jpa/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Persistence JPA</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Persistence JPA</description>\n+  <name>Apache Syncope Ext: SAML2 SP Persistence JPA</name>\n+  <description>Apache Syncope Ext: SAML2 SP Persistence JPA</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-persistence-jpa</artifactId>\n   <packaging>jar</packaging>"},{"sha":"9a6f21c85c92fa2ab0ff11527e8fc893fda8e03b","filename":"ext/saml2sp/pom.xml","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP</description>\n+  <name>Apache Syncope Ext: SAML2 SP</name>\n+  <description>Apache Syncope Ext: SAML2 SP</description>\n   <groupId>org.apache.syncope.ext</groupId>\n   <artifactId>syncope-ext-saml2sp</artifactId>\n   <packaging>pom</packaging>\n@@ -48,6 +48,7 @@ under the License.\n     <module>rest-cxf</module>\n     <module>agent</module>\n     <module>client-console</module>\n+    <module>client-enduser</module>\n   </modules>\n \n </project>"},{"sha":"dd03eea4ed37393994dbbd2aebb44cd6f18aeb5e","filename":"ext/saml2sp/provisioning-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Provisioning API</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Provisioning API</description>\n+  <name>Apache Syncope Ext: SAML2 SP Provisioning API</name>\n+  <description>Apache Syncope Ext: SAML2 SP Provisioning API</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-provisioning-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"b4330ec01a36666fd705fc43edafc214b93e1a8e","filename":"ext/saml2sp/provisioning-java/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP Provisioning Java</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP Provisioning Java</description>\n+  <name>Apache Syncope Ext: SAML2 SP Provisioning Java</name>\n+  <description>Apache Syncope Ext: SAML2 SP Provisioning Java</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-provisioning-java</artifactId>\n   <packaging>jar</packaging>"},{"sha":"ea740b505fbf85de03952a0e85c3962a22145ff5","filename":"ext/saml2sp/rest-api/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP REST API</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP REST API</description>\n+  <name>Apache Syncope Ext: SAML2 SP REST API</name>\n+  <description>Apache Syncope Ext: SAML2 SP REST API</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-rest-api</artifactId>\n   <packaging>jar</packaging>"},{"sha":"5f684871d286e7723454aa2c278ebc5640cb08a3","filename":"ext/saml2sp/rest-cxf/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fsaml2sp%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: SAML 2.0 SP REST CXF</name>\n-  <description>Apache Syncope Extensions: SAML 2.0 SP REST CXF</description>\n+  <name>Apache Syncope Ext: SAML2 SP REST CXF</name>\n+  <description>Apache Syncope Ext: SAML2 SP REST CXF</description>\n   <groupId>org.apache.syncope.ext.saml2sp</groupId>\n   <artifactId>syncope-ext-saml2sp-rest-cxf</artifactId>\n   <packaging>jar</packaging>"},{"sha":"2f9e0a1387a82091ed11fa94c042e4c97f25d2a0","filename":"ext/swagger-ui/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fswagger-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d7405db84e40dc15a4e65d95667cf6075b1056d/ext%2Fswagger-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fpom.xml?ref=3d7405db84e40dc15a4e65d95667cf6075b1056d","patch":"@@ -27,8 +27,8 @@ under the License.\n     <version>2.1.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Extensions: Swagger UI</name>\n-  <description>Apache Syncope Extensions: Swagger UI</description>\n+  <name>Apache Syncope Ext: Swagger UI</name>\n+  <description>Apache Syncope Ext: Swagger UI</description>\n   <groupId>org.apache.syncope.ext</groupId>\n   <artifactId>syncope-ext-swagger-ui</artifactId>\n   <packaging>jar</packaging>"}]}