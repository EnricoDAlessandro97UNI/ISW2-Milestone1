{"sha":"cb5ad48f787a8c685e0f1dd666879e67b66f4401","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNiNWFkNDhmNzg3YThjNjg1ZTBmMWRkNjY2ODc5ZTY3YjY2ZjQ0MDE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-05-14T10:51:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-05-14T11:28:07Z"},"message":"Passing JobExecutionContext to AbstractSchedTaskJobDelegate#doExecute to allow for additional parameters","tree":{"sha":"a87da93090753fc0352e88a94febcb730b40f388","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a87da93090753fc0352e88a94febcb730b40f388"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cb5ad48f787a8c685e0f1dd666879e67b66f4401","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb5ad48f787a8c685e0f1dd666879e67b66f4401","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cb5ad48f787a8c685e0f1dd666879e67b66f4401","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb5ad48f787a8c685e0f1dd666879e67b66f4401/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5631d1220e062fb65f87234474e39e4d03523bc6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5631d1220e062fb65f87234474e39e4d03523bc6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5631d1220e062fb65f87234474e39e4d03523bc6"}],"stats":{"total":56,"additions":44,"deletions":12},"files":[{"sha":"ddb6fe4deea27f59c1f3e44fdb5801653b2451a8","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/SchedTaskJobDelegate.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FSchedTaskJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -23,5 +23,13 @@\n \n public interface SchedTaskJobDelegate extends JobDelegate {\n \n+    /**\n+     * Executes a Quartz Job to run the given Task.\n+     *\n+     * @param taskKey Task key to run\n+     * @param dryRun indicates if execution shall be simulated with no actual changes\n+     * @param context Quartz' execution context, can be used to pass parameters to the job\n+     * @throws JobExecutionException if anything goes wrong\n+     */\n     void execute(String taskKey, boolean dryRun, JobExecutionContext context) throws JobExecutionException;\n }"},{"sha":"e8aac1384f3c8152da3ea308bcf1a2826fc7c0fa","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -128,7 +128,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         AuditElements.Result result;\n \n         try {\n-            execution.setMessage(doExecute(dryRun, executor));\n+            execution.setMessage(doExecute(dryRun, executor, context));\n             execution.setStatus(TaskJob.Status.SUCCESS.name());\n             result = AuditElements.Result.SUCCESS;\n         } catch (JobExecutionException e) {\n@@ -173,10 +173,12 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n      *\n      * @param dryRun whether to actually touch the data\n      * @param executor the user executing this task\n+     * @param context Quartz' execution context, can be used to pass parameters to the job\n      * @return the task execution status to be set\n      * @throws JobExecutionException if anything goes wrong\n      */\n-    protected abstract String doExecute(boolean dryRun, String executor) throws JobExecutionException;\n+    protected abstract String doExecute(boolean dryRun, String executor, JobExecutionContext context)\n+            throws JobExecutionException;\n \n     /**\n      * Template method to determine whether this job's task execution has to be persisted or not."},{"sha":"532ff5291c1e7aaa43e58bb764e99de27bd9fded","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredAccessTokenCleanup.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredAccessTokenCleanup.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -28,7 +29,9 @@ public class ExpiredAccessTokenCleanup extends AbstractSchedTaskJobDelegate {\n     private AccessTokenDAO accessTokenDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         if (!dryRun) {\n             int deleted = accessTokenDAO.deleteExpired();\n             LOG.debug(\"Successfully deleted {} expired access tokens\", deleted);"},{"sha":"aee90ed71ccd473901969bb29a7b5b7f28e2bbc0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ExpiredBatchCleanup.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FExpiredBatchCleanup.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.job;\n \n import org.apache.syncope.core.persistence.api.dao.BatchDAO;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -28,7 +29,9 @@ public class ExpiredBatchCleanup extends AbstractSchedTaskJobDelegate {\n     private BatchDAO batchDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         if (!dryRun) {\n             int deleted = batchDAO.deleteExpired();\n             LOG.debug(\"Successfully deleted {} expired batch requests\", deleted);"},{"sha":"2a815c6c56972249341293aa99d0a8c339639996","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/GroupMemberProvisionTaskJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FGroupMemberProvisionTaskJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -73,7 +73,9 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n     }\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         Group group = groupDAO.authFind(groupKey);\n \n         StringBuilder result = new StringBuilder(\"Group \").append(group.getName()).append(\" members \");"},{"sha":"7fec620395f3983c13eca1f97efe16b04568df35","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.core.provisioning.java.job.AbstractSchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -626,7 +627,9 @@ protected String createReport(\n     }\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         try {\n             Class<T> clazz = getTaskClassReference();\n             if (!clazz.isAssignableFrom(task.getClass())) {\n@@ -661,14 +664,15 @@ protected String doExecute(final boolean dryRun, final String executor) throws J\n                 return \"No provisions nor orgUnit available: aborting...\";\n             }\n \n-            return doExecuteProvisioning(provisioningTask, connector, dryRun, executor);\n+            return doExecuteProvisioning(provisioningTask, connector, dryRun, executor, context);\n         } catch (Throwable t) {\n             LOG.error(\"While executing provisioning job {}\", getClass().getName(), t);\n             throw t;\n         }\n     }\n \n-    protected abstract String doExecuteProvisioning(T task, Connector connector, boolean dryRun, String executor)\n+    protected abstract String doExecuteProvisioning(\n+            T task, Connector connector, boolean dryRun, String executor, JobExecutionContext context)\n             throws JobExecutionException;\n \n     @Override"},{"sha":"e056751b9a4aebe6aa01bdf67e2babee7a460005","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -66,6 +66,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n import org.apache.syncope.core.provisioning.java.DefaultProvisionSorter;\n import org.apache.syncope.core.spring.ImplementationManager;\n+import org.quartz.JobExecutionContext;\n \n public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> implements SyncopePullExecutor {\n \n@@ -188,7 +189,8 @@ protected String doExecuteProvisioning(\n             final PullTask pullTask,\n             final Connector connector,\n             final boolean dryRun,\n-            final String executor) throws JobExecutionException {\n+            final String executor,\n+            final JobExecutionContext context) throws JobExecutionException {\n \n         LOG.debug(\"Executing pull on {}\", pullTask.getResource());\n "},{"sha":"4e7c89590775034cd654f3ce318de0369c451003","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -57,6 +57,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n import org.apache.syncope.core.provisioning.java.DefaultProvisionSorter;\n import org.apache.syncope.core.spring.ImplementationManager;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n@@ -155,7 +156,8 @@ protected String doExecuteProvisioning(\n             final PushTask pushTask,\n             final Connector connector,\n             final boolean dryRun,\n-            final String executor) throws JobExecutionException {\n+            final String executor,\n+            final JobExecutionContext context) throws JobExecutionException {\n \n         LOG.debug(\"Executing push on {}\", pushTask.getResource());\n "},{"sha":"342327997af6e088257c4e32b2859f0d25bd8228","filename":"ext/elasticsearch/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/ElasticsearchReindex.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FElasticsearchReindex.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -31,6 +31,7 @@\n import org.elasticsearch.action.index.IndexResponse;\n import org.elasticsearch.client.RequestOptions;\n import org.elasticsearch.client.RestHighLevelClient;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -58,7 +59,9 @@ public class ElasticsearchReindex extends AbstractSchedTaskJobDelegate {\n     private AnyObjectDAO anyObjectDAO;\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         if (!dryRun) {\n             LOG.debug(\"Start rebuilding indexes\");\n "},{"sha":"6f95f0cd9173ec7ecf2e81be2d9e426f32c6be5f","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSampleJobDelegate.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb5ad48f787a8c685e0f1dd666879e67b66f4401/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb5ad48f787a8c685e0f1dd666879e67b66f4401/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSampleJobDelegate.java?ref=cb5ad48f787a8c685e0f1dd666879e67b66f4401","patch":"@@ -21,6 +21,7 @@\n import java.util.Date;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.java.job.AbstractSchedTaskJobDelegate;\n+import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n \n /**\n@@ -29,7 +30,9 @@\n public class TestSampleJobDelegate extends AbstractSchedTaskJobDelegate {\n \n     @Override\n-    protected String doExecute(final boolean dryRun, final String executor) throws JobExecutionException {\n+    protected String doExecute(final boolean dryRun, final String executor, final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n         for (int i = 0; i < 2; i++) {\n             LOG.debug(\"TestSampleJob#doExecute round {} time {}\", i, new Date().toString());\n             try {"}]}