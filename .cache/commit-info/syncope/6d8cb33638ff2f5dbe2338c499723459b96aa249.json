{"sha":"6d8cb33638ff2f5dbe2338c499723459b96aa249","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkOGNiMzM2MzhmZjJmNWRiZTIzMzhjNDk5NzIzNDU5Yjk2YWEyNDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-03T13:43:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-03T13:43:23Z"},"message":"[SYNCOPE-151] Completing all javadocs according to latest modifications in CXF-5353\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1555086 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0cecc42e0bbb3a11bfeefbcae4255a581f165266","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0cecc42e0bbb3a11bfeefbcae4255a581f165266"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d8cb33638ff2f5dbe2338c499723459b96aa249","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d8cb33638ff2f5dbe2338c499723459b96aa249","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d8cb33638ff2f5dbe2338c499723459b96aa249","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d8cb33638ff2f5dbe2338c499723459b96aa249/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb"}],"stats":{"total":2032,"additions":1315,"deletions":717},"files":[{"sha":"d26bbcdc86ad3d8f736cad0085aaaa5c539d5992","filename":"common/pom.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -88,6 +88,19 @@ under the License.\n \n   <build>\n     <plugins>\n+      <!-- Generating javadoc JAR artifact for usage with CXF's WADL generator -->\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-javadoc-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>attach-javadocs</id>\n+            <goals>\n+              <goal>jar</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>      \n       <plugin>\n         <groupId>org.apache.felix</groupId>\n         <artifactId>maven-bundle-plugin</artifactId>"},{"sha":"0acc20f96b32bc6df9bea019083b747193aa1ead","filename":"common/src/main/java/org/apache/syncope/common/mod/ResourceAssociationMod.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FResourceAssociationMod.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,8 +18,11 @@\n  */\r\n package org.apache.syncope.common.mod;\r\n \r\n+import com.fasterxml.jackson.annotation.JsonProperty;\r\n import java.util.ArrayList;\r\n import java.util.List;\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n@@ -41,7 +44,7 @@ public class ResourceAssociationMod extends AbstractBaseBean {\n     /**\r\n      * Target external resources.\r\n      */\r\n-    private List<ResourceName> targetResources;\r\n+    private final List<ResourceName> targetResources = new ArrayList<ResourceName>();\r\n \r\n     /**\r\n      * Indicate the willing to change password on target external resources.\r\n@@ -53,12 +56,9 @@ public class ResourceAssociationMod extends AbstractBaseBean {\n      */\r\n     private String password;\r\n \r\n-    public ResourceAssociationMod() {\r\n-        targetResources = new ArrayList<ResourceName>();\r\n-        changePwd = false;\r\n-        password = null;\r\n-    }\r\n-\r\n+    @XmlElementWrapper(name = \"resources\")\r\n+    @XmlElement(name = \"resource\")\r\n+    @JsonProperty(\"resources\")\r\n     public List<ResourceName> getTargetResources() {\r\n         return targetResources;\r\n     }\r"},{"sha":"320c327208ec812c8b6686f1df211771c41daf00","filename":"common/src/main/java/org/apache/syncope/common/reqres/BulkAssociationAction.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2FBulkAssociationAction.java?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.reqres;\n-\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.AbstractBaseBean;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n-\n-@XmlRootElement(name = \"bulkAssociationAction\")\n-@XmlType\n-public class BulkAssociationAction extends AbstractBaseBean {\n-\n-    private static final long serialVersionUID = 1395353278878758961L;\n-\n-    private ResourceDeAssociationActionType operation;\n-\n-    /**\n-     * Serialized identifiers.\n-     */\n-    private final List<Long> targets = new ArrayList<Long>();\n-\n-    public ResourceDeAssociationActionType getOperation() {\n-        return operation;\n-    }\n-\n-    public void setOperation(final ResourceDeAssociationActionType operation) {\n-        this.operation = operation;\n-    }\n-\n-    @XmlElementWrapper(name = \"targets\")\n-    @XmlElement(name = \"target\")\n-    @JsonProperty(\"targets\")\n-    public Collection<Long> getTargets() {\n-        return targets;\n-    }\n-}"},{"sha":"6f235995770eaf37b020ad6f4c8271baf2b0073a","filename":"common/src/main/java/org/apache/syncope/common/reqres/package-info.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Freqres%2Fpackage-info.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+@XmlSchema(namespace = SyncopeConstants.NAMESPACE)\n+package org.apache.syncope.common.reqres;\n+\n+import javax.xml.bind.annotation.XmlSchema;\n+import org.apache.syncope.common.SyncopeConstants;"},{"sha":"91129392a7e2e137d8f222894a7d5819efe171f1","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":52,"deletions":28,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -29,77 +29,101 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n import org.apache.syncope.common.to.ConfigurationTO;\r\n import org.apache.syncope.common.wrap.MailTemplate;\r\n import org.apache.syncope.common.wrap.Validator;\r\n \r\n+/**\r\n+ * REST operations for configuration.\r\n+ */\r\n @Path(\"configurations\")\r\n public interface ConfigurationService extends JAXRSService {\r\n \r\n     /**\r\n-     * Creates a new configuration element.\r\n+     * Exports internal storage content as downloadable XML file.\r\n      *\r\n-     * @param configurationTO Configuration to be stored.\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created configuration\r\n-     */\r\n-    @POST\r\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    Response create(ConfigurationTO configurationTO);\r\n-\r\n-    /**\r\n      * @return internal storage content as downloadable XML file\r\n      */\r\n     @GET\r\n     @Path(\"stream\")\r\n     Response export();\r\n \r\n     /**\r\n-     * @param key Deletes configuration with matching key.\r\n-     */\r\n-    @DELETE\r\n-    @Path(\"{key}\")\r\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    void delete(@PathParam(\"key\") String key);\r\n-\r\n-    /**\r\n-     * @return Returns a list of known mail-template names.\r\n+     * Returns a list of known mail-template names.\r\n+     *\r\n+     * @return a list of known mail-template names\r\n      */\r\n     @GET\r\n     @Path(\"mailTemplates\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<MailTemplate> getMailTemplates();\r\n \r\n     /**\r\n-     * @return Returns a list of known validator names.\r\n+     * Returns a list of known validator names.\r\n+     *\r\n+     * @return a list of known validator names\r\n      */\r\n     @GET\r\n     @Path(\"validators\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<Validator> getValidators();\r\n \r\n     /**\r\n-     * @return list of all configuration elements.\r\n+     * Returns configuration parameter with matching key.\r\n+     *\r\n+     * @param key identifier of configuration to be read\r\n+     * @return configuration parameter with matching key\r\n      */\r\n     @GET\r\n+    @Path(\"{key}\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    List<ConfigurationTO> list();\r\n+    ConfigurationTO read(@PathParam(\"key\") String key);\r\n \r\n     /**\r\n-     * @param key Identifier of configuration to be read.\r\n-     * @return configuration element with matching key.\r\n+     * Returns list of all configuration parameters.\r\n+     *\r\n+     * @return list of all configuration parameters\r\n      */\r\n     @GET\r\n-    @Path(\"{key}\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    ConfigurationTO read(@PathParam(\"key\") String key);\r\n+    List<ConfigurationTO> list();\r\n \r\n     /**\r\n-     * @param key Overwrites configuration element with matching key.\r\n-     * @param configurationTO New configuration\r\n+     * Creates a new configuration parameter.\r\n+     *\r\n+     * @param configurationTO Configuration to be stored.\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created configuration\r\n+     */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created configuration\")\r\n+    })\r\n+    @POST\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(ConfigurationTO configurationTO);\r\n+\r\n+    /**\r\n+     * Updates configuration parameter for the given key.\r\n+     *\r\n+     * @param key configuration parameter key\r\n+     * @param configurationTO new configuration\r\n      */\r\n     @PUT\r\n     @Path(\"{key}\")\r\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void update(@PathParam(\"key\") String key, ConfigurationTO configurationTO);\r\n+\r\n+    /**\r\n+     * Deletes configuration with matching key.\r\n+     *\r\n+     * @param key configuration parameter key\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{key}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    void delete(@PathParam(\"key\") String key);\r\n }\r"},{"sha":"b0e932ca1874796d5efe82bd2bf60ffed37e4d3d","filename":"common/src/main/java/org/apache/syncope/common/services/ConnectorService.java","status":"modified","additions":76,"deletions":30,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,8 +18,6 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import org.apache.syncope.common.reqres.BulkAction;\r\n-import org.apache.syncope.common.reqres.BulkActionResult;\r\n import java.util.List;\r\n import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n@@ -33,50 +31,49 @@\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n+\r\n+import org.apache.syncope.common.reqres.BulkAction;\r\n+import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.to.ConnBundleTO;\r\n import org.apache.syncope.common.to.ConnIdObjectClassTO;\r\n import org.apache.syncope.common.to.ConnInstanceTO;\r\n import org.apache.syncope.common.to.SchemaTO;\r\n import org.apache.syncope.common.types.ConnConfProperty;\r\n \r\n+/**\r\n+ * REST operations for connector bundles and instances.\r\n+ */\r\n @Path(\"connectors\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ConnectorService extends JAXRSService {\r\n \r\n     /**\r\n-     * Create a new connector instance.\r\n+     * Returns available connector bundles with property keys in selected language.\r\n      *\r\n-     * @param connInstanceTO connector instance to be created\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\r\n-     */\r\n-    @POST\r\n-    Response create(ConnInstanceTO connInstanceTO);\r\n-\r\n-    /**\r\n-     * @param connInstanceId connector instance id to be deleted\r\n-     */\r\n-    @DELETE\r\n-    @Path(\"{connInstanceId}\")\r\n-    void delete(@PathParam(\"connInstanceId\") Long connInstanceId);\r\n-\r\n-    /**\r\n      * @param lang language to select property keys; default language is English\r\n      * @return available connector bundles with property keys in selected language\r\n      */\r\n     @GET\r\n     @Path(\"bundles\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<ConnBundleTO> getBundles(@QueryParam(\"lang\") String lang);\r\n \r\n     /**\r\n+     * Returns configuration for given connector instance.\r\n+     *\r\n      * @param connInstanceId connector instance id to read configuration from\r\n-     * @return configuration for selected connector instance\r\n+     * @return configuration for given connector instance\r\n      */\r\n     @GET\r\n     @Path(\"{connInstanceId}/configuration\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<ConnConfProperty> getConfigurationProperties(@PathParam(\"connInstanceId\") Long connInstanceId);\r\n \r\n     /**\r\n+     * Returns schema names for connector bundle matching the given connector instance id.\r\n+     *\r\n      * @param connInstanceId connector instance id to be used for schema lookup\r\n      * @param connInstanceTO connector instance object to provide special configuration properties\r\n      * @param includeSpecial if set to true, special schema names (like '__PASSWORD__') will be included;\r\n@@ -85,59 +82,100 @@ public interface ConnectorService extends JAXRSService {\n      */\r\n     @POST\r\n     @Path(\"{connInstanceId}/schemaNames\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<SchemaTO> getSchemaNames(@PathParam(\"connInstanceId\") Long connInstanceId, ConnInstanceTO connInstanceTO,\r\n             @QueryParam(\"includeSpecial\") @DefaultValue(\"false\") boolean includeSpecial);\r\n \r\n     /**\r\n+     * Returns supported object classes for connector bundle matching the given connector instance id.\r\n+     *\r\n      * @param connInstanceId connector instance id to be used for schema lookup\r\n      * @param connInstanceTO connector instance object to provide special configuration properties\r\n      * @return supported object classes for connector bundle matching the given connector instance id\r\n      */\r\n     @POST\r\n     @Path(\"{connInstanceId}/supportedObjectClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<ConnIdObjectClassTO> getSupportedObjectClasses(@PathParam(\"connInstanceId\") Long connInstanceId,\r\n             ConnInstanceTO connInstanceTO);\r\n \r\n     /**\r\n-     * @param lang language to select property keys, null for default (English).\r\n-     * An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length. See the\r\n-     * java.util.Locale class description about valid language values.\r\n-     * @return list of all connector instances with property keys in the matching language\r\n-     * @see java.util.Locale\r\n-     */\r\n-    @GET\r\n-    List<ConnInstanceTO> list(@QueryParam(\"lang\") String lang);\r\n-\r\n-    /**\r\n+     * Returns connector instance with matching id.\r\n+     *\r\n      * @param connInstanceId connector instance id to be read\r\n      * @return connector instance with matching id\r\n      */\r\n     @GET\r\n     @Path(\"{connInstanceId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     ConnInstanceTO read(@PathParam(\"connInstanceId\") Long connInstanceId);\r\n \r\n     /**\r\n+     * Returns connector instance for matching resource.\r\n+     *\r\n      * @param resourceName resource name to be used for connector lookup\r\n      * @return connector instance for matching resource\r\n      */\r\n     @GET\r\n     @Path(\"byResource/{resourceName}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     ConnInstanceTO readByResource(@PathParam(\"resourceName\") String resourceName);\r\n \r\n     /**\r\n+     * @Returns a list of all connector instances with property keys in the matching language.\r\n+     *\r\n+     * @param lang language to select property keys, null for default (English).\r\n+     * An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.\r\n+     * @return list of all connector instances with property keys in the matching language\r\n+     */\r\n+    @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<ConnInstanceTO> list(@QueryParam(\"lang\") String lang);\r\n+\r\n+    /**\r\n+     * Creates a new connector instance.\r\n+     *\r\n+     * @param connInstanceTO connector instance to be created\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\r\n+     */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(ConnInstanceTO connInstanceTO);\r\n+\r\n+    /**\r\n+     * Updates the connector instance matching the provided id.\r\n+     *\r\n      * @param connInstanceId connector instance id to be updated\r\n      * @param connInstaceTO connector instance to be stored\r\n      */\r\n     @PUT\r\n     @Path(\"{connInstanceId}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void update(@PathParam(\"connInstanceId\") Long connInstanceId, ConnInstanceTO connInstaceTO);\r\n \r\n+    /**\r\n+     * Deletes the connector instance matching the provided id.\r\n+     *\r\n+     * @param connInstanceId connector instance id to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{connInstanceId}\")\r\n+    void delete(@PathParam(\"connInstanceId\") Long connInstanceId);\r\n+\r\n     /**\r\n      * @param connInstaceTO connector instance to be used for connection check\r\n      * @return true if connection could be established\r\n      */\r\n     @POST\r\n     @Path(\"check\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     boolean check(ConnInstanceTO connInstaceTO);\r\n \r\n     /**\r\n@@ -147,7 +185,15 @@ List<ConnIdObjectClassTO> getSupportedObjectClasses(@PathParam(\"connInstanceId\")\n     @Path(\"reload\")\r\n     void reload();\r\n \r\n+    /**\r\n+     * Executes the provided bulk action.\r\n+     *\r\n+     * @param bulkAction list of connector instance ids against which the bulk action will be performed.\r\n+     * @return Bulk action result\r\n+     */\r\n     @POST\r\n     @Path(\"bulk\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     BulkActionResult bulk(BulkAction bulkAction);\r\n }\r"},{"sha":"9fcf56803e807e686e9a02958d5f6268913e188a","filename":"common/src/main/java/org/apache/syncope/common/services/EntitlementService.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FEntitlementService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import javax.ws.rs.Consumes;\r\n \r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.Path;\r\n@@ -28,21 +27,28 @@\n \r\n import org.apache.syncope.common.wrap.EntitlementTO;\r\n \r\n+/**\r\n+ * REST operations for entitlements.\r\n+ */\r\n @Path(\"entitlements\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface EntitlementService extends JAXRSService {\r\n \r\n     /**\r\n-     * @return Returns a collection of all known entitlements.\r\n+     * Returns a list of all known entitlements.\r\n+     *\r\n+     * @return list of all known entitlements\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<EntitlementTO> getAllEntitlements();\r\n \r\n     /**\r\n-     * @return Returns a collection of entitlements assigned to user making this request (Service Call).\r\n+     * Returns a list of entitlements assigned to user making the current request.\r\n+     *\r\n+     * @return list of entitlements assigned to user making the current request\r\n      */\r\n     @GET\r\n     @Path(\"own\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<EntitlementTO> getOwnEntitlements();\r\n }\r"},{"sha":"c801bb1caf4b1de86321841e5a228542197424ca","filename":"common/src/main/java/org/apache/syncope/common/services/JAXRSService.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -20,20 +20,20 @@\n \n public interface JAXRSService {\n \n-    static final String PARAM_FIQL = \"fiql\";\n+    final String PARAM_FIQL = \"fiql\";\n \n-    static final String PARAM_PAGE = \"page\";\n+    final String PARAM_PAGE = \"page\";\n \n-    static final String DEFAULT_PARAM_PAGE = \"1\";\n+    final String DEFAULT_PARAM_PAGE = \"1\";\n \n-    static final int DEFAULT_PARAM_PAGE_VALUE = Integer.valueOf(DEFAULT_PARAM_PAGE);\n+    final int DEFAULT_PARAM_PAGE_VALUE = Integer.valueOf(DEFAULT_PARAM_PAGE);\n \n-    static final String PARAM_SIZE = \"size\";\n+    final String PARAM_SIZE = \"size\";\n \n-    static final String DEFAULT_PARAM_SIZE = \"25\";\n+    final String DEFAULT_PARAM_SIZE = \"25\";\n \n-    static final int DEFAULT_PARAM_SIZE_VALUE = Integer.valueOf(DEFAULT_PARAM_SIZE);\n+    final int DEFAULT_PARAM_SIZE_VALUE = Integer.valueOf(DEFAULT_PARAM_SIZE);\n \n-    static final String PARAM_ORDERBY = \"orderby\";\n+    final String PARAM_ORDERBY = \"orderby\";\n \n }"},{"sha":"1fb69c8950cdb9072e462d264ce8b3c00f68f57e","filename":"common/src/main/java/org/apache/syncope/common/services/LoggerService.java","status":"modified","additions":42,"deletions":23,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -19,60 +19,79 @@\n package org.apache.syncope.common.services;\r\n \r\n import java.util.List;\r\n-import javax.ws.rs.Consumes;\r\n \r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n-import org.apache.syncope.common.to.EventCategoryTO;\r\n \r\n+import org.apache.syncope.common.to.EventCategoryTO;\r\n import org.apache.syncope.common.to.LoggerTO;\r\n import org.apache.syncope.common.types.LoggerType;\r\n \r\n+/**\r\n+ * REST operations for logging and auditing.\r\n+ */\r\n @Path(\"logger\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface LoggerService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param type LoggerType to be selected.\r\n-     * @param name Logger name to be deleted.\r\n+     * Returns a list of all managed events in audit.\r\n+     *\r\n+     * @return list of all managed events in audit\r\n      */\r\n-    @DELETE\r\n-    @Path(\"{type}/{name}\")\r\n-    void delete(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name);\r\n+    @GET\r\n+    @Path(\"events\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<EventCategoryTO> events();\r\n \r\n     /**\r\n+     * Returns logger with matching type and name.\r\n+     *\r\n      * @param type LoggerType to be selected.\r\n-     * @return List of logger with matching type.\r\n+     * @param name Logger name to be read\r\n+     * @return logger with matching type and name\r\n      */\r\n     @GET\r\n-    @Path(\"{type}\")\r\n-    List<LoggerTO> list(@PathParam(\"type\") LoggerType type);\r\n+    @Path(\"{type}/{name}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    LoggerTO read(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") final String name);\r\n \r\n     /**\r\n-     * @param type LoggerType to be selected.\r\n-     * @param name Logger name to be read.\r\n-     * @return Returns logger with matching type and name.\r\n+     * Returns a list of loggers with matching type.\r\n+     *\r\n+     * @param type LoggerType to be selected\r\n+     * @return list of loggers with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{type}/{name}\")\r\n-    LoggerTO read(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") final String name);\r\n+    @Path(\"{type}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<LoggerTO> list(@PathParam(\"type\") LoggerType type);\r\n \r\n     /**\r\n-     * @param type LoggerType to be selected.\r\n-     * @param name Logger name to be updated.\r\n-     * @param logger Logger to be created or updated.\r\n+     * Creates or updates (if existing) the logger with matching name.\r\n+     *\r\n+     * @param type LoggerType to be selected\r\n+     * @param name Logger name to be updated\r\n+     * @param logger Logger to be created or updated\r\n      */\r\n     @PUT\r\n     @Path(\"{type}/{name}/level\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void update(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name, LoggerTO logger);\r\n \r\n-    @GET\r\n-    @Path(\"events\")\r\n-    List<EventCategoryTO> events();\r\n+    /**\r\n+     * Deletes the logger with matching name.\r\n+     *\r\n+     * @param type LoggerType to be selected\r\n+     * @param name Logger name to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{type}/{name}\")\r\n+    void delete(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name);\r\n+\r\n }\r"},{"sha":"731b4125b07c10c6511f280013c4fb5f77f87341","filename":"common/src/main/java/org/apache/syncope/common/services/NotificationService.java","status":"modified","additions":41,"deletions":20,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -29,48 +29,69 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n \r\n import org.apache.syncope.common.to.NotificationTO;\r\n \r\n+/**\r\n+ * REST operations for notifications.\r\n+ */\r\n @Path(\"notifications\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface NotificationService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param notificationTO Creates a new notification.\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\r\n-     */\r\n-    @POST\r\n-    Response create(NotificationTO notificationTO);\r\n-\r\n-    /**\r\n-     * @param notificationId ID for notification to be deleted.\r\n+     * Returns notification with matching id.\r\n+     *\r\n+     * @param notificationId id of notification to be read\r\n+     * @return notification with matching id\r\n      */\r\n-    @DELETE\r\n+    @GET\r\n     @Path(\"{notificationId}\")\r\n-    void delete(@PathParam(\"notificationId\") Long notificationId);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    NotificationTO read(@PathParam(\"notificationId\") Long notificationId);\r\n \r\n     /**\r\n-     * @return Returns list of all notifications.\r\n+     * Returns a list of all notifications.\r\n+     *\r\n+     * @return list of all notifications.\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<NotificationTO> list();\r\n \r\n     /**\r\n-     * @param notificationId ID of notification to be read.\r\n-     * @return Notification with matching id.\r\n+     * Creates a new notification.\r\n+     *\r\n+     * @param notificationTO Creates a new notification.\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\r\n      */\r\n-    @GET\r\n-    @Path(\"{notificationId}\")\r\n-    NotificationTO read(@PathParam(\"notificationId\") Long notificationId);\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created notification\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(NotificationTO notificationTO);\r\n \r\n     /**\r\n-     * @param notificationId ID of notification to be updated.\r\n-     * @param notificationTO Notification to be stored.\r\n+     * Updates the notification matching the given id.\r\n+     *\r\n+     * @param notificationId id of notification to be updated\r\n+     * @param notificationTO notification to be stored\r\n      */\r\n     @PUT\r\n     @Path(\"{notificationId}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void update(@PathParam(\"notificationId\") Long notificationId, NotificationTO notificationTO);\r\n \r\n+    /**\r\n+     * Deletes the notification matching the given id.\r\n+     *\r\n+     * @param notificationId id for notification to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{notificationId}\")\r\n+    void delete(@PathParam(\"notificationId\") Long notificationId);\r\n }\r"},{"sha":"aba25ea461d0eff6b76f8c3d2e59dd3d4cecf4c5","filename":"common/src/main/java/org/apache/syncope/common/services/PolicyService.java","status":"modified","additions":56,"deletions":27,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FPolicyService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -30,70 +30,99 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n import org.apache.syncope.common.wrap.CorrelationRuleClass;\r\n import org.apache.syncope.common.to.AbstractPolicyTO;\r\n import org.apache.syncope.common.types.PolicyType;\r\n \r\n+/**\r\n+ * REST operations for policies.\r\n+ */\r\n @Path(\"policies\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface PolicyService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param policyTO Policy to be created (needs to match type)\r\n-     * @param <T> response type (extending PolicyTO)\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\r\n+     * Returns a list of classes to be used as correlation rules.\r\n+     *\r\n+     * @return list of classes to be used as correlation rules\r\n      */\r\n-    @POST\r\n-    <T extends AbstractPolicyTO> Response create(T policyTO);\r\n+    @GET\r\n+    @Path(\"syncCorrelationRuleClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<CorrelationRuleClass> getSyncCorrelationRuleClasses();\r\n \r\n     /**\r\n-     * @param policyId Deletes policy with given id\r\n+     * Returns the policy matching the given id.\r\n+     *\r\n+     * @param policyId id of requested policy\r\n      * @param <T> response type (extending PolicyTO)\r\n+     * @return policy with matching id\r\n      */\r\n-    @DELETE\r\n+    @GET\r\n     @Path(\"{policyId}\")\r\n-    <T extends AbstractPolicyTO> void delete(@PathParam(\"policyId\") Long policyId);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractPolicyTO> T read(@PathParam(\"policyId\") Long policyId);\r\n \r\n     /**\r\n-     * @param type Type selector for requested policies\r\n+     * Returns the global policy for the given type.\r\n+     *\r\n+     * @param type PolicyType to read global policy from\r\n      * @param <T> response type (extending PolicyTO)\r\n-     * @return List of policies with matching type\r\n+     * @return global policy for matching type\r\n      */\r\n     @GET\r\n-    <T extends AbstractPolicyTO> List<T> list(@MatrixParam(\"type\") PolicyType type);\r\n+    @Path(\"global\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractPolicyTO> T readGlobal(@MatrixParam(\"type\") PolicyType type);\r\n \r\n     /**\r\n-     * @param policyId ID of requested policy\r\n+     * Returns a list of policies of the matching type.\r\n+     *\r\n+     * @param type Type selector for requested policies\r\n      * @param <T> response type (extending PolicyTO)\r\n-     * @return policy with matching id\r\n+     * @return list of policies with matching type\r\n      */\r\n     @GET\r\n-    @Path(\"{policyId}\")\r\n-    <T extends AbstractPolicyTO> T read(@PathParam(\"policyId\") Long policyId);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractPolicyTO> List<T> list(@MatrixParam(\"type\") PolicyType type);\r\n \r\n     /**\r\n-     * @param type PolicyType to read global policy from\r\n+     * Create a new policy.\r\n+     *\r\n+     * @param policyTO Policy to be created (needs to match type)\r\n      * @param <T> response type (extending PolicyTO)\r\n-     * @return Global Policy for matching type\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\r\n      */\r\n-    @GET\r\n-    @Path(\"global\")\r\n-    <T extends AbstractPolicyTO> T readGlobal(@MatrixParam(\"type\") PolicyType type);\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created policy\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractPolicyTO> Response create(T policyTO);\r\n \r\n     /**\r\n-     * @param policyId ID of policy to be updated\r\n+     * Updates policy matching the given id.\r\n+     *\r\n+     * @param policyId id of policy to be updated\r\n      * @param policyTO Policy to replace existing policy\r\n      * @param <T> response type (extending PolicyTO)\r\n      */\r\n     @PUT\r\n     @Path(\"{policyId}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractPolicyTO> void update(@PathParam(\"policyId\") Long policyId, T policyTO);\r\n \r\n     /**\r\n-     * @return correlation rules java classes\r\n+     * Delete policy matching the given id.\r\n+     *\r\n+     * @param policyId id of policy to be deleted\r\n+     * @param <T> response type (extending PolicyTO)\r\n      */\r\n-    @GET\r\n-    @Path(\"syncCorrelationRuleClasses\")\r\n-    List<CorrelationRuleClass> getSyncCorrelationRuleClasses();\r\n+    @DELETE\r\n+    @Path(\"{policyId}\")\r\n+    <T extends AbstractPolicyTO> void delete(@PathParam(\"policyId\") Long policyId);\r\n+\r\n }\r"},{"sha":"de65f3a7a207495ec9ff2c8adeba57f6126dc1da","filename":"common/src/main/java/org/apache/syncope/common/services/ReportService.java","status":"modified","additions":104,"deletions":57,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FReportService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,7 +18,6 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import org.apache.syncope.common.reqres.PagedResult;\r\n import java.util.List;\r\n import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n@@ -32,116 +31,164 @@\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n+import org.apache.syncope.common.reqres.PagedResult;\r\n import org.apache.syncope.common.to.ReportExecTO;\r\n import org.apache.syncope.common.to.ReportTO;\r\n import org.apache.syncope.common.types.ReportExecExportFormat;\r\n import org.apache.syncope.common.wrap.ReportletConfClass;\r\n \r\n+/**\r\n+ * REST operations for reports.\r\n+ */\r\n @Path(\"reports\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ReportService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param reportTO Report to be created\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\r\n-     */\r\n-    @POST\r\n-    Response create(ReportTO reportTO);\r\n-\r\n-    /**\r\n-     * @param reportId Deletes report with matching id\r\n+     * Returns a list of available classes for reportlet configuration.\r\n+     *\r\n+     * @return list of available classes for reportlet configuration\r\n      */\r\n-    @DELETE\r\n-    @Path(\"{reportId}\")\r\n-    void delete(@PathParam(\"reportId\") Long reportId);\r\n-\r\n-    /**\r\n-     * @param executionId ID of execution report to be deleted\r\n-     */\r\n-    @DELETE\r\n-    @Path(\"executions/{executionId}\")\r\n-    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n-\r\n-    /**\r\n-     * @param reportId ID of report to be executed.\r\n-     * @return Execution result\r\n-     */\r\n-    @POST\r\n-    @Path(\"{reportId}/execute\")\r\n-    ReportExecTO execute(@PathParam(\"reportId\") Long reportId);\r\n+    @GET\r\n+    @Path(\"reportletConfClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<ReportletConfClass> getReportletConfClasses();\r\n \r\n     /**\r\n-     * @param executionId ID of execution report to be selected\r\n-     * @param fmt file-format selection\r\n-     * @return Returns a stream for content download\r\n+     * Returns report with matching id.\r\n+     *\r\n+     * @param reportId id of report to be read\r\n+     * @return report with matching id\r\n      */\r\n     @GET\r\n-    @Path(\"executions/{executionId}/stream\")\r\n-    Response exportExecutionResult(@PathParam(\"executionId\") Long executionId,\r\n-            @QueryParam(\"format\") ReportExecExportFormat fmt);\r\n+    @Path(\"{reportId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    ReportTO read(@PathParam(\"reportId\") Long reportId);\r\n \r\n     /**\r\n-     * @return Returns a list of all reportletConfClasses\r\n+     * Returns report execution with matching id.\r\n+     *\r\n+     * @param executionId report execution id to be selected\r\n+     * @return report execution with matching id\r\n      */\r\n     @GET\r\n-    @Path(\"reportletConfClasses\")\r\n-    List<ReportletConfClass> getReportletConfClasses();\r\n+    @Path(\"executions/{executionId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    ReportExecTO readExecution(@PathParam(\"executionId\") Long executionId);\r\n \r\n     /**\r\n-     * @return Paged list of all existing reports\r\n+     * Returns a paged list of all existing reports.\r\n+     *\r\n+     * @return paged list of all existing reports\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<ReportTO> list();\r\n \r\n     /**\r\n+     * Returns a paged list of all existing reports.\r\n+     *\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of all existing reports\r\n+     * @return paged list of all existing reports\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<ReportTO> list(@QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n+     * Returns a paged list of all existing reports matching page/size conditions.\r\n+     *\r\n      * @param page selected page in relation to size\r\n      * @param size number of entries per page\r\n-     * @return Paged list of existing reports matching page/size conditions\r\n+     * @return paged list of existing reports matching page/size conditions\r\n      */\r\n     @GET\r\n-    PagedResult<ReportTO> list(@QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    PagedResult<ReportTO> list(\r\n+            @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\r\n \r\n     /**\r\n+     * Returns a paged list of all existing reports matching page/size conditions.\r\n+     *\r\n      * @param page selected page in relation to size\r\n      * @param size number of entries per page\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of existing reports matching page/size conditions\r\n+     * @return paged list of existing reports matching page/size conditions\r\n      */\r\n     @GET\r\n-    PagedResult<ReportTO> list(@QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    PagedResult<ReportTO> list(\r\n+            @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\r\n             @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n-     * @param reportId ID of report to be read\r\n-     * @return Report with matching ID\r\n+     * Creates a new report.\r\n+     *\r\n+     * @param reportTO report to be created\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\r\n      */\r\n-    @GET\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created report\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(ReportTO reportTO);\r\n+\r\n+    /**\r\n+     * Updates report with matching id.\r\n+     *\r\n+     * @param reportId id for report to be updated\r\n+     * @param reportTO report to be stored\r\n+     */\r\n+    @PUT\r\n     @Path(\"{reportId}\")\r\n-    ReportTO read(@PathParam(\"reportId\") Long reportId);\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    void update(@PathParam(\"reportId\") Long reportId, ReportTO reportTO);\r\n \r\n     /**\r\n-     * @param executionId ID ExecutionReport to be selected\r\n-     * @return Returns ExecutionReport with matching id\r\n+     * Deletes report with matching id.\r\n+     *\r\n+     * @param reportId Deletes report with matching id\r\n      */\r\n-    @GET\r\n+    @DELETE\r\n+    @Path(\"{reportId}\")\r\n+    void delete(@PathParam(\"reportId\") Long reportId);\r\n+\r\n+    /**\r\n+     * Deletes report execution with matching id.\r\n+     *\r\n+     * @param executionId id of execution report to be deleted\r\n+     */\r\n+    @DELETE\r\n     @Path(\"executions/{executionId}\")\r\n-    ReportExecTO readExecution(@PathParam(\"executionId\") Long executionId);\r\n+    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n \r\n     /**\r\n-     * @param reportId ID for report to be updated\r\n-     * @param reportTO Updates report with matching reportId\r\n+     * Executes the report with matching id.\r\n+     *\r\n+     * @param reportId id of report to be executed\r\n+     * @return report execution result\r\n      */\r\n-    @PUT\r\n-    @Path(\"{reportId}\")\r\n-    void update(@PathParam(\"reportId\") Long reportId, ReportTO reportTO);\r\n+    @POST\r\n+    @Path(\"{reportId}/execute\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    ReportExecTO execute(@PathParam(\"reportId\") Long reportId);\r\n+\r\n+    /**\r\n+     * Exports the report execution with matching id in the requested format.\r\n+     *\r\n+     * @param executionId id of execution report to be selected\r\n+     * @param fmt file-format selection\r\n+     * @return a stream for content download\r\n+     */\r\n+    @GET\r\n+    @Path(\"executions/{executionId}/stream\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response exportExecutionResult(@PathParam(\"executionId\") Long executionId,\r\n+            @QueryParam(\"format\") ReportExecExportFormat fmt);\r\n }\r"},{"sha":"091de1a541ec81e46de486bfd8a6254b4df051c7","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":104,"deletions":43,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,9 +18,6 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import org.apache.syncope.common.reqres.BulkAssociationAction;\r\n-import org.apache.syncope.common.reqres.BulkAction;\r\n-import org.apache.syncope.common.reqres.BulkActionResult;\r\n import java.util.List;\r\n import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n@@ -33,91 +30,155 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n+\r\n+import org.apache.syncope.common.reqres.BulkAction;\r\n+import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n-import org.apache.syncope.common.wrap.PropagationActionClass;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n+import org.apache.syncope.common.wrap.PropagationActionClass;\r\n+import org.apache.syncope.common.wrap.SubjectId;\r\n \r\n+/**\r\n+ * REST operations for external resources.\r\n+ */\r\n @Path(\"resources\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface ResourceService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param resourceTO Resource to be checked\r\n-     * @return Returns true, if connection to resource could be established\r\n-     */\r\n-    @POST\r\n-    @Path(\"check\")\r\n-    boolean check(ResourceTO resourceTO);\r\n-\r\n-    /**\r\n-     * @param resourceTO Resource to be created\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\r\n-     */\r\n-    @POST\r\n-    Response create(ResourceTO resourceTO);\r\n-\r\n-    /**\r\n-     * @param resourceName Name of resource to be deleted\r\n-     */\r\n-    @DELETE\r\n-    @Path(\"{resourceName}\")\r\n-    void delete(@PathParam(\"resourceName\") String resourceName);\r\n-\r\n-    /**\r\n+     * Returns connector object from the external resource, for the given type and id.\r\n+     *\r\n      * @param resourceName Name of resource to read connector object from\r\n      * @param type user / role\r\n      * @param id user id / role id\r\n      * @return connector object from the external resource, for the given type and id\r\n      */\r\n     @GET\r\n     @Path(\"{resourceName}/{type}/{id}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\r\n             @PathParam(\"type\") AttributableType type, @PathParam(\"id\") Long id);\r\n \r\n     /**\r\n-     * @return Returns PropagationActionsClasses\r\n+     * Returns a list of classes that can be used to customize the propagation process.\r\n+     *\r\n+     * @return list of classes that can be used to customize the propagation process\r\n      */\r\n     @GET\r\n     @Path(\"propagationActionsClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<PropagationActionClass> getPropagationActionsClasses();\r\n \r\n     /**\r\n-     * @return Returns list of all Resources\r\n+     * Returns the resource with matching name.\r\n+     *\r\n+     * @param resourceName Name of resource to be read\r\n+     * @return resource with matching name\r\n+     */\r\n+    @GET\r\n+    @Path(\"{resourceName}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    ResourceTO read(@PathParam(\"resourceName\") String resourceName);\r\n+\r\n+    /**\r\n+     * Returns a list of all resources.\r\n+     *\r\n+     * @return list of all resources\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<ResourceTO> list();\r\n \r\n     /**\r\n+     * Returns a list of resources using matching connector instance id.\r\n+     *\r\n      * @param connInstanceId Connector id to filter for resources\r\n-     * @return Returns all resources using matching connector\r\n+     * @return resources using matching connector instance id\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<ResourceTO> list(@MatrixParam(\"connectorId\") Long connInstanceId);\r\n \r\n     /**\r\n-     * @param resourceName Name of resource to be read\r\n-     * @return Resource with matching name\r\n+     * Creates a new resource.\r\n+     *\r\n+     * @param resourceTO Resource to be created\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created resource\r\n      */\r\n-    @GET\r\n-    @Path(\"{resourceName}\")\r\n-    ResourceTO read(@PathParam(\"resourceName\") String resourceName);\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created resource\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(ResourceTO resourceTO);\r\n \r\n     /**\r\n-     * @param resourceName Name of resource to be updated\r\n-     * @param resourceTO Resource to be stored\r\n+     * Updates the resource matching the given name.\r\n+     *\r\n+     * @param resourceName name of resource to be updated\r\n+     * @param resourceTO resource to be stored\r\n      */\r\n     @PUT\r\n     @Path(\"{resourceName}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void update(@PathParam(\"resourceName\") String resourceName, ResourceTO resourceTO);\r\n \r\n+    /**\r\n+     * Deletes the resource matching the given name.\r\n+     *\r\n+     * @param resourceName name of resource to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{resourceName}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    void delete(@PathParam(\"resourceName\") String resourceName);\r\n+\r\n+    /**\r\n+     * Checks wether the connection to resource could be established.\r\n+     *\r\n+     * @param resourceTO resource to be checked\r\n+     * @return true if connection to resource could be established\r\n+     */\r\n     @POST\r\n-    @Path(\"bulk\")\r\n-    BulkActionResult bulk(BulkAction bulkAction);\r\n+    @Path(\"check\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    boolean check(ResourceTO resourceTO);\r\n \r\n+    /**\r\n+     * De-associate users or roles (depending on the provided attributable type) from the given resource.\r\n+     *\r\n+     * @param resourceName name of resource\r\n+     * @param attrType attributable type (user or role)\r\n+     * @param type resource de-association action type\r\n+     * @param subjectIds users or roles against which the bulk action will be performed\r\n+     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\r\n+     */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\r\n+    })\r\n     @POST\r\n-    @Path(\"{resourceName}/bulkAssociation/{type}\")\r\n-    BulkActionResult bulkAssociation(@PathParam(\"resourceName\") String resourceName,\r\n-            BulkAssociationAction bulkAssociationAction, @PathParam(\"type\") AttributableType type);\r\n+    @Path(\"{resourceName}/bulkDeassociation/{attrType}/{type}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    BulkActionResult bulkDeassociation(@PathParam(\"resourceName\") String resourceName,\r\n+            @PathParam(\"attrType\") AttributableType attrType,\r\n+            @PathParam(\"type\") ResourceDeassociationActionType type, List<SubjectId> subjectIds);\r\n+\r\n+    /**\r\n+     * Executes the provided bulk action.\r\n+     *\r\n+     * @param bulkAction list of resource names against which the bulk action will be performed\r\n+     * @return Bulk action result\r\n+     */\r\n+    @POST\r\n+    @Path(\"bulk\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    BulkActionResult bulk(BulkAction bulkAction);\r\n }\r"},{"sha":"bbfcd27e08e9a1567d80b814d669c48ddbcfac02","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":146,"deletions":60,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,7 +18,6 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import org.apache.syncope.common.reqres.PagedResult;\r\n import java.util.List;\r\n import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n@@ -31,179 +30,266 @@\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n \r\n+import org.apache.syncope.common.reqres.PagedResult;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.to.RoleTO;\r\n import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\r\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n import org.apache.syncope.common.wrap.ResourceName;\r\n \r\n+/**\r\n+ * REST operations for roles.\r\n+ */\r\n @Path(\"roles\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface RoleService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param roleId ID of role to get children from\r\n-     * @return Returns list of children for selected role\r\n+     * Returns children roles of given role.\r\n+     *\r\n+     * @param roleId id of role to get children from\r\n+     * @return children roles of given role\r\n      */\r\n     @GET\r\n     @Path(\"{roleId}/children\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     List<RoleTO> children(@PathParam(\"roleId\") Long roleId);\r\n \r\n     /**\r\n-     * @param roleTO Role to be created\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role as well as the role itself\r\n-     * enriched with propagation status information, as <tt>Entity</tt>\r\n+     * Returns parent role of the given role (or null if no parent exists).\r\n+     *\r\n+     * @param roleId id of role to get parent role from\r\n+     * @return parent role of the given role (or null if no parent exists)\r\n      */\r\n-    @POST\r\n-    Response create(RoleTO roleTO);\r\n+    @GET\r\n+    @Path(\"{roleId}/parent\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    RoleTO parent(@PathParam(\"roleId\") Long roleId);\r\n \r\n     /**\r\n-     * @param roleId ID of role to be deleted\r\n-     * @return <tt>Response</tt> object featuring the deleted role enriched with propagation status information,\r\n-     * as <tt>Entity</tt>\r\n+     * Reads the role matching the provided roleId.\r\n+     *\r\n+     * @param roleId id of role to be read\r\n+     * @return role with matching id\r\n      */\r\n-    @DELETE\r\n+    @GET\r\n     @Path(\"{roleId}\")\r\n-    Response delete(@PathParam(\"roleId\") Long roleId);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    RoleTO read(@PathParam(\"roleId\") Long roleId);\r\n \r\n     /**\r\n-     * @return Paged list of all existing roles\r\n+     * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\r\n+     * can read his own roles.\r\n+     *\r\n+     * @param roleId id of role to be read\r\n+     * @return role with matching id\r\n      */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.METHOD,\r\n+                value = \"This method is similar to <tt>read()</tt>, but uses different authentication handling to \"\r\n+                + \"ensure that a user can read his own roles.\")\r\n+    })\r\n     @GET\r\n+    @Path(\"{roleId}/own\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    RoleTO readSelf(@PathParam(\"roleId\") Long roleId);\r\n+\r\n+    /**\r\n+     * Returns a paged list of existing roles.\r\n+     *\r\n+     * @return paged list of all existing roles\r\n+     */\r\n+    @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> list();\r\n \r\n     /**\r\n+     * Returns a paged list of existing roles.\r\n+     *\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of all existing roles\r\n+     * @return paged list of all existing roles\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> list(@QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n+     * Returns a paged list of existing roles matching page/size conditions.\r\n+     *\r\n      * @param page result page number\r\n      * @param size number of entries per page\r\n-     * @return Paged list of existing roles matching page/size conditions\r\n+     * @return paged list of existing roles matching page/size conditions\r\n      */\r\n     @GET\r\n-    PagedResult<RoleTO> list(@QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    PagedResult<RoleTO> list(\r\n+            @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\r\n \r\n     /**\r\n+     * Returns a paged list of existing roles matching page/size conditions.\r\n+     *\r\n      * @param page result page number\r\n      * @param size number of entries per page\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of existing roles matching page/size conditions\r\n+     * @return paged list of existing roles matching page/size conditions\r\n      */\r\n     @GET\r\n-    PagedResult<RoleTO> list(@QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    PagedResult<RoleTO> list(\r\n+            @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\r\n             @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n-     * @param roleId Id of role to get parent role from\r\n-     * @return Returns parent role or null if no parent exists\r\n-     */\r\n-    @GET\r\n-    @Path(\"{roleId}/parent\")\r\n-    RoleTO parent(@PathParam(\"roleId\") Long roleId);\r\n-\r\n-    /**\r\n-     * @param roleId ID of role to be read\r\n-     * @return Returns role with matching id\r\n-     */\r\n-    @GET\r\n-    @Path(\"{roleId}\")\r\n-    RoleTO read(@PathParam(\"roleId\") Long roleId);\r\n-\r\n-    /**\r\n+     * Returns a paged list of roles matching the provided FIQL search condition.\r\n+     *\r\n      * @param fiql FIQL search expression\r\n-     * @return Paged list of roles matching the provided FIQL search condition\r\n+     * @return paged list of roles matching the provided FIQL search condition\r\n      */\r\n     @GET\r\n     @Path(\"search\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql);\r\n \r\n     /**\r\n+     * Returns a paged list of roles matching the provided FIQL search condition.\r\n+     *\r\n      * @param fiql FIQL search expression\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of roles matching the provided FIQL search condition\r\n+     * @return paged list of roles matching the provided FIQL search condition\r\n      */\r\n     @GET\r\n     @Path(\"search\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql, @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n+     * Returns a paged list of roles matching the provided FIQL search condition.\r\n+     *\r\n      * @param fiql FIQL search expression\r\n      * @param page result page number\r\n      * @param size number of entries per page\r\n-     * @return Paged list of roles matching the provided FIQL search condition\r\n+     * @return paged list of roles matching the provided FIQL search condition\r\n      */\r\n     @GET\r\n     @Path(\"search\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\r\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\r\n \r\n     /**\r\n+     * Returns a paged list of roles matching the provided FIQL search condition.\r\n+     *\r\n      * @param fiql FIQL search expression\r\n      * @param page result page number\r\n      * @param size number of entries per page\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n-     * @return Paged list of roles matching the provided FIQL search condition\r\n+     * @return paged list of roles matching the provided FIQL search condition\r\n      */\r\n     @GET\r\n     @Path(\"search\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\r\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\r\n             @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n-     * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\r\n-     * can read his own roles.\r\n+     * Creates a new role.\r\n      *\r\n-     * @param roleId ID of role to be read\r\n-     * @return Returns role with matching id\r\n+     * @param roleTO role to be created\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role as well as the role itself\r\n+     * enriched with propagation status information - {@link RoleTO} as <tt>Entity</tt>\r\n      */\r\n-    @GET\r\n-    @Path(\"{roleId}/own\")\r\n-    RoleTO readSelf(@PathParam(\"roleId\") Long roleId);\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created role as well as the \"\r\n+                + \"role itself enriched with propagation status information - <tt>RoleTO</tt> as <tt>Entity</tt>\")\r\n+    })\r\n+    @POST\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response create(RoleTO roleTO);\r\n \r\n     /**\r\n-     * @param roleId ID of role to be updated\r\n-     * @param roleMod Role object containing list of changes to be applied for selected role\r\n-     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information,\r\n-     * as <tt>Entity</tt>\r\n+     * Updates role matching the provided roleId.\r\n+     *\r\n+     * @param roleId id of role to be updated\r\n+     * @param roleMod modification to be applied to role matching the provided roleId\r\n+     * @return <tt>Response</tt> object featuring the updated role enriched with propagation status information\r\n+     * - {@link RoleTO} as <tt>Entity</tt>\r\n      */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring the updated role enriched with propagation status \"\r\n+                + \"information - <tt>RoleTO</tt> as <tt>Entity</tt>\")\r\n+    })\r\n     @POST\r\n     @Path(\"{roleId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     Response update(@PathParam(\"roleId\") Long roleId, RoleMod roleMod);\r\n \r\n+    /**\r\n+     * Deletes role matching provided roleId.\r\n+     *\r\n+     * @param roleId id of role to be deleted\r\n+     * @return <tt>Response</tt> object featuring the deleted role enriched with propagation status information\r\n+     * - {@link RoleTO} as <tt>Entity</tt>\r\n+     */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring the deleted role enriched with propagation status \"\r\n+                + \"information - <tt>RoleTO</tt> as <tt>Entity</tt>\")\r\n+    })\r\n+    @DELETE\r\n+    @Path(\"{roleId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response delete(@PathParam(\"roleId\") Long roleId);\r\n+\r\n     /**\r\n      * Executes resource-related operations on given role.\r\n      *\r\n      * @param roleId role id.\r\n      * @param type resource association action type\r\n      * @param resourceNames external resources to be used for propagation-related operations\r\n-     * @return <tt>Response</tt> object featuring the bulk action result\r\n+     * @return <tt>Response</tt> object featuring\r\n+     * {@link org.apache.syncope.common.reqres.BulkActionResult} as <tt>Entity</tt>\r\n      */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\r\n+    })\r\n     @POST\r\n     @Path(\"{roleId}/deassociate/{type}\")\r\n-    Response bulkDeassociation(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceDeAssociationActionType type,\r\n-            List<ResourceName> resourceNames);\r\n-    \r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response bulkDeassociation(@PathParam(\"roleId\") Long roleId,\r\n+            @PathParam(\"type\") ResourceDeassociationActionType type, List<ResourceName> resourceNames);\r\n+\r\n     /**\r\n      * Executes resource-related operations on given role.\r\n      *\r\n      * @param roleId role id.\r\n      * @param type resource association action type\r\n      * @param resourceNames external resources to be used for propagation-related operations\r\n-     * @return <tt>Response</tt> object featuring the bulk action result\r\n+     * @return <tt>Response</tt> object featuring {@link org.apache.syncope.common.reqres.BulkActionResult}\r\n+     * as <tt>Entity</tt>\r\n      */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\r\n+    })\r\n     @POST\r\n     @Path(\"{roleId}/associate/{type}\")\r\n-    Response bulkAssociation(@PathParam(\"roleId\") Long roleId, @PathParam(\"type\") ResourceAssociationActionType type,\r\n-            List<ResourceName> resourceNames);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    Response bulkAssociation(@PathParam(\"roleId\") Long roleId,\r\n+            @PathParam(\"type\") ResourceAssociationActionType type, List<ResourceName> resourceNames);\r\n }\r"},{"sha":"3d098b9e6132fef291803d44a15bb7ff8f402d2e","filename":"common/src/main/java/org/apache/syncope/common/services/SchemaService.java","status":"modified","additions":55,"deletions":33,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FSchemaService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -29,67 +29,89 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n import org.apache.syncope.common.to.AbstractSchemaTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.SchemaType;\r\n \r\n+/**\r\n+ * REST operations for attribute schemas.\r\n+ */\r\n @Path(\"schemas/{kind}/{type}\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface SchemaService extends JAXRSService {\r\n \r\n     /**\r\n+     * Returns schema matching the given kind, type and name.\r\n+     *\r\n      * @param <T> actual SchemaTO\r\n-     * @param attrType Kind for schema to be created\r\n-     * @param schemaType Type for schema to be created\r\n-     * @param schemaTO Schema to be created\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\r\n-     */\r\n-    @POST\r\n-    <T extends AbstractSchemaTO> Response create(@PathParam(\"kind\") AttributableType attrType,\r\n-            @PathParam(\"type\") SchemaType schemaType, T schemaTO);\r\n-\r\n-    /**\r\n-     * @param attrType Kind for schema to be deleted\r\n-     * @param schemaType Type for schema to be deleted\r\n-     * @param schemaName Name of schema to be deleted\r\n+     * @param attrType kind for schemas to be read\r\n+     * @param schemaType type for schemas to be read\r\n+     * @param schemaName name of schema to be read\r\n+     * @return schema matching the given kind, type and name\r\n      */\r\n-    @DELETE\r\n+    @GET\r\n     @Path(\"{name}\")\r\n-    void delete(@PathParam(\"kind\") AttributableType attrType, @PathParam(\"type\") SchemaType schemaType,\r\n-            @PathParam(\"name\") String schemaName);\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractSchemaTO> T read(@PathParam(\"kind\") AttributableType attrType,\r\n+            @PathParam(\"type\") SchemaType schemaType, @PathParam(\"name\") String schemaName);\r\n \r\n     /**\r\n+     * Returns a list of schemas with matching kind and type.\r\n+     *\r\n      * @param <T> actual SchemaTO\r\n-     * @param attrType Kind for schemas to be listed\r\n-     * @param schemaType Type for schemas to be listed\r\n-     * @return List of schemas with matching kind and type\r\n+     * @param attrType kind for schemas to be listed\r\n+     * @param schemaType type for schemas to be listed\r\n+     * @return list of schemas with matching kind and type\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractSchemaTO> List<T> list(\r\n             @PathParam(\"kind\") AttributableType attrType, @PathParam(\"type\") SchemaType schemaType);\r\n \r\n     /**\r\n+     * Creates a new schema.\r\n+     *\r\n      * @param <T> actual SchemaTO\r\n-     * @param attrType Kind for schemas to be read\r\n-     * @param schemaType Type for schemas to be read\r\n-     * @param schemaName Name of schema to be read\r\n-     * @return Returns schema with matching name, kind and type\r\n+     * @param attrType kind for schema to be created\r\n+     * @param schemaType type for schema to be created\r\n+     * @param schemaTO schema to be created\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\r\n      */\r\n-    @GET\r\n-    @Path(\"{name}\")\r\n-    <T extends AbstractSchemaTO> T read(@PathParam(\"kind\") AttributableType attrType,\r\n-            @PathParam(\"type\") SchemaType schemaType, @PathParam(\"name\") String schemaName);\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created schema\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractSchemaTO> Response create(@PathParam(\"kind\") AttributableType attrType,\r\n+            @PathParam(\"type\") SchemaType schemaType, T schemaTO);\r\n \r\n     /**\r\n+     * Updates the schema matching the given kind, type and name.\r\n+     *\r\n      * @param <T> actual SchemaTO\r\n-     * @param attrType Kind for schemas to be updated\r\n-     * @param schemaType Type for schemas to be updated\r\n-     * @param schemaName Name of schema to be updated\r\n-     * @param schemaTO New schema to be stored\r\n+     * @param attrType kind for schemas to be updated\r\n+     * @param schemaType type for schemas to be updated\r\n+     * @param schemaName name of schema to be updated\r\n+     * @param schemaTO updated schema to be stored\r\n      */\r\n     @PUT\r\n     @Path(\"{name}\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractSchemaTO> void update(@PathParam(\"kind\") AttributableType attrType,\r\n             @PathParam(\"type\") SchemaType schemaType, @PathParam(\"name\") String schemaName, T schemaTO);\r\n+\r\n+    /**\r\n+     * Deletes the schema matching the given kind, type and name.\r\n+     *\r\n+     * @param attrType kind for schema to be deleted\r\n+     * @param schemaType type for schema to be deleted\r\n+     * @param schemaName name of schema to be deleted\r\n+     */\r\n+    @DELETE\r\n+    @Path(\"{name}\")\r\n+    void delete(@PathParam(\"kind\") AttributableType attrType, @PathParam(\"type\") SchemaType schemaType,\r\n+            @PathParam(\"name\") String schemaName);\r\n }\r"},{"sha":"dff02f4019135db8681a5dbe9cccb9da3644a039","filename":"common/src/main/java/org/apache/syncope/common/services/TaskService.java","status":"modified","additions":123,"deletions":67,"changes":190,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FTaskService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,12 +18,9 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import org.apache.syncope.common.reqres.PagedResult;\r\n-import org.apache.syncope.common.reqres.BulkAction;\r\n-import org.apache.syncope.common.reqres.BulkActionResult;\r\n import java.util.List;\r\n-import javax.ws.rs.Consumes;\r\n \r\n+import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.DefaultValue;\r\n import javax.ws.rs.GET;\r\n@@ -36,143 +33,202 @@\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n \r\n-import org.apache.syncope.common.wrap.JobClass;\r\n+import org.apache.syncope.common.reqres.PagedResult;\r\n+import org.apache.syncope.common.reqres.BulkAction;\r\n+import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.to.ReportExecTO;\r\n-import org.apache.syncope.common.wrap.SyncActionClass;\r\n import org.apache.syncope.common.to.TaskExecTO;\r\n import org.apache.syncope.common.to.AbstractTaskTO;\r\n import org.apache.syncope.common.to.SchedTaskTO;\r\n import org.apache.syncope.common.types.TaskType;\r\n+import org.apache.syncope.common.wrap.JobClass;\r\n+import org.apache.syncope.common.wrap.SyncActionClass;\r\n \r\n+/**\r\n+ * REST operations for tasks.\r\n+ */\r\n @Path(\"tasks\")\r\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n public interface TaskService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param taskTO Task to be created\r\n-     * @param <T> type of taskTO\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\r\n-     */\r\n-    @POST\r\n-    <T extends SchedTaskTO> Response create(T taskTO);\r\n-\r\n-    /**\r\n-     * @param taskId Id of task to be deleted\r\n+     * Returns a list of classes to be used for jobs.\r\n+     *\r\n+     * @return list of classes to be used for jobs\r\n      */\r\n-    @DELETE\r\n-    @Path(\"{taskId}\")\r\n-    void delete(@PathParam(\"taskId\") Long taskId);\r\n-\r\n-    /**\r\n-     * @param executionId ID of task execution to be deleted\r\n-     */\r\n-    @DELETE\r\n-    @Path(\"executions/{executionId}\")\r\n-    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n+    @GET\r\n+    @Path(\"jobClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<JobClass> getJobClasses();\r\n \r\n     /**\r\n-     * @param taskId Id of task to be executed\r\n-     * @param dryRun if true, task will only be simulated\r\n-     * @return Returns TaskExcecution\r\n+     * Returns a list of classes to be used as synchronization actions.\r\n+     *\r\n+     * @return list of classes to be used as synchronization actions\r\n      */\r\n-    @POST\r\n-    @Path(\"{taskId}/execute\")\r\n-    TaskExecTO execute(@PathParam(\"taskId\") Long taskId, @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\r\n+    @GET\r\n+    @Path(\"syncActionsClasses\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    List<SyncActionClass> getSyncActionsClasses();\r\n \r\n     /**\r\n-     * @return Returns list of JobClasses\r\n+     * Returns the task matching the given id.\r\n+     *\r\n+     * @param taskId id of task to be read\r\n+     * @param <T> type of taskTO\r\n+     * @return task with matching id\r\n      */\r\n     @GET\r\n-    @Path(\"jobClasses\")\r\n-    List<JobClass> getJobClasses();\r\n+    @Path(\"{taskId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends AbstractTaskTO> T read(@PathParam(\"taskId\") Long taskId);\r\n \r\n     /**\r\n-     * @return Returns list of SyncActionClasses\r\n+     * Returns the task execution with the given id.\r\n+     *\r\n+     * @param executionId id of task execution to be read\r\n+     * @return task execution with matching Id\r\n      */\r\n     @GET\r\n-    @Path(\"syncActionsClasses\")\r\n-    List<SyncActionClass> getSyncActionsClasses();\r\n+    @Path(\"executions/{executionId}\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    TaskExecTO readExecution(@PathParam(\"executionId\") Long executionId);\r\n \r\n     /**\r\n-     * @param taskType Type of tasks to be listed\r\n+     * Returns a list of tasks with matching type.\r\n+     *\r\n+     * @param taskType type of tasks to be listed\r\n      * @param <T> type of taskTO\r\n-     * @return Returns list of tasks with matching type\r\n+     * @return list of tasks with matching type\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractTaskTO> PagedResult<T> list(@MatrixParam(\"type\") TaskType taskType);\r\n \r\n     /**\r\n-     * @param taskType Type of tasks to be listed\r\n+     * Returns a list of tasks with matching type.\r\n+     *\r\n+     * @param taskType type of tasks to be listed\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n      * @param <T> type of taskTO\r\n-     * @return Returns list of tasks with matching type\r\n+     * @return list of tasks with matching type\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractTaskTO> PagedResult<T> list(@MatrixParam(\"type\") TaskType taskType,\r\n             @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n-     * @param taskType Type of tasks to be listed\r\n-     * @param page Page number of tasks in relation to page size\r\n-     * @param size Number of tasks listed per page\r\n+     * Returns a paged list of existing tasks matching type and page/size conditions.\r\n+     *\r\n+     * @param taskType type of tasks to be listed\r\n+     * @param page page number of tasks in relation to page size\r\n+     * @param size number of tasks listed per page\r\n      * @param orderBy list of ordering clauses, separated by comma\r\n      * @param <T> type of taskTO\r\n-     * @return Returns paginated list of task with matching type\r\n+     * @return paged list of existing tasks matching type and page/size conditions\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractTaskTO> PagedResult<T> list(@MatrixParam(\"type\") TaskType taskType,\r\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\r\n             @QueryParam(PARAM_ORDERBY) String orderBy);\r\n \r\n     /**\r\n-     * @param taskType Type of tasks to be listed\r\n-     * @param page Page number of tasks in relation to page size\r\n-     * @param size Number of tasks listed per page\r\n+     * Returns a paged list of existing tasks matching type and page/size conditions.\r\n+     *\r\n+     * @param taskType type of tasks to be listed\r\n+     * @param page page number of tasks in relation to page size\r\n+     * @param size number of tasks listed per page\r\n      * @param <T> type of taskTO\r\n-     * @return Returns paginated list of task with matching type\r\n+     * @return paged list of existing tasks matching type and page/size conditions\r\n      */\r\n     @GET\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     <T extends AbstractTaskTO> PagedResult<T> list(@MatrixParam(\"type\") TaskType taskType,\r\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\r\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\r\n \r\n     /**\r\n-     * @param taskId Id of task to be read\r\n+     * Creates a new task.\r\n+     *\r\n+     * @param taskTO task to be created\r\n      * @param <T> type of taskTO\r\n-     * @return Returns task with matching id\r\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\r\n      */\r\n-    @GET\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created task\")\r\n+    })\r\n+    @POST\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    <T extends SchedTaskTO> Response create(T taskTO);\r\n+\r\n+    /**\r\n+     * Updates the task matching the provided id.\r\n+     *\r\n+     * @param taskId id of task to be updated\r\n+     * @param taskTO updated task to be stored\r\n+     */\r\n+    @PUT\r\n     @Path(\"{taskId}\")\r\n-    <T extends AbstractTaskTO> T read(@PathParam(\"taskId\") Long taskId);\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    void update(@PathParam(\"taskId\") Long taskId, AbstractTaskTO taskTO);\r\n \r\n     /**\r\n-     * @param executionId Id if task execution to be read\r\n-     * @return Returns task execution with matching Id\r\n+     * Deletes the task matching the provided id.\r\n+     *\r\n+     * @param taskId id of task to be deleted\r\n      */\r\n-    @GET\r\n+    @DELETE\r\n+    @Path(\"{taskId}\")\r\n+    void delete(@PathParam(\"taskId\") Long taskId);\r\n+\r\n+    /**\r\n+     * Deletes the task execution matching the provided id.\r\n+     *\r\n+     * @param executionId id of task execution to be deleted\r\n+     */\r\n+    @DELETE\r\n     @Path(\"executions/{executionId}\")\r\n-    TaskExecTO readExecution(@PathParam(\"executionId\") Long executionId);\r\n+    void deleteExecution(@PathParam(\"executionId\") Long executionId);\r\n \r\n     /**\r\n-     * @param executionId Task execution ID related to report\r\n-     * @param report Report for task execution\r\n+     * Executes the task matching the given id.\r\n+     *\r\n+     * @param taskId id of task to be executed\r\n+     * @param dryRun if true, task will only be simulated\r\n+     * @return execution report for the task matching the given id\r\n+     */\r\n+    @POST\r\n+    @Path(\"{taskId}/execute\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    TaskExecTO execute(@PathParam(\"taskId\") Long taskId, @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\r\n+\r\n+    /**\r\n+     * Reports task execution result.\r\n+     *\r\n+     * @param executionId id of task execution being reported\r\n+     * @param report execution being reported\r\n      */\r\n     @POST\r\n     @Path(\"executions/{executionId}/report\")\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     void report(@PathParam(\"executionId\") Long executionId, ReportExecTO report);\r\n \r\n     /**\r\n-     * @param taskId Id if task to be updated\r\n-     * @param taskTO New task to be stored\r\n+     * Executes the provided bulk action.\r\n+     *\r\n+     * @param bulkAction list of task ids against which the bulk action will be performed.\r\n+     * @return Bulk action result\r\n      */\r\n-    @PUT\r\n-    @Path(\"{taskId}\")\r\n-    void update(@PathParam(\"taskId\") Long taskId, AbstractTaskTO taskTO);\r\n-\r\n     @POST\r\n     @Path(\"bulk\")\r\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     BulkActionResult bulk(BulkAction bulkAction);\r\n }\r"},{"sha":"9b358d39bfa997f7117da0f1cf7400b984efe17a","filename":"common/src/main/java/org/apache/syncope/common/services/UserSelfService.java","status":"modified","additions":60,"deletions":6,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserSelfService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -28,32 +28,86 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.model.wadl.Description;\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n \n+/**\n+ * REST operations for user self-management.\n+ */\n @Path(\"users/self\")\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n public interface UserSelfService extends JAXRSService {\n \n     /**\n-     * @return Response contains special syncope HTTP header indicating if user self registration is allowed\n+     * Checks whether self-registration is allowed.\n+     *\n+     * @return <tt>Response</tt> contains special Syncope HTTP header indicating if user self registration is allowed\n      * @see org.apache.syncope.common.types.RESTHeaders#SELFREGISTRATION_ALLOWED\n      */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> contains special Syncope HTTP header indicating if user self registration \"\n+                + \"is allowed\")\n+    })\n     @OPTIONS\n     Response getOptions();\n \n-    @POST\n-    Response create(UserTO userTO);\n-\n+    /**\n+     * Returns the user making the service call.\n+     *\n+     * @return calling user data\n+     */\n     @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     UserTO read();\n \n+    /**\n+     * Self-registration for new user.\n+     *\n+     * @param userTO user to be created\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of self-registered user as well as the user\n+     * itself - {@link UserTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of self-registered user as well \"\n+                + \"as the user itself - {@link UserTO} as <tt>Entity</tt>\")\n+    })\n+    @POST\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(UserTO userTO);\n+\n+    /**\n+     * Self-updates user.\n+     *\n+     * @param userId id of user to be updated\n+     * @param userMod modification to be applied to user matching the provided userId\n+     * @return <tt>Response</tt> object featuring the updated user - {@link UserTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n+    })\n     @POST\n     @Path(\"{userId}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(@PathParam(\"userId\") Long userId, UserMod userMod);\n \n+    /**\n+     * Self-deletes user.\n+     *\n+     * @return <tt>Response</tt> object featuring the deleted user - {@link UserTO} as <tt>Entity</tt>\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n+    })\n     @DELETE\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete();\n \n }"},{"sha":"43e4befd8f59fcfe6231b2f6ffcc5471778da425","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":114,"deletions":133,"changes":247,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -34,6 +34,7 @@\n import org.apache.cxf.jaxrs.model.wadl.Description;\n import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n@@ -43,17 +44,38 @@\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n \n+/**\n+ * REST operations for users.\n+ */\n @Path(\"users\")\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n public interface UserService extends JAXRSService {\n \n+    /**\n+     * Gives the username for the provided user id.\n+     *\n+     * @param userId user id\n+     * @return <tt>Response</tt> object featuring HTTP header with username matching the given userId\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring HTTP header with username matching the given userId\")\n+    })\n     @OPTIONS\n     @Path(\"{userId}/username\")\n     Response getUsername(@PathParam(\"userId\") Long userId);\n \n+    /**\n+     * Gives the user id for the provided username.\n+     *\n+     * @param username username\n+     * @return <tt>Response</tt> object featuring HTTP header with userId matching the given username\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring HTTP header with userId matching the given username\")\n+    })\n     @OPTIONS\n     @Path(\"{username}/userId\")\n     Response getUserId(@PathParam(\"username\") String username);\n@@ -66,130 +88,92 @@ public interface UserService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{userId}\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Reads the user matching the provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"User matching the provided userId\")\n-    })\n-    UserTO read(@Description(\"id of user to be read\") @PathParam(\"userId\") Long userId);\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    UserTO read(@PathParam(\"userId\") Long userId);\n \n     /**\n      * Returns a paged list of existing users.\n      *\n-     * @return Paged list of all existing users\n+     * @return paged list of all existing users\n      */\n     @GET\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Returns a list of all existing users\"),\n-        @Description(target = DocTarget.RETURN, value = \"Paged list of all existing users\")\n-    })\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<UserTO> list();\n \n     /**\n      * Returns a paged list of existing users.\n      *\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return Paged list of all existing users\n+     * @return paged list of all existing users\n      */\n     @GET\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Returns a list of all existing users\"),\n-        @Description(target = DocTarget.RETURN, value = \"Paged list of all existing users\")\n-    })\n-    PagedResult<UserTO> list(\n-            @Description(\"list of ordering clauses, separated by comma\") @QueryParam(PARAM_ORDERBY) String orderBy);\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<UserTO> list(@QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n      * Returns a paged list of existing users matching page/size conditions.\n      *\n      * @param page result page number\n      * @param size number of entries per page\n-     * @param orderBy list of ordering clauses, separated by comma\n-     * @return Paged list of existing users matching page/size conditions\n+     * @return paged list of existing users matching page/size conditions\n      */\n     @GET\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a list of all existing users matching page/size conditions\"),\n-        @Description(target = DocTarget.RETURN, value = \"Paged list of existing users matching page/size conditions\")\n-    })\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<UserTO> list(\n-            @Description(\"result page number\")\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\n-            @Description(\"number of entries per page\")\n-            @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\n-            @Description(\"list of ordering clauses, separated by comma\") @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\n \n     /**\n      * Returns a paged list of existing users matching page/size conditions.\n      *\n      * @param page result page number\n      * @param size number of entries per page\n-     * @return Paged list of existing users matching page/size conditions\n+     * @param orderBy list of ordering clauses, separated by comma\n+     * @return paged list of existing users matching page/size conditions\n      */\n     @GET\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a list of all existing users matching page/size conditions\"),\n-        @Description(target = DocTarget.RETURN, value = \"Paged list of existing users matching page/size conditions\")\n-    })\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<UserTO> list(\n-            @Description(\"result page number\")\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\n-            @Description(\"number of entries per page\")\n-            @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\n+            @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\n+            @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n      * Returns a paged list of users matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n-     * @return Paged list of users matching the provided FIQL search condition\n+     * @return paged list of users matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a paged list of users matching the provided FIQL search condition\"),\n-        @Description(target = DocTarget.RETURN, value = \"List of users matching the given condition\")\n-    })\n-    PagedResult<UserTO> search(@Description(\"FIQL search expression\") @QueryParam(PARAM_FIQL) String fiql);\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql);\n \n     /**\n      * Returns a paged list of users matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return Paged list of users matching the provided FIQL search condition\n+     * @return paged list of users matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a paged list of users matching the provided FIQL search condition\"),\n-        @Description(target = DocTarget.RETURN, value = \"List of users matching the given condition\")\n-    })\n-    PagedResult<UserTO> search(@Description(\"FIQL search expression\") @QueryParam(PARAM_FIQL) String fiql,\n-            @Description(\"list of ordering clauses, separated by comma\") @QueryParam(PARAM_ORDERBY) String orderBy);\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql, @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n      * Returns a paged list of users matching the provided FIQL search condition.\n      *\n      * @param fiql FIQL search expression\n      * @param page result page number\n      * @param size number of entries per page\n-     * @return Paged list of users matching the provided FIQL search condition\n+     * @return paged list of users matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a paged list of users matching the provided FIQL search condition\"),\n-        @Description(target = DocTarget.RETURN,\n-                value = \"Paged list of users matching the provided FIQL search condition\")\n-    })\n-    PagedResult<UserTO> search(@Description(\"FIQL search expression\") @QueryParam(PARAM_FIQL) String fiql,\n-            @Description(\"result page number\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\n-            @Description(\"number of entries per page\")\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size);\n \n     /**\n@@ -199,139 +183,136 @@ PagedResult<UserTO> search(@Description(\"FIQL search expression\") @QueryParam(PA\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n-     * @return Paged list of users matching the provided FIQL search condition\n+     * @return paged list of users matching the provided FIQL search condition\n      */\n     @GET\n     @Path(\"search\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"Returns a paged list of users matching the provided FIQL search condition\"),\n-        @Description(target = DocTarget.RETURN,\n-                value = \"Paged list of users matching the provided FIQL search condition\")\n-    })\n-    PagedResult<UserTO> search(@Description(\"FIQL search expression\") @QueryParam(PARAM_FIQL) String fiql,\n-            @Description(\"result page number\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) int page,\n-            @Description(\"number of entries per page\")\n             @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) int size,\n-            @Description(\"list of ordering clauses, separated by comma\") @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_ORDERBY) String orderBy);\n \n     /**\n      * Creates a new user.\n      *\n      * @param userTO user to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the user itself\n-     * enriched with propagation status information, as <tt>Entity</tt>\n+     * enriched with propagation status information - {@link UserTO} as <tt>Entity</tt>\n      */\n-    @POST\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Creates a new user\"),\n         @Description(target = DocTarget.RETURN,\n-                value = \"Response object featuring <tt>Location</tt> header of created user\"),\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"User created available at URL specified via the <tt>Location</tt> header\")\n+                value = \"<tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the \"\n+                + \"user itself enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n-    Response create(@Description(\"user to be created\") UserTO userTO);\n+    @POST\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(UserTO userTO);\n \n     /**\n      * Updates user matching the provided userId.\n      *\n      * @param userId id of user to be updated\n      * @param userMod modification to be applied to user matching the provided userId\n-     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n-     * as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n+     * - {@link UserTO} as <tt>Entity</tt>\n      */\n-    @POST\n-    @Path(\"{userId}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Updates user matching the provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n-                + \"with propagation status information, as <tt>Entity</tt>\")\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring the updated user enriched with propagation status \"\n+                + \"information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n-    Response update(@Description(\"id of user to be updated\") @PathParam(\"userId\") Long userId,\n-            @Description(\"modification to be applied to user matching the provided userId\") UserMod userMod);\n+    @POST\n+    @Path(\"{userId}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response update(@PathParam(\"userId\") Long userId, UserMod userMod);\n \n     /**\n      * Performs a status update on user matching provided userId.\n      *\n      * @param userId id of user to be subjected to status update\n      * @param statusMod status update details\n-     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information,\n-     * as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n+     * - {@link UserTO} as <tt>Entity</tt>\n      */\n-    @POST\n-    @Path(\"{userId}/status\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Performs a status update on user matching provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the updated user enriched \"\n-                + \"with propagation status information, as <tt>Entity</tt>\")\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring the updated user enriched with propagation status \"\n+                + \"information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n-    Response status(@Description(\"id of user to be subjected to status update\") @PathParam(\"userId\") Long userId,\n-            @Description(\"status update details\") StatusMod statusMod);\n+    @POST\n+    @Path(\"{userId}/status\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response status(@PathParam(\"userId\") Long userId, StatusMod statusMod);\n \n     /**\n      * Deletes user matching provided userId.\n      *\n      * @param userId id of user to be deleted\n-     * @return <tt>Response</tt> object featuring the deleted user enriched with propagation status information,\n-     * as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the deleted user enriched with propagation status information\n+     * - {@link UserTO} as <tt>Entity</tt>\n      */\n-    @DELETE\n-    @Path(\"{userId}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Deletes user matching provided userId\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the deleted user enriched \"\n-                + \"with propagation status information, as <tt>Entity</tt>\")\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring the deleted user enriched with propagation status \"\n+                + \"information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n-    Response delete(@Description(\"id of user to be deleted\") @PathParam(\"userId\") Long userId);\n+    @DELETE\n+    @Path(\"{userId}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response delete(@PathParam(\"userId\") Long userId);\n \n     /**\n      * Executes resource-related operations on given user.\n      *\n-     * @param userId user id.\n+     * @param userId user id\n      * @param type resource de-association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring the bulk action result\n+     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n      */\n-    @POST\n-    @Path(\"{userId}/bulkDeassociation/{type}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Executes resource-related operations on given user\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the bulk action result\")\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n     })\n-    Response bulkDeassociation(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n-            @Description(\"resource de-association action type\") @PathParam(\"type\") ResourceDeAssociationActionType type,\n-            @Description(\"external resources to be used for propagation-related operations\") List<ResourceName> resourceNames);\n+    @POST\n+    @Path(\"{userId}/bulkDeassociation/{type}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response bulkDeassociation(@PathParam(\"userId\") Long userId,\n+            @PathParam(\"type\") ResourceDeassociationActionType type, List<ResourceName> resourceNames);\n \n     /**\n      * Executes resource-related operations on given user.\n      *\n      * @param userId user id.\n      * @param type resource association action type\n      * @param associationMod external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring the bulk action result\n+     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n      */\n-    @POST\n-    @Path(\"{userId}/bulkAssociation/{type}\")\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Executes resource-related operations on given user\"),\n-        @Description(target = DocTarget.RETURN, value = \"<tt>Response</tt> object featuring the bulk action result\")\n+        @Description(target = DocTarget.RETURN,\n+                value = \"<tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n     })\n-    Response bulkAssociation(@Description(\"user id\") @PathParam(\"userId\") Long userId,\n-            @Description(\"resource association action type\") @PathParam(\"type\") ResourceAssociationActionType type,\n-            @Description(\"external resources to be used for propagation-related operations\") ResourceAssociationMod associationMod);\n+    @POST\n+    @Path(\"{userId}/bulkAssociation/{type}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response bulkAssociation(@PathParam(\"userId\") Long userId,\n+            @PathParam(\"type\") ResourceAssociationActionType type,\n+            ResourceAssociationMod associationMod);\n \n     /**\n      * Executes the provided bulk action.\n      *\n-     * @param bulkAction list of &lt;username, action&gt; pairs\n-     * @return Bulk action result.\n+     * @param bulkAction list of user ids against which the bulk action will be performed.\n+     * @return Bulk action result\n      */\n     @POST\n     @Path(\"bulk\")\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Executes the provided bulk action\"),\n-        @Description(target = DocTarget.RETURN, value = \"Bulk action result\")\n-    })\n-    BulkActionResult bulk(@Description(\"list of &lt;username, action&gt; pairs\") BulkAction bulkAction);\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    BulkActionResult bulk(BulkAction bulkAction);\n }"},{"sha":"674107d8497a4d0a358cc29a46a0d64613a9adba","filename":"common/src/main/java/org/apache/syncope/common/services/UserWorkflowService.java","status":"modified","additions":54,"deletions":8,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserWorkflowService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.common.services;\n \n-import org.apache.syncope.common.to.WorkflowFormTO;\n import java.util.List;\n import javax.ws.rs.Consumes;\n \n@@ -30,33 +29,80 @@\n import javax.ws.rs.core.MediaType;\n \n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n \n+/**\n+ * REST operations related to user workflow.\n+ */\n @Path(\"userworkflow\")\n-@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n public interface UserWorkflowService extends JAXRSService {\n \n-    @POST\n-    @Path(\"forms\")\n-    UserTO submitForm(WorkflowFormTO form);\n-\n+    /**\n+     * Returns a list of all available workflow forms.\n+     *\n+     * @return list of all available workflow forms\n+     */\n     @GET\n     @Path(\"forms\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<WorkflowFormTO> getForms();\n \n+    /**\n+     * Returns a list of all available workflow forms with matching name, for the given user id.\n+     *\n+     * @param userId user id\n+     * @param name form name\n+     * @return list of all available workflow forms with matching name, fir the given user id.\n+     */\n     @GET\n     @Path(\"forms/{userId}/{name}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<WorkflowFormTO> getFormsByName(@PathParam(\"userId\") final Long userId, @PathParam(\"name\") final String name);\n \n+    /**\n+     * Returns a list of available forms for the given user id.\n+     *\n+     * @param userId user id\n+     * @return list of available forms for the given user id\n+     */\n     @GET\n     @Path(\"forms/{userId}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     WorkflowFormTO getFormForUser(@PathParam(\"userId\") Long userId);\n \n+    /**\n+     * Claims the form for the given task id.\n+     *\n+     * @param taskId workflow task id\n+     * @return the workflow form for the given task id\n+     */\n     @POST\n-    @Path(\"tasks/{taskId}/claim\")\n+    @Path(\"forms/{taskId}/claim\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     WorkflowFormTO claimForm(@PathParam(\"taskId\") String taskId);\n \n+    /**\n+     * Submits a workflow form.\n+     *\n+     * @param form workflow form.\n+     * @return updated user\n+     */\n+    @POST\n+    @Path(\"forms\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    UserTO submitForm(WorkflowFormTO form);\n+\n+    /**\n+     * Executes workflow task for matching id.\n+     *\n+     * @param taskId workflow task id\n+     * @param userTO argument to be passed to workflow task\n+     * @return updated user\n+     */\n     @POST\n     @Path(\"tasks/{taskId}/execute\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     UserTO executeTask(@PathParam(\"taskId\") String taskId, UserTO userTO);\n }"},{"sha":"03ceeeea19b44a259559afba5010d107929f4da7","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":29,"deletions":5,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -27,37 +27,61 @@\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.cxf.jaxrs.model.wadl.Description;\r\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n \r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.RESTHeaders;\r\n \r\n+/**\r\n+ * REST operations for workflow definition management.\r\n+ */\r\n @Path(\"workflows/{kind}\")\r\n public interface WorkflowService extends JAXRSService {\r\n \r\n     /**\r\n-     * @param kind Kind can be USER or ROLE only!\r\n-     * @return Response contains special syncope HTTP header indicating if Activiti is enabled for users / roles\r\n+     * Checks whether Activiti is enabled (for users or roles).\r\n+     *\r\n+     * @param kind can be USER or ROLE only!\r\n+     * @return <tt>Response</tt> contains special syncope HTTP header indicating if Activiti is enabled for\r\n+     * users / roles\r\n      * @see org.apache.syncope.common.types.RESTHeaders#ACTIVITI_USER_ENABLED\r\n      * @see org.apache.syncope.common.types.RESTHeaders#ACTIVITI_ROLE_ENABLED\r\n      */\r\n+    @Descriptions({\r\n+        @Description(target = DocTarget.RETURN,\r\n+                value = \"<tt>Response</tt> contains special syncope HTTP header indicating if Activiti is enabled for \"\r\n+                + \"users / roles\")\r\n+    })\r\n     @OPTIONS\r\n     Response getOptions(@PathParam(\"kind\") AttributableType kind);\r\n \r\n     /**\r\n-     * @param kind Kind can be USER or ROLE only!\r\n-     * @return Returns workflow definition for matching kind.\r\n+     * Exports workflow definition for matching kind.\r\n+     *\r\n+     * @param kind can be USER or ROLE only!\r\n+     * @return workflow definition for matching kind\r\n      */\r\n     @GET\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n     Response exportDefinition(@PathParam(\"kind\") AttributableType kind);\r\n \r\n+    /**\r\n+     * Exports workflow diagram representation.\r\n+     *\r\n+     * @param kind can be USER or ROLE only!\r\n+     * @return workflow diagram representation\r\n+     */\r\n     @GET\r\n     @Path(\"diagram.png\")\r\n     @Produces({ RESTHeaders.MEDIATYPE_IMAGE_PNG })\r\n     Response exportDiagram(@PathParam(\"kind\") AttributableType kind);\r\n \r\n     /**\r\n-     * @param kind Kind can be USER or ROLE only!\r\n+     * Imports workflow definition for matching kind.\r\n+     *\r\n+     * @param kind can be USER or ROLE only!\r\n      * @param definition workflow definition for matching kind\r\n      */\r\n     @PUT\r"},{"sha":"c357c1d37860067d8a511b4e5a095f0cd3984405","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceDeassociationActionType.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeassociationActionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeassociationActionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceDeassociationActionType.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -21,7 +21,7 @@\n import javax.xml.bind.annotation.XmlEnum;\n \n @XmlEnum\n-public enum ResourceDeAssociationActionType {\n+public enum ResourceDeassociationActionType {\n \n     /**\n      * Remove association between user/role on Syncope and external resource(s) without any propagation.","previous_filename":"common/src/main/java/org/apache/syncope/common/types/ResourceDeAssociationActionType.java"},{"sha":"eae22fd73b7b7419a94d7ccfedf10a3ea3c24e33","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -33,26 +33,24 @@ private CollectionWrapper() {\n         // empty constructor for static utility class\r\n     }\r\n \r\n-    public static <T extends AbstractWrappable> List<T> wrap(\r\n-            final String element, final Class<T> reference) {\r\n-\r\n+    public static <E, T extends AbstractWrappable<E>> List<T> wrap(final E element, final Class<T> reference) {\r\n         return Collections.singletonList(AbstractWrappable.getInstance(reference, element));\r\n     }\r\n \r\n-    public static <T extends AbstractWrappable> List<T> wrap(\r\n-            final Collection<String> collection, final Class<T> reference) {\r\n+    public static <E, T extends AbstractWrappable<E>> List<T> wrap(\r\n+            final Collection<E> collection, final Class<T> reference) {\r\n \r\n         List<T> response = new ArrayList<T>();\r\n-        for (String element : collection) {\r\n+        for (E element : collection) {\r\n             response.add(AbstractWrappable.getInstance(reference, element));\r\n         }\r\n         return response;\r\n     }\r\n \r\n-    public static <T extends AbstractWrappable> List<String> unwrap(final Collection<T> collection) {\r\n-        List<String> response = new ArrayList<String>();\r\n-        for (T e : collection) {\r\n-            response.add(e.getName());\r\n+    public static <E, T extends AbstractWrappable<E>> List<E> unwrap(final Collection<T> collection) {\r\n+        List<E> response = new ArrayList<E>();\r\n+        for (T item : collection) {\r\n+            response.add(item.getElement());\r\n         }\r\n         return response;\r\n     }\r"},{"sha":"da52a8fc243d56ae6ff52251de0b7d57b85c1937","filename":"common/src/main/java/org/apache/syncope/common/wrap/AbstractWrappable.java","status":"modified","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FAbstractWrappable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FAbstractWrappable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FAbstractWrappable.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -20,33 +20,27 @@\n \n import org.apache.syncope.common.AbstractBaseBean;\n \n-public abstract class AbstractWrappable extends AbstractBaseBean {\n+public abstract class AbstractWrappable<E> extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 1712808704911635170L;\n \n-    private String name;\n+    private E element;\n \n-    public static <T extends AbstractWrappable> T getInstance(final Class<T> reference, final String name) {\n+    public static <E, T extends AbstractWrappable<E>> T getInstance(final Class<T> reference, final E element) {\n         try {\n             T instance = reference.newInstance();\n-            instance.setName(name);\n+            instance.setElement(element);\n             return instance;\n         } catch (Exception e) {\n             throw new IllegalArgumentException(\"Could not instantiate \" + reference.getName(), e);\n         }\n     }\n \n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n+    public E getElement() {\n+        return element;\n     }\n \n-    /**\n-     * @param name the name to set\n-     */\n-    public void setName(final String name) {\n-        this.name = name;\n+    public void setElement(final E element) {\n+        this.element = element;\n     }\n }"},{"sha":"0dcfdfa139b822b2fe363193efb5e270cf4dc5a9","filename":"common/src/main/java/org/apache/syncope/common/wrap/CorrelationRuleClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FCorrelationRuleClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FCorrelationRuleClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FCorrelationRuleClass.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"correlationRuleClass\")\r\n @XmlType\r\n-public class CorrelationRuleClass extends AbstractWrappable {\r\n+public class CorrelationRuleClass extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = -6715106427060816725L;\r\n \r"},{"sha":"e138f8ef25ace340a7f5fe909d2d7d0114c6e621","filename":"common/src/main/java/org/apache/syncope/common/wrap/EntitlementTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FEntitlementTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FEntitlementTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FEntitlementTO.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"entitlement\")\r\n @XmlType\r\n-public class EntitlementTO extends AbstractWrappable {\r\n+public class EntitlementTO extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = 7133614577172038452L;\r\n \r"},{"sha":"447787fd5421e09548fae4c6090a549fc0e427ea","filename":"common/src/main/java/org/apache/syncope/common/wrap/JobClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FJobClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FJobClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FJobClass.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"jobClass\")\r\n @XmlType\r\n-public class JobClass extends AbstractWrappable {\r\n+public class JobClass extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = -1953799905627918822L;\r\n \r"},{"sha":"d8e16f0736eed829165a20203a81e6bf83e39607","filename":"common/src/main/java/org/apache/syncope/common/wrap/MailTemplate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FMailTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FMailTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FMailTemplate.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"mailTemplate\")\r\n @XmlType\r\n-public class MailTemplate extends AbstractWrappable {\r\n+public class MailTemplate extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = 7232619557172031478L;\r\n \r"},{"sha":"9b32f1ca0ba542cb8911c4fe90931e66e03bc67d","filename":"common/src/main/java/org/apache/syncope/common/wrap/PropagationActionClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FPropagationActionClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FPropagationActionClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FPropagationActionClass.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"propagationActionClass\")\r\n @XmlType\r\n-public class PropagationActionClass extends AbstractWrappable {\r\n+public class PropagationActionClass extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = 2187654394121198308L;\r\n \r"},{"sha":"62842e3177f39df44bb90f9c5dd5cd07bf09e63c","filename":"common/src/main/java/org/apache/syncope/common/wrap/ReportletConfClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FReportletConfClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FReportletConfClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FReportletConfClass.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"reportletConfClass\")\r\n @XmlType\r\n-public class ReportletConfClass extends AbstractWrappable {\r\n+public class ReportletConfClass extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = 1343357929074360450L;\r\n \r"},{"sha":"58eda4e9b2a4598cb2800ff1bf55f3957a8b9e1e","filename":"common/src/main/java/org/apache/syncope/common/wrap/ResourceName.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FResourceName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FResourceName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FResourceName.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \n @XmlRootElement(name = \"resourceName\")\n @XmlType\n-public class ResourceName extends AbstractWrappable {\n+public class ResourceName extends AbstractWrappable<String> {\n \n     private static final long serialVersionUID = -175720097924079573L;\n "},{"sha":"760e4bdf41e562673db8fd9a0a7f7e7d783c247b","filename":"common/src/main/java/org/apache/syncope/common/wrap/SubjectId.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSubjectId.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSubjectId.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSubjectId.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.wrap;\n+\n+public class SubjectId extends AbstractWrappable<Long> {\n+\n+    private static final long serialVersionUID = -8664228651057889297L;\n+\n+}"},{"sha":"b0d798aa569ea5aaa2d5ca907d26ad962957005b","filename":"common/src/main/java/org/apache/syncope/common/wrap/SyncActionClass.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSyncActionClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSyncActionClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FSyncActionClass.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,6 +23,8 @@\n \r\n @XmlRootElement(name = \"syncActionClass\")\r\n @XmlType\r\n-public class SyncActionClass extends AbstractWrappable {\r\n+public class SyncActionClass extends AbstractWrappable<String> {\r\n+\r\n+    private static final long serialVersionUID = 1669581609310071905L;\r\n \r\n }\r"},{"sha":"9a724577228503ae9a62e8fb1851e4d5888173a4","filename":"common/src/main/java/org/apache/syncope/common/wrap/Validator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2FValidator.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,7 +23,7 @@\n \r\n @XmlRootElement(name = \"validator\")\r\n @XmlType\r\n-public class Validator extends AbstractWrappable {\r\n+public class Validator extends AbstractWrappable<String> {\r\n \r\n     private static final long serialVersionUID = 7233619557177034453L;\r\n \r"},{"sha":"a70f6ebed0ca375a7bfcacd5c15cea2279309e5d","filename":"common/src/main/java/org/apache/syncope/common/wrap/package-info.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fwrap%2Fpackage-info.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+@XmlSchema(namespace = SyncopeConstants.NAMESPACE)\n+package org.apache.syncope.common.wrap;\n+\n+import javax.xml.bind.annotation.XmlSchema;\n+import org.apache.syncope.common.SyncopeConstants;"},{"sha":"fb153b079c87224dc5270d2efb80154dea3c5454","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -25,11 +25,12 @@\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.reqres.BulkAssociationAction;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.wrap.AbstractWrappable;\n+import org.apache.syncope.common.wrap.SubjectId;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.status.AbstractStatusBeanProvider;\n import org.apache.syncope.console.commons.status.StatusBean;\n@@ -130,7 +131,7 @@ public void populateItem(\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceDeAssociationActionType.UNLINK, table, columns);\n+                    bulkAssociationAction(target, ResourceDeassociationActionType.UNLINK, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unlinkink resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -146,7 +147,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceDeAssociationActionType.DEPROVISION, table, columns);\n+                    bulkAssociationAction(target, ResourceDeassociationActionType.DEPROVISION, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error de-provisioning user\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -162,7 +163,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    bulkAssociationAction(target, ResourceDeAssociationActionType.UNASSIGN, table, columns);\n+                    bulkAssociationAction(target, ResourceDeassociationActionType.UNASSIGN, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unassigning resources\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -222,24 +223,22 @@ public List<StatusBean> getStatusBeans() {\n \n     private void bulkAssociationAction(\n             final AjaxRequestTarget target,\n-            final ResourceDeAssociationActionType type,\n+            final ResourceDeassociationActionType type,\n             final ActionDataTablePanel<StatusBean, String> table,\n             final List<IColumn<StatusBean, String>> columns) {\n \n-        final BulkAssociationAction bulkAction = new BulkAssociationAction();\n-        bulkAction.setOperation(type);\n-\n         final List<StatusBean> beans = new ArrayList<StatusBean>(table.getModelObject());\n+        List<SubjectId> subjectIds = new ArrayList<SubjectId>();\n         for (StatusBean bean : beans) {\n             LOG.debug(\"Selected bean {}\", bean);\n-            bulkAction.getTargets().add(bean.getAttributableId());\n+            subjectIds.add(AbstractWrappable.getInstance(SubjectId.class, bean.getAttributableId()));\n         }\n \n         if (beans.isEmpty()) {\n             window.close(target);\n         } else {\n             final BulkActionResult res = resourceRestClient.bulkAssociationAction(\n-                    resourceTO.getName(), bulkAction, typeRef);\n+                    resourceTO.getName(), typeRef, type, subjectIds);\n \n             ((BasePage) pageRef.getPage()).setModalResult(true);\n "},{"sha":"dff42bff3fcde52391625963012accb6f61f23c8","filename":"console/src/main/java/org/apache/syncope/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -40,7 +40,7 @@ public List<String> getReportletConfClasses() {\n         try {\n             List<ReportletConfClass> reportletConfClasses = getService(ReportService.class).getReportletConfClasses();\n             for (ReportletConfClass clazz : reportletConfClasses) {\n-                result.add(clazz.getName());\n+                result.add(clazz.getElement());\n             }\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting available reportlet classes\", e);"},{"sha":"366023d0f6c26764d4247b0e4b3c2e65d6adcadb","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -23,12 +23,13 @@\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.reqres.BulkAction;\n import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.reqres.BulkAssociationAction;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.wrap.SubjectId;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -90,10 +91,11 @@ public BulkActionResult bulkAction(final BulkAction action) {\n     }\n \n     public BulkActionResult bulkAssociationAction(\n-            final String resourceName, final BulkAssociationAction bulkAssociationAction,\n-            final Class<? extends AbstractAttributableTO> typeRef) {\n+            final String resourceName, final Class<? extends AbstractAttributableTO> typeRef,\n+            final ResourceDeassociationActionType type, final List<SubjectId> subjtectIds) {\n \n-        return getService(ResourceService.class).bulkAssociation(resourceName, bulkAssociationAction,\n-                UserTO.class.isAssignableFrom(typeRef) ? AttributableType.USER : AttributableType.ROLE);\n+        return getService(ResourceService.class).bulkDeassociation(resourceName,\n+                UserTO.class.isAssignableFrom(typeRef) ? AttributableType.USER : AttributableType.ROLE,\n+                type, subjtectIds);\n     }\n }"},{"sha":"826eacb798cfe465e3c56c15f2b47f544921866a","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n@@ -100,7 +100,7 @@ public BulkActionResult bulkAction(final BulkAction action) {\n     }\n \n     public BulkActionResult unlink(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.UNLINK,\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.UNLINK,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n                 readEntity(BulkActionResult.class);\n     }\n@@ -112,7 +112,7 @@ public BulkActionResult link(final long roleId, final List<StatusBean> statuses)\n     }\n \n     public BulkActionResult deprovision(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.DEPROVISION,\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n                 readEntity(BulkActionResult.class);\n     }\n@@ -124,7 +124,7 @@ public BulkActionResult provision(final long roleId, final List<StatusBean> stat\n     }\n \n     public BulkActionResult unassign(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeAssociationActionType.UNASSIGN,\n+        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.UNASSIGN,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n                 readEntity(BulkActionResult.class);\n     }"},{"sha":"0891afa85ed039d6e536e2adb6e0b52c759db57a","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.apache.syncope.console.commons.status.StatusBean;\n import org.apache.syncope.console.commons.status.StatusUtils;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -115,7 +115,7 @@ public BulkActionResult bulkAction(final BulkAction action) {\n     }\n \n     public BulkActionResult unlink(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.UNLINK,\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n                 .readEntity(BulkActionResult.class);\n     }\n@@ -130,7 +130,7 @@ public BulkActionResult link(final long userId, final List<StatusBean> statuses)\n     }\n \n     public BulkActionResult deprovision(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.DEPROVISION,\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n                 .readEntity(BulkActionResult.class);\n     }\n@@ -149,7 +149,7 @@ public BulkActionResult provision(\n     }\n \n     public BulkActionResult unassign(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeAssociationActionType.UNASSIGN,\n+        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n                 CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n                 .readEntity(BulkActionResult.class);\n     }"},{"sha":"6e973056149e87a5fa4c531a49eaf1c90b4c4257","filename":"core/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -261,6 +261,12 @@ under the License.\n       <artifactId>syncope-common</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope</groupId>\n+      <artifactId>syncope-common</artifactId>\n+      <version>${project.version}</version>\n+      <classifier>javadoc</classifier>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.slf4j</groupId>"},{"sha":"87a53a3bb5f74da9d90e651b2893622c24e9fa64","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserWorkflowController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserWorkflowController.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -61,7 +61,7 @@ public WorkflowFormTO claimForm(final String taskId) {\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    public UserTO executeWorkflow(final UserTO userTO, final String taskId) {\n+    public UserTO executeWorkflowTask(final UserTO userTO, final String taskId) {\n         WorkflowResult<Long> updated = uwfAdapter.execute(userTO, taskId);\n \n         UserMod userMod = new UserMod();"},{"sha":"4d98ae365c3d8b97fedf8775315bb6e7998d36c4","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -30,13 +30,14 @@\n import org.apache.syncope.common.to.AbstractAttributableTO;\r\n import org.apache.syncope.common.reqres.BulkAction;\r\n import org.apache.syncope.common.reqres.BulkActionResult;\r\n-import org.apache.syncope.common.reqres.BulkAssociationAction;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.wrap.PropagationActionClass;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.common.types.RESTHeaders;\r\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n+import org.apache.syncope.common.wrap.SubjectId;\r\n import org.apache.syncope.core.rest.controller.AbstractResourceAssociator;\r\n import org.apache.syncope.core.rest.controller.ResourceController;\r\n import org.apache.syncope.core.rest.controller.RoleController;\r\n@@ -111,41 +112,41 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n     }\r\n \r\n     @Override\r\n-    public BulkActionResult bulkAssociation(final String resourceName,\r\n-            final BulkAssociationAction bulkAssociationAction, final AttributableType type) {\r\n+    public BulkActionResult bulkDeassociation(final String resourceName, final AttributableType attrType,\r\n+            final ResourceDeassociationActionType type, final List<SubjectId> subjectIds) {\r\n \r\n-        if (bulkAssociationAction.getOperation() == null || type == AttributableType.MEMBERSHIP) {\r\n+        if (attrType == AttributableType.MEMBERSHIP) {\r\n             throw new BadRequestException();\r\n         }\r\n \r\n-        AbstractResourceAssociator<? extends AbstractAttributableTO> associator = type == AttributableType.USER\r\n+        AbstractResourceAssociator<? extends AbstractAttributableTO> associator = attrType == AttributableType.USER\r\n                 ? userController\r\n                 : roleController;\r\n \r\n         final BulkActionResult res = new BulkActionResult();\r\n \r\n-        for (Long id : bulkAssociationAction.getTargets()) {\r\n+        for (SubjectId id : subjectIds) {\r\n             final Set<String> resources = Collections.singleton(resourceName);\r\n             try {\r\n-                switch (bulkAssociationAction.getOperation()) {\r\n+                switch (type) {\r\n                     case DEPROVISION:\r\n-                        associator.deprovision(id, resources);\r\n+                        associator.deprovision(id.getElement(), resources);\r\n                         break;\r\n \r\n                     case UNASSIGN:\r\n-                        associator.unassign(id, resources);\r\n+                        associator.unassign(id.getElement(), resources);\r\n                         break;\r\n \r\n                     case UNLINK:\r\n-                        associator.unlink(id, resources);\r\n+                        associator.unlink(id.getElement(), resources);\r\n                         break;\r\n \r\n                     default:\r\n                 }\r\n \r\n                 res.add(id, BulkActionResult.Status.SUCCESS);\r\n             } catch (Exception e) {\r\n-                LOG.warn(\"While executing {} on {} {}\", bulkAssociationAction.getOperation(), type, id, e);\r\n+                LOG.warn(\"While executing {} on {} {}\", type, attrType, id.getElement(), e);\r\n                 res.add(id, BulkActionResult.Status.FAILURE);\r\n             }\r\n         }\r"},{"sha":"8f44a1ea9ee1d0fe3ef018ee7bdd19e3348f479f","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.wrap.ResourceName;\r\n import org.apache.syncope.common.to.RoleTO;\r\n import org.apache.syncope.common.types.ResourceAssociationActionType;\r\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\r\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\r\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\r\n@@ -147,7 +147,7 @@ public Response update(final Long roleId, final RoleMod roleMod) {\n \r\n     @Override\r\n     public Response bulkDeassociation(\r\n-            final Long roleId, final ResourceDeAssociationActionType type, final List<ResourceName> resourceNames) {\r\n+            final Long roleId, final ResourceDeassociationActionType type, final List<ResourceName> resourceNames) {\r\n \r\n         RoleTO role = controller.read(roleId);\r\n \r\n@@ -174,9 +174,9 @@ public Response bulkDeassociation(\n \r\n             final BulkActionResult res = new BulkActionResult();\r\n \r\n-            if (type == ResourceDeAssociationActionType.UNLINK) {\r\n+            if (type == ResourceDeassociationActionType.UNLINK) {\r\n                 for (ResourceName resourceName : resourceNames) {\r\n-                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\r\n+                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n                             ? BulkActionResult.Status.FAILURE\r\n                             : BulkActionResult.Status.SUCCESS);\r\n                 }\r\n@@ -223,7 +223,7 @@ public Response bulkAssociation(\n \r\n             if (type == ResourceAssociationActionType.LINK) {\r\n                 for (ResourceName resourceName : resourceNames) {\r\n-                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\r\n+                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n                             ? BulkActionResult.Status.FAILURE\r\n                             : BulkActionResult.Status.SUCCESS);\r\n                 }\r"},{"sha":"1b23bef9dad35b31a69a7e31ca7fa5bfc9fd55dc","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n@@ -163,7 +163,7 @@ public Response status(final Long userId, final StatusMod statusMod) {\n \n     @Override\n     public Response bulkDeassociation(\n-            final Long userId, final ResourceDeAssociationActionType type, final List<ResourceName> resourceNames) {\n+            final Long userId, final ResourceDeassociationActionType type, final List<ResourceName> resourceNames) {\n \n         final UserTO user = controller.read(userId);\n \n@@ -191,9 +191,9 @@ public Response bulkDeassociation(\n \n             final BulkActionResult res = new BulkActionResult();\n \n-            if (type == ResourceDeAssociationActionType.UNLINK) {\n+            if (type == ResourceDeassociationActionType.UNLINK) {\n                 for (ResourceName resourceName : resourceNames) {\n-                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\n+                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n                             ? BulkActionResult.Status.FAILURE\n                             : BulkActionResult.Status.SUCCESS);\n                 }\n@@ -250,7 +250,7 @@ public Response bulkAssociation(\n \n             if (type == ResourceAssociationActionType.LINK) {\n                 for (ResourceName resourceName : associationMod.getTargetResources()) {\n-                    res.add(resourceName.getName(), updated.getResources().contains(resourceName.getName())\n+                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n                             ? BulkActionResult.Status.FAILURE\n                             : BulkActionResult.Status.SUCCESS);\n                 }"},{"sha":"5e78fb34066aff569b6b016b9c34624ac2246d37","filename":"core/src/main/java/org/apache/syncope/core/services/UserWorkflowServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserWorkflowServiceImpl.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -40,7 +40,7 @@ public WorkflowFormTO claimForm(final String taskId) {\n \n     @Override\n     public UserTO executeTask(final String taskId, final UserTO userTO) {\n-        return controller.executeWorkflow(userTO, taskId);\n+        return controller.executeWorkflowTask(userTO, taskId);\n     }\n \n     @Override"},{"sha":"3be2427e39aea09a899ce6eaadfe86dfbedf31ff","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -28,8 +28,6 @@ under the License.\n                            http://cxf.apache.org/schemas/jaxrs.xsd\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n-                           http://www.springframework.org/schema/oxm\n-                           http://www.springframework.org/schema/oxm/spring-oxm.xsd\n                            http://www.springframework.org/schema/aop \n                            http://www.springframework.org/schema/aop/spring-aop.xsd\">\n \n@@ -86,6 +84,7 @@ under the License.\n     <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n     <property name=\"ignoreMessageWriters\" value=\"true\"/>\n     <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n+    <property name=\"javaDocPath\" value=\"/WEB-INF/lib/syncope-common-${project.version}-javadoc.jar\"/>\n   </bean>\n   \n   <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.services.AddETagFilter\"/>"},{"sha":"6551d096873a139fe3f02e9e3c75ff7e6743275c","filename":"core/src/main/resources/wadl2html/schema.xsl","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fschema.xsl?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -118,8 +118,15 @@\n         <xsl:text>=\"</xsl:text>\n         <xsl:choose>\n           <xsl:when test=\"contains(., ':') and not(starts-with(., 'xs:'))\">\n-            <a href=\"#int_{substring-after(., ':')}\">\n-              <xsl:value-of select=\".\"/>                          \n+            <a>\n+              <xsl:variable name=\"current\" select=\".\"/>\n+              <xsl:attribute name=\"href\">\n+                <xsl:choose>\n+                  <xsl:when test=\"name() = 'ref'\">#<xsl:value-of select=\"substring-after($current, ':')\"/></xsl:when>\n+                  <xsl:otherwise>#int_<xsl:value-of select=\"substring-after($current, ':')\"/></xsl:otherwise>\n+                </xsl:choose>                \n+              </xsl:attribute>\n+              <xsl:value-of select=\"$current\"/>                          \n             </a>\n           </xsl:when>\n           <xsl:otherwise>"},{"sha":"b742570fc67492bf342abac538df90113684f376","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -79,7 +79,7 @@\n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n     \"classpath:syncopeContext.xml\",\n-    \"classpath:restContext.xml\",\n+    \"classpath:restTestEnv.xml\",\n     \"classpath:persistenceContext.xml\",\n     \"classpath:schedulingContext.xml\",\n     \"classpath:workflowContext.xml\""},{"sha":"8896074d1295728ea22e1d55f90b0bba0a5c3934","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AbstractDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAbstractDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAbstractDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAbstractDAOTest.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -24,6 +24,6 @@\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:persistenceTestEnv.xml\"})\n+@ContextConfiguration(locations = { \"classpath:persistenceTestEnv.xml\" })\n public abstract class AbstractDAOTest extends AbstractTest {\n }"},{"sha":"286b1cd992ecd9c24a833c99f67cdad951b28052","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -50,7 +50,7 @@\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -405,7 +405,7 @@ public void unlink() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.UNLINK,\n+                ResourceDeassociationActionType.UNLINK,\n                 CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -455,7 +455,7 @@ public void unassign() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.UNASSIGN,\n+                ResourceDeassociationActionType.UNASSIGN,\n                 CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -504,7 +504,7 @@ public void deprovision() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.DEPROVISION,\n+                ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -572,7 +572,7 @@ public void deprovisionUnlinked() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, actual.getId()));\n \n         assertNotNull(roleService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.DEPROVISION,\n+                ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(RESOURCE_NAME_LDAP, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n "},{"sha":"0f716e9bf1810c88d26ca4a3bfde11a72965814a","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -84,7 +84,7 @@\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n-import org.apache.syncope.common.types.ResourceDeAssociationActionType;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n@@ -1853,7 +1853,7 @@ public void unlink() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.UNLINK,\n+                ResourceDeassociationActionType.UNLINK,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -1917,7 +1917,7 @@ public void unassign() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.UNASSIGN,\n+                ResourceDeassociationActionType.UNASSIGN,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -1982,7 +1982,7 @@ public void deprovision() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.DEPROVISION,\n+                ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n \n@@ -2068,7 +2068,7 @@ public void deprovisionUnlinked() {\n         assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_CSV, AttributableType.USER, actual.getId()));\n \n         assertNotNull(userService.bulkDeassociation(actual.getId(),\n-                ResourceDeAssociationActionType.DEPROVISION,\n+                ResourceDeassociationActionType.DEPROVISION,\n                 CollectionWrapper.wrap(RESOURCE_NAME_CSV, ResourceName.class)).\n                 readEntity(BulkActionResult.class));\n "},{"sha":"9cdb8f31d2f5c7be58917e0b932c55340b09c356","filename":"core/src/test/resources/restTestEnv.xml","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fresources%2FrestTestEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/core%2Fsrc%2Ftest%2Fresources%2FrestTestEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FrestTestEnv.xml?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!--  This should not end in *Context as it would then be picked up in the cargo start -->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:context=\"http://www.springframework.org/schema/context\"\n+       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://www.springframework.org/schema/context\n+                           http://www.springframework.org/schema/context/spring-context.xsd\n+                           http://www.springframework.org/schema/aop \n+                           http://www.springframework.org/schema/aop/spring-aop.xsd\">\n+\n+  <aop:aspectj-autoproxy/>\n+\n+  <context:component-scan base-package=\"org.apache.syncope.core.rest.controller\"/>\n+  <bean class=\"${controllerHandler}\"/>\n+  <bean class=\"${attributableTransformer}\"/>\n+\n+</beans>"},{"sha":"d22307472037193dd6aafa07d5450f8d6a0a0781","filename":"pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d8cb33638ff2f5dbe2338c499723459b96aa249/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d8cb33638ff2f5dbe2338c499723459b96aa249/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6d8cb33638ff2f5dbe2338c499723459b96aa249","patch":"@@ -916,6 +916,11 @@ under the License.\n             </delimiters>\n           </configuration>\n         </plugin>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-javadoc-plugin</artifactId>\n+          <version>2.9.1</version>          \n+        </plugin>\n         <plugin>\n           <groupId>org.codehaus.mojo</groupId>\n           <artifactId>exec-maven-plugin</artifactId>"}]}