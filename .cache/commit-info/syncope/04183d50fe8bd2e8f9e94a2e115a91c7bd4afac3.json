{"sha":"04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0MTgzZDUwZmU4YmQyZThmOWU5NGEyZTExNWE5MWM3YmQ0YWZhYzM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-16T16:47:23Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-16T16:47:23Z"},"message":"[SYNCOPE-778] providing feature to force change password (bulk as well)","tree":{"sha":"d818f25974f2694e32dc3bf984ca0b78546aba50","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d818f25974f2694e32dc3bf984ca0b78546aba50"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"9a10f6e9924bb46c6756fa00433d99f21f3eb982","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9a10f6e9924bb46c6756fa00433d99f21f3eb982","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9a10f6e9924bb46c6756fa00433d99f21f3eb982"}],"stats":{"total":230,"additions":165,"deletions":65},"files":[{"sha":"caf5dce2a692fd06a24ced87c51ea6a0faa22015","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -29,7 +29,6 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.panels.AbstractSearchResultPanel.EventDataWrapper;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n@@ -44,7 +43,6 @@\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n@@ -69,8 +67,7 @@ public BulkContent(\n             final BaseRestClient bulkActionExecutor,\n             final String keyFieldName) {\n \n-        this(MultilevelPanel.SECOND_LEVEL_ID,\n-                modal, items, columns, actions, bulkActionExecutor, keyFieldName);\n+        this(MultilevelPanel.SECOND_LEVEL_ID, modal, items, columns, actions, bulkActionExecutor, keyFieldName);\n     }\n \n     public BulkContent(\n@@ -146,8 +143,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n-                            final AbstractAnyRestClient<?> anyRestClient =\n-                                    AbstractAnyRestClient.class.cast(bulkActionExecutor);\n+                            final AbstractAnyRestClient<?> anyRestClient\n+                                    = AbstractAnyRestClient.class.cast(bulkActionExecutor);\n \n                             if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {\n                                 throw new IllegalArgumentException(\"Invalid items\");\n@@ -205,10 +202,6 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             modal.changeCloseButtonLabel(getString(\"close\", null, \"Close\"), target);\n                         }\n \n-                        final EventDataWrapper data = new EventDataWrapper();\n-                        data.setTarget(target);\n-                        send(getPage(), Broadcast.BREADTH, data);\n-\n                         final List<IColumn<T, S>> newColumnList = new ArrayList<>(columns);\n                         newColumnList.add(newColumnList.size(), new BulkActionResultColumn<T, S>(res, keyFieldName));\n "},{"sha":"cb5221afe6fb3e8b4be75afe660190800d069468","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -143,8 +143,10 @@ protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> buil\n         rows = prefMan.getPaginatorRows(getRequest(), paginatorRowsKey());\n \n         setWindowClosedReloadCallback(modal);\n+        setWindowClosedReloadCallback(altDefaultModal);\n+        setWindowClosedReloadCallback(displayAttributeModal);\n     }\n-    \n+\n     protected abstract DP dataProvider();\n \n     protected abstract String paginatorRowsKey();\n@@ -247,7 +249,9 @@ public void onEvent(final IEvent<?> event) {\n                 updateResultTable(data.isCreate(), data.getRows());\n             }\n \n-            data.getTarget().add(container);\n+            if (AbstractSearchResultPanel.this.container.isVisibleInHierarchy()) {\n+                data.getTarget().add(AbstractSearchResultPanel.this.container);\n+            }\n         }\n         super.onEvent(event);\n     }"},{"sha":"96627531e8d94fc2c8caf9cab3e3ad0049423f08","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n@@ -214,7 +215,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     target.add(bulkModal.setContent(new BulkActionModal<>(\n                             bulkModal,\n                             builder.pageRef,\n-                            group.getModelObject(),\n+                            new ArrayList<T>(group.getModelObject()),\n                             // serialization problem with sublist only\n                             new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n                             builder.bulkActions,\n@@ -225,13 +226,15 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 } else {\n                     builder.multiLevelPanel.next(\"bulk.action\", new BulkContent<>(\n                             builder.baseModal,\n-                            group.getModelObject(),\n+                            new ArrayList<T>(group.getModelObject()),\n                             // serialization problem with sublist only\n                             new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n                             builder.bulkActions,\n                             builder.bulkActionExecutor,\n                             builder.itemKeyField), target);\n                 }\n+                group.setModelObject(Collections.<T>emptyList());\n+                target.add(group);\n             }\n         }.setEnabled(builder.isBulkEnabled()).setVisible(builder.isBulkEnabled()));\n     }"},{"sha":"c8022e3856bd0e04a414f3ba8999e4786c41089c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n-    public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n+    public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\", \"mustChangePassword\" };\n \n     public UserDisplayAttributesModalPanel(\n             final BaseModal<T> modal,"},{"sha":"443d01e90cbc4de08648faac9126cf53fbce4b3b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":64,"deletions":33,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -22,7 +22,7 @@\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Date;\n+import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.status.StatusModal;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n@@ -66,6 +67,18 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_USERS_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+\n+        bulkActions.add(ActionLink.ActionType.MUSTCHANGEPASSWORD);\n+        bulkActions.add(ActionLink.ActionType.DELETE);\n+        bulkActions.add(ActionLink.ActionType.SUSPEND);\n+        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n     @Override\n     protected List<IColumn<UserTO, String>> getColumns() {\n \n@@ -74,10 +87,8 @@ protected List<IColumn<UserTO, String>> getColumns() {\n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n             final Field field = ReflectionUtils.findField(UserTO.class, name);\n \n-            if (\"token\".equalsIgnoreCase(name)) {\n-                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+            if (field != null && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n+                columns.add(new BooleanPropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n             } else {\n                 columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n             }\n@@ -121,49 +132,69 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n-                        altDefaultModal.setFormModel(formModel);\n-\n-                        target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n-\n-                        altDefaultModal.header(new Model<>(\n-                                getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n-\n-                        altDefaultModal.show(true);\n+                        try {\n+                            UserRestClient.class.cast(restClient).\n+                                    mustChangePassword(model.getObject().getETagValue(), model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+                }, ActionLink.ActionType.MUSTCHANGEPASSWORD, StandardEntitlement.USER_UPDATE).add(\n+                        new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n                         altDefaultModal.setFormModel(formModel);\n \n                         target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n+                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n \n                         altDefaultModal.header(new Model<>(\n                                 getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n \n                         altDefaultModal.show(true);\n                     }\n-                }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        send(UserSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new AnyHandler<>(new UserRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(\n+                                new ActionLink<UserTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                                final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(\n+                                        new AnyHandler<>(model.\n+                                                getObject()));\n+                                altDefaultModal.setFormModel(formModel);\n+\n+                                target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                        altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n+\n+                                altDefaultModal.header(new Model<>(\n+                                        getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n+\n+                                altDefaultModal.show(true);\n+                            }\n+                        }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                                send(UserSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                new AnyHandler<>(new UserRestClient().read(model.getObject().getKey())),\n+                                                target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"b26d31bdf3569a5b5395ec68cebad0af7cb0f87c","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -23,6 +23,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.BulkAction;\n@@ -115,6 +116,13 @@ public ConnObjectTO readConnObject(final String resourceName, final Long id) {\n         return getService(ResourceService.class).readConnObject(resourceName, AnyTypeKind.USER.name(), id);\n     }\n \n+    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final Long key) {\n+        final UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(key);\n+        userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(true).build());\n+        return update(etag, userPatch);\n+    }\n+\n     public void suspend(final String etag, final long userKey, final List<StatusBean> statuses) {\n         StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses, false);\n         statusPatch.setKey(userKey);"},{"sha":"9bd19eee6d4399fbe6bdedfe96d427552e3ce8d3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -42,6 +42,7 @@ public enum ActionType {\n \n         MAPPING(\"update\"),\n         ACCOUNT_LINK(\"update\"),\n+        MUSTCHANGEPASSWORD(\"update\"),\n         RESET_TIME(\"update\"),\n         CLONE(\"create\"),\n         CREATE(\"create\"),"},{"sha":"4170ba97ac12c9836107e5d76395bc424c747bbf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -57,6 +57,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelAccountLink\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelResetPwd\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n@@ -212,6 +213,25 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case MUSTCHANGEPASSWORD:\n+                fragment = new Fragment(\"panelResetPwd\", \"fragmentResetPwd\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetPwdLink\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             case RESET_TIME:\n                 fragment = new Fragment(\"panelResetTime\", \"fragmentResetTime\", this);\n \n@@ -792,6 +812,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelAccountLink\", \"emptyFragment\", this));\n                 break;\n \n+            case MUSTCHANGEPASSWORD:\n+                super.addOrReplace(new Fragment(\"panelResetPwd\", \"emptyFragment\", this));\n+                break;\n+\n             case RESET_TIME:\n                 super.addOrReplace(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n                 break;"},{"sha":"d8754e644ddd085e474916aae2a6d8fd90fc02bb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -26,6 +26,7 @@\n     </style>\n   </wicket:head>\n   <wicket:panel>\n+    <span wicket:id=\"panelResetPwd\">[plus]</span>\n     <span wicket:id=\"panelClaim\">[plus]</span>\n     <span wicket:id=\"panelManageResources\">[plus]</span>\n     <span wicket:id=\"panelManageUsers\">[plus]</span>\n@@ -62,6 +63,10 @@\n     <span wicket:id=\"panelZoomIn\">[plus]</span>\n     <span wicket:id=\"panelZoomOut\">[plus]</span>\n \n+    <wicket:fragment wicket:id=\"fragmentResetPwd\">\n+      <a href=\"#\" wicket:id=\"resetPwdLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"reset password icon\" title=\"Reset password\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentClaim\">\n       <a href=\"#\" wicket:id=\"claimLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/claim.png\" alt=\"claim icon\" title=\"Claim\"/></a>\n     </wicket:fragment>"},{"sha":"c3edf7ce745b6e2eb57c25085207b3efd7eb06c1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/BulkAction.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBulkAction.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -38,6 +38,7 @@ public class BulkAction extends AbstractBaseBean {\n     @XmlType(name = \"bulkActionType\")\n     public enum Type {\n \n+        MUSTCHANGEPASSWORD,\n         DELETE,\n         REACTIVATE,\n         SUSPEND,"},{"sha":"98f9aaeeb6305459f93f45b2b9ca7cf18bfcffde","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":44,"deletions":14,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -19,15 +19,18 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.Set;\n+import javax.ws.rs.BadRequestException;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n import org.apache.syncope.common.lib.patch.AttrPatch;\n+import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -197,8 +200,8 @@ public Response update(final TO anyTO) {\n \n         checkETag(before.getETagValue());\n \n-        ProvisioningResult<TO> updated =\n-                getAnyLogic().update(AnyOperations.<TO, P>diff(anyTO, before, false), isNullPriorityAsync());\n+        ProvisioningResult<TO> updated = getAnyLogic().update(AnyOperations.<TO, P>diff(anyTO, before, false),\n+                isNullPriorityAsync());\n         return modificationResponse(updated);\n     }\n \n@@ -326,6 +329,27 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n         BulkActionResult result = new BulkActionResult();\n \n         switch (bulkAction.getType()) {\n+            case MUSTCHANGEPASSWORD:\n+                if (logic instanceof UserLogic) {\n+                    for (String key : bulkAction.getTargets()) {\n+                        try {\n+                            final UserPatch userPatch = new UserPatch();\n+                            userPatch.setKey(Long.valueOf(key));\n+                            userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(true).build());\n+\n+                            result.getResults().put(\n+                                    String.valueOf(((UserLogic) logic).update(userPatch, false).getAny().getKey()),\n+                                    BulkActionResult.Status.SUCCESS);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error performing delete for user {}\", key, e);\n+                            result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                        }\n+                    }\n+                } else {\n+                    throw new BadRequestException();\n+                }\n+                break;\n+\n             case DELETE:\n                 for (String key : bulkAction.getTargets()) {\n                     try {\n@@ -356,23 +380,29 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n                             result.getResults().put(key, BulkActionResult.Status.FAILURE);\n                         }\n                     }\n+                } else {\n+                    throw new BadRequestException();\n                 }\n                 break;\n \n             case REACTIVATE:\n-                for (String key : bulkAction.getTargets()) {\n-                    StatusPatch statusPatch = new StatusPatch();\n-                    statusPatch.setKey(Long.valueOf(key));\n-                    statusPatch.setType(StatusPatchType.REACTIVATE);\n-                    try {\n-                        result.getResults().put(\n-                                String.valueOf(((UserLogic) logic).\n-                                        status(statusPatch, isNullPriorityAsync()).getAny().getKey()),\n-                                BulkActionResult.Status.SUCCESS);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error performing reactivate for user {}\", key, e);\n-                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                if (logic instanceof UserLogic) {\n+                    for (String key : bulkAction.getTargets()) {\n+                        StatusPatch statusPatch = new StatusPatch();\n+                        statusPatch.setKey(Long.valueOf(key));\n+                        statusPatch.setType(StatusPatchType.REACTIVATE);\n+                        try {\n+                            result.getResults().put(\n+                                    String.valueOf(((UserLogic) logic).\n+                                            status(statusPatch, isNullPriorityAsync()).getAny().getKey()),\n+                                    BulkActionResult.Status.SUCCESS);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error performing reactivate for user {}\", key, e);\n+                            result.getResults().put(key, BulkActionResult.Status.FAILURE);\n+                        }\n                     }\n+                } else {\n+                    throw new BadRequestException();\n                 }\n                 break;\n "},{"sha":"33421ce0f199e50f78ffdd42818b57d4218afd6d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=04183d50fe8bd2e8f9e94a2e115a91c7bd4afac3","patch":"@@ -77,7 +77,7 @@ public void userResourceBulkAction() {\n         assertNotNull(component);\n \n         wicketTester.clickLink(component.getPageRelativePath()\n-                + \":cells:5:cell:panelManageResources:manageResourcesLink\");\n+                + \":cells:6:cell:panelManageResources:manageResourcesLink\");\n \n         wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n@@ -118,7 +118,7 @@ public void userStatusBulkAction() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n         wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n@@ -153,7 +153,7 @@ public void userStatusBulkAction() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n         wicketTester.assertComponent(tabPanel + \"alternativeDefaultModal:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\""}]}