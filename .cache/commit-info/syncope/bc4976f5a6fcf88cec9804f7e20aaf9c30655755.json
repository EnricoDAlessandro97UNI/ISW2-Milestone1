{"sha":"bc4976f5a6fcf88cec9804f7e20aaf9c30655755","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJjNDk3NmY1YTZmY2Y4OGNlYzk4MDRmN2UyMGFhZjljMzA2NTU3NTU=","commit":{"author":{"name":"Massimiliano Perrone","email":"massimiliano.perrone@tirasa.net","date":"2016-01-28T16:59:03Z"},"committer":{"name":"Massimiliano Perrone","email":"massimiliano.perrone@tirasa.net","date":"2016-01-28T17:00:31Z"},"message":"Parameters order and boolean management, #SYNCOPE-156","tree":{"sha":"754ece8340ac57c8fd7ee658b62befbe18065069","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/754ece8340ac57c8fd7ee658b62befbe18065069"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bc4976f5a6fcf88cec9804f7e20aaf9c30655755","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc4976f5a6fcf88cec9804f7e20aaf9c30655755","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc4976f5a6fcf88cec9804f7e20aaf9c30655755","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb4059fabaecaa2e892df5dedea902b6f89ba745","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb4059fabaecaa2e892df5dedea902b6f89ba745","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cb4059fabaecaa2e892df5dedea902b6f89ba745"}],"stats":{"total":83,"additions":74,"deletions":9},"files":[{"sha":"f33276ce0d9aa5b2764003be375c33dc03e1eb56","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":32,"deletions":3,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=bc4976f5a6fcf88cec9804f7e20aaf9c30655755","patch":"@@ -94,6 +94,34 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSch\n                 panel = new AjaxDateFieldPanel(\n                         id, valueHeaderName, new Model<Date>(), plainSchemaTO.getConversionPattern());\n                 break;\n+            case Boolean:\n+                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n+                ((AjaxDropDownChoicePanel<String>) panel).setChoices(Arrays.asList(\"true\", \"false\"));\n+\n+                if (!attrTO.getValues().isEmpty()) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        private static final long serialVersionUID = -3724971416312135885L;\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, final int i) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getObject(\n+                                final String id, final IModel<? extends List<? extends String>> choices) {\n+                            return id;\n+                        }\n+                    });\n+                }\n+                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(false);\n+                break;\n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(plainSchemaTO));\n@@ -120,6 +148,8 @@ public String getObject(\n                         }\n                     });\n                 }\n+                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(\n+                        \"true\".equalsIgnoreCase(plainSchemaTO.getMandatoryCondition()));\n                 break;\n \n             case Long:\n@@ -139,9 +169,8 @@ public String getObject(\n         } else {\n             panel.setNewModel(attrTO.getValues());\n         }\n-        if (plainSchemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\")) {\n-            panel.setRequired(true);\n-        }\n+\n+        panel.setRequired(\"true\".equalsIgnoreCase(plainSchemaTO.getMandatoryCondition()));\n         return panel;\n     }\n }"},{"sha":"8e6662d747a378b3539dc0da1eb065b7897a50bf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":33,"deletions":3,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=bc4976f5a6fcf88cec9804f7e20aaf9c30655755","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.util.Arrays;\n import java.util.Date;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -80,6 +81,34 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO) {\n                 panel = new AjaxDateFieldPanel(\n                         id, valueHeaderName, new Model<Date>(), schemaTO.getConversionPattern());\n                 break;\n+            case Boolean:\n+                panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n+                ((AjaxDropDownChoicePanel<String>) panel).setChoices(Arrays.asList(\"true\", \"false\"));\n+\n+                if (!attrTO.getValues().isEmpty()) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        private static final long serialVersionUID = -3724971416312135885L;\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, final int i) {\n+                            return value;\n+                        }\n+\n+                        @Override\n+                        public String getObject(\n+                                final String id, final IModel<? extends List<? extends String>> choices) {\n+                            return id;\n+                        }\n+                    });\n+                }\n+                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(false);\n+                break;\n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n@@ -106,6 +135,8 @@ public String getObject(\n                         }\n                     });\n                 }\n+                ((AjaxDropDownChoicePanel<String>) panel).setNullValid(\n+                        \"false\".equalsIgnoreCase(schemaTO.getMandatoryCondition()));\n                 break;\n \n             case Long:\n@@ -125,9 +156,8 @@ public String getObject(\n         } else {\n             panel.setNewModel(attrTO.getValues());\n         }\n-        if (schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\")) {\n-            panel.setRequired(true);\n-        }\n+\n+        panel.setRequired(\"true\".equalsIgnoreCase(schemaTO.getMandatoryCondition()));\n         return panel;\n     }\n }"},{"sha":"d5e1ec30e21263157787f680c9449ee2a8c43433","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=bc4976f5a6fcf88cec9804f7e20aaf9c30655755","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ParametersPanel.ParametersProvider;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n@@ -47,6 +48,7 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -210,8 +212,8 @@ public void populateItem(\n \n                 final AttrTO attrTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n+                        getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 ActionLinksPanel.Builder<Serializable> addWithRoles = actionLinks\n                         .addWithRoles(new ActionLink<Serializable>() {\n@@ -261,13 +263,18 @@ protected final class ParametersProvider extends SearchableDataProvider<AttrTO>\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n+        private final SortableDataProviderComparator<AttrTO> comparator;\n+\n         private ParametersProvider(final int paginatorRows) {\n             super(paginatorRows);\n+            setSort(\"schema\", SortOrder.DESCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override\n         public Iterator<AttrTO> iterator(final long first, final long count) {\n             final List<AttrTO> list = SyncopeConsoleSession.get().getService(ConfigurationService.class).list();\n+            Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n "},{"sha":"0f8ade974b571650e8daef62351c547a24408867","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc4976f5a6fcf88cec9804f7e20aaf9c30655755/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=bc4976f5a6fcf88cec9804f7e20aaf9c30655755","patch":"@@ -199,7 +199,6 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<Boolean>(), false);\n                 panel.setRequired(required);\n                 break;\n-\n             case Date:\n                 panel = new AjaxDateFieldPanel(\n                         \"panel\", schemaTO.getKey(), new Model<Date>(), schemaTO.getConversionPattern());"}]}