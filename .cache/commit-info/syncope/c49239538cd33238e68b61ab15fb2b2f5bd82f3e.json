{"sha":"c49239538cd33238e68b61ab15fb2b2f5bd82f3e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM0OTIzOTUzOGNkMzMyMzhlNjhiNjFhYjE1ZmIyYjJmNWJkODJmM2U=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-03T16:34:46Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-03T16:34:46Z"},"message":"Minor bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246681 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"87641aca88b0bd62510cae134ef3a1561bb3052a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/87641aca88b0bd62510cae134ef3a1561bb3052a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c49239538cd33238e68b61ab15fb2b2f5bd82f3e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c49239538cd33238e68b61ab15fb2b2f5bd82f3e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c49239538cd33238e68b61ab15fb2b2f5bd82f3e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/comments","author":null,"committer":null,"parents":[{"sha":"10ef24328d3c2af5f300c34549cdf713e6bb2589","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10ef24328d3c2af5f300c34549cdf713e6bb2589","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10ef24328d3c2af5f300c34549cdf713e6bb2589"}],"stats":{"total":67,"additions":33,"deletions":34},"files":[{"sha":"ab557b4d1c26aaa15317766a00caa87967e9f825","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MAttr.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -52,6 +52,7 @@ public class MAttr extends AbstractAttr {\n     private MAttrUniqueValue uniqueValue;\n \n     public MAttr() {\n+        super();\n         values = new ArrayList<MAttrValue>();\n     }\n "},{"sha":"1be852203aa72c06fda3cd86fa93c73baf397a60","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RAttr.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -52,6 +52,7 @@ public class RAttr extends AbstractAttr {\n     private RAttrUniqueValue uniqueValue;\n \n     public RAttr() {\n+        super();\n         values = new ArrayList<RAttrValue>();\n     }\n "},{"sha":"90974f0c676b3fc35b82ebcbab5d4d7bb5c0a289","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -36,7 +36,7 @@ List<SchemaMapping> getMappings(String schemaName,\n             SourceMappingType sourceMappingType,\n             String resourceName);\n \n-    String getSchemaNameForAccountId(String resourceName);\n+    SchemaMapping getMappingForAccountId(String resourceName);\n \n     void deleteMappings(String schemaName, SourceMappingType sourceMappingType);\n "},{"sha":"43a49e4c80f8594f3f8fe7caec91ade1b7e90e4f","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -80,14 +80,16 @@ public List<SchemaMapping> getMappings(final String sourceAttrName,\n     }\n \n     @Override\n-    public String getSchemaNameForAccountId(final String resourceName) {\n+    public SchemaMapping getMappingForAccountId(\n+            final String resourceName) {\n+\n         Query query = entityManager.createQuery(\n                 \"SELECT m FROM SchemaMapping m \"\n                 + \"WHERE m.resource.name=:resourceName \"\n                 + \"AND m.accountid = 1\");\n         query.setParameter(\"resourceName\", resourceName);\n \n-        return ((SchemaMapping) query.getSingleResult()).getSourceAttrName();\n+        return (SchemaMapping) query.getSingleResult();\n     }\n \n     @Override"},{"sha":"aedbf0d9943060f5e0e46a0507c94f931f00c862","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -43,8 +43,7 @@ public boolean isValid(final AbstractAttr object,\n                         && object.getUniqueValue() == null;\n \n                 if (!object.getSchema().isMultivalue()) {\n-                    isValid &= object.getValues().size() == 1\n-                            && object.getUniqueValue() == null;\n+                    isValid &= object.getValues().size() == 1;\n                 }\n             }\n "},{"sha":"b21fb9c6e6cef6aa749d16556bf3961fcbf666d9","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":4,"deletions":13,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -59,9 +59,7 @@ public ResourceTO create(final HttpServletResponse response,\n             final @RequestBody ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Creation request received\");\n-        }\n+        LOG.debug(\"Resource creation: {}\", resourceTO);\n \n         SyncopeClientCompositeErrorException scce =\n                 new SyncopeClientCompositeErrorException(\n@@ -73,10 +71,7 @@ public ResourceTO create(final HttpServletResponse response,\n             throw new NotFoundException(\"Missing resource\");\n         }\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Verify that resource dosn't exist\");\n-        }\n-\n+        LOG.debug(\"Verify that resource doesn't exist yet\");\n         if (resourceDAO.find(resourceTO.getName()) != null) {\n             SyncopeClientException ex = new SyncopeClientException(\n                     SyncopeClientExceptionType.DuplicateUniqueValue);\n@@ -118,9 +113,7 @@ public ResourceTO update(final HttpServletResponse response,\n             final @RequestBody ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Update request received\");\n-        }\n+        LOG.debug(\"Role update request: {}\", resourceTO);\n \n         TargetResource resource = null;\n         if (resourceTO != null && resourceTO.getName() != null) {\n@@ -265,9 +258,7 @@ public List<SchemaMappingTO> getRoleResourcesMapping(\n             roleMappings.addAll(resourceMappings);\n         }\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Mappings found: \" + roleMappings);\n-        }\n+        LOG.debug(\"Mappings found: {} \", roleMappings);\n \n         return roleMappings;\n     }"},{"sha":"8d341f62a6c35d1f9899c33ed588dcd6b0774fa4","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -137,7 +137,7 @@ private TargetResource getResource(final String resourceName) {\n         return resource;\n     }\n \n-    private void fillAttribute(final List<String> values,\n+    protected void fillAttribute(final List<String> values,\n             final AttributableUtil attributableUtil,\n             final AbstractSchema schema,\n             final AbstractAttr attribute,"},{"sha":"2912b92ac5c64e4211503c9bbf7ed7449f76687e","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -60,30 +60,35 @@ public class CheckInResult {\n \n         private Long workflowId;\n \n-        public CheckInResult(final CheckinResultAction action,\n-                final Long syncopeUserId,\n-                final Long workflowId) {\n-\n-            this.action = action;\n-            this.syncopeUserId = syncopeUserId;\n-            this.workflowId = workflowId;\n-        }\n-\n         public CheckinResultAction getAction() {\n             return action;\n         }\n \n+        public void setAction(CheckinResultAction action) {\n+            this.action = action;\n+        }\n+\n         public Long getSyncopeUserId() {\n             return syncopeUserId;\n         }\n \n+        public void setSyncopeUserId(Long syncopeUserId) {\n+            this.syncopeUserId = syncopeUserId;\n+        }\n+\n         public Long getWorkflowId() {\n             return workflowId;\n         }\n+\n+        public void setWorkflowId(Long workflowId) {\n+            this.workflowId = workflowId;\n+        }\n     }\n \n     public CheckInResult checkIn(final UserTO userTO) {\n-        return new CheckInResult(CheckinResultAction.CREATE, null, null);\n+        CheckInResult result = new CheckInResult();\n+        result.setAction(CheckinResultAction.CREATE);\n+        return result;\n     }\n \n     public SyncopeUser create(final UserTO userTO)"},{"sha":"fe35b842cd29a67ad46f2c20380f2cfdcbf9ead1","filename":"core/src/main/webapp/syncopeClientError.jsp","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -1,8 +1,8 @@\n+<%@page isErrorPage=\"true\" contentType=\"application/json\" pageEncoding=\"UTF-8\"%>\n <%@page import=\"org.hibernate.exception.ConstraintViolationException\"%>\n <%@page import=\"javax.persistence.PersistenceException\"%>\n <%@page import=\"org.springframework.dao.DataIntegrityViolationException\"%>\n <%@page import=\"org.hibernate.exception.LockAcquisitionException\"%>\n-<%@page isErrorPage=\"true\" contentType=\"application/json\" pageEncoding=\"UTF-8\"%>\n <%@page import=\"org.syncope.core.rest.data.InvalidSearchConditionException\"%>\n <%@page import=\"org.syncope.core.persistence.dao.MissingConfKeyException\"%>\n <%@page import=\"org.syncope.client.validation.SyncopeClientException\"%>"},{"sha":"3672649b524cfe77e61878e2c56e603c84db7e4b","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c49239538cd33238e68b61ab15fb2b2f5bd82f3e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=c49239538cd33238e68b61ab15fb2b2f5bd82f3e","patch":"@@ -76,13 +76,13 @@ public final void findById() {\n \n     @Test\n     public final void getAccountId() {\n-        assertEquals(\"username\",\n-                resourceDAO.getSchemaNameForAccountId(\"ws-target-resource-2\"));\n+        SchemaMapping mapping = resourceDAO.getMappingForAccountId(\n+                \"ws-target-resource-2\");\n+        assertEquals(\"username\", mapping.getSourceAttrName());\n     }\n \n     @Test\n-    public final void save()\n-            throws ClassNotFoundException {\n+    public final void save() {\n         TargetResource resource = new TargetResource();\n         resource.setName(\"ws-target-resource-basic-save\");\n "}]}