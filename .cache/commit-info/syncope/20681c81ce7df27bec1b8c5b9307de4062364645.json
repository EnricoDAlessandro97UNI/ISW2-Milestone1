{"sha":"20681c81ce7df27bec1b8c5b9307de4062364645","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIwNjgxYzgxY2U3ZGYyN2JlYzFiOGM1YjkzMDdkZTQwNjIzNjQ2NDU=","commit":{"author":{"name":"Tushar","email":"tusharm567@gmail.com","date":"2016-06-16T07:29:54Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2016-06-17T13:08:06Z"},"message":"SYNCOPE-871 Linked NumberWidgets on Dashboard - This closes #21","tree":{"sha":"e4aa216d1df1715bc373d8eca5e25768604b72ba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e4aa216d1df1715bc373d8eca5e25768604b72ba"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/20681c81ce7df27bec1b8c5b9307de4062364645","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20681c81ce7df27bec1b8c5b9307de4062364645","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/20681c81ce7df27bec1b8c5b9307de4062364645","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20681c81ce7df27bec1b8c5b9307de4062364645/comments","author":{"login":"tmess567","id":9494086,"node_id":"MDQ6VXNlcjk0OTQwODY=","avatar_url":"https://avatars.githubusercontent.com/u/9494086?v=4","gravatar_id":"","url":"https://api.github.com/users/tmess567","html_url":"https://github.com/tmess567","followers_url":"https://api.github.com/users/tmess567/followers","following_url":"https://api.github.com/users/tmess567/following{/other_user}","gists_url":"https://api.github.com/users/tmess567/gists{/gist_id}","starred_url":"https://api.github.com/users/tmess567/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmess567/subscriptions","organizations_url":"https://api.github.com/users/tmess567/orgs","repos_url":"https://api.github.com/users/tmess567/repos","events_url":"https://api.github.com/users/tmess567/events{/privacy}","received_events_url":"https://api.github.com/users/tmess567/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bd1f28f84b300da7f7d62b67431b9163145cf072","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bd1f28f84b300da7f7d62b67431b9163145cf072","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bd1f28f84b300da7f7d62b67431b9163145cf072"}],"stats":{"total":83,"additions":76,"deletions":7},"files":[{"sha":"574e9fa5a5abf6f8933e748dce4e9e995251dbbb","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=20681c81ce7df27bec1b8c5b9307de4062364645","patch":"@@ -134,7 +134,11 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        updateRealmContent(realmChoicePanel.getCurrentRealm());\n+        try {\n+            updateRealmContent(realmChoicePanel.getCurrentRealm(), parameters.get(\"selectedIndex\").toInteger());\n+        } catch (Exception e) {\n+            updateRealmContent(realmChoicePanel.getCurrentRealm(), 0);\n+        }\n     }\n \n     @Override\n@@ -144,7 +148,7 @@ public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof ChosenRealm) {\n             @SuppressWarnings(\"unchecked\")\n             final ChosenRealm<RealmTO> choosenRealm = ChosenRealm.class.cast(event.getPayload());\n-            updateRealmContent(choosenRealm.getObj());\n+            updateRealmContent(choosenRealm.getObj(), 0);\n             choosenRealm.getTarget().add(content);\n         } else if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n             final AjaxWizard.NewItemEvent<?> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.getPayload());\n@@ -166,11 +170,11 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    private WebMarkupContainer updateRealmContent(final RealmTO realmTO) {\n+    private WebMarkupContainer updateRealmContent(final RealmTO realmTO, final int selectedIndex) {\n         if (realmTO == null) {\n             return content;\n         }\n-        content.addOrReplace(new Realm(\"body\", realmTO, getPageReference()) {\n+        content.addOrReplace(new Realm(\"body\", realmTO, getPageReference(), selectedIndex) {\n \n             private static final long serialVersionUID = 8221398624379357183L;\n \n@@ -230,7 +234,7 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     target.add(realmChoicePanel.reloadRealmTree(target));\n \n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    updateRealmContent(parent);\n+                    updateRealmContent(parent, selectedIndex);\n                     target.add(content);\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);"},{"sha":"562f641805bbbc5f0a5d4d9493ceffa8a2495869","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=20681c81ce7df27bec1b8c5b9307de4062364645","patch":"@@ -56,12 +56,14 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n-    public Realm(final String id, final RealmTO realmTO, final PageReference pageRef) {\n+    public Realm(final String id, final RealmTO realmTO, final PageReference pageRef, final int selectedIndex) {\n         super(id);\n         this.realmTO = realmTO;\n         this.anyTypeTOs = anyTypeRestClient.list();\n \n-        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef)));\n+        AjaxBootstrapTabbedPanel tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        tabbedPanel.setSelectedTab(selectedIndex);\n+        add(tabbedPanel);\n     }\n \n     public RealmTO getRealmTO() {"},{"sha":"3c4f6ddfb9fbeb26612d641e481134939070a56a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/NumberWidget.java","status":"modified","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20681c81ce7df27bec1b8c5b9307de4062364645/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java?ref=20681c81ce7df27bec1b8c5b9307de4062364645","patch":"@@ -18,9 +18,20 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.AnyTypeComparator;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.wicket.behavior.AttributeAppender;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.syncope.client.console.pages.Realms;\n+import org.apache.syncope.client.console.pages.Roles;\n+import org.apache.syncope.client.console.topology.Topology;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class NumberWidget extends BaseWidget {\n \n@@ -37,6 +48,58 @@ public NumberWidget(final String id, final String bg, final int number, final St\n \n         WebMarkupContainer box = new WebMarkupContainer(\"box\");\n         box.add(new AttributeAppender(\"class\", \" \" + bg));\n+        box.add(new AjaxEventBehavior(\"onmousedown\") {\n+            @Override \n+            protected void onEvent(final AjaxRequestTarget target) {\n+                List<AnyTypeTO> anyTypeTOs = new AnyTypeRestClient().list();\n+                PageParameters pageParameters = new PageParameters();\n+                switch (id) {\n+                    case \"totalUsers\":\n+                        pageParameters.add(\"selectedIndex\", 1);\n+                        setResponsePage(Realms.class, pageParameters);\n+                        break;\n+                    case \"totalGroups\":\n+                        pageParameters.add(\"selectedIndex\", 2);\n+                        setResponsePage(Realms.class, pageParameters);\n+                        break;\n+                    case \"totalAny1OrRoles\":\n+                        if (icon.equals(\"ion ion-gear-a\")) {\n+                            Collections.sort(anyTypeTOs, new AnyTypeComparator());\n+                            int selectedIndex = 1;\n+                            for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n+                                if (anyTypeTO.getKey().equals(label)) {\n+                                    pageParameters.add(\"selectedIndex\", selectedIndex);\n+                                    break;\n+                                }\n+                                selectedIndex++;\n+                            }\n+                            setResponsePage(Realms.class, pageParameters);\n+                        } else {\n+                            setResponsePage(Roles.class);\n+                        }\n+                        break;\n+                    case \"totalAny2OrResources\":\n+                        if (icon.equals(\"ion ion-gear-a\")) {\n+                            Collections.sort(anyTypeTOs, new AnyTypeComparator());\n+                            int selectedIndex = 1;\n+                            for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n+                                if (anyTypeTO.getKey().equals(label)) {\n+                                    pageParameters.add(\"selectedIndex\", selectedIndex);\n+                                    break;\n+                                }\n+                                selectedIndex++;\n+                            }\n+                            setResponsePage(Realms.class, pageParameters);\n+                        } else {\n+                            setResponsePage(Topology.class);\n+                        }\n+                        break;\n+                    default:\n+                        pageParameters.add(\"selectedIndex\", 0);\n+                        setResponsePage(Realms.class, pageParameters);\n+                }\n+            }\n+        });\n         add(box);\n \n         numberLabel = new Label(\"number\", number);"}]}