{"sha":"31f7915e12f7218bdd645842e4f4dcf2c1547a10","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMxZjc5MTVlMTJmNzIxOGJkZDY0NTg0MmU0ZjRkY2YyYzE1NDdhMTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-02T11:51:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-02T12:01:13Z"},"message":"[SYNCOPE-1531] Fix ignorePaging management","tree":{"sha":"afdf8aa2a44bd1b08f494a717de78d633f9e4a99","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/afdf8aa2a44bd1b08f494a717de78d633f9e4a99"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/31f7915e12f7218bdd645842e4f4dcf2c1547a10","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31f7915e12f7218bdd645842e4f4dcf2c1547a10","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/31f7915e12f7218bdd645842e4f4dcf2c1547a10","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31f7915e12f7218bdd645842e4f4dcf2c1547a10/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5fb11e24a1270159d363129bbec765d3238a2dad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5fb11e24a1270159d363129bbec765d3238a2dad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5fb11e24a1270159d363129bbec765d3238a2dad"}],"stats":{"total":98,"additions":50,"deletions":48},"files":[{"sha":"8118fc4804a098e46c2878881fd9fdeb8e72d6cd","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -119,7 +119,7 @@ protected Panel customResultBody(\n                     } else if (Constants.OPERATION_SUCCEEDED.equals(payload.getResult())) {\n                         target.ifPresent(t -> {\n                             if (csvDownloadBehavior.hasResponse()) {\n-                                csvDownloadBehavior.initiate(target.get());\n+                                csvDownloadBehavior.initiate(t);\n                             }\n                             modal.close(t);\n                         });"},{"sha":"383d20d6e6aca5dd56847c709f294271b8bcda4e","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -21,7 +21,6 @@\n import java.io.Serializable;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.common.lib.Attributable;\n@@ -42,6 +41,7 @@ public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolea\n \n     public AjaxCheckBoxPanel(\n             final String id, final String name, final IModel<Boolean> model, final boolean enableOnChange) {\n+\n         super(id, name, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n@@ -118,7 +118,7 @@ public Boolean getObject() {\n             @SuppressWarnings(\"unchecked\")\n             public void setObject(final Boolean object) {\n                 item.setModelObject(Optional.ofNullable(object)\n-                    .map(Object::toString).orElseGet(Boolean.FALSE::toString));\n+                        .map(Object::toString).orElseGet(Boolean.FALSE::toString));\n             }\n         };\n \n@@ -127,6 +127,7 @@ public void setObject(final Boolean object) {\n     }\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    @Override\n     public FieldPanel<Boolean> setNewModel(final Attributable attributableTO, final String schema) {\n         field.setModel(new Model() {\n \n@@ -152,5 +153,4 @@ public void setObject(final Serializable object) {\n \n         return this;\n     }\n-\n }"},{"sha":"01cf3ecf8e15a06e534caf2ce34d9d8ff1964e8a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AjaxDownloadBehavior.java","status":"modified","additions":24,"deletions":30,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -24,7 +24,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.AbstractAjaxBehavior;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n-import org.apache.wicket.util.resource.IResourceStream;\n import org.apache.wicket.util.time.Duration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -37,7 +36,13 @@ public class AjaxDownloadBehavior extends AbstractAjaxBehavior {\n \n     protected SerializableSupplier<Response> response;\n \n-    protected HttpResourceStream stream;\n+    public boolean hasResponse() {\n+        return response != null;\n+    }\n+\n+    public void setResponse(final SerializableSupplier<Response> response) {\n+        this.response = response;\n+    }\n \n     /**\n      * Call this method to initiate the download.\n@@ -49,40 +54,29 @@ public void initiate(final AjaxRequestTarget target) {\n         target.appendJavaScript(\"window.location.href='\" + url + \"'\");\n     }\n \n-    @Override\n-    public void onRequest() {\n-        try {\n-            getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(\n-                    new ResourceStreamRequestHandler(\n-                            getResourceStream(), getFileName()).setCacheDuration(Duration.NONE));\n-        } catch (Exception e) {\n-            // cannot be notifies because the use of scheduleRequestHandlerAfterCurrent\n-            LOG.error(\"Error downloading file\", e);\n-        }\n-    }\n+    protected HttpResourceStream getResourceStream() {\n+        HttpResourceStream stream = null;\n \n-    public boolean hasResponse() {\n-        return response != null;\n-    }\n-\n-    public void setResponse(final SerializableSupplier<Response> response) {\n-        this.response = response;\n-    }\n-\n-    private void createResourceStream() {\n-        if (stream == null && response != null) {\n+        if (response != null) {\n             stream = new HttpResourceStream(response.get());\n             response = null;\n         }\n-    }\n \n-    protected String getFileName() {\n-        createResourceStream();\n-        return stream == null ? null : stream.getFilename();\n+        return stream;\n     }\n \n-    protected IResourceStream getResourceStream() {\n-        createResourceStream();\n-        return stream;\n+    @Override\n+    public void onRequest() {\n+        try {\n+            HttpResourceStream resourceStream = getResourceStream();\n+            if (resourceStream != null) {\n+                getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(\n+                        new ResourceStreamRequestHandler(\n+                                resourceStream, resourceStream.getFilename()).setCacheDuration(Duration.NONE));\n+            }\n+        } catch (Exception e) {\n+            // cannot be notifies beacause the use of scheduleRequestHandlerAfterCurrent\n+            LOG.error(\"Error downloading file\", e);\n+        }\n     }\n }"},{"sha":"098bbfc8fa2d0c9d6b5dab3fc7c3c6dd7aca92c7","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AbstractCSVSpec.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractCSVSpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractCSVSpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractCSVSpec.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -47,6 +47,10 @@ public abstract class AbstractCSVSpec implements Serializable {\n \n     private static final String PARAM_ALLOWCOMMENTS = \"allowComments\";\n \n+    private static final String PARAM_MATCHING_RULE = \"matchingRule\";\n+\n+    private static final String PARAM_UNMATCHING_RULE = \"unmatchingRule\";\n+\n     protected abstract static class Builder<T extends AbstractCSVSpec, B extends Builder<T, B>> {\n \n         protected T instance;\n@@ -207,7 +211,7 @@ public void setEscapeChar(final Character escapeChar) {\n     }\n \n     @Parameter(name = PARAM_LINESEPARATOR, description = \"character used to separate data rows\", schema =\n-            @Schema(implementation = String.class, defaultValue = \"\\\\\\n\"))\n+            @Schema(implementation = String.class, defaultValue = \"\\\\u000a\"))\n     public String getLineSeparator() {\n         return lineSeparator;\n     }\n@@ -241,20 +245,24 @@ public void setAllowComments(final boolean allowComments) {\n         this.allowComments = allowComments;\n     }\n \n+    @Parameter(name = PARAM_UNMATCHING_RULE, required = true, schema =\n+            @Schema(implementation = UnmatchingRule.class, defaultValue = \"PROVISION\"))\n     public UnmatchingRule getUnmatchingRule() {\n         return unmatchingRule;\n     }\n \n-    @QueryParam(\"unmatchingRule\")\n+    @QueryParam(PARAM_UNMATCHING_RULE)\n     public void setUnmatchingRule(final UnmatchingRule unmatchingRule) {\n         this.unmatchingRule = unmatchingRule;\n     }\n \n+    @Parameter(name = PARAM_MATCHING_RULE, required = true, schema =\n+            @Schema(implementation = MatchingRule.class, defaultValue = \"UPDATE\"))\n     public MatchingRule getMatchingRule() {\n         return matchingRule;\n     }\n \n-    @QueryParam(\"matchingRule\")\n+    @QueryParam(PARAM_MATCHING_RULE)\n     public void setMatchingRule(final MatchingRule matchingRule) {\n         this.matchingRule = matchingRule;\n     }"},{"sha":"d3f34d8dd9b5f890d965d876b701ddcdd799b5c6","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/CSVPushSpec.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FCSVPushSpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FCSVPushSpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FCSVPushSpec.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.QueryParam;\n \n public class CSVPushSpec extends AbstractCSVSpec {\n@@ -78,8 +79,8 @@ public Builder virAttrs(final Collection<String> virAttrs) {\n             return this;\n         }\n \n-        public Builder ignorePagination(final boolean ignorePagination) {\n-            getInstance().setIgnorePaging(ignorePagination);\n+        public Builder ignorePaging(final boolean ignorePaging) {\n+            getInstance().setIgnorePaging(ignorePaging);\n             return this;\n         }\n \n@@ -97,7 +98,7 @@ public Builder propagationAction(final String propagationAction) {\n \n     private List<String> virAttrs = new ArrayList<>();\n \n-    private boolean ignorePaging;\n+    private Boolean ignorePaging;\n \n     protected List<String> propagationActions = new ArrayList<>();\n \n@@ -137,12 +138,13 @@ public void setVirAttrs(final List<String> virAttrs) {\n         this.virAttrs = virAttrs;\n     }\n \n-    public boolean isIgnorePaging() {\n-        return ignorePaging;\n+    public Boolean getIgnorePaging() {\n+        return ignorePaging == null ? Boolean.FALSE : ignorePaging;\n     }\n \n     @QueryParam(\"ignorePaging\")\n-    public void setIgnorePaging(final boolean ignorePaging) {\n+    @DefaultValue(\"false\")\n+    public void setIgnorePaging(final Boolean ignorePaging) {\n         this.ignorePaging = ignorePaging;\n     }\n "},{"sha":"9b749cec3ed1b6b521edadda119ca92bb194a754","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -430,7 +430,7 @@ public List<ProvisioningReport> push(\n         SearchCond effectiveCond = searchCond == null ? anyUtils.dao().getAllMatchingCond() : searchCond;\n \n         List<Any<?>> matching;\n-        if (spec.isIgnorePaging()) {\n+        if (spec.getIgnorePaging()) {\n             matching = new ArrayList<>();\n \n             int count = searchDAO.count(adminRealms, searchCond, anyType.getKind());"},{"sha":"7fb1f9e7311ff4e5caff7357b4a2a694b95c8a19","filename":"core/idm/logic/src/test/java/org/apache/syncope/core/logic/ReconciliationLogicTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogicTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogicTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogicTest.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -92,8 +92,7 @@ public void pushToCSV() throws IOException {\n                 () -> userLogic.search(null, 1, 100, List.of(), SyncopeConstants.ROOT_REALM, false));\n         assertNotNull(search);\n \n-        CSVPushSpec spec = new CSVPushSpec.Builder(AnyTypeKind.USER.name()).\n-                ignorePagination(true).\n+        CSVPushSpec spec = new CSVPushSpec.Builder(AnyTypeKind.USER.name()).ignorePaging(true).\n                 field(\"username\").\n                 field(\"status\").\n                 plainAttr(\"firstname\")."},{"sha":"529e09bd89338a6224c245e8bd45755dc6dfa37f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReconciliationITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31f7915e12f7218bdd645842e4f4dcf2c1547a10/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReconciliationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31f7915e12f7218bdd645842e4f4dcf2c1547a10/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReconciliationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReconciliationITCase.java?ref=31f7915e12f7218bdd645842e4f4dcf2c1547a10","patch":"@@ -232,8 +232,7 @@ public void exportCSV() throws IOException {\n                 orderBy(\"username ASC\").\n                 build();\n \n-        CSVPushSpec spec = new CSVPushSpec.Builder(AnyTypeKind.USER.name()).\n-                ignorePagination(true).\n+        CSVPushSpec spec = new CSVPushSpec.Builder(AnyTypeKind.USER.name()).ignorePaging(true).\n                 field(\"username\").\n                 field(\"status\").\n                 plainAttr(\"firstname\")."}]}