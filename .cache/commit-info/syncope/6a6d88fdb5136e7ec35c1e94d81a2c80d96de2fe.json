{"sha":"6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhNmQ4OGZkYjUxMzZlN2VjMzVjMWU5NGQ4MWEyYzgwZDk2ZGUyZmU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-10T08:41:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-10T08:41:50Z"},"message":"Merge from trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1419262 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"871cd76d961556501ead5cc46b567b94fe20c336","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/871cd76d961556501ead5cc46b567b94fe20c336"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a57825dfd7eaa65c7521361c2429fbe863381faa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a57825dfd7eaa65c7521361c2429fbe863381faa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a57825dfd7eaa65c7521361c2429fbe863381faa"}],"stats":{"total":527,"additions":125,"deletions":402},"files":[{"sha":"c69ace5b3e14b1c74f7afa4c05e3064e9df73de2","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","patch":"@@ -22,6 +22,8 @@\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n+import org.apache.syncope.client.mod.AttributeMod;\n+import org.apache.syncope.client.to.AttributeTO;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n import org.slf4j.Logger;\n@@ -35,6 +37,20 @@\n @ContextConfiguration(locations = {\"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\"})\n public abstract class AbstractTest {\n \n+    protected static AttributeTO attributeTO(final String schema, final String value) {\n+        AttributeTO attr = new AttributeTO();\n+        attr.setSchema(schema);\n+        attr.addValue(value);\n+        return attr;\n+    }\n+\n+    protected static AttributeMod attributeMod(final String schema, final String valueToBeAdded) {\n+        AttributeMod attr = new AttributeMod();\n+        attr.setSchema(schema);\n+        attr.addValueToBeAdded(valueToBeAdded);\n+        return attr;\n+    }\n+\n     /**\n      * Logger.\n      */"},{"sha":"621da2747f54056b2cd74adf63cd24dafd55a56c","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":11,"deletions":44,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","patch":"@@ -22,37 +22,30 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.ArrayList;\n import java.util.List;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n-import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.client.mod.RoleMod;\n-import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.ConnObjectTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.client.validation.SyncopeClientException;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import org.junit.FixMethodOrder;\n import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n-import org.junit.FixMethodOrder;\n-import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class RoleTestITCase extends AbstractTest {\n \n     @Test\n     public void createWithException() {\n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"attr1\");\n-        attributeTO.addValue(\"value1\");\n-\n         RoleTO newRoleTO = new RoleTO();\n-        newRoleTO.addAttribute(attributeTO);\n+        newRoleTO.addAttribute(attributeTO(\"attr1\", \"value1\"));\n \n         Throwable t = null;\n         try {\n@@ -79,19 +72,11 @@ public void create() {\n         // inherited so setter execution should be ignored\n         roleTO.setPasswordPolicy(2L);\n \n-        AttributeTO icon = new AttributeTO();\n-        icon.setSchema(\"icon\");\n-        icon.addValue(\"anIcon\");\n-        roleTO.addAttribute(icon);\n+        roleTO.addAttribute(attributeTO(\"icon\", \"anIcon\"));\n \n-        AttributeTO ownerDN = new AttributeTO();\n-        ownerDN.setSchema(\"ownerDN\");\n-        roleTO.addDerivedAttribute(ownerDN);\n+        roleTO.addDerivedAttribute(attributeTO(\"ownerDN\", null));\n \n-        AttributeTO rvirtualdata = new AttributeTO();\n-        rvirtualdata.setSchema(\"rvirtualdata\");\n-        rvirtualdata.addValue(\"rvirtualvalue\");\n-        roleTO.addVirtualAttribute(rvirtualdata);\n+        roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n \n         roleTO.setRoleOwner(8L);\n \n@@ -235,10 +220,7 @@ public void update() {\n         // inherited so setter execution should be ignored\n         roleTO.setPasswordPolicy(2L);\n \n-        AttributeTO icon = new AttributeTO();\n-        icon.setSchema(\"icon\");\n-        icon.addValue(\"anIcon\");\n-        roleTO.addAttribute(icon);\n+        roleTO.addAttribute(attributeTO(\"icon\", \"anIcon\"));\n \n         roleTO.addResource(\"resource-ldap\");\n \n@@ -252,14 +234,10 @@ public void update() {\n         assertNotNull(roleTO.getPasswordPolicy());\n         assertEquals(Long.valueOf(4), roleTO.getPasswordPolicy());\n \n-        AttributeMod attributeMod = new AttributeMod();\n-        attributeMod.setSchema(\"show\");\n-        attributeMod.addValueToBeAdded(\"FALSE\");\n-\n         RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n         roleMod.setName(\"finalRole\");\n-        roleMod.addAttributeToBeUpdated(attributeMod);\n+        roleMod.addAttributeToBeUpdated(attributeMod(\"show\", \"FALSE\"));\n \n         // change password policy inheritance\n         roleMod.setInheritPasswordPolicy(Boolean.FALSE);\n@@ -282,10 +260,7 @@ public void updateRemovingVirAttribute() {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setName(\"withvirtual\");\n         roleTO.setParent(8L);\n-\n-        final AttributeTO rvirtualdata = new AttributeTO();\n-        rvirtualdata.setSchema(\"rvirtualdata\");\n-        roleTO.addVirtualAttribute(rvirtualdata);\n+        roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", null));\n \n         roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n \n@@ -307,10 +282,7 @@ public void updateRemovingDerAttribute() {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setName(\"withderived\");\n         roleTO.setParent(8L);\n-\n-        final AttributeTO deriveddata = new AttributeTO();\n-        deriveddata.setSchema(\"rderivedschema\");\n-        roleTO.addDerivedAttribute(deriveddata);\n+        roleTO.addDerivedAttribute(attributeTO(\"rderivedschema\", null));\n \n         roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n \n@@ -397,12 +369,7 @@ public void issueSYNCOPE228() {\n         roleTO.setAccountPolicy(6L);\n         roleTO.setInheritPasswordPolicy(true);\n         roleTO.setPasswordPolicy(2L);\n-\n-        AttributeTO icon = new AttributeTO();\n-        icon.setSchema(\"icon\");\n-        icon.addValue(\"anIcon\");\n-        roleTO.addAttribute(icon);\n-\n+        roleTO.addAttribute(attributeTO(\"icon\", \"anIcon\"));\n         roleTO.addEntitlement(\"USER_READ\");\n         roleTO.addEntitlement(\"SCHEMA_READ\");\n "},{"sha":"4180149074719932e5b7c24c4540bbb081dfb672","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.*;\n-\n import java.util.Arrays;\n import java.util.List;\n import org.apache.syncope.client.mod.UserMod;\n-import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n import org.apache.syncope.client.to.SchemaTO;\n import org.apache.syncope.client.to.UserTO;\n@@ -33,6 +30,12 @@\n import org.apache.syncope.types.EntityViolationType;\n import org.apache.syncope.types.SchemaType;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -178,10 +181,7 @@ public void issue258() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getSampleTO(\"issue258@syncope.apache.org\");\n-        AttributeTO attrTO = new AttributeTO();\n-        attrTO.setSchema(schemaTO.getName());\n-        attrTO.addValue(\"1.2\");\n-        userTO.addAttribute(attrTO);\n+        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n@@ -207,11 +207,7 @@ public void issue259() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getSampleTO(\"issue259@syncope.apache.org\");\n-        AttributeTO attrTO = new AttributeTO();\n-        attrTO.setSchema(schemaTO.getName());\n-        attrTO.addValue(\"1\");\n-        userTO.addAttribute(attrTO);\n-\n+        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1\"));\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n@@ -237,11 +233,7 @@ public void issue260() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getSampleTO(\"issue260@syncope.apache.org\");\n-        AttributeTO attrTO = new AttributeTO();\n-        attrTO.setSchema(schemaTO.getName());\n-        attrTO.addValue(\"1.2\");\n-        userTO.addAttribute(attrTO);\n-\n+        userTO.addAttribute(attributeTO(schemaTO.getName(), \"1.2\"));\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n "},{"sha":"15305d0953078c13a6441e918f0099c0f32e62f1","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":33,"deletions":108,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","patch":"@@ -18,48 +18,52 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.*;\n-\n import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n-import org.junit.Test;\n-import org.springframework.http.HttpStatus;\n-import org.springframework.web.client.HttpStatusCodeException;\n-import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n import org.apache.syncope.client.to.NotificationTO;\n import org.apache.syncope.client.to.NotificationTaskTO;\n-import org.apache.syncope.client.to.TaskExecTO;\n import org.apache.syncope.client.to.PropagationTaskTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.SchedTaskTO;\n import org.apache.syncope.client.to.SyncTaskTO;\n+import org.apache.syncope.client.to.TaskExecTO;\n import org.apache.syncope.client.to.TaskTO;\n import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.core.sync.SyncJob;\n import org.apache.syncope.core.init.SpringContextInitializer;\n-import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.core.quartz.TestSyncActions;\n+import org.apache.syncope.core.sync.SyncJob;\n import org.apache.syncope.types.IntMappingType;\n+import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.TraceLevel;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n import org.junit.FixMethodOrder;\n+import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.http.HttpStatus;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.web.client.HttpStatusCodeException;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class TaskTestITCase extends AbstractTest {\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     public void getJobClasses() {\n         Set<String> jobClasses = restTemplate.getForObject(BASE_URL + \"task/jobClasses.json\", Set.class);\n         assertNotNull(jobClasses);\n         assertFalse(jobClasses.isEmpty());\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     public void getSyncActionsClasses() {\n         Set<String> actions = restTemplate.getForObject(BASE_URL + \"task/syncActionsClasses.json\", Set.class);\n         assertNotNull(actions);\n@@ -216,41 +220,13 @@ public void sync() {\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(\"test9\");\n-\n-        AttributeTO firstnameTO = new AttributeTO();\n-        firstnameTO.setSchema(\"firstname\");\n-        firstnameTO.addValue(\"nome9\");\n-        userTO.addAttribute(firstnameTO);\n-\n-        AttributeTO surnameTO = new AttributeTO();\n-        surnameTO.setSchema(\"surname\");\n-        surnameTO.addValue(\"cognome\");\n-        userTO.addAttribute(surnameTO);\n-\n-        AttributeTO typeTO = new AttributeTO();\n-        typeTO.setSchema(\"type\");\n-        typeTO.addValue(\"a type\");\n-        userTO.addAttribute(typeTO);\n-\n-        AttributeTO fullnameTO = new AttributeTO();\n-        fullnameTO.setSchema(\"fullname\");\n-        fullnameTO.addValue(\"nome cognome\");\n-        userTO.addAttribute(fullnameTO);\n-\n-        AttributeTO userIdTO = new AttributeTO();\n-        userIdTO.setSchema(\"userId\");\n-        userIdTO.addValue(\"user5@syncope.apache.org\");\n-        userTO.addAttribute(userIdTO);\n-\n-        AttributeTO emailTO = new AttributeTO();\n-        emailTO.setSchema(\"email\");\n-        emailTO.addValue(\"user5@syncope.apache.org\");\n-        userTO.addAttribute(emailTO);\n-\n-        // add a derived attribute (accountId for csvdir)\n-        AttributeTO csvuseridTO = new AttributeTO();\n-        csvuseridTO.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuseridTO);\n+        userTO.addAttribute(attributeTO(\"firstname\", \"nome9\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"cognome\"));\n+        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"nome cognome\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"user5@syncope.apache.org\"));\n+        userTO.addAttribute(attributeTO(\"email\", \"user5@syncope.apache.org\"));\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n@@ -268,24 +244,13 @@ public void sync() {\n \n         //  add user template\n         UserTO template = new UserTO();\n-\n-        AttributeTO attrTO = new AttributeTO();\n-        attrTO.setSchema(\"type\");\n-        attrTO.addValue(\"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\");\n-        template.addAttribute(attrTO);\n-\n-        attrTO = new AttributeTO();\n-        attrTO.setSchema(\"cn\");\n-        template.addDerivedAttribute(attrTO);\n-\n+        template.addAttribute(attributeTO(\"type\", \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n+        template.addDerivedAttribute(attributeTO(\"cn\", null));\n         template.addResource(\"resource-testdb\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        AttributeTO membershipAttr = new AttributeTO();\n-        membershipAttr.setSchema(\"subscriptionDate\");\n-        membershipAttr.addValue(\"'2009-08-18T16:33:12.203+0200'\");\n-        membershipTO.addAttribute(membershipAttr);\n+        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n         template.addMembership(membershipTO);\n \n         task.setUserTemplate(template);\n@@ -296,7 +261,6 @@ public void sync() {\n         assertEquals(TestSyncActions.class.getName(), actual.getActionsClassName());\n \n         SyncTaskTO taskTO = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, 4L);\n-\n         assertNotNull(taskTO);\n         assertNotNull(taskTO.getExecutions());\n \n@@ -375,26 +339,10 @@ public void reconcile() {\n \n         //  add user template\n         UserTO template = new UserTO();\n-\n-        AttributeTO attrTO = new AttributeTO();\n-        attrTO.setSchema(\"type\");\n-        attrTO.addValue(\"'type a'\");\n-        template.addAttribute(attrTO);\n-\n-        attrTO = new AttributeTO();\n-        attrTO.setSchema(\"userId\");\n-        attrTO.addValue(\"'reconciled@syncope.apache.org'\");\n-        template.addAttribute(attrTO);\n-\n-        attrTO = new AttributeTO();\n-        attrTO.setSchema(\"fullname\");\n-        attrTO.addValue(\"'reconciled fullname'\");\n-        template.addAttribute(attrTO);\n-\n-        attrTO = new AttributeTO();\n-        attrTO.setSchema(\"surname\");\n-        attrTO.addValue(\"'surname'\");\n-        template.addAttribute(attrTO);\n+        template.addAttribute(attributeTO(\"type\", \"'type a'\"));\n+        template.addAttribute(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n+        template.addAttribute(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n+        template.addAttribute(attributeTO(\"surname\", \"'surname'\"));\n \n         task.setUserTemplate(template);\n \n@@ -595,35 +543,12 @@ public void issueSYNCOPE68() {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(\"testuser2\");\n \n-        AttributeTO firstnameTO = new AttributeTO();\n-        firstnameTO.setSchema(\"firstname\");\n-        firstnameTO.addValue(\"testuser2\");\n-        userTO.addAttribute(firstnameTO);\n-\n-        AttributeTO surnameTO = new AttributeTO();\n-        surnameTO.setSchema(\"surname\");\n-        surnameTO.addValue(\"testuser2\");\n-        userTO.addAttribute(surnameTO);\n-\n-        AttributeTO typeTO = new AttributeTO();\n-        typeTO.setSchema(\"type\");\n-        typeTO.addValue(\"a type\");\n-        userTO.addAttribute(typeTO);\n-\n-        AttributeTO fullnameTO = new AttributeTO();\n-        fullnameTO.setSchema(\"fullname\");\n-        fullnameTO.addValue(\"testuser2\");\n-        userTO.addAttribute(fullnameTO);\n-\n-        AttributeTO userIdTO = new AttributeTO();\n-        userIdTO.setSchema(\"userId\");\n-        userIdTO.addValue(\"testuser2@syncope.apache.org\");\n-        userTO.addAttribute(userIdTO);\n-\n-        AttributeTO emailTO = new AttributeTO();\n-        emailTO.setSchema(\"email\");\n-        emailTO.addValue(\"testuser2@syncope.apache.org\");\n-        userTO.addAttribute(emailTO);\n+        userTO.addAttribute(attributeTO(\"firstname\", \"testuser2\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"testuser2\"));\n+        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"a type\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n+        userTO.addAttribute(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n \n         userTO.addResource(\"ws-target-resource-nopropagation2\");\n         userTO.addResource(\"ws-target-resource-nopropagation4\");"},{"sha":"06125291e8b9092b815b7ab0760526baa46023b4","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":56,"deletions":233,"changes":289,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=6a6d88fdb5136e7ec35c1e94d81a2c80d96de2fe","patch":"@@ -29,20 +29,14 @@\n import java.util.Map;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n-import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-import org.junit.Test;\n-import org.springframework.dao.EmptyResultDataAccessException;\n-import org.springframework.http.HttpStatus;\n-import org.springframework.jdbc.core.JdbcTemplate;\n-import org.springframework.web.client.HttpStatusCodeException;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.client.mod.MembershipMod;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.AttributeTO;\n-import org.apache.syncope.client.to.MembershipTO;\n import org.apache.syncope.client.to.ConfigurationTO;\n import org.apache.syncope.client.to.ConnObjectTO;\n+import org.apache.syncope.client.to.MembershipTO;\n import org.apache.syncope.client.to.PasswordPolicyTO;\n import org.apache.syncope.client.to.PolicyTO;\n import org.apache.syncope.client.to.PropagationTO;\n@@ -59,11 +53,17 @@\n import org.apache.syncope.types.CipherAlgorithm;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n+import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.dao.EmptyResultDataAccessException;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.util.StringUtils;\n import org.springframework.web.client.HttpClientErrorException;\n+import org.springframework.web.client.HttpStatusCodeException;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class UserTestITCase extends AbstractTest {\n@@ -73,53 +73,16 @@ public static UserTO getSampleTO(final String email) {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(email);\n \n-        AttributeTO fullnameTO = new AttributeTO();\n-        fullnameTO.setSchema(\"fullname\");\n-        fullnameTO.addValue(email);\n-        userTO.addAttribute(fullnameTO);\n-\n-        AttributeTO firstnameTO = new AttributeTO();\n-        firstnameTO.setSchema(\"firstname\");\n-        firstnameTO.addValue(email);\n-        userTO.addAttribute(firstnameTO);\n-\n-        AttributeTO surnameTO = new AttributeTO();\n-        surnameTO.setSchema(\"surname\");\n-        surnameTO.addValue(\"Surname\");\n-        userTO.addAttribute(surnameTO);\n-\n-        AttributeTO typeTO = new AttributeTO();\n-        typeTO.setSchema(\"type\");\n-        typeTO.addValue(\"a type\");\n-        userTO.addAttribute(typeTO);\n-\n-        AttributeTO userIdTO = new AttributeTO();\n-        userIdTO.setSchema(\"userId\");\n-        userIdTO.addValue(email);\n-        userTO.addAttribute(userIdTO);\n-\n-        AttributeTO emailTO = new AttributeTO();\n-        emailTO.setSchema(\"email\");\n-        emailTO.addValue(email);\n-        userTO.addAttribute(emailTO);\n-\n-        AttributeTO loginDateTO = new AttributeTO();\n-        loginDateTO.setSchema(\"loginDate\");\n+        userTO.addAttribute(attributeTO(\"fullname\", email));\n+        userTO.addAttribute(attributeTO(\"firstname\", email));\n+        userTO.addAttribute(attributeTO(\"surname\", \"surname\"));\n+        userTO.addAttribute(attributeTO(\"type\", \"a type\"));\n+        userTO.addAttribute(attributeTO(\"userId\", email));\n+        userTO.addAttribute(attributeTO(\"email\", email));\n         DateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        loginDateTO.addValue(sdf.format(new Date()));\n-        userTO.addAttribute(loginDateTO);\n-\n-        // add a derived attribute\n-        AttributeTO cnTO = new AttributeTO();\n-        cnTO.setSchema(\"cn\");\n-        userTO.addDerivedAttribute(cnTO);\n-\n-        // add a virtual attribute\n-        AttributeTO virtualdata = new AttributeTO();\n-        virtualdata.setSchema(\"virtualdata\");\n-        virtualdata.addValue(\"virtualvalue\");\n-        userTO.addVirtualAttribute(virtualdata);\n-\n+        userTO.addAttribute(attributeTO(\"loginDate\", sdf.format(new Date())));\n+        userTO.addDerivedAttribute(attributeTO(\"cn\", null));\n+        userTO.addVirtualAttribute(attributeTO(\"virtualdata\", \"virtualvalue\"));\n         return userTO;\n     }\n \n@@ -162,25 +125,10 @@ public void createUserWithNoPropagation() {\n         UserTO userTO = new UserTO();\n         userTO.setUsername(\"xxx@xxx.xxx\");\n \n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"firstname\");\n-        attributeTO.addValue(\"xxx\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"surname\");\n-        attributeTO.addValue(\"xxx\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.addValue(\"xxx@xxx.xxx\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"fullname\");\n-        attributeTO.addValue(\"xxx\");\n-        userTO.addAttribute(attributeTO);\n+        userTO.addAttribute(attributeTO(\"firstname\", \"xxx\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"xxx\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"xxx@xxx.xxx\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"xxx\"));\n \n         userTO.setPassword(\"password123\");\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n@@ -189,7 +137,6 @@ public void createUserWithNoPropagation() {\n \n         // get the new task list\n         tasks = Arrays.asList(restTemplate.getForObject(BASE_URL + \"task/propagation/list\", PropagationTaskTO[].class));\n-\n         assertNotNull(tasks);\n         assertFalse(tasks.isEmpty());\n \n@@ -229,25 +176,10 @@ public void issue172() {\n         userTO.setUsername(\"issue172@syncope.apache.org\");\n         userTO.setPassword(\"password\");\n \n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"firstname\");\n-        attributeTO.addValue(\"issue172\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"surname\");\n-        attributeTO.addValue(\"issue172\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.addValue(\"issue172@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"fullname\");\n-        attributeTO.addValue(\"issue172\");\n-        userTO.addAttribute(attributeTO);\n+        userTO.addAttribute(attributeTO(\"firstname\", \"issue172\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"issue172\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"issue172@syncope.apache.org\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"issue172\"));\n \n         restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n \n@@ -263,20 +195,9 @@ public void issue186() {\n         userTO.setUsername(\"issue186@syncope.apache.org\");\n         userTO.setPassword(\"password\");\n \n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.addValue(\"issue186@syncope.apache.org\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"fullname\");\n-        attributeTO.addValue(\"issue186\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"surname\");\n-        attributeTO.addValue(\"issue186\");\n-        userTO.addAttribute(attributeTO);\n+        userTO.addAttribute(attributeTO(\"userId\", \"issue186@syncope.apache.org\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"issue186\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"issue186\"));\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n@@ -379,9 +300,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n         }\n         assertNotNull(sce);\n \n-        AttributeTO derAttTO = new AttributeTO();\n-        derAttTO.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(derAttTO);\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n@@ -422,29 +341,11 @@ public void createUserWithDbPropagation() {\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password\");\n         userTO.setUsername(\"yyy@yyy.yyy\");\n-\n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"firstname\");\n-        attributeTO.addValue(\"yyy\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"surname\");\n-        attributeTO.addValue(\"yyy\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.addValue(\"yyy@yyy.yyy\");\n-        userTO.addAttribute(attributeTO);\n-\n-        attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"fullname\");\n-        attributeTO.addValue(\"yyy\");\n-        userTO.addAttribute(attributeTO);\n-\n+        userTO.addAttribute(attributeTO(\"firstname\", \"yyy\"));\n+        userTO.addAttribute(attributeTO(\"surname\", \"yyy\"));\n+        userTO.addAttribute(attributeTO(\"userId\", \"yyy@yyy.yyy\"));\n+        userTO.addAttribute(attributeTO(\"fullname\", \"yyy\"));\n         userTO.addResource(\"resource-testdb\");\n-\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationTOs().size());\n@@ -501,13 +402,8 @@ public void createWithInvalidPasswordByRole() {\n \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"userId\");\n-        attributeTO.addValue(\"userId@nowhere.org\");\n-\n         UserTO newUserTO = new UserTO();\n-        newUserTO.addAttribute(attributeTO);\n-\n+        newUserTO.addAttribute(attributeTO(\"userId\", \"userId@nowhere.org\"));\n         restTemplate.postForObject(BASE_URL + \"user/create\", newUserTO, UserTO.class);\n     }\n \n@@ -541,22 +437,14 @@ public void create() {\n         userTO.addMembership(membershipTO);\n \n         // add an attribute with no values: must be ignored\n-        AttributeTO nullValueAttrTO = new AttributeTO();\n-        nullValueAttrTO.setSchema(\"subscriptionDate\");\n-        nullValueAttrTO.setValues(null);\n-        membershipTO.addAttribute(nullValueAttrTO);\n+        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", null));\n \n         // add an attribute with a non-existing schema: must be ignored\n-        AttributeTO attrWithInvalidSchemaTO = new AttributeTO();\n-        attrWithInvalidSchemaTO.setSchema(\"invalid schema\");\n-        attrWithInvalidSchemaTO.addValue(\"a value\");\n+        AttributeTO attrWithInvalidSchemaTO = attributeTO(\"invalid schema\", \"a value\");\n         userTO.addAttribute(attrWithInvalidSchemaTO);\n \n         // add an attribute with null value: must be ignored\n-        nullValueAttrTO = new AttributeTO();\n-        nullValueAttrTO.setSchema(\"activationDate\");\n-        nullValueAttrTO.addValue(null);\n-        userTO.addAttribute(nullValueAttrTO);\n+        userTO.addAttribute(attributeTO(\"activationDate\", null));\n \n         // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n@@ -657,10 +545,7 @@ public void createWithRequiredValueMissing() {\n         assertNotNull(ex);\n         assertNotNull(ex.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n \n-        AttributeTO fType = new AttributeTO();\n-        fType.setSchema(\"type\");\n-        fType.addValue(\"F\");\n-        userTO.addAttribute(fType);\n+        userTO.addAttribute(attributeTO(\"type\", \"F\"));\n \n         AttributeTO surname = null;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n@@ -992,40 +877,27 @@ public void update() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        AttributeTO membershipAttr = new AttributeTO();\n-        membershipAttr.setSchema(\"subscriptionDate\");\n-        membershipAttr.addValue(\"2009-08-18T16:33:12.203+0200\");\n-        membershipTO.addAttribute(membershipAttr);\n+        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.addMembership(membershipTO);\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n \n         assertFalse(userTO.getDerivedAttributes().isEmpty());\n         assertEquals(1, userTO.getMemberships().size());\n \n-        AttributeMod attributeMod = new AttributeMod();\n-        attributeMod.setSchema(\"subscriptionDate\");\n-        attributeMod.addValueToBeAdded(\"2010-08-18T16:33:12.203+0200\");\n-\n         MembershipMod membershipMod = new MembershipMod();\n         membershipMod.setRole(8L);\n-        membershipMod.addAttributeToBeUpdated(attributeMod);\n+        membershipMod.addAttributeToBeUpdated(attributeMod(\"subscriptionDate\", \"2010-08-18T16:33:12.203+0200\"));\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"new2Password\");\n \n         userMod.addAttributeToBeRemoved(\"userId\");\n-        attributeMod = new AttributeMod();\n-        attributeMod.setSchema(\"userId\");\n-        attributeMod.addValueToBeAdded(\"t.w@spre.net\");\n-        userMod.addAttributeToBeUpdated(attributeMod);\n+        userMod.addAttributeToBeUpdated(attributeMod(\"userId\", \"t.w@spre.net\"));\n \n         userMod.addAttributeToBeRemoved(\"fullname\");\n-        attributeMod = new AttributeMod();\n-        attributeMod.setSchema(\"fullname\");\n-        attributeMod.addValueToBeAdded(\"g.h@t.com\");\n-        userMod.addAttributeToBeUpdated(attributeMod);\n+        userMod.addAttributeToBeUpdated(attributeMod(\"fullname\", \"g.h@t.com\"));\n \n         userMod.addDerivedAttributeToBeAdded(\"cn\");\n         userMod.addMembershipToBeAdded(membershipMod);\n@@ -1069,10 +941,7 @@ public void updatePasswordOnly() {\n         UserTO userTO = getSampleTO(\"pwdonly@t.com\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        AttributeTO membershipAttr = new AttributeTO();\n-        membershipAttr.setSchema(\"subscriptionDate\");\n-        membershipAttr.addValue(\"2009-08-18T16:33:12.203+0200\");\n-        membershipTO.addAttribute(membershipAttr);\n+        membershipTO.addAttribute(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.addMembership(membershipTO);\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n@@ -1155,10 +1024,7 @@ public void verifyTaskRegistration() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n \n-        AttributeMod attributeMod = new AttributeMod();\n-        attributeMod.setSchema(\"surname\");\n-        attributeMod.addValueToBeAdded(\"surname\");\n-        userMod.addAttributeToBeUpdated(attributeMod);\n+        userMod.addAttributeToBeUpdated(attributeMod(\"surname\", \"surname\"));\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n \n@@ -1471,7 +1337,7 @@ public void issue270() {\n         // 1. create a new user without virtual attributes\n         UserTO original = getSampleTO(\"issue270@syncope.apache.org\");\n         // be sure to remove all virtual attributes\n-        original.setVirtualAttributes(Collections.EMPTY_LIST);\n+        original.setVirtualAttributes(Collections.<AttributeTO>emptyList());\n \n         original = restTemplate.postForObject(BASE_URL + \"user/create\", original, UserTO.class);\n \n@@ -1482,11 +1348,7 @@ public void issue270() {\n         UserTO toBeUpdated = restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, original.\n                 getId());\n \n-        AttributeTO virtual = new AttributeTO();\n-\n-        virtual.setSchema(\"virtualdata\");\n-        virtual.addValue(\"virtualvalue\");\n-\n+        AttributeTO virtual = attributeTO(\"virtualdata\", \"virtualvalue\");\n         toBeUpdated.addVirtualAttribute(virtual);\n \n         // 2. try to update by adding a resource, but no password: must fail\n@@ -1562,11 +1424,7 @@ public void issue281() {\n     @Test\n     public void issue288() {\n         UserTO userTO = getSampleTO(\"issue288@syncope.apache.org\");\n-\n-        AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"aLong\");\n-        attributeTO.addValue(\"STRING\");\n-        userTO.addAttribute(attributeTO);\n+        userTO.addAttribute(attributeTO(\"aLong\", \"STRING\"));\n \n         try {\n             restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n@@ -1584,9 +1442,7 @@ public void roleAttrPropagation() {\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n \n-        AttributeTO csvuserid = new AttributeTO();\n-        csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n@@ -1614,28 +1470,13 @@ public void membershipAttrPropagation() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-\n-        AttributeTO csvuserid = new AttributeTO();\n-        csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n-\n-        AttributeTO mderived_sx = new AttributeTO();\n-        mderived_sx.setSchema(\"mderived_sx\");\n-        mderived_sx.setValues(Collections.singletonList(\"sx\"));\n-        membershipTO.addAttribute(mderived_sx);\n-\n-        AttributeTO mderived_dx = new AttributeTO();\n-        mderived_dx.setSchema(\"mderived_dx\");\n-        mderived_dx.setValues(Collections.singletonList(\"dx\"));\n-        membershipTO.addAttribute(mderived_dx);\n-\n-        AttributeTO mderiveddata = new AttributeTO();\n-        mderiveddata.setSchema(\"mderToBePropagated\");\n-        membershipTO.addDerivedAttribute(mderiveddata);\n-\n+        membershipTO.addAttribute(attributeTO(\"mderived_sx\", \"sx\"));\n+        membershipTO.addAttribute(attributeTO(\"mderived_dx\", \"dx\"));\n+        membershipTO.addDerivedAttribute(attributeTO(\"mderToBePropagated\", null));\n         userTO.addMembership(membershipTO);\n \n         userTO.addResource(\"resource-csv\");\n@@ -1671,13 +1512,8 @@ public void issueSYNCOPE16() {\n \n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n-\n-        AttributeMod virtualdata = new AttributeMod();\n-        virtualdata.setSchema(\"virtualdata\");\n-        virtualdata.addValueToBeAdded(\"virtualupdated\");\n-\n         userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n-        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n+        userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"virtualupdated\"));\n \n         // 3. update virtual attribute\n         actual = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n@@ -1696,10 +1532,7 @@ public void issueSYNCOPE108() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-\n-        AttributeTO csvuserid = new AttributeTO();\n-        csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n@@ -1796,25 +1629,15 @@ public void issueSYNCOPE111() {\n         userTO.getMemberships().clear();\n         userTO.getDerivedAttributes().clear();\n         userTO.getVirtualAttributes().clear();\n-\n-        AttributeTO csvuserid = new AttributeTO();\n-        csvuserid.setSchema(\"csvuserid\");\n-        userTO.addDerivedAttribute(csvuserid);\n+        userTO.addDerivedAttribute(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n-\n-        AttributeTO postalAddress = new AttributeTO();\n-        postalAddress.setSchema(\"postalAddress\");\n-        postalAddress.addValue(\"postalAddress\");\n-\n-        memb12.addAttribute(postalAddress);\n-\n+        memb12.addAttribute(attributeTO(\"postalAddress\", \"postalAddress\"));\n         userTO.addMembership(memb12);\n \n         MembershipTO memb13 = new MembershipTO();\n         memb13.setRoleId(13L);\n-\n         userTO.addMembership(memb13);\n \n         userTO.addResource(\"resource-ldap\");\n@@ -1830,7 +1653,7 @@ public void issueSYNCOPE111() {\n                 userTO.getUsername());\n         assertNotNull(connObjectTO);\n \n-        postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n+        AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n         assertNotNull(postalAddress);\n         assertEquals(1, postalAddress.getValues().size());\n         assertEquals(\"postalAddress\", postalAddress.getValues().get(0));"}]}