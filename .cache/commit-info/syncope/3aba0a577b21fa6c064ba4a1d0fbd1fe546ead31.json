{"sha":"3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNhYmEwYTU3N2IyMWZhNmMwNjRiYTRhMWQwZmJkMWZlNTQ2ZWFkMzE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-21T12:08:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-21T12:08:18Z"},"message":"Polishing few methods for paginated results","tree":{"sha":"14ed84bb0ef9a7cf439a2ea92c0d242cc79cf6cd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/14ed84bb0ef9a7cf439a2ea92c0d242cc79cf6cd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e2ef768b13b2600efc67401ccda9e747e036a591","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e2ef768b13b2600efc67401ccda9e747e036a591","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e2ef768b13b2600efc67401ccda9e747e036a591"}],"stats":{"total":120,"additions":50,"deletions":70},"files":[{"sha":"d1b7cb3c386ae8e4d0b1893cbf56a86dc30dbba7","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractExecutableLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Date;\n import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n@@ -31,9 +32,8 @@\n \n     public abstract ExecTO execute(String key, Date startAt, boolean dryRun);\n \n-    public abstract int countExecutions(String key);\n-\n-    public abstract List<ExecTO> listExecutions(String key, int page, int size, List<OrderByClause> orderByClauses);\n+    public abstract Pair<Integer, List<ExecTO>> listExecutions(\n+            String key, int page, int size, List<OrderByClause> orderByClauses);\n \n     public abstract List<ExecTO> listRecentExecutions(int max);\n "},{"sha":"077b6df3ce377e51d28d526e40f191573bcb1421","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AccessTokenLogic.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -103,18 +103,17 @@ public void logout() {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ACCESS_TOKEN_LIST + \"')\")\n-    public int count() {\n-        return accessTokenDAO.count();\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.ACCESS_TOKEN_LIST + \"')\")\n-    public List<AccessTokenTO> list(\n+    public Pair<Integer, List<AccessTokenTO>> list(\n             final int page,\n             final int size,\n             final List<OrderByClause> orderByClauses) {\n \n-        return accessTokenDAO.findAll(page, size, orderByClauses).stream().\n+        Integer count = accessTokenDAO.count();\n+\n+        List<AccessTokenTO> result = accessTokenDAO.findAll(page, size, orderByClauses).stream().\n                 map(accessToken -> binder.getAccessTokenTO(accessToken)).collect(Collectors.toList());\n+\n+        return Pair.of(count, result);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ACCESS_TOKEN_DELETE + \"')\")"},{"sha":"67b37471eee15a3e02963d0974ee0743dfa82289","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -36,6 +36,7 @@\n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -292,22 +293,20 @@ public ReportTO delete(final String key) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_READ + \"')\")\n     @Override\n-    public int countExecutions(final String key) {\n-        return reportExecDAO.count(key);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_READ + \"')\")\n-    @Override\n-    public List<ExecTO> listExecutions(\n+    public Pair<Integer, List<ExecTO>> listExecutions(\n             final String key, final int page, final int size, final List<OrderByClause> orderByClauses) {\n \n         Report report = reportDAO.find(key);\n         if (report == null) {\n             throw new NotFoundException(\"Report \" + key);\n         }\n \n-        return reportExecDAO.findAll(report, page, size, orderByClauses).stream().\n+        Integer count = reportExecDAO.count(key);\n+\n+        List<ExecTO> result = reportExecDAO.findAll(report, page, size, orderByClauses).stream().\n                 map(reportExec -> binder.getExecTO(reportExec)).collect(Collectors.toList());\n+\n+        return Pair.of(count, result);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_LIST + \"')\")"},{"sha":"8bdb059485351686054ce17fd721842fc17de8d3","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":14,"deletions":22,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -24,6 +24,7 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n@@ -143,21 +144,9 @@ public <T extends SchedTaskTO> T updateSchedTask(final SchedTaskTO taskTO) {\n         return binder.getTaskTO(task, taskUtils, false);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_LIST + \"')\")\n-    public int count(\n-            final TaskType type,\n-            final String resource,\n-            final String notification,\n-            final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey) {\n-\n-        return taskDAO.count(\n-                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, anyTypeKey);\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_LIST + \"')\")\n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractTaskTO> List<T> list(\n+    public <T extends AbstractTaskTO> Pair<Integer, List<T>> list(\n             final TaskType type,\n             final String resource,\n             final String notification,\n@@ -168,11 +157,16 @@ public <T extends AbstractTaskTO> List<T> list(\n             final List<OrderByClause> orderByClauses,\n             final boolean details) {\n \n-        return taskDAO.findAll(\n+        int count = taskDAO.count(\n+                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey);\n+\n+        List<T> result = taskDAO.findAll(\n                 type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey,\n                 page, size, orderByClauses).stream().\n                 <T>map(task -> binder.getTaskTO(task, taskUtilsFactory.getInstance(type), details)).\n                 collect(Collectors.toList());\n+\n+        return Pair.of(count, result);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n@@ -277,22 +271,20 @@ public <T extends AbstractTaskTO> T delete(final String key) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n     @Override\n-    public int countExecutions(final String key) {\n-        return taskExecDAO.count(key);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n-    @Override\n-    public List<ExecTO> listExecutions(\n+    public Pair<Integer, List<ExecTO>> listExecutions(\n             final String key, final int page, final int size, final List<OrderByClause> orderByClauses) {\n \n         Task task = taskDAO.find(key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n         }\n \n-        return taskExecDAO.findAll(task, page, size, orderByClauses).stream().\n+        Integer count = taskExecDAO.count(key);\n+\n+        List<ExecTO> result = taskExecDAO.findAll(task, page, size, orderByClauses).stream().\n                 map(taskExec -> binder.getExecTO(taskExec)).collect(Collectors.toList());\n+\n+        return Pair.of(count, result);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_LIST + \"')\")"},{"sha":"aadbaf3327bd7daea03ee41d6b8d6cf80eff14d7","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractExecutableService.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -36,15 +37,12 @@ public abstract class AbstractExecutableService extends AbstractServiceImpl impl\n \n     @Override\n     public PagedResult<ExecTO> listExecutions(final ExecQuery query) {\n-        return buildPagedResult(\n-                getExecutableLogic().listExecutions(\n-                        query.getKey(),\n-                        query.getPage(),\n-                        query.getSize(),\n-                        getOrderByClauses(query.getOrderBy())),\n+        Pair<Integer, List<ExecTO>> result = getExecutableLogic().listExecutions(\n+                query.getKey(),\n                 query.getPage(),\n                 query.getSize(),\n-                getExecutableLogic().countExecutions(query.getKey()));\n+                getOrderByClauses(query.getOrderBy()));\n+        return buildPagedResult(result.getRight(), query.getPage(), query.getSize(), result.getLeft());\n     }\n \n     @Override"},{"sha":"2b093242c7952b6dcea1c0a5a6ef6bed3c5c6518","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AccessTokenServiceImpl.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.Date;\n+import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.time.DateFormatUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -64,14 +65,11 @@ public void logout() {\n \n     @Override\n     public PagedResult<AccessTokenTO> list(final AccessTokenQuery query) {\n-        return buildPagedResult(\n-                logic.list(\n-                        query.getPage(),\n-                        query.getSize(),\n-                        getOrderByClauses(query.getOrderBy())),\n+        Pair<Integer, List<AccessTokenTO>> result = logic.list(\n                 query.getPage(),\n                 query.getSize(),\n-                logic.count());\n+                getOrderByClauses(query.getOrderBy()));\n+        return buildPagedResult(result.getRight(), query.getPage(), query.getSize(), result.getLeft());\n     }\n \n     @Override"},{"sha":"1d1b61263b591e46375120e99733d5734fd486ca","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=3aba0a577b21fa6c064ba4a1d0fbd1fe546ead31","patch":"@@ -19,8 +19,10 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.net.URI;\n+import java.util.List;\n import javax.ws.rs.BadRequestException;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -68,25 +70,17 @@ public void delete(final String key) {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public <T extends AbstractTaskTO> PagedResult<T> list(final TaskQuery query) {\n-        return (PagedResult<T>) buildPagedResult(\n-                logic.list(\n-                        query.getType(),\n-                        query.getResource(),\n-                        query.getNotification(),\n-                        query.getAnyTypeKind(),\n-                        query.getEntityKey(),\n-                        query.getPage(),\n-                        query.getSize(),\n-                        getOrderByClauses(query.getOrderBy()),\n-                        query.getDetails()),\n+        Pair<Integer, List<T>> result = logic.list(\n+                query.getType(),\n+                query.getResource(),\n+                query.getNotification(),\n+                query.getAnyTypeKind(),\n+                query.getEntityKey(),\n                 query.getPage(),\n                 query.getSize(),\n-                logic.count(\n-                        query.getType(),\n-                        query.getResource(),\n-                        query.getNotification(),\n-                        query.getAnyTypeKind(),\n-                        query.getEntityKey()));\n+                getOrderByClauses(query.getOrderBy()),\n+                query.getDetails());\n+        return buildPagedResult(result.getRight(), query.getPage(), query.getSize(), result.getLeft());\n     }\n \n     @Override"}]}