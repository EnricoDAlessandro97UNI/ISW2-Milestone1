{"sha":"4e781f4a7457248e5e1566a1ca35dbcf5f139287","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRlNzgxZjRhNzQ1NzI0OGU1ZTE1NjZhMWNhMzVkYmNmNWYxMzkyODc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-04T15:00:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-04T15:00:53Z"},"message":"[SYNCOPE-1287] Console implementation","tree":{"sha":"b3d4a8968ad6f086b05635dc2629242acbe6db0b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b3d4a8968ad6f086b05635dc2629242acbe6db0b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4e781f4a7457248e5e1566a1ca35dbcf5f139287","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e781f4a7457248e5e1566a1ca35dbcf5f139287","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4e781f4a7457248e5e1566a1ca35dbcf5f139287","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4e781f4a7457248e5e1566a1ca35dbcf5f139287/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f171ed2aeb6de42a5f0f2430d073fe2d9fb0af16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f171ed2aeb6de42a5f0f2430d073fe2d9fb0af16","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f171ed2aeb6de42a5f0f2430d073fe2d9fb0af16"}],"stats":{"total":1570,"additions":1362,"deletions":208},"files":[{"sha":"c34fb007e84863898f4e6757163cb086a34b4219","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/Approval.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApproval.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -184,23 +184,23 @@ public void setObject(final Long object) {\n             }\n         };\n \n-        final AjaxLink<String> userDetails = new AjaxLink<String>(\"userDetails\") {\n+        AjaxLink<String> userDetails = new AjaxLink<String>(\"userDetails\") {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                viewDetails(formTO, target);\n+                viewDetails(target);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(userDetails, ENABLE, StandardEntitlement.USER_READ);\n \n-        final boolean enabled = formTO.getUserTO() != null;\n+        boolean enabled = formTO.getUserTO() != null;\n         userDetails.setVisible(enabled).setEnabled(enabled);\n \n         add(propView);\n         add(userDetails);\n     }\n \n-    protected abstract void viewDetails(final WorkflowFormTO formTO, final AjaxRequestTarget target);\n+    protected abstract void viewDetails(final AjaxRequestTarget target);\n }"},{"sha":"60077ba5e5b1cada13f373e706d2fcd0e969d588","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDirectoryPanel.java","status":"modified","additions":18,"deletions":22,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -115,8 +115,8 @@ public void onClose(final AjaxRequestTarget target) {\n \n     @Override\n     protected List<IColumn<WorkflowFormTO, String>> getColumns() {\n-\n         List<IColumn<WorkflowFormTO, String>> columns = new ArrayList<>();\n+\n         columns.add(new PropertyColumn<>(\n                 new ResourceModel(\"taskId\"), \"taskId\", \"taskId\"));\n         columns.add(new PropertyColumn<>(\n@@ -155,11 +155,10 @@ public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore)\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n-                final IModel<WorkflowFormTO> formModel = new CompoundPropertyModel<>(model.getObject());\n-                manageApprovalModal.setFormModel(formModel);\n+                manageApprovalModal.setFormModel(new CompoundPropertyModel<>(model.getObject()));\n \n-                target.add(manageApprovalModal.setContent(new ApprovalModal(manageApprovalModal, pageRef, model.\n-                        getObject()) {\n+                target.add(manageApprovalModal.setContent(\n+                        new ApprovalModal(manageApprovalModal, pageRef, model.getObject()) {\n \n                     private static final long serialVersionUID = 5546519445061007248L;\n \n@@ -196,12 +195,11 @@ protected boolean statusCondition(final WorkflowFormTO modelObject) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n-                final IModel<WorkflowFormTO> formModel = new CompoundPropertyModel<>(model.getObject());\n-                modal.setFormModel(formModel);\n+                modal.setFormModel(new CompoundPropertyModel<>(model.getObject()));\n \n-                final WorkflowFormTO formTO = formModel.getObject();\n-                final UserTO newUserTO;\n-                final UserTO previousUserTO;\n+                WorkflowFormTO formTO = model.getObject();\n+                UserTO newUserTO;\n+                UserTO previousUserTO;\n                 if (formTO.getUserPatch() == null) {\n                     newUserTO = formTO.getUserTO();\n                     previousUserTO = null;\n@@ -219,16 +217,14 @@ public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore)\n \n                 AjaxWizard.EditItemActionEvent<UserTO> editItemActionEvent =\n                         new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n-\n-                editItemActionEvent.forceModalPanel(\n-                        new ApprovalUserWizardBuilder(\n-                                formModel.getObject(),\n-                                previousUserTO,\n-                                newUserTO,\n-                                new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses(),\n-                                FormLayoutInfoUtils.fetch(Collections.singletonList(AnyTypeKind.USER.name())).getLeft(),\n-                                pageRef\n-                        ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n+                editItemActionEvent.forceModalPanel(new ApprovalUserWizardBuilder(\n+                        model.getObject(),\n+                        previousUserTO,\n+                        newUserTO,\n+                        new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses(),\n+                        FormLayoutInfoUtils.fetch(Collections.singletonList(AnyTypeKind.USER.name())).getLeft(),\n+                        pageRef\n+                ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n \n                 send(ApprovalDirectoryPanel.this, Broadcast.EXACT, editItemActionEvent);\n             }\n@@ -281,14 +277,14 @@ public long size() {\n         }\n \n         @Override\n-        public IModel<WorkflowFormTO> model(final WorkflowFormTO configuration) {\n+        public IModel<WorkflowFormTO> model(final WorkflowFormTO form) {\n             return new AbstractReadOnlyModel<WorkflowFormTO>() {\n \n                 private static final long serialVersionUID = -2566070996511906708L;\n \n                 @Override\n                 public WorkflowFormTO getObject() {\n-                    return configuration;\n+                    return form;\n                 }\n             };\n         }"},{"sha":"16048dd31d2bda9299858fd4b9d2f221edd9256e","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalModal.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -36,6 +36,8 @@ public class ApprovalModal extends Panel implements SubmitableModalPanel, Wizard\n \n     private static final long serialVersionUID = -8847854414429745216L;\n \n+    private final UserWorkflowRestClient restClient = new UserWorkflowRestClient();\n+\n     private final BaseModal<?> modal;\n \n     private final WorkflowFormTO formTO;\n@@ -48,23 +50,22 @@ public ApprovalModal(final BaseModal<?> modal, final PageReference pageRef, fina\n         this.formTO = formTO;\n         this.pageRef = pageRef;\n \n-        final MultilevelPanel mlp = new MultilevelPanel(\"approval\");\n-        add(mlp);\n-\n+        MultilevelPanel mlp = new MultilevelPanel(\"approval\");\n         mlp.setFirstLevel(new Approval(pageRef, formTO) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n-            protected void viewDetails(final WorkflowFormTO formTO, final AjaxRequestTarget target) {\n+            protected void viewDetails(final AjaxRequestTarget target) {\n                 mlp.next(getString(\"approval.details\"), new ApprovalDetails(pageRef, formTO), target);\n             }\n         });\n+        add(mlp);\n     }\n \n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        new UserWorkflowRestClient().submitForm(formTO);\n+        this.restClient.submitForm(formTO);\n         this.modal.show(false);\n         this.modal.close(target);\n         SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));"},{"sha":"31cbda1ec5b88de2a35d6ca706d0fb472e39d890","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -65,6 +65,8 @@ public final class Constants {\n \n     public static final String SEARCH_ERROR = \"search_error\";\n \n+    public static final String UNEXPECTED_CONDITION_ERROR = \"unexpected_condition_error\";\n+\n     public static final String ERROR = \"error\";\n \n     public static final String BEFORE_LOGOUT_PAGE = \"beforeLogoutPage\";\n@@ -117,7 +119,9 @@ public final class Constants {\n \n     public static final String PREF_ACCESS_TOKEN_PAGINATOR_ROWS = \"accessToken.paginator.rows\";\n \n-    public static final String PREF_WORKFLOW_FORM_PAGINATOR_ROWS = \"role.paginator.workflow.form\";\n+    public static final String PREF_WORKFLOW_FORM_PAGINATOR_ROWS = \"workflow.paginator.rows\";\n+\n+    public static final String PREF_REMEDIATION_PAGINATOR_ROWS = \"remediation.paginator.rows\";\n \n     public static final String PREF_RESOURCES_PAGINATOR_ROWS = \"resources.paginator.rows\";\n "},{"sha":"93f385d8fc285f9d044ab8f512f4ee988e396686","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":16,"deletions":8,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.widgets.ApprovalsWidget;\n+import org.apache.syncope.client.console.widgets.RemediationsWidget;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -82,6 +83,8 @@ public class BasePage extends WebPage implements IAjaxIndicatorAware {\n \n     protected ApprovalsWidget approvalsWidget;\n \n+    protected RemediationsWidget remediationWidget;\n+\n     public BasePage() {\n         this(null);\n     }\n@@ -102,6 +105,9 @@ public BasePage(final PageParameters parameters) {\n         // header, footer\n         body.add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n \n+        remediationWidget = new RemediationsWidget(\"remediationWidget\", getPageReference());\n+        body.add(remediationWidget.setRenderBodyOnly(true));\n+\n         approvalsWidget = new ApprovalsWidget(\"approvalsWidget\", getPageReference());\n         body.add(approvalsWidget.setRenderBodyOnly(true));\n \n@@ -164,10 +170,9 @@ public void onClick() {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"topology\"));\n         body.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"topology\", Topology.class);\n-        StringBuilder bld = new StringBuilder();\n-        bld.append(StandardEntitlement.CONNECTOR_LIST).append(\",\").\n-                append(StandardEntitlement.RESOURCE_LIST).append(\",\");\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, bld.toString());\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER,\n+                StringUtils.join(\n+                        new String[] { StandardEntitlement.CONNECTOR_LIST, StandardEntitlement.CONNECTOR_LIST }, \",\"));\n         liContainer.add(link);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"reports\"));\n@@ -216,10 +221,9 @@ public void onClick() {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"security\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"security\", Security.class);\n-        bld = new StringBuilder();\n-        bld.append(StandardEntitlement.ROLE_LIST).append(\",\").\n-                append(StandardEntitlement.APPLICATION_LIST);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, bld.toString());\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER,\n+                StringUtils.join(\n+                        new String[] { StandardEntitlement.ROLE_LIST, StandardEntitlement.APPLICATION_LIST }, \",\"));\n         liContainer.add(link);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n@@ -421,6 +425,10 @@ public NotificationPanel getNotificationPanel() {\n         return notificationPanel;\n     }\n \n+    public RemediationsWidget getRemediationWidget() {\n+        return remediationWidget;\n+    }\n+\n     public ApprovalsWidget getApprovalsWidget() {\n         return approvalsWidget;\n     }"},{"sha":"8e539d52e18953b66d7d2dcf5a2b5ab6287c771a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Remediations.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.panels.RemediationDirectoryPanel;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class Remediations extends BasePage {\n+\n+    private static final long serialVersionUID = -7940154016753661388L;\n+\n+    public Remediations(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        body.add(content);\n+\n+        content.add(new RemediationDirectoryPanel(\"remediations\", getPageReference()));\n+    }\n+\n+}"},{"sha":"3db96158fbcd769bf8f953019ae425eaf7a39574","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -109,8 +109,9 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                                 new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n                                 target));\n             }\n-        }, ActionType.EDIT, new StringBuilder().append(AnyEntitlement.READ.getFor(type)).append(\",\").\n-                append(AnyEntitlement.UPDATE.getFor(type)).toString()).setRealm(realm);\n+        }, ActionType.EDIT, StringUtils.join(\n+                new String[] { AnyEntitlement.READ.getFor(type), AnyEntitlement.UPDATE.getFor(type) }, \",\")).\n+                setRealm(realm);\n \n         panel.add(new ActionLink<AnyObjectTO>() {\n \n@@ -153,8 +154,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n \n                     altDefaultModal.show(true);\n                 }\n-            }, ActionType.MANAGE_RESOURCES, new StringBuilder().append(AnyEntitlement.READ.getFor(type)).append(\",\").\n-                    append(AnyEntitlement.UPDATE.getFor(type)).toString()).setRealm(realm);\n+            }, ActionType.MANAGE_RESOURCES, AnyEntitlement.UPDATE.getFor(type)).setRealm(realm);\n \n             panel.add(\n                     new ActionLink<AnyObjectTO>() {"},{"sha":"303cbf18459543e98ac35d7fa6acadc6555af85b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -49,8 +48,9 @@ public ConnObjects(final ResourceTO resource, final PageReference pageRef) {\n         super(BaseModal.CONTENT_ID);\n \n         List<String> availableAnyTypes = resource.getProvisions().stream().\n-                map(ProvisionTO::getAnyType).collect(Collectors.toList());\n-        Collections.sort(availableAnyTypes, new AnyTypeRestClient.AnyTypeKeyComparator());\n+                map(ProvisionTO::getAnyType).\n+                sorted(AnyTypeRestClient.KEY_COMPARATOR).\n+                collect(Collectors.toList());\n         if (resource.getOrgUnit() != null) {\n             availableAnyTypes.add(0, SyncopeConstants.REALM_ANYTYPE);\n         }"},{"sha":"61688291902638121c5189aa2fe14bb080dba437","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -214,8 +214,9 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n                                 restClient.read(model.getObject().getKey())), target));\n             }\n-        }, ActionType.EDIT, new StringBuilder().append(StandardEntitlement.GROUP_READ).append(\",\").\n-                append(StandardEntitlement.GROUP_UPDATE).toString()).setRealm(realm);\n+        }, ActionType.EDIT, StringUtils.join(\n+                new String[] { StandardEntitlement.GROUP_READ, StandardEntitlement.GROUP_UPDATE }, \",\")).\n+                setRealm(realm);\n \n         panel.add(new ActionLink<GroupTO>() {\n \n@@ -262,8 +263,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n             public boolean isIndicatorEnabled() {\n                 return false;\n             }\n-        }, ActionType.MEMBERS, new StringBuilder().append(StandardEntitlement.GROUP_READ).append(\",\").\n-                append(StandardEntitlement.GROUP_UPDATE).toString()).setRealm(realm);\n+        }, ActionType.MEMBERS, StandardEntitlement.GROUP_UPDATE).setRealm(realm);\n \n         panel.add(new ActionLink<GroupTO>() {\n "},{"sha":"d4bae1a94c0dd2b2d6e577afc6b2beb83f591e36","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":4,"deletions":22,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -25,14 +25,14 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.button.dropdown.DropDownButton;\n import de.agilecoders.wicket.core.markup.html.bootstrap.image.GlyphIconType;\n import de.agilecoders.wicket.core.markup.html.bootstrap.image.IconType;\n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -307,9 +307,9 @@ public final RealmChoicePanel reloadRealmTree(final AjaxRequestTarget target, fi\n     }\n \n     private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n-        final List<RealmTO> realms = realmRestClient.list();\n-        Collections.sort(realms, new RealmNameComparator());\n-        return reloadRealmParentMap(realms);\n+        return reloadRealmParentMap(realmRestClient.list().stream().\n+                sorted(Comparator.comparing(RealmTO::getName)).\n+                collect(Collectors.toList()));\n     }\n \n     private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n@@ -339,24 +339,6 @@ private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final Lis\n         return tree;\n     }\n \n-    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n-\n-        private static final long serialVersionUID = 7085057398406518811L;\n-\n-        @Override\n-        public int compare(final RealmTO r1, final RealmTO r2) {\n-            if (r1 == null && r2 == null) {\n-                return 0;\n-            } else if (r1 != null && r2 != null) {\n-                return r1.getName().compareTo(r2.getName());\n-            } else if (r1 == null && r2 != null) {\n-                return -1;\n-            } else {\n-                return 1;\n-            }\n-        }\n-    }\n-\n     /**\n      * Gets current selected realm.\n      *"},{"sha":"691ac5ce5b59686630d81da8a924c49b5ac63597","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RemediationDirectoryPanel.java","status":"added","additions":492,"deletions":0,"changes":492,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,492 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.RemediationDirectoryPanel.RemediationProvider;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.RemediationRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n+import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.common.lib.AnyOperations;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n+import org.apache.syncope.common.lib.patch.GroupPatch;\n+import org.apache.syncope.common.lib.patch.PasswordPatch;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.RemediationTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyEntitlement;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class RemediationDirectoryPanel\n+        extends DirectoryPanel<RemediationTO, RemediationTO, RemediationProvider, RemediationRestClient> {\n+\n+    private static final long serialVersionUID = 8525204188127106587L;\n+\n+    public RemediationDirectoryPanel(final String id, final PageReference pageReference) {\n+        super(id, pageReference, true);\n+        disableCheckBoxes();\n+        setFooterVisibility(false);\n+        modal.size(Modal.Size.Large);\n+\n+        restClient = new RemediationRestClient();\n+\n+        initResultTable();\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.REMEDIATION_REMEDY);\n+    }\n+\n+    @Override\n+    protected List<IColumn<RemediationTO, String>> getColumns() {\n+        List<IColumn<RemediationTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<>(\n+                new StringResourceModel(\"key\", this), \"key\"));\n+        columns.add(new PropertyColumn<>(\n+                new ResourceModel(\"operation\"), \"operation\", \"operation\"));\n+        columns.add(new PropertyColumn<>(\n+                new ResourceModel(\"anyType\"), \"anyType\", \"anyType\"));\n+        columns.add(new PropertyColumn<>(\n+                new ResourceModel(\"remoteName\"), \"remoteName\", \"remoteName\"));\n+        columns.add(new PropertyColumn<>(\n+                new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n+        columns.add(new DatePropertyColumn<>(\n+                new ResourceModel(\"instant\"), \"instant\", \"instant\"));\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected ActionsPanel<RemediationTO> getActions(final IModel<RemediationTO> model) {\n+        ActionsPanel<RemediationTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<RemediationTO>() {\n+\n+            private static final long serialVersionUID = 6193210574968203299L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RemediationTO ignore) {\n+                modal.header(new ResourceModel(\"error\"));\n+                modal.setContent(new ExecMessageModal(model.getObject().getError()));\n+                modal.show(true);\n+                target.add(modal);\n+            }\n+        }, ActionLink.ActionType.VIEW_DETAILS, StandardEntitlement.REMEDIATION_READ);\n+\n+        if (model.getObject().getOperation() == ResourceOperation.DELETE) {\n+            String entitlements = StringUtils.join(new String[] {\n+                StandardEntitlement.REMEDIATION_REMEDY,\n+                AnyTypeKind.USER.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.USER_DELETE\n+                : AnyTypeKind.GROUP.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.GROUP_DELETE\n+                : AnyEntitlement.DELETE.getFor(model.getObject().getAnyType()) }, \",\");\n+\n+            panel.add(new ActionLink<RemediationTO>() {\n+\n+                private static final long serialVersionUID = 6193210574968203299L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final RemediationTO ignore) {\n+                    try {\n+                        restClient.remedy(model.getObject().getKey(), model.getObject().getKeyPayload());\n+                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                        target.add(container);\n+                    } catch (SyncopeClientException e) {\n+                        LOG.error(\"While performing remediation {}\", model.getObject().getKey(), e);\n+                        SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                ? e.getClass().getName() : e.getMessage());\n+                    }\n+                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                }\n+            }, ActionLink.ActionType.CLOSE, entitlements, true);\n+        } else {\n+            String entitlements = model.getObject().getOperation() == ResourceOperation.CREATE\n+                    ? StringUtils.join(new String[] {\n+                StandardEntitlement.REMEDIATION_REMEDY,\n+                AnyTypeKind.USER.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.USER_CREATE\n+                : AnyTypeKind.GROUP.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.GROUP_CREATE\n+                : AnyEntitlement.CREATE.getFor(model.getObject().getAnyType()) }, \",\")\n+                    : StringUtils.join(new String[] {\n+                StandardEntitlement.REMEDIATION_REMEDY,\n+                AnyTypeKind.USER.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.USER_UPDATE\n+                : AnyTypeKind.GROUP.name().equals(model.getObject().getAnyType())\n+                ? StandardEntitlement.GROUP_UPDATE\n+                : AnyEntitlement.UPDATE.getFor(model.getObject().getAnyType()) }, \",\");\n+\n+            panel.add(new ActionLink<RemediationTO>() {\n+\n+                private static final long serialVersionUID = 6193210574968203299L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final RemediationTO ignore) {\n+                    modal.setFormModel(new CompoundPropertyModel<>(model.getObject()));\n+                    RemediationTO remediationTO = model.getObject();\n+\n+                    switch (remediationTO.getAnyType()) {\n+                        case \"USER\":\n+                            UserTO newUserTO;\n+                            UserTO previousUserTO;\n+                            if (remediationTO.getAnyPatchPayload() == null) {\n+                                newUserTO = (UserTO) remediationTO.getAnyTOPayload();\n+                                previousUserTO = null;\n+                            } else {\n+                                previousUserTO = new UserRestClient().\n+                                        read(remediationTO.getAnyPatchPayload().getKey());\n+                                newUserTO = AnyOperations.patch(\n+                                        previousUserTO, (UserPatch) remediationTO.getAnyPatchPayload());\n+                            }\n+\n+                            AjaxWizard.EditItemActionEvent<UserTO> userEvent =\n+                                    new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n+                            userEvent.forceModalPanel(new RemediationUserWizardBuilder(\n+                                    model.getObject(),\n+                                    previousUserTO,\n+                                    newUserTO,\n+                                    new AnyTypeRestClient().read(remediationTO.getAnyType()).getClasses(),\n+                                    FormLayoutInfoUtils.fetch(Arrays.asList(remediationTO.getAnyType())).getLeft(),\n+                                    pageRef\n+                            ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n+                            send(RemediationDirectoryPanel.this, Broadcast.EXACT, userEvent);\n+                            break;\n+\n+                        case \"GROUP\":\n+                            GroupTO newGroupTO;\n+                            GroupTO previousGroupTO;\n+                            if (remediationTO.getAnyPatchPayload() == null) {\n+                                newGroupTO = (GroupTO) remediationTO.getAnyTOPayload();\n+                                previousGroupTO = null;\n+                            } else {\n+                                previousGroupTO = new GroupRestClient().\n+                                        read(remediationTO.getAnyPatchPayload().getKey());\n+                                newGroupTO = AnyOperations.patch(\n+                                        previousGroupTO, (GroupPatch) remediationTO.getAnyPatchPayload());\n+                            }\n+\n+                            AjaxWizard.EditItemActionEvent<GroupTO> groupEvent =\n+                                    new AjaxWizard.EditItemActionEvent<>(newGroupTO, target);\n+                            groupEvent.forceModalPanel(new RemediationGroupWizardBuilder(\n+                                    model.getObject(),\n+                                    previousGroupTO,\n+                                    newGroupTO,\n+                                    new AnyTypeRestClient().read(remediationTO.getAnyType()).getClasses(),\n+                                    FormLayoutInfoUtils.fetch(Arrays.asList(remediationTO.getAnyType())).getMiddle(),\n+                                    pageRef\n+                            ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n+                            send(RemediationDirectoryPanel.this, Broadcast.EXACT, groupEvent);\n+                            break;\n+\n+                        default:\n+                            AnyObjectTO newAnyObjectTO;\n+                            AnyObjectTO previousAnyObjectTO;\n+                            if (remediationTO.getAnyPatchPayload() == null) {\n+                                newAnyObjectTO = (AnyObjectTO) remediationTO.getAnyTOPayload();\n+                                previousAnyObjectTO = null;\n+                            } else {\n+                                previousAnyObjectTO = new AnyObjectRestClient().\n+                                        read(remediationTO.getAnyPatchPayload().getKey());\n+                                newAnyObjectTO = AnyOperations.patch(\n+                                        previousAnyObjectTO, (AnyObjectPatch) remediationTO.getAnyPatchPayload());\n+                            }\n+\n+                            AjaxWizard.EditItemActionEvent<AnyObjectTO> anyObjectEvent =\n+                                    new AjaxWizard.EditItemActionEvent<>(newAnyObjectTO, target);\n+                            anyObjectEvent.forceModalPanel(new RemediationAnyObjectWizardBuilder(\n+                                    model.getObject(),\n+                                    previousAnyObjectTO,\n+                                    newAnyObjectTO,\n+                                    new AnyTypeRestClient().read(remediationTO.getAnyType()).getClasses(),\n+                                    FormLayoutInfoUtils.fetch(Arrays.asList(remediationTO.getAnyType())).\n+                                            getRight().values().iterator().next(),\n+                                    pageRef\n+                            ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n+                            send(RemediationDirectoryPanel.this, Broadcast.EXACT, anyObjectEvent);\n+                    }\n+                }\n+            }, ActionLink.ActionType.EDIT, entitlements);\n+        }\n+\n+        panel.add(new ActionLink<RemediationTO>() {\n+\n+            private static final long serialVersionUID = 6193210574968203299L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RemediationTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.REMEDIATION_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    @Override\n+    protected RemediationProvider dataProvider() {\n+        return new RemediationProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_REMEDIATION_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    public static class RemediationProvider extends DirectoryDataProvider<RemediationTO> {\n+\n+        private static final long serialVersionUID = -2311716167583335852L;\n+\n+        private final SortableDataProviderComparator<RemediationTO> comparator;\n+\n+        private final RemediationRestClient restClient = new RemediationRestClient();\n+\n+        public RemediationProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"instant\", SortOrder.ASCENDING);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<RemediationTO> iterator(final long first, final long count) {\n+            final List<RemediationTO> list = restClient.getRemediations();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.getRemediations().size();\n+        }\n+\n+        @Override\n+        public IModel<RemediationTO> model(final RemediationTO remediation) {\n+            return new AbstractReadOnlyModel<RemediationTO>() {\n+\n+                private static final long serialVersionUID = -2566070996511906708L;\n+\n+                @Override\n+                public RemediationTO getObject() {\n+                    return remediation;\n+                }\n+            };\n+        }\n+    }\n+\n+    private class RemediationUserWizardBuilder extends UserWizardBuilder {\n+\n+        private static final long serialVersionUID = 6840699724316612700L;\n+\n+        private final UserTO previousUserTO;\n+\n+        private final RemediationTO remediationTO;\n+\n+        RemediationUserWizardBuilder(\n+                final RemediationTO remediationTO,\n+                final UserTO previousUserTO,\n+                final UserTO userTO,\n+                final List<String> anyTypeClasses,\n+                final UserFormLayoutInfo formLayoutInfo,\n+                final PageReference pageRef) {\n+\n+            super(previousUserTO, userTO, anyTypeClasses, formLayoutInfo, pageRef);\n+            this.previousUserTO = previousUserTO;\n+            this.remediationTO = remediationTO;\n+        }\n+\n+        @Override\n+        protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n+            UserTO inner = modelObject.getInnerObject();\n+\n+            ProvisioningResult<UserTO> result;\n+\n+            if (remediationTO.getAnyPatchPayload() == null) {\n+                result = restClient.remedy(remediationTO.getKey(), inner);\n+            } else {\n+                UserPatch patch = AnyOperations.diff(inner, previousUserTO, false);\n+\n+                if (StringUtils.isNotBlank(inner.getPassword())) {\n+                    PasswordPatch passwordPatch = new PasswordPatch.Builder().\n+                            value(inner.getPassword()).onSyncope(true).resources(inner.\n+                            getResources()).\n+                            build();\n+                    patch.setPassword(passwordPatch);\n+                }\n+                // update just if it is changed\n+                if (patch.isEmpty()) {\n+                    result = new ProvisioningResult<>();\n+                    result.setEntity(inner);\n+                } else {\n+                    result = restClient.remedy(remediationTO.getKey(), patch);\n+                }\n+            }\n+\n+            return result;\n+        }\n+    }\n+\n+    private class RemediationGroupWizardBuilder extends GroupWizardBuilder {\n+\n+        private static final long serialVersionUID = -5233791906979150786L;\n+\n+        private final GroupTO previousGroupTO;\n+\n+        private final RemediationTO remediationTO;\n+\n+        RemediationGroupWizardBuilder(\n+                final RemediationTO remediationTO,\n+                final GroupTO previousGroupTO,\n+                final GroupTO groupTO,\n+                final List<String> anyTypeClasses,\n+                final GroupFormLayoutInfo formLayoutInfo,\n+                final PageReference pageRef) {\n+\n+            super(previousGroupTO, groupTO, anyTypeClasses, formLayoutInfo, pageRef);\n+            this.previousGroupTO = previousGroupTO;\n+            this.remediationTO = remediationTO;\n+        }\n+\n+        @Override\n+        protected Serializable onApplyInternal(final AnyWrapper<GroupTO> modelObject) {\n+            GroupTO inner = modelObject.getInnerObject();\n+\n+            ProvisioningResult<GroupTO> result;\n+\n+            if (remediationTO.getAnyPatchPayload() == null) {\n+                result = restClient.remedy(remediationTO.getKey(), inner);\n+            } else {\n+                GroupPatch patch = AnyOperations.diff(inner, previousGroupTO, false);\n+\n+                // update just if it is changed\n+                if (patch.isEmpty()) {\n+                    result = new ProvisioningResult<>();\n+                    result.setEntity(inner);\n+                } else {\n+                    result = restClient.remedy(remediationTO.getKey(), patch);\n+                }\n+            }\n+\n+            return result;\n+        }\n+    }\n+\n+    private class RemediationAnyObjectWizardBuilder extends AnyObjectWizardBuilder {\n+\n+        private static final long serialVersionUID = 6993139499479015083L;\n+\n+        private final AnyObjectTO previousAnyObjectTO;\n+\n+        private final RemediationTO remediationTO;\n+\n+        RemediationAnyObjectWizardBuilder(\n+                final RemediationTO remediationTO,\n+                final AnyObjectTO previousAnyObjectTO,\n+                final AnyObjectTO anyObjectTO,\n+                final List<String> anyTypeClasses,\n+                final AnyObjectFormLayoutInfo formLayoutInfo,\n+                final PageReference pageRef) {\n+\n+            super(previousAnyObjectTO, anyObjectTO, anyTypeClasses, formLayoutInfo, pageRef);\n+            this.previousAnyObjectTO = previousAnyObjectTO;\n+            this.remediationTO = remediationTO;\n+        }\n+\n+        @Override\n+        protected Serializable onApplyInternal(final AnyWrapper<AnyObjectTO> modelObject) {\n+            AnyObjectTO inner = modelObject.getInnerObject();\n+\n+            ProvisioningResult<AnyObjectTO> result;\n+\n+            if (remediationTO.getAnyPatchPayload() == null) {\n+                result = restClient.remedy(remediationTO.getKey(), inner);\n+            } else {\n+                AnyObjectPatch patch = AnyOperations.diff(inner, previousAnyObjectTO, false);\n+\n+                // update just if it is changed\n+                if (patch.isEmpty()) {\n+                    result = new ProvisioningResult<>();\n+                    result.setEntity(inner);\n+                } else {\n+                    result = restClient.remedy(remediationTO.getKey(), patch);\n+                }\n+            }\n+\n+            return result;\n+        }\n+    }\n+}"},{"sha":"66f214be3ea4c1ba5b74894301186666226e2581","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -141,8 +141,9 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                                 new UserWrapper(new UserRestClient().read(model.getObject().getKey())),\n                                 target));\n             }\n-        }, ActionType.EDIT, new StringBuilder().append(StandardEntitlement.USER_READ).append(\",\").\n-                append(StandardEntitlement.USER_UPDATE).toString()).setRealm(realm);\n+        }, ActionType.EDIT, StringUtils.join(\n+                new String[] { StandardEntitlement.USER_READ, StandardEntitlement.USER_UPDATE }, \",\")).\n+                setRealm(realm);\n \n         panel.add(new ActionLink<UserTO>() {\n \n@@ -207,8 +208,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     displayAttributeModal.show(true);\n                 }\n-            }, ActionType.PASSWORD_MANAGEMENT,\n-                    new StringBuilder().append(StandardEntitlement.USER_UPDATE).toString()).setRealm(realm);\n+            }, ActionType.PASSWORD_MANAGEMENT, StandardEntitlement.USER_UPDATE).setRealm(realm);\n \n             if (SyncopeConsoleSession.get().getPlatformInfo().isPwdResetAllowed()\n                     && !SyncopeConsoleSession.get().getPlatformInfo().isPwdResetRequiringSecurityQuestions()) {"},{"sha":"b1e55a6330f2941a778d6e89676d96140a2425f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -33,6 +33,10 @@ public class AnyTypeRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2211371717449597247L;\n \n+    private static final AnyTypeComparator COMPARATOR = new AnyTypeComparator();\n+\n+    public static final Comparator<String> KEY_COMPARATOR = new AnyTypeKeyComparator();\n+\n     public AnyTypeTO read(final String key) {\n         AnyTypeTO type = null;\n \n@@ -76,7 +80,7 @@ public void delete(final String key) {\n         getService(AnyTypeService.class).delete(key);\n     }\n \n-    public static class AnyTypeComparator implements Comparator<AnyTypeTO>, Serializable {\n+    private static class AnyTypeComparator implements Comparator<AnyTypeTO>, Serializable {\n \n         private static final long serialVersionUID = -8227715253094467138L;\n \n@@ -98,7 +102,7 @@ public int compare(final AnyTypeTO o1, final AnyTypeTO o2) {\n         }\n     }\n \n-    public static class AnyTypeKeyComparator implements Comparator<String>, Serializable {\n+    private static class AnyTypeKeyComparator implements Comparator<String>, Serializable {\n \n         private static final long serialVersionUID = -7778622183107320760L;\n "},{"sha":"1440795cce3af71a3e4ac3dcfb8e3353a4a59424","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n@@ -34,6 +34,8 @@ public class PolicyRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -1392090291817187902L;\n \n+    private static final PolicyComparator COMPARATOR = new PolicyComparator();\n+\n     public <T extends PolicyTO> T getPolicy(final PolicyType type, final String key) {\n         T policy = null;\n         try {\n@@ -46,16 +48,14 @@ public <T extends PolicyTO> T getPolicy(final PolicyType type, final String key)\n \n     @SuppressWarnings(\"unchecked\")\n     public <T extends PolicyTO> List<T> getPolicies(final PolicyType type) {\n-        final List<T> res = new ArrayList<>();\n-\n         try {\n-            res.addAll((List<T>) getService(PolicyService.class).list(type));\n-            Collections.sort(res, new PolicyComparator());\n+            return getService(PolicyService.class).<T>list(type).stream().\n+                    sorted(COMPARATOR).\n+                    collect(Collectors.toList());\n         } catch (Exception ignore) {\n             LOG.debug(\"No policy found\", ignore);\n+            return Collections.<T>emptyList();\n         }\n-\n-        return res;\n     }\n \n     public <T extends PolicyTO> void createPolicy(final PolicyType type, final T policy) {\n@@ -70,7 +70,7 @@ public void delete(final PolicyType type, final String key) {\n         getService(PolicyService.class).delete(type, key);\n     }\n \n-    private class PolicyComparator implements Comparator<PolicyTO>, Serializable {\n+    private static class PolicyComparator implements Comparator<PolicyTO>, Serializable {\n \n         private static final long serialVersionUID = -4921433085213223115L;\n "},{"sha":"4dd9ca6500437aff809a2622d4a977b0cb963a08","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RemediationRestClient.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n+import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.patch.AnyPatch;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.RemediationTO;\n+import org.apache.syncope.common.rest.api.service.RemediationService;\n+\n+public class RemediationRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -7033745375669316378L;\n+\n+    public List<RemediationTO> getRemediations() {\n+        return getService(RemediationService.class).list();\n+    }\n+\n+    public RemediationTO getRemediation(final String key) {\n+        return getService(RemediationService.class).read(key);\n+    }\n+\n+    public <T extends AnyTO> ProvisioningResult<T> remedy(final String key, final T anyTO) {\n+        Response response = getService(RemediationService.class).remedy(key, anyTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<T>>() {\n+        });\n+    }\n+\n+    public <T extends AnyTO> ProvisioningResult<T> remedy(final String key, final AnyPatch anyPatch) {\n+        Response response = getService(RemediationService.class).remedy(key, anyPatch);\n+        return response.readEntity(new GenericType<ProvisioningResult<T>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<? extends AnyTO> remedy(final String key, final String anyKey) {\n+        Response response = getService(RemediationService.class).remedy(key, anyKey);\n+        return response.readEntity(new GenericType<ProvisioningResult<? extends AnyTO>>() {\n+        });\n+    }\n+\n+    public void delete(final String remediation) {\n+        getService(RemediationService.class).delete(remediation);\n+    }\n+}"},{"sha":"ff974e2e17a4f12e8e4cc54819d6fc907a8cb45e","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusModal.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.status;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -51,8 +50,9 @@ public ResourceStatusModal(\n         super(baseModal, pageReference, resource, null, false);\n \n         List<String> availableAnyTypes = resource.getProvisions().stream().\n-                map(ProvisionTO::getAnyType).collect(Collectors.toList());\n-        Collections.sort(availableAnyTypes, new AnyTypeRestClient.AnyTypeKeyComparator());\n+                map(ProvisionTO::getAnyType).\n+                sorted(AnyTypeRestClient.KEY_COMPARATOR).\n+                collect(Collectors.toList());\n \n         AjaxDropDownChoicePanel<String> anyTypes =\n                 new AjaxDropDownChoicePanel<>(\"anyTypes\", \"anyTypes\", typeModel, false);"},{"sha":"9f8ac62612773f351479a192acaf0ec1a2c28753","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ApprovalsWidget.java","status":"modified","additions":4,"deletions":20,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -20,11 +20,11 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.image.Icon;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconTypeBuilder;\n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -103,8 +103,9 @@ public List<WorkflowFormTO> getObject() {\n                 if (SyncopeConsoleSession.get().owns(StandardEntitlement.WORKFLOW_FORM_LIST)\n                         && SyncopeConsoleSession.get().owns(StandardEntitlement.WORKFLOW_FORM_READ)) {\n \n-                    updatedApprovals = restClient.getForms();\n-                    Collections.sort(updatedApprovals, new WorkflowFormComparator());\n+                    updatedApprovals = restClient.getForms().stream().\n+                            sorted(Comparator.comparing(WorkflowFormTO::getCreateTime)).\n+                            collect(Collectors.toList());\n                 } else {\n                     updatedApprovals = Collections.<WorkflowFormTO>emptyList();\n                 }\n@@ -183,21 +184,4 @@ protected void onComponentTag(final ComponentTag tag) {\n         }\n \n     }\n-\n-    private static class WorkflowFormComparator implements Comparator<WorkflowFormTO>, Serializable {\n-\n-        private static final long serialVersionUID = 4650217602780789075L;\n-\n-        @Override\n-        public int compare(final WorkflowFormTO o1, final WorkflowFormTO o2) {\n-            if (o1 == null) {\n-                return o2 == null ? 0 : 1;\n-            } else if (o2 == null) {\n-                return -1;\n-            } else {\n-                // inverse\n-                return o2.getCreateTime().compareTo(o1.getCreateTime());\n-            }\n-        }\n-    }\n }"},{"sha":"897ae2ef63e3732fe9a1234b8ab76524bca35376","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -643,10 +643,7 @@ public ActionsPanel<ExecTO> getActions(final IModel<ExecTO> model) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-\n-                    StringResourceModel stringResourceModel = new StringResourceModel(\"execution.view\", JobWidget.this,\n-                            model);\n-                    detailModal.header(stringResourceModel);\n+                    detailModal.header(new StringResourceModel(\"execution.view\", JobWidget.this, model));\n                     detailModal.setContent(new ExecMessageModal(model.getObject().getMessage()));\n                     detailModal.show(true);\n                     target.add(detailModal);"},{"sha":"287fdbca9a13db1a98590b36768cdb5e88f1da8a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/RemediationsWidget.java","status":"added","additions":167,"deletions":0,"changes":167,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.image.Icon;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconTypeBuilder;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.pages.Remediations;\n+import org.apache.syncope.client.console.rest.RemediationRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n+import org.apache.syncope.common.lib.to.RemediationTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.link.AbstractLink;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.util.time.Duration;\n+\n+public class RemediationsWidget extends AlertWidget<RemediationTO> {\n+\n+    private static final long serialVersionUID = 1817429725840355068L;\n+\n+    private final RemediationRestClient restClient = new RemediationRestClient();\n+\n+    private final List<RemediationTO> lastRemediations = new ArrayList<>();\n+\n+    public RemediationsWidget(final String id, final PageReference pageRef) {\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        latestAlertsList.add(new IndicatorAjaxTimerBehavior(Duration.seconds(30)) {\n+\n+            private static final long serialVersionUID = 7298597675929755960L;\n+\n+            @Override\n+            protected void onTimer(final AjaxRequestTarget target) {\n+                if (!latestAlerts.getObject().equals(lastRemediations)) {\n+                    refreshLatestAlerts(target);\n+                }\n+            }\n+        });\n+    }\n+\n+    public final void refreshLatestAlerts(final AjaxRequestTarget target) {\n+        latestAlerts.getObject().clear();\n+        latestAlerts.getObject().addAll(lastRemediations);\n+\n+        linkAlertsNumber.setDefaultModelObject(latestAlerts.getObject().size());\n+        target.add(linkAlertsNumber);\n+\n+        headerAlertsNumber.setDefaultModelObject(latestAlerts.getObject().size());\n+        target.add(headerAlertsNumber);\n+\n+        latestFive.removeAll();\n+        target.add(latestAlertsList);\n+\n+        lastRemediations.clear();\n+        lastRemediations.addAll(latestAlerts.getObject());\n+    }\n+\n+    @Override\n+    protected IModel<List<RemediationTO>> getLatestAlerts() {\n+        return new ListModel<RemediationTO>() {\n+\n+            private static final long serialVersionUID = 541491929575585613L;\n+\n+            @Override\n+            public List<RemediationTO> getObject() {\n+                List<RemediationTO> updatedRemediations;\n+                if (SyncopeConsoleSession.get().owns(StandardEntitlement.REMEDIATION_LIST)\n+                        && SyncopeConsoleSession.get().owns(StandardEntitlement.REMEDIATION_READ)) {\n+\n+                    updatedRemediations = restClient.getRemediations().stream().\n+                            sorted(Comparator.comparing(RemediationTO::getInstant)).\n+                            collect(Collectors.toList());\n+                } else {\n+                    updatedRemediations = Collections.<RemediationTO>emptyList();\n+                }\n+\n+                return updatedRemediations;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected Panel getAlertLink(final String panelid, final RemediationTO event) {\n+        return new RemediationsWidget.InnerPanel(panelid, event);\n+    }\n+\n+    @Override\n+    protected AbstractLink getEventsLink(final String linkid) {\n+        BookmarkablePageLink<Remediations> remediations = BookmarkablePageLinkBuilder.build(linkid, Remediations.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(remediations, WebPage.ENABLE, StandardEntitlement.REMEDIATION_LIST);\n+        return remediations;\n+    }\n+\n+    @Override\n+    protected Icon getIcon(final String iconid) {\n+        return new Icon(iconid,\n+                FontAwesomeIconTypeBuilder.on(FontAwesomeIconTypeBuilder.FontAwesomeGraphic.medkit).build());\n+    }\n+\n+    public static final class InnerPanel extends Panel {\n+\n+        private static final long serialVersionUID = 8074027899915634928L;\n+\n+        public InnerPanel(final String id, final RemediationTO alert) {\n+            super(id);\n+\n+            AjaxLink<String> approval = new AjaxLink<String>(\"remediation\") {\n+\n+                private static final long serialVersionUID = 7021195294339489084L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    // do nothing\n+                }\n+\n+                @Override\n+                protected void onComponentTag(final ComponentTag tag) {\n+                    super.onComponentTag(tag);\n+                    tag.put(\"title\", alert.getRemoteName().trim());\n+                }\n+            };\n+\n+            add(approval);\n+\n+            approval.add(new Label(\"label\", alert.getOperation().name() + \" \" + alert.getAnyType()));\n+\n+            approval.add(new Label(\"resource\", alert.getResource()));\n+\n+            approval.add(new Label(\"instant\",\n+                    SyncopeConsoleSession.get().getDateFormat().format(alert.getInstant())).\n+                    setRenderBodyOnly(true));\n+        }\n+    }\n+}"},{"sha":"7455ffcdbe99d87fff2dedb3551b1807c3fd3f8c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -52,6 +52,8 @@\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n+    protected final Comparator<AttrTO> attrComparator = new AttrComparator();\n+\n     private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n@@ -208,7 +210,7 @@ public PageReference getPageReference() {\n         return null;\n     }\n \n-    protected class AttrComparator implements Comparator<AttrTO>, Serializable {\n+    private class AttrComparator implements Comparator<AttrTO>, Serializable {\n \n         private static final long serialVersionUID = -5105030477767941060L;\n "},{"sha":"d52a2f7f9d0fe8da348313e164a515ea9572bd61","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -42,7 +42,26 @@ public AnyObjectWizardBuilder(\n             final AnyObjectFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n \n-        super(anyObjectTO, anyTypeClasses, formLayoutInfo, pageRef);\n+        super(anyObjectTO == null ? null : new AnyObjectWrapper(anyObjectTO), anyTypeClasses, formLayoutInfo, pageRef);\n+    }\n+\n+    /**\n+     * Constructor to be used for Remediation details only.\n+     *\n+     * @param previousAnyObjectTO previous anyObject status.\n+     * @param anyObjectTO new anyObject status to be approved.\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo from layout.\n+     * @param pageRef reference page.\n+     */\n+    public AnyObjectWizardBuilder(\n+            final AnyObjectTO previousAnyObjectTO,\n+            final AnyObjectTO anyObjectTO,\n+            final List<String> anyTypeClasses,\n+            final AnyObjectFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new AnyObjectWrapper(previousAnyObjectTO, anyObjectTO), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     @Override"},{"sha":"3855bd8f862905f7abeeb4befc93bdb018871fa9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWrapper.java","status":"renamed","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -16,22 +16,27 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.commons;\n+package org.apache.syncope.client.console.wizards.any;\n \n-import java.io.Serializable;\n-import java.util.Comparator;\n-import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n \n-public class GroupComparator implements Comparator<GroupTO>, Serializable {\n+public class AnyObjectWrapper extends AnyWrapper<AnyObjectTO> {\n \n-    private static final long serialVersionUID = 3584905855352863080L;\n+    private static final long serialVersionUID = 8058288034211558376L;\n \n-    @Override\n-    public int compare(final GroupTO left, final GroupTO right) {\n-        return left == null || left.getName() == null\n-                ? -1\n-                : right == null || right.getName() == null\n-                ? 1\n-                : left.getName().compareTo(right.getName());\n+    private AnyObjectTO previousAnyObjectTO;\n+\n+    public AnyObjectWrapper(final AnyObjectTO anyObjectTO) {\n+        this(null, anyObjectTO);\n+    }\n+\n+    public AnyObjectWrapper(final AnyObjectTO previousAnyObjectTO, final AnyObjectTO anyObjectTO) {\n+        super(anyObjectTO);\n+        this.previousAnyObjectTO = previousAnyObjectTO;\n     }\n+\n+    public AnyObjectTO getPreviousAnyObjectTO() {\n+        return previousAnyObjectTO;\n+    }\n+\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/GroupComparator.java"},{"sha":"ccb378ee393fc8d02baf44d0450f52bbcbac2166","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -98,16 +99,12 @@ protected SchemaType getSchemaType() {\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO() {\n-        final List<AttrTO> res = new ArrayList<>(anyTO.getDerAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return anyTO.getDerAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n-        final List<AttrTO> res = new ArrayList<>(membershipTO.getDerAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return membershipTO.getDerAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override\n@@ -116,15 +113,15 @@ protected void setAttrs() {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n-        for (DerSchemaTO schema : schemas.values()) {\n+        schemas.values().forEach(schema -> {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.containsKey(schema.getKey())) {\n                 attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n \n             attrs.add(attrTO);\n-        }\n+        });\n \n         anyTO.getDerAttrs().clear();\n         anyTO.getDerAttrs().addAll(attrs);"},{"sha":"4282faeafcac7db5d933e9bff7a817e9d81852f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -48,6 +48,25 @@ public GroupWizardBuilder(\n         super(groupTO == null ? null : new GroupWrapper(groupTO), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n+    /**\n+     * Constructor to be used for Remediation details only.\n+     *\n+     * @param previousGroupTO previous group status.\n+     * @param groupTO new group status to be approved.\n+     * @param anyTypeClasses any type classes.\n+     * @param formLayoutInfo from layout.\n+     * @param pageRef reference page.\n+     */\n+    public GroupWizardBuilder(\n+            final GroupTO previousGroupTO,\n+            final GroupTO groupTO,\n+            final List<String> anyTypeClasses,\n+            final GroupFormLayoutInfo formLayoutInfo,\n+            final PageReference pageRef) {\n+\n+        super(new GroupWrapper(previousGroupTO, groupTO), anyTypeClasses, formLayoutInfo, pageRef);\n+    }\n+\n     /**\n      * This method has been overridden to manage asynchronous translation of FIQL string to search classes list and\n      * viceversa."},{"sha":"8e82041d7fe15d74c977a67188e328149412a0a6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWrapper.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -31,16 +31,27 @@ public class GroupWrapper extends AnyWrapper<GroupTO> {\n \n     private static final long serialVersionUID = 8058288034211558376L;\n \n+    private GroupTO previousGroupTO;\n+\n     private List<SearchClause> uDynClauses;\n \n     private Map<String, List<SearchClause>> aDynClauses;\n \n     public GroupWrapper(final GroupTO groupTO) {\n+        this(null, groupTO);\n+    }\n+\n+    public GroupWrapper(final GroupTO previousGroupTO, final GroupTO groupTO) {\n         super(groupTO);\n+        this.previousGroupTO = previousGroupTO;\n         getUDynClauses();\n         getADynClauses();\n     }\n \n+    public GroupTO getPreviousGroupTO() {\n+        return previousGroupTO;\n+    }\n+\n     public final List<SearchClause> getUDynClauses() {\n         if (this.uDynClauses == null) {\n             this.uDynClauses = SearchUtils.getSearchClauses(this.anyTO.getUDynMembershipCond());"},{"sha":"d25d0f0d5171405cf74240a3e1ebcdc5ed528ee1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n@@ -151,16 +152,12 @@ protected boolean reoderSchemas() {\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO() {\n-        final List<AttrTO> res = new ArrayList<>(anyTO.getPlainAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return anyTO.getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n-        final List<AttrTO> res = new ArrayList<>(membershipTO.getPlainAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return membershipTO.getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override"},{"sha":"4db79bfcc75147a1f8aabcaa357dc86bc1ed3cfa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -54,7 +54,7 @@ public UserWizardBuilder(\n     }\n \n     /**\n-     * Constructor to be used for Approval details only.\n+     * Constructor to be used for Approval and Remediation details only.\n      *\n      * @param previousUserTO previous user status.\n      * @param userTO new user status to be approved."},{"sha":"ebea4b72712b0ef577fb46c4d489de10cff0607c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n@@ -108,16 +109,12 @@ protected SchemaType getSchemaType() {\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO() {\n-        final List<AttrTO> res = new ArrayList<>(anyTO.getVirAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return anyTO.getVirAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override\n     protected List<AttrTO> getAttrsFromTO(final MembershipTO membershipTO) {\n-        final List<AttrTO> res = new ArrayList<>(membershipTO.getVirAttrs());\n-        Collections.sort(res, new AttrComparator());\n-        return res;\n+        return membershipTO.getVirAttrs().stream().sorted(attrComparator).collect(Collectors.toList());\n     }\n \n     @Override"},{"sha":"4976641561f67bfc8a0aeaf459e7419af55565f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -304,8 +304,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n     }\n \n     private void sortProvisions() {\n-        Collections.sort(provisions, (o1, o2)\n-                -> new AnyTypeRestClient.AnyTypeKeyComparator().compare(o1.getAnyType(), o2.getAnyType()));\n+        Collections.sort(provisions,\n+                (o1, o2) -> AnyTypeRestClient.KEY_COMPARATOR.compare(o1.getAnyType(), o2.getAnyType()));\n     }\n \n     private LoadableDetachableModel<List<String>> getAnyTypes() {\n@@ -322,7 +322,7 @@ protected List<String> load() {\n                     anyTypes.add(SyncopeConstants.REALM_ANYTYPE);\n                 }\n \n-                Collections.sort(anyTypes, new AnyTypeRestClient.AnyTypeKeyComparator());\n+                Collections.sort(anyTypes, AnyTypeRestClient.KEY_COMPARATOR);\n                 return anyTypes;\n             }\n         };"},{"sha":"5d5d1294ef2edaa3b40366b436286c1a8c24a4a4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/approvals/ApprovalModal.html","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal.html?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -17,10 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <span wicket:id=\"approval\">[APPROVAL]</span>\n-    </wicket:panel>\n-  </body>\n+  <wicket:panel>\n+    <span wicket:id=\"approval\">[APPROVAL]</span>\n+  </wicket:panel>\n </html>"},{"sha":"941c89687fc9439125a5a0c5d34c6d65f81a0865","filename":"client/console/src/main/resources/org/apache/syncope/client/console/approvals/ApprovalModal_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+approval.details=Approval details"},{"sha":"941c89687fc9439125a5a0c5d34c6d65f81a0865","filename":"client/console/src/main/resources/org/apache/syncope/client/console/approvals/ApprovalModal_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_pt_BR.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+approval.details=Approval details"},{"sha":"941c89687fc9439125a5a0c5d34c6d65f81a0865","filename":"client/console/src/main/resources/org/apache/syncope/client/console/approvals/ApprovalModal_ru.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalModal_ru.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+approval.details=Approval details"},{"sha":"7b8e4e19529490a9c2fa399662cc5d0922f5bd5d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -59,6 +59,10 @@\n           <div class=\"navbar-custom-menu\">\n             <ul class=\"nav navbar-nav\">\n \n+              <li class=\"dropdown tasks-menu\">\n+                <span wicket:id=\"remediationWidget\"/>\n+              </li>\n+\n               <li class=\"dropdown tasks-menu\">\n                 <span wicket:id=\"approvalsWidget\"/>\n               </li>"},{"sha":"24934ce7f93330221369d5e5ab2847b0d83f6d97","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations.html","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.html?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,35 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\">[DASHBOARD]</wicket:message></a></li>\n+        <li class=\"active\"><wicket:message key=\"remediations\"/></li>\n+      </ol>\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"remediations\"/>\n+      </div>\n+    </section>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"5225dbbc13a9d38c5a0f5a86e45f89fccf206a8d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+remediations=Remediations\n+anyType=Type\n+operation=Operation\n+remoteName=Remote name\n+resource=Resource\n+instant=Instant\n+remedy=Remedy\n+view_details.title=view error\n+close.title=remedy\n+edit.title=remedy\n+any.edit=Remedy"},{"sha":"7cb14e6ed677ebc6d52c075aa462e42732b2f1a4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations_it.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+remediations=Bonifiche\n+anyType=Tipo\n+operation=Operazione\n+remoteName=Nome remoto\n+resource=Risorsa\n+instant=Istante\n+remedy=Bonifica\n+view_details.title=vedi errore\n+close.title=bonifica\n+edit.title=bonifica\n+any.edit=Bonifica"},{"sha":"5225dbbc13a9d38c5a0f5a86e45f89fccf206a8d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations_ja.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ja.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+remediations=Remediations\n+anyType=Type\n+operation=Operation\n+remoteName=Remote name\n+resource=Resource\n+instant=Instant\n+remedy=Remedy\n+view_details.title=view error\n+close.title=remedy\n+edit.title=remedy\n+any.edit=Remedy"},{"sha":"5225dbbc13a9d38c5a0f5a86e45f89fccf206a8d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations_pt_BR.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_pt_BR.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+remediations=Remediations\n+anyType=Type\n+operation=Operation\n+remoteName=Remote name\n+resource=Resource\n+instant=Instant\n+remedy=Remedy\n+view_details.title=view error\n+close.title=remedy\n+edit.title=remedy\n+any.edit=Remedy"},{"sha":"5225dbbc13a9d38c5a0f5a86e45f89fccf206a8d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Remediations_ru.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRemediations_ru.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+remediations=Remediations\n+anyType=Type\n+operation=Operation\n+remoteName=Remote name\n+resource=Resource\n+instant=Instant\n+remedy=Remedy\n+view_details.title=view error\n+close.title=remedy\n+edit.title=remedy\n+any.edit=Remedy"},{"sha":"1b032943684470f8058fa7981631909d26e6791c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -15,5 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Modifica ${anyTO.type} ${anyTO.username}\n-any.propagation.tasks=Task di propagazione per ${type} ${name}\n+any.propagation.tasks=Task di propagazione per ${type} ${username}\n any.notification.tasks=Task di notifica per ${type} ${username}"},{"sha":"9498b193fa454fe574f94aa8eba6847ec55c0d6d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_pt_BR.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -15,5 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Alterar ${anyTO.type} ${anyTO.username}\n-any.propagation.tasks=Propagation tasks for ${type} ${name}\n+any.propagation.tasks=Propagation tasks for ${type} ${username}\n any.notification.tasks=Notification tasks for ${type} ${username}"},{"sha":"e3903e1b4d9f3dbbec69d1fe8cd6211331796df5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -99,15 +99,15 @@ not_found.title=not found\n not_found.alt=not found icon\n \n view.class=fa fa-eye\n-view.title=view\n+view.title=vedi\n view.alt=view icon\n \n view_executions.class=fa fa-eye\n view_executions.title=view executions\n view_executions.alt=view executions icon\n \n view_details.class=fa fa-info-circle\n-view_details.title=view details\n+view_details.title=dettagli\n view_details.alt=view details icon\n \n members.class=fa fa-users"},{"sha":"db15243103d7afb324711f2f3cdfe4622a48dc07","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -99,7 +99,7 @@ not_found.title=non trovato\n not_found.alt=not found icon\n \n view.class=fa fa-eye\n-view.title=vedi\n+view.title=view\n view.alt=view icon\n \n view_executions.class=fa fa-eye"},{"sha":"dd5b98f97a40518c243bdbc11b0a73b5d168ad9a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ApprovalsWidget.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=View All approvals\n+alerts.view.all=View all approvals\n duedate=Due date\n owner=Owner\n createApproval=Create Approval"},{"sha":"7b2287e45a7aad3ea386381d7dac3581602d0d33","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ApprovalsWidget_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=Tutti le approvazioni\n+alerts.view.all=Tutte le approvazioni\n duedate=Scadenza\n owner=Assegnato\n createApproval=Approvazione Creazione"},{"sha":"c24f3d8f7465bcd50e0a60564a7ce00f350a3a41","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/ApprovalsWidget_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FApprovalsWidget_pt_BR.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=View All Approvals\n+alerts.view.all=View all Approvals\n duedate=Due date\n owner=Owner\n createApproval=Create Approval"},{"sha":"3ffaa88ae0e7d5bf00cdeedb330023da2a903640","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget$InnerPanel.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget%24InnerPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget%24InnerPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget%24InnerPanel.html?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <a href=\"#\" wicket:id=\"remediation\" style=\"cursor: not-allowed;\">\n+      <h3><small class=\"pull-right\" wicket:id=\"resource\"/> <p wicket:id=\"label\"/></h3>\n+      <small><i class=\"fa fa-clock-o\"></i> <p wicket:id=\"instant\"/></small>\n+    </a>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"86459d69e39b1982e69d34a62529984911943f8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=View all remediations\n+summary=${number} pending remediation(s)"},{"sha":"8e2ad5ca922b91c510234d276d56eea962a98c64","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_it.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=Tutte le bonifiche\n+summary=${number} bonifiche da gestire"},{"sha":"86459d69e39b1982e69d34a62529984911943f8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget_ja.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ja.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=View all remediations\n+summary=${number} pending remediation(s)"},{"sha":"e1dcb2f9bcf5bf019497aea6523b628c390adc8e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_pt_BR.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=View all remediations\n+summary=${number} pending approval(s)"},{"sha":"40055126f92bb8b2c86ed7cec0ce47c1bb969b10","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/RemediationsWidget_ru.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget_ru.properties?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+alerts.view.all=View all remediations\n+summary=${number} pending remediation(s)"},{"sha":"7561bb1d79fd0da29e2cdef85bd1a4eea1b51e28","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RemediationTO.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -25,7 +25,6 @@\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n @XmlRootElement(name = \"remediation\")\n@@ -36,7 +35,7 @@ public class RemediationTO extends AbstractBaseBean implements EntityTO {\n \n     private String key;\n \n-    private AnyTypeKind anyTypeKind;\n+    private String anyType;\n \n     private ResourceOperation operation;\n \n@@ -68,12 +67,12 @@ public void setKey(final String key) {\n     }\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    public AnyTypeKind getAnyTypeKind() {\n-        return anyTypeKind;\n+    public String getAnyType() {\n+        return anyType;\n     }\n \n-    public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n-        this.anyTypeKind = anyTypeKind;\n+    public void setAnyType(final String anyType) {\n+        this.anyType = anyType;\n     }\n \n     @Schema(accessMode = Schema.AccessMode.READ_ONLY)"},{"sha":"67257cf73b0fca8530a0f1dd4c1575eb81b39906","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RemediationLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -102,7 +102,7 @@ public ProvisioningResult<?> remedy(final String key, final AnyTO anyTO, final b\n         }\n \n         ProvisioningResult<?> result;\n-        switch (remediation.getAnyTypeKind()) {\n+        switch (remediation.getAnyType().getKind()) {\n             case USER:\n             default:\n                 result = userLogic.create((UserTO) anyTO, true, nullPriorityAsync);\n@@ -131,7 +131,7 @@ public ProvisioningResult<?> remedy(final String key, final AnyPatch anyPatch, f\n         }\n \n         ProvisioningResult<?> result;\n-        switch (remediation.getAnyTypeKind()) {\n+        switch (remediation.getAnyType().getKind()) {\n             case USER:\n             default:\n                 result = userLogic.update((UserPatch) anyPatch, nullPriorityAsync);\n@@ -160,7 +160,7 @@ public ProvisioningResult<?> remedy(final String key, final String anyKey, final\n         }\n \n         ProvisioningResult<?> result;\n-        switch (remediation.getAnyTypeKind()) {\n+        switch (remediation.getAnyType().getKind()) {\n             case USER:\n             default:\n                 result = userLogic.delete(anyKey, nullPriorityAsync);"},{"sha":"368f4274c8d53086dd4f006aa8075f13e1ab5601","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RemediationDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -19,13 +19,16 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n public interface RemediationDAO extends DAO<Remediation> {\n \n     Remediation find(String key);\n \n+    List<Remediation> findByAnyType(AnyType anyType);\n+\n     List<Remediation> findByPullTask(PullTask pullTask);\n \n     List<Remediation> findAll();"},{"sha":"d46cb21454653cfc83eb68a840084dcde2daf1d2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Remediation.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRemediation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRemediation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRemediation.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -21,15 +21,14 @@\n import java.util.Date;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n \n public interface Remediation extends Entity {\n \n-    AnyTypeKind getAnyTypeKind();\n+    AnyType getAnyType();\n \n-    void setAnyTypeKind(AnyTypeKind anyTypeKind);\n+    void setAnyType(AnyType anyType);\n \n     ResourceOperation getOperation();\n "},{"sha":"ea26550f9d4adb72425a5cd80f19c6f503b34dc2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyTypeDAO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -22,15 +22,20 @@\n import javax.persistence.TypedQuery;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.RemediationDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyType;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n public class JPAAnyTypeDAO extends AbstractDAO<AnyType> implements AnyTypeDAO {\n \n+    @Autowired\n+    private RemediationDAO remediationDAO;\n+\n     @Transactional(readOnly = true)\n     @Override\n     public AnyType find(final String key) {\n@@ -82,6 +87,11 @@ public void delete(final String key) {\n             throw new IllegalArgumentException(key + \" cannot be deleted\");\n         }\n \n+        remediationDAO.findByAnyType(anyType).forEach(remediation -> {\n+            remediation.setAnyType(null);\n+            remediationDAO.delete(remediation);\n+        });\n+\n         entityManager().remove(anyType);\n     }\n "},{"sha":"fa7a0443a7d8c0a94cfaebf9257d98a388f2384d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARemediationDAO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.RemediationDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.jpa.entity.JPARemediation;\n@@ -34,6 +35,15 @@ public Remediation find(final String key) {\n         return entityManager().find(JPARemediation.class, key);\n     }\n \n+    @Override\n+    public List<Remediation> findByAnyType(final AnyType anyType) {\n+        TypedQuery<Remediation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPARemediation.class.getSimpleName() + \" e WHERE e.anyType=:anyType\",\n+                Remediation.class);\n+        query.setParameter(\"anyType\", anyType);\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public List<Remediation> findByPullTask(final PullTask pullTask) {\n         TypedQuery<Remediation> query = entityManager().createQuery("},{"sha":"fab22bba32357ddcfa06a863e1380b72a2a0230a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARemediation.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARemediation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARemediation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARemediation.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -30,8 +30,8 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n@@ -47,9 +47,8 @@ public class JPARemediation extends AbstractGeneratedKeyEntity implements Remedi\n \n     public static final String TABLE = \"Remediation\";\n \n-    @NotNull\n-    @Enumerated(EnumType.STRING)\n-    private AnyTypeKind anyTypeKind;\n+    @ManyToOne\n+    private JPAAnyType anyType;\n \n     @NotNull\n     @Enumerated(EnumType.STRING)\n@@ -74,13 +73,14 @@ public class JPARemediation extends AbstractGeneratedKeyEntity implements Remedi\n     private String remoteName;\n \n     @Override\n-    public AnyTypeKind getAnyTypeKind() {\n-        return anyTypeKind;\n+    public AnyType getAnyType() {\n+        return anyType;\n     }\n \n     @Override\n-    public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n-        this.anyTypeKind = anyTypeKind;\n+    public void setAnyType(final AnyType anyType) {\n+        checkType(anyType, JPAAnyType.class);\n+        this.anyType = (JPAAnyType) anyType;\n     }\n \n     @Override"},{"sha":"e9eff9746c5251e300efc686730dea254dd70c2c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/RemediationValidator.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRemediationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRemediationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRemediationValidator.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -31,23 +31,23 @@ public boolean isValid(final Remediation remediation, final ConstraintValidatorC\n \n         switch (remediation.getOperation()) {\n             case CREATE:\n-                if (remediation.getPayloadAsTO(remediation.getAnyTypeKind().getTOClass()) == null) {\n+                if (remediation.getPayloadAsTO(remediation.getAnyType().getKind().getTOClass()) == null) {\n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n                             getTemplate(EntityViolationType.InvalidRemediation,\n-                                    \"Expected \" + remediation.getAnyTypeKind().getTOClass().getName())).\n+                                    \"Expected \" + remediation.getAnyType().getKind().getTOClass().getName())).\n                             addPropertyNode(\"payload\").addConstraintViolation();\n \n                     isValid = false;\n                 }\n                 break;\n \n             case UPDATE:\n-                if (remediation.getPayloadAsPatch(remediation.getAnyTypeKind().getPatchClass()) == null) {\n+                if (remediation.getPayloadAsPatch(remediation.getAnyType().getKind().getPatchClass()) == null) {\n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n                             getTemplate(EntityViolationType.InvalidRemediation,\n-                                    \"Expected \" + remediation.getAnyTypeKind().getPatchClass().getName())).\n+                                    \"Expected \" + remediation.getAnyType().getKind().getPatchClass().getName())).\n                             addPropertyNode(\"payload\").addConstraintViolation();\n \n                     isValid = false;"},{"sha":"34b26eb28a0c9a6b54e96da99b69477c8dc97827","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RemediationTest.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRemediationTest.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -28,10 +28,10 @@\n import java.util.List;\n import java.util.Set;\n import java.util.UUID;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.RemediationDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n@@ -46,6 +46,9 @@ public class RemediationTest extends AbstractTest {\n     @Autowired\n     private RemediationDAO remediationDAO;\n \n+    @Autowired\n+    private AnyTypeDAO anyTypeDAO;\n+\n     @Autowired\n     private TaskDAO taskDAO;\n \n@@ -58,7 +61,7 @@ public void findAll() {\n     @Test\n     public void create() {\n         Remediation remediation = entityFactory.newEntity(Remediation.class);\n-        remediation.setAnyTypeKind(AnyTypeKind.ANY_OBJECT);\n+        remediation.setAnyType(anyTypeDAO.find(\"PRINTER\"));\n         remediation.setOperation(ResourceOperation.CREATE);\n         remediation.setError(\"Error\");\n         remediation.setInstant(new Date());"},{"sha":"36bac893305422519732cb6ca09f2696ebf86660","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RemediationDataBinderImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRemediationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRemediationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRemediationDataBinderImpl.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -28,7 +28,7 @@\n public class RemediationDataBinderImpl implements RemediationDataBinder {\n \n     private static final String[] IGNORE_PROPERTIES = {\n-        \"payload\", \"anyTOPayload\", \"anyPatchPayload\", \"keyPayload\", \"pullTask\" };\n+        \"anyType\", \"payload\", \"anyTOPayload\", \"anyPatchPayload\", \"keyPayload\", \"pullTask\" };\n \n     @Override\n     public RemediationTO getRemediationTO(final Remediation remediation) {\n@@ -39,12 +39,12 @@ public RemediationTO getRemediationTO(final Remediation remediation) {\n         switch (remediation.getOperation()) {\n             case CREATE:\n                 remediationTO.setAnyTOPayload(\n-                        remediation.getPayloadAsTO(remediation.getAnyTypeKind().getTOClass()));\n+                        remediation.getPayloadAsTO(remediation.getAnyType().getKind().getTOClass()));\n                 break;\n \n             case UPDATE:\n                 remediationTO.setAnyPatchPayload(\n-                        remediation.getPayloadAsPatch(remediation.getAnyTypeKind().getPatchClass()));\n+                        remediation.getPayloadAsPatch(remediation.getAnyType().getKind().getPatchClass()));\n                 break;\n \n             case DELETE:\n@@ -54,6 +54,8 @@ public RemediationTO getRemediationTO(final Remediation remediation) {\n             default:\n         }\n \n+        remediationTO.setAnyType(remediation.getAnyType().getKey());\n+\n         if (remediation.getPullTask() != null) {\n             remediationTO.setPullTask(remediation.getPullTask().getKey());\n             remediationTO.setResource(remediation.getPullTask().getResource().getKey());"},{"sha":"3abbd849bf5c00f29735b3fae4d1f70c23fd3460","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -217,7 +217,7 @@ protected List<ProvisioningReport> assign(\n                 action.beforeAssign(profile, delta, anyTO);\n             }\n \n-            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n+            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), provision, result);\n         }\n \n         return Collections.singletonList(result);\n@@ -249,7 +249,7 @@ protected List<ProvisioningReport> provision(\n                 action.beforeProvision(profile, delta, anyTO);\n             }\n \n-            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n+            create(anyTO, delta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), provision, result);\n         }\n \n         return Collections.singletonList(result);\n@@ -277,6 +277,7 @@ protected void create(\n             final AnyTO anyTO,\n             final SyncDelta delta,\n             final String operation,\n+            final Provision provision,\n             final ProvisioningReport result)\n             throws JobExecutionException {\n \n@@ -312,7 +313,7 @@ protected void create(\n \n             if (profile.getTask().isRemediation()) {\n                 Remediation entity = entityFactory.newEntity(Remediation.class);\n-                entity.setAnyTypeKind(getAnyUtils().getAnyTypeKind());\n+                entity.setAnyType(provision.getAnyType());\n                 entity.setOperation(ResourceOperation.CREATE);\n                 entity.setPayload(anyTO);\n                 entity.setError(result.getMessage());\n@@ -411,7 +412,7 @@ protected List<ProvisioningReport> update(\n \n                         if (profile.getTask().isRemediation()) {\n                             Remediation entity = entityFactory.newEntity(Remediation.class);\n-                            entity.setAnyTypeKind(provision.getAnyType().getKind());\n+                            entity.setAnyType(provision.getAnyType());\n                             entity.setOperation(ResourceOperation.UPDATE);\n                             entity.setPayload(anyPatch);\n                             entity.setError(result.getMessage());\n@@ -699,7 +700,7 @@ protected List<ProvisioningReport> delete(\n \n                         if (profile.getTask().isRemediation()) {\n                             Remediation entity = entityFactory.newEntity(Remediation.class);\n-                            entity.setAnyTypeKind(provision.getAnyType().getKind());\n+                            entity.setAnyType(provision.getAnyType());\n                             entity.setOperation(ResourceOperation.DELETE);\n                             entity.setPayload(key);\n                             entity.setError(result.getMessage());"},{"sha":"91340b1750d0a1f5091911df23193ac0b8512648","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RemediationServiceImpl.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRemediationServiceImpl.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -76,23 +76,22 @@ private void check(final String key, final String anyKey) {\n         RemediationTO remediation = logic.read(key);\n \n         AnyDAO<?> anyDAO;\n-        switch (remediation.getAnyTypeKind()) {\n-            case USER:\n-            default:\n+        switch (remediation.getAnyType()) {\n+            case \"USER\":\n                 anyDAO = userDAO;\n                 break;\n \n-            case GROUP:\n+            case \"GROUP\":\n                 anyDAO = groupDAO;\n                 break;\n \n-            case ANY_OBJECT:\n+            default:\n                 anyDAO = anyObjectDAO;\n         }\n \n         Date etagDate = anyDAO.findLastChange(anyKey);\n         if (etagDate == null) {\n-            throw new NotFoundException(remediation.getAnyTypeKind().name() + \" for \" + key);\n+            throw new NotFoundException(remediation.getAnyType() + \" for \" + key);\n         }\n         checkETag(String.valueOf(etagDate.getTime()));\n     }"},{"sha":"4edb57e8e08e963f5f583f5f2d4b448ed05bac15","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4e781f4a7457248e5e1566a1ca35dbcf5f139287/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4e781f4a7457248e5e1566a1ca35dbcf5f139287/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=4e781f4a7457248e5e1566a1ca35dbcf5f139287","patch":"@@ -709,7 +709,7 @@ public void remediation() {\n                     filter(r -> \"uid=pullFromLDAP,ou=People,o=isp\".equalsIgnoreCase(r.getRemoteName())).\n                     findFirst();\n             assertTrue(remediation.isPresent());\n-            assertEquals(AnyTypeKind.USER, remediation.get().getAnyTypeKind());\n+            assertEquals(AnyTypeKind.USER.name(), remediation.get().getAnyType());\n             assertEquals(ResourceOperation.CREATE, remediation.get().getOperation());\n             assertNotNull(remediation.get().getAnyTOPayload());\n             assertNull(remediation.get().getAnyPatchPayload());"}]}