{"sha":"40ceab8b1abab5783650823c238cf636750ece46","node_id":"C_kwDOJfYA1toAKDQwY2VhYjhiMWFiYWI1NzgzNjUwODIzYzIzOGNmNjM2NzUwZWNlNDY","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-04-26T15:24:21Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-04-26T15:24:31Z"},"message":"Improving StatusR builder","tree":{"sha":"fe75c5915da875198ed7b3f9d16d5ff45f3fe352","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe75c5915da875198ed7b3f9d16d5ff45f3fe352"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/40ceab8b1abab5783650823c238cf636750ece46","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/40ceab8b1abab5783650823c238cf636750ece46","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/40ceab8b1abab5783650823c238cf636750ece46","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/40ceab8b1abab5783650823c238cf636750ece46/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"69a36677eac29a553e992717a827430888a800a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/69a36677eac29a553e992717a827430888a800a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/69a36677eac29a553e992717a827430888a800a2"}],"stats":{"total":82,"additions":35,"deletions":47},"files":[{"sha":"70d2930942eaa43f783c438997e36b21b7c19bc7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusUtils.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.lib.to.ConnObject;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.ExecStatus;\n+import org.apache.syncope.common.lib.types.StatusRType;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -90,9 +91,8 @@ public static String getConnObjectLink(final ConnObject connObject) {\n                 orElse(null);\n     }\n \n-    public static StatusR.Builder statusR(final Collection<StatusBean> statuses) {\n-        StatusR.Builder builder = new StatusR.Builder();\n-        builder.onSyncope(false);\n+    public static StatusR statusR(final String key, final StatusRType type, final Collection<StatusBean> statuses) {\n+        StatusR.Builder builder = new StatusR.Builder(key, type).onSyncope(false);\n         statuses.forEach(status -> {\n             if (Constants.SYNCOPE.equalsIgnoreCase(status.getResource())) {\n                 builder.onSyncope(true);\n@@ -101,7 +101,7 @@ public static StatusR.Builder statusR(final Collection<StatusBean> statuses) {\n             }\n         });\n \n-        return builder;\n+        return builder.build();\n     }\n \n     public static Panel getStatusImagePanel(final String componentId, final Status status) {"},{"sha":"21c8a0bd803e4d700c4da41b190670e9eb37694d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchContent.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -241,9 +241,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     items.forEach(item -> {\n                                         UserTO user = (UserTO) item;\n \n-                                        StatusR req = new StatusR.Builder().\n-                                                key(user.getKey()).\n-                                                type(StatusRType.SUSPEND).\n+                                        StatusR req = new StatusR.Builder(user.getKey(), StatusRType.SUSPEND).\n                                                 onSyncope(true).\n                                                 resources(user.getResources()).\n                                                 build();\n@@ -256,9 +254,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     items.forEach(item -> {\n                                         UserTO user = (UserTO) item;\n \n-                                        StatusR req = new StatusR.Builder().\n-                                                key(user.getKey()).\n-                                                type(StatusRType.REACTIVATE).\n+                                        StatusR req = new StatusR.Builder(user.getKey(), StatusRType.REACTIVATE).\n                                                 onSyncope(true).\n                                                 resources(user.getResources()).\n                                                 build();"},{"sha":"d6c0ee757c669176c07380741e5fb21909efbbb0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n+import org.apache.syncope.common.lib.types.StatusRType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.batch.BatchPayloadParser;\n import org.apache.syncope.common.rest.api.batch.BatchRequestItem;\n@@ -92,7 +93,7 @@ public Map<String, String> associate(\n                 client.accept(RESTHeaders.MULTIPART_MIXED);\n             }\n \n-            StatusR statusR = StatusUtils.statusR(statuses).build();\n+            StatusR statusR = StatusUtils.statusR(key, StatusRType.ACTIVATE, statuses);\n \n             ResourceAR resourceAR = new ResourceAR.Builder().key(key).\n                     action(action).\n@@ -131,7 +132,7 @@ public Map<String, String> deassociate(\n \n             ResourceDR resourceDR = new ResourceDR.Builder().key(key).\n                     action(action).\n-                    resources(StatusUtils.statusR(statuses).build().getResources()).build();\n+                    resources(StatusUtils.statusR(key, StatusRType.ACTIVATE, statuses).getResources()).build();\n             try {\n                 List<BatchResponseItem> items = parseBatchResponse(service.deassociate(resourceDR));\n                 for (int i = 0; i < items.size(); i++) {"},{"sha":"efadb65428a939b4f00df556f910756997d4f7f6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -95,7 +95,7 @@ public ProvisioningResult<UserTO> mustChangePassword(final String etag, final bo\n     private Map<String, String> status(\n             final StatusRType type, final String etag, final String userKey, final List<StatusBean> statuses) {\n \n-        StatusR statusR = StatusUtils.statusR(statuses).key(userKey).type(type).build();\n+        StatusR statusR = StatusUtils.statusR(userKey, type, statuses);\n \n         Map<String, String> results;\n         synchronized (this) {"},{"sha":"366e4de10ee20c9d0d89c52311c430a94b9036f5","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/StatusR.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FStatusR.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -30,6 +30,11 @@ public class StatusR extends PasswordPatch {\n \n     public static class Builder extends PasswordPatch.Builder {\n \n+        public Builder(final String key, final StatusRType type) {\n+            getInstance().setKey(key);\n+            getInstance().setType(type);\n+        }\n+\n         @Override\n         protected StatusR newInstance() {\n             return new StatusR();\n@@ -65,16 +70,6 @@ public Builder resources(final String... resources) {\n             return (Builder) super.resources(resources);\n         }\n \n-        public Builder key(final String key) {\n-            getInstance().setKey(key);\n-            return this;\n-        }\n-\n-        public Builder type(final StatusRType type) {\n-            getInstance().setType(type);\n-            return this;\n-        }\n-\n         public Builder token(final String token) {\n             getInstance().setToken(token);\n             return this;"},{"sha":"10925739365312e2f2638ecb404e5df81110bfd7","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -776,8 +776,9 @@ public Pair<UserUR, StatusR> toUserUpdate(final UserTO before, final SCIMPatchOp\n             SCIMUser after = (SCIMUser) op.getValue().get(0);\n \n             if (after.getActive() != null && before.isSuspended() == after.isActive()) {\n-                statusR = new StatusR.Builder().key(before.getKey()).\n-                        type(after.isActive() ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n+                statusR = new StatusR.Builder(\n+                        before.getKey(),\n+                        after.isActive() ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n                         build();\n             }\n \n@@ -814,8 +815,9 @@ public Pair<UserUR, StatusR> toUserUpdate(final UserTO before, final SCIMPatchOp\n \n             case \"active\":\n                 if (!CollectionUtils.isEmpty(op.getValue())) {\n-                    statusR = new StatusR.Builder().key(before.getKey()).\n-                            type((boolean) op.getValue().get(0) ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n+                    statusR = new StatusR.Builder(\n+                            before.getKey(),\n+                            (boolean) op.getValue().get(0) ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n                             build();\n                 }\n                 break;"},{"sha":"8694b99b8e4dde394e0622bcdbbf086482b73d48","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/SCIMUserServiceImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FSCIMUserServiceImpl.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -123,8 +123,9 @@ public Response replace(final String id, final SCIMUser user) {\n                 AnyOperations.diff(binder.toUserTO(user, true), before, false), false);\n \n         if (before.isSuspended() == user.isActive()) {\n-            StatusR statusR = new StatusR.Builder().key(before.getKey()).\n-                    type(user.isActive() ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n+            StatusR statusR = new StatusR.Builder(\n+                    before.getKey(),\n+                    user.isActive() ? StatusRType.REACTIVATE : StatusRType.SUSPEND).\n                     build();\n             userLogic.status(statusR, false);\n         }"},{"sha":"60b9dba7b96f5619f3d640fda5d3e57ffb8dfe8c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -397,8 +397,7 @@ public void checkUserSuspension() {\n             assertNotNull(e);\n         }\n \n-        StatusR reactivate = new StatusR.Builder().key(userTO.getKey()).\n-                type(StatusRType.REACTIVATE).build();\n+        StatusR reactivate = new StatusR.Builder(userTO.getKey(), StatusRType.REACTIVATE).build();\n         userTO = USER_SERVICE.status(reactivate).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);"},{"sha":"b84ec672d101d6c8a76910dce491ea906dbdc684","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":8,"deletions":13,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -729,8 +729,7 @@ public void createActivate() {\n \n         assertEquals(\"created\", userTO.getStatus());\n \n-        StatusR statusR = new StatusR.Builder().key(userTO.getKey()).\n-                type(StatusRType.ACTIVATE).token(userTO.getToken()).build();\n+        StatusR statusR = new StatusR.Builder(userTO.getKey(), StatusRType.ACTIVATE).token(userTO.getToken()).build();\n \n         userTO = USER_SERVICE.status(statusR).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n@@ -754,15 +753,14 @@ public void suspendReactivate() {\n                 ? \"active\"\n                 : \"created\", userTO.getStatus());\n \n-        StatusR statusR = new StatusR.Builder().key(userTO.getKey()).\n-                type(StatusRType.SUSPEND).token(userTO.getToken()).build();\n+        StatusR statusR = new StatusR.Builder(userTO.getKey(), StatusRType.SUSPEND).token(userTO.getToken()).build();\n \n         userTO = USER_SERVICE.status(statusR).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        statusR = new StatusR.Builder().key(userTO.getKey()).type(StatusRType.REACTIVATE).build();\n+        statusR = new StatusR.Builder(userTO.getKey(), StatusRType.REACTIVATE).build();\n \n         userTO = USER_SERVICE.status(statusR).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n@@ -792,8 +790,7 @@ public void suspendReactivateOnResource() {\n         String userKey = userTO.getKey();\n \n         // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources\n-        StatusR statusR = new StatusR.Builder().key(userKey).\n-                type(StatusRType.SUSPEND).\n+        StatusR statusR = new StatusR.Builder(userKey, StatusRType.SUSPEND).\n                 onSyncope(true).\n                 resources(RESOURCE_NAME_TESTDB, RESOURCE_NAME_LDAP).\n                 build();\n@@ -810,8 +807,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n-        statusR = new StatusR.Builder().key(userKey).\n-                type(StatusRType.SUSPEND).\n+        statusR = new StatusR.Builder(userKey, StatusRType.SUSPEND).\n                 onSyncope(false).\n                 resources(RESOURCE_NAME_LDAP).\n                 build();\n@@ -826,8 +822,7 @@ public void suspendReactivateOnResource() {\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n-        statusR = new StatusR.Builder().key(userKey).\n-                type(StatusRType.REACTIVATE).\n+        statusR = new StatusR.Builder(userKey, StatusRType.REACTIVATE).\n                 onSyncope(true).\n                 resources(RESOURCE_NAME_TESTDB).\n                 build();\n@@ -1040,7 +1035,7 @@ public void batch() throws IOException {\n         BatchRequest batchRequest = ADMIN_CLIENT.batch();\n \n         UserService batchUserService = batchRequest.getService(UserService.class);\n-        users.forEach(user -> batchUserService.status(new StatusR.Builder().key(user).type(StatusRType.SUSPEND).\n+        users.forEach(user -> batchUserService.status(new StatusR.Builder(user, StatusRType.SUSPEND).\n                 onSyncope(true).\n                 build()));\n         List<BatchResponseItem> batchResponseItems = parseBatchResponse(batchRequest.commit().getResponse());\n@@ -1051,7 +1046,7 @@ public void batch() throws IOException {\n         assertEquals(\"suspended\", USER_SERVICE.read(users.get(3)).getStatus());\n \n         UserService batchUserService2 = batchRequest.getService(UserService.class);\n-        users.forEach(user -> batchUserService2.status(new StatusR.Builder().key(user).type(StatusRType.REACTIVATE).\n+        users.forEach(user -> batchUserService2.status(new StatusR.Builder(user, StatusRType.REACTIVATE).\n                 onSyncope(true).\n                 build()));\n         batchResponseItems = parseBatchResponse(batchRequest.commit().getResponse());"},{"sha":"1222d153356cd1e472faae5d909495a2784c1743","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/40ceab8b1abab5783650823c238cf636750ece46/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=40ceab8b1abab5783650823c238cf636750ece46","patch":"@@ -158,16 +158,15 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         // suspend/reactivate user and check virtual attribute value (unchanged)\n         // ----------------------------------\n-        StatusR statusR = new StatusR.Builder().key(userTO.getKey()).type(StatusRType.SUSPEND).build();\n+        StatusR statusR = new StatusR.Builder(userTO.getKey(), StatusRType.SUSPEND).build();\n         userTO = USER_SERVICE.status(statusR).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = RESOURCE_SERVICE.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").get().getValues().get(0));\n \n-        statusR = new StatusR.Builder().key(userTO.getKey()).\n-                type(StatusRType.REACTIVATE).build();\n+        statusR = new StatusR.Builder(userTO.getKey(), StatusRType.REACTIVATE).build();\n         userTO = USER_SERVICE.status(statusR).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertEquals(\"active\", userTO.getStatus());"}]}