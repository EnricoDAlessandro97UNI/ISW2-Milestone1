{"sha":"b7f9a4b864f0e093618f1791de5b626db5e6a3cf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI3ZjlhNGI4NjRmMGUwOTM2MThmMTc5MWRlNWI2MjZkYjVlNmEzY2Y=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-11-22T09:17:27Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-11-22T09:18:03Z"},"message":"[SYNCOPE-1397] Now plain attributes are shown in approval, removed unwanted changed flags on empty attributes","tree":{"sha":"fe18b8133288101a27c2006cf27f723b354a8d4c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe18b8133288101a27c2006cf27f723b354a8d4c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b7f9a4b864f0e093618f1791de5b626db5e6a3cf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b7f9a4b864f0e093618f1791de5b626db5e6a3cf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b7f9a4b864f0e093618f1791de5b626db5e6a3cf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b7f9a4b864f0e093618f1791de5b626db5e6a3cf/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"570552fa868a66ab5d33ea402fed09cb1d14013c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/570552fa868a66ab5d33ea402fed09cb1d14013c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/570552fa868a66ab5d33ea402fed09cb1d14013c"}],"stats":{"total":20,"additions":13,"deletions":7},"files":[{"sha":"fb9c7c62eeaa34de54082ec74b016f9a1a3be6ce","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b7f9a4b864f0e093618f1791de5b626db5e6a3cf/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b7f9a4b864f0e093618f1791de5b626db5e6a3cf/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=b7f9a4b864f0e093618f1791de5b626db5e6a3cf","patch":"@@ -23,6 +23,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -409,20 +410,25 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                         ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n                     }\n                     item.add(panel);\n+                    Optional<AttrTO> previousPlainAttr = previousObject.getPlainAttr(attrTO.getSchema());\n \n                     if (previousObject != null\n-                            && (previousObject.getPlainAttr(attrTO.getSchema()) == null\n-                            || !ListUtils.isEqualList(\n-                                    ListUtils.select(previousObject.getPlainAttr(attrTO.getSchema()).get().getValues(),\n-                                            object -> StringUtils.isNotEmpty(object)),\n-                                    ListUtils.select(attrTO.getValues(), object -> StringUtils.isNotEmpty(object))))) {\n+                            && ((!previousPlainAttr.isPresent() && !isEmptyOrBlank(attrTO.getValues()))\n+                            || (previousPlainAttr.isPresent() && !ListUtils.isEqualList(\n+                            ListUtils.select(previousPlainAttr.get().getValues(),\n+                                    object -> StringUtils.isNotEmpty(object)),\n+                            ListUtils.select(attrTO.getValues(), object -> StringUtils.isNotEmpty(object)))))) {\n \n-                        List<String> oldValues = previousObject.getPlainAttr(attrTO.getSchema()) == null\n+                        List<String> oldValues = !previousPlainAttr.isPresent()\n                                 ? Collections.<String>emptyList()\n-                                : previousObject.getPlainAttr(attrTO.getSchema()).get().getValues();\n+                                : previousPlainAttr.get().getValues();\n                         panel.showExternAction(new LabelInfo(\"externalAction\", oldValues));\n                     }\n                 }\n+\n+                protected boolean isEmptyOrBlank(final List<String> values) {\n+                    return values.stream().allMatch(value -> StringUtils.isBlank(value));\n+                }\n             });\n         }\n     }"}]}