{"sha":"299db471b024ad54cadade8ce1db0a01b7d46dc3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI5OWRiNDcxYjAyNGFkNTRjYWRhZGU4Y2UxZGIwYTAxYjdkNDZkYzM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-06T12:29:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-06T15:50:39Z"},"message":"Safely remove unused API method","tree":{"sha":"216d0d88bb52a13f20d41c1df2ccda60b0f2dec6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/216d0d88bb52a13f20d41c1df2ccda60b0f2dec6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/299db471b024ad54cadade8ce1db0a01b7d46dc3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/299db471b024ad54cadade8ce1db0a01b7d46dc3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/299db471b024ad54cadade8ce1db0a01b7d46dc3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/299db471b024ad54cadade8ce1db0a01b7d46dc3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb6f0cfbef6144bf091d0a9c05e03b9680c260d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb6f0cfbef6144bf091d0a9c05e03b9680c260d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cb6f0cfbef6144bf091d0a9c05e03b9680c260d9"}],"stats":{"total":18,"additions":0,"deletions":18},"files":[{"sha":"18508ac1aa359f2fa84f1b7d8f10bfec7b1abdf9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnySearchDAO.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/299db471b024ad54cadade8ce1db0a01b7d46dc3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/299db471b024ad54cadade8ce1db0a01b7d46dc3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java?ref=299db471b024ad54cadade8ce1db0a01b7d46dc3","patch":"@@ -35,14 +35,6 @@ public interface AnySearchDAO extends DAO<Any<?>> {\n      */\n     int count(Set<String> adminRealms, SearchCond searchCondition, AnyTypeKind kind);\n \n-    /**\n-     * @param realmFullPath for use with {@link org.apache.syncope.core.persistence.api.dao.search.AssignableCond}\n-     * @param kind any object\n-     * @param <T> any\n-     * @return the list of any objects matching the given search condition\n-     */\n-    <T extends Any<?>> List<T> searchAssignable(String realmFullPath, AnyTypeKind kind);\n-\n     /**\n      * @param searchCondition the search condition\n      * @param kind any object"},{"sha":"6faeeab929d17e96ec8f05825b2591058eb0cf29","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnySearchDAO.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/299db471b024ad54cadade8ce1db0a01b7d46dc3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/299db471b024ad54cadade8ce1db0a01b7d46dc3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java?ref=299db471b024ad54cadade8ce1db0a01b7d46dc3","patch":"@@ -63,8 +63,6 @@\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Propagation;\n-import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.ReflectionUtils;\n \n public abstract class AbstractAnySearchDAO extends AbstractDAO<Any<?>> implements AnySearchDAO {\n@@ -90,14 +88,6 @@ public abstract class AbstractAnySearchDAO extends AbstractDAO<Any<?>> implement\n     @Autowired\n     protected AnyUtilsFactory anyUtilsFactory;\n \n-    @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n-    @Override\n-    public <T extends Any<?>> List<T> searchAssignable(final String realmFullPath, final AnyTypeKind kind) {\n-        AssignableCond assignableCond = new AssignableCond();\n-        assignableCond.setRealmFullPath(realmFullPath);\n-        return search(SearchCond.getLeafCond(assignableCond), kind);\n-    }\n-\n     protected SearchCond buildEffectiveCond(final SearchCond cond, final Set<String> dynRealmKeys) {\n         List<SearchCond> effectiveConds = dynRealmKeys.stream().map(dynRealmKey -> {\n             DynRealmCond dynRealmCond = new DynRealmCond();"}]}