{"sha":"6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhOTM4NjBkOGRlYWI0YTJjMWU1Y2YyYzhlNzVlNjRjOGM1ZWIyN2Q=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-31T08:19:54Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-31T08:19:54Z"},"message":"[SYNCOPE-156] provides material button for types by changing to be compliant to the standard use of search tables + fixes some notifications & icons","tree":{"sha":"f90c420cdd831eb011fedf5d91ddf7e7abdfa3a8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f90c420cdd831eb011fedf5d91ddf7e7abdfa3a8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5990330f193fd7e0777b37ea5128b939e9000a8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5990330f193fd7e0777b37ea5128b939e9000a8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5990330f193fd7e0777b37ea5128b939e9000a8"}],"stats":{"total":2011,"additions":1074,"deletions":937},"files":[{"sha":"20c71b7946dc6dc1fa8ec84f36242e09e6a92b2a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractStatusModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,16 +18,17 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.panel.Fragment;\n \n-public class AbstractStatusModalPage extends AbstractModalPanel {\n+public class AbstractStatusModalPage<T extends Serializable> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = 6633408683036028540L;\n \n-    public AbstractStatusModalPage(final BaseModal<?> modal, final PageReference pageRef) {\n+    public AbstractStatusModalPage(final BaseModal<T> modal, final PageReference pageRef) {\n         super(modal, pageRef);\n         add(new Fragment(\"pwdMgtFields\", \"emptyFragment\", this));\n     }"},{"sha":"ec43ddc22a5c6d4da4aac93972ce759c2fc55455","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AnyDisplayAttributesModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -30,8 +31,7 @@\n  *\n  * @param <T> anyTO\n  */\n-@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-public class AnyDisplayAttributesModalPage<T extends AnyTO> extends DisplayAttributesModalPage {\n+public class AnyDisplayAttributesModalPage<T extends Serializable> extends DisplayAttributesModalPage<T> {\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n@@ -40,7 +40,7 @@\n     private final String type;\n \n     public AnyDisplayAttributesModalPage(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames,\n@@ -66,7 +66,7 @@ public String getPrefDerivedAttributeView() {\n     }\n \n     @Override\n-    public Class getTOClass() {\n+    public Class<? extends AnyTO> getTOClass() {\n         return AnyObjectTO.class;\n     }\n }"},{"sha":"da5aac2a3ae7aa3653b123563dd46c253a537bd0","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -45,12 +45,12 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.beans.BeanUtils;\n \n-public class BulkActionModalPage<T, S> extends AbstractModalPanel {\n+public class BulkActionModalPage<T extends Serializable, S> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = 4114026480146090962L;\n \n     public BulkActionModalPage(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,\n@@ -88,8 +88,7 @@ public IModel<T> model(final T object) {\n                 Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n \n         @SuppressWarnings(\"rawtypes\")\n-        final ActionLinksPanel<Serializable> actionPanel =\n-                ActionLinksPanel.builder(pageRef).build(\"actions\");\n+        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n         add(actionPanel);\n \n         for (ActionLink.ActionType action : actions) {"},{"sha":"aa6a63e33af3fd16f1f775764421681d17ca475c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Iterator;\n@@ -39,15 +40,14 @@\n /**\n  * Show user or group status after performing a successful operation.\n  *\n- * @param <T> type of the object that will be rendered in columns\n- * @param <S> type of the sorting parameter\n+ * @param <E> type of the inner model object\n  */\n-public class BulkActionResultModalPage<T, S> extends AbstractModalPanel {\n+public class BulkActionResultModalPage<E extends Serializable> extends AbstractModalPanel<E> {\n \n     private static final long serialVersionUID = 2646115294319713724L;\n \n-    public BulkActionResultModalPage(\n-            final BaseModal<?> modal,\n+    public <T extends Serializable, S> BulkActionResultModalPage(\n+            final BaseModal<E> modal,\n             final PageReference pageRef,\n             final Collection<T> items,\n             final List<IColumn<T, S>> columns,"},{"sha":"a1ea8b9a744133ff59d02ac379f7fe2f376bddf1","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -49,8 +50,7 @@\n  *\n  * @param <T> anyTO\n  */\n-@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-public abstract class DisplayAttributesModalPage<T extends AnyTO> extends AbstractModalPanel {\n+public abstract class DisplayAttributesModalPage<T extends Serializable> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = -4274117450918385110L;\n \n@@ -105,16 +105,17 @@ protected List<String> load() {\n             }\n         };\n \n-        final Form form = new Form(FORM);\n-        form.setModel(new CompoundPropertyModel(this));\n+        final Form<DisplayAttributesModalPage<T>> form = new Form<>(FORM);\n+        form.setModel(new CompoundPropertyModel<>(this));\n \n         selectedDetails = prefMan.getList(getRequest(), getPrefDetailView());\n \n         selectedPlainSchemas = prefMan.getList(getRequest(), getPrefAttributeView());\n \n         selectedDerSchemas = prefMan.getList(getRequest(), getPrefDerivedAttributeView());\n \n-        final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n+        final CheckGroup<String> dgroup\n+                = new CheckGroup<>(\"dCheckGroup\", new PropertyModel<List<String>>(this, \"selectedDetails\"));\n         form.add(dgroup);\n \n         final ListView<String> details = new ListView<String>(\"details\", fnames) {\n@@ -123,7 +124,7 @@ protected List<String> load() {\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n-                item.add(new Check(\"dcheck\", item.getModel()));\n+                item.add(new Check<>(\"dcheck\", item.getModel()));\n                 item.add(new Label(\"dname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n             }\n         };\n@@ -138,7 +139,8 @@ protected void populateItem(final ListItem<String> item) {\n             final Fragment fragment = new Fragment(\"plainSchemas\", \"sfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup sgroup = new CheckGroup(\"psCheckGroup\", new PropertyModel(this, \"selectedPlainSchemas\"));\n+            final CheckGroup<String> sgroup\n+                    = new CheckGroup<>(\"psCheckGroup\", new PropertyModel<List<String>>(this, \"selectedPlainSchemas\"));\n             fragment.add(sgroup);\n \n             final ListView<String> schemas = new ListView<String>(\"plainSchemas\", names) {\n@@ -147,7 +149,7 @@ protected void populateItem(final ListItem<String> item) {\n \n                 @Override\n                 protected void populateItem(final ListItem<String> item) {\n-                    item.add(new Check(\"scheck\", item.getModel()));\n+                    item.add(new Check<>(\"scheck\", item.getModel()));\n                     item.add(new Label(\"sname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n                 }\n             };\n@@ -163,7 +165,8 @@ protected void populateItem(final ListItem<String> item) {\n             final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n+            final CheckGroup<String> dsgroup\n+                    = new CheckGroup<>(\"dsCheckGroup\", new PropertyModel<List<String>>(this, \"selectedDerSchemas\"));\n             fragment.add(dsgroup);\n \n             final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n@@ -172,7 +175,7 @@ protected void populateItem(final ListItem<String> item) {\n \n                 @Override\n                 protected void populateItem(final ListItem<String> item) {\n-                    item.add(new Check(\"dscheck\", item.getModel()));\n+                    item.add(new Check<>(\"dscheck\", item.getModel()));\n                     item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n                 }\n             };\n@@ -237,6 +240,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n     public abstract String getPrefDerivedAttributeView();\n \n-    public abstract Class getTOClass();\n+    public abstract Class<? extends AnyTO> getTOClass();\n \n }"},{"sha":"6167c997bae6966e7703fffb238bf73fa22e77cf","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupDisplayAttributesModalPage.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,24 +18,27 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.wicket.PageReference;\n \n /**\n  * Modal window with Display group attributes form.\n+ *\n+ * @param <T>\n  */\n-@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-public class GroupDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+public class GroupDisplayAttributesModalPage<T extends Serializable> extends DisplayAttributesModalPage<T> {\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n     public static final String[] GROUP_DEFAULT_SELECTION = { \"key\", \"name\" };\n \n     public GroupDisplayAttributesModalPage(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {\n@@ -58,7 +61,7 @@ public String getPrefDerivedAttributeView() {\n     }\n \n     @Override\n-    public Class getTOClass() {\n+    public Class<? extends AnyTO> getTOClass() {\n         return GroupTO.class;\n     }\n }"},{"sha":"25a2064602331e7deddd891b957450d0c992a25f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -73,7 +73,6 @@ public Realms(final PageParameters parameters) {\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(realmSidebarPanel.reloadRealmTree());\n                 target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n-\n                 modal.show(false);\n             }\n         });\n@@ -148,12 +147,13 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     realmRestClient.delete(realmTO.getFullPath());\n                     target.add(realmSidebarPanel.reloadRealmTree());\n                     target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    // Excape line breaks\n+                    getSession().error(getString(Constants.ERROR) + \": \" + e.getMessage().replace(\"\\n\", \" \"));\n                 }\n-                BasePage.class.cast(getPage()).getNotificationPanel().refresh(target);\n+                getNotificationPanel().refresh(target);\n             }\n         });\n         return content;"},{"sha":"950794127d6113bf026bea0453d2c4d804a8157e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResultStatusModal.java","status":"modified","additions":83,"deletions":85,"changes":168,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FResultStatusModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -64,7 +64,7 @@\n  *\n  * @param <T> anyTO\n  */\n-public final class ResultStatusModal<T extends AnyTO> extends AbstractModalPanel {\n+public final class ResultStatusModal<T extends AnyTO> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = 2646115294319713723L;\n \n@@ -157,87 +157,87 @@ private ResultStatusModal(\n             final ListView<PropagationStatus> propRes = new ListView<PropagationStatus>(\"resources\",\n                     propagations) {\n \n-                        private static final long serialVersionUID = -1020475259727720708L;\n+                private static final long serialVersionUID = -1020475259727720708L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<PropagationStatus> item) {\n+                    final PropagationStatus propTO = (PropagationStatus) item.getDefaultModelObject();\n+\n+                    final ListView<String> attributes = getConnObjectView(propTO);\n+\n+                    final Fragment attrhead;\n+                    if (attributes.getModelObject() == null || attributes.getModelObject().isEmpty()) {\n+                        attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", this);\n+                    } else {\n+                        attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", this);\n+                    }\n+\n+                    item.add(attrhead);\n+                    item.add(attributes);\n+\n+                    attrhead.add(new Label(\"resource\", propTO.getResource()));\n+\n+                    attrhead.add(new Label(\"propagation\", propTO.getStatus() == null\n+                            ? \"UNDEFINED\" : propTO.getStatus().toString()));\n+\n+                    final Image image;\n+                    final String alt, title;\n+\n+                    final BaseModal<T> failureWindow = new BaseModal<>(\"failureWindow\");\n+\n+                    final AjaxLink<?> failureWindowLink = new AjaxLink<Void>(\"showFailureWindow\") {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n \n                         @Override\n-                        protected void populateItem(final ListItem<PropagationStatus> item) {\n-                            final PropagationStatus propTO = (PropagationStatus) item.getDefaultModelObject();\n-\n-                            final ListView<String> attributes = getConnObjectView(propTO);\n-\n-                            final Fragment attrhead;\n-                            if (attributes.getModelObject() == null || attributes.getModelObject().isEmpty()) {\n-                                attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", this);\n-                            } else {\n-                                attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", this);\n-                            }\n-\n-                            item.add(attrhead);\n-                            item.add(attributes);\n-\n-                            attrhead.add(new Label(\"resource\", propTO.getResource()));\n-\n-                            attrhead.add(new Label(\"propagation\", propTO.getStatus() == null\n-                                                    ? \"UNDEFINED\" : propTO.getStatus().toString()));\n-\n-                            final Image image;\n-                            final String alt, title;\n-\n-                            final BaseModal<?> failureWindow = new BaseModal<>(\"failureWindow\");\n-\n-                            final AjaxLink<?> failureWindowLink = new AjaxLink<Void>(\"showFailureWindow\") {\n-\n-                                private static final long serialVersionUID = -7978723352517770644L;\n-\n-                                @Override\n-                                public void onClick(final AjaxRequestTarget target) {\n-                                    failureWindow.show(target);\n-                                }\n-                            };\n-\n-                            switch (propTO.getStatus()) {\n-\n-                                case SUCCESS:\n-                                case CREATED:\n-                                    image = new Image(\"icon\",\n-                                            new ContextRelativeResource(IMG_PREFIX + Status.ACTIVE.toString()\n-                                                    + Constants.PNG_EXT));\n-                                    alt = \"success icon\";\n-                                    title = \"success\";\n-                                    failureWindow.setVisible(false);\n-                                    failureWindowLink.setEnabled(false);\n-                                    break;\n-\n-                                default:\n-                                    image = new Image(\"icon\",\n-                                            new ContextRelativeResource(IMG_PREFIX + Status.SUSPENDED.toString()\n-                                                    + Constants.PNG_EXT));\n-                                    alt = \"failure icon\";\n-                                    title = \"failure\";\n-                            }\n-\n-                            image.add(new Behavior() {\n-\n-                                private static final long serialVersionUID = 1469628524240283489L;\n-\n-                                @Override\n-                                public void onComponentTag(final Component component, final ComponentTag tag) {\n-                                    tag.put(\"alt\", alt);\n-                                    tag.put(\"title\", title);\n-                                }\n-                            });\n-                            final FailureMessageModal executionFailureMessagePage;\n-                            if (propTO.getFailureReason() == null) {\n-                                executionFailureMessagePage = new FailureMessageModal(\n-                                        modal, pageRef, StringUtils.EMPTY);\n-                            } else {\n-                                executionFailureMessagePage = new FailureMessageModal(\n-                                        modal, pageRef, propTO.getFailureReason());\n-                            }\n-\n-                            failureWindow.setContent(executionFailureMessagePage);\n+                        public void onClick(final AjaxRequestTarget target) {\n+                            failureWindow.show(target);\n                         }\n                     };\n+\n+                    switch (propTO.getStatus()) {\n+\n+                        case SUCCESS:\n+                        case CREATED:\n+                            image = new Image(\"icon\",\n+                                    new ContextRelativeResource(IMG_PREFIX + Status.ACTIVE.toString()\n+                                            + Constants.PNG_EXT));\n+                            alt = \"success icon\";\n+                            title = \"success\";\n+                            failureWindow.setVisible(false);\n+                            failureWindowLink.setEnabled(false);\n+                            break;\n+\n+                        default:\n+                            image = new Image(\"icon\",\n+                                    new ContextRelativeResource(IMG_PREFIX + Status.SUSPENDED.toString()\n+                                            + Constants.PNG_EXT));\n+                            alt = \"failure icon\";\n+                            title = \"failure\";\n+                    }\n+\n+                    image.add(new Behavior() {\n+\n+                        private static final long serialVersionUID = 1469628524240283489L;\n+\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            tag.put(\"alt\", alt);\n+                            tag.put(\"title\", title);\n+                        }\n+                    });\n+                    final FailureMessageModal<T> executionFailureMessagePage;\n+                    if (propTO.getFailureReason() == null) {\n+                        executionFailureMessagePage = new FailureMessageModal<>(\n+                                modal, pageRef, StringUtils.EMPTY);\n+                    } else {\n+                        executionFailureMessagePage = new FailureMessageModal<>(\n+                                modal, pageRef, propTO.getFailureReason());\n+                    }\n+\n+                    failureWindow.setContent(executionFailureMessagePage);\n+                }\n+            };\n             fragment.add(propRes);\n         }\n \n@@ -343,14 +343,12 @@ private Fragment getLabelValue(final String id, final String attrName, final Map\n \n         if (attr == null || attr.getValues() == null || attr.getValues().isEmpty()) {\n             value = \"\";\n+        } else if (ConnIdSpecialAttributeName.PASSWORD.equals(attrName)) {\n+            value = \"********\";\n         } else {\n-            if (ConnIdSpecialAttributeName.PASSWORD.equals(attrName)) {\n-                value = \"********\";\n-            } else {\n-                value = attr.getValues().size() > 1\n-                        ? attr.getValues().toString()\n-                        : attr.getValues().get(0);\n-            }\n+            value = attr.getValues().size() > 1\n+                    ? attr.getValues().toString()\n+                    : attr.getValues().get(0);\n         }\n \n         Component label = new Label(\"value\", value.length() > 50 ? value.substring(0, 50) + \"...\" : value)."},{"sha":"8f7e7f1cabd8c4dd181ef51c77a1b171283c51c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,20 +18,12 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import org.apache.syncope.client.console.panels.RoleSearchResultPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.role.RoleHandler;\n import org.apache.syncope.client.console.wizards.role.RoleWizardBuilder;\n import org.apache.syncope.common.lib.to.RoleTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;\n@@ -54,21 +46,8 @@ public Roles(final PageParameters parameters) {\n \n             private static final long serialVersionUID = -5960765294082359003L;\n \n-        }.addNewItemPanelBuilder(new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), false).\n-                build(\"roles\");\n-\n-        final AjaxLink<RoleTO> createLink = new AjaxLink<RoleTO>(\"add\") {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                send(roleSearchResultPanel, Broadcast.EXACT, new AjaxWizard.NewItemActionEvent<RoleTO>(null, target));\n-            }\n-        };\n-\n-        content.add(createLink);\n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, StandardEntitlement.ROLE_CREATE);\n+        }.addNewItemPanelBuilder(new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), true)\n+                .build(\"roles\");\n \n         content.add(roleSearchResultPanel);\n     }"},{"sha":"83686bcc9890335b430d8cbaf6ecfd4c6479878a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestions.java","status":"modified","additions":1,"deletions":32,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,21 +18,13 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.panels.SecurityQuestionModalPanel;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class SecurityQuestions extends BasePage {\n@@ -55,30 +47,7 @@ public SecurityQuestions(final PageParameters parameters) {\n         addWindowWindowClosedCallback(securityQuestionModal);\n         add(securityQuestionModal);\n \n-        final AjaxLink<Void> createLink = new IndicatingAjaxLink<Void>(\"createSecurityQuestion\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                securityQuestionModal.header(new ResourceModel(\"createSecurityQuestion\"));\n-                securityQuestionModal.setFormModel(new SecurityQuestionTO());\n-                securityQuestionModal.size(Modal.Size.Large);\n-                target.add(securityQuestionModal.setContent(\n-                        new SecurityQuestionModalPanel(securityQuestionModal, getPageReference(), true)));\n-                securityQuestionModal.addSumbitButton();\n-                securityQuestionModal.show(true);\n-            }\n-        };\n-        content.add(createLink);\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.SECURITY_QUESTION_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    createLink, ENABLE, StandardEntitlement.SECURITY_QUESTION_CREATE);\n-        }\n-\n-        securityQuestionsPanel = new SecurityQuestionsPanel(\n-                \"securityQuestionPanel\", getPageReference(), securityQuestionModal);\n+        securityQuestionsPanel = new SecurityQuestionsPanel(\"securityQuestionPanel\", getPageReference());\n         securityQuestionsPanel.setOutputMarkupId(true);\n \n         content.add(securityQuestionsPanel);"},{"sha":"5718dab28dd9ce3f9e484215ef4114cf4852ab09","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModal.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -64,7 +64,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class StatusModal<T extends AnyTO> extends AbstractStatusModalPage {\n+public class StatusModal<T extends Serializable> extends AbstractStatusModalPage<T> {\n \n     private static final long serialVersionUID = -9148734710505211261L;\n \n@@ -103,15 +103,15 @@\n     private final List<IColumn<StatusBean, String>> columns;\n \n     public StatusModal(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n-            final AnyTO attributableTO) {\n+            final AnyTO anyTO) {\n \n-        this(modal, pageRef, attributableTO, false);\n+        this(modal, pageRef, anyTO, false);\n     }\n \n     public StatusModal(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final AnyTO anyTO,\n             final boolean statusOnly) {\n@@ -547,8 +547,8 @@ private void passwordManagement(\n             final ResourceAssociationAction type,\n             final Collection<StatusBean> selection) {\n \n-        final IndicatingAjaxButton goon =\n-                new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\")) {\n+        final IndicatingAjaxButton goon\n+                = new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\")) {\n \n             private static final long serialVersionUID = -2341391430136818027L;\n "},{"sha":"4869a98dc7fc172cfe9e2af99966d5ceba938d72","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"modified","additions":3,"deletions":106,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,39 +18,24 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.panels.AnyTypeClassModalPanel;\n import org.apache.syncope.client.console.panels.AnyTypeClassesPanel;\n-import org.apache.syncope.client.console.panels.AnyTypeModalPanel;\n import org.apache.syncope.client.console.panels.AnyTypePanel;\n-import org.apache.syncope.client.console.panels.ModalPanel;\n-import org.apache.syncope.client.console.panels.RelationshipTypeModalPanel;\n import org.apache.syncope.client.console.panels.RelationshipTypePanel;\n import org.apache.syncope.client.console.panels.SchemasPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.syncope.client.console.panels.SchemaModalPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n public class Types extends BasePage {\n@@ -61,77 +46,33 @@ public class Types extends BasePage {\n \n     private final BaseModal<AnyTypeClassTO> anyTypeClassModal;\n \n-    private final BaseModal<AnyTypeTO> anyTypeModal;\n-\n-    private final BaseModal<RelationshipTypeTO> relationshipTypeModal;\n-\n     private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n \n     private enum Type {\n         SCHEMA,\n         ANYTYPECLASS,\n         ANYTYPE,\n         RELATIONSHIPTYPE;\n+\n     }\n \n     public Types(final PageParameters parameters) {\n         super(parameters);\n \n         this.schemaModal = new BaseModal<>(\"schemaModal\");\n         this.anyTypeClassModal = new BaseModal<>(\"anyTypeClassModal\");\n-        this.anyTypeModal = new BaseModal<>(\"anyTypeModal\");\n-        this.relationshipTypeModal = new BaseModal<>(\"relationshipTypeModal\");\n \n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.add(new Label(\"header\", \"Types\"));\n         content.setOutputMarkupId(true);\n         tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n         content.add(tabbedPanel);\n \n-        final AjaxLink<Void> createSchemaLink =\n-                buildCreateLink(\"createSchema\", schemaModal, Type.SCHEMA);\n-        content.add(createSchemaLink);\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.SCHEMA_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(createSchemaLink, ENABLE, StandardEntitlement.SCHEMA_CREATE);\n-        }\n-\n-        final AjaxLink<Void> createAnyTypeClassLink =\n-                buildCreateLink(\"createAnyTypeClass\", anyTypeClassModal, Type.ANYTYPECLASS);\n-        content.add(createAnyTypeClassLink);\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.ANYTYPECLASS_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    createAnyTypeClassLink, ENABLE, StandardEntitlement.ANYTYPECLASS_CREATE);\n-        }\n-\n-        final AjaxLink<Void> createAnyTypeLink =\n-                buildCreateLink(\"createAnyType\", anyTypeModal, Type.ANYTYPE);\n-        content.add(createAnyTypeLink);\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.ANYTYPE_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    createAnyTypeLink, ENABLE, StandardEntitlement.ANYTYPE_CREATE);\n-        }\n-\n-        final AjaxLink<Void> createRelationshipTypeLink =\n-                buildCreateLink(\"createRelationshipType\", relationshipTypeModal, Type.RELATIONSHIPTYPE);\n-        content.add(createRelationshipTypeLink);\n-\n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.RELATIONSHIPTYPE_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    createRelationshipTypeLink, ENABLE, StandardEntitlement.RELATIONSHIPTYPE_CREATE);\n-        }\n-\n         add(content);\n         addWindowWindowClosedCallback(schemaModal);\n         addWindowWindowClosedCallback(anyTypeClassModal);\n-        addWindowWindowClosedCallback(anyTypeModal);\n-        addWindowWindowClosedCallback(relationshipTypeModal);\n         add(schemaModal);\n         add(anyTypeClassModal);\n-        add(anyTypeModal);\n-        add(relationshipTypeModal);\n     }\n \n     private List<ITab> buildTabList() {\n@@ -144,7 +85,7 @@ private List<ITab> buildTabList() {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new RelationshipTypePanel(panelId, getPageReference(), relationshipTypeModal);\n+                return new RelationshipTypePanel(panelId, getPageReference());\n             }\n         });\n \n@@ -154,7 +95,7 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new AnyTypePanel(panelId, getPageReference(), anyTypeModal);\n+                return new AnyTypePanel(panelId, getPageReference());\n             }\n         });\n \n@@ -181,50 +122,6 @@ public Panel getPanel(final String panelId) {\n         return tabs;\n     }\n \n-    private AjaxLink<Void> buildCreateLink(final String label, final BaseModal<?> modal, final Type type) {\n-\n-        final AjaxLink<Void> createLink = new IndicatingAjaxLink<Void>(label) {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                modal.header(new ResourceModel(label));\n-                target.add(modal.setContent(buildModalPanel(type)));\n-                modal.addSumbitButton();\n-                modal.show(true);\n-            }\n-        };\n-\n-        return createLink;\n-    }\n-\n-    private ModalPanel buildModalPanel(final Type type) {\n-        final ModalPanel panel;\n-        switch (type) {\n-            case ANYTYPECLASS:\n-                anyTypeClassModal.setFormModel(new AnyTypeClassTO());\n-                anyTypeClassModal.size(Modal.Size.Large);\n-                panel = new AnyTypeClassModalPanel(anyTypeClassModal, getPageReference(), true);\n-                break;\n-            case ANYTYPE:\n-                anyTypeModal.setFormModel(new AnyTypeTO());\n-                anyTypeModal.size(Modal.Size.Large);\n-                panel = new AnyTypeModalPanel(anyTypeModal, getPageReference(), true);\n-                break;\n-            case RELATIONSHIPTYPE:\n-                relationshipTypeModal.setFormModel(new RelationshipTypeTO());\n-                relationshipTypeModal.size(Modal.Size.Medium);\n-                panel = new RelationshipTypeModalPanel(relationshipTypeModal, getPageReference(), true);\n-                break;\n-            case SCHEMA:\n-            default:\n-                schemaModal.setFormModel(new PlainSchemaTO());\n-                panel = new SchemaModalPanel(schemaModal, getPageReference(), true);\n-        }\n-        return panel;\n-    }\n-\n     private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n         modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n "},{"sha":"307e61cfe9080b3331608c60469fd15efc1596bb","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserDisplayAttributesModalPage.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,24 +18,27 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n \n /**\n  * Modal window with Display user attributes form.\n+ *\n+ * @param <T>\n  */\n-@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-public class UserDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+public class UserDisplayAttributesModalPage<T extends Serializable> extends DisplayAttributesModalPage<T> {\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n     public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n \n     public UserDisplayAttributesModalPage(\n-            final BaseModal<?> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final List<String> schemaNames,\n             final List<String> dSchemaNames) {\n@@ -58,7 +61,7 @@ public String getPrefDerivedAttributeView() {\n     }\n \n     @Override\n-    public Class getTOClass() {\n+    public Class<? extends AnyTO> getTOClass() {\n         return UserTO.class;\n     }\n "},{"sha":"dae42163f9f8849b5a61af0108cca51c9be0f977","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.head.HeaderItem;\n@@ -30,13 +33,13 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class AbstractModalPanel extends Panel implements ModalPanel {\n+public class AbstractModalPanel<T extends Serializable> extends Panel implements ModalPanel<T> {\n \n     private static final long serialVersionUID = 8611724965544132636L;\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractModalPanel.class);\n \n-    protected final BaseModal<?> modal;\n+    protected final BaseModal<T> modal;\n \n     protected static final String CANCEL = \"cancel\";\n \n@@ -50,12 +53,22 @@ public class AbstractModalPanel extends Panel implements ModalPanel {\n \n     protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n-    public AbstractModalPanel(final BaseModal<?> modal, final PageReference pageRef) {\n+    public AbstractModalPanel(final BaseModal<T> modal, final PageReference pageRef) {\n         super(BaseModal.getContentId());\n         this.pageRef = pageRef;\n         this.modal = modal;\n     }\n \n+    @Override\n+    public final MarkupContainer add(final Component... childs) {\n+        return super.add(childs);\n+    }\n+\n+    @Override\n+    public final MarkupContainer addOrReplace(final Component... childs) {\n+        return super.addOrReplace(childs);\n+    }\n+\n     @Override\n     public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n@@ -75,4 +88,9 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n     public void onError(final AjaxRequestTarget target, final Form<?> form) {\n         modal.getNotificationPanel().refresh(target);\n     }\n+\n+    @Override\n+    public T getItem() {\n+        return modal.getFormModel();\n+    }\n }"},{"sha":"a4446ffa3b26689f443ff7d815f8e597d4953587","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractResourceModal.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -33,14 +33,16 @@\n \n /**\n  * Modal window with Resource form.\n+ *\n+ * @param <T>\n  */\n-public abstract class AbstractResourceModal extends AbstractModalPanel {\n+public abstract class AbstractResourceModal<T extends Serializable> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n     protected final List<ITab> tabs;\n \n-    public AbstractResourceModal(final BaseModal<?> modal, final PageReference pageRef) {\n+    public AbstractResourceModal(final BaseModal<T> modal, final PageReference pageRef) {\n         super(modal, pageRef);\n \n         this.tabs = new ArrayList<>();"},{"sha":"fd9f547048b46c27074e9da674671f2e0924dca7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractTypesPanel.java","status":"modified","additions":10,"deletions":73,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,83 +18,20 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.util.List;\n-import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.PropertyModel;\n \n-public class AbstractTypesPanel<T extends AbstractBaseBean> extends Panel {\n+public abstract class AbstractTypesPanel<T extends AbstractBaseBean, DP extends SearchableDataProvider<T>>\n+        extends AbstractSearchResultPanel<T, T, DP, BaseRestClient> {\n \n     private static final long serialVersionUID = 7890071604330629259L;\n \n-    protected final PreferenceManager prefMan = new PreferenceManager();\n-\n-    protected final PageReference pageRef;\n-\n-    protected int pageRows;\n-\n-    public AbstractTypesPanel(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-    }\n-\n-    protected void buildDataTable(final WebMarkupContainer container, final List<IColumn<T, String>> tableCols,\n-            final SortableDataProvider<T, String> provider, final String paginatorKey) {\n-\n-        final WebMarkupContainer tableContainer = new WebMarkupContainer(\"tableContainer\");\n-\n-        tableContainer.setOutputMarkupId(true);\n-        container.add(tableContainer);\n-\n-        final AjaxFallbackDataTable<T, String> table =\n-                new AjaxFallbackDataTable<>(\"datatable\",\n-                        tableCols, provider, pageRows, tableContainer);\n-\n-        table.setOutputMarkupId(true);\n-        tableContainer.add(table);\n-        container.add(getPaginatorForm(tableContainer, table, \"paginator\", this, paginatorKey));\n-    }\n-\n-    protected Form<Void> getPaginatorForm(final WebMarkupContainer webContainer,\n-            final AjaxFallbackDataTable<T, String> dataTable,\n-            final String formname, final Panel panel, final String rowsPerPagePrefName) {\n-\n-        final Form<Void> form = new Form<>(formname);\n-\n-        final DropDownChoice<Integer> rowChooser = new DropDownChoice<>(\"rowsChooser\",\n-                new PropertyModel<Integer>(panel, \"pageRows\"), prefMan.getPaginatorChoices(),\n-                new SelectChoiceRenderer<Integer>());\n-\n-        rowChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), rowsPerPagePrefName, rowChooser.getInput());\n-                dataTable.setItemsPerPage(rowChooser.getModelObject());\n-                target.add(webContainer);\n-            }\n-        });\n-\n-        form.add(rowChooser);\n-        return form;\n-    }\n-\n-    protected int getPageRows() {\n-        return pageRows;\n+    public AbstractTypesPanel(final String id, final Builder<T, T, BaseRestClient> builder) {\n+        super(id, builder);\n+        setFooterVisibility(true);\n+        modal.addSumbitButton();\n+        modal.size(Modal.Size.Large);\n     }\n }\n-"},{"sha":"65e9ca1e13268cf99aa3f5805893d2dfb37d82ce","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -40,7 +40,7 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.ResourceModel;\n \n-public class ActionDataTablePanel<T, S> extends DataTablePanel<T, S> {\n+public class ActionDataTablePanel<T extends Serializable, S> extends DataTablePanel<T, S> {\n \n     private static final long serialVersionUID = -8826989026203543957L;\n "},{"sha":"6a5b596f150d0598fdd32c7315702b4dd688aa9a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -45,11 +45,11 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n \n-public final class AjaxDataTablePanel<T, S> extends DataTablePanel<T, S> {\n+public final class AjaxDataTablePanel<T extends Serializable, S> extends DataTablePanel<T, S> {\n \n     private static final long serialVersionUID = -7264400471578272966L;\n \n-    public static class Builder<T, S> implements Serializable {\n+    public static class Builder<T extends Serializable, S> implements Serializable {\n \n         private static final long serialVersionUID = 8876232177473972722L;\n \n@@ -148,7 +148,7 @@ private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n \n         super(id);\n \n-        final BaseModal<?> bulkModalWin = new BaseModal<>(\"bulkModal\");\n+        final BaseModal<T> bulkModalWin = new BaseModal<>(\"bulkModal\");\n         add(bulkModalWin);\n \n         bulkModalWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {"},{"sha":"02063f3b43757e984ccd172761fec6d95813288d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -30,7 +30,7 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.PropertyModel;\n \n-public class AnyTypeClassModalPanel extends AbstractModalPanel {\n+public class AnyTypeClassModalPanel extends AbstractModalPanel<AnyTypeClassTO> {\n \n     private static final long serialVersionUID = 1086997609984272599L;\n \n@@ -51,8 +51,8 @@ public AnyTypeClassModalPanel(\n         antTypeClassForm.setModel(new CompoundPropertyModel<>(anyTypeClassTO));\n         antTypeClassForm.setOutputMarkupId(true);\n \n-        final AjaxTextFieldPanel key =\n-                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(anyTypeClassTO, \"key\"));\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(\n+                anyTypeClassTO, \"key\"));\n         key.addRequiredLabel();\n         key.setEnabled(anyTypeClassTO.getKey() == null || anyTypeClassTO.getKey().isEmpty());\n         antTypeClassForm.add(key);"},{"sha":"19489043b99b4a87baccd8119b7982b7d40d4a0f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":41,"deletions":24,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -38,6 +39,7 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -53,7 +55,6 @@ public class AnyTypeClassesPanel extends Panel {\n \n     public AnyTypeClassesPanel(final String id, final PageReference pageRef, final BaseModal<AnyTypeClassTO> modal) {\n         super(id);\n-\n         this.setOutputMarkupId(true);\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n@@ -122,6 +123,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                modal.header(new ResourceModel(\"createAnyTypeClass\"));\n+                modal.setFormModel(new AnyTypeClassTO());\n+                modal.size(Modal.Size.Large);\n+                target.add(modal.setContent(new AnyTypeClassModalPanel(modal, pageRef, true)));\n+                modal.addSumbitButton();\n+                modal.show(true);\n+            }\n+        }, ActionLink.ActionType.CREATE, StandardEntitlement.ANYTYPECLASS_CREATE).addWithRoles(\n+                new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n@@ -133,30 +148,32 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 }\n             }\n         }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).addWithRoles(\n-                new ActionLink<Serializable>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                try {\n-                    if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n-                        SyncopeConsoleSession.get()\n-                                .getService(AnyTypeClassService.class).delete(anyTypeClasses.getModelObject().getKey());\n-                        anyTypeClasses.setModelObject(null);\n-                        anyTypeClasses.setChoices(SyncopeConsoleSession.get().getService(AnyTypeClassService.class).\n-                                list());\n-                        target.add(anyTypeClasses);\n-                        target.add(updateAnyTypeClassDetails(new AnyTypeClassTO(), true));\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n+                        new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        try {\n+                            if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n+                                SyncopeConsoleSession.get()\n+                                        .getService(AnyTypeClassService.class).delete(anyTypeClasses.getModelObject().\n+                                        getKey());\n+                                anyTypeClasses.setModelObject(null);\n+                                anyTypeClasses.setChoices(SyncopeConsoleSession.get().getService(\n+                                        AnyTypeClassService.class).\n+                                        list());\n+                                target.add(anyTypeClasses);\n+                                target.add(updateAnyTypeClassDetails(new AnyTypeClassTO(), true));\n+                                info(getString(Constants.OPERATION_SUCCEEDED));\n+                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"While deleting AnyTypeClass\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        }\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n-                } catch (Exception e) {\n-                    LOG.error(\"While deleting AnyTypeClass\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                }\n-                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n \n         container.add(actionLinks.build(\"editRemove\"));\n     }"},{"sha":"8bda9220b5abe22cdc5f09dba35552574bd60cac","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeDetailsPanel.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -43,32 +42,30 @@ public class AnyTypeDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 8131650329622035501L;\n \n-    private final AnyTypeTO anyTypeTO;\n-\n-    public AnyTypeDetailsPanel(final String id, final BaseModal<AnyTypeTO> modal) {\n+    public AnyTypeDetailsPanel(final String id, final AnyTypeTO anyTypeTO) {\n         super(id);\n \n-        this.anyTypeTO = modal.getFormModel();\n-\n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n \n         final Form<AnyTypeTO> form = new Form<>(\"form\");\n-        form.setModel(new CompoundPropertyModel<>(this.anyTypeTO));\n+        form.setModel(new CompoundPropertyModel<>(anyTypeTO));\n         container.add(form);\n \n-        final AjaxTextFieldPanel key =\n-                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(this.anyTypeTO, \"key\"));\n+        final AjaxTextFieldPanel key\n+                = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(anyTypeTO, \"key\"));\n         key.addRequiredLabel();\n         key.setEnabled(key.getModelObject() == null || key.getModelObject().isEmpty());\n         form.add(key);\n \n         final AjaxDropDownChoicePanel<AnyTypeKind> kind = new AjaxDropDownChoicePanel<>(\n-                \"kind\", getString(\"kind\"), new PropertyModel<AnyTypeKind>(this.anyTypeTO, \"kind\"));\n+                \"kind\", getString(\"kind\"), new PropertyModel<AnyTypeKind>(anyTypeTO, \"kind\"));\n         kind.setChoices(Arrays.asList(AnyTypeKind.values()));\n-        kind.setModelObject(AnyTypeKind.ANY_OBJECT);\n         kind.setOutputMarkupId(true);\n+        if (anyTypeTO.getKind() == null) {\n+            kind.setModelObject(AnyTypeKind.ANY_OBJECT);\n+        }\n         kind.setEnabled(false);\n         form.add(kind);\n "},{"sha":"0ec02d0c4f476ddcff32f81e8d30d7e8c773e23e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeModalPanel.java","status":"modified","additions":7,"deletions":27,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,44 +18,24 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.html.form.Form;\n \n-public class AnyTypeModalPanel extends AbstractModalPanel {\n+public class AnyTypeModalPanel extends AbstractModalPanel<AnyTypeTO> {\n \n     private static final long serialVersionUID = -4603032036433309900L;\n \n-    private final boolean createFlag;\n+    protected final AnyTypeTO anyTypeTO;\n \n-    public AnyTypeModalPanel(final BaseModal<AnyTypeTO> modal, final PageReference pageRef, final boolean createFlag) {\n+    public AnyTypeModalPanel(final BaseModal<AnyTypeTO> modal, final AnyTypeTO anyTypeTO, final PageReference pageRef) {\n         super(modal, pageRef);\n-\n-        this.createFlag = createFlag;\n-        add(new AnyTypeDetailsPanel(\"anyTypeDetailsPanel\", modal));\n+        this.anyTypeTO = anyTypeTO;\n+        add(new AnyTypeDetailsPanel(\"anyTypeDetailsPanel\", this.anyTypeTO));\n     }\n \n     @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            final AnyTypeTO updateAnyTypeTO = AnyTypeTO.class.cast(form.getModelObject());\n-\n-            if (createFlag) {\n-                SyncopeConsoleSession.get().getService(AnyTypeService.class).create(updateAnyTypeTO);\n-            } else {\n-                SyncopeConsoleSession.get().getService(AnyTypeService.class).update(updateAnyTypeTO);\n-            }\n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating AnyTypeTO\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n+    public AnyTypeTO getItem() {\n+        return this.anyTypeTO;\n     }\n }"},{"sha":"e445746c9d59ef42698d5a9efaea594dcb831f1b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":102,"deletions":41,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,68 +18,135 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+import static org.apache.wicket.Component.ENABLE;\n+\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.panels.AnyTypePanel.AnyTypeProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class AnyTypePanel extends AbstractTypesPanel<AnyTypeTO> {\n+public class AnyTypePanel extends AbstractTypesPanel<AnyTypeTO, AnyTypeProvider> {\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AnyTypePanel.class);\n+    private final String pageID = \"AnyTypes\";\n \n-    private static final String PAGINATOR_ROWS_KEYS = Constants.PREF_ANYTYPE_PAGINATOR_ROWS;\n+    public AnyTypePanel(final String id, final Builder<AnyTypeTO, AnyTypeTO, BaseRestClient> builder) {\n+        super(id, builder);\n+    }\n \n-    private final BaseModal<AnyTypeTO> modal;\n+    public AnyTypePanel(final String id, final PageReference pageRef) {\n+        super(id, new Builder<AnyTypeTO, AnyTypeTO, BaseRestClient>(null, pageRef) {\n \n-    public AnyTypePanel(final String id, final PageReference pageReference, final BaseModal<AnyTypeTO> modal) {\n-        super(id, pageReference);\n+            private static final long serialVersionUID = 8769126634538601689L;\n \n-        this.pageRows = prefMan.getPaginatorRows(getRequest(), PAGINATOR_ROWS_KEYS);\n-        this.modal = modal;\n+            @Override\n+            protected WizardMgtPanel<AnyTypeTO> newInstance(final String id) {\n+                return new AnyTypePanel(id, this);\n+            }\n+        });\n \n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeTO>(\n+                BaseModal.CONTENT_ID, new AnyTypeTO(), pageRef) {\n \n-        buildDataTable(container,\n-                getColumns(container, pageReference), new AnyTypePanel.AnyTypeProvider(), PAGINATOR_ROWS_KEYS);\n+            private static final long serialVersionUID = -6388405037134399367L;\n \n+            @Override\n+            public ModalPanel<AnyTypeTO> build(final int index, final boolean edit) {\n+                final AnyTypeTO modelObject = newModelObject();\n+                return new AnyTypeModalPanel(modal, modelObject, pageRef) {\n+\n+                    private static final long serialVersionUID = -6227956682141146095L;\n+\n+                    @Override\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+                                SyncopeConsoleSession.get().getService(AnyTypeService.class).create(modelObject);\n+                            } else {\n+                                SyncopeConsoleSession.get().getService(AnyTypeService.class).update(modelObject);\n+                            }\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While creating or updating AnyTypeTO\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            modal.getNotificationPanel().refresh(target);\n+                        }\n+                    }\n+                };\n+            }\n+\n+            @Override\n+            protected void onCancelInternal(final AnyTypeTO modelObject) {\n+            }\n+\n+            @Override\n+            protected void onApplyInternal(final AnyTypeTO modelObject) {\n+            }\n+        }, true);\n+\n+        initResultTable();\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.ANYTYPE_CREATE);\n+    }\n+\n+    @Override\n+    protected AnyTypeProvider dataProvider() {\n+        return new AnyTypeProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ANYTYPE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n     }\n \n-    private <T extends AnyTypeModalPanel> List<IColumn<AnyTypeTO, String>> getColumns(\n-            final WebMarkupContainer webContainer, final PageReference pageReference) {\n+    @Override\n+    protected List<IColumn<AnyTypeTO, String>> getColumns() {\n \n         final List<IColumn<AnyTypeTO, String>> columns = new ArrayList<>();\n \n@@ -88,9 +155,8 @@ private <T extends AnyTypeModalPanel> List<IColumn<AnyTypeTO, String>> getColumn\n             if (field != null && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n                 if (field.getType().isArray()) {\n-                    final IColumn<AnyTypeTO, String> column =\n-                            new PropertyColumn<AnyTypeTO, String>(\n-                                    new ResourceModel(field.getName()), field.getName()) {\n+                    final IColumn<AnyTypeTO, String> column = new PropertyColumn<AnyTypeTO, String>(\n+                            new ResourceModel(field.getName()), field.getName()) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -108,9 +174,8 @@ public String getCssClass() {\n                     columns.add(column);\n \n                 } else {\n-                    final IColumn<AnyTypeTO, String> column =\n-                            new PropertyColumn<AnyTypeTO, String>(\n-                                    new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+                    final IColumn<AnyTypeTO, String> column = new PropertyColumn<AnyTypeTO, String>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -143,21 +208,17 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<AnyTypeTO>> item, final String componentId,\n                     final IModel<AnyTypeTO> model) {\n \n-                final AnyTypeTO anyTypeTO = model.getObject();\n-\n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n+                final ActionLinksPanel.Builder<Serializable> actionLinks\n+                        = ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        modal.header(Model.of(anyTypeTO.getKey()));\n-                        modal.setFormModel(anyTypeTO);\n-                        target.add(modal.setContent(new AnyTypeModalPanel(modal, pageReference, false)));\n-                        modal.addSumbitButton();\n-                        modal.show(true);\n+                        send(AnyTypePanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<AnyTypeTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPE_UPDATE).addWithRoles(\n                         new ActionLink<Serializable>() {\n@@ -167,9 +228,10 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         try {\n-                            SyncopeConsoleSession.get().getService(AnyTypeService.class).delete(anyTypeTO.getKey());\n+                            SyncopeConsoleSession.get().\n+                                    getService(AnyTypeService.class).delete(model.getObject().getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(webContainer);\n+                            target.add(container);\n                         } catch (Exception e) {\n                             LOG.error(\"While deleting AnyTypeTO\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -186,15 +248,14 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n     }\n \n-    private final class AnyTypeProvider extends SortableDataProvider<AnyTypeTO, String> {\n+    protected final class AnyTypeProvider extends SearchableDataProvider<AnyTypeTO> {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n         private final SortableDataProviderComparator<AnyTypeTO> comparator;\n \n-        private AnyTypeProvider() {\n-            super();\n-            setSort(\"key\", SortOrder.ASCENDING);\n+        private AnyTypeProvider(final int paginatorRows) {\n+            super(paginatorRows);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n "},{"sha":"17cfbe05ea22645ea76b71b36bd56335df39c742","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -43,7 +43,7 @@\n /**\n  * Modal window with Connector form.\n  */\n-public class ConnectorModal extends AbstractResourceModal {\n+public class ConnectorModal extends AbstractResourceModal<Serializable> {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n "},{"sha":"58aa653236352afd19150a32340c816a4d12b45d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DataTablePanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -32,7 +33,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class DataTablePanel<T, S> extends Panel {\n+public abstract class DataTablePanel<T extends Serializable, S> extends Panel {\n \n     private static final long serialVersionUID = -7264400471578272966L;\n "},{"sha":"bee0c05a086277177e50ded624882b5e34a068c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/FailureMessageModal.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FFailureMessageModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,16 +18,17 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;\n \n-public class FailureMessageModal extends AbstractModalPanel {\n+public class FailureMessageModal<T extends Serializable> extends AbstractModalPanel<T> {\n \n     private static final long serialVersionUID = 9216117990503199258L;\n \n-    public FailureMessageModal(final BaseModal<?> modal, final PageReference pageRef, final String failureMessage) {\n+    public FailureMessageModal(final BaseModal<T> modal, final PageReference pageRef, final String failureMessage) {\n         super(modal, pageRef);\n         final Label executionFailureMessage;\n         if (!failureMessage.isEmpty()) {"},{"sha":"27d27b688d8635847582827b46052b0c58626fbf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -168,7 +168,7 @@ public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        target.add(modal.setContent(new GroupDisplayAttributesModalPage(\n+                        target.add(modal.setContent(new GroupDisplayAttributesModalPage<>(\n                                 modal, page.getPageReference(), schemaNames, dSchemaNames)));\n \n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));"},{"sha":"11a9f78e028ff1dbca6d8d1b410d9291e5e2d095","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ModalPanel.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,13 +18,16 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.request.component.IRequestableComponent;\n \n-public interface ModalPanel extends IRequestableComponent {\n+public interface ModalPanel<T extends Serializable> extends IRequestableComponent, Serializable {\n \n     void onSubmit(final AjaxRequestTarget target, final Form<?> form);\n \n     void onError(final AjaxRequestTarget target, final Form<?> form);\n+\n+    T getItem();\n }"},{"sha":"d38cfad867203cc5d12d94ea0399382706530deb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -61,10 +61,12 @@ public StyledNotificationBehavior newWidgetBehavior(final String selector) {\n     public void refresh(final AjaxRequestTarget target) {\n         if (anyMessage()) {\n             for (FeedbackMessage message : getCurrentMessages()) {\n-                if (anyErrorMessage()) {\n+                if (message.isError()) {\n                     notification.error(target, message.getMessage());\n-                } else {\n+                } else if (message.isSuccess() || message.isInfo()) {\n                     notification.success(target, message.getMessage());\n+                } else {\n+                    notification.warn(target, message.getMessage());\n                 }\n             }\n         }"},{"sha":"17553416f74029997e34b96fcf749cd716d2e19a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -22,6 +22,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -160,7 +161,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new UserWizardBuilder(\n                                 BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).\n-                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getPopupComponent()).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getNotificationPanel()).\n                         build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n                 break;\n@@ -174,7 +175,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new GroupWizardBuilder(\n                                 BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).\n-                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getNotificationPanel()).\n                         build(id);\n                 // list of group is available to all authenticated users\n                 break;\n@@ -189,7 +190,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new AnyWizardBuilder<AnyObjectTO>(\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n-                        //addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getPopupComponent()).\n+                        addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getNotificationPanel()).\n                         build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n                         String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));"},{"sha":"4912dfdbbd2f55e64d9b2967fb77d804a32d34fc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -28,20 +29,18 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.form.Form;\n \n-public class RealmModalPanel extends AbstractModalPanel {\n+public class RealmModalPanel extends AbstractModalPanel<RealmTO> {\n \n     private static final long serialVersionUID = -4285220460543213901L;\n \n     private final RealmRestClient realmRestClient = new RealmRestClient();\n \n-    private RealmTO realmTO;\n-\n     private boolean newRealm = false;\n \n     private final String parentPath;\n \n     public RealmModalPanel(\n-            final BaseModal<?> modal,\n+            final BaseModal<RealmTO> modal,\n             final PageReference pageRef,\n             final RealmTO realmTO,\n             final String parentPath,\n@@ -51,7 +50,7 @@ public RealmModalPanel(\n     }\n \n     public RealmModalPanel(\n-            final BaseModal<?> modal,\n+            final BaseModal<RealmTO> modal,\n             final PageReference pageRef,\n             final RealmTO realmTO,\n             final String parentPath,\n@@ -61,7 +60,6 @@ public RealmModalPanel(\n         super(modal, pageRef);\n \n         this.newRealm = newRealm;\n-        this.realmTO = realmTO;\n         this.parentPath = parentPath;\n \n         final RealmDetails realmDetail = new RealmDetails(\"details\", realmTO);\n@@ -81,13 +79,13 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             } else {\n                 realmRestClient.update(updatedRealmTO);\n             }\n-            \n+\n             info(getString(Constants.OPERATION_SUCCEEDED));\n             closeAction(target, form);\n         } catch (Exception e) {\n             LOG.error(\"While creating or updating realm\", e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n         }\n+        BasePage.class.cast(pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n }"},{"sha":"ef53d059576a1d6f1cf540d84fee8d7cfb8aa7b9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypeDetailsPanel.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeDetailsPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -31,32 +30,27 @@ public class RelationshipTypeDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = -4962850669086306255L;\n \n-    private final RelationshipTypeTO relationshipTypeTO;\n-\n     public RelationshipTypeDetailsPanel(\n             final String id,\n-            final BaseModal<RelationshipTypeTO> modal) {\n+            final RelationshipTypeTO relationshipTypeTO) {\n         super(id);\n \n-        this.relationshipTypeTO = modal.getFormModel();\n-\n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n \n         final Form<RelationshipTypeTO> form = new Form<>(\"form\");\n-        form.setModel(new CompoundPropertyModel<>(this.relationshipTypeTO));\n+        form.setModel(new CompoundPropertyModel<>(relationshipTypeTO));\n         container.add(form);\n \n-        final AjaxTextFieldPanel key =\n-                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(relationshipTypeTO, \"key\"));\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(\n+                relationshipTypeTO, \"key\"));\n         key.addRequiredLabel();\n         key.setEnabled(key.getModelObject() == null || key.getModelObject().isEmpty());\n         form.add(key);\n \n-        final AjaxTextFieldPanel description =\n-                new AjaxTextFieldPanel(\"description\", \n-                        getString(\"description\"), new PropertyModel<String>(relationshipTypeTO, \"description\"));\n+        final AjaxTextFieldPanel description = new AjaxTextFieldPanel(\"description\",\n+                getString(\"description\"), new PropertyModel<String>(relationshipTypeTO, \"description\"));\n         description.addRequiredLabel();\n         form.add(description);\n     }"},{"sha":"4cbfa5a3b3c4ffe5ae07206865e0a99fb30115f8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypeModalPanel.java","status":"modified","additions":8,"deletions":28,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypeModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,47 +18,27 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n-import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.html.form.Form;\n \n-public class RelationshipTypeModalPanel extends AbstractModalPanel {\n+public class RelationshipTypeModalPanel extends AbstractModalPanel<RelationshipTypeTO> {\n \n     private static final long serialVersionUID = 1602285111803121341L;\n \n-    private final boolean createFlag;\n+    private final RelationshipTypeTO relationshipTypeTO;\n \n     public RelationshipTypeModalPanel(\n             final BaseModal<RelationshipTypeTO> modal,\n-            final PageReference pageRef, final boolean createFlag) {\n+            final RelationshipTypeTO relationshipTypeTO,\n+            final PageReference pageRef) {\n         super(modal, pageRef);\n-\n-        this.createFlag = createFlag;\n-        add(new RelationshipTypeDetailsPanel(\"relationshipTypeDetails\", modal));\n+        this.relationshipTypeTO = relationshipTypeTO;\n+        add(new RelationshipTypeDetailsPanel(\"relationshipTypeDetails\", this.relationshipTypeTO));\n     }\n \n     @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            final RelationshipTypeTO updateRelationshipTypeTO = RelationshipTypeTO.class.cast(form.getModelObject());\n-\n-            if (createFlag) {\n-                SyncopeConsoleSession.get().getService(RelationshipTypeService.class).create(updateRelationshipTypeTO);\n-            } else {\n-                SyncopeConsoleSession.get().getService(RelationshipTypeService.class).update(updateRelationshipTypeTO);\n-            }\n-\n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating RelationshipTypeTO\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n+    public RelationshipTypeTO getItem() {\n+        return this.relationshipTypeTO;\n     }\n }"},{"sha":"f4c64e4eabfa7a95b0be1a29b2ecb083ec12af99","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java","status":"modified","additions":104,"deletions":40,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,69 +18,137 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.RelationshipTypePanel.RelationshipTypeProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class RelationshipTypePanel extends AbstractTypesPanel<RelationshipTypeTO> {\n+public class RelationshipTypePanel extends AbstractTypesPanel<RelationshipTypeTO, RelationshipTypeProvider> {\n \n     private static final long serialVersionUID = -3731778000138547357L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(RelationshipTypePanel.class);\n+    private final String pageID = \"RelationshipTypes\";\n \n-    private static final String PAGINATOR_ROWS_KEYS = Constants.PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS;\n+    public RelationshipTypePanel(\n+            final String id, final Builder<RelationshipTypeTO, RelationshipTypeTO, BaseRestClient> builder) {\n+        super(id, builder);\n+    }\n \n-    private final BaseModal<RelationshipTypeTO> modal;\n+    public RelationshipTypePanel(final String id, final PageReference pageRef) {\n+        super(id, new Builder<RelationshipTypeTO, RelationshipTypeTO, BaseRestClient>(null, pageRef) {\n \n-    public RelationshipTypePanel(\n-            final String panelId,\n-            final PageReference pageReference,\n-            final BaseModal<RelationshipTypeTO> modal) {\n-        super(panelId, pageReference);\n+            private static final long serialVersionUID = 8769126634538601689L;\n+\n+            @Override\n+            protected WizardMgtPanel<RelationshipTypeTO> newInstance(final String id) {\n+                return new RelationshipTypePanel(id, this);\n+            }\n+        });\n+\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<RelationshipTypeTO>(\n+                BaseModal.CONTENT_ID, new RelationshipTypeTO(), pageRef) {\n+\n+            private static final long serialVersionUID = -6388405037134399367L;\n+\n+            @Override\n+            public ModalPanel<RelationshipTypeTO> build(final int index, final boolean edit) {\n+                final RelationshipTypeTO modelObject = newModelObject();\n+                return new RelationshipTypeModalPanel(modal, modelObject, pageRef) {\n+\n+                    private static final long serialVersionUID = -6227956682141146094L;\n+\n+                    @Override\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+                                SyncopeConsoleSession.get().\n+                                        getService(RelationshipTypeService.class).create(modelObject);\n+                            } else {\n+                                SyncopeConsoleSession.get().\n+                                        getService(RelationshipTypeService.class).update(modelObject);\n+                            }\n+\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While creating or updating RelationshipTypeTO\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            modal.getNotificationPanel().refresh(target);\n+                        }\n+                    }\n+                };\n+            }\n+\n+            @Override\n+            protected void onCancelInternal(final RelationshipTypeTO modelObject) {\n+            }\n \n-        this.pageRows = prefMan.getPaginatorRows(getRequest(), PAGINATOR_ROWS_KEYS);\n-        this.modal = modal;\n+            @Override\n+            protected void onApplyInternal(final RelationshipTypeTO modelObject) {\n+            }\n+        }, true);\n \n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n+        initResultTable();\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.RELATIONSHIPTYPE_CREATE);\n+    }\n+\n+    @Override\n+    protected RelationshipTypeProvider dataProvider() {\n+        return new RelationshipTypeProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n \n-        buildDataTable(container, getColumns(container, pageReference),\n-                new RelationshipTypePanel.RelationshipTypeProvider(), PAGINATOR_ROWS_KEYS);\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n     }\n \n-    private List<IColumn<RelationshipTypeTO, String>> getColumns(\n-            final WebMarkupContainer webContainer, final PageReference pageReference) {\n+    @Override\n+    protected List<IColumn<RelationshipTypeTO, String>> getColumns() {\n \n         final List<IColumn<RelationshipTypeTO, String>> columns = new ArrayList<>();\n \n@@ -89,9 +157,8 @@ private List<IColumn<RelationshipTypeTO, String>> getColumns(\n             if (field != null && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n \n-                final IColumn<RelationshipTypeTO, String> column =\n-                        new PropertyColumn<RelationshipTypeTO, String>(\n-                                new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+                final IColumn<RelationshipTypeTO, String> column = new PropertyColumn<RelationshipTypeTO, String>(\n+                        new ResourceModel(field.getName()), field.getName(), field.getName()) {\n \n                     private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -126,19 +193,17 @@ public void populateItem(final Item<ICellPopulator<RelationshipTypeTO>> item, fi\n \n                 final RelationshipTypeTO relationshipTypeTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n+                final ActionLinksPanel.Builder<Serializable> actionLinks\n+                        = ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        modal.header(Model.of(relationshipTypeTO.getKey()));\n-                        modal.setFormModel(relationshipTypeTO);\n-                        target.add(modal.setContent(new RelationshipTypeModalPanel(modal, pageReference, false)));\n-                        modal.addSumbitButton();\n-                        modal.show(true);\n+                        send(RelationshipTypePanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<RelationshipTypeTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE).addWithRoles(\n                         new ActionLink<Serializable>() {\n@@ -151,7 +216,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             SyncopeConsoleSession.get().getService(\n                                     RelationshipTypeService.class).delete(relationshipTypeTO.getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(webContainer);\n+                            target.add(container);\n                         } catch (Exception e) {\n                             LOG.error(\"While deleting RelationshipType\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -168,22 +233,21 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n     }\n \n-    private final class RelationshipTypeProvider extends SortableDataProvider<RelationshipTypeTO, String> {\n+    protected final class RelationshipTypeProvider extends SearchableDataProvider<RelationshipTypeTO> {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n         private final SortableDataProviderComparator<RelationshipTypeTO> comparator;\n \n-        private RelationshipTypeProvider() {\n-            super();\n-            setSort(\"key\", SortOrder.ASCENDING);\n+        private RelationshipTypeProvider(final int paginatorRows) {\n+            super(paginatorRows);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override\n         public Iterator<RelationshipTypeTO> iterator(final long first, final long count) {\n-            final List<RelationshipTypeTO> list =\n-                    SyncopeConsoleSession.get().getService(RelationshipTypeService.class).list();\n+            final List<RelationshipTypeTO> list = SyncopeConsoleSession.get().getService(RelationshipTypeService.class).\n+                    list();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }"},{"sha":"f649ee05be9eef27fffc979800d8a5474c5c4ec6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":33,"deletions":29,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -48,8 +48,10 @@\n \n /**\n  * Modal window with Resource form.\n+ *\n+ * @param <T>\n  */\n-public class ResourceModal extends AbstractResourceModal {\n+public class ResourceModal<T extends Serializable> extends AbstractResourceModal<T> {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n@@ -60,7 +62,7 @@ public class ResourceModal extends AbstractResourceModal {\n     private final boolean createFlag;\n \n     public ResourceModal(\n-            final BaseModal<Serializable> modal,\n+            final BaseModal<T> modal,\n             final PageReference pageRef,\n             final IModel<ResourceTO> model,\n             final boolean createFlag) {\n@@ -91,37 +93,39 @@ public Panel getPanel(final String panelId) {\n         builder.setItems(model.getObject().getProvisions());\n         builder.includes(\"anyType\", \"objectClass\");\n \n-        builder.addAction(new ActionLink<ProvisionTO>() {\n+        builder.\n+                addAction(new ActionLink<ProvisionTO>() {\n \n-            private static final long serialVersionUID = -3722207913631435504L;\n+                    private static final long serialVersionUID = -3722207913631435504L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-                send(pageRef.getPage(), Broadcast.DEPTH,\n-                        new AjaxWizard.NewItemActionEvent<>(provisionTO, 2, target));\n-            }\n-        }, ActionLink.ActionType.MAPPING, StandardEntitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+                        send(pageRef.getPage(), Broadcast.DEPTH,\n+                                new AjaxWizard.NewItemActionEvent<>(provisionTO, 2, target));\n+                    }\n+                }, ActionLink.ActionType.MAPPING, StandardEntitlement.RESOURCE_UPDATE).\n+                addAction(new ActionLink<ProvisionTO>() {\n \n-            private static final long serialVersionUID = -3722207913631435514L;\n+                    private static final long serialVersionUID = -3722207913631435514L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-                send(pageRef.getPage(), Broadcast.DEPTH,\n-                        new AjaxWizard.NewItemActionEvent<>(provisionTO, 3, target));\n-            }\n-        }, ActionLink.ActionType.ACCOUNT_LINK, StandardEntitlement.RESOURCE_UPDATE).addAction(\n-                new ActionLink<ProvisionTO>() {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+                        send(pageRef.getPage(), Broadcast.DEPTH,\n+                                new AjaxWizard.NewItemActionEvent<>(provisionTO, 3, target));\n+                    }\n+                }, ActionLink.ActionType.ACCOUNT_LINK, StandardEntitlement.RESOURCE_UPDATE).\n+                addAction(new ActionLink<ProvisionTO>() {\n \n-            private static final long serialVersionUID = -3722207913631435524L;\n+                    private static final long serialVersionUID = -3722207913631435524L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-                provisionTO.setSyncToken(null);\n-                send(pageRef.getPage(), Broadcast.DEPTH,\n-                        new AjaxWizard.NewItemFinishEvent<>(provisionTO, target));\n-            }\n-        }, ActionLink.ActionType.RESET_TIME, StandardEntitlement.RESOURCE_UPDATE).addAction(\n-                        new ActionLink<ProvisionTO>() {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+                        provisionTO.setSyncToken(null);\n+                        send(pageRef.getPage(), Broadcast.DEPTH,\n+                                new AjaxWizard.NewItemFinishEvent<>(provisionTO, target));\n+                    }\n+                }, ActionLink.ActionType.RESET_TIME, StandardEntitlement.RESOURCE_UPDATE).\n+                addAction(new ActionLink<ProvisionTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435534L;\n \n@@ -130,8 +134,8 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                         send(pageRef.getPage(), Broadcast.DEPTH,\n                                 new AjaxWizard.NewItemActionEvent<>(SerializationUtils.clone(provisionTO), target));\n                     }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.RESOURCE_CREATE).addAction(\n-                        new ActionLink<ProvisionTO>() {\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.RESOURCE_CREATE).\n+                addAction(new ActionLink<ProvisionTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435544L;\n "},{"sha":"6e2492c9b5e4307ed63b86b9c50310df55234bf0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -54,8 +55,11 @@\n \n     protected RoleSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n+\n         modal.size(Modal.Size.Large);\n         initResultTable();\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.ROLE_CREATE);\n     }\n \n     @Override"},{"sha":"bb30f7bde8680fc3a6c7fdc4837c77b5bd381c02","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -32,7 +32,7 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n \n-public class SchemaModalPanel extends AbstractModalPanel {\n+public class SchemaModalPanel extends AbstractModalPanel<AbstractSchemaTO> {\n \n     private static final long serialVersionUID = -4681998932778822125L;\n "},{"sha":"48cdd9db71217a5201e6eb9b974562a2ec8bee94","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"modified","additions":29,"deletions":9,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n@@ -41,12 +43,15 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n@@ -74,8 +79,7 @@ public class SchemasPanel extends Panel {\n \n     private static final long serialVersionUID = -1140213992451232279L;\n \n-    private static final Map<SchemaType, String> PAGINATOR_ROWS_KEYS =\n-            new HashMap<SchemaType, String>() {\n+    private static final Map<SchemaType, String> PAGINATOR_ROWS_KEYS = new HashMap<SchemaType, String>() {\n \n         private static final long serialVersionUID = 3109256773218160485L;\n \n@@ -106,15 +110,32 @@ public class SchemasPanel extends Panel {\n \n     private final BaseModal<AbstractSchemaTO> modal;\n \n-    public SchemasPanel(final String id, final PageReference pageReference, final BaseModal<AbstractSchemaTO> modal) {\n+    public SchemasPanel(final String id, final PageReference pageRef, final BaseModal<AbstractSchemaTO> modal) {\n         super(id);\n \n-        this.pageReference = pageReference;\n+        this.pageReference = pageRef;\n         this.modal = modal;\n \n         final Collapsible collapsible = new Collapsible(\"collapsePanel\", buildTabList());\n         collapsible.setOutputMarkupId(true);\n         add(collapsible);\n+\n+        final IndicatingAjaxLink<Void> schemaLink = new IndicatingAjaxLink<Void>(\"createSchema\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                modal.header(new ResourceModel(\"createSchema\"));\n+                modal.setFormModel(new PlainSchemaTO());\n+                target.add(modal.setContent(new SchemaModalPanel(modal, pageRef, true)));\n+                modal.addSumbitButton();\n+                modal.show(true);\n+            }\n+        };\n+\n+        add(schemaLink);\n+        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE, StandardEntitlement.SCHEMA_CREATE);\n     }\n \n     private List<ITab> buildTabList() {\n@@ -171,8 +192,8 @@ public String getCssClass() {\n                         }\n                     });\n                 } else {\n-                    final IColumn<AbstractSchemaTO, String> column =\n-                            new PropertyColumn<AbstractSchemaTO, String>(new ResourceModel(field), field, field) {\n+                    final IColumn<AbstractSchemaTO, String> column = new PropertyColumn<AbstractSchemaTO, String>(\n+                            new ResourceModel(field), field, field) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -291,9 +312,8 @@ private void setup(final SchemaType schemaType) {\n             final List<IColumn<AbstractSchemaTO, String>> tableCols = getColumns(schemaContainer,\n                     schemaType, COL_NAMES.get(schemaType));\n \n-            final AjaxFallbackDataTable<AbstractSchemaTO, String> table =\n-                    new AjaxFallbackDataTable<>(\"datatable\",\n-                            tableCols, new SchemaProvider(schemaType), pageRows, schemaContainer);\n+            final AjaxFallbackDataTable<AbstractSchemaTO, String> table = new AjaxFallbackDataTable<>(\"datatable\",\n+                    tableCols, new SchemaProvider(schemaType), pageRows, schemaContainer);\n             table.setOutputMarkupId(true);\n             schemaContainer.add(table);\n "},{"sha":"d7a70a15ae1f2bc7ad7f80e9c80714f1d77cf465","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -31,9 +30,7 @@ public class SecurityQuestionDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 6278708606604582875L;\n \n-    public SecurityQuestionDetailsPanel(\n-            final String id,\n-            final BaseModal<SecurityQuestionTO> modal) {\n+    public SecurityQuestionDetailsPanel(final String id, final SecurityQuestionTO securityQuestionTO) {\n         super(id);\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n@@ -43,7 +40,6 @@ public SecurityQuestionDetailsPanel(\n \n         final Form<SecurityQuestionTO> form = new Form<>(\"form\");\n \n-        final SecurityQuestionTO securityQuestionTO = modal.getFormModel();\n         form.setModel(new CompoundPropertyModel<>(securityQuestionTO));\n         container.add(form);\n "},{"sha":"671a4943b00dc035a79636e0e8e1f540c54c965b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionModalPanel.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -27,27 +27,30 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.Form;\n \n-public class SecurityQuestionModalPanel extends AbstractModalPanel {\n+public class SecurityQuestionModalPanel extends AbstractModalPanel<SecurityQuestionTO> {\n \n     private static final long serialVersionUID = 4024126489500665435L;\n \n-    private final boolean createFlag;\n+    private final SecurityQuestionTO securityQuestionTO;\n \n     public SecurityQuestionModalPanel(\n             final BaseModal<SecurityQuestionTO> modal,\n-            final PageReference pageRef,\n-            final boolean createFlag) {\n+            final SecurityQuestionTO securityQuestionTO,\n+            final PageReference pageRef) {\n         super(modal, pageRef);\n-        this.createFlag = createFlag;\n-        add(new SecurityQuestionDetailsPanel(\"securityQuestionDetailsPanel\", modal));\n+        this.securityQuestionTO = securityQuestionTO;\n+        add(new SecurityQuestionDetailsPanel(\"securityQuestionDetailsPanel\", getItem()));\n+    }\n+\n+    @Override\n+    public final SecurityQuestionTO getItem() {\n+        return this.securityQuestionTO;\n     }\n \n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         try {\n-            final SecurityQuestionTO securityQuestionTO = SecurityQuestionTO.class.cast(form.getModelObject());\n-\n-            if (createFlag) {\n+            if (securityQuestionTO.getKey() == 0) {\n                 SyncopeConsoleSession.get().getService(SecurityQuestionService.class).create(securityQuestionTO);\n             } else {\n                 SyncopeConsoleSession.get().getService(SecurityQuestionService.class).update(securityQuestionTO);"},{"sha":"bc83d03bb6080a08da6eeab79d47e9e9c43c9d1d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":82,"deletions":35,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -18,70 +18,120 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class SecurityQuestionsPanel extends AbstractTypesPanel<SecurityQuestionTO> {\n+public class SecurityQuestionsPanel extends AbstractSearchResultPanel<\n+        SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionsProvider, BaseRestClient> {\n \n     private static final long serialVersionUID = 3323019773236588850L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SecurityQuestionsPanel.class);\n+    private final String pageID = \"SecurityQuestions\";\n+\n+    public SecurityQuestionsPanel(final String id, final PageReference pageRef) {\n+        super(id, new Builder<SecurityQuestionTO, SecurityQuestionTO, BaseRestClient>(null, pageRef) {\n+\n+            private static final long serialVersionUID = 8769126634538601689L;\n+\n+            @Override\n+            protected WizardMgtPanel<SecurityQuestionTO> newInstance(final String id) {\n+                return new SecurityQuestionsPanel(id, this);\n+            }\n+        });\n+\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<SecurityQuestionTO>(\n+                BaseModal.CONTENT_ID, new SecurityQuestionTO(), pageRef) {\n+\n+            private static final long serialVersionUID = -6388405037134399367L;\n+\n+            @Override\n+            public ModalPanel<SecurityQuestionTO> build(final int index, final boolean edit) {\n+                final SecurityQuestionTO modelObject = newModelObject();\n+                return new SecurityQuestionModalPanel(modal, modelObject, pageRef);\n+            }\n+\n+            @Override\n+            protected void onCancelInternal(final SecurityQuestionTO modelObject) {\n+            }\n+\n+            @Override\n+            protected void onApplyInternal(final SecurityQuestionTO modelObject) {\n+            }\n+        }, true);\n \n-    private static final String PAGINATOR_ROWS_KEYS = Constants.PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS;\n+        setFooterVisibility(true);\n+        modal.addSumbitButton();\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n \n-    private final BaseModal<SecurityQuestionTO> modal;\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.SECURITY_QUESTION_CREATE);\n+    }\n \n     public SecurityQuestionsPanel(\n-            final String id, final PageReference pageReference, final BaseModal<SecurityQuestionTO> modal) {\n-        super(id, pageReference);\n-        this.pageRows = prefMan.getPaginatorRows(getRequest(), PAGINATOR_ROWS_KEYS);\n-        this.modal = modal;\n+            final String id, final Builder<SecurityQuestionTO, SecurityQuestionTO, BaseRestClient> builder) {\n+        super(id, builder);\n+    }\n+\n+    @Override\n+    protected SecurityQuestionsProvider dataProvider() {\n+        return new SecurityQuestionsProvider(rows);\n+    }\n \n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS;\n+    }\n \n-        buildDataTable(container,\n-                getColumns(container, pageReference),\n-                new SecurityQuestionsPanel.SecurityQuestionsProvider(),\n-                PAGINATOR_ROWS_KEYS);\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n \n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n     }\n \n-    private List<IColumn<SecurityQuestionTO, String>> getColumns(\n-            final WebMarkupContainer webContainer, final PageReference pageReference) {\n+    @Override\n+    protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n \n         final List<IColumn<SecurityQuestionTO, String>> columns = new ArrayList<>();\n \n@@ -145,7 +195,8 @@ public void populateItem(final Item<ICellPopulator<SecurityQuestionTO>> item, fi\n \n                 final SecurityQuestionTO securityQuestionTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n+                final ActionLinksPanel.Builder<Serializable> actionLinks\n+                        = ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks\n                         .addWithRoles(new ActionLink<Serializable>() {\n@@ -154,12 +205,9 @@ public void populateItem(final Item<ICellPopulator<SecurityQuestionTO>> item, fi\n \n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                                modal.header(Model.of(String.valueOf(securityQuestionTO.getKey())));\n-                                modal.setFormModel(securityQuestionTO);\n-                                target.add(modal.setContent(\n-                                        new SecurityQuestionModalPanel(modal, pageReference, false)));\n-                                modal.addSumbitButton();\n-                                modal.show(true);\n+                                send(SecurityQuestionsPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<SecurityQuestionTO>(\n+                                                model.getObject(), target));\n                             }\n                         }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE)\n                         .addWithRoles(new ActionLink<Serializable>() {\n@@ -172,7 +220,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                     SyncopeConsoleSession.get().getService(SecurityQuestionService.class\n                                     ).delete(securityQuestionTO.getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(webContainer);\n+                                    target.add(container);\n                                 } catch (Exception e) {\n                                     LOG.error(\"While deleting SecutiryQuestionTO\", e);\n                                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -190,15 +238,14 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n     }\n \n-    private final class SecurityQuestionsProvider extends SortableDataProvider<SecurityQuestionTO, String> {\n+    protected final class SecurityQuestionsProvider extends SearchableDataProvider<SecurityQuestionTO> {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n         private final SortableDataProviderComparator<SecurityQuestionTO> comparator;\n \n-        private SecurityQuestionsProvider() {\n-            super();\n-            setSort(\"key\", SortOrder.ASCENDING);\n+        private SecurityQuestionsProvider(final int paginatorRows) {\n+            super(paginatorRows);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n "},{"sha":"c7501c6a63faa3f513db979dc5e01adf03c00b59","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.lang.reflect.Field;\n-import java.text.MessageFormat;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -126,15 +125,16 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n                                 modal, page.getPageReference(), formModel.getObject().getInnerObject())));\n \n-                        modal.header(new Model<>(MessageFormat.format(\n-                                getString(\"any.edit\"), model.getObject().getKey())));\n+                        modal.header(new Model<>(\n+                                getString(\"any.edit\", new Model<>(new AnyHandler<UserTO>(model.getObject())))));\n+\n                         modal.show(true);\n                     }\n                 }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n@@ -143,15 +143,16 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<UserTO>(model.getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n                                 modal, page.getPageReference(), formModel.getObject().getInnerObject(), true)));\n \n-                        modal.header(new Model<>(MessageFormat.format(\n-                                getString(\"any.edit\"), model.getObject().getKey())));\n+                        modal.header(new Model<>(\n+                                getString(\"any.edit\", new Model<>(new AnyHandler<UserTO>(model.getObject())))));\n+\n                         modal.show(true);\n                     }\n                 }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n@@ -209,7 +210,7 @@ public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        target.add(modal.setContent(new UserDisplayAttributesModalPage(\n+                        target.add(modal.setContent(new UserDisplayAttributesModalPage<>(\n                                 modal, page.getPageReference(), schemaNames, dSchemaNames)));\n \n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));"},{"sha":"2478b61b717573b226baf62d1a7c083dd77a395d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n@@ -64,8 +63,6 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected IModel<List<Pair<Long, String>>> groupNames;\n \n-    protected NotificationPanel searchFeedback;\n-\n     protected IModel<List<SearchClause>> model;\n \n     protected WebMarkupContainer searchFormContainer;\n@@ -127,28 +124,6 @@ protected AbstractSearchPanel(\n         searchFormContainer.setOutputMarkupId(true);\n         add(searchFormContainer);\n \n-//        searchFeedback = new NotificationPanel(\"searchFeedback\", new IFeedbackMessageFilter() {\n-//\n-//            private static final long serialVersionUID = 6895024863321391672L;\n-//\n-//            @Override\n-//            public boolean accept(final FeedbackMessage message) {\n-//                boolean result;\n-//\n-//                // messages reported on the session have a null reporter\n-//                if (message.getReporter() == null) {\n-//                    result = false;\n-//                } else {\n-//                    // only accept messages coming from the children of the search form container\n-//                    result = searchFormContainer.contains(message.getReporter(), true);\n-//                }\n-//\n-//                return result;\n-//            }\n-//        });\n-//        searchFeedback.setOutputMarkupId(true);\n-//        add(searchFeedback);\n-\n         final SearchClausePanel searchClausePanel = new SearchClausePanel(\"panel\", \"panel\",\n                 Model.of(new SearchClause()),\n                 required,\n@@ -217,10 +192,6 @@ public String transform(final ResourceTO input) {\n         };\n     }\n \n-    public NotificationPanel getSearchFeedback() {\n-        return searchFeedback;\n-    }\n-\n     public IModel<List<SearchClause>> getModel() {\n         return this.model;\n     }"},{"sha":"e3bc2befb113420d2cef927dfe6ba814afd553cc","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -43,7 +43,7 @@ public List<String> getPropagationActionsClasses() {\n         return new ArrayList<>(SyncopeConsoleSession.get().getSyncopeTO().getPropagationActions());\n     }\n \n-    public static List<ResourceTO> getAll() {\n+    public List<ResourceTO> getAll() {\n         List<ResourceTO> resources = null;\n \n         try {"},{"sha":"1a904a1d73b45ec42d67678dcc93cbc6c7dc6da4","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":68,"deletions":64,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractResourceModal.CreateEvent;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n@@ -92,48 +93,48 @@ protected List<ResourceTO> load() {\n     private final LoadableDetachableModel<Map<String, List<ConnInstanceTO>>> connModel\n             = new LoadableDetachableModel<Map<String, List<ConnInstanceTO>>>() {\n \n-                private static final long serialVersionUID = 5275935387613157432L;\n+        private static final long serialVersionUID = 5275935387613157432L;\n \n-                @Override\n-                protected Map<String, List<ConnInstanceTO>> load() {\n-                    final Map<String, List<ConnInstanceTO>> res = new HashMap<>();\n-\n-                    for (ConnInstanceTO conn : connectorRestClient.getAllConnectors()) {\n-                        final List<ConnInstanceTO> conns;\n-                        if (res.containsKey(conn.getLocation())) {\n-                            conns = res.get(conn.getLocation());\n-                        } else {\n-                            conns = new ArrayList<>();\n-                            res.put(conn.getLocation(), conns);\n-                        }\n-                        conns.add(conn);\n-                    }\n-\n-                    return res;\n+        @Override\n+        protected Map<String, List<ConnInstanceTO>> load() {\n+            final Map<String, List<ConnInstanceTO>> res = new HashMap<>();\n+\n+            for (ConnInstanceTO conn : connectorRestClient.getAllConnectors()) {\n+                final List<ConnInstanceTO> conns;\n+                if (res.containsKey(conn.getLocation())) {\n+                    conns = res.get(conn.getLocation());\n+                } else {\n+                    conns = new ArrayList<>();\n+                    res.put(conn.getLocation(), conns);\n                 }\n-            };\n+                conns.add(conn);\n+            }\n+\n+            return res;\n+        }\n+    };\n \n     private final LoadableDetachableModel<Pair<List<URI>, List<URI>>> csModel\n             = new LoadableDetachableModel<Pair<List<URI>, List<URI>>>() {\n \n-                private static final long serialVersionUID = 5275935387613157433L;\n+        private static final long serialVersionUID = 5275935387613157433L;\n \n-                @Override\n-                protected Pair<List<URI>, List<URI>> load() {\n-                    final List<URI> connectorServers = new ArrayList<>();\n-                    final List<URI> filePaths = new ArrayList<>();\n-\n-                    for (String location : SyncopeConsoleSession.get().getSyncopeTO().getConnIdLocations()) {\n-                        if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                            connectorServers.add(URI.create(location));\n-                        } else {\n-                            filePaths.add(URI.create(location));\n-                        }\n-                    }\n-\n-                    return Pair.of(connectorServers, filePaths);\n+        @Override\n+        protected Pair<List<URI>, List<URI>> load() {\n+            final List<URI> connectorServers = new ArrayList<>();\n+            final List<URI> filePaths = new ArrayList<>();\n+\n+            for (String location : SyncopeConsoleSession.get().getSyncopeTO().getConnIdLocations()) {\n+                if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n+                    connectorServers.add(URI.create(location));\n+                } else {\n+                    filePaths.add(URI.create(location));\n                 }\n-            };\n+            }\n+\n+            return Pair.of(connectorServers, filePaths);\n+        }\n+    };\n \n     protected enum SupportedOperation {\n \n@@ -144,7 +145,15 @@ protected enum SupportedOperation {\n     }\n \n     public Topology() {\n-        modal = new BaseModal<>(\"resource-modal\");\n+        modal = new BaseModal<Serializable>(\"resource-modal\") {\n+\n+            private static final long serialVersionUID = -5912673052161214766L;\n+\n+            @Override\n+            public NotificationPanel getNotificationPanel() {\n+                return Topology.this.notificationPanel;\n+            }\n+        };\n         add(modal.size(Modal.Size.Large));\n \n         modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n@@ -154,11 +163,6 @@ public Topology() {\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 modal.show(false);\n-\n-//                if (isModalResult()) {\n-//                    info(getString(Constants.OPERATION_SUCCEEDED));\n-//                    notificationPanel.refresh(target);\n-//                }\n             }\n         });\n \n@@ -398,37 +402,37 @@ protected void populateItem(final ListItem<Long> item) {\n                 final ListView<TopologyNode> innerListView = new ListView<TopologyNode>(\"resources\",\n                         new ArrayList<>(connections.get(connectorId).values())) {\n \n-                            private static final long serialVersionUID = 1L;\n+                    private static final long serialVersionUID = 1L;\n \n-                            private final int size = getModelObject().size() + 1;\n+                    private final int size = getModelObject().size() + 1;\n \n-                            @Override\n-                            protected void populateItem(final ListItem<TopologyNode> item) {\n-                                final TopologyNode topologynode = item.getModelObject();\n-                                final TopologyNode parent = connectors.get(connectorId);\n+                    @Override\n+                    protected void populateItem(final ListItem<TopologyNode> item) {\n+                        final TopologyNode topologynode = item.getModelObject();\n+                        final TopologyNode parent = connectors.get(connectorId);\n \n-                                // Set position\n-                                int kx = size >= 16 ? 800 : (48 * size);\n-                                int ky = size < 4 ? 100 : size < 6 ? 350 : 750;\n+                        // Set position\n+                        int kx = size >= 16 ? 800 : (48 * size);\n+                        int ky = size < 4 ? 100 : size < 6 ? 350 : 750;\n \n-                                final double hpos;\n-                                if (parent == null || parent.getY() < syncopeTopologyNode.getY()) {\n-                                    hpos = Math.PI;\n-                                } else {\n-                                    hpos = 0.0;\n-                                }\n+                        final double hpos;\n+                        if (parent == null || parent.getY() < syncopeTopologyNode.getY()) {\n+                            hpos = Math.PI;\n+                        } else {\n+                            hpos = 0.0;\n+                        }\n \n-                                int x = (int) Math.round((parent == null ? origX : parent.getX())\n-                                        + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n-                                int y = (int) Math.round((parent == null ? origY : parent.getY())\n-                                        + ky * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                        int x = (int) Math.round((parent == null ? origX : parent.getX())\n+                                + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                        int y = (int) Math.round((parent == null ? origY : parent.getY())\n+                                + ky * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n \n-                                topologynode.setX(x);\n-                                topologynode.setY(y);\n+                        topologynode.setX(x);\n+                        topologynode.setY(y);\n \n-                                item.add(topologyNodePanel(\"res\", topologynode));\n-                            }\n-                        };\n+                        item.add(topologyNodePanel(\"res\", topologynode));\n+                    }\n+                };\n \n                 innerListView.setOutputMarkupId(true);\n                 item.add(innerListView);"},{"sha":"a7bd8329db6408bbadfe463fe46e0d21607a79b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -35,12 +35,15 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxIndicatorAware;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.behavior.AttributeAppender;\n+import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n@@ -117,6 +120,21 @@ public TopologyNodePanel(\n         BasePage.class.cast(pageRef.getPage()).setWindowClosedCallback(modal, null);\n     }\n \n+    @Override\n+    public final MarkupContainer add(final Component... childs) {\n+        return super.add(childs);\n+    }\n+\n+    @Override\n+    public final Component add(final Behavior... behaviors) {\n+        return super.add(behaviors);\n+    }\n+\n+    @Override\n+    public final Component setMarkupId(final String markupId) {\n+        return super.setMarkupId(markupId);\n+    }\n+\n     private Fragment getSyncopeFragment() {\n         return new Fragment(\"actions\", \"syncopeActions\", this);\n     }\n@@ -173,7 +191,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n-        \n+\n         fragment.add(delete);\n         delete.add(new ConfirmationModalBehavior());\n \n@@ -192,7 +210,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n \n-                target.add(modal.setContent(new ResourceModal(modal, pageRef, model, true)));\n+                target.add(modal.setContent(new ResourceModal<>(modal, pageRef, model, true)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.new\"), node.getKey())));\n \n@@ -271,7 +289,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n \n-                target.add(modal.setContent(new ResourceModal(modal, pageRef, model, false)));\n+                target.add(modal.setContent(new ResourceModal<>(modal, pageRef, model, false)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n "},{"sha":"ab602b6e4402822e4362019ebc281537b2815e12","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":23,"deletions":4,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -33,8 +33,10 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.DefaultModalCloseButton;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons.PrimaryModalButton;\n import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -82,7 +84,7 @@ public BaseModal(final String id) {\n         form = new Form<>(FORM);\n         add(form);\n \n-        content = new AbstractModalPanel(this, null) {\n+        content = new AbstractModalPanel<T>(this, null) {\n \n             private static final long serialVersionUID = 1L;\n \n@@ -105,7 +107,21 @@ public BaseModal(final String id) {\n         addButton(new DefaultModalCloseButton());\n         setUseKeyboard(true);\n         setFadeIn(true);\n+    }\n \n+    @Override\n+    public final Component add(final Behavior... behaviors) {\n+        return super.add(behaviors);\n+    }\n+\n+    @Override\n+    public final MarkupContainer add(final Component... childs) {\n+        return super.add(childs);\n+    }\n+\n+    @Override\n+    public final MarkupContainer addOrReplace(final Component... childs) {\n+        return super.addOrReplace(childs);\n     }\n \n     @Override\n@@ -131,11 +147,14 @@ public T getFormModel() {\n         return form.getModelObject();\n     }\n \n-    public ModalPanel getContent() {\n-        return ModalPanel.class.cast(content);\n+    public ModalPanel<T> getContent() {\n+        if (content instanceof ModalPanel) {\n+            return (ModalPanel<T>) content;\n+        }\n+        throw new IllegalStateException();\n     }\n \n-    public BaseModal<T> setContent(final ModalPanel component) {\n+    public BaseModal<T> setContent(final ModalPanel<T> component) {\n         if (component instanceof Panel) {\n             return setInternalContent(Panel.class.cast(component));\n         }"},{"sha":"88b79c594651eab500c30f795ae2adebd12ace96","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractModalPanelBuilder.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.wicket.PageReference;\n+\n+public abstract class AbstractModalPanelBuilder<T extends Serializable> implements Serializable {\n+\n+    private static final long serialVersionUID = 5241745929825564456L;\n+\n+    protected final String id;\n+\n+    protected final PageReference pageRef;\n+\n+    private final T defaultItem;\n+\n+    private T item;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param defaultItem default item.\n+     * @param pageRef Caller page reference.\n+     */\n+    public AbstractModalPanelBuilder(final String id, final T defaultItem, final PageReference pageRef) {\n+        this.id = id;\n+        this.defaultItem = defaultItem;\n+        this.pageRef = pageRef;\n+    }\n+\n+    public abstract ModalPanel<T> build(final int index, final boolean edit);\n+\n+    protected abstract void onCancelInternal(T modelObject);\n+\n+    protected abstract void onApplyInternal(T modelObject);\n+\n+    protected T getOriginalItem() {\n+        return item;\n+    }\n+\n+    public T getDefaultItem() {\n+        return defaultItem;\n+    }\n+\n+    protected T newModelObject() {\n+        if (item == null) {\n+            // keep the original item: the which one before the changes performed during wizard browsing\n+            item = SerializationUtils.clone(defaultItem);\n+        }\n+\n+        // instantiate a new model object and return it\n+        return SerializationUtils.clone(item);\n+    }\n+\n+    /**\n+     * Replaces the default value provided with the constructor and nullify working item object.\n+     *\n+     * @param item new value.\n+     * @return the current wizard factory instance.\n+     */\n+    public AbstractModalPanelBuilder<T> setItem(final T item) {\n+        this.item = item;\n+        return this;\n+    }\n+\n+    public PageReference getPageReference() {\n+        return pageRef;\n+    }\n+}"},{"sha":"d868180e03e8db7f7b486d2fa9c610a26e3fc728","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -29,7 +29,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AjaxWizard<T extends Serializable> extends Wizard implements ModalPanel {\n+public abstract class AjaxWizard<T extends Serializable> extends Wizard implements ModalPanel<T> {\n \n     private static final long serialVersionUID = -1272120742876833520L;\n \n@@ -53,11 +53,8 @@ public AjaxWizard(final String id, final T item, final WizardModel model, final\n         super(id);\n         this.item = item;\n         this.edit = edit;\n-\n         setOutputMarkupId(true);\n-\n         setDefaultModel(new CompoundPropertyModel<>(this));\n-\n         init(model);\n     }\n "},{"sha":"0afa9f4e64c628b1fb4112e9b1aaf834798b2c57","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":3,"deletions":50,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -16,22 +16,13 @@\n package org.apache.syncope.client.console.wizards;\n \n import java.io.Serializable;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n-public abstract class AjaxWizardBuilder<T extends Serializable> implements Serializable {\n+public abstract class AjaxWizardBuilder<T extends Serializable> extends AbstractModalPanelBuilder<T> {\n \n     private static final long serialVersionUID = 5241745929825564456L;\n \n-    private final String id;\n-\n-    protected final PageReference pageRef;\n-\n-    private final T defaultItem;\n-\n-    private T item;\n-\n     /**\n      * Construct.\n      *\n@@ -40,11 +31,10 @@\n      * @param pageRef Caller page reference.\n      */\n     public AjaxWizardBuilder(final String id, final T defaultItem, final PageReference pageRef) {\n-        this.id = id;\n-        this.defaultItem = defaultItem;\n-        this.pageRef = pageRef;\n+        super(id, defaultItem, pageRef);\n     }\n \n+    @Override\n     public AjaxWizard<T> build(final int index, final boolean edit) {\n         final AjaxWizard<T> wizard = build(edit);\n         for (int i = 1; i < index; i++) {\n@@ -74,41 +64,4 @@ protected void onApplyInternal() {\n     }\n \n     protected abstract WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel);\n-\n-    protected abstract void onCancelInternal(T modelObject);\n-\n-    protected abstract void onApplyInternal(T modelObject);\n-\n-    protected T getOriginalItem() {\n-        return item;\n-    }\n-\n-    public T getDefaultItem() {\n-        return defaultItem;\n-    }\n-\n-    private T newModelObject() {\n-        if (item == null) {\n-            // keep the original item: the which one before the changes performed during wizard browsing\n-            item = SerializationUtils.clone(defaultItem);\n-        }\n-\n-        // instantiate a new model object and return it\n-        return SerializationUtils.clone(item);\n-    }\n-\n-    /**\n-     * Replaces the default value provided with the constructor and nullify working item object.\n-     *\n-     * @param item new value.\n-     * @return the current wizard factory instance.\n-     */\n-    public AjaxWizardBuilder<T> setItem(final T item) {\n-        this.item = item;\n-        return this;\n-    }\n-\n-    public PageReference getPageReference() {\n-        return pageRef;\n-    }\n }"},{"sha":"f9abcdc318fcb4589ccc2f67eb250becc1d931b8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":28,"deletions":14,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -20,8 +20,11 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -45,12 +48,14 @@\n \n     private final Fragment initialFragment;\n \n-    private final AjaxLink<?> addAjaxLink;\n+    protected final AjaxLink<?> addAjaxLink;\n \n-    private AjaxWizardBuilder<T> newItemPanelBuilder;\n+    private AbstractModalPanelBuilder<T> newItemPanelBuilder;\n \n     private NotificationPanel notificationPanel;\n \n+    private boolean footerVisibility = false;\n+\n     /**\n      * Modal window.\n      */\n@@ -61,7 +66,7 @@\n         @Override\n         protected void onConfigure() {\n             super.onConfigure();\n-            setFooterVisible(false);\n+            setFooterVisible(footerVisibility);\n         }\n \n     };\n@@ -101,6 +106,15 @@ public void onClick(final AjaxRequestTarget target) {\n         initialFragment.add(addAjaxLink);\n     }\n \n+    @Override\n+    public final MarkupContainer add(final Component... childs) {\n+        return super.add(childs);\n+    }\n+\n+    public void setFooterVisibility(final boolean footerVisibility) {\n+        this.footerVisibility = footerVisibility;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n@@ -109,27 +123,27 @@ public void onEvent(final IEvent<?> event) {\n             final AjaxRequestTarget target = newItemEvent.getTarget();\n             final T item = newItemEvent.getItem();\n \n-            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n+            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && newItemPanelBuilder != null) {\n                 newItemPanelBuilder.setItem(item);\n \n-                final AjaxWizard<T> wizard = newItemPanelBuilder.build(\n+                final ModalPanel<T> modalPanel = newItemPanelBuilder.build(\n                         ((AjaxWizard.NewItemActionEvent<T>) newItemEvent).getIndex(), item != null);\n \n                 if (wizardInModal) {\n                     final IModel<T> model = new CompoundPropertyModel<>(item);\n                     modal.setFormModel(model);\n \n-                    target.add(modal.setContent(wizard));\n+                    target.add(modal.setContent(modalPanel));\n \n                     modal.header(new StringResourceModel(\n                             String.format(\"any.%s\", newItemEvent.getEventDescription()),\n                             this,\n-                            new Model<T>(wizard.getItem())));\n+                            new Model<T>(modalPanel.getItem())));\n \n                     modal.show(true);\n                 } else {\n                     final Fragment fragment = new Fragment(\"content\", \"wizard\", WizardMgtPanel.this);\n-                    fragment.add(wizard);\n+                    fragment.add(Component.class.cast(modalPanel));\n                     container.addOrReplace(fragment);\n                 }\n             } else {\n@@ -153,8 +167,8 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n     }\n \n-    private WizardMgtPanel<T> addNewItemPanelBuilder(\n-            final AjaxWizardBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+    protected <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> addNewItemPanelBuilder(\n+            final B panelBuilder, final boolean newItemDefaultButtonEnabled) {\n         this.newItemPanelBuilder = panelBuilder;\n \n         if (this.newItemPanelBuilder != null) {\n@@ -165,7 +179,7 @@ private WizardMgtPanel<T> addNewItemPanelBuilder(\n         return this;\n     }\n \n-    private WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n+    protected WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n         this.notificationPanel = notificationPanel;\n         return this;\n     }\n@@ -181,7 +195,7 @@ private WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificat\n \n         protected final PageReference pageRef;\n \n-        private AjaxWizardBuilder<T> newItemPanelBuilder;\n+        private AbstractModalPanelBuilder<T> newItemPanelBuilder;\n \n         private boolean newItemDefaultButtonEnabled = true;\n \n@@ -205,7 +219,7 @@ public WizardMgtPanel<T> build(final String id) {\n                     addNotificationPanel(notificationPanel);\n         }\n \n-        public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+        public Builder<T> addNewItemPanelBuilder(final AbstractModalPanelBuilder<T> panelBuilder) {\n             this.newItemPanelBuilder = panelBuilder;\n             return this;\n         }\n@@ -218,7 +232,7 @@ public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder\n          * @return the current builder.\n          */\n         public Builder<T> addNewItemPanelBuilder(\n-                final AjaxWizardBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+                final AbstractModalPanelBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n             this.newItemDefaultButtonEnabled = newItemDefaultButtonEnabled;\n             return addNewItemPanelBuilder(panelBuilder);\n         }"},{"sha":"ed4c227a724dbdf5a350e69c54a1fa90e1a66007","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -56,7 +56,9 @@ public GroupWizardBuilder(\n      */\n     @Override\n     public AjaxWizardBuilder<AnyHandler<GroupTO>> setItem(final AnyHandler<GroupTO> item) {\n-        return item == null ? super.setItem(item) : super.setItem(new GroupHandler(item.getInnerObject()));\n+        return (AjaxWizardBuilder<AnyHandler<GroupTO>>) (item == null\n+                ? super.setItem(item)\n+                : super.setItem(new GroupHandler(item.getInnerObject())));\n     }\n \n     @Override"},{"sha":"d20636fa0464957cf1ec667bb1448c3bcfd32ee9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -53,7 +53,7 @@ public void setObject(final List<String> object) {\n                 entityTO.getResources().addAll(object);\n             }\n         }, new ListModel<>(CollectionUtils.collect(\n-                        ResourceRestClient.getAll(),\n+                        new ResourceRestClient().getAll(),\n                         new Transformer<ResourceTO, String>() {\n \n                     @Override"},{"sha":"7801a6e0f15a801cd5194d7256bdba65c2fa87e8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -68,7 +68,9 @@ public RoleWizardBuilder(final String id, final RoleTO roleTO, final PageReferen\n      */\n     @Override\n     public AjaxWizardBuilder<RoleHandler> setItem(final RoleHandler item) {\n-        return item == null ? super.setItem(item) : super.setItem(new RoleHandler(item.getInnerObject()));\n+        return (AjaxWizardBuilder<RoleHandler>) (item == null\n+                ? super.setItem(item)\n+                : super.setItem(new RoleHandler(item.getInnerObject())));\n     }\n \n     @Override"},{"sha":"7bae94e50c97c78647967aeea0af9566382e8db6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -95,23 +95,23 @@\n           <ul class=\"sidebar-menu\">\n             <li wicket:id=\"dashboardLI\"><a href=\"#\" wicket:id=\"dashboard\"><i class=\"fa fa-dashboard\"></i><span>Dashboard</span></a></li>\n             <li wicket:id=\"realmsLI\"><a href=\"#\" wicket:id=\"realms\"><i class=\"fa fa-folder-o\"></i><span>Realms</span></a></li>\n-            <li wicket:id=\"topologyLI\"><a href=\"#\" wicket:id=\"topology\"><i class=\"fa fa-database\"></i><span>Topology</span></a></li>\n+            <li wicket:id=\"topologyLI\"><a href=\"#\" wicket:id=\"topology\"><i class=\"fa fa-plug\"></i><span>Topology</span></a></li>\n             <li wicket:id=\"reportsLI\"><a href=\"#\" wicket:id=\"reports\"><i class=\"fa fa-pie-chart\"></i><span>Reports</span></a></li>\n             <li wicket:id=\"configurationLI\" class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-edit\"></i><span>Configuration</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul wicket:id=\"configurationUL\" class=\"treeview-menu\">\n                 <li wicket:id=\"rolesLI\"><a href=\"#\" wicket:id=\"roles\"><i class=\"fa fa-users\"></i>Roles</a></li>\n-                <li wicket:id=\"policiesLI\"><a href=\"#\" wicket:id=\"policies\"><i class=\"fa fa-circle-o\"></i>Policies</a></li>\n-                <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-circle-o\"></i>Security Questions</a></li>\n-                <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-circle-o\"></i>Workflow</a></li>\n-                <li wicket:id=\"logsLI\"><a href=\"#\" wicket:id=\"logs\"><i class=\"fa fa-circle-o\"></i>Logs</a></li>\n-                <li wicket:id=\"layoutsLI\"><a href=\"#\" wicket:id=\"layouts\"><i class=\"fa fa-circle-o\"></i>Layouts</a></li>\n-                <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-circle-o\"></i><wicket:message key=\"types\"/></a></li>\n-                <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-circle-o\"></i>Notifications</a></li>\n+                <li wicket:id=\"policiesLI\"><a href=\"#\" wicket:id=\"policies\"><i class=\"fa fa-list\"></i>Policies</a></li>\n+                <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-question\"></i>Security Questions</a></li>\n+                <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-share-alt\"></i>Workflow</a></li>\n+                <li wicket:id=\"logsLI\"><a href=\"#\" wicket:id=\"logs\"><i class=\"fa fa-file-text-o\"></i>Logs</a></li>\n+                <li wicket:id=\"layoutsLI\"><a href=\"#\" wicket:id=\"layouts\"><i class=\"fa fa-object-ungroup\"></i>Layouts</a></li>\n+                <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-wrench\"></i><wicket:message key=\"types\"/></a></li>\n+                <li wicket:id=\"notificationsLI\"><a href=\"#\" wicket:id=\"notifications\"><i class=\"fa fa-envelope-o\"></i>Notifications</a></li>\n               </ul>\n             </li>\n             <li class=\"treeview\">\n-              <a href=\"#\"><i class=\"fa fa-laptop\"></i><span>Extensions</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n+              <a href=\"#\"><i class=\"fa fa-puzzle-piece\"></i><span>Extensions</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul class=\"treeview-menu\">\n                 <li wicket:id=\"camelroutesLI\"><a href=\"#\" wicket:id=\"camelroutes\"><i class=\"fa fa-circle-o\"></i>Camel Routes</a></li>\n               </ul>"},{"sha":"142df331e5b917464687cb06d9bab0efe1d76eb7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Logs.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -30,7 +30,7 @@ <h3 class=\"box-title\">\n           </div>\n           <div class=\"box-body\">\n             <div class=\"realms\">\n-              <form wicket:id=\"form\">\n+              <form>\n                 <div wicket:id=\"tabbedPanel\"></div>\n               </form>\n             </div>"},{"sha":"852db687884668d886db25e5c6589a612a982a72","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles.html","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -27,13 +27,6 @@ <h3 class=\"box-title\">\n               <span wicket:id=\"header\"></span>\n             </h3>\n             <div class=\"box-tools pull-right\">\n-              <ul class=\"nav navbar-nav actions\">\n-                <li>\n-                  <a wicket:message=\"title:add\" alt=\"add icon\" wicket:id=\"add\">\n-                    <i class=\"glyphicon glyphicon-plus\"></i>\n-                  </a>                  \n-                </li>\n-              </ul>\n             </div>\n           </div>\n           <div class=\"box-body\">"},{"sha":"77d06754f56739f7d23a653acec92deff2232065","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions.html","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -32,13 +32,6 @@ <h3 class=\"box-title\">\n           <div class=\"box-body\">\n             <div class=\"realms\">\n               <div wicket:id=\"securityQuestionPanel\"></div>\n-\n-              <div class=\"modal-footer\">\n-                <a wicket:message=\"title:createSecurityQuestion\" wicket:id=\"createSecurityQuestion\" class=\"btn btn-primary btn-circle btn-lg\">\n-                  <i class=\"glyphicon glyphicon-plus\"></i>\n-                </a>                  \n-              </div>\n-\n             </div>\n           </div>\n         </div>"},{"sha":"49062b3f1bae3828dcb3194420a21287ee1d257d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types.html","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -27,28 +27,6 @@ <h3 class=\"box-title\">\n               <span wicket:id=\"header\"></span>\n             </h3>\n             <div class=\"box-tools pull-right\">\n-              <ul class=\"nav navbar-nav actions\">\n-                <li>\n-                  <a wicket:message=\"title:createRelationshipType\" wicket:id=\"createRelationshipType\">\n-                    <i class=\"glyphicon glyphicon-link\"></i>\n-                  </a>                  \n-                </li>\n-                <li>\n-                  <a wicket:message=\"title:createAnyType\" wicket:id=\"createAnyType\">\n-                    <i class=\"glyphicon glyphicon-leaf\"></i>\n-                  </a>                  \n-                </li>\n-                <li>\n-                  <a wicket:message=\"title:createAnyTypeClass\" wicket:id=\"createAnyTypeClass\">\n-                    <i class=\"glyphicon glyphicon-duplicate\"></i>\n-                  </a>                  \n-                </li>\n-                <li>\n-                  <a wicket:message=\"title:createSchema\" wicket:id=\"createSchema\">\n-                    <i class=\"glyphicon glyphicon-list-alt\"></i>\n-                  </a>                  \n-                </li>\n-              </ul>\n             </div>\n           </div>\n           <div class=\"box-body\">\n@@ -61,7 +39,5 @@ <h3 class=\"box-title\">\n     </div>\n     <div wicket:id=\"schemaModal\"></div>\n     <div wicket:id=\"anyTypeClassModal\"></div>\n-    <div wicket:id=\"anyTypeModal\"></div>\n-    <div wicket:id=\"relationshipTypeModal\"></div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"ff35ea367f6749f66d41edb82ec033b659e548e9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractTypesPanel.html","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e5990330f193fd7e0777b37ea5128b939e9000a8/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e5990330f193fd7e0777b37ea5128b939e9000a8/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.html?ref=e5990330f193fd7e0777b37ea5128b939e9000a8","patch":"@@ -1,40 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div wicket:id=\"container\">\n-      <div wicket:id=\"tableContainer\" class=\"dataTable\">\n-        <table class=\"table table-bordered table-hover dataTable\" wicket:id=\"datatable\">[datatable]</table>\n-      </div>\n-      <div class=\"rowsChooser\">\n-        <form wicket:id=\"paginator\">\n-          <div>\n-            <div class=\"dataTables_length\">\n-              <label>\n-                <wicket:message key=\"displayRows\"/>\n-                <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n-              </label>\n-            </div>\n-          </div>\n-        </form>\n-      </div>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"2f30b82f2968991cb2af8b9b78cb390a4139ec08","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypePanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit AnyType ${key}\n+any.new=New AnyType"},{"sha":"396f3d8ccd8ffbd9b8ce9784a4fa4a0a6dbbdb04","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypePanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_it.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica AnyType ${key}\n+any.new=Nuovo AnyType"},{"sha":"75418a3f8e530d953b44caf2c85cc5ac573a6ee4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypePanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel_pt_BR.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Alterar AnyType ${key}\n+any.new=Novo AnyType"},{"sha":"66ad3afde422af2ce2bcde17109196a073f363a0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit RelationshipType ${key}\n+any.new=New RelationshipType"},{"sha":"2882c374d603819b4eaa31a58e2b4a99bb6c8e75","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_it.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica RelationshipType ${key}\n+any.new=Nuovo RelationshipType"},{"sha":"f88432888d9323594881e51163df91808c0fa98c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RelationshipTypePanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel_pt_BR.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Alterar RelationshipType ${key}\n+any.new=Novo RelationshipType"},{"sha":"2cea30f255581e7fed9bc625f2252150577a1445","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -23,6 +23,11 @@\n   <body>\n     <wicket:panel>\n       <div wicket:id=\"collapsePanel\"></div>\n+      <div class=\"modal-footer\">\n+        <a wicket:message=\"title:createSchema\" wicket:id=\"createSchema\">\n+          <i class=\"glyphicon glyphicon-duplicate\"></i>\n+        </a>\n+      </div>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"7323e0526f2108fac323c94c96064be24c90d0a8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Security Question ${key}\n+any.new=New Security Question"},{"sha":"6d553238fab60e3195a7586541ae94999bbed9db","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionsPanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_it.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica Domanda Segreta ${key}\n+any.new=Nuova Domanda Segreta"},{"sha":"930c3c2aa7fa04062e81659c9796d9efb5c890db","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionsPanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel_pt_BR.properties?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Alterar Pergunta de Seguran\\u00e7a ${key}\n+any.new=Novo Pergunta de Seguran\\u00e7a"},{"sha":"70ea03d79efc6d664f555ccb1fcf07743681d98b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.html","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html?ref=6a93860d8deab4a2c1e5cf2c8e75e64c8c5eb27d","patch":"@@ -25,7 +25,6 @@\n     <wicket:panel>\n       <span class=\"searchBox\">\n         <div class=\"col-xs-12\">\n-          <div wicket:id=\"searchFeedback\"></div>\n           <span wicket:id=\"searchFormContainer\">\n             <span wicket:id=\"search\">[SEARCH]</span>\n           </span>"}]}