{"sha":"1168c47f168646e4abdd0d97bf5a5b7442627e71","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjExNjhjNDdmMTY4NjQ2ZTRhYmRkMGQ5N2JmNWE1Yjc0NDI2MjdlNzE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-14T09:51:28Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-14T09:51:28Z"},"message":"Fix connector configuration properties processing\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247253 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c0cdc4628b93f2ed29c7221a3c6b99e5f66db687","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c0cdc4628b93f2ed29c7221a3c6b99e5f66db687"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1168c47f168646e4abdd0d97bf5a5b7442627e71","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1168c47f168646e4abdd0d97bf5a5b7442627e71","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1168c47f168646e4abdd0d97bf5a5b7442627e71","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1168c47f168646e4abdd0d97bf5a5b7442627e71/comments","author":null,"committer":null,"parents":[{"sha":"d2e758458659e3988020928e89ab6f58500fb395","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2e758458659e3988020928e89ab6f58500fb395","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d2e758458659e3988020928e89ab6f58500fb395"}],"stats":{"total":34,"additions":18,"deletions":16},"files":[{"sha":"b16baff67b3d50ee2551843f3a1776b89cb597ff","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1168c47f168646e4abdd0d97bf5a5b7442627e71/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1168c47f168646e4abdd0d97bf5a5b7442627e71/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=1168c47f168646e4abdd0d97bf5a5b7442627e71","patch":"@@ -339,7 +339,6 @@ protected void populateItem(\n                                 label.getDefaultModelObjectAsString(),\n                                 new Model(),\n                                 true);\n-\n                     } else {\n \n                         field = new AjaxTextFieldPanel(\n@@ -357,7 +356,7 @@ protected void populateItem(\n                 }\n \n                 field.setTitle(property.getSchema().getHelpMessage());\n-\n+                \n                 if (isArray) {\n                     field.removeRequiredLabel();\n "},{"sha":"a0641c0b255852ea23d662c765f3ae2491c294f6","filename":"core/src/main/java/org/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1168c47f168646e4abdd0d97bf5a5b7442627e71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1168c47f168646e4abdd0d97bf5a5b7442627e71/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=1168c47f168646e4abdd0d97bf5a5b7442627e71","patch":"@@ -174,28 +174,33 @@ public ConnectorFacadeProxy(\n                     } else if (Integer.class.equals(propertySchemaClass)\n                             || int.class.equals(propertySchemaClass)) {\n \n-                        propertyValue =\n-                                (Integer) property.getValues().iterator().next();\n+                        propertyValue = Integer.parseInt(\n+                                property.getValues().iterator().next().toString());\n+\n                     } else if (Long.class.equals(propertySchemaClass)\n                             || long.class.equals(propertySchemaClass)) {\n \n-                        propertyValue =\n-                                (Long) property.getValues().iterator().next();\n+                        propertyValue = Long.parseLong(\n+                                property.getValues().iterator().next().toString());\n+\n                     } else if (Float.class.equals(propertySchemaClass)\n                             || float.class.equals(propertySchemaClass)) {\n \n-                        propertyValue =\n-                                (Float) property.getValues().iterator().next();\n+                        propertyValue = Float.parseFloat(\n+                                property.getValues().iterator().next().toString());\n+\n                     } else if (Double.class.equals(propertySchemaClass)\n                             || double.class.equals(propertySchemaClass)) {\n \n-                        propertyValue =\n-                                (Double) property.getValues().iterator().next();\n+                        propertyValue = Double.parseDouble(\n+                                property.getValues().iterator().next().toString());\n+\n                     } else if (Boolean.class.equals(propertySchemaClass)\n                             || boolean.class.equals(propertySchemaClass)) {\n \n-                        propertyValue =\n-                                (Boolean) property.getValues().iterator().next();\n+                        propertyValue = Boolean.parseBoolean(\n+                                property.getValues().iterator().next().toString());\n+\n                     } else if (URI.class.equals(propertySchemaClass)) {\n                         propertyValue = URI.create(\n                                 (String) property.getValues().iterator().next());"},{"sha":"2e16215382006215cdfd28c39f42eec92312454b","filename":"core/src/test/java/org/syncope/core/init/ConnInstanceLoaderTest.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1168c47f168646e4abdd0d97bf5a5b7442627e71/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1168c47f168646e4abdd0d97bf5a5b7442627e71/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java?ref=1168c47f168646e4abdd0d97bf5a5b7442627e71","patch":"@@ -41,10 +41,8 @@ public class ConnInstanceLoaderTest extends AbstractTest {\n     @Before\n     public void before() {\n         cil = new ConnInstanceLoader();\n-        ReflectionTestUtils.setField(cil,\n-                \"resourceDAO\", resourceDAO);\n-        ReflectionTestUtils.setField(cil,\n-                \"connBundleManager\", connBundleManager);\n+        ReflectionTestUtils.setField(cil, \"resourceDAO\", resourceDAO);\n+        ReflectionTestUtils.setField(cil, \"connBundleManager\", connBundleManager);\n \n         // Remove any other connector instance bean set up by\n         // standard ConnInstanceLoader.load()"}]}