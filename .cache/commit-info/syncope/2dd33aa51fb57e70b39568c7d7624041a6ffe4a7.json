{"sha":"2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJkZDMzYWE1MWZiNTdlNzBiMzk1NjhjN2Q3NjI0MDQxYTZmZmU0YTc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-11T17:25:45Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-11T17:25:45Z"},"message":"Preventing double Ajax requests in 3 lines of code - http://wicketinaction.com/2008/12/preventing-double-ajax-requests-in-3-lines-of-code/\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246781 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c82335a62af660ba03eaba7bec1f0217e0f3393d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c82335a62af660ba03eaba7bec1f0217e0f3393d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/comments","author":null,"committer":null,"parents":[{"sha":"f0141ba4d9791dc1596063798eff16b00a4c4dcc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f0141ba4d9791dc1596063798eff16b00a4c4dcc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f0141ba4d9791dc1596063798eff16b00a4c4dcc"}],"stats":{"total":96,"additions":48,"deletions":48},"files":[{"sha":"5cee46263fc434a80bb1e159d85ef08273be73a1","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","patch":"@@ -16,6 +16,7 @@\n \n import org.apache.wicket.Component;\n import org.apache.wicket.PageParameters;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n import org.apache.wicket.behavior.AbstractBehavior;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebPage;\n@@ -29,7 +30,7 @@\n /**\n  * Syncope Wicket base-page.\n  */\n-public class BasePage extends WebPage {\n+public class BasePage extends WebPage implements IAjaxIndicatorAware {\n \n     /**\n      * Logger.\n@@ -43,6 +44,8 @@ public class BasePage extends WebPage {\n     protected FeedbackPanel feedbackPanel;\n \n     public BasePage() {\n+        super();\n+\n         pageSetup();\n     }\n \n@@ -67,7 +70,7 @@ private void pageSetup() {\n         add(feedbackPanel);\n \n         final String kind = getClass().getSimpleName().toLowerCase();\n-        Component kindIcon = get(kind);\n+        final Component kindIcon = get(kind);\n         if (kindIcon != null) {\n             kindIcon.add(new AbstractBehavior() {\n \n@@ -81,4 +84,9 @@ public void onComponentTag(final Component component,\n             add(kindIcon);\n         }\n     }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return \"veil\";\n+    }\n }"},{"sha":"df4c5af53838b6d8ae8f5e70292bbe22ae96563f","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","patch":"@@ -114,27 +114,28 @@ public Connectors(PageParameters parameters) {\n         columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<ConnectorInstanceTO>> cellItem,\n-                    String componentId, IModel<ConnectorInstanceTO> model) {\n+                    final Item<ICellPopulator<ConnectorInstanceTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<ConnectorInstanceTO> model) {\n \n                 final ConnectorInstanceTO connectorTO = model.getObject();\n \n-                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n+                final AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editConnectorWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n-                                        ConnectorModalPage form =\n-                                                new ConnectorModalPage(\n+                                        return new ConnectorModalPage(\n                                                 Connectors.this,\n                                                 editConnectorWin, connectorTO,\n                                                 false);\n-                                        return form;\n                                     }\n                                 });\n "},{"sha":"9e127a77747ea06e028f9c3985596518b65fd6d6","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":27,"deletions":40,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","patch":"@@ -101,26 +101,29 @@ public Tasks(final PageParameters parameters) {\n         columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n                 \"open\"))) {\n \n-            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n-                    String componentId, IModel<TaskTO> model) {\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n                 final TaskTO taskTO = model.getObject();\n \n                 AjaxLink viewLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n+                            @Override\n                             public Page createPage() {\n-                                TaskModalPage modalPage = new TaskModalPage(\n+                                return new TaskModalPage(\n                                         Tasks.this, window, taskTO);\n-                                return modalPage;\n                             }\n                         });\n \n                         window.show(target);\n-\n                     }\n                 };\n                 EditLinkPanel panel = new EditLinkPanel(componentId,\n@@ -142,14 +145,17 @@ public Page createPage() {\n         columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n                 \"execute\"))) {\n \n-            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n-                    String componentId, IModel<TaskTO> model) {\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n                 final TaskTO taskTO = model.getObject();\n \n                 AjaxLink executeLink = new IndicatingAjaxLink(\"link\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         boolean res = false;\n \n                         try {\n@@ -187,8 +193,11 @@ public void onClick(AjaxRequestTarget target) {\n         columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n                 \"delete\"))) {\n \n-            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n-                    String componentId, IModel<TaskTO> model) {\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n                 final TaskTO taskTO = model.getObject();\n \n                 AjaxLink deleteLink = new IndicatingAjaxLink(\"deleteLink\") {\n@@ -211,7 +220,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n \n                             @Override\n                             public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n+                                    final CharSequence script) {\n \n                                 return \"if (confirm('\"\n                                         + getString(\"confirmDelete\") + \"'))\"\n@@ -250,7 +259,8 @@ public CharSequence preDecorateScript(\n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n-                    public void onClose(AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n                         target.addComponent(container);\n                         if (operationResult) {\n                             info(getString(\"operation_succeded\"));\n@@ -274,7 +284,8 @@ public void onClose(AjaxRequestTarget target) {\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 utility.updatePaginatorRows(Constants.CONF_TASKS_PAGINATOR_ROWS,\n                         paginatorRows);\n \n@@ -294,6 +305,7 @@ class TasksProvider extends SortableDataProvider<TaskTO> {\n                 new SortableDataProviderComparator();\n \n         public TasksProvider() {\n+            super();\n             //Default sorting\n             setSort(\"id\", true);\n         }\n@@ -324,32 +336,7 @@ public TaskTO getObject() {\n         }\n \n         public List<TaskTO> getTasksListDB() {\n-            List<TaskTO> list = restClient.getAllTasks();\n-\n-            //Mock task for test purpose\n-        /*if(list == null || list.size() == 0) {\n-            list = new ArrayList<TaskTO>();\n-\n-            TaskTO task1 = new TaskTO();\n-            task1.setAccountId(\"luisAccount\");\n-            task1.setId(1L);\n-            task1.setResource(\"testResource\");\n-\n-            List executions = new ArrayList<TaskExecutionTO>();\n-\n-            TaskExecutionTO taskExecution = new TaskExecutionTO();\n-            taskExecution.setStartDate(new Date());\n-            taskExecution.setEndDate(new Date());\n-            taskExecution.setMessage(\"Prova\");\n-            taskExecution.setStatus(TaskExecutionStatus.CREATED);\n-            executions.add(taskExecution);\n-\n-            task1.setExecutions(executions);\n-\n-            list.add(task1);\n-            }*/\n-\n-            return list;\n+            return restClient.getAllTasks();\n         }\n \n         class SortableDataProviderComparator implements"},{"sha":"a5c6a93d9c8e121910ca7e0719e4273dba758001","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dd33aa51fb57e70b39568c7d7624041a6ffe4a7/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=2dd33aa51fb57e70b39568c7d7624041a6ffe4a7","patch":"@@ -156,5 +156,9 @@\n         <div wicket:id=\"feedback\"/>\n \n         <wicket:child />\n+\n+        <div id=\"veil\" style=\"display:none;position:absolute;top:0;left:0;z-index:99999;background-color:black;width:100%;height:100%;color:white;opacity:0.1;filter:alpha(opacity=10);\">\n+            <h1>Can't touch this</h1>\n+        </div>\n     </body>\n </html>\n\\ No newline at end of file"}]}