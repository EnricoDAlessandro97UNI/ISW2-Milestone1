{"sha":"a2a278194526b909aff05077d570ac38ff99e663","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyYTI3ODE5NDUyNmI5MDlhZmYwNTA3N2Q1NzBhYzM4ZmY5OWU2NjM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-04T10:56:15Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-04T10:56:15Z"},"message":"user search data table added\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247178 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7db865448aa443d5679b7f76b2743b36a2649d97","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7db865448aa443d5679b7f76b2743b36a2649d97"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a2a278194526b909aff05077d570ac38ff99e663","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2a278194526b909aff05077d570ac38ff99e663","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2a278194526b909aff05077d570ac38ff99e663","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2a278194526b909aff05077d570ac38ff99e663/comments","author":null,"committer":null,"parents":[{"sha":"df64c146aed091cfafbacd569971e02cb39cef79","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df64c146aed091cfafbacd569971e02cb39cef79","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df64c146aed091cfafbacd569971e02cb39cef79"}],"stats":{"total":1551,"additions":947,"deletions":604},"files":[{"sha":"0d01cd3eae9115e3f37e9d6e90c858870a36c764","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -51,9 +51,6 @@ public final class Constants {\n     public static final String PREF_USERS_PAGINATOR_ROWS =\n             \"users.paginator.rows\";\n \n-    public static final String PREF_USERS_SEARCH_PAGINATOR_ROWS =\n-            \"users.paginator.search.rows\";\n-\n     public static final String PREF_RESOURCES_PAGINATOR_ROWS =\n             \"resources.paginator.rows\";\n "},{"sha":"1b3e528689fcc9b86e22c5f7d239ad407db8444f","filename":"console/src/main/java/org/syncope/console/commons/UserDataProvider.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -0,0 +1,91 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.commons;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.syncope.client.search.NodeCond;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.rest.UserRestClient;\n+\n+public class UserDataProvider extends SortableDataProvider<UserTO> {\n+\n+    private SortableUserProviderComparator comparator;\n+\n+    private NodeCond filter = null;\n+\n+    final private int rows;\n+\n+    private boolean filtered = false;\n+\n+    private UserRestClient restClient;\n+\n+    public UserDataProvider(\n+            final UserRestClient restClient,\n+            final int rows,\n+            final boolean filtered) {\n+\n+        super();\n+\n+        this.restClient = restClient;\n+        this.filtered = filtered;\n+        this.rows = rows;\n+\n+        //Default sorting\n+        setSort(\"id\", SortOrder.ASCENDING);\n+\n+        comparator = new SortableUserProviderComparator(this);\n+    }\n+\n+    public void setSearchCond(final NodeCond searchCond) {\n+        this.filter = searchCond;\n+    }\n+\n+    @Override\n+    public Iterator<UserTO> iterator(final int first, final int count) {\n+        final List<UserTO> users;\n+\n+        if (filtered) {\n+            users = filter == null\n+                    ? Collections.EMPTY_LIST\n+                    : restClient.search(\n+                    filter, (first / rows) + 1, rows);\n+        } else {\n+            users = restClient.list(\n+                    (first / rows) + 1, rows);\n+        }\n+\n+        Collections.sort(users, comparator);\n+        return users.iterator();\n+    }\n+\n+    @Override\n+    public int size() {\n+        if (filtered) {\n+            return filter == null ? 0 : restClient.searchCount(filter);\n+        } else {\n+            return restClient.count();\n+        }\n+    }\n+\n+    @Override\n+    public IModel<UserTO> model(final UserTO object) {\n+        return new CompoundPropertyModel<UserTO>(object);\n+    }\n+}"},{"sha":"c84b6b58a51ae9d6f298a7e5567cb8062154bc61","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":47,"deletions":12,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -21,13 +21,19 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.validation.IValidatable;\n+import org.apache.wicket.validation.validator.AbstractValidator;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n \n@@ -38,27 +44,52 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -4274117450918385110L;\n \n+    private final int MAX_SELECTIONS = 10;\n+\n     @SpringBean\n     private PreferenceManager prefMan;\n \n     private final List<String> selectedSchemas;\n \n     public DisplayAttributesModalPage(\n             final PageReference callerPageRef,\n-            final IModel<List<String>> schemaNames,\n+            final IModel<List<String>> names,\n             final ModalWindow window) {\n \n         super();\n \n-        Form userAttributesForm = new Form(\"UserAttributesForm\");\n-        userAttributesForm.setModel(new CompoundPropertyModel(this));\n-        selectedSchemas = prefMan.getList(getRequest(),\n-                Constants.PREF_USERS_ATTRIBUTES_VIEW);\n+        final Form form = new Form(\"UserAttributesForm\");\n+        form.setModel(new CompoundPropertyModel(this));\n+        selectedSchemas = prefMan.getList(\n+                getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW);\n+\n+        final CheckGroup group = new CheckGroup(\n+                \"checkgroup\", new PropertyModel(this, \"selectedSchemas\"));\n+        form.add(group);\n+\n+        final ListView<String> schemas =\n+                new ListView<String>(\"schemas\", names) {\n \n-        userAttributesForm.add(new CheckBoxMultipleChoice(\"schemaNames\",\n-                new PropertyModel(this, \"selectedSchemas\"), schemaNames));\n+                    @Override\n+                    protected void populateItem(ListItem<String> item) {\n+                        item.add(new Check(\"check\", item.getModel()));\n+                        item.add(new Label(\"name\", item.getModelObject()));\n+                    }\n+                };\n+        group.add(schemas);\n \n-        IndicatingAjaxButton submit = new IndicatingAjaxButton(\"submit\",\n+        group.add(new AbstractValidator() {\n+\n+            @Override\n+            protected void onValidate(IValidatable iv) {\n+                if (((List) iv.getValue()).size() > MAX_SELECTIONS) {\n+                    error(iv, \"tooMuchSelections\");\n+                }\n+            }\n+        });\n+\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n+                \"submit\",\n                 new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n@@ -68,16 +99,20 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n                 prefMan.setList(getRequest(), getResponse(),\n-                        Constants.PREF_USERS_ATTRIBUTES_VIEW, selectedSchemas);\n+                        Constants.PREF_USERS_ATTRIBUTES_VIEW,\n+                        selectedSchemas);\n                 ((Users) callerPageRef.getPage()).setModalResult(true);\n                 window.close(target);\n             }\n \n             @Override\n             protected void onError(AjaxRequestTarget target, Form<?> form) {\n+                target.add(feedbackPanel);\n             }\n         };\n-        userAttributesForm.add(submit);\n-        add(userAttributesForm);\n+\n+        form.add(submit);\n+\n+        add(form);\n     }\n }"},{"sha":"7668c27c5f74ed93316a0f004abce0405c544f7e","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":34,"deletions":543,"changes":577,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -17,7 +17,6 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n-import java.util.Iterator;\n import java.util.List;\n import org.apache.wicket.Page;\n import org.apache.wicket.Session;\n@@ -29,13 +28,6 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.feedback.FeedbackMessage;\n import org.apache.wicket.feedback.IFeedbackMessageFilter;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -47,12 +39,8 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -64,41 +52,22 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.commons.Constants;\n-import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SearchConditionWrapper;\n import org.syncope.console.commons.SearchConditionWrapper.FilterType;\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n-import org.syncope.console.commons.SelectChoiceRenderer;\n-import org.syncope.console.commons.SortableUserProviderComparator;\n+import org.syncope.console.pages.panels.ResultSetPanel;\n import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.rest.UserRestClient;\n-import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n-import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n-import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n public class Users extends BasePage {\n \n-    private final static int EDIT_MODAL_WIN_HEIGHT = 680;\n+    private final static int EDIT_MODAL_WIN_HEIGHT = 550;\n \n     private final static int EDIT_MODAL_WIN_WIDTH = 800;\n \n-    private final static int DISPLAYATTRS_MODAL_WIN_HEIGHT = 500;\n-\n-    private final static int DISPLAYATTRS_MODAL_WIN_WIDTH = 600;\n-\n-    private final static String DERIVED_ATTRIBUTE_PREFIX = \"[D] \";\n-\n-    private final static String VIRTUAL_ATTRIBUTE_PREFIX = \"[V] \";\n-\n     private static final long serialVersionUID = 134681165644474568L;\n \n-    @SpringBean\n-    private UserRestClient userRestClient;\n-\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n@@ -108,17 +77,6 @@ public class Users extends BasePage {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n-    final private int paginatorRows = prefMan.getPaginatorRows(\n-            getRequest(),\n-            Constants.PREF_USERS_PAGINATOR_ROWS);\n-\n-    final private int searchPaginatorRows = prefMan.getPaginatorRows(\n-            getRequest(),\n-            Constants.PREF_USERS_SEARCH_PAGINATOR_ROWS);\n-\n     protected boolean modalResult = false;\n \n     final private IModel<List<String>> schemaNames =\n@@ -133,44 +91,6 @@ protected List<String> load() {\n                 }\n             };\n \n-    final private IModel<List<String>> choosableSchemaNames =\n-            new LoadableDetachableModel<List<String>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<String> load() {\n-\n-                    List<String> schemas =\n-                            schemaRestClient.getSchemaNames(\"user\");\n-\n-                    if (schemas == null) {\n-                        schemas = new ArrayList<String>();\n-                    }\n-\n-                    List<String> derivedSchemas =\n-                            schemaRestClient.getDerivedSchemaNames(\"user\");\n-\n-                    if (derivedSchemas != null) {\n-                        for (String schema : derivedSchemas) {\n-                            schemas.add(DERIVED_ATTRIBUTE_PREFIX + schema);\n-                        }\n-                    }\n-\n-                    List<String> virtualSchemas =\n-                            schemaRestClient.getVirtualSchemaNames(\"user\");\n-\n-                    if (virtualSchemas != null) {\n-                        for (String schema : virtualSchemas) {\n-                            schemas.add(VIRTUAL_ATTRIBUTE_PREFIX + schema);\n-                        }\n-                    }\n-\n-                    return schemas;\n-                }\n-            };\n-\n     final private IModel<List<String>> roleNames =\n             new LoadableDetachableModel<List<String>>() {\n \n@@ -237,64 +157,25 @@ protected List<FilterType> load() {\n                 }\n             };\n \n-    final protected WebMarkupContainer listContainer;\n-\n-    final protected WebMarkupContainer searchResultContainer;\n-\n     public Users(final PageParameters parameters) {\n         super(parameters);\n \n         // Modal window for editing user attributes\n         final ModalWindow editModalWin =\n-                new ModalWindow(\"editModalWin\");\n+                new ModalWindow(\"editModal\");\n         editModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editModalWin.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n         editModalWin.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n-        editModalWin.setCookieName(\"user-edit-modal\");\n+        editModalWin.setCookieName(\"edit-modal\");\n         add(editModalWin);\n \n-        // Modal window for choosing which attributes to display in tables\n-        final ModalWindow displayAttrsModalWin =\n-                new ModalWindow(\"displayAttrsModalWin\");\n-        displayAttrsModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        displayAttrsModalWin.setInitialHeight(DISPLAYATTRS_MODAL_WIN_HEIGHT);\n-        displayAttrsModalWin.setInitialWidth(DISPLAYATTRS_MODAL_WIN_WIDTH);\n-        displayAttrsModalWin.setCookieName(\"user-displayAttrs-modal\");\n-        add(displayAttrsModalWin);\n-\n-        // Modal window for editing user attributes (in search tab)\n-        final ModalWindow searchEditModalWin =\n-                new ModalWindow(\"searchEditModalWin\");\n-        searchEditModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        searchEditModalWin.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n-        searchEditModalWin.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n-        searchEditModalWin.setCookieName(\"user-search-edit-modal\");\n-        add(searchEditModalWin);\n-\n-        // Container for user list\n-        listContainer = new WebMarkupContainer(\"listContainer\");\n-        listContainer.setOutputMarkupId(true);\n-        add(listContainer);\n-\n-        // Container for user search result\n-        searchResultContainer = new WebMarkupContainer(\"searchResultContainer\");\n-        searchResultContainer.setOutputMarkupId(true);\n-        add(searchResultContainer);\n-\n-        final AjaxFallbackDefaultDataTable<UserTO> listTable =\n-                new AjaxFallbackDefaultDataTable<UserTO>(\"listTable\",\n-                getColumns(editModalWin), new UserDataProvider(),\n-                paginatorRows);\n-        if (parameters.get(Constants.PAGEPARAM_CREATE).toBoolean(false)) {\n-            listTable.setCurrentPage(listTable.getPageCount() - 1);\n-            parameters.remove(Constants.PAGEPARAM_CREATE);\n-        } else {\n-            listTable.setCurrentPage(parameters.get(listTable.getId()\n-                    + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n-        }\n-        listContainer.add(listTable);\n-        setWindowClosedReloadCallback(editModalWin, listTable);\n-        setWindowClosedReloadCallback(displayAttrsModalWin, listTable);\n+        final ResultSetPanel searchResult = new ResultSetPanel(\n+                \"searchResult\", true, null, parameters, feedbackPanel);\n+        add(searchResult);\n+\n+        final ResultSetPanel listResult = new ResultSetPanel(\n+                \"listResult\", false, null, parameters, feedbackPanel);\n+        add(listResult);\n \n         // create new user\n         final AjaxLink createLink = new IndicatingAjaxLink(\"createLink\") {\n@@ -323,62 +204,8 @@ public Page createPage() {\n                 xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\"));\n         add(createLink);\n \n-        // select attributes to be displayed\n-        AjaxLink displayAttrsLink = new IndicatingAjaxLink(\"displayAttrsLink\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-\n-                displayAttrsModalWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new DisplayAttributesModalPage(\n-                                        Users.this.getPageReference(),\n-                                        choosableSchemaNames,\n-                                        displayAttrsModalWin);\n-                            }\n-                        });\n-\n-                displayAttrsModalWin.show(target);\n-            }\n-        };\n-        MetaDataRoleAuthorizationStrategy.authorize(displayAttrsLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Users\", \"changeView\"));\n-        add(displayAttrsLink);\n-\n-        // rows-per-page management\n-        Form paginatorForm = new Form(\"paginator\");\n-        add(paginatorForm);\n-        final DropDownChoice<Integer> rowsChooser =\n-                new DropDownChoice<Integer>(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n-                prefMan.getPaginatorChoices(),\n-                new SelectChoiceRenderer());\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_USERS_PAGINATOR_ROWS,\n-                        String.valueOf(rowsChooser.getInput()));\n-\n-                listTable.setItemsPerPage(\n-                        Integer.parseInt(rowsChooser.getInput()));\n-\n-                target.add(listContainer);\n-            }\n-        });\n-        paginatorForm.add(rowsChooser);\n+        setWindowClosedReloadCallback(\n+                editModalWin, new ResultSetPanel[]{listResult, searchResult});\n \n         // search form\n         final Form searchForm = new Form(\"searchForm\");\n@@ -468,51 +295,6 @@ protected void onError(AjaxRequestTarget target, Form<?> form) {\n         addOrButton.setDefaultFormProcessing(false);\n         searchFormContainer.add(addOrButton);\n \n-        // search result\n-        final UserSearchDataProvider searchDataProvider =\n-                new UserSearchDataProvider();\n-\n-        final AjaxFallbackDefaultDataTable<UserTO> searchResultTable =\n-                new AjaxFallbackDefaultDataTable<UserTO>(\"searchResultTable\",\n-                getColumns(searchEditModalWin), searchDataProvider,\n-                searchPaginatorRows);\n-\n-        searchResultTable.setOutputMarkupId(true);\n-\n-        searchResultTable.setCurrentPage(parameters.get(\n-                searchResultTable.getId()\n-                + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n-\n-        searchResultContainer.add(searchResultTable);\n-\n-        searchEditModalWin.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        doSearch(target, searchConditionList,\n-                                searchDataProvider, searchResultTable);\n-\n-                        if (modalResult) {\n-                            info(getString(\"operation_succeded\"));\n-\n-                            getPage().getPageParameters().set(\n-                                    searchResultTable.getId()\n-                                    + Constants.PAGEPARAM_CURRENT_PAGE,\n-                                    searchResultTable.getCurrentPage());\n-                            setResponsePage(Users.class,\n-                                    getPage().getPageParameters());\n-\n-                            target.add(feedbackPanel);\n-\n-                            modalResult = false;\n-                        }\n-                    }\n-                });\n-\n         searchForm.add(new IndicatingAjaxButton(\n                 \"search\", new ResourceModel(\"search\")) {\n \n@@ -522,8 +304,7 @@ public void onClose(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n-                doSearch(target, searchConditionList, searchDataProvider,\n-                        searchResultTable);\n+                doSearch(target, searchConditionList, searchResult);\n \n                 Session.get().getFeedbackMessages().clear();\n                 target.add(searchFeedback);\n@@ -536,161 +317,11 @@ protected void onError(final AjaxRequestTarget target,\n                 target.add(searchFeedback);\n             }\n         });\n-\n-        // search rows-per-page management\n-        Form searchPaginatorForm = new Form(\"searchPaginator\");\n-        add(searchPaginatorForm);\n-        final DropDownChoice<Integer> searchRowsChooser =\n-                new DropDownChoice<Integer>(\"searchRowsChooser\",\n-                new PropertyModel(this, \"searchPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n-        searchRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_USERS_SEARCH_PAGINATOR_ROWS,\n-                        String.valueOf(searchPaginatorRows));\n-\n-                searchResultTable.setItemsPerPage(searchPaginatorRows);\n-\n-                target.add(searchResultContainer);\n-            }\n-        });\n-        searchPaginatorForm.add(searchRowsChooser);\n-    }\n-\n-    private void setWindowClosedReloadCallback(final ModalWindow window,\n-            final AjaxFallbackDefaultDataTable<UserTO> table) {\n-\n-        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                if (modalResult) {\n-                    getSession().info(getString(\"operation_succeded\"));\n-\n-                    getPage().getPageParameters().set(table.getId()\n-                            + Constants.PAGEPARAM_CURRENT_PAGE,\n-                            table.getCurrentPage());\n-                    setResponsePage(Users.class,\n-                            getPage().getPageParameters());\n-\n-                    target.add(feedbackPanel);\n-\n-                    modalResult = false;\n-                }\n-            }\n-        });\n-    }\n-\n-    private List<IColumn<UserTO>> getColumns(final ModalWindow editModalWin) {\n-        List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"username\"), \"username\", \"username\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"status\"), \"status\", \"status\"));\n-        columns.add(new TokenColumn(new ResourceModel(\"token\"), \"token\"));\n-\n-        for (String schemaName : prefMan.getList(getRequest(),\n-                Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n-\n-            columns.add(new UserAttrColumn(\n-                    new Model<String>(schemaName), schemaName));\n-        }\n-\n-        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"edit\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<UserTO> model) {\n-\n-                Panel panel = new EditLinkPanel(componentId, model);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"read\"));\n-\n-                panel.add(new IndicatingAjaxLink(\"editLink\") {\n-\n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editModalWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n-\n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new UserModalPage(\n-                                                Users.this.getPageReference(),\n-                                                editModalWin,\n-                                                model.getObject());\n-                                    }\n-                                });\n-\n-                        editModalWin.show(target);\n-                    }\n-                });\n-                cellItem.add(panel);\n-            }\n-        });\n-        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"delete\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<UserTO> model) {\n-\n-                Panel panel = new DeleteLinkPanel(componentId, model);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"delete\"));\n-\n-                panel.add(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n-\n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        try {\n-                            userRestClient.delete(model.getObject().getId());\n-                            info(getString(\"operation_succeded\"));\n-                        } catch (SyncopeClientCompositeErrorException scce) {\n-                            error(scce.getMessage());\n-                        }\n-                        target.add(feedbackPanel);\n-                        target.add(listContainer);\n-                        target.add(searchResultContainer);\n-                    }\n-                });\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        return columns;\n     }\n \n     private void doSearch(final AjaxRequestTarget target,\n             final List<SearchConditionWrapper> searchConditionList,\n-            final UserSearchDataProvider searchDataProvider,\n-            final AjaxFallbackDefaultDataTable<UserTO> searchResultTable) {\n+            final ResultSetPanel resultsetPanel) {\n \n         NodeCond searchCond = buildSearchCond(searchConditionList);\n         LOG.debug(\"Node condition \" + searchCond);\n@@ -699,9 +330,8 @@ private void doSearch(final AjaxRequestTarget target,\n             error(getString(\"search_error\"));\n             return;\n         }\n-        searchDataProvider.setSearchCond(searchCond);\n \n-        target.add(searchResultTable);\n+        resultsetPanel.updateTableContent(searchCond, target);\n     }\n \n     public void setModalResult(final boolean modalResult) {\n@@ -792,163 +422,6 @@ private NodeCond buildSearchCond(\n         return nodeCond;\n     }\n \n-    private class UserDataProvider extends SortableDataProvider<UserTO> {\n-\n-        private static final long serialVersionUID = -990501676569033716L;\n-\n-        private SortableUserProviderComparator comparator;\n-\n-        public UserDataProvider() {\n-            super();\n-            //Default sorting\n-            setSort(\"id\", SortOrder.ASCENDING);\n-            comparator = new SortableUserProviderComparator(this);\n-        }\n-\n-        @Override\n-        public Iterator<UserTO> iterator(final int first, final int count) {\n-            List<UserTO> users = userRestClient.list(\n-                    (first / paginatorRows) + 1, paginatorRows);\n-            Collections.sort(users, comparator);\n-            return users.iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return userRestClient.count();\n-        }\n-\n-        @Override\n-        public IModel<UserTO> model(final UserTO object) {\n-            return new CompoundPropertyModel<UserTO>(object);\n-        }\n-    }\n-\n-    private class UserSearchDataProvider extends SortableDataProvider<UserTO> {\n-\n-        private static final long serialVersionUID = -691642206401562808L;\n-\n-        private SortableUserProviderComparator comparator;\n-\n-        private NodeCond searchCond = null;\n-\n-        public UserSearchDataProvider() {\n-            super();\n-            //Default sorting\n-            setSort(\"id\", SortOrder.ASCENDING);\n-            comparator = new SortableUserProviderComparator(this);\n-        }\n-\n-        public void setSearchCond(NodeCond searchCond) {\n-            this.searchCond = searchCond;\n-        }\n-\n-        @Override\n-        public Iterator<UserTO> iterator(final int first, final int count) {\n-            List<UserTO> users;\n-            if (searchCond == null) {\n-                users = Collections.EMPTY_LIST;\n-            } else {\n-                users = userRestClient.search(searchCond,\n-                        (first / searchPaginatorRows) + 1, searchPaginatorRows);\n-                Collections.sort(users, comparator);\n-            }\n-\n-            return users.iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return searchCond == null\n-                    ? 0 : userRestClient.searchCount(searchCond);\n-        }\n-\n-        @Override\n-        public IModel<UserTO> model(final UserTO object) {\n-            return new CompoundPropertyModel<UserTO>(object);\n-        }\n-    }\n-\n-    private class TokenColumn extends AbstractColumn<UserTO> {\n-\n-        private static final long serialVersionUID = 8077865338230121496L;\n-\n-        public TokenColumn(final IModel<String> displayModel,\n-                final String sortProperty) {\n-\n-            super(displayModel, sortProperty);\n-        }\n-\n-        @Override\n-        public void populateItem(final Item<ICellPopulator<UserTO>> cellItem,\n-                final String componentId,\n-                final IModel<UserTO> rowModel) {\n-\n-            if (rowModel.getObject().getToken() != null\n-                    && !rowModel.getObject().getToken().isEmpty()) {\n-                cellItem.add(\n-                        new Label(componentId, getString(\"tokenValued\")));\n-            } else {\n-                cellItem.add(\n-                        new Label(componentId, getString(\"tokenNotValued\")));\n-            }\n-        }\n-    }\n-\n-    private static class UserAttrColumn extends AbstractColumn<UserTO> {\n-\n-        private static final long serialVersionUID = 2624734332447371372L;\n-\n-        private final String schemaName;\n-\n-        public UserAttrColumn(\n-                final IModel<String> displayModel, final String schemaName) {\n-\n-            super(displayModel,\n-                    schemaName.startsWith(DERIVED_ATTRIBUTE_PREFIX)\n-                    ? schemaName.substring(\n-                    DERIVED_ATTRIBUTE_PREFIX.length(), schemaName.length())\n-                    : schemaName.startsWith(VIRTUAL_ATTRIBUTE_PREFIX)\n-                    ? schemaName.substring(\n-                    VIRTUAL_ATTRIBUTE_PREFIX.length(), schemaName.length())\n-                    : schemaName);\n-\n-            this.schemaName = schemaName;\n-        }\n-\n-        @Override\n-        public void populateItem(\n-                final Item<ICellPopulator<UserTO>> cellItem,\n-                final String componentId,\n-                final IModel<UserTO> rowModel) {\n-\n-            Label label;\n-\n-            List<String> values =\n-                    schemaName.startsWith(DERIVED_ATTRIBUTE_PREFIX)\n-                    ? rowModel.getObject().getDerivedAttributeMap().get(\n-                    schemaName.substring(\n-                    DERIVED_ATTRIBUTE_PREFIX.length(), schemaName.length()))\n-                    : schemaName.startsWith(VIRTUAL_ATTRIBUTE_PREFIX)\n-                    ? rowModel.getObject().getVirtualAttributeMap().get(\n-                    schemaName.substring(\n-                    VIRTUAL_ATTRIBUTE_PREFIX.length(), schemaName.length()))\n-                    : rowModel.getObject().getAttributeMap().get(schemaName);\n-\n-            if (values == null || values.isEmpty()) {\n-                label = new Label(componentId, \"\");\n-            } else {\n-                if (values.size() == 1) {\n-                    label = new Label(componentId, values.iterator().next());\n-                } else {\n-                    label = new Label(componentId, values.toString());\n-                }\n-            }\n-\n-            cellItem.add(label);\n-        }\n-    }\n-\n     private class SearchView extends ListView<SearchConditionWrapper> {\n \n         private static final long serialVersionUID = -527351923968737757L;\n@@ -1144,4 +617,22 @@ protected void onError(AjaxRequestTarget target,\n             item.add(dropButton);\n         }\n     }\n+\n+    private void setWindowClosedReloadCallback(\n+            final ModalWindow window,\n+            final ResultSetPanel[] panels) {\n+\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                for (ResultSetPanel panel : panels) {\n+                    target.add(panel);\n+                }\n+                target.add(feedbackPanel);\n+            }\n+        });\n+    }\n }"},{"sha":"2c1a3d019701f0139b5dedf73541d4728d64a3d8","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"added","additions":555,"deletions":0,"changes":555,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -0,0 +1,555 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.event.IEventSource;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.client.search.NodeCond;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.commons.Constants;\n+import org.syncope.console.commons.PreferenceManager;\n+import org.syncope.console.commons.UserDataProvider;\n+import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.DisplayAttributesModalPage;\n+import org.syncope.console.pages.UserModalPage;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.rest.UserRestClient;\n+import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n+\n+public class ResultSetPanel extends Panel implements IEventSource {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(ResultSetPanel.class);\n+\n+    private final static int EDIT_MODAL_WIN_HEIGHT = 550;\n+\n+    private final static int EDIT_MODAL_WIN_WIDTH = 800;\n+\n+    private final static int DISPLAYATTRS_MODAL_WIN_HEIGHT = 350;\n+\n+    private final static int DISPLAYATTRS_MODAL_WIN_WIDTH = 550;\n+\n+    private final static String DERIVED_ATTRIBUTE_PREFIX = \"[D] \";\n+\n+    private final static String VIRTUAL_ATTRIBUTE_PREFIX = \"[V] \";\n+\n+    @SpringBean\n+    private UserRestClient restClient;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    private PreferenceManager preferences;\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    private int rows = preferences.getPaginatorRows(\n+            getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+\n+    final protected WebMarkupContainer container;\n+\n+    final private FeedbackPanel feedbackPanel;\n+\n+    private boolean filtered;\n+\n+    private NodeCond filter;\n+\n+    private AjaxFallbackDefaultDataTable<UserTO> resultTable;\n+\n+    private UserDataProvider dataProvider;\n+\n+    // Modal window for editing user attributes (in search tab)\n+    private final ModalWindow editmodal = new ModalWindow(\"editModal\");\n+\n+    // Modal window for choosing which attributes to display in tables\n+    private final ModalWindow displaymodal = new ModalWindow(\"displayModal\");\n+\n+    final private IModel<List<String>> choosableSchemaNames =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<String> load() {\n+\n+                    List<String> schemas =\n+                            schemaRestClient.getSchemaNames(\"user\");\n+\n+                    if (schemas == null) {\n+                        schemas = new ArrayList<String>();\n+                    }\n+\n+                    List<String> derivedSchemas =\n+                            schemaRestClient.getDerivedSchemaNames(\"user\");\n+\n+                    if (derivedSchemas != null) {\n+                        for (String schema : derivedSchemas) {\n+                            schemas.add(\n+                                    DERIVED_ATTRIBUTE_PREFIX + schema);\n+                        }\n+                    }\n+\n+                    List<String> virtualSchemas =\n+                            schemaRestClient.getVirtualSchemaNames(\"user\");\n+\n+                    if (virtualSchemas != null) {\n+                        for (String schema : virtualSchemas) {\n+                            schemas.add(VIRTUAL_ATTRIBUTE_PREFIX + schema);\n+                        }\n+                    }\n+\n+                    return schemas;\n+                }\n+            };\n+\n+    public <T extends AbstractAttributableTO> ResultSetPanel(\n+            final String id,\n+            final boolean filtered,\n+            final NodeCond searchCond,\n+            final PageParameters parameters,\n+            final FeedbackPanel feedbackPanel) {\n+        super(id);\n+\n+        setOutputMarkupId(true);\n+\n+        this.filtered = filtered;\n+        this.filter = searchCond;\n+        this.feedbackPanel = feedbackPanel;\n+\n+        editmodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editmodal.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n+        editmodal.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n+        editmodal.setCookieName(\"edit-modal\");\n+        add(editmodal);\n+\n+        displaymodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        displaymodal.setInitialHeight(DISPLAYATTRS_MODAL_WIN_HEIGHT);\n+        displaymodal.setInitialWidth(DISPLAYATTRS_MODAL_WIN_WIDTH);\n+        displaymodal.setCookieName(\"display-modal\");\n+        add(displaymodal);\n+\n+        // Container for user search result\n+        container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        // search result\n+        dataProvider = new UserDataProvider(restClient, rows, filtered);\n+        dataProvider.setSearchCond(filter);\n+\n+        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n+                \"resultTable\", getColumns(), dataProvider, rows);\n+\n+        if (parameters.get(Constants.PAGEPARAM_CREATE).toBoolean(false)) {\n+            resultTable.setCurrentPage(resultTable.getPageCount() - 1);\n+            parameters.remove(Constants.PAGEPARAM_CREATE);\n+        } else {\n+            resultTable.setCurrentPage(parameters.get(resultTable.getId()\n+                    + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n+        }\n+\n+        resultTable.setOutputMarkupId(true);\n+\n+        resultTable.setCurrentPage(parameters.get(\n+                resultTable.getId()\n+                + Constants.PAGEPARAM_CURRENT_PAGE).toInt(0));\n+\n+        container.add(resultTable);\n+\n+        // select attributes to be displayed\n+        AjaxLink displayAttrsLink = new IndicatingAjaxLink(\"displayAttrsLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+\n+                displaymodal.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID =\n+                                    -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new DisplayAttributesModalPage(\n+                                        getWebPage().getPageReference(),\n+                                        choosableSchemaNames,\n+                                        displaymodal);\n+                            }\n+                        });\n+\n+                displaymodal.show(target);\n+            }\n+        };\n+\n+        displayAttrsLink.add(new Behavior() {\n+\n+            @Override\n+            public void onComponentTag(\n+                    final Component component, final ComponentTag tag) {\n+\n+                if (resultTable.getRowCount() > rows) {\n+                    tag.remove(\"class\");\n+                    tag.put(\"class\", \"settingsPosMultiPage\");\n+                } else {\n+                    tag.remove(\"class\");\n+                    tag.put(\"class\", \"settingsPos\");\n+                }\n+            }\n+        });\n+\n+        setWindowClosedReloadCallback(editmodal, resultTable);\n+        setWindowClosedReloadCallback(displaymodal, resultTable);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(displayAttrsLink, ENABLE,\n+                xmlRolesReader.getAllAllowedRoles(\"Users\", \"changeView\"));\n+        container.add(displayAttrsLink);\n+\n+        // search rows-per-page management\n+        final Form paginatorForm = new Form(\"paginator\");\n+        container.add(paginatorForm);\n+\n+        final DropDownChoice<Integer> rowsChooser =\n+                new DropDownChoice<Integer>(\"rowsChooser\",\n+                new PropertyModel(this, \"rows\"),\n+                preferences.getPaginatorChoices());\n+\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                preferences.set(\n+                        getRequest(),\n+                        getResponse(),\n+                        Constants.PREF_USERS_PAGINATOR_ROWS,\n+                        String.valueOf(rows));\n+\n+                resultTable.setItemsPerPage(rows);\n+\n+                final EventDataWrapper data = new EventDataWrapper();\n+                data.setTable(resultTable);\n+                data.setTarget(target);\n+\n+                send(getParent(), Broadcast.BREADTH, data);\n+            }\n+        });\n+        paginatorForm.add(rowsChooser);\n+    }\n+\n+    public void updateTableContent(\n+            final NodeCond searchCond, final AjaxRequestTarget target) {\n+        this.filter = searchCond;\n+        dataProvider.setSearchCond(filter);\n+        target.add(container);\n+    }\n+\n+    private List<IColumn<UserTO>> getColumns() {\n+        List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"username\"), \"username\", \"username\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"status\"), \"status\", \"status\"));\n+        columns.add(new TokenColumn(new ResourceModel(\"token\"), \"token\"));\n+\n+        for (String schemaName : preferences.getList(getRequest(),\n+                Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+\n+            columns.add(new UserAttrColumn(\n+                    new Model<String>(schemaName), schemaName));\n+        }\n+\n+        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"edit\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<UserTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<UserTO> model) {\n+\n+                Panel panel = new EditLinkPanel(componentId, model);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"read\"));\n+\n+                panel.add(new IndicatingAjaxLink(\"editLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        editmodal.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n+\n+                                    private static final long serialVersionUID =\n+                                            -7834632442532690940L;\n+\n+                                    @Override\n+                                    public Page createPage() {\n+                                        return new UserModalPage(\n+                                                getWebPage().getPageReference(),\n+                                                editmodal,\n+                                                model.getObject());\n+                                    }\n+                                });\n+\n+                        editmodal.show(target);\n+                    }\n+                });\n+                cellItem.add(panel);\n+            }\n+        });\n+        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"delete\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<UserTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<UserTO> model) {\n+\n+                Panel panel = new DeleteLinkPanel(componentId, model);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Users\", \"delete\"));\n+\n+                panel.add(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            restClient.delete(model.getObject().getId());\n+                            info(getString(\"operation_succeded\"));\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n+                            error(scce.getMessage());\n+                        }\n+                        target.add(feedbackPanel);\n+                        target.add(container);\n+                    }\n+                });\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    private class TokenColumn extends AbstractColumn<UserTO> {\n+\n+        private static final long serialVersionUID = 8077865338230121496L;\n+\n+        public TokenColumn(final IModel<String> displayModel,\n+                final String sortProperty) {\n+\n+            super(displayModel, sortProperty);\n+        }\n+\n+        @Override\n+        public void populateItem(final Item<ICellPopulator<UserTO>> cellItem,\n+                final String componentId,\n+                final IModel<UserTO> rowModel) {\n+\n+            if (rowModel.getObject().getToken() != null\n+                    && !rowModel.getObject().getToken().isEmpty()) {\n+                cellItem.add(\n+                        new Label(componentId, getString(\"tokenValued\")));\n+            } else {\n+                cellItem.add(\n+                        new Label(componentId, getString(\"tokenNotValued\")));\n+            }\n+        }\n+    }\n+\n+    private static class UserAttrColumn extends AbstractColumn<UserTO> {\n+\n+        private static final long serialVersionUID = 2624734332447371372L;\n+\n+        private final String schemaName;\n+\n+        public UserAttrColumn(\n+                final IModel<String> displayModel, final String schemaName) {\n+\n+            super(displayModel,\n+                    schemaName.startsWith(DERIVED_ATTRIBUTE_PREFIX)\n+                    ? schemaName.substring(\n+                    DERIVED_ATTRIBUTE_PREFIX.length(), schemaName.length())\n+                    : schemaName.startsWith(VIRTUAL_ATTRIBUTE_PREFIX)\n+                    ? schemaName.substring(\n+                    VIRTUAL_ATTRIBUTE_PREFIX.length(), schemaName.length())\n+                    : schemaName);\n+\n+            this.schemaName = schemaName;\n+        }\n+\n+        @Override\n+        public void populateItem(\n+                final Item<ICellPopulator<UserTO>> cellItem,\n+                final String componentId,\n+                final IModel<UserTO> rowModel) {\n+\n+            Label label;\n+\n+            List<String> values =\n+                    schemaName.startsWith(DERIVED_ATTRIBUTE_PREFIX)\n+                    ? rowModel.getObject().getDerivedAttributeMap().get(\n+                    schemaName.substring(\n+                    DERIVED_ATTRIBUTE_PREFIX.length(), schemaName.length()))\n+                    : schemaName.startsWith(VIRTUAL_ATTRIBUTE_PREFIX)\n+                    ? rowModel.getObject().getVirtualAttributeMap().get(\n+                    schemaName.substring(\n+                    VIRTUAL_ATTRIBUTE_PREFIX.length(), schemaName.length()))\n+                    : rowModel.getObject().getAttributeMap().get(schemaName);\n+\n+            if (values == null || values.isEmpty()) {\n+                label = new Label(componentId, \"\");\n+            } else {\n+                if (values.size() == 1) {\n+                    label = new Label(componentId, values.iterator().next());\n+                } else {\n+                    label = new Label(componentId, values.toString());\n+                }\n+            }\n+\n+            cellItem.add(label);\n+        }\n+    }\n+\n+    @Override\n+    public void onEvent(IEvent<?> event) {\n+        if (event.getPayload() instanceof EventDataWrapper) {\n+\n+            final EventDataWrapper data = (EventDataWrapper) event.getPayload();\n+            final AjaxRequestTarget target = data.getTarget();\n+            final AjaxFallbackDefaultDataTable<UserTO> table = data.getTable();\n+\n+            getPage().getPageParameters().set(\n+                    table.getId() + Constants.PAGEPARAM_CURRENT_PAGE,\n+                    table.getCurrentPage());\n+\n+            rows = preferences.getPaginatorRows(\n+                    getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+\n+            dataProvider = new UserDataProvider(restClient, rows, filtered);\n+            dataProvider.setSearchCond(filter);\n+\n+            resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n+                    \"resultTable\",\n+                    getColumns(),\n+                    dataProvider,\n+                    rows);\n+\n+            container.replace(resultTable);\n+            target.add(container);\n+        }\n+    }\n+\n+    private void setWindowClosedReloadCallback(\n+            final ModalWindow window,\n+            final AjaxFallbackDefaultDataTable<UserTO> table) {\n+\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                final EventDataWrapper data = new EventDataWrapper();\n+                data.setTable(table);\n+                data.setTarget(target);\n+\n+                send(getParent(), Broadcast.BREADTH, data);\n+\n+                getSession().info(getString(\"operation_succeded\"));\n+                target.add(feedbackPanel);\n+            }\n+        });\n+    }\n+\n+    private class EventDataWrapper {\n+\n+        private AjaxRequestTarget target;\n+\n+        private AjaxFallbackDefaultDataTable<UserTO> table;\n+\n+        public AjaxFallbackDefaultDataTable getTable() {\n+            return table;\n+        }\n+\n+        public void setTable(final AjaxFallbackDefaultDataTable<UserTO> table) {\n+            this.table = table;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public void setTarget(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+    }\n+}"},{"sha":"422048aa0c7d362fbe05c364ab504946cad385c2","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -26,6 +26,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.format.annotation.DateTimeFormat;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n@@ -113,7 +114,7 @@ public void onComponentTag(\n                 \"creationDate\",\n                 new Model<Date>(userTO.getCreationDate()),\n                 false,\n-                UserTO.FORMAT_DATE_ISO);\n+                DateTimeFormat.ISO.DATE_TIME.toString());\n \n         creationDate.setReadOnly(true);\n         add(creationDate);\n@@ -127,7 +128,7 @@ public void onComponentTag(\n                 \"changePwdDate\",\n                 new Model<Date>(userTO.getChangePwdDate()),\n                 false,\n-                UserTO.FORMAT_DATE_ISO);\n+                DateTimeFormat.ISO.DATE_TIME.toString());\n \n         changePwdDate.setReadOnly(true);\n         add(changePwdDate);\n@@ -141,7 +142,7 @@ public void onComponentTag(\n                 \"lastLoginDate\",\n                 new Model<Date>(userTO.getLastLoginDate()),\n                 false,\n-                UserTO.FORMAT_DATE_ISO);\n+                DateTimeFormat.ISO.DATE_TIME.toString());\n \n         lastLoginDate.setReadOnly(true);\n         add(lastLoginDate);\n@@ -181,7 +182,7 @@ public void onComponentTag(\n                 \"tokenExpireTime\",\n                 new Model<Date>(userTO.getTokenExpireTime()),\n                 false,\n-                UserTO.FORMAT_DATE_ISO);\n+                DateTimeFormat.ISO.DATE_TIME.toString());\n \n         tokenExpireTime.setReadOnly(true);\n         add(tokenExpireTime);"},{"sha":"9a3cf601ffbc2d6742ab153bacb4f416df6cde71","filename":"console/src/main/resources/org/syncope/console/pages/DisplayAttributesModalPage.html","status":"modified","additions":47,"deletions":2,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -12,16 +12,61 @@\n  limitations under the License.\n  under the License.\n -->\n+<wicket:head>\n+    <style>\n+        div.group{\n+            width:450px;\n+        }\n+\n+        div.group div{\n+            width:150;\n+            height: 25px;\n+            float:left;\n+        }\n+\n+        div.group div input {\n+            width: 30px;\n+        }\n+\n+        div#attributes-view {\n+            display:  block;\n+            clear:  both;\n+            float: none;\n+            overflow: auto;\n+            margin-top: 0px;\n+            margin-bottom: 20px;\n+            margin-left: 10px;\n+            margin-right: 10px;\n+        }\n+\n+        .submit{\n+            display:  block;\n+            clear:  both;\n+            float: none;\n+            margin-left: 10px;\n+        }\n+    </style>\n+</wicket:head>\n <wicket:extend>\n     <form wicket:id=\"UserAttributesForm\">\n         <div id=\"attributes-view\">\n             <p class=\"ui-widget ui-corner-all ui-widget-header\">\n             <wicket:message key=\"title\"/>\n             </p>\n \n-            <span wicket:id=\"schemaNames\"/>\n+            <span class=\"group\" wicket:id=\"checkgroup\">\n+                <div class=\"group\">\n+                    <div wicket:id=\"schemas\">\n+                        <input type=\"checkbox\" wicket:id=\"check\"/>\n+                        <span wicket:id=\"name\">[schema name]</span>\n+                    </div>\n+                </div>\n+            </span>\n+\n+        </div>\n \n+        <div class=\"submit\">\n+            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n         </div>\n-        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n     </form>\n </wicket:extend>"},{"sha":"a4276beaf29265ce86e49c9001869a69171aed2f","filename":"console/src/main/resources/org/syncope/console/pages/DisplayAttributesModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -1 +1,2 @@\n title=Change display attributes\n+tooMuchSelections=Too many columns to be shown"},{"sha":"3f3b494d4844d3e19ddd236afcabdf229c895c52","filename":"console/src/main/resources/org/syncope/console/pages/DisplayAttributesModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage_it.properties?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -1 +1,2 @@\n title=Scegli attributi da visualizzare\n+tooMuchSelections=Troppe colonne da visualizzare\n\\ No newline at end of file"},{"sha":"a39a2569ad5f0de522d92059b6d3989766834974","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":6,"deletions":39,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -33,7 +33,6 @@\n     </style>\n </wicket:head>\n <wicket:extend>\n-\n     <div id=\"tabs\">\n         <ul>\n             <li class=\"tabs-selected\">\n@@ -49,40 +48,22 @@\n                 </a>\n             </li>\n         </ul>\n+\n         <div id=\"tabs-1\">\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n-                <span wicket:id=\"listContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"listTable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"paginator\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"rowsChooser\"/>\n-                    </form>\n-                </span>\n-            </div>\n-\n-            <div wicket:id=\"editModalWin\">\n-            </div>\n-            <div wicket:id=\"displayAttrsModalWin\">\n+                <span wicket:id=\"listResult\"> [search result] </span>\n+                <div wicket:id=\"editModal\" ></div>\n             </div>\n \n             <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n                wicket:id=\"createLink\">\n                 <wicket:message key=\"create_user\"/>\n             </a>\n-            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-               wicket:id=\"displayAttrsLink\">\n-                <wicket:message key=\"change_attributes\"/>\n-            </a>\n         </div>\n \n         <div id=\"tabs-2\">\n             <form wicket:id=\"searchForm\">\n-                <div wicket:id=\"searchFeedback\"/>\n+                <div wicket:id=\"searchFeedback\"></div>\n                 <div id=\"searchBox\">\n                     <h1><wicket:message key=\"search_title\"/></h1>\n                     <table border=\"0\">\n@@ -147,24 +128,10 @@ <h1><wicket:message key=\"search_title\"/></h1>\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n                 <img src=\"img/search.png\" alt=\"search\"/>\n                 <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n-                <span wicket:id=\"searchResultContainer\">\n-                    <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"searchResultTable\"/>\n-                </span>\n-\n-                <span style=\"float:right\">\n-                    <form wicket:id=\"searchPaginator\" style=\"display:inline\">\n-                        <label><wicket:message key=\"displayRows\"/></label>\n-                        <select class=\"text ui-widget-content ui-corner-all\"\n-                                wicket:id=\"searchRowsChooser\"/>\n-                    </form>\n-                </span>\n-            </div>\n-\n-            <div wicket:id=\"searchEditModalWin\">\n+                <span wicket:id=\"searchResult\"> [search result] </span>\n             </div>\n         </div>\n     </div>\n \n-<wicket:child/>\n+    <wicket:child/>\n </wicket:extend>"},{"sha":"4e776e45e122326c6128f42c7cb66408483a4f85","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResultSetPanel.html","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.html?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -0,0 +1,59 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:head>\n+    <style>\n+        .settingsPos{\n+            position:relative; \n+            top:34px;\n+            left:97%;\n+            width:10px;\n+        }\n+\n+        .settingsPosMultiPage{\n+            position:relative; \n+            top:64px;\n+            left:97%;\n+            width:10px;\n+        }\n+    </style>\n+</wicket:head>\n+<html>\n+    <wicket:panel>\n+\n+        <div wicket:id=\"container\">\n+            <a wicket:id=\"displayAttrsLink\">\n+                <img src=\"img/settings-icon.png\" alt=\"settings icon\" class=\"drop_button\" />\n+            </a>\n+\n+            <table class=\"ui-widget ui-widget-content table-hover\"\n+                   wicket:id=\"resultTable\"/>\n+\n+            <span style=\"float:right\">\n+                <form wicket:id=\"paginator\" style=\"display:inline\">\n+                    <label><wicket:message key=\"displayRows\"/></label>\n+                    <select class=\"text ui-widget-content ui-corner-all\"\n+                            wicket:id=\"rowsChooser\"/>\n+                </form>\n+            </span>\n+        </div>\n+\n+        <div wicket:id=\"editModal\">\n+        </div>\n+\n+        <div wicket:id=\"displayModal\">\n+        </div>\n+\n+    </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"338955e9a2d65c0bd96dfd83a0f6e2ea7a67fa09","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResultSetPanel.properties","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.properties?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -0,0 +1,49 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+search_results_title=search result\n+displayRows=display rows\n+\n+#Tabs\n+tab1=List\n+tab2=Search\n+search=Search\n+firstname=Name\n+surname=Surname\n+userId=User id:\n+create_user=Create new user\n+edit=Edit\n+delete=Delete\n+id=Id\n+status=Status\n+token=Token\n+username=Username\n+change_attributes=Change display attributes\n+tokenValued=Valued\n+tokenNotValued=Not valued\n+#tab2 - USERS SEARCH\n+search_title=Set criteria for user search\n+addAndButton=+ And\n+addOrButton=+ Or\n+dropButton=-\n+search_error=Error:search's format is invalid\n+search_results_title=Search results:\n+search_noResults=No matches found.\n+reset=Reset\n+search_not_value=Not value\n+search_filter_type=Filter type\n+search_filter_name=Filter name\n+search_filter_value=Filter value\n+search_type_cond=Condition\n+showingFrom=Showing\n+showingTo=to\n+showingOf=of"},{"sha":"ef172ff2b177bcc6ee58545af3fa3a6f55d32071","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResultSetPanel_it.properties","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel_it.properties?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -0,0 +1,51 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+search_results_title=search result\n+displayRows=display rows\n+\n+\n+\n+#Tabs\n+tab1=List\n+tab2=Search\n+search=Search\n+firstname=Name\n+surname=Surname\n+userId=User id:\n+create_user=Create new user\n+edit=Edit\n+delete=Delete\n+id=Id\n+status=Status\n+token=Token\n+username=Username\n+change_attributes=Change display attributes\n+tokenValued=Valued\n+tokenNotValued=Not valued\n+#tab2 - USERS SEARCH\n+search_title=Set criteria for user search\n+addAndButton=+ And\n+addOrButton=+ Or\n+dropButton=-\n+search_error=Error:search's format is invalid\n+search_results_title=Search results:\n+search_noResults=No matches found.\n+reset=Reset\n+search_not_value=Not value\n+search_filter_type=Filter type\n+search_filter_name=Filter name\n+search_filter_value=Filter value\n+search_type_cond=Condition\n+showingFrom=Showing\n+showingTo=to\n+showingOf=of\n\\ No newline at end of file"},{"sha":"1da7e05341b5f3dd19a1913e9e6be4878da4a1a6","filename":"console/src/main/webapp/img/settings-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fsettings-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fsettings-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fsettings-icon.png?ref=a2a278194526b909aff05077d570ac38ff99e663"},{"sha":"b4ca9cdf6c219a84e6ef9b71868dbefe1ada65f4","filename":"console/src/test/java/org/syncope/console/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2a278194526b909aff05077d570ac38ff99e663/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=a2a278194526b909aff05077d570ac38ff99e663","patch":"@@ -100,7 +100,7 @@ public void search() {\n         selenium.select(\"//td[4]/select\", \"label=8 otherchild\");\n         selenium.click(\"name=search\");\n         assertEquals(\"1\", selenium.getText(\n-                \"//div[@id=\\\"users-contain\\\"]/span/table/tbody/tr/td/span\"));\n+                \"//div[@id=\\\"users-contain\\\"]/span/div/table/tbody/tr/td/span\"));\n     }\n \n     @Test"}]}