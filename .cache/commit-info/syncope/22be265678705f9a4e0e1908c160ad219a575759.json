{"sha":"22be265678705f9a4e0e1908c160ad219a575759","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIyYmUyNjU2Nzg3MDVmOWE0ZTBlMTkwOGMxNjBhZDIxOWE1NzU3NTk=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T16:16:58Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T16:16:58Z"},"message":"sonar - fix unconfirmed casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332734 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b37bd23b09b9a2cf8e7d0d6009f4b321b7122a22","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b37bd23b09b9a2cf8e7d0d6009f4b321b7122a22"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/22be265678705f9a4e0e1908c160ad219a575759","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22be265678705f9a4e0e1908c160ad219a575759","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/22be265678705f9a4e0e1908c160ad219a575759","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22be265678705f9a4e0e1908c160ad219a575759/comments","author":null,"committer":null,"parents":[{"sha":"44485769616150be26ea30de13cd0a270d686d4f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44485769616150be26ea30de13cd0a270d686d4f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44485769616150be26ea30de13cd0a270d686d4f"}],"stats":{"total":39,"additions":22,"deletions":17},"files":[{"sha":"5ee92d421868d98882c0321135244a0aeea252a2","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":22,"deletions":17,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22be265678705f9a4e0e1908c160ad219a575759/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22be265678705f9a4e0e1908c160ad219a575759/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=22be265678705f9a4e0e1908c160ad219a575759","patch":"@@ -41,37 +41,43 @@ public class PolicyDataBinder {\n      */\n     public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n         final PolicyTO policyTO;\n+\n+        boolean isGlobal = Boolean.FALSE;\n         switch (policy.getType()) {\n             case GLOBAL_PASSWORD:\n-                policyTO = new PasswordPolicyTO(true);\n-                ((PasswordPolicyTO) policyTO).setSpecification((PasswordPolicySpec) policy.getSpecification());\n-                break;\n+            case GLOBAL_ACCOUNT:\n+            case GLOBAL_SYNC:\n+                isGlobal = Boolean.TRUE;\n+            default:\n+        }\n \n+        switch (policy.getType()) {\n+            case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                policyTO = new PasswordPolicyTO();\n+                if (!(policy.getSpecification() instanceof PasswordPolicySpec)) {\n+                    throw new ClassCastException(\"policy is expected to be typed PasswordPolicySpec: \" + policy.getSpecification().getClass().getName());\n+                }\n+                policyTO = new PasswordPolicyTO(isGlobal);\n                 ((PasswordPolicyTO) policyTO).setSpecification((PasswordPolicySpec) policy.getSpecification());\n                 break;\n \n             case GLOBAL_ACCOUNT:\n-                policyTO = new AccountPolicyTO(true);\n-                ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) policy.getSpecification());\n-                break;\n-\n             case ACCOUNT:\n-                policyTO = new AccountPolicyTO();\n+                if (!(policy.getSpecification() instanceof AccountPolicySpec)) {\n+                    throw new ClassCastException(\"policy is expected to be typed AccountPolicySpec: \" + policy.getSpecification().getClass().getName());\n+                }\n+                policyTO = new AccountPolicyTO(isGlobal);\n                 ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) policy.getSpecification());\n                 break;\n \n             case GLOBAL_SYNC:\n-                policyTO = new SyncPolicyTO(true);\n-                ((SyncPolicyTO) policyTO).setSpecification((SyncPolicySpec) policy.getSpecification());\n-                break;\n-\n             case SYNC:\n             default:\n-                policyTO = new SyncPolicyTO();\n+                if (!(policy.getSpecification() instanceof SyncPolicySpec)) {\n+                    throw new ClassCastException(\"policy is expected to be typed SyncPolicySpec: \" + policy.getSpecification().getClass().getName());\n+                }\n+                policyTO = new SyncPolicyTO(isGlobal);\n                 ((SyncPolicyTO) policyTO).setSpecification((SyncPolicySpec) policy.getSpecification());\n-\n         }\n \n         policyTO.setId(policy.getId());\n@@ -83,8 +89,7 @@ public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n     public <T extends Policy> T getPolicy(T policy, final PolicyTO policyTO) {\n \n         if (policy != null && policy.getType() != policyTO.getType()) {\n-            throw new IllegalArgumentException(String.format(\"Cannot update %s from %s\", policy.getType(), policyTO\n-                    .getType()));\n+            throw new IllegalArgumentException(String.format(\"Cannot update %s from %s\", policy.getType(), policyTO.getType()));\n         }\n \n         switch (policyTO.getType()) {"}]}