{"sha":"fc5ad54bf23198264a01d72549f9cdd9fa26a768","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZjNWFkNTRiZjIzMTk4MjY0YTAxZDcyNTQ5ZjljZGQ5ZmEyNmE3Njg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-10T14:37:56Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-10T14:37:56Z"},"message":"[SYNCOPE-131] Introducing at any level the concept of attribute template (for roles and memberships)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1531003 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8e00b659c1bef424279d10ad4820374fbf571fab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8e00b659c1bef424279d10ad4820374fbf571fab"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fc5ad54bf23198264a01d72549f9cdd9fa26a768","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc5ad54bf23198264a01d72549f9cdd9fa26a768","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fc5ad54bf23198264a01d72549f9cdd9fa26a768","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc5ad54bf23198264a01d72549f9cdd9fa26a768/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9348877e53462ffb472ea15a6b7e9869d3a00d0a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9348877e53462ffb472ea15a6b7e9869d3a00d0a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9348877e53462ffb472ea15a6b7e9869d3a00d0a"}],"stats":{"total":7676,"additions":4926,"deletions":2750},"files":[{"sha":"1aa9d989187d7281953b3e3c90d494ed5c900b0a","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,6 +20,10 @@\n \r\n public class SyncopeConstants {\r\n \r\n+    public static final String ANONYMOUS_USER = \"anonymous\";\r\n+\r\n+    public static final String ENUM_VALUES_SEPARATOR = \";\";\r\n+\r\n     public static final String[] DATE_PATTERNS = {\r\n         \"yyyy-MM-dd'T'HH:mm:ssZ\",\r\n         \"EEE, dd MMM yyyy HH:mm:ss z\",\r"},{"sha":"2b70b6bb054591e6809075fb78d9657d1de42406","filename":"common/src/main/java/org/apache/syncope/common/mod/AbstractAttributableMod.java","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FAbstractAttributableMod.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -40,36 +40,36 @@ public abstract class AbstractAttributableMod extends AbstractBaseBean {\n \r\n     protected long id;\r\n \r\n-    protected Set<AttributeMod> attributesToBeUpdated;\r\n+    protected Set<AttributeMod> attrsToUpdate;\r\n \r\n-    protected Set<String> attributesToBeRemoved;\r\n+    protected Set<String> attrsToRemove;\r\n \r\n-    protected Set<String> derivedAttributesToBeAdded;\r\n+    protected Set<String> derAttrsToAdd;\r\n \r\n-    protected Set<String> derivedAttributesToBeRemoved;\r\n+    protected Set<String> derAttrsToRemove;\r\n \r\n-    protected Set<AttributeMod> virtualAttributesToBeUpdated;\r\n+    protected Set<AttributeMod> virAttrsToUpdate;\r\n \r\n-    protected Set<String> virtualAttributesToBeRemoved;\r\n+    protected Set<String> virAttrsToRemove;\r\n \r\n-    protected Set<String> resourcesToBeAdded;\r\n+    protected Set<String> resourcesToAdd;\r\n \r\n-    protected Set<String> resourcesToBeRemoved;\r\n+    protected Set<String> resourcesToRemove;\r\n \r\n     /**\r\n      * All attributes are initialized to empty sets.\r\n      */\r\n     public AbstractAttributableMod() {\r\n         super();\r\n \r\n-        attributesToBeUpdated = new HashSet<AttributeMod>();\r\n-        attributesToBeRemoved = new HashSet<String>();\r\n-        derivedAttributesToBeAdded = new HashSet<String>();\r\n-        derivedAttributesToBeRemoved = new HashSet<String>();\r\n-        virtualAttributesToBeUpdated = new HashSet<AttributeMod>();\r\n-        virtualAttributesToBeRemoved = new HashSet<String>();\r\n-        resourcesToBeAdded = new HashSet<String>();\r\n-        resourcesToBeRemoved = new HashSet<String>();\r\n+        attrsToUpdate = new HashSet<AttributeMod>();\r\n+        attrsToRemove = new HashSet<String>();\r\n+        derAttrsToAdd = new HashSet<String>();\r\n+        derAttrsToRemove = new HashSet<String>();\r\n+        virAttrsToUpdate = new HashSet<AttributeMod>();\r\n+        virAttrsToRemove = new HashSet<String>();\r\n+        resourcesToAdd = new HashSet<String>();\r\n+        resourcesToRemove = new HashSet<String>();\r\n     }\r\n \r\n     public long getId() {\r\n@@ -80,69 +80,69 @@ public void setId(final long id) {\n         this.id = id;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"attributesToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"attributesToRemove\")\r\n     @XmlElement(name = \"attribute\")\r\n-    @JsonProperty(\"attributesToBeRemoved\")\r\n-    public Set<String> getAttributesToBeRemoved() {\r\n-        return attributesToBeRemoved;\r\n+    @JsonProperty(\"attributesToRemove\")\r\n+    public Set<String> getAttrsToRemove() {\r\n+        return attrsToRemove;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"attributesToBeUpdated\")\r\n+    @XmlElementWrapper(name = \"attributesToUpdate\")\r\n     @XmlElement(name = \"attributeMod\")\r\n-    @JsonProperty(\"attributesToBeUpdated\")\r\n-    public Set<AttributeMod> getAttributesToBeUpdated() {\r\n-        return attributesToBeUpdated;\r\n+    @JsonProperty(\"attributesToUpdate\")\r\n+    public Set<AttributeMod> getAttrsToUpdate() {\r\n+        return attrsToUpdate;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"derivedAttributesToBeAdded\")\r\n-    @XmlElement(name = \"attributeName\")\r\n-    @JsonProperty(\"derivedAttributesToBeAdded\")\r\n-    public Set<String> getDerivedAttributesToBeAdded() {\r\n-        return derivedAttributesToBeAdded;\r\n+    @XmlElementWrapper(name = \"derAttrsToAdd\")\r\n+    @XmlElement(name = \"attribute\")\r\n+    @JsonProperty(\"derAttrsToAdd\")\r\n+    public Set<String> getDerAttrsToAdd() {\r\n+        return derAttrsToAdd;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"derivedAttributesToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"derAttrsToRemove\")\r\n     @XmlElement(name = \"attribute\")\r\n-    @JsonProperty(\"derivedAttributesToBeRemoved\")\r\n-    public Set<String> getDerivedAttributesToBeRemoved() {\r\n-        return derivedAttributesToBeRemoved;\r\n+    @JsonProperty(\"derAttrsToRemove\")\r\n+    public Set<String> getDerAttrsToRemove() {\r\n+        return derAttrsToRemove;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"virtualAttributesToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"virAttrsToRemove\")\r\n     @XmlElement(name = \"attribute\")\r\n-    @JsonProperty(\"virtualAttributesToBeRemoved\")\r\n-    public Set<String> getVirtualAttributesToBeRemoved() {\r\n-        return virtualAttributesToBeRemoved;\r\n+    @JsonProperty(\"virAttrsToRemove\")\r\n+    public Set<String> getVirAttrsToRemove() {\r\n+        return virAttrsToRemove;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"virtualAttributesToBeUpdated\")\r\n+    @XmlElementWrapper(name = \"virAttrsToUpdate\")\r\n     @XmlElement(name = \"attribute\")\r\n-    @JsonProperty(\"virtualAttributesToBeUpdated\")\r\n-    public Set<AttributeMod> getVirtualAttributesToBeUpdated() {\r\n-        return virtualAttributesToBeUpdated;\r\n+    @JsonProperty(\"virAttrsToUpdate\")\r\n+    public Set<AttributeMod> getVirAttrsToUpdate() {\r\n+        return virAttrsToUpdate;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n+    @XmlElementWrapper(name = \"resourcesToAdd\")\r\n     @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToBeAdded\")\r\n-    public Set<String> getResourcesToBeAdded() {\r\n-        return resourcesToBeAdded;\r\n+    @JsonProperty(\"resourcesToAdd\")\r\n+    public Set<String> getResourcesToAdd() {\r\n+        return resourcesToAdd;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"resourcesToRemove\")\r\n     @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToBeRemoved\")\r\n-    public Set<String> getResourcesToBeRemoved() {\r\n-        return resourcesToBeRemoved;\r\n+    @JsonProperty(\"resourcesToRemove\")\r\n+    public Set<String> getResourcesToRemove() {\r\n+        return resourcesToRemove;\r\n     }\r\n \r\n     /**\r\n      * @return true is all backing Sets are empty.\r\n      */\r\n     public boolean isEmpty() {\r\n-        return attributesToBeUpdated.isEmpty() && attributesToBeRemoved.isEmpty()\r\n-                && derivedAttributesToBeAdded.isEmpty() && derivedAttributesToBeRemoved.isEmpty()\r\n-                && virtualAttributesToBeUpdated.isEmpty() && virtualAttributesToBeRemoved.isEmpty()\r\n-                && resourcesToBeAdded.isEmpty() && resourcesToBeRemoved.isEmpty();\r\n+        return attrsToUpdate.isEmpty() && attrsToRemove.isEmpty()\r\n+                && derAttrsToAdd.isEmpty() && derAttrsToRemove.isEmpty()\r\n+                && virAttrsToUpdate.isEmpty() && virAttrsToRemove.isEmpty()\r\n+                && resourcesToAdd.isEmpty() && resourcesToRemove.isEmpty();\r\n     }\r\n }\r"},{"sha":"cc55a11bc43ff9258e05d6a806f9d572653a6d77","filename":"common/src/main/java/org/apache/syncope/common/mod/MembershipMod.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FMembershipMod.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -44,19 +44,19 @@ public void setRole(long role) {\n         this.role = role;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToBeAdded\")\r\n+    @XmlElementWrapper(name = \"resourcesToAdd\")\r\n     @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToBeAdded\")\r\n+    @JsonProperty(\"resourcesToAdd\")\r\n     @Override\r\n-    public Set<String> getResourcesToBeAdded() {\r\n+    public Set<String> getResourcesToAdd() {\r\n         return Collections.emptySet();\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"resourcesToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"resourcesToRemove\")\r\n     @XmlElement(name = \"resource\")\r\n-    @JsonProperty(\"resourcesToBeRemoved\")\r\n+    @JsonProperty(\"resourcesToRemove\")\r\n     @Override\r\n-    public Set<String> getResourcesToBeRemoved() {\r\n+    public Set<String> getResourcesToRemove() {\r\n         return Collections.emptySet();\r\n     }\r\n \r"},{"sha":"5feeb28a6724d5c85ad2ec9892ae51831c5ed6de","filename":"common/src/main/java/org/apache/syncope/common/mod/RoleMod.java","status":"modified","additions":147,"deletions":20,"changes":167,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FRoleMod.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -42,20 +42,46 @@ public class RoleMod extends AbstractAttributableMod {\n \r\n     private Boolean inheritOwner;\r\n \r\n-    private Boolean inheritAttributes;\r\n+    private Boolean inheritTemplates;\r\n \r\n-    private Boolean inheritDerivedAttributes;\r\n+    private Boolean inheritAttrs;\r\n \r\n-    private Boolean inheritVirtualAttributes;\r\n+    private Boolean inheritDerAttrs;\r\n+\r\n+    private Boolean inheritVirAttrs;\r\n \r\n     private Boolean inheritAccountPolicy;\r\n \r\n     private Boolean inheritPasswordPolicy;\r\n \r\n     private boolean modEntitlements;\r\n-    \r\n+\r\n     private List<String> entitlements = new ArrayList<String>();\r\n \r\n+    private boolean modRAttrTemplates;\r\n+\r\n+    private List<String> rAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private boolean modRDerAttrTemplates;\r\n+\r\n+    private List<String> rDerAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private boolean modRVirAttrTemplates;\r\n+\r\n+    private List<String> rVirAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private boolean modMAttrTemplates;\r\n+\r\n+    private List<String> mAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private boolean modMDerAttrTemplates;\r\n+\r\n+    private List<String> mDerAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private boolean modMVirAttrTemplates;\r\n+\r\n+    private List<String> mVirAttrTemplates = new ArrayList<String>();\r\n+\r\n     private ReferenceMod passwordPolicy;\r\n \r\n     private ReferenceMod accountPolicy;\r\n@@ -92,28 +118,36 @@ public void setInheritOwner(Boolean inheritOwner) {\n         this.inheritOwner = inheritOwner;\r\n     }\r\n \r\n-    public Boolean getInheritAttributes() {\r\n-        return inheritAttributes;\r\n+    public Boolean getInheritTemplates() {\r\n+        return inheritTemplates;\r\n     }\r\n \r\n-    public void setInheritAttributes(final Boolean inheritAttributes) {\r\n-        this.inheritAttributes = inheritAttributes;\r\n+    public void setInheritTemplates(final Boolean inheritTemplates) {\r\n+        this.inheritTemplates = inheritTemplates;\r\n     }\r\n \r\n-    public Boolean getInheritDerivedAttributes() {\r\n-        return inheritDerivedAttributes;\r\n+    public Boolean getInheritAttrs() {\r\n+        return inheritAttrs;\r\n     }\r\n \r\n-    public void setInheritDerivedAttributes(final Boolean inheritDerivedAttributes) {\r\n-        this.inheritDerivedAttributes = inheritDerivedAttributes;\r\n+    public void setInheritAttributes(final Boolean inheritAttrs) {\r\n+        this.inheritAttrs = inheritAttrs;\r\n     }\r\n \r\n-    public Boolean getInheritVirtualAttributes() {\r\n-        return inheritVirtualAttributes;\r\n+    public Boolean getInheritDerAttrs() {\r\n+        return inheritDerAttrs;\r\n     }\r\n \r\n-    public void setInheritVirtualAttributes(final Boolean inheritVirtualAttributes) {\r\n-        this.inheritVirtualAttributes = inheritVirtualAttributes;\r\n+    public void setInheritDerAttrs(final Boolean inheritDerAttrs) {\r\n+        this.inheritDerAttrs = inheritDerAttrs;\r\n+    }\r\n+\r\n+    public Boolean getInheritVirAttrs() {\r\n+        return inheritVirAttrs;\r\n+    }\r\n+\r\n+    public void setInheritVirAttrs(final Boolean inheritVirAttrs) {\r\n+        this.inheritVirAttrs = inheritVirAttrs;\r\n     }\r\n \r\n     public boolean isModEntitlements() {\r\n@@ -122,7 +156,7 @@ public boolean isModEntitlements() {\n \r\n     public void setModEntitlements(final boolean modEntitlements) {\r\n         this.modEntitlements = modEntitlements;\r\n-    }    \r\n+    }\r\n \r\n     @XmlElementWrapper(name = \"entitlements\")\r\n     @XmlElement(name = \"entitlement\")\r\n@@ -131,6 +165,96 @@ public List<String> getEntitlements() {\n         return entitlements;\r\n     }\r\n \r\n+    public boolean isModRAttrTemplates() {\r\n+        return modRAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModRAttrTemplates(final boolean modRAttrTemplates) {\r\n+        this.modRAttrTemplates = modRAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"rAttrTemplates\")\r\n+    @XmlElement(name = \"rAttrTemplate\")\r\n+    @JsonProperty(\"rAttrTemplates\")\r\n+    public List<String> getRAttrTemplates() {\r\n+        return rAttrTemplates;\r\n+    }\r\n+\r\n+    public boolean isModRDerAttrTemplates() {\r\n+        return modRDerAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModRDerAttrTemplates(final boolean modRDerAttrTemplates) {\r\n+        this.modRDerAttrTemplates = modRDerAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"rDerAttrTemplates\")\r\n+    @XmlElement(name = \"rDerAttrTemplate\")\r\n+    @JsonProperty(\"rDerAttrTemplates\")\r\n+    public List<String> getRDerAttrTemplates() {\r\n+        return rDerAttrTemplates;\r\n+    }\r\n+\r\n+    public boolean isModRVirAttrTemplates() {\r\n+        return modRVirAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModRVirAttrTemplates(final boolean modRVirAttrTemplates) {\r\n+        this.modRVirAttrTemplates = modRVirAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"rVirAttrTemplates\")\r\n+    @XmlElement(name = \"rVirAttrTemplate\")\r\n+    @JsonProperty(\"rVirAttrTemplates\")\r\n+    public List<String> getRVirAttrTemplates() {\r\n+        return rVirAttrTemplates;\r\n+    }\r\n+\r\n+    public boolean isModMAttrTemplates() {\r\n+        return modMAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModMAttrTemplates(final boolean modMAttrTemplates) {\r\n+        this.modMAttrTemplates = modMAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mAttrTemplates\")\r\n+    @XmlElement(name = \"mAttrTemplate\")\r\n+    @JsonProperty(\"mAttrTemplates\")\r\n+    public List<String> getMAttrTemplates() {\r\n+        return mAttrTemplates;\r\n+    }\r\n+\r\n+    public boolean isModMDerAttrTemplates() {\r\n+        return modMDerAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModMDerAttrTemplates(final boolean modMDerAttrTemplates) {\r\n+        this.modMDerAttrTemplates = modMDerAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mDerAttrTemplates\")\r\n+    @XmlElement(name = \"mDerAttrTemplate\")\r\n+    @JsonProperty(\"mDerAttrTemplates\")\r\n+    public List<String> getMDerAttrTemplates() {\r\n+        return mDerAttrTemplates;\r\n+    }\r\n+\r\n+    public boolean isModMVirAttrTemplates() {\r\n+        return modMVirAttrTemplates;\r\n+    }\r\n+\r\n+    public void setModMVirAttrTemplates(final boolean modMVirAttrTemplates) {\r\n+        this.modMVirAttrTemplates = modMVirAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mVirAttrTemplates\")\r\n+    @XmlElement(name = \"mVirAttrTemplate\")\r\n+    @JsonProperty(\"mVirAttrTemplates\")\r\n+    public List<String> getMVirAttrTemplates() {\r\n+        return mVirAttrTemplates;\r\n+    }\r\n+\r\n     public ReferenceMod getPasswordPolicy() {\r\n         return passwordPolicy;\r\n     }\r\n@@ -167,8 +291,11 @@ public void setInheritAccountPolicy(final Boolean inheritAccountPolicy) {\n     @Override\r\n     public boolean isEmpty() {\r\n         return super.isEmpty() && name == null && userOwner == null && roleOwner == null\r\n-                && inheritOwner == null && inheritAccountPolicy == null && inheritPasswordPolicy == null\r\n-                && inheritAttributes == null && inheritDerivedAttributes == null && inheritVirtualAttributes == null\r\n-                && accountPolicy == null && passwordPolicy == null && (entitlements == null || entitlements.isEmpty());\r\n+                && inheritTemplates == null && inheritOwner == null\r\n+                && inheritAccountPolicy == null && inheritPasswordPolicy == null\r\n+                && inheritAttrs == null && inheritDerAttrs == null && inheritVirAttrs == null\r\n+                && accountPolicy == null && passwordPolicy == null && entitlements.isEmpty()\r\n+                && rAttrTemplates.isEmpty() && rDerAttrTemplates.isEmpty() && rVirAttrTemplates.isEmpty()\r\n+                && mAttrTemplates.isEmpty() && mDerAttrTemplates.isEmpty() && mVirAttrTemplates.isEmpty();\r\n     }\r\n }\r"},{"sha":"857dc248368f63316572b886d98ffa182f962a42","filename":"common/src/main/java/org/apache/syncope/common/mod/UserMod.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fmod%2FUserMod.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -38,17 +38,17 @@ public class UserMod extends AbstractAttributableMod {\n \r\n     private String username;\r\n \r\n-    private final Set<MembershipMod> membershipsToBeAdded;\r\n+    private final Set<MembershipMod> membershipsToAdd;\r\n \r\n-    private final Set<Long> membershipsToBeRemoved;\r\n+    private final Set<Long> membershipsToRemove;\r\n \r\n     private PropagationRequestTO pwdPropRequest;\r\n \r\n     public UserMod() {\r\n         super();\r\n \r\n-        membershipsToBeAdded = new HashSet<MembershipMod>();\r\n-        membershipsToBeRemoved = new HashSet<Long>();\r\n+        membershipsToAdd = new HashSet<MembershipMod>();\r\n+        membershipsToRemove = new HashSet<Long>();\r\n     }\r\n \r\n     public String getUsername() {\r\n@@ -67,18 +67,18 @@ public void setPassword(final String password) {\n         this.password = password;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"membershipsToBeAdded\")\r\n+    @XmlElementWrapper(name = \"membershipsToAdd\")\r\n     @XmlElement(name = \"membership\")\r\n-    @JsonProperty(\"membershipsToBeAdded\")\r\n-    public Set<MembershipMod> getMembershipsToBeAdded() {\r\n-        return membershipsToBeAdded;\r\n+    @JsonProperty(\"membershipsToAdd\")\r\n+    public Set<MembershipMod> getMembershipsToAdd() {\r\n+        return membershipsToAdd;\r\n     }\r\n \r\n-    @XmlElementWrapper(name = \"membershipsToBeRemoved\")\r\n+    @XmlElementWrapper(name = \"membershipsToRemove\")\r\n     @XmlElement(name = \"membership\")\r\n-    @JsonProperty(\"membershipsToBeRemoved\")\r\n-    public Set<Long> getMembershipsToBeRemoved() {\r\n-        return membershipsToBeRemoved;\r\n+    @JsonProperty(\"membershipsToRemove\")\r\n+    public Set<Long> getMembershipsToRemove() {\r\n+        return membershipsToRemove;\r\n     }\r\n \r\n     public PropagationRequestTO getPwdPropRequest() {\r\n@@ -95,8 +95,8 @@ public boolean isEmpty() {\n         return super.isEmpty()\r\n                 && password == null\r\n                 && username == null\r\n-                && membershipsToBeAdded.isEmpty()\r\n-                && membershipsToBeRemoved.isEmpty()\r\n+                && membershipsToAdd.isEmpty()\r\n+                && membershipsToRemove.isEmpty()\r\n                 && pwdPropRequest == null;\r\n     }\r\n }\r"},{"sha":"e392b84d76203456336edd03a496579ed7eeea80","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -38,9 +38,9 @@ public abstract class AbstractAttributableTO extends ConnObjectTO {\n \r\n     private long id;\r\n \r\n-    private List<AttributeTO> derivedAttributes;\r\n+    private List<AttributeTO> derAttrs;\r\n \r\n-    private List<AttributeTO> virtualAttributes;\r\n+    private List<AttributeTO> virAttrs;\r\n \r\n     private Set<String> resources;\r\n \r\n@@ -49,8 +49,8 @@ public abstract class AbstractAttributableTO extends ConnObjectTO {\n     protected AbstractAttributableTO() {\r\n         super();\r\n \r\n-        derivedAttributes = new ArrayList<AttributeTO>();\r\n-        virtualAttributes = new ArrayList<AttributeTO>();\r\n+        derAttrs = new ArrayList<AttributeTO>();\r\n+        virAttrs = new ArrayList<AttributeTO>();\r\n         resources = new HashSet<String>();\r\n         propagationStatusTOs = new ArrayList<PropagationStatusTO>();\r\n     }\r\n@@ -64,14 +64,14 @@ public void setId(final long id) {\n     }\r\n \r\n     @JsonIgnore\r\n-    public Map<String, AttributeTO> getDerivedAttributeMap() {\r\n+    public Map<String, AttributeTO> getDerAttrMap() {\r\n         Map<String, AttributeTO> result;\r\n \r\n-        if (derivedAttributes == null) {\r\n+        if (derAttrs == null) {\r\n             result = Collections.emptyMap();\r\n         } else {\r\n-            result = new HashMap<String, AttributeTO>(derivedAttributes.size());\r\n-            for (AttributeTO attributeTO : derivedAttributes) {\r\n+            result = new HashMap<String, AttributeTO>(derAttrs.size());\r\n+            for (AttributeTO attributeTO : derAttrs) {\r\n                 result.put(attributeTO.getSchema(), attributeTO);\r\n             }\r\n             result = Collections.unmodifiableMap(result);\r\n@@ -81,14 +81,14 @@ public Map<String, AttributeTO> getDerivedAttributeMap() {\n     }\r\n \r\n     @JsonIgnore\r\n-    public Map<String, AttributeTO> getVirtualAttributeMap() {\r\n+    public Map<String, AttributeTO> getVirAttrMap() {\r\n         Map<String, AttributeTO> result;\r\n \r\n-        if (derivedAttributes == null) {\r\n+        if (derAttrs == null) {\r\n             result = Collections.emptyMap();\r\n         } else {\r\n-            result = new HashMap<String, AttributeTO>(virtualAttributes.size());\r\n-            for (AttributeTO attributeTO : virtualAttributes) {\r\n+            result = new HashMap<String, AttributeTO>(virAttrs.size());\r\n+            for (AttributeTO attributeTO : virAttrs) {\r\n                 result.put(attributeTO.getSchema(), attributeTO);\r\n             }\r\n             result = Collections.unmodifiableMap(result);\r\n@@ -100,15 +100,15 @@ public Map<String, AttributeTO> getVirtualAttributeMap() {\n     @XmlElementWrapper(name = \"derivedAttributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"derivedAttributes\")\r\n-    public List<AttributeTO> getDerivedAttributes() {\r\n-        return derivedAttributes;\r\n+    public List<AttributeTO> getDerAttrs() {\r\n+        return derAttrs;\r\n     }\r\n \r\n     @XmlElementWrapper(name = \"virtualAttributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"virtualAttributes\")\r\n-    public List<AttributeTO> getVirtualAttributes() {\r\n-        return virtualAttributes;\r\n+    public List<AttributeTO> getVirAttrs() {\r\n+        return virAttrs;\r\n     }\r\n \r\n     @XmlElementWrapper(name = \"resources\")\r"},{"sha":"6d976e0e17cfd283fab5a2691b9c91b837198dbf","filename":"common/src/main/java/org/apache/syncope/common/to/ConnObjectTO.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnObjectTO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -36,24 +36,24 @@ public class ConnObjectTO extends AbstractSysInfoTO {\n \r\n     private static final long serialVersionUID = 5139554911265442497L;\r\n \r\n-    private List<AttributeTO> attributes = new ArrayList<AttributeTO>();\r\n+    private List<AttributeTO> attrs = new ArrayList<AttributeTO>();\r\n \r\n     @XmlElementWrapper(name = \"attributes\")\r\n     @XmlElement(name = \"attribute\")\r\n     @JsonProperty(\"attributes\")\r\n-    public List<AttributeTO> getAttributes() {\r\n-        return attributes;\r\n+    public List<AttributeTO> getAttrs() {\r\n+        return attrs;\r\n     }\r\n \r\n     @JsonIgnore\r\n-    public Map<String, AttributeTO> getAttributeMap() {\r\n+    public Map<String, AttributeTO> getAttrMap() {\r\n         Map<String, AttributeTO> result;\r\n \r\n-        if (attributes == null) {\r\n+        if (attrs == null) {\r\n             result = Collections.<String, AttributeTO>emptyMap();\r\n         } else {\r\n-            result = new HashMap<String, AttributeTO>(attributes.size());\r\n-            for (AttributeTO attributeTO : attributes) {\r\n+            result = new HashMap<String, AttributeTO>(attrs.size());\r\n+            for (AttributeTO attributeTO : attrs) {\r\n                 result.put(attributeTO.getSchema(), attributeTO);\r\n             }\r\n             result = Collections.<String, AttributeTO>unmodifiableMap(result);\r"},{"sha":"dd480cf06a67fe0bd97262135926d99cb0148c1f","filename":"common/src/main/java/org/apache/syncope/common/to/RoleTO.java","status":"modified","additions":78,"deletions":15,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRoleTO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -45,18 +45,32 @@ public class RoleTO extends AbstractAttributableTO {\n \r\n     private boolean inheritOwner;\r\n \r\n-    private boolean inheritAttributes;\r\n+    private boolean inheritTemplates;\r\n \r\n-    private boolean inheritDerivedAttributes;\r\n+    private boolean inheritAttrs;\r\n \r\n-    private boolean inheritVirtualAttributes;\r\n+    private boolean inheritDerAttrs;\r\n+\r\n+    private boolean inheritVirAttrs;\r\n \r\n     private boolean inheritPasswordPolicy;\r\n \r\n     private boolean inheritAccountPolicy;\r\n \r\n     private final List<String> entitlements = new ArrayList<String>();\r\n \r\n+    private List<String> rAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private List<String> rDerAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private List<String> rVirAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private List<String> mAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private List<String> mDerAttrTemplates = new ArrayList<String>();\r\n+\r\n+    private List<String> mVirAttrTemplates = new ArrayList<String>();\r\n+\r\n     private Long passwordPolicy;\r\n \r\n     private Long accountPolicy;\r\n@@ -101,29 +115,36 @@ public void setInheritOwner(final boolean inheritOwner) {\n         this.inheritOwner = inheritOwner;\r\n     }\r\n \r\n-    public boolean isInheritAttributes() {\r\n-        return inheritAttributes;\r\n+    public boolean isInheritTemplates() {\r\n+        return inheritTemplates;\r\n     }\r\n \r\n-    public void setInheritAttributes(final boolean inheritAttributes) {\r\n-        this.inheritAttributes = inheritAttributes;\r\n+    public void setInheritTemplates(boolean inheritTemplates) {\r\n+        this.inheritTemplates = inheritTemplates;\r\n     }\r\n \r\n-    public boolean isInheritDerivedAttributes() {\r\n-        return inheritDerivedAttributes;\r\n+    public boolean isInheritAttrs() {\r\n+        return inheritAttrs;\r\n     }\r\n \r\n-    public void setInheritDerivedAttributes(final boolean inheritDerivedAttributes) {\r\n+    public void setInheritAttrs(final boolean inheritAttrs) {\r\n+        this.inheritAttrs = inheritAttrs;\r\n+    }\r\n \r\n-        this.inheritDerivedAttributes = inheritDerivedAttributes;\r\n+    public boolean isInheritDerAttrs() {\r\n+        return inheritDerAttrs;\r\n     }\r\n \r\n-    public boolean isInheritVirtualAttributes() {\r\n-        return inheritVirtualAttributes;\r\n+    public void setInheritDerAttrs(final boolean inheritDerAttrs) {\r\n+        this.inheritDerAttrs = inheritDerAttrs;\r\n     }\r\n \r\n-    public void setInheritVirtualAttributes(final boolean inheritVirtualAttributes) {\r\n-        this.inheritVirtualAttributes = inheritVirtualAttributes;\r\n+    public boolean isInheritVirAttrs() {\r\n+        return inheritVirAttrs;\r\n+    }\r\n+\r\n+    public void setInheritVirAttrs(final boolean inheritVirAttrs) {\r\n+        this.inheritVirAttrs = inheritVirAttrs;\r\n     }\r\n \r\n     @XmlElementWrapper(name = \"entitlements\")\r\n@@ -133,6 +154,48 @@ public List<String> getEntitlements() {\n         return entitlements;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"rAttrTemplates\")\r\n+    @XmlElement(name = \"rAttrTemplate\")\r\n+    @JsonProperty(\"rAttrTemplates\")\r\n+    public List<String> getRAttrTemplates() {\r\n+        return rAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"rDerAttrTemplates\")\r\n+    @XmlElement(name = \"rDerAttrTemplate\")\r\n+    @JsonProperty(\"rDerAttrTemplates\")\r\n+    public List<String> getRDerAttrTemplates() {\r\n+        return rDerAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"rVirAttrTemplates\")\r\n+    @XmlElement(name = \"rVirAttrTemplate\")\r\n+    @JsonProperty(\"rVirAttrTemplates\")\r\n+    public List<String> getRVirAttrTemplates() {\r\n+        return rVirAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mAttrTemplates\")\r\n+    @XmlElement(name = \"mAttrTemplate\")\r\n+    @JsonProperty(\"mAttrTemplates\")\r\n+    public List<String> getMAttrTemplates() {\r\n+        return mAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mDerAttrTemplates\")\r\n+    @XmlElement(name = \"mDerAttrTemplate\")\r\n+    @JsonProperty(\"mDerAttrTemplates\")\r\n+    public List<String> getMDerAttrTemplates() {\r\n+        return mDerAttrTemplates;\r\n+    }\r\n+\r\n+    @XmlElementWrapper(name = \"mVirAttrTemplates\")\r\n+    @XmlElement(name = \"mVirAttrTemplate\")\r\n+    @JsonProperty(\"mVirAttrTemplates\")\r\n+    public List<String> getMVirAttrTemplates() {\r\n+        return mVirAttrTemplates;\r\n+    }\r\n+\r\n     public Long getPasswordPolicy() {\r\n         return passwordPolicy;\r\n     }\r"},{"sha":"041c8a906531ddda76dab803ad37278cca012920","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":107,"deletions":50,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -82,9 +82,9 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n \r\n                     if (!mod.isEmpty()) {\r\n                         if (virtuals) {\r\n-                            result.getVirtualAttributesToBeRemoved().add(mod.getSchema());\r\n+                            result.getVirAttrsToRemove().add(mod.getSchema());\r\n                         } else {\r\n-                            result.getAttributesToBeRemoved().add(mod.getSchema());\r\n+                            result.getAttrsToRemove().add(mod.getSchema());\r\n                         }\r\n                     }\r\n                 }\r\n@@ -93,9 +93,9 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n \r\n                 if (!mod.isEmpty()) {\r\n                     if (virtuals) {\r\n-                        result.getVirtualAttributesToBeUpdated().add(mod);\r\n+                        result.getVirAttrsToUpdate().add(mod);\r\n                     } else {\r\n-                        result.getAttributesToBeUpdated().add(mod);\r\n+                        result.getAttrsToUpdate().add(mod);\r\n                     }\r\n                 }\r\n             }\r\n@@ -115,15 +115,15 @@ private static void diff(\n         result.setId(updated.getId());\r\n \r\n         // 2. attributes\r\n-        Map<String, AttributeTO> updatedAttrs = new HashMap<String, AttributeTO>(updated.getAttributeMap());\r\n-        Map<String, AttributeTO> originalAttrs = new HashMap<String, AttributeTO>(original.getAttributeMap());\r\n+        Map<String, AttributeTO> updatedAttrs = new HashMap<String, AttributeTO>(updated.getAttrMap());\r\n+        Map<String, AttributeTO> originalAttrs = new HashMap<String, AttributeTO>(original.getAttrMap());\r\n \r\n         Set<String> originalAttrNames = new HashSet<String>(originalAttrs.keySet());\r\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.getAttributesToBeRemoved().clear();\r\n-            result.getAttributesToBeRemoved().addAll(originalAttrNames);\r\n+            result.getAttrsToRemove().clear();\r\n+            result.getAttrsToRemove().addAll(originalAttrNames);\r\n         }\r\n \r\n         Set<String> emptyUpdatedAttrs = new HashSet<String>();\r\n@@ -135,38 +135,38 @@ private static void diff(\n         }\r\n         for (String emptyUpdatedAttr : emptyUpdatedAttrs) {\r\n             updatedAttrs.remove(emptyUpdatedAttr);\r\n-            result.getAttributesToBeRemoved().add(emptyUpdatedAttr);\r\n+            result.getAttrsToRemove().add(emptyUpdatedAttr);\r\n         }\r\n \r\n         populate(updatedAttrs, originalAttrs, result);\r\n \r\n         // 3. derived attributes\r\n-        updatedAttrs = updated.getDerivedAttributeMap();\r\n-        originalAttrs = original.getDerivedAttributeMap();\r\n+        updatedAttrs = updated.getDerAttrMap();\r\n+        originalAttrs = original.getDerAttrMap();\r\n \r\n         originalAttrNames = new HashSet<String>(originalAttrs.keySet());\r\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.getDerivedAttributesToBeRemoved().clear();\r\n-            result.getDerivedAttributesToBeRemoved().addAll(originalAttrNames);\r\n+            result.getDerAttrsToRemove().clear();\r\n+            result.getDerAttrsToRemove().addAll(originalAttrNames);\r\n         }\r\n \r\n         Set<String> updatedAttrNames = new HashSet<String>(updatedAttrs.keySet());\r\n         updatedAttrNames.removeAll(originalAttrs.keySet());\r\n-        result.getDerivedAttributesToBeAdded().clear();\r\n-        result.getDerivedAttributesToBeAdded().addAll(updatedAttrNames);\r\n+        result.getDerAttrsToAdd().clear();\r\n+        result.getDerAttrsToAdd().addAll(updatedAttrNames);\r\n \r\n         // 4. virtual attributes\r\n-        updatedAttrs = updated.getVirtualAttributeMap();\r\n-        originalAttrs = original.getVirtualAttributeMap();\r\n+        updatedAttrs = updated.getVirAttrMap();\r\n+        originalAttrs = original.getVirAttrMap();\r\n \r\n         originalAttrNames = new HashSet<String>(originalAttrs.keySet());\r\n         originalAttrNames.removeAll(updatedAttrs.keySet());\r\n \r\n         if (!incremental) {\r\n-            result.getVirtualAttributesToBeRemoved().clear();\r\n-            result.getVirtualAttributesToBeRemoved().addAll(originalAttrNames);\r\n+            result.getVirAttrsToRemove().clear();\r\n+            result.getVirAttrsToRemove().addAll(originalAttrNames);\r\n         }\r\n \r\n         populate(updatedAttrs, originalAttrs, result, true);\r\n@@ -176,14 +176,14 @@ private static void diff(\n         Set<String> originalRes = new HashSet<String>(original.getResources());\r\n \r\n         updatedRes.removeAll(originalRes);\r\n-        result.getResourcesToBeAdded().clear();\r\n-        result.getResourcesToBeAdded().addAll(updatedRes);\r\n+        result.getResourcesToAdd().clear();\r\n+        result.getResourcesToAdd().addAll(updatedRes);\r\n \r\n         originalRes.removeAll(updated.getResources());\r\n \r\n         if (!incremental) {\r\n-            result.getResourcesToBeRemoved().clear();\r\n-            result.getResourcesToBeRemoved().addAll(originalRes);\r\n+            result.getResourcesToRemove().clear();\r\n+            result.getResourcesToRemove().addAll(originalRes);\r\n         }\r\n     }\r\n \r\n@@ -232,43 +232,43 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n             if (originalMembs.containsKey(entry.getKey())) {\r\n                 diff(entry.getValue(), originalMembs.get(entry.getKey()), membMod, false);\r\n             } else {\r\n-                for (AttributeTO attr : entry.getValue().getAttributes()) {\r\n+                for (AttributeTO attr : entry.getValue().getAttrs()) {\r\n \r\n                     AttributeMod attrMod = new AttributeMod();\r\n                     attrMod.setSchema(attr.getSchema());\r\n                     attrMod.getValuesToBeAdded().addAll(attr.getValues());\r\n \r\n                     if (!attrMod.isEmpty()) {\r\n-                        membMod.getAttributesToBeUpdated().add(attrMod);\r\n-                        membMod.getAttributesToBeRemoved().add(attrMod.getSchema());\r\n+                        membMod.getAttrsToUpdate().add(attrMod);\r\n+                        membMod.getAttrsToRemove().add(attrMod.getSchema());\r\n                     }\r\n                 }\r\n-                for (AttributeTO attr : entry.getValue().getDerivedAttributes()) {\r\n-                    membMod.getDerivedAttributesToBeAdded().add(attr.getSchema());\r\n+                for (AttributeTO attr : entry.getValue().getDerAttrs()) {\r\n+                    membMod.getDerAttrsToAdd().add(attr.getSchema());\r\n                 }\r\n-                for (AttributeTO attr : entry.getValue().getVirtualAttributes()) {\r\n+                for (AttributeTO attr : entry.getValue().getVirAttrs()) {\r\n                     AttributeMod attrMod = new AttributeMod();\r\n                     attrMod.setSchema(attr.getSchema());\r\n                     attrMod.getValuesToBeAdded().addAll(attr.getValues());\r\n \r\n                     if (!attrMod.isEmpty()) {\r\n-                        membMod.getVirtualAttributesToBeUpdated().add(attrMod);\r\n-                        membMod.getAttributesToBeRemoved().add(attrMod.getSchema());\r\n+                        membMod.getVirAttrsToUpdate().add(attrMod);\r\n+                        membMod.getAttrsToRemove().add(attrMod.getSchema());\r\n                     }\r\n                 }\r\n-                membMod.getResourcesToBeAdded().addAll(entry.getValue().getResources());\r\n+                membMod.getResourcesToAdd().addAll(entry.getValue().getResources());\r\n             }\r\n \r\n             if (!membMod.isEmpty()) {\r\n-                result.getMembershipsToBeAdded().add(membMod);\r\n+                result.getMembershipsToAdd().add(membMod);\r\n             }\r\n         }\r\n \r\n         if (!incremental) {\r\n             Set<Long> originalRoles = new HashSet<Long>(originalMembs.keySet());\r\n             originalRoles.removeAll(updatedMembs.keySet());\r\n             for (Long roleId : originalRoles) {\r\n-                result.getMembershipsToBeRemoved().add(originalMembs.get(roleId).getId());\r\n+                result.getMembershipsToRemove().add(originalMembs.get(roleId).getId());\r\n             }\r\n         }\r\n \r\n@@ -301,11 +301,12 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original, final bo\n \r\n         // 1. inheritance\r\n         result.setInheritOwner(updated.isInheritOwner());\r\n+        result.setInheritTemplates(updated.isInheritTemplates());\r\n         result.setInheritAccountPolicy(updated.isInheritAccountPolicy());\r\n         result.setInheritPasswordPolicy(updated.isInheritPasswordPolicy());\r\n-        result.setInheritAttributes(updated.isInheritAttributes());\r\n-        result.setInheritDerivedAttributes(updated.isInheritDerivedAttributes());\r\n-        result.setInheritVirtualAttributes(updated.isInheritVirtualAttributes());\r\n+        result.setInheritAttributes(updated.isInheritAttrs());\r\n+        result.setInheritDerAttrs(updated.isInheritDerAttrs());\r\n+        result.setInheritVirAttrs(updated.isInheritVirAttrs());\r\n \r\n         // 2. policies\r\n         result.setAccountPolicy(new ReferenceMod(updated.getAccountPolicy()));\r\n@@ -327,7 +328,63 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original, final bo\n             result.getEntitlements().addAll(updated.getEntitlements());\r\n         }\r\n \r\n-        // 5. owner\r\n+        // 5. templates\r\n+        Set<String> updatedTemplates = new HashSet<String>(updated.getRAttrTemplates());\r\n+        Set<String> originalTemplates = new HashSet<String>(original.getRAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModRAttrTemplates(false);\r\n+            result.getRAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModRAttrTemplates(true);\r\n+            result.getRAttrTemplates().addAll(updated.getRAttrTemplates());\r\n+        }\r\n+        updatedTemplates = new HashSet<String>(updated.getRDerAttrTemplates());\r\n+        originalTemplates = new HashSet<String>(original.getRDerAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModRDerAttrTemplates(false);\r\n+            result.getRDerAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModRDerAttrTemplates(true);\r\n+            result.getRDerAttrTemplates().addAll(updated.getRDerAttrTemplates());\r\n+        }\r\n+        updatedTemplates = new HashSet<String>(updated.getRVirAttrTemplates());\r\n+        originalTemplates = new HashSet<String>(original.getRVirAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModRVirAttrTemplates(false);\r\n+            result.getRVirAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModRVirAttrTemplates(true);\r\n+            result.getRVirAttrTemplates().addAll(updated.getRVirAttrTemplates());\r\n+        }\r\n+        updatedTemplates = new HashSet<String>(updated.getMAttrTemplates());\r\n+        originalTemplates = new HashSet<String>(original.getMAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModMAttrTemplates(false);\r\n+            result.getMAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModMAttrTemplates(true);\r\n+            result.getMAttrTemplates().addAll(updated.getMAttrTemplates());\r\n+        }\r\n+        updatedTemplates = new HashSet<String>(updated.getMDerAttrTemplates());\r\n+        originalTemplates = new HashSet<String>(original.getMDerAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModMDerAttrTemplates(false);\r\n+            result.getMDerAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModMDerAttrTemplates(true);\r\n+            result.getMDerAttrTemplates().addAll(updated.getMDerAttrTemplates());\r\n+        }\r\n+        updatedTemplates = new HashSet<String>(updated.getMVirAttrTemplates());\r\n+        originalTemplates = new HashSet<String>(original.getMVirAttrTemplates());\r\n+        if (updatedTemplates.equals(originalTemplates)) {\r\n+            result.setModMVirAttrTemplates(false);\r\n+            result.getMVirAttrTemplates().clear();\r\n+        } else {\r\n+            result.setModMVirAttrTemplates(true);\r\n+            result.getMVirAttrTemplates().addAll(updated.getMVirAttrTemplates());\r\n+        }\r\n+\r\n+        // 6. owner\r\n         result.setUserOwner(new ReferenceMod(updated.getUserOwner()));\r\n         result.setRoleOwner(new ReferenceMod(updated.getRoleOwner()));\r\n \r\n@@ -362,29 +419,29 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n             final K mod, final T result) {\r\n \r\n         // 1. attributes\r\n-        result.getAttributes().addAll(getUpdateValues(to.getAttributeMap(),\r\n-                mod.getAttributesToBeRemoved(), mod.getAttributesToBeUpdated()));\r\n+        result.getAttrs().addAll(getUpdateValues(to.getAttrMap(),\r\n+                mod.getAttrsToRemove(), mod.getAttrsToUpdate()));\r\n \r\n         // 2. derived attributes\r\n-        Map<String, AttributeTO> attrs = to.getDerivedAttributeMap();\r\n-        for (String attrName : mod.getDerivedAttributesToBeRemoved()) {\r\n+        Map<String, AttributeTO> attrs = to.getDerAttrMap();\r\n+        for (String attrName : mod.getDerAttrsToRemove()) {\r\n             attrs.remove(attrName);\r\n         }\r\n-        for (String attrName : mod.getDerivedAttributesToBeAdded()) {\r\n+        for (String attrName : mod.getDerAttrsToAdd()) {\r\n             AttributeTO attrTO = new AttributeTO();\r\n             attrTO.setSchema(attrName);\r\n \r\n             attrs.put(attrName, attrTO);\r\n         }\r\n-        result.getDerivedAttributes().addAll(attrs.values());\r\n+        result.getDerAttrs().addAll(attrs.values());\r\n \r\n         // 3. virtual attributes\r\n-        result.getVirtualAttributes().addAll(getUpdateValues(to.getVirtualAttributeMap(),\r\n-                mod.getVirtualAttributesToBeRemoved(), mod.getVirtualAttributesToBeUpdated()));\r\n+        result.getVirAttrs().addAll(getUpdateValues(to.getVirAttrMap(),\r\n+                mod.getVirAttrsToRemove(), mod.getVirAttrsToUpdate()));\r\n \r\n         // 4. resources\r\n-        result.getResources().removeAll(mod.getResourcesToBeRemoved());\r\n-        result.getResources().addAll(mod.getResourcesToBeAdded());\r\n+        result.getResources().removeAll(mod.getResourcesToRemove());\r\n+        result.getResources().addAll(mod.getResourcesToAdd());\r\n     }\r\n \r\n     public static UserTO apply(final UserTO userTO, final UserMod userMod) {\r\n@@ -405,10 +462,10 @@ public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n         }\r\n         // 3. memberships\r\n         Map<Long, MembershipTO> membs = result.getMembershipMap();\r\n-        for (Long membId : userMod.getMembershipsToBeRemoved()) {\r\n+        for (Long membId : userMod.getMembershipsToRemove()) {\r\n             result.getMemberships().remove(membs.get(membId));\r\n         }\r\n-        for (MembershipMod membMod : userMod.getMembershipsToBeAdded()) {\r\n+        for (MembershipMod membMod : userMod.getMembershipsToAdd()) {\r\n             MembershipTO membTO = new MembershipTO();\r\n             membTO.setRoleId(membMod.getRole());\r\n \r"},{"sha":"5b81c195937df505747864f31fcb77f74be8692a","filename":"console/src/main/java/org/apache/syncope/console/commons/Constants.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.console.commons;\n \n public final class Constants {\n-    \n+\n     public static final String ON_CHANGE = \"onchange\";\n \n     public static final String ON_BLUR = \"onblur\";\n@@ -92,8 +92,6 @@ public final class Constants {\n \n     public static final String PREF_POLICY_PAGINATOR_ROWS = \"policy.paginator.rows\";\n \n-    public static final String ENUM_VALUES_SEPARATOR = \";\";\n-\n     private Constants() {\n         // private constructor for static utility class\n     }"},{"sha":"2d9552e1a2bcd4f24e48d7ad035dab3c22c6299d","filename":"console/src/main/java/org/apache/syncope/console/commons/SortableAttributableProviderComparator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -63,9 +63,9 @@ private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n         public AttrModel(final AbstractAttributableTO attributableTO) {\n             super();\n \n-            this.attrs = attributableTO.getAttributeMap();\n-            this.derAttrs = attributableTO.getDerivedAttributeMap();\n-            this.virAttrs = attributableTO.getVirtualAttributeMap();\n+            this.attrs = attributableTO.getAttrMap();\n+            this.derAttrs = attributableTO.getDerAttrMap();\n+            this.virAttrs = attributableTO.getVirAttrMap();\n         }\n \n         /**"},{"sha":"14c90584bf21bd3fc6019f9f872feaba37df577e","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -153,7 +153,7 @@ public StatusBean getStatusBean(\n     }\n \n     private Boolean isEnabled(final ConnObjectTO objectTO) {\n-        final Map<String, AttributeTO> attributeTOs = objectTO.getAttributeMap();\n+        final Map<String, AttributeTO> attributeTOs = objectTO.getAttrMap();\n \n         final AttributeTO status = attributeTOs.get(ConnIdSpecialAttributeName.ENABLE);\n \n@@ -165,7 +165,7 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n     private String getAccountLink(final ConnObjectTO objectTO) {\n         final Map<String, AttributeTO> attributeTOs = objectTO == null\n                 ? Collections.<String, AttributeTO>emptyMap()\n-                : objectTO.getAttributeMap();\n+                : objectTO.getAttrMap();\n \n         final AttributeTO name = attributeTOs.get(ConnIdSpecialAttributeName.NAME);\n \n@@ -360,7 +360,9 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         return imagePanel;\n     }\n \n-    public static class ConnObjectWrapper {\n+    public static class ConnObjectWrapper implements Serializable {\n+\n+        private static final long serialVersionUID = 9083721948999924299L;\n \n         private final AbstractAttributableTO attributable;\n "},{"sha":"03fe1a397b7eee2b788b18ffcb28d9c8d9b1aa06","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnObjectModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -53,7 +53,7 @@ public ConnObjectModalPage(final ConnObjectTO connObjectTO) {\n \n             @Override\n             protected List<AttributeTO> load() {\n-                List<AttributeTO> attrs = connObjectTO.getAttributes();\n+                List<AttributeTO> attrs = connObjectTO.getAttrs();\n                 Collections.sort(attrs, new Comparator<AttributeTO>() {\n \n                     @Override"},{"sha":"4bcc241c2da706bfeb69d234ffedd45b35be74c6","filename":"console/src/main/java/org/apache/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -89,9 +89,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 try {\n                     if (createFlag) {\n-                        schemaRestClient.createDerivedSchema(kind, schemaTO);\n+                        schemaRestClient.createDerSchema(kind, schemaTO);\n                     } else {\n-                        schemaRestClient.updateDerivedSchema(kind, schemaTO);\n+                        schemaRestClient.updateDerSchema(kind, schemaTO);\n                     }\n \n                     if (pageRef.getPage() instanceof BasePage) {"},{"sha":"3eb0d99253baa924e04a9721f2d5590ec2ba63cd","filename":"console/src/main/java/org/apache/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -61,7 +61,7 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n     private static final int MAX_SELECTIONS = 9;\n \n     private static final String[] ATTRIBUTES_TO_HIDE = {\n-        \"attributes\", \"derivedAttributes\", \"virtualAttributes\", \"memberships\", \"resources\",\n+        \"attrs\", \"derAttrs\", \"virAttrs\", \"memberships\", \"resources\",\n         \"serialVersionUID\", \"password\", \"propagationTOs\"};\n \n     public static final String[] DEFAULT_SELECTION = {\"id\", \"username\", \"status\"};\n@@ -246,7 +246,8 @@ protected void populateItem(ListItem<String> item) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.size()\n+                if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.\n+                        size()\n                         > MAX_SELECTIONS) {\n \n                     error(getString(\"tooManySelections\"));"},{"sha":"41d45dff447bd0f5cf0a2bd75af8acfbc6c198ac","filename":"console/src/main/java/org/apache/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -90,20 +90,20 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", membershipTO, form, templateMode));\n+        form.add(new AttributesPanel(\"attrs\", membershipTO, form, templateMode));\n         form.add(new SysInfoPanel(\"systeminformation\", membershipTO));\n         //--------------------------------\n \n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        form.add(new DerivedAttributesPanel(\"derivedAttributes\", membershipTO));\n+        form.add(new DerivedAttributesPanel(\"derAttrs\", membershipTO));\n         //--------------------------------\n \n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO, templateMode));\n+        form.add(new VirtualAttributesPanel(\"virAttrs\", membershipTO, templateMode));\n         //--------------------------------\n \n         add(form);"},{"sha":"3812d7b486358d9b6fbcfe1b55e1337e5fcf088b","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -274,11 +274,11 @@ private List<String> getSchemaNames(final IntMappingType type) {\n                     break;\n \n                 case UserDerivedSchema:\n-                    result = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+                    result = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n                     break;\n \n                 case UserVirtualSchema:\n-                    result = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+                    result = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n                     break;\n \n                 case Username:"},{"sha":"c7eb22cdef5d857bab1558d9455b2fd2dacd8d9f","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportletConfModalPage.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -292,35 +292,35 @@ protected void populateItem(final ListItem<String> item) {\n                                 break;\n \n                             case UserDerivedSchema:\n-                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+                                choices = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n                                 break;\n \n                             case UserVirtualSchema:\n-                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+                                choices = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n                                 break;\n \n                             case RoleSchema:\n                                 choices = schemaRestClient.getSchemaNames(AttributableType.ROLE);\n                                 break;\n \n                             case RoleDerivedSchema:\n-                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.ROLE);\n+                                choices = schemaRestClient.getDerSchemaNames(AttributableType.ROLE);\n                                 break;\n \n                             case RoleVirtualSchema:\n-                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n+                                choices = schemaRestClient.getVirSchemaNames(AttributableType.ROLE);\n                                 break;\n \n                             case MembershipSchema:\n                                 choices = schemaRestClient.getSchemaNames(AttributableType.MEMBERSHIP);\n                                 break;\n \n                             case MembershipDerivedSchema:\n-                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n+                                choices = schemaRestClient.getDerSchemaNames(AttributableType.MEMBERSHIP);\n                                 break;\n \n                             case MembershipVirtualSchema:\n-                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n+                                choices = schemaRestClient.getVirSchemaNames(AttributableType.MEMBERSHIP);\n                                 break;\n \n                             default:"},{"sha":"96db92769c6861df249f5fb5ea297a7e01f34beb","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -208,12 +208,12 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                         }\n                     });\n                     final FailureMessageModalPage executionFailureMessagePage;\n-                    if (propTO.getFailureReason() != null) {\n-                        executionFailureMessagePage = new FailureMessageModalPage(failureWindow.getContentId(), propTO.\n-                                getFailureReason());\n+                    if (propTO.getFailureReason() == null) {\n+                        executionFailureMessagePage =\n+                                new FailureMessageModalPage(failureWindow.getContentId(), StringUtils.EMPTY);\n                     } else {\n-                        executionFailureMessagePage = new FailureMessageModalPage(failureWindow.getContentId(),\n-                                StringUtils.EMPTY);\n+                        executionFailureMessagePage =\n+                                new FailureMessageModalPage(failureWindow.getContentId(), propTO.getFailureReason());\n                     }\n \n                     failureWindow.setPageCreator(new ModalWindow.PageCreator() {\n@@ -236,7 +236,7 @@ public Page createPage() {\n             fragment.add(propRes);\n         }\n \n-        final AjaxLink close = new IndicatingAjaxLink(\"close\") {\n+        final AjaxLink<Void> close = new IndicatingAjaxLink<Void>(\"close\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -273,14 +273,14 @@ private ListView getConnObjectView(final PropagationStatusTO propTO) {\n         if (before == null) {\n             beforeAttrMap = Collections.<String, AttributeTO>emptyMap();\n         } else {\n-            beforeAttrMap = before.getAttributeMap();\n+            beforeAttrMap = before.getAttrMap();\n         }\n \n         final Map<String, AttributeTO> afterAttrMap;\n         if (after == null) {\n             afterAttrMap = Collections.<String, AttributeTO>emptyMap();\n         } else {\n-            afterAttrMap = after.getAttributeMap();\n+            afterAttrMap = after.getAttrMap();\n         }\n \n         final Set<String> attributes = new HashSet<String>();\n@@ -303,7 +303,7 @@ private ListView getConnObjectView(final PropagationStatusTO propTO) {\n             }\n         }\n \n-        return new ListView(\"attributes\", profile) {\n+        return new ListView(\"attrs\", profile) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n "},{"sha":"9e45f2c18e699d83dd3112580eadfb12cdeb5ec4","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -67,14 +67,11 @@ public enum Mode {\n \n     protected RoleTO originalRoleTO;\n \n-    public RoleModalPage(final ModalWindow window, final RoleTO roleTO) {\n-        this(null, window, roleTO, Mode.ADMIN);\n-    }\n-\n     public RoleModalPage(final PageReference pageRef, final ModalWindow window, final RoleTO roleTO) {\n         this(pageRef, window, roleTO, Mode.ADMIN);\n     }\n \n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n     public RoleModalPage(final PageReference pageRef, final ModalWindow window, final RoleTO roleTO, final Mode mode) {\n         super();\n "},{"sha":"050a266ef7b064aaa8635453ed6051d90e1904fd","filename":"console/src/main/java/org/apache/syncope/console/pages/Roles.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -46,7 +46,7 @@ public class Roles extends BasePage {\n \n     private static final int WIN_HEIGHT = 500;\n \n-    private static final int WIN_WIDTH = 750;\n+    private static final int WIN_WIDTH = 800;\n \n     @SpringBean\n     private RoleRestClient restClient;"},{"sha":"89f8d88d4746fab614512150f6766949ba3c0fe5","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -271,11 +271,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         switch (schemaType) {\n                             case DERIVED:\n-                                restClient.deleteDerivedSchema(attributableType, schemaTO.getName());\n+                                restClient.deleteDerSchema(attributableType, schemaTO.getName());\n                                 break;\n \n                             case VIRTUAL:\n-                                restClient.deleteVirtualSchema(attributableType, schemaTO.getName());\n+                                restClient.deleteVirSchema(attributableType, schemaTO.getName());\n                                 break;\n \n                             default:"},{"sha":"46e660f64fec7beab824cc88be2f48b89476e6fb","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -26,6 +26,7 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.AbstractBaseBean;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n@@ -302,7 +303,7 @@ private String getEnumValuesAsString(final List<String> enumerationValues) {\n         for (String str : enumerationValues) {\n             if (StringUtils.isNotBlank(str)) {\n                 if (builder.length() > 0) {\n-                    builder.append(Constants.ENUM_VALUES_SEPARATOR);\n+                    builder.append(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n                 }\n \n                 builder.append(str.trim());\n@@ -316,7 +317,7 @@ private List<String> getEnumValuesAsList(final String enumerationValues) {\n         final List<String> values = new ArrayList<String>();\n \n         if (StringUtils.isNotBlank(enumerationValues)) {\n-            for (String value : enumerationValues.split(Constants.ENUM_VALUES_SEPARATOR)) {\n+            for (String value : enumerationValues.split(SyncopeConstants.ENUM_VALUES_SEPARATOR)) {\n                 values.add(value.trim());\n             }\n         } else {"},{"sha":"69ee6991dcc9b02dabd00d864c1d67ecc9067c52","filename":"console/src/main/java/org/apache/syncope/console/pages/Tasks.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -203,6 +203,7 @@ public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n             final PageReference pageRef,\n             final BaseRestClient restClient) {\n \n+        @SuppressWarnings(\"unchecked\")\n         final AjaxDataTablePanel<AbstractTaskTO, String> table = new AjaxDataTablePanel<AbstractTaskTO, String>(\n                 \"datatable\",\n                 columns,"},{"sha":"1282bc692fb763102a6832792713ad5ffb9b473e","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -117,19 +117,19 @@ protected Form setupEditPanel() {\n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", userTO, form, mode == Mode.TEMPLATE));\n+        form.add(new AttributesPanel(\"attrs\", userTO, form, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n         // Derived attributes panel\n         //--------------------------------\n-        form.add(new DerivedAttributesPanel(\"derivedAttributes\", userTO));\n+        form.add(new DerivedAttributesPanel(\"derAttrs\", userTO));\n         //--------------------------------\n \n         //--------------------------------\n         // Virtual attributes panel\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO, mode == Mode.TEMPLATE));\n+        form.add(new VirtualAttributesPanel(\"virAttrs\", userTO, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------"},{"sha":"abb38d5360c11723c3747a130f81329fd12751ef","filename":"console/src/main/java/org/apache/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -77,9 +77,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                 VirSchemaTO schemaTO = (VirSchemaTO) form.getDefaultModelObject();\n                 try {\n                     if (createFlag) {\n-                        schemaRestClient.createVirtualSchema(kind, schemaTO);\n+                        schemaRestClient.createVirSchema(kind, schemaTO);\n                     } else {\n-                        schemaRestClient.updateVirtualSchema(kind, schemaTO);\n+                        schemaRestClient.updateVirSchema(kind, schemaTO);\n                     }\n                     if (pageRef.getPage() instanceof BasePage) {\n                         ((BasePage) pageRef.getPage()).setModalResult(true);"},{"sha":"4033cca2698a8806035e97cd1955767394cf6a47","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -59,7 +59,7 @@ public abstract class AbstractSearchPanel extends Panel {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSearchPanel.class);\n \n-    protected static final String[] ATTRIBUTES_NOTINCLUDED = {\"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n+    protected static final String[] ATTRIBUTES_NOTINCLUDED = {\"attrs\", \"derAttrs\", \"virAttrs\",\n         \"serialVersionUID\", \"memberships\", \"entitlements\", \"resources\", \"password\",\n         \"propagationTOs\", \"propagationStatusMap\"};\n "},{"sha":"024f286fb8f7a0e5d672ce0c6c5a9208503fa21d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttrTemplatesPanel.java","status":"added","additions":171,"deletions":0,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages.panels;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SchemaType;\n+import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.commons.SelectChoiceRenderer;\n+import org.apache.syncope.console.rest.RoleRestClient;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.NonI18nPalette;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class AttrTemplatesPanel extends Panel {\n+\n+    public enum Type {\n+\n+        rAttrTemplates,\n+        rDerAttrTemplates,\n+        rVirAttrTemplates,\n+        mAttrTemplates,\n+        mDerAttrTemplates,\n+        mVirAttrTemplates;\n+\n+    }\n+\n+    private static final long serialVersionUID = 1016028222120619000L;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n+    private final RoleTO roleTO;\n+\n+    private final NonI18nPalette<String> rAttrTemplates;\n+\n+    private final NonI18nPalette<String> rDerAttrTemplates;\n+\n+    private final NonI18nPalette<String> rVirAttrTemplates;\n+\n+    public AttrTemplatesPanel(final String id, final RoleTO roleTO) {\n+        super(id);\n+        this.roleTO = roleTO;\n+\n+        rAttrTemplates = buildPalette(Type.rAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.NORMAL));\n+        this.add(rAttrTemplates);\n+        rDerAttrTemplates = buildPalette(Type.rDerAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.DERIVED));\n+        this.add(rDerAttrTemplates);\n+        rVirAttrTemplates = buildPalette(Type.rVirAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.ROLE, SchemaType.VIRTUAL));\n+        this.add(rVirAttrTemplates);\n+\n+        this.add(buildPalette(Type.mAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.MEMBERSHIP, SchemaType.NORMAL)));\n+        this.add(buildPalette(Type.mDerAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.MEMBERSHIP, SchemaType.DERIVED)));\n+        this.add(buildPalette(Type.mVirAttrTemplates,\n+                schemaRestClient.getSchemaNames(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL)));\n+    }\n+\n+    private NonI18nPalette<String> buildPalette(final Type type, final List<String> allSchemas) {\n+        if (allSchemas != null && !allSchemas.isEmpty()) {\n+            Collections.sort(allSchemas);\n+        }\n+        ListModel<String> availableSchemas = new ListModel<String>(allSchemas);\n+\n+        return new NonI18nPalette<String>(type.name(), new PropertyModel<List<String>>(roleTO, type.name()),\n+                availableSchemas, new SelectChoiceRenderer<String>(), 8, false) {\n+\n+            private static final long serialVersionUID = 2295567122085510330L;\n+\n+            @Override\n+            protected Recorder<String> newRecorderComponent() {\n+                final Recorder<String> recorder = super.newRecorderComponent();\n+\n+                switch (type) {\n+                    case rAttrTemplates:\n+                    case rDerAttrTemplates:\n+                    case rVirAttrTemplates:\n+                        recorder.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                            private static final long serialVersionUID = -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(type, target));\n+                            }\n+                        });\n+                        break;\n+\n+                    default:\n+                }\n+\n+                return recorder;\n+            }\n+        };\n+    }\n+\n+    public Collection<String> getSelected(final Type type) {\n+        Collection<String> selected;\n+        switch (type) {\n+            case rAttrTemplates:\n+                selected = this.rAttrTemplates.getModelCollection();\n+                break;\n+\n+            case rDerAttrTemplates:\n+                selected = this.rDerAttrTemplates.getModelCollection();\n+                break;\n+\n+            case rVirAttrTemplates:\n+                selected = this.rVirAttrTemplates.getModelCollection();\n+                break;\n+\n+            default:\n+                selected = Collections.emptyList();\n+        }\n+\n+        return selected;\n+    }\n+\n+    public static class RoleAttrTemplatesChange {\n+\n+        private final Type type;\n+\n+        private final AjaxRequestTarget target;\n+\n+        public RoleAttrTemplatesChange(final Type type, final AjaxRequestTarget target) {\n+            this.type = type;\n+            this.target = target;\n+        }\n+\n+        public Type getType() {\n+            return type;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+}"},{"sha":"4169d1378392f814b8fdd500d6fa7eb2f1298d9f","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":91,"deletions":41,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,24 +19,28 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.ListIterator;\n import java.util.Map;\n+import java.util.Set;\n import java.util.TreeMap;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n import org.apache.syncope.console.markup.html.list.AltListView;\n+import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -46,15 +50,14 @@\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -66,43 +69,37 @@ public class AttributesPanel extends Panel {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    private final boolean templateMode;\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n \n-    public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n-            final boolean templateMode) {\n+    private final AbstractAttributableTO entityTO;\n \n-        super(id);\n-        this.templateMode = templateMode;\n+    private final boolean templateMode;\n \n-        final IModel<Map<String, SchemaTO>> schemas = new LoadableDetachableModel<Map<String, SchemaTO>>() {\n+    private final AttrTemplatesPanel attrTemplates;\n \n-            private static final long serialVersionUID = -2012833443695917883L;\n+    private final Map<String, SchemaTO> schemas = new TreeMap<String, SchemaTO>();\n \n-            @Override\n-            protected Map<String, SchemaTO> load() {\n-                final List<SchemaTO> schemaTOs;\n-                if (entityTO instanceof RoleTO) {\n-                    schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n-                } else if (entityTO instanceof UserTO) {\n-                    schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n-                } else {\n-                    schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n-                }\n+    public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n+            final boolean templateMode) {\n \n-                final Map<String, SchemaTO> schemas = new TreeMap<String, SchemaTO>();\n+        this(id, entityTO, form, templateMode, null);\n+    }\n \n-                for (SchemaTO schemaTO : schemaTOs) {\n-                    schemas.put(schemaTO.getName(), schemaTO);\n-                }\n+    public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n+            final boolean templateMode, final AttrTemplatesPanel attrTemplates) {\n \n-                return schemas;\n-            }\n-        };\n+        super(id);\n+        this.entityTO = entityTO;\n+        this.templateMode = templateMode;\n+        this.attrTemplates = attrTemplates;\n+        this.setOutputMarkupId(true);\n \n-        initEntityData(entityTO, schemas.getObject().values());\n+        setSchemas();\n+        setAttrs();\n \n         final ListView<AttributeTO> attributeView = new AltListView<AttributeTO>(\"schemas\",\n-                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"attributes\")) {\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"attrs\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -122,10 +119,9 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n \n                 item.add(new Label(\"name\", attributeTO.getSchema()));\n \n-                final FieldPanel panel =\n-                        getFieldPanel(schemas.getObject().get(attributeTO.getSchema()), form, attributeTO);\n+                final FieldPanel panel = getFieldPanel(schemas.get(attributeTO.getSchema()), form, attributeTO);\n \n-                if (templateMode || !schemas.getObject().get(attributeTO.getSchema()).isMultivalue()) {\n+                if (templateMode || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n                     item.add(panel);\n                 } else {\n                     item.add(new MultiValueSelectorPanel<String>(\n@@ -137,12 +133,54 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n         add(attributeView);\n     }\n \n-    private void initEntityData(final AbstractAttributableTO entityTO, final Collection<SchemaTO> schemas) {\n+    private void filter(final List<SchemaTO> schemaTOs, final Set<String> allowed) {\n+        for (ListIterator<SchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n+            SchemaTO schema = itor.next();\n+            if (!allowed.contains(schema.getName())) {\n+                itor.remove();\n+            }\n+        }\n+    }\n+\n+    private void setSchemas() {\n+        List<SchemaTO> schemaTOs;\n+        \n+        if (entityTO instanceof RoleTO) {\n+            final RoleTO roleTO = (RoleTO) entityTO;\n+\n+            schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n+            Set<String> allowed;\n+            if (attrTemplates == null) {\n+                allowed = new HashSet<String>(roleTO.getRAttrTemplates());\n+            } else {\n+                allowed = new HashSet<String>(attrTemplates.getSelected(AttrTemplatesPanel.Type.rAttrTemplates));\n+                if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n+                    allowed.addAll(roleRestClient.read(roleTO.getParent()).getRAttrTemplates());\n+                }\n+            }\n+            filter(schemaTOs, allowed);\n+        } else if (entityTO instanceof UserTO) {\n+            schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n+        } else {\n+            schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n+            Set<String> allowed = new HashSet<String>(\n+                    roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMAttrTemplates());\n+            filter(schemaTOs, allowed);\n+        }\n+\n+        schemas.clear();\n+\n+        for (SchemaTO schemaTO : schemaTOs) {\n+            schemas.put(schemaTO.getName(), schemaTO);\n+        }\n+    }\n+\n+    private void setAttrs() {\n         final List<AttributeTO> entityData = new ArrayList<AttributeTO>();\n \n-        final Map<String, AttributeTO> attrMap = entityTO.getAttributeMap();\n+        final Map<String, AttributeTO> attrMap = entityTO.getAttrMap();\n \n-        for (SchemaTO schema : schemas) {\n+        for (SchemaTO schema : schemas.values()) {\n             AttributeTO attributeTO = new AttributeTO();\n             attributeTO.setSchema(schema.getName());\n \n@@ -157,8 +195,8 @@ private void initEntityData(final AbstractAttributableTO entityTO, final Collect\n             entityData.add(attributeTO);\n         }\n \n-        entityTO.getAttributes().clear();\n-        entityTO.getAttributes().addAll(entityData);\n+        entityTO.getAttrs().clear();\n+        entityTO.getAttrs().addAll(entityData);\n     }\n \n     @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n@@ -245,11 +283,11 @@ private Map<String, String> getEnumeratedKeyValues(final SchemaTO schemaTO) {\n \n         final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n                 ? new String[0]\n-                : schemaTO.getEnumerationValues().split(Constants.ENUM_VALUES_SEPARATOR);\n+                : schemaTO.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n \n         final String[] keys = StringUtils.isBlank(schemaTO.getEnumerationKeys())\n                 ? new String[0]\n-                : schemaTO.getEnumerationKeys().split(Constants.ENUM_VALUES_SEPARATOR);\n+                : schemaTO.getEnumerationKeys().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n \n         for (int i = 0; i < values.length; i++) {\n             res.put(values[i].trim(), keys.length > i ? keys[i].trim() : null);\n@@ -263,12 +301,24 @@ private List<String> getEnumeratedValues(final SchemaTO schemaTO) {\n \n         final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n                 ? new String[0]\n-                : schemaTO.getEnumerationValues().split(Constants.ENUM_VALUES_SEPARATOR);\n+                : schemaTO.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n \n         for (String value : values) {\n             res.add(value.trim());\n         }\n \n         return res;\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n+            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rAttrTemplates) {\n+                setSchemas();\n+                setAttrs();\n+                update.getTarget().add(this);\n+            }\n+        }\n+    }\n }"},{"sha":"f7d6539ef66723b19d2891222047ba0e3ab4fbd0","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":50,"deletions":23,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,13 +18,17 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.apache.wicket.Component;\n@@ -34,6 +38,7 @@\n import org.apache.wicket.ajax.attributes.IAjaxCallListener;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n@@ -48,44 +53,57 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class DerivedAttributesPanel extends Panel {\n \n-    /**\n-     * Logger.\n-     */\n-    protected static final Logger LOG = LoggerFactory.getLogger(DerivedAttributesPanel.class);\n-\n     private static final long serialVersionUID = -5387344116983102292L;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n+    private final AttrTemplatesPanel attrTemplates;\n+\n     public <T extends AbstractAttributableTO> DerivedAttributesPanel(final String id, final T entityTO) {\n+        this(id, entityTO, null);\n+    }\n+\n+    public <T extends AbstractAttributableTO> DerivedAttributesPanel(final String id, final T entityTO,\n+            final AttrTemplatesPanel attrTemplates) {\n+\n         super(id);\n+        this.attrTemplates = attrTemplates;\n         setOutputMarkupId(true);\n \n-        final IModel<List<String>> derivedSchemaNames = new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> derSchemas = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                List<String> derivedSchemaNames;\n+                List<String> derSchemaNames;\n+\n                 if (entityTO instanceof RoleTO) {\n-                    derivedSchemaNames = getDerivedSchemaNames(AttributableType.ROLE);\n+                    final RoleTO roleTO = (RoleTO) entityTO;\n+\n+                    if (attrTemplates == null) {\n+                        derSchemaNames = roleTO.getRDerAttrTemplates();\n+                    } else {\n+                        derSchemaNames = new ArrayList<String>(\n+                                attrTemplates.getSelected(AttrTemplatesPanel.Type.rDerAttrTemplates));\n+                        if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n+                            derSchemaNames.addAll(roleRestClient.read(roleTO.getParent()).getRDerAttrTemplates());\n+                        }\n+                    }\n                 } else if (entityTO instanceof UserTO) {\n-                    derivedSchemaNames = getDerivedSchemaNames(AttributableType.USER);\n+                    derSchemaNames = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n                 } else {\n-                    derivedSchemaNames = getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n+                    derSchemaNames = roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMDerAttrTemplates();\n                 }\n-                return derivedSchemaNames;\n-            }\n \n-            private List<String> getDerivedSchemaNames(final AttributableType type) {\n-                return schemaRestClient.getDerivedSchemaNames(type);\n+                return derSchemaNames;\n             }\n         };\n \n@@ -100,7 +118,7 @@ private List<String> getDerivedSchemaNames(final AttributableType type) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                entityTO.getDerivedAttributes().add(new AttributeTO());\n+                entityTO.getDerAttrs().add(new AttributeTO());\n                 target.add(attributesContainer);\n             }\n \n@@ -112,8 +130,8 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n \n-        final ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n-                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derivedAttributes\")) {\n+        ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attrs\",\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derAttrs\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -127,7 +145,7 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        entityTO.getDerivedAttributes().remove(attributeTO);\n+                        entityTO.getDerAttrs().remove(attributeTO);\n                         target.add(attributesContainer);\n                     }\n \n@@ -149,15 +167,14 @@ public CharSequence getPrecondition(final Component component) {\n                 });\n \n                 final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n-                        new PropertyModel<String>(attributeTO, \"schema\"), derivedSchemaNames);\n+                        new PropertyModel<String>(attributeTO, \"schema\"), derSchemas);\n \n                 schemaChoice.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n                     @Override\n-                    protected void onUpdate(final AjaxRequestTarget art) {\n-\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n                         attributeTO.setSchema(schemaChoice.getModelObject());\n                     }\n                 });\n@@ -181,4 +198,14 @@ protected void onUpdate(final AjaxRequestTarget art) {\n \n         attributesContainer.add(attributes);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n+            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rDerAttrTemplates) {\n+                update.getTarget().add(this);\n+            }\n+        }\n+    }\n }"},{"sha":"911a72239c8237215e169dfe9948b19805cf16b7","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -577,13 +577,13 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                 case MembershipDerivedSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getDerivedSchemaNames(type.getAttributableType()));\n+                    toBeUpdated.setChoices(schemaRestClient.getDerSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserVirtualSchema:\n                 case RoleVirtualSchema:\n                 case MembershipVirtualSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getVirtualSchemaNames(type.getAttributableType()));\n+                    toBeUpdated.setChoices(schemaRestClient.getVirSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserId:"},{"sha":"52d9ab2caa63168871b2d124c4e4f63473078594","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleDetailsPanel.java","status":"modified","additions":25,"deletions":5,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,16 +21,21 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n import org.apache.syncope.console.pages.RoleSelectModalPage;\n import org.apache.syncope.console.pages.UserOwnerSelectModalPage;\n+import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.Type;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -109,7 +114,7 @@ public Page createPage() {\n                 }\n             };\n             parentFragment.add(parentSelect);\n-            final IndicatingAjaxLink parentReset = new IndicatingAjaxLink(\"parentReset\") {\n+            final IndicatingAjaxLink<Void> parentReset = new IndicatingAjaxLink<Void>(\"parentReset\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -146,7 +151,7 @@ public void onClick(final AjaxRequestTarget target) {\n         userOwner.setReadOnly(true);\n         userOwner.setOutputMarkupId(true);\n         ownerContainer.add(userOwner);\n-        final IndicatingAjaxLink userOwnerSelect = new IndicatingAjaxLink(\"userOwnerSelect\") {\n+        final IndicatingAjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -165,7 +170,7 @@ public Page createPage() {\n             }\n         };\n         ownerContainer.add(userOwnerSelect);\n-        final IndicatingAjaxLink userOwnerReset = new IndicatingAjaxLink(\"userOwnerReset\") {\n+        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -182,7 +187,7 @@ public void onClick(final AjaxRequestTarget target) {\n         roleOwner.setReadOnly(true);\n         roleOwner.setOutputMarkupId(true);\n         ownerContainer.add(roleOwner);\n-        final IndicatingAjaxLink roleOwnerSelect = new IndicatingAjaxLink(\"roleOwnerSelect\") {\n+        final IndicatingAjaxLink<Void> roleOwnerSelect = new IndicatingAjaxLink<Void>(\"roleOwnerSelect\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -202,7 +207,7 @@ public Page createPage() {\n             }\n         };\n         ownerContainer.add(roleOwnerSelect);\n-        final IndicatingAjaxLink roleOwnerReset = new IndicatingAjaxLink(\"roleOwnerReset\") {\n+        final IndicatingAjaxLink<Void> roleOwnerReset = new IndicatingAjaxLink<Void>(\"roleOwnerReset\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -217,6 +222,21 @@ public void onClick(final AjaxRequestTarget target) {\n         final AjaxCheckBoxPanel inhOwner = new AjaxCheckBoxPanel(\"inheritOwner\", \"inheritOwner\",\n                 new PropertyModel<Boolean>(roleTO, \"inheritOwner\"));\n         this.add(inhOwner);\n+\n+        final AjaxCheckBoxPanel inhTemplates = new AjaxCheckBoxPanel(\"inheritTemplates\", \"inheritTemplates\",\n+                new PropertyModel<Boolean>(roleTO, \"inheritTemplates\"));\n+        inhTemplates.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rAttrTemplates, target));\n+                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rDerAttrTemplates, target));\n+                send(getPage(), Broadcast.BREADTH, new RoleAttrTemplatesChange(Type.rVirAttrTemplates, target));\n+            }\n+        });\n+        this.add(inhTemplates);\n     }\n \n     /**"},{"sha":"df648f6472aebc2ea0618c0483ddc2b4083b01aa","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RolePanel.java","status":"modified","additions":39,"deletions":29,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -31,6 +31,8 @@\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.RoleModalPage;\n import org.apache.syncope.console.rest.AuthRestClient;\n+import org.apache.syncope.console.rest.RoleRestClient;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.wicket.PageReference;\n@@ -47,12 +49,15 @@ public class RolePanel extends Panel {\n     private static final long serialVersionUID = 4216376097320768369L;\n \n     @SpringBean\n-    private AuthRestClient entitlementRestClient;\n+    private AuthRestClient authRestClient;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n \n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n-    private final AjaxPalettePanel<String> entitlementsPalette;\n+    private final AjaxPalettePanel<String> entitlements;\n \n     public static class Builder implements Serializable {\n \n@@ -116,71 +121,76 @@ private RolePanel(final Builder builder) {\n \n         this.add(new SysInfoPanel(\"systeminformation\", builder.roleTO));\n \n+        //--------------------------------\n+        // Attribute templates panel\n+        //--------------------------------\n+        AttrTemplatesPanel attrTemplates = new AttrTemplatesPanel(\"templates\", builder.roleTO);\n+        this.add(attrTemplates);\n+\n         //--------------------------------\n         // Attributes panel\n+        //--------------------------------\n         this.add(new AttributesPanel(\n-                \"attributes\", builder.roleTO, builder.form, builder.mode == RoleModalPage.Mode.TEMPLATE));\n+                \"attrs\", builder.roleTO, builder.form, builder.mode == RoleModalPage.Mode.TEMPLATE, attrTemplates));\n \n-        final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\"inheritAttributes\", \"inheritAttributes\",\n-                new PropertyModel<Boolean>(builder.roleTO, \"inheritAttributes\"));\n+        final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\"inheritAttrs\", \"inheritAttrs\",\n+                new PropertyModel<Boolean>(builder.roleTO, \"inheritAttrs\"));\n         inhAttributes.setOutputMarkupId(true);\n         this.add(inhAttributes);\n         //--------------------------------\n \n         //--------------------------------\n-        // Derived attributes container\n+        // Derived attributes panel\n         //--------------------------------\n-        this.add(new DerivedAttributesPanel(\"derivedAttributes\", builder.roleTO));\n+        this.add(new DerivedAttributesPanel(\"derAttrs\", builder.roleTO, attrTemplates));\n \n-        final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\"inheritDerivedAttributes\",\n-                \"inheritDerivedAttributes\", new PropertyModel<Boolean>(builder.roleTO, \"inheritDerivedAttributes\"));\n-        inhDerivedAttributes.setOutputMarkupId(true);\n+        final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\"inheritDerAttrs\",\n+                \"inheritDerAttrs\", new PropertyModel<Boolean>(builder.roleTO, \"inheritDerAttrs\"));\n         inhDerivedAttributes.setOutputMarkupId(true);\n         this.add(inhDerivedAttributes);\n         //--------------------------------\n \n         //--------------------------------\n-        // Virtual attributes container\n+        // Virtual attributes panel\n         //--------------------------------\n         this.add(new VirtualAttributesPanel(\n-                \"virtualAttributes\", builder.roleTO, builder.mode == RoleModalPage.Mode.TEMPLATE));\n+                \"virAttrs\", builder.roleTO, builder.mode == RoleModalPage.Mode.TEMPLATE, attrTemplates));\n \n-        final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirtualAttributes\",\n-                \"inheritVirtualAttributes\", new PropertyModel<Boolean>(builder.roleTO, \"inheritVirtualAttributes\"));\n-        inhVirtualAttributes.setOutputMarkupId(true);\n+        final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirAttrs\",\n+                \"inheritVirAttrs\", new PropertyModel<Boolean>(builder.roleTO, \"inheritVirAttrs\"));\n         inhVirtualAttributes.setOutputMarkupId(true);\n         this.add(inhVirtualAttributes);\n         //--------------------------------\n \n         //--------------------------------\n-        // Security container\n+        // Resources panel\n         //--------------------------------\n-\n-        this.add(new RoleSecurityPanel(\"security\", builder.roleTO).setOutputMarkupId(true));\n+        this.add(new ResourcesPanel.Builder(\"resources\").attributableTO(builder.roleTO).build().\n+                setOutputMarkupId(true));\n         //--------------------------------\n \n         //--------------------------------\n-        // Resources container\n-        //--------------------------------\n-\n-        this.add(new ResourcesPanel.Builder(\"resources\").attributableTO(builder.roleTO).build()\n-                .setOutputMarkupId(true));\n+        // Entitlements\n         //--------------------------------\n-\n         ListModel<String> selectedEntitlements = new ListModel<String>(builder.roleTO.getEntitlements());\n \n-        List<String> allEntitlements = entitlementRestClient.getAllEntitlements();\n+        List<String> allEntitlements = authRestClient.getAllEntitlements();\n         if (allEntitlements != null && !allEntitlements.isEmpty()) {\n             Collections.sort(allEntitlements);\n         }\n         ListModel<String> availableEntitlements = new ListModel<String>(allEntitlements);\n \n-        entitlementsPalette =\n-                new AjaxPalettePanel<String>(\"entitlementsPalette\", selectedEntitlements, availableEntitlements);\n-        this.add(entitlementsPalette);\n+        entitlements = new AjaxPalettePanel<String>(\"entitlements\", selectedEntitlements, availableEntitlements);\n+        this.add(entitlements);\n+\n+        //--------------------------------\n+        // Security panel\n+        //--------------------------------\n+        this.add(new RoleSecurityPanel(\"security\", builder.roleTO).setOutputMarkupId(true));\n+        //--------------------------------\n     }\n \n     public Collection<String> getSelectedEntitlements() {\n-        return this.entitlementsPalette.getModelCollection();\n+        return this.entitlements.getModelCollection();\n     }\n }"},{"sha":"ba3db95eef39f25ad807f4027e71c0d4936ba9d7","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -264,6 +264,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -292,7 +293,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(paginatorForm);\n \n         // create new user\n-        AjaxLink createLink = new ClearIndicatingAjaxLink(\"createLink\", pageRef) {\n+        AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", pageRef) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"9ee8eaa50cba79e6351702efb9c6603b5cb50165","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -79,8 +79,8 @@ public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id,\n         super(id, filtered, searchCond, callerRef, restClient);\n \n         this.schemaNames = schemaRestClient.getSchemaNames(AttributableType.USER);\n-        this.dSchemaNames = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n-        this.vSchemaNames = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+        this.dSchemaNames = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n+        this.vSchemaNames = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n \n         initResultTable();\n     }"},{"sha":"ffd87d9a50377759c91140896985faf8f928fdfe","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":79,"deletions":28,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,16 +19,22 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.ListIterator;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeMap;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.to.VirSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n+import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -39,6 +45,7 @@\n import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n@@ -61,43 +68,78 @@ public class VirtualAttributesPanel extends Panel {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n+    private final AttrTemplatesPanel attrTemplates;\n+\n+    private final Map<String, VirSchemaTO> schemas = new TreeMap<String, VirSchemaTO>();\n+\n     public <T extends AbstractAttributableTO> VirtualAttributesPanel(final String id, final T entityTO,\n             final boolean templateMode) {\n \n+        this(id, entityTO, templateMode, null);\n+    }\n+\n+    public <T extends AbstractAttributableTO> VirtualAttributesPanel(final String id, final T entityTO,\n+            final boolean templateMode, final AttrTemplatesPanel attrTemplates) {\n+\n         super(id);\n+        this.attrTemplates = attrTemplates;\n+        this.setOutputMarkupId(true);\n \n-        setOutputMarkupId(true);\n+        final IModel<List<String>> virSchemas = new LoadableDetachableModel<List<String>>() {\n \n-        final IModel<Map<String, VirSchemaTO>> schemas =\n-                new LoadableDetachableModel<Map<String, VirSchemaTO>>() {\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-            private static final long serialVersionUID = -5489981430516587774L;\n+            private void filter(final List<VirSchemaTO> schemaTOs, final Set<String> allowed) {\n+                for (ListIterator<VirSchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n+                    VirSchemaTO schema = itor.next();\n+                    if (!allowed.contains(schema.getName())) {\n+                        itor.remove();\n+                    }\n+                }\n+            }\n \n             @Override\n-            protected Map<String, VirSchemaTO> load() {\n-                final List<VirSchemaTO> schemaTOs;\n+            protected List<String> load() {\n+                List<VirSchemaTO> schemaTOs;\n+\n                 if (entityTO instanceof RoleTO) {\n-                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.ROLE);\n+                    final RoleTO roleTO = (RoleTO) entityTO;\n+\n+                    schemaTOs = schemaRestClient.getVirSchemas(AttributableType.ROLE);\n+                    Set<String> allowed;\n+                    if (attrTemplates == null) {\n+                        allowed = new HashSet<String>(roleTO.getRVirAttrTemplates());\n+                    } else {\n+                        allowed = new HashSet<String>(attrTemplates.getSelected(\n+                                AttrTemplatesPanel.Type.rVirAttrTemplates));\n+                        if (roleTO.isInheritTemplates() && roleTO.getParent() != 0) {\n+                            allowed.addAll(roleRestClient.read(roleTO.getParent()).getRVirAttrTemplates());\n+                        }\n+                    }\n+                    filter(schemaTOs, allowed);\n                 } else if (entityTO instanceof UserTO) {\n-                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.USER);\n+                    schemaTOs = schemaRestClient.getVirSchemas(AttributableType.USER);\n                 } else {\n-                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.MEMBERSHIP);\n+                    schemaTOs = schemaRestClient.getVirSchemas(AttributableType.MEMBERSHIP);\n+                    Set<String> allowed = new HashSet<String>(\n+                            roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMVirAttrTemplates());\n+                    filter(schemaTOs, allowed);\n                 }\n \n-                final Map<String, VirSchemaTO> schemas = new HashMap<String, VirSchemaTO>();\n+                schemas.clear();\n \n                 for (VirSchemaTO schemaTO : schemaTOs) {\n                     schemas.put(schemaTO.getName(), schemaTO);\n                 }\n \n-                return schemas;\n+                return new ArrayList<String>(schemas.keySet());\n             }\n         };\n \n-        final List<String> virtualSchemaNames = new ArrayList<String>(schemas.getObject().keySet());\n-\n         final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"virAttrContainer\");\n-\n         attributesContainer.setOutputMarkupId(true);\n         add(attributesContainer);\n \n@@ -107,7 +149,7 @@ protected Map<String, VirSchemaTO> load() {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                entityTO.getVirtualAttributes().add(new AttributeTO());\n+                entityTO.getVirAttrs().add(new AttributeTO());\n                 target.add(attributesContainer);\n             }\n \n@@ -119,12 +161,13 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n \n-        ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n-                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"virtualAttributes\")) {\n+        ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attrs\",\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"virAttrs\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n+            @SuppressWarnings(\"unchecked\")\n             protected void populateItem(final ListItem<AttributeTO> item) {\n                 final AttributeTO attributeTO = item.getModelObject();\n \n@@ -134,7 +177,7 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        entityTO.getVirtualAttributes().add(attributeTO);\n+                        entityTO.getVirAttrs().remove(attributeTO);\n                         target.add(attributesContainer);\n                     }\n \n@@ -160,7 +203,7 @@ public CharSequence getPrecondition(final Component component) {\n                 }\n \n                 if (attributeTO.getSchema() != null) {\n-                    VirSchemaTO attributeSchema = schemas.getObject().get(attributeTO.getSchema());\n+                    VirSchemaTO attributeSchema = schemas.get(attributeTO.getSchema());\n                     if (attributeSchema != null) {\n                         attributeTO.setReadonly(attributeSchema.isReadonly());\n                     }\n@@ -175,12 +218,12 @@ public CharSequence getPrecondition(final Component component) {\n                 } else {\n                     panel = new AjaxTextFieldPanel(\"panel\", \"values\", new Model<String>(null));\n                     panel.setReadOnly(attributeTO.isReadonly());\n-                    multiPanel = new MultiValueSelectorPanel(\"values\", new PropertyModel<List<String>>(attributeTO,\n-                            \"values\"), panel);\n+                    multiPanel = new MultiValueSelectorPanel(\"values\",\n+                            new PropertyModel<List<String>>(attributeTO, \"values\"), panel);\n                 }\n \n                 final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n-                        new PropertyModel<String>(attributeTO, \"schema\"), virtualSchemaNames,\n+                        new PropertyModel<String>(attributeTO, \"schema\"), virSchemas,\n                         new ChoiceRenderer<String>() {\n \n                     private static final long serialVersionUID = 3109256773218160485L;\n@@ -201,13 +244,11 @@ public Object getDisplayValue(final String object) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-\n                         attributeTO.setSchema(schemaChoice.getModelObject());\n \n-                        VirSchemaTO attributeSchema =\n-                                schemas.getObject().get(attributeTO.getSchema());\n-                        if (attributeSchema != null) {\n-                            attributeTO.setReadonly(attributeSchema.isReadonly());\n+                        VirSchemaTO virSchema = schemas.get(attributeTO.getSchema());\n+                        if (virSchema != null) {\n+                            attributeTO.setReadonly(virSchema.isReadonly());\n                             panel.setReadOnly(attributeTO.isReadonly());\n                         }\n \n@@ -241,4 +282,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         attributesContainer.add(attributes);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if ((event.getPayload() instanceof RoleAttrTemplatesChange)) {\n+            final RoleAttrTemplatesChange update = (RoleAttrTemplatesChange) event.getPayload();\n+            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.rVirAttrTemplates) {\n+                update.getTarget().add(this);\n+            }\n+        }\n+    }\n }"},{"sha":"db9c914a69c1168c466a04d5370e702eaa581a6f","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":40,"deletions":29,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -60,7 +60,6 @@ public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrTy\n      *\n      * @return List of schemas.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public List<SchemaTO> getSchemas(final AttributableType type) {\n         List<SchemaTO> schemas = null;\n \n@@ -73,6 +72,21 @@ public List<SchemaTO> getSchemas(final AttributableType type) {\n         return schemas;\n     }\n \n+    public List<String> getSchemaNames(final AttributableType attrType, final SchemaType schemaType) {\n+        final List<String> schemaNames = new ArrayList<String>();\n+\n+        try {\n+            final List<? extends AbstractSchemaTO> schemas = getSchemas(attrType, schemaType);\n+            for (AbstractSchemaTO schemaTO : schemas) {\n+                schemaNames.add(schemaTO.getName());\n+            }\n+        } catch (SyncopeClientCompositeException e) {\n+            LOG.error(\"While getting all user schema names\", e);\n+        }\n+\n+        return schemaNames;\n+    }\n+\n     /**\n      * Get schema names.\n      *\n@@ -82,8 +96,7 @@ public List<String> getSchemaNames(final AttributableType type) {\n         final List<String> schemaNames = new ArrayList<String>();\n \n         try {\n-            @SuppressWarnings(\"unchecked\")\n-            final List<SchemaTO> schemas = getService(SchemaService.class).list(type, SchemaType.NORMAL);\n+            final List<SchemaTO> schemas = getSchemas(type);\n             for (SchemaTO schemaTO : schemas) {\n                 schemaNames.add(schemaTO.getName());\n             }\n@@ -100,39 +113,37 @@ public List<String> getSchemaNames(final AttributableType type) {\n      * @return List of derived schemas.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public List<DerSchemaTO> getDerivedSchemas(final AttributableType type) {\n-\n-        List<DerSchemaTO> userDerivedSchemas = null;\n+    public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n+        List<DerSchemaTO> userDerSchemas = null;\n \n         try {\n-            userDerivedSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n+            userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n         } catch (SyncopeClientCompositeException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n \n-        return userDerivedSchemas;\n+        return userDerSchemas;\n     }\n \n     /**\n      * Get derived schema names.\n      *\n      * @return List of derived schema names.\n      */\n-    public List<String> getDerivedSchemaNames(final AttributableType type) {\n-        final List<String> userDerivedSchemasNames = new ArrayList<String>();\n+    public List<String> getDerSchemaNames(final AttributableType type) {\n+        final List<String> userDerSchemasNames = new ArrayList<String>();\n \n         try {\n-            @SuppressWarnings(\"unchecked\")\n             final List<DerSchemaTO> userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n \n             for (DerSchemaTO schemaTO : userDerSchemas) {\n-                userDerivedSchemasNames.add(schemaTO.getName());\n+                userDerSchemasNames.add(schemaTO.getName());\n             }\n         } catch (SyncopeClientCompositeException e) {\n             LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n-        return userDerivedSchemasNames;\n+        return userDerSchemasNames;\n     }\n \n     /**\n@@ -141,37 +152,37 @@ public List<String> getDerivedSchemaNames(final AttributableType type) {\n      * @return List of derived schemas.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public List<VirSchemaTO> getVirtualSchemas(final AttributableType type) {\n-        List<VirSchemaTO> userVirtualSchemas = null;\n+    public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n+        List<VirSchemaTO> userVirSchemas = null;\n \n         try {\n-            userVirtualSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n+            userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n         } catch (SyncopeClientCompositeException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n \n-        return userVirtualSchemas;\n+        return userVirSchemas;\n     }\n \n     /**\n      * Get virtual schema names.\n      *\n      * @return List of virtual schema names.\n      */\n-    public List<String> getVirtualSchemaNames(final AttributableType type) {\n-        final List<String> userVirtualSchemasNames = new ArrayList<String>();\n+    public List<String> getVirSchemaNames(final AttributableType type) {\n+        final List<String> userVirSchemasNames = new ArrayList<String>();\n \n         try {\n             @SuppressWarnings(\"unchecked\")\n             final List<VirSchemaTO> userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n             for (VirSchemaTO schemaTO : userVirSchemas) {\n-                userVirtualSchemasNames.add(schemaTO.getName());\n+                userVirSchemasNames.add(schemaTO.getName());\n             }\n         } catch (SyncopeClientCompositeException e) {\n             LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n-        return userVirtualSchemasNames;\n+        return userVirSchemasNames;\n     }\n \n     /**\n@@ -226,7 +237,7 @@ public SchemaTO deleteSchema(final AttributableType type, final String name) {\n      *\n      * @param schemaTO\n      */\n-    public void createDerivedSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n+    public void createDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n         getService(SchemaService.class).create(type, SchemaType.DERIVED, schemaTO);\n     }\n \n@@ -235,17 +246,17 @@ public void createDerivedSchema(final AttributableType type, final DerSchemaTO s\n      *\n      * @param schemaTO\n      */\n-    public void createVirtualSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n+    public void createVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n         getService(SchemaService.class).create(type, SchemaType.VIRTUAL, schemaTO);\n     }\n \n     /**\n      * Load an already existent user derived schema by its name.\n      *\n      * @param name (e.g.:surname)\n-     * @return DerivedSchemaTO\n+     * @return DerSchemaTO\n      */\n-    public DerSchemaTO readDerivedSchema(final AttributableType type, final String name) {\n+    public DerSchemaTO readDerSchema(final AttributableType type, final String name) {\n         DerSchemaTO derivedSchemaTO = null;\n         try {\n             derivedSchemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n@@ -260,7 +271,7 @@ public DerSchemaTO readDerivedSchema(final AttributableType type, final String n\n      *\n      * @param schemaTO updated\n      */\n-    public void updateDerivedSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n+    public void updateDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n         getService(SchemaService.class).update(type, SchemaType.DERIVED, schemaTO.getName(), schemaTO);\n     }\n \n@@ -269,7 +280,7 @@ public void updateDerivedSchema(final AttributableType type, final DerSchemaTO s\n      *\n      * @param schemaTO updated\n      */\n-    public void updateVirtualSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n+    public void updateVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n         getService(SchemaService.class).update(type, SchemaType.VIRTUAL, schemaTO.getName(), schemaTO);\n     }\n \n@@ -278,7 +289,7 @@ public void updateVirtualSchema(final AttributableType type, final VirSchemaTO s\n      *\n      * @param name (e.g.:surname)\n      */\n-    public DerSchemaTO deleteDerivedSchema(final AttributableType type, final String name) {\n+    public DerSchemaTO deleteDerSchema(final AttributableType type, final String name) {\n         DerSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n         getService(SchemaService.class).delete(type, SchemaType.DERIVED, name);\n         return schemaTO;\n@@ -289,7 +300,7 @@ public DerSchemaTO deleteDerivedSchema(final AttributableType type, final String\n      *\n      * @param name (e.g.:surname)\n      */\n-    public VirSchemaTO deleteVirtualSchema(final AttributableType type, final String name) {\n+    public VirSchemaTO deleteVirSchema(final AttributableType type, final String name) {\n         VirSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.VIRTUAL, name);\n         getService(SchemaService.class).delete(type, SchemaType.VIRTUAL, name);\n         return schemaTO;"},{"sha":"86852cdb14b43daaa475fe8440459d71997289f7","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -53,22 +53,20 @@ public void populateItem(final Item<ICellPopulator<AbstractAttributableTO>> cell\n \n         switch (schemaType) {\n             case NORMAL:\n-                if (rowModel.getObject().getAttributeMap().containsKey(name)) {\n-                    values = rowModel.getObject().getAttributeMap().get(name).getValues();\n+                if (rowModel.getObject().getAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getAttrMap().get(name).getValues();\n                 }\n                 break;\n \n             case VIRTUAL:\n-                if (rowModel.getObject().getVirtualAttributeMap().containsKey(name)) {\n-\n-                    values = rowModel.getObject().getVirtualAttributeMap().get(name).getValues();\n+                if (rowModel.getObject().getVirAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getVirAttrMap().get(name).getValues();\n                 }\n                 break;\n \n             case DERIVED:\n-                if (rowModel.getObject().getDerivedAttributeMap().containsKey(name)) {\n-\n-                    values = rowModel.getObject().getDerivedAttributeMap().get(name).getValues();\n+                if (rowModel.getObject().getDerAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getDerAttrMap().get(name).getValues();\n                 }\n                 break;\n "},{"sha":"4158de508013360836166c08e561d60c85841622","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,13 +20,13 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.springframework.util.StringUtils;\n \n public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n \n@@ -73,7 +73,7 @@ public FieldPanel<Boolean> setNewModel(final List<Serializable> list) {\n             public Serializable getObject() {\n                 Boolean value = null;\n \n-                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                if (list != null && !list.isEmpty() && StringUtils.isNotBlank(list.get(0).toString())) {\n                     value = \"true\".equalsIgnoreCase(list.get(0).toString());\n                 }\n \n@@ -82,7 +82,7 @@ public Serializable getObject() {\n \n             @Override\n             public void setObject(final Serializable object) {\n-                if (object != null && object instanceof Boolean) {\n+                if (object instanceof Boolean) {\n                     list.clear();\n                     list.add(((Boolean) object).toString());\n                 }"},{"sha":"0bc2cc6e2588965e64930da68c43d1d4bc07a4ac","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -31,7 +31,7 @@\n \n     private static final long serialVersionUID = 7738499668258805567L;\n \n-    final Palette<T> palette;\n+    protected final Palette<T> palette;\n \n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n         this(id, model, choices, false);\n@@ -60,7 +60,7 @@ protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<\n     }\n \n     @Override\n-    public AbstractFieldPanel setModelObject(final Serializable object) {\n+    public AjaxPalettePanel<T> setModelObject(final Serializable object) {\n         palette.setDefaultModelObject(object);\n         return this;\n     }"},{"sha":"0f95836daa1c369468276cf8907f22cebe330659","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":26,"deletions":24,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -28,15 +28,15 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-public abstract class FieldPanel<T extends Serializable> extends AbstractFieldPanel<T> {\n+public abstract class FieldPanel<T extends Serializable> extends AbstractFieldPanel<T> implements Cloneable {\n \n     private static final long serialVersionUID = -198988924922541273L;\n \n     protected FormComponent<T> field = null;\n \n-    final protected String id;\n+    protected final String id;\n \n-    final protected String name;\n+    protected final String name;\n \n     protected String title = null;\n \n@@ -58,7 +58,7 @@ public FormComponent<T> getField() {\n         return field;\n     }\n \n-    public FieldPanel setTitle(final String title) {\n+    public FieldPanel<T> setTitle(final String title) {\n         this.title = title;\n         field.add(AttributeModifier.replace(\"title\", title != null\n                 ? title\n@@ -67,33 +67,33 @@ public FieldPanel setTitle(final String title) {\n         return this;\n     }\n \n-    public FieldPanel setStyleSheet(final String classes) {\n+    public FieldPanel<T> setStyleSheet(final String classes) {\n         field.add(AttributeModifier.replace(\"class\", classes != null\n                 ? classes\n                 : \"\"));\n \n         return this;\n     }\n \n-    public FieldPanel setRequired(boolean required) {\n+    public FieldPanel<T> setRequired(boolean required) {\n         field.setRequired(required);\n \n         return this;\n     }\n \n-    public FieldPanel setReadOnly(boolean readOnly) {\n+    public FieldPanel<T> setReadOnly(boolean readOnly) {\n         field.setEnabled(!readOnly);\n \n         return this;\n     }\n \n-    public FieldPanel setNewModel(final IModel<T> model) {\n+    public FieldPanel<T> setNewModel(final IModel<T> model) {\n         field.setModel(model);\n         return this;\n     }\n \n     @Override\n-    public FieldPanel setModelObject(T object) {\n+    public FieldPanel<T> setModelObject(T object) {\n         field.setModelObject(object);\n         return this;\n     }\n@@ -116,36 +116,37 @@ public boolean isReadOnly() {\n      * @param item item to attach.\n      * @return updated FieldPanel object.\n      */\n-    public FieldPanel setNewModel(final ListItem<T> item) {\n-        setNewModel(new Model() {\n+    public FieldPanel<T> setNewModel(final ListItem<T> item) {\n+        setNewModel(new Model<T>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n-            public Serializable getObject() {\n+            public T getObject() {\n                 return item.getModelObject();\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n+            public void setObject(final T object) {\n                 if (object != null && !object.toString().isEmpty()) {\n-                    item.setModelObject((T) object);\n+                    item.setModelObject(object);\n                 }\n             }\n         });\n         return this;\n     }\n \n-    public FieldPanel setNewModel(final List<Serializable> list) {\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    public FieldPanel<T> setNewModel(final List<Serializable> list) {\n         setNewModel(new Model() {\n \n             private static final long serialVersionUID = 1088212074765051906L;\n \n             @Override\n             public Serializable getObject() {\n-                return list != null && !list.isEmpty()\n-                        ? list.get(0)\n-                        : null;\n+                return list == null || list.isEmpty()\n+                        ? null\n+                        : list.get(0);\n             }\n \n             @Override\n@@ -162,11 +163,12 @@ public void setObject(final Serializable object) {\n     }\n \n     @Override\n-    public FieldPanel clone() {\n-        final FieldPanel panel;\n+    @SuppressWarnings(\"unchecked\")\n+    public FieldPanel<T> clone() {\n+        final FieldPanel<T> panel;\n         try {\n-            panel = this.getClass().getConstructor(new Class[]{String.class, String.class, IModel.class})\n-                    .newInstance(id, name, new Model(null));\n+            panel = this.getClass().getConstructor(new Class<?>[] {String.class, String.class, IModel.class})\n+                    .newInstance(id, name, new Model<T>(null));\n         } catch (Exception e) {\n             LOG.error(\"Error cloning field panel\", e);\n             return null;\n@@ -183,7 +185,7 @@ public FieldPanel clone() {\n         return panel;\n     }\n \n-    public FieldPanel addRequiredLabel() {\n+    public FieldPanel<T> addRequiredLabel() {\n         if (!isRequired()) {\n             setRequired(true);\n         }\n@@ -199,7 +201,7 @@ public FieldPanel addRequiredLabel() {\n         return this;\n     }\n \n-    public FieldPanel removeRequiredLabel() {\n+    public FieldPanel<T> removeRequiredLabel() {\n         if (isRequired()) {\n             setRequired(false);\n         }"},{"sha":"a601edf345547c56f64f6d5665dac3ba93731212","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.java","status":"modified","additions":13,"deletions":17,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -51,7 +51,7 @@ public class TreeActionLinkPanel extends Panel {\n     @SpringBean\n     private XMLRolesReader xmlRolesReader;\n \n-    private Fragment fragment;\n+    private final Fragment fragment;\n \n     public TreeActionLinkPanel(final String id, final long idRole, final ModalWindow window,\n             final PageReference pageRef) {\n@@ -61,10 +61,9 @@ public TreeActionLinkPanel(final String id, final long idRole, final ModalWindow\n         fragment = new Fragment(\"menuPanel\", idRole == 0\n                 ? \"fakerootFrag\"\n                 : \"roleFrag\", this);\n-\n         fragment.setOutputMarkupId(true);\n \n-        final AjaxLink createRoleLink = new ClearIndicatingAjaxLink(\"createRoleLink\", pageRef) {\n+        final AjaxLink<Void> createRoleLink = new ClearIndicatingAjaxLink<Void>(\"createRoleLink\", pageRef) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -78,23 +77,22 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public Page createPage() {\n                         RoleTO roleTO = new RoleTO();\n                         roleTO.setParent(idRole);\n-                        RoleModalPage form = new RoleModalPage(pageRef, window, roleTO);\n-                        return form;\n+                        return new RoleModalPage(pageRef, window, roleTO);\n                     }\n                 });\n \n                 window.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\",\n-                \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE,\n+                xmlRolesReader.getAllAllowedRoles(\"Roles\", \"create\"));\n \n         createRoleLink.setOutputMarkupId(true);\n         fragment.add(createRoleLink);\n \n         if (idRole != 0) {\n-            final AjaxLink updateRoleLink = new ClearIndicatingAjaxLink(\"updateRoleLink\", pageRef) {\n+            final AjaxLink<Void> updateRoleLink = new ClearIndicatingAjaxLink<Void>(\"updateRoleLink\", pageRef) {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -106,30 +104,28 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                         @Override\n                         public Page createPage() {\n-                            RoleTO roleTO = restClient.read(idRole);\n-                            RoleModalPage form = new RoleModalPage(pageRef, window, roleTO);\n-                            return form;\n+                            return new RoleModalPage(pageRef, window, restClient.read(idRole));\n                         }\n                     });\n \n                     window.show(target);\n                 }\n             };\n \n-            MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                    \"Roles\", \"read\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE,\n+                    xmlRolesReader.getAllAllowedRoles(\"Roles\", \"read\"));\n \n             updateRoleLink.setOutputMarkupId(true);\n             fragment.add(updateRoleLink);\n \n-            final AjaxLink dropRoleLink = new IndicatingOnConfirmAjaxLink(\"dropRoleLink\", pageRef) {\n+            final AjaxLink<Void> dropRoleLink = new IndicatingOnConfirmAjaxLink<Void>(\"dropRoleLink\", pageRef) {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 protected void onClickInternal(final AjaxRequestTarget target) {\n                     try {\n-                        final RoleTO roleTO = (RoleTO) restClient.delete(idRole);\n+                        final RoleTO roleTO = restClient.delete(idRole);\n \n                         ((Roles) pageRef.getPage()).setModalResult(true);\n \n@@ -151,8 +147,8 @@ public Page createPage() {\n                 }\n             };\n \n-            MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                    \"Roles\", \"delete\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE,\n+                    xmlRolesReader.getAllAllowedRoles(\"Roles\", \"delete\"));\n \n             dropRoleLink.setOutputMarkupId(true);\n             fragment.add(dropRoleLink);"},{"sha":"c56ab2bb5e05e9f1e42bcbd9fd9c6e81c5db9225","filename":"console/src/main/resources/log4j2.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -41,27 +41,27 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.syncope.console\" additivity=\"false\" level=\"INFO\">\n+    <asyncLogger name=\"org.apache.syncope.console\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"INFO\">\n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n     \n-    <root level=\"INFO\">\n+    <root level=\"ERROR\">\n       <appender-ref ref=\"main\"/>\n     </root>\n   "},{"sha":"cb86994facd6574d275e5de0480e72297d1a4b7e","filename":"console/src/main/resources/org/apache/syncope/console/pages/BaseModalPage.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -27,6 +27,7 @@\n     <script type=\"text/javascript\">\n       $(function() {\n         $(\"#tabs\").tabs();\n+        $(\"#attrTemplateTabs\").tabs();\n       });\n     </script>\n "},{"sha":"5ee392a915ff5fc435fcbb55c11b310f6b2e0c19","filename":"console/src/main/resources/org/apache/syncope/console/pages/BasePage.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -42,6 +42,7 @@\n       $(document).ready(function() {\n         $(\"#tabs\").tabs();\n         $(\"#roletabs\").tabs();\n+        $(\"#attrTemplateTabs\").tabs();\n         $(\"#user\").tabs();\n         $(\"#role\").tabs();\n         $(\"#membership\").tabs();"},{"sha":"9af223b7a3c944ed54b5ecd0488458cbff833091","filename":"console/src/main/resources/org/apache/syncope/console/pages/MembershipModalPage.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -28,7 +28,7 @@\n         </ul>\n         <div id=\"tabs-1\">\n           <div id=\"formtable\">\n-            <span wicket:id=\"attributes\">[membership attributes]</span>\n+            <span wicket:id=\"attrs\">[membership attributes]</span>\n             <span wicket:id=\"systeminformation\">[System Information]</span>\n           </div>\n \n@@ -39,11 +39,11 @@\n           </script>\n         </div>\n         <div id=\"tabs-2\">\n-          <span wicket:id=\"derivedAttributes\">[membership derived attributes]</span>\n+          <span wicket:id=\"derAttrs\">[membership derived attributes]</span>\n         </div>\n \n         <div id=\"tabs-3\">\n-          <span wicket:id=\"virtualAttributes\">[membership virtual attributes]</span>\n+          <span wicket:id=\"virAttrs\">[membership virtual attributes]</span>\n         </div>\n       </div>\n       <div style=\"margin: 20px 10px 0\">"},{"sha":"d7672902b80e2d422f9aececcc3bfa7a74bf32ae","filename":"console/src/main/resources/org/apache/syncope/console/pages/MembershipModalPage.properties","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -22,14 +22,14 @@ add=+\n drop=-\n edit=Edit\n delete=Delete\n-derivedAttributes=Derived Attributes\n-derivedAttributeToBeRemoved=Delete\n-derivedAttributeName=Name\n-derivedAttributeValue=Derived value\n+derAttrs=Derived Attributes\n+derAttrToRemove=Delete\n+derAttrName=Name\n+derAttrValue=Derived value\n \n-virtualAttributes=Virtual Attributes\n-virtualAttributeToBeRemoved=Delete\n-virtualAttributeName=Name\n-virtualAttributeValue=Virtual value\n+virAttrs=Virtual Attributes\n+virAttrToRemove=Delete\n+virAttrName=Name\n+virAttrValue=Virtual value\n \n addAttributeBtn=Add"},{"sha":"f442cf4d205e4cf46b74048992fa35edd8b8e48d","filename":"console/src/main/resources/org/apache/syncope/console/pages/MembershipModalPage_it.properties","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -22,14 +22,14 @@ add=+\n drop=-\n edit=Edit\n delete=Rimuovi\n-derivedAttributes=Attributi derivati\n-derivedAttributeToBeRemoved=Elimina\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valore derivato\n+derAttrs=Attributi derivati\n+derAttrToRemove=Elimina\n+derAttrName=Nome\n+derAttrValue=Valore derivato\n \n-virtualAttributes=Attributi virtuali\n-virtualAttributeToBeRemoved=Elimina\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valore virtuale\n+virAttrs=Attributi virtuali\n+virAttrToRemove=Elimina\n+virAttrName=Nome\n+virAttrValue=Valore virtuale\n \n addAttributeBtn=Aggiungi"},{"sha":"66d9cc584837b62ac74cdb997cd4ff0973564e65","filename":"console/src/main/resources/org/apache/syncope/console/pages/MembershipModalPage_pt_BR.properties","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -17,19 +17,19 @@\n tab1=Atributos\n tab2=Atributos Derivados\n tab3=Atributos Virtuais\n-title=Fun\\u00E7\\u00F5es\n+title=Fun\\u00e7\\u00f5es\n add=+\n drop=-\n edit=Alterar\n delete=Excluir\n-derivedAttributes=Atributos Derivados\n-derivedAttributeToBeRemoved=Excluir\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valor Derivado\n+derAttrs=Atributos Derivados\n+derAttrToRemove=Excluir\n+derAttrName=Nome\n+derAttrValue=Valor Derivado\n \n-virtualAttributes=Atributos Virtuais\n-virtualAttributeToBeRemoved=Excluir\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valor Virtual\n+virAttrs=Atributos Virtuais\n+virAttrToRemove=Excluir\n+virAttrName=Nome\n+virAttrValue=Valor Virtual\n \n addAttributeBtn=Adicionar"},{"sha":"5b96fbedcaee22d26b8aac45c7a91b82fad9edfe","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResultStatusModalPage.html","status":"modified","additions":191,"deletions":189,"changes":380,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,209 +16,211 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n-  <style>\n-    div#propagation {\n-      font-size: 8px;\n-      height: auto;\n-      margin-top: 3px;\n-      text-align: left;\n-    }\n-\n-    div#status {\n-      float: left;\n-      height: 25px;\n-      margin-top: 3px;\n-      text-align: center;\n-      width: 8%;\n-    }\n-\n-    div.assignment {\n-      border: 1px solid #DDDDDD;\n-      display: inline-table;\n-      margin-bottom: 20px;\n-      width: 100%;\n-    }\n-\n-    div.assignments {\n-      color: #555555;\n-      display: inline-table;\n-      margin-top: 20px;\n-      width: 100%;\n-    }\n-\n-    div.header {\n-      display: inline-table;\n-      margin: 5px;\n-      width: 98%;\n-    }\n-\n-    div.profile div#row{\n-      display: inline-table;\n-      width:100%;\n-      vertical-align: middle;\n-    }\n-\n-    div.profile {\n-      background-color: #EEEEEE;\n-      color: #555555;\n-      display: inline-table;\n-      margin: 0px 5px 5px 5px;\n-      width: 98%;\n-    }\n-\n-    div#name {\n-      border-bottom: 1px solid #DDDDDD;\n-      display: table-cell;\n-      height: 15px;\n-      width: 220px;\n-      padding: 0px 5px 0px 5px;\n-      vertical-align: middle;\n-    }\n-\n-    div#value {\n-      border-bottom: 1px solid #DDDDDD;\n-      border-left: 1px solid #DDDDDD;\n-      display: table-cell;\n-      height: 15px;\n-      width: 38%;\n-      padding: 0px 5px 0px 5px;\n-      overflow: hidden;\n-      vertical-align: middle;\n-    }\n-\n-    div#resource {\n-      display: table-cell;\n-      width: 220px;\n-      height: 30px;\n-      padding: 10px 0px 5px 0px;\n-    }\n-\n-    div#resource img{\n-      width: 12px;\n-      height: 12px;\n-      position: relative;\n-      left: 3px;\n-      top: 1px;\n-      opacity: 1;\n-    }\n-\n-    div#attrhead {\n-      display: table-cell;\n-      border-left: 1px solid #DDDDDD;\n-      width: 38%;\n-      height: 30px;\n-      padding: 3px 0px 5px 0px;\n-      text-align: center;\n-      vertical-align: middle;\n-      font-size: 11px;\n-    }\n-  </style>\n-</wicket:head>\n-<wicket:extend>\n-\n-  <wicket:fragment wicket:id=\"propagationResultFrag\">\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-    <wicket:message key=\"operationResult\"/>&nbsp;<span wicket:id=\"info\"/>\n-    </p>\n-\n-    <div class=\"assignments\">\n-      <div wicket:id=\"resources\" class=\"assignment\">\n-\n-        <span wicket:id=\"attrhead\">[Attributes head]</span>\n-\n-        <div class=\"profile\">\n-          <span wicket:id=\"attributes\">\n-            <div id=\"row\">\n-              <div id=\"name\">\n-                <span wicket:id=\"attrName\">[Attribute name]</span>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      div#propagation {\n+        font-size: 8px;\n+        height: auto;\n+        margin-top: 3px;\n+        text-align: left;\n+      }\n+\n+      div#status {\n+        float: left;\n+        height: 25px;\n+        margin-top: 3px;\n+        text-align: center;\n+        width: 8%;\n+      }\n+\n+      div.assignment {\n+        border: 1px solid #DDDDDD;\n+        display: inline-table;\n+        margin-bottom: 20px;\n+        width: 100%;\n+      }\n+\n+      div.assignments {\n+        color: #555555;\n+        display: inline-table;\n+        margin-top: 20px;\n+        width: 100%;\n+      }\n+\n+      div.header {\n+        display: inline-table;\n+        margin: 5px;\n+        width: 98%;\n+      }\n+\n+      div.profile div#row{\n+        display: inline-table;\n+        width:100%;\n+        vertical-align: middle;\n+      }\n+\n+      div.profile {\n+        background-color: #EEEEEE;\n+        color: #555555;\n+        display: inline-table;\n+        margin: 0px 5px 5px 5px;\n+        width: 98%;\n+      }\n+\n+      div#name {\n+        border-bottom: 1px solid #DDDDDD;\n+        display: table-cell;\n+        height: 15px;\n+        width: 220px;\n+        padding: 0px 5px 0px 5px;\n+        vertical-align: middle;\n+      }\n+\n+      div#value {\n+        border-bottom: 1px solid #DDDDDD;\n+        border-left: 1px solid #DDDDDD;\n+        display: table-cell;\n+        height: 15px;\n+        width: 38%;\n+        padding: 0px 5px 0px 5px;\n+        overflow: hidden;\n+        vertical-align: middle;\n+      }\n+\n+      div#resource {\n+        display: table-cell;\n+        width: 220px;\n+        height: 30px;\n+        padding: 10px 0px 5px 0px;\n+      }\n+\n+      div#resource img{\n+        width: 12px;\n+        height: 12px;\n+        position: relative;\n+        left: 3px;\n+        top: 1px;\n+        opacity: 1;\n+      }\n+\n+      div#attrhead {\n+        display: table-cell;\n+        border-left: 1px solid #DDDDDD;\n+        width: 38%;\n+        height: 30px;\n+        padding: 3px 0px 5px 0px;\n+        text-align: center;\n+        vertical-align: middle;\n+        font-size: 11px;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+\n+    <wicket:fragment wicket:id=\"propagationResultFrag\">\n+      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <wicket:message key=\"operationResult\"/>&nbsp;<span wicket:id=\"info\"/>\n+      </p>\n+\n+      <div class=\"assignments\">\n+        <div wicket:id=\"resources\" class=\"assignment\">\n+\n+          <span wicket:id=\"attrhead\">[Attributes head]</span>\n+\n+          <div class=\"profile\">\n+            <span wicket:id=\"attrs\">\n+              <div id=\"row\">\n+                <div id=\"name\">\n+                  <span wicket:id=\"attrName\">[Attribute name]</span>\n+                </div>\n+                <div id=\"value\">\n+                  <span wicket:id=\"beforeValue\">[Before value]</span>\n+                </div>\n+                <div id=\"value\">\n+                  <span wicket:id=\"afterValue\">[After value]</span>\n+                </div>\n               </div>\n-              <div id=\"value\">\n-                <span wicket:id=\"beforeValue\">[Before value]</span>\n-              </div>\n-              <div id=\"value\">\n-                <span wicket:id=\"afterValue\">[After value]</span>\n-              </div>\n-            </div>\n-          </span>\n+            </span>\n+          </div>\n         </div>\n       </div>\n-    </div>\n-  </wicket:fragment>\n-\n-  <wicket:fragment wicket:id=\"userRequestResultFrag\">\n-    <p><wicket:message key=\"selfResult\"/></p>\n-  </wicket:fragment>\n-\n-  <wicket:fragment wicket:id=\"remoteStatusFrag\">\n-    <img wicket:id=\"status\"/>\n-  </wicket:fragment>\n-\n-  <wicket:fragment wicket:id=\"attrValueFrag\">\n-    <span wicket:id=\"value\">[After value]</span>\n-  </wicket:fragment>\n-\n-  <wicket:fragment wicket:id=\"attrHeadFrag\">\n-    <div class=\"header alt\">\n-      <div id=\"resource\">\n-        <div>\n-          <span wicket:id=\"resource\">[resource name]</span>\n-          <a wicket:id=\"showFailureWindow\" href=\"#\">\n-            <img wicket:id=\"icon\"/>\n-          </a>\n-         \n-          <div id=\"propagation\">\n-            <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-            &nbsp;\n-            <span wicket:id=\"propagation\">[propagation result]</span>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"userRequestResultFrag\">\n+      <p><wicket:message key=\"selfResult\"/></p>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"remoteStatusFrag\">\n+      <img wicket:id=\"status\"/>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"attrValueFrag\">\n+      <span wicket:id=\"value\">[After value]</span>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"attrHeadFrag\">\n+      <div class=\"header alt\">\n+        <div id=\"resource\">\n+          <div>\n+            <span wicket:id=\"resource\">[resource name]</span>\n+            <a wicket:id=\"showFailureWindow\" href=\"#\">\n+              <img wicket:id=\"icon\"/>\n+            </a>\n+\n+            <div id=\"propagation\">\n+              <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n+              &nbsp;\n+              <span wicket:id=\"propagation\">[propagation result]</span>\n+            </div>\n+\n+            <div wicket:id=\"failureWindow\"></div>\n+\n           </div>\n-         \n-          <div wicket:id=\"failureWindow\"></div>\n+        </div>\n \n+        <div id=\"attrhead\">\n+          <wicket:message key=\"before\">[before]</wicket:message>\n         </div>\n-      </div>\n \n-      <div id=\"attrhead\">\n-        <wicket:message key=\"before\">[before]</wicket:message>\n+        <div id=\"attrhead\">\n+          <wicket:message key=\"after\">[after]</wicket:message>\n+        </div>\n       </div>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"emptyAttrHeadFrag\">\n+      <div class=\"header alt\">\n+        <div id=\"resource\">\n+          <div>\n+            <span wicket:id=\"resource\">[resource name]</span>\n+            <a wicket:id=\"showFailureWindow\" href=\"#\">\n+              <img wicket:id=\"icon\"/>\n+            </a>\n+\n+            <div id=\"propagation\">\n+              <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n+              &nbsp;\n+              <span wicket:id=\"propagation\">[propagation result]</span>\n+              <div wicket:id=\"failureWindow\"></div>\n \n-      <div id=\"attrhead\">\n-        <wicket:message key=\"after\">[after]</wicket:message>\n-      </div>\n-    </div>\n-  </wicket:fragment>\n-\n-  <wicket:fragment wicket:id=\"emptyAttrHeadFrag\">\n-    <div class=\"header alt\">\n-      <div id=\"resource\">\n-        <div>\n-          <span wicket:id=\"resource\">[resource name]</span>\n-          <a wicket:id=\"showFailureWindow\" href=\"#\">\n-            <img wicket:id=\"icon\"/>\n-          </a>\n-\n-          <div id=\"propagation\">\n-            <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-            &nbsp;\n-            <span wicket:id=\"propagation\">[propagation result]</span>\n-            <div wicket:id=\"failureWindow\"></div>\n+            </div>\n \n           </div>\n-         \n         </div>\n       </div>\n-    </div>\n-  </wicket:fragment>\n+    </wicket:fragment>\n \n-  <wicket:fragment wicket:id=\"emptyFrag\">\n-  </wicket:fragment>\n+    <wicket:fragment wicket:id=\"emptyFrag\">\n+    </wicket:fragment>\n \n-  <div wicket:id=\"container\" id=\"users-contain\" class=\"ui-widget\" style=\"margin:30px; width:inherit\">\n+    <div wicket:id=\"container\" id=\"users-contain\" class=\"ui-widget\" style=\"margin:30px; width:inherit\">\n \n-    <span wicket:id=\"resultFrag\"/>\n+      <span wicket:id=\"resultFrag\"/>\n \n-    <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"close\">\n-      <wicket:message key=\"close\"/>\n-    </a>\n-  </div>\n-</wicket:extend>\n+      <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"close\">\n+        <wicket:message key=\"close\"/>\n+      </a>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"dc7b480ab47f4685d46ad4cdb9a93191cbec0717","filename":"console/src/main/resources/org/apache/syncope/console/pages/RoleModalPage.html","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -26,13 +26,14 @@\n         <div id=\"tabs\">\n           <div style=\"display: block; clear: both\">\n             <ul>\n-              <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-              <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-              <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-              <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-              <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-              <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n-              <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n+              <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n+              <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n+              <li><a href=\"#attrs\"><span><wicket:message key=\"attrs\"/></span></a></li>\n+              <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n+              <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n+              <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n+              <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n+              <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n             </ul>\n           </div>\n           <div wicket:id=\"rolePanel\"></div>"},{"sha":"37091a014cb6d0bc6291b50015235f116ca6aa97","filename":"console/src/main/resources/org/apache/syncope/console/pages/RoleModalPage.properties","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,32 +16,33 @@\n # under the License.\n required_alert=All form fields are required.\n title=Role\n-tab1=Details\n-tab2=Attributes\n+details=Details\n+attrs=Attributes\n tab3=Derived attributes\n tab4=Virtual attributes\n-tab5=Resources\n-tab6=Entitlements\n-tab7=Security\n+resources=Resources\n+entitlements=Entitlements\n+security=Security\n add=+\n drop=-\n error=Generic error occurred during the operation\n firstResourcesList=Role's resources\n secondResourcesList=Available resources\n firstEntitlementsList=Role's entitlements\n secondEntitlementsList=Available entitlements\n-derivedAttributes=Derived Attributes\n-derivedAttributeToBeRemoved=Delete\n-derivedAttributeName=Name\n-derivedAttributeValue=Derived value\n+derAttrs=Derived Attributes\n+derAttrToRemove=Delete\n+derAttrName=Name\n+derAttrValue=Derived value\n \n-virtuyalAttributes=Virtual Attributes\n-virtualAttributeToBeRemoved=Delete\n-virtualAttributeName=Name\n-virtualAttributeValue=Virtual value\n+virAttrs=Virtual Attributes\n+virAttrToRemove=Delete\n+virAttrName=Name\n+virAttrValue=Virtual value\n \n addAttributeBtn=Add\n \n-inheritAttributes=Inherit attributes\n-inheritDerivedAttributes=Inherit derived attributes\n-inheritVirtualAttributes=Inherit virtual attributes\n+inheritAttrs=Inherit attributes\n+inheritDerAttrs=Inherit derived attributes\n+inheritVirAttrs=Inherit virtual attributes\n+templates=Templates"},{"sha":"cf2017e51566ca78d9d12a8b157765b0f8b4c15b","filename":"console/src/main/resources/org/apache/syncope/console/pages/RoleModalPage_it.properties","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,32 +16,33 @@\n # under the License.\n required_alert=All form fields are required.\n title=Ruolo\n-tab1=Dettagli\n-tab2=Attributi\n+details=Dettagli\n+attrs=Attributi\n tab3=Attributi derivati\n tab4=Attributi virtuali\n-tab5=Risorse\n-tab6=Entitlement\n-tab7=Sicurezza\n+resources=Risorse\n+entitlements=Entitlement\n+security=Sicurezza\n add=+\n drop=-\n error=Errore generico durante l'operazione\n firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n firstResourcesList=Entitlement ruolo\n secondResourcesList=Entitlement disponibili\n-derivedAttributes=Attributi derivati\n-derivedAttributeToBeRemoved=Elimina\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valore derivato\n+derAttrs=Attributi derivati\n+derAttrToRemove=Elimina\n+derAttrName=Nome\n+derAttrValue=Valore derivato\n \n-virtuyalAttributes=Attributi virtuali\n-virtualAttributeToBeRemoved=Elimina\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valore virtuale\n+virAttrs=Attributi virtuali\n+virAttrToRemove=Elimina\n+virAttrName=Nome\n+virAttrValue=Valore virtuale\n \n addAttributeBtn=Aggiungi\n \n-inheritAttributes=Eredita attributi\n-inheritDerivedAttributes=Eredita attributi derivati\n-inheritVirtualAttributes=Eredita attributi virtuali\n+inheritAttrs=Eredita attributi\n+inheritDerAttrs=Eredita attributi derivati\n+inheritVirAttrs=Eredita attributi virtuali\n+templates=Modelo"},{"sha":"f588e759b7554f64a4be16fe900520b821a0032d","filename":"console/src/main/resources/org/apache/syncope/console/pages/RoleModalPage_pt_BR.properties","status":"modified","additions":24,"deletions":23,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -14,34 +14,35 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-required_alert=Todos os campos s\\u00E3o obrigat\\u00F3rios\n-title=Fun\\u00E7\\u00E3o\n-tab1=Detalhes\n-tab2=Atributos\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n+title=Fun\\u00e7\\u00e3o\n+details=Detalhes\n+attrs=Atributos\n tab3=Atributos Derivados\n tab4=Atributos Virtuais\n-tab5=Recursos\n-tab6=Direitos\n-tab7=Seguran\\u00E7a\n+resources=Recursos\n+entitlements=Direitos\n+security=Seguran\\u00e7a\n add=+\n drop=-\n-error=Um erro gen\\u00E9rico ocorreu durante a opera\\u00E7\\u00E3o\n-firstResourcesList=Recursos de fun\\u00E7\\u00F5es\n-secondResourcesList=Recursos dispon\\u00EDveis\n-firstEntitlementsList=Direitos de fun\\u00E7\\u00F5es\n-secondEntitlementsList=Direitos dispon\\u00EDveis\n-derivedAttributes=Atributos derivados\n-derivedAttributeToBeRemoved=Exluir\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valor Derivado\n+error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n+firstResourcesList=Recursos de fun\\u00e7\\u00f5es\n+secondResourcesList=Recursos dispon\\u00edveis\n+firstEntitlementsList=Direitos de fun\\u00e7\\u00f5es\n+secondEntitlementsList=Direitos dispon\\u00edveis\n+derAttrs=Atributos derivados\n+derAttrToRemove=Exluir\n+derAttrName=Nome\n+derAttrValue=Valor Derivado\n \n-virtuyalAttributes=Atributos Virtuais\n-virtualAttributeToBeRemoved=Excluir\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valor Virtual\n+virAttrs=Atributos Virtuais\n+virAttrToRemove=Excluir\n+virAttrName=Nome\n+virAttrValue=Valor Virtual\n \n addAttributeBtn=Adicionar\n \n-inheritAttributes=Atributos Herdados\n-inheritDerivedAttributes=Atributos Derivados Herdados\n-inheritVirtualAttributes=Atributos Virtuais Herdados\n+inheritAttrs=Atributos Herdados\n+inheritDerAttrs=Atributos Derivados Herdados\n+inheritVirAttrs=Atributos Virtuais Herdados\n+templates=Modelli"},{"sha":"e335a33c175516363be9f9834429cf2f3b74b1ed","filename":"console/src/main/resources/org/apache/syncope/console/pages/UserModalPage.html","status":"modified","additions":53,"deletions":51,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,66 +16,68 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:extend>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n \n-  <span wicket:id=\"userModalFrag\"/>\n+    <span wicket:id=\"userModalFrag\"/>\n \n-  <wicket:fragment wicket:id=\"userModalEditFrag\">\n+    <wicket:fragment wicket:id=\"userModalEditFrag\">\n \n-    <div style=\"margin:10px\">\n-      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <span wicket:id=\"new\"/>&nbsp;<wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"id\"/>\n-      </p>\n+      <div style=\"margin:10px\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <span wicket:id=\"new\"/>&nbsp;<wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"id\"/>\n+        </p>\n \n-      <form wicket:id=\"UserForm\">\n-        <div id=\"tabs\">\n-          <ul>\n-            <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-            <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-            <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-            <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-            <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-            <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n-          </ul>\n-          <div id=\"tabs-1\">\n-            <span wicket:id=\"details\">[user details]</span>\n-            <div wicket:id=\"pwdChangeInfo\" style=\"margin-top: 15px;\">[pwdChangeInfo]</div>\n-            <span wicket:id=\"statuspanel\">[Status Panel]</span>\n-            <span wicket:id=\"accountinformation\">[Account Information]</span>\n-          </div>\n-          <div id=\"tabs-2\">\n-            <div id=\"formtable\">\n-              <span wicket:id=\"attributes\">[user attributes]</span>\n+        <form wicket:id=\"UserForm\">\n+          <div id=\"tabs\">\n+            <ul>\n+              <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+              <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+              <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+              <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+              <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n+              <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n+            </ul>\n+            <div id=\"tabs-1\">\n+              <span wicket:id=\"details\">[user details]</span>\n+              <div wicket:id=\"pwdChangeInfo\" style=\"margin-top: 15px;\">[pwdChangeInfo]</div>\n+              <span wicket:id=\"statuspanel\">[Status Panel]</span>\n+              <span wicket:id=\"accountinformation\">[Account Information]</span>\n+            </div>\n+            <div id=\"tabs-2\">\n+              <div id=\"formtable\">\n+                <span wicket:id=\"attrs\">[user attributes]</span>\n+              </div>\n             </div>\n-          </div>\n \n-          <div id=\"tabs-3\">\n-            <span wicket:id=\"derivedAttributes\">[user derived attributes]</span>\n-          </div>\n+            <div id=\"tabs-3\">\n+              <span wicket:id=\"derAttrs\">[user derived attributes]</span>\n+            </div>\n \n-          <div id=\"tabs-4\">\n-            <span wicket:id=\"virtualAttributes\">[user virtual attributes]</span>\n-          </div>\n+            <div id=\"tabs-4\">\n+              <span wicket:id=\"virAttrs\">[user virtual attributes]</span>\n+            </div>\n \n-          <div id=\"tabs-5\">\n-            <span wicket:id=\"resources\">[resources]</span>\n-          </div>\n+            <div id=\"tabs-5\">\n+              <span wicket:id=\"resources\">[resources]</span>\n+            </div>\n \n-          <div id=\"tabs-6\">\n-            <span wicket:id=\"memberships\">[memberships]</span>\n+            <div id=\"tabs-6\">\n+              <span wicket:id=\"memberships\">[memberships]</span>\n+            </div>\n           </div>\n-        </div>\n \n-        <div style=\"margin: 20px 10px 0\">\n-          <input type=\"submit\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"apply\"/>\n-          <input type=\"button\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"cancel\"/>\n-        </div>\n-      </form>\n-    </div>\n-  </wicket:fragment>\n+          <div style=\"margin: 20px 10px 0\">\n+            <input type=\"submit\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"apply\"/>\n+            <input type=\"button\"\n+                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"cancel\"/>\n+          </div>\n+        </form>\n+      </div>\n+    </wicket:fragment>\n \n-</wicket:extend>\n+  </wicket:extend>\n+</html>"},{"sha":"ad2145f3b3442d75bfb3f95303f1e1abf843abe2","filename":"console/src/main/resources/org/apache/syncope/console/pages/UserModalPage.properties","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -35,15 +35,15 @@ column2=Action\n \n edit=Edit\n delete=Delete\n-derivedAttributes=Derived Attributes\n-derivedAttributeToBeRemoved=Delete\n-derivedAttributeName=Name\n-derivedAttributeValue=Derived value\n+derAttrs=Derived Attributes\n+derAttrToRemove=Delete\n+derAttrName=Name\n+derAttrValue=Derived value\n \n-virtualAttributes=Virtual Attributes\n-virtualAttributeToBeRemoved=Delete\n-virtualAttributeName=Name\n-virtualAttributeValue=Virtual value\n+virAttrs=Virtual Attributes\n+virAttrToRemove=Delete\n+virAttrName=Name\n+virAttrValue=Virtual value\n \n addAttributeBtn=Add\n new=New"},{"sha":"317ff111b7d66a755c7e995380348a3668228195","filename":"console/src/main/resources/org/apache/syncope/console/pages/UserModalPage_it.properties","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -35,15 +35,15 @@ column2=Azioni\n edit=Modifica\n delete=Rimuovi\n \n-derivedAttributes=Attributi derivati\n-derivedAttributeToBeRemoved=Elimina\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valore derivato\n+derAttrs=Attributi derivati\n+derAttrToRemove=Elimina\n+derAttrName=Nome\n+derAttrValue=Valore derivato\n \n-virtualAttributes=Attributi virtual\n-virtualAttributeToBeRemoved=Elimina\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valore virtuale\n+virAttrs=Attributi virtual\n+virAttrToRemove=Elimina\n+virAttrName=Nome\n+virAttrValue=Valore virtuale\n \n addAttributeBtn=Aggiungi\n "},{"sha":"0916d1a05dd571cb454ba6df8f053f89a70dbfc5","filename":"console/src/main/resources/org/apache/syncope/console/pages/UserModalPage_pt_BR.properties","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -14,37 +14,37 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-required_alert=Todos os campos s\\u00E3o obrigat\\u00F3rios\n-title=Usu\\u00E1rio\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n+title=Usu\\u00e1rio\n firstname=Nome\n surname=Sobrenome\n tab1=Detalhes\n tab2=Atributos\n tab3=Atriutos Derivados\n tab4=Atributos Virtuais\n tab5=Recursos\n-tab6=Fun\\u00E7\\u00F5es\n+tab6=Fun\\u00e7\\u00f5es\n add=+\n drop=-\n-resources=Transfer\\u00EAncia de Recursos\n-firstResourcesList=Recursos de usu\\u00E1rio\n-secondResourcesList=Recursos Dispon\\u00EDveis\n-updating_error=Um erro gern\\u00E9rico ocorreu durante a atualiza\\u00E7\\u00E3o\n-column1=Fun\\u00E7\\u00F5es\n-column2=A\\u00E7\\u00E3o\n+resources=Transfer\\u00eancia de Recursos\n+firstResourcesList=Recursos de usu\\u00e1rio\n+secondResourcesList=Recursos Dispon\\u00edveis\n+updating_error=Um erro gern\\u00e9rico ocorreu durante a atualiza\\u00e7\\u00e3o\n+column1=Fun\\u00e7\\u00f5es\n+column2=A\\u00e7\\u00e3o\n \n edit=Alterar\n delete=Excluir\n-derivedAttributes=Atributos Derivados\n-derivedAttributeToBeRemoved=Excluir\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valor Derivado\n+derAttrs=Atributos Derivados\n+derAttrToRemove=Excluir\n+derAttrName=Nome\n+derAttrValue=Valor Derivado\n \n-virtualAttributes=Atributos virtuais\n-virtualAttributeToBeRemoved=Excluir\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valor Virtual\n+virAttrs=Atributos virtuais\n+virAttrToRemove=Excluir\n+virAttrName=Nome\n+virAttrValue=Valor Virtual\n \n addAttributeBtn=Adicionar\n new=Novo\n-pwdChangeInfo=Se provida, a senha ser\\u00E1 alterada nos seguintes recursos\n+pwdChangeInfo=Se provida, a senha ser\\u00e1 alterada nos seguintes recursos"},{"sha":"33ea4f8932107c73245b9dd2362a18bcb15d57f5","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttrTemplatesPanel.html","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,51 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"attrTemplateTabs\">\n+      <ul>\n+        <li class=\"tabs-selected\"><a href=\"#rattr\"><wicket:message key=\"rattr\"/></a></li>\n+        <li><a href=\"#rderattr\"><wicket:message key=\"rderattr\"/></a></li>\n+        <li><a href=\"#rvirattr\"><wicket:message key=\"rvirattr\"/></a></li>\n+        <li><a href=\"#mattr\"><wicket:message key=\"mattr\"/></a></li>\n+        <li><a href=\"#mderattr\"><wicket:message key=\"mderattr\"/></a></li>\n+        <li><a href=\"#mvirattr\"><wicket:message key=\"mvirattr\"/></a></li>\n+      </ul>\n+\n+      <div id=\"rattr\">\n+        <div wicket:id=\"rAttrTemplates\"/>\n+      </div>\n+      <div id=\"rderattr\">\n+        <div wicket:id=\"rDerAttrTemplates\"/>\n+      </div>\n+      <div id=\"rvirattr\">\n+        <div wicket:id=\"rVirAttrTemplates\"/>\n+      </div>    \n+      <div id=\"mattr\">\n+        <div wicket:id=\"mAttrTemplates\"/>\n+      </div>\n+      <div id=\"mderattr\">\n+        <div wicket:id=\"mDerAttrTemplates\"/>\n+      </div>\n+      <div id=\"mvirattr\">\n+        <div wicket:id=\"mVirAttrTemplates\"/>\n+      </div>    \n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"4d8133c17be96de05525427b1276a18d2689a34a","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttrTemplatesPanel.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+rattr=Normal\n+rderattr=Derived\n+rvirattr=Virtual\n+mattr=Normal (Membership)\n+mderattr=Derived (Membership)\n+mvirattr=Virtual (Membership)"},{"sha":"69e4ee03a0654f7705132146f1b2f07eda918cb7","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttrTemplatesPanel_it.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+rattr=Normali\n+rderattr=Derivati\n+rvirattr=Virtuali\n+mattr=Normali (Membership)\n+mderattr=Derivati (Membership)\n+mvirattr=Virtuali (Membership)"},{"sha":"838a45951e4dc146a4ad9cf635809d5b14bb9039","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttrTemplatesPanel_pt_BR.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+rattr=Normal\n+rderattr=Derivado\n+rvirattr=Virtual\n+mattr=Normal (Membro)\n+mderattr=Derivado (Membro)\n+mvirattr=Virtual (Membro)"},{"sha":"2e4a12536311f6297e28da7f24c060cf1e12773d","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.html","status":"modified","additions":38,"deletions":36,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,43 +16,45 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <table class=\"ui-widget ui-widget-content ui-corner-all\"\n-         style=\"font-size: 1em;margin-top:2px;\"\n-         width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n-    <thead>\n-      <tr class=\"ui-widget-header\">\n-        <th><wicket:message key=\"derivedAttributeToBeRemoved\"/></th>\n-    <th><wicket:message key=\"derivedAttributeName\"/></th>\n-    <th><wicket:message key=\"derivedAttributeValue\"/></th>\n-    </tr>\n-    </thead>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <table class=\"ui-widget ui-widget-content ui-corner-all\"\n+           style=\"font-size: 1em;margin-top:2px;\"\n+           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n+      <thead>\n+        <tr class=\"ui-widget-header\">\n+          <th><wicket:message key=\"derAttrToRemove\"/></th>\n+          <th><wicket:message key=\"derAttrName\"/></th>\n+          <th><wicket:message key=\"derAttrValue\"/></th>\n+        </tr>\n+      </thead>\n \n-    <tfoot>\n-      <tr>\n-        <td>\n-          <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"addAttributeBtn\" />\n-        </td>\n-      </tr>\n-    </tfoot>\n+      <tfoot>\n+        <tr>\n+          <td>\n+            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"addAttributeBtn\" />\n+          </td>\n+        </tr>\n+      </tfoot>\n \n-    <tbody wicket:id=\"derAttrContainer\">\n-      <tr wicket:id=\"attributes\">\n-        <td align=\"center\" valign=\"middle\">\n-          <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-        </td>\n+      <tbody wicket:id=\"derAttrContainer\">\n+        <tr wicket:id=\"attrs\">\n+          <td align=\"center\" valign=\"middle\">\n+            <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+          </td>\n \n-        <td>\n-          <select class=\"text ui-widget-content ui-corner-all\"\n-                  style=\"width:100%\" wicket:id=\"schema\"/>\n-        </td>\n+          <td>\n+            <select class=\"text ui-widget-content ui-corner-all\"\n+                    style=\"width:100%\" wicket:id=\"schema\"/>\n+          </td>\n \n-        <td align=\"center\" valign=\"middle\">\n-          <input type=\"text\"\n-                 style=\"width:98%; padding-left: 0px; padding-right: 0px\" wicket:id=\"value\"/>\n-        </td>\n-      </tr>\n-    </tbody>\n-  </table>\n-</wicket:panel>\n+          <td align=\"center\" valign=\"middle\">\n+            <input type=\"text\"\n+                   style=\"width:98%; padding-left: 0px; padding-right: 0px\" wicket:id=\"value\"/>\n+          </td>\n+        </tr>\n+      </tbody>\n+    </table>\n+  </wicket:panel>\n+</html>"},{"sha":"f03025167b4cedc3c0be25af885a920407169bf2","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleDetailsPanel.html","status":"modified","additions":67,"deletions":56,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,81 +16,92 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <div id=\"formtable\">\n-    <span wicket:id=\"parent\">[parent]</span>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"formtable\">\n+      <span wicket:id=\"parent\">[parent]</span>\n \n-    <div class=\"tablerow\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <wicket:message key=\"name\"/>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"name\" />\n-        <a wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\"><img src=\"img/help.png\"/></a>\n-        <div class=\"help\">\n-          <div wicket:id=\"jexlHelp\" class=\"tooltip\">\n-            <wicket:message key=\"jexl_info\"/>\n-            <ul>\n-              <li><wicket:message key=\"jexl_ex1\"/></li>\n-              <li><wicket:message key=\"jexl_ex2\"/></li>\n-            </ul>\n-            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <wicket:message key=\"name\"/>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"name\"/>\n+          <a wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\"><img src=\"img/help.png\"/></a>\n+          <div class=\"help\">\n+            <div wicket:id=\"jexlHelp\" class=\"tooltip\">\n+              <wicket:message key=\"jexl_info\"/>\n+              <ul>\n+                <li><wicket:message key=\"jexl_ex1\"/></li>\n+                <li><wicket:message key=\"jexl_ex2\"/></li>\n+              </ul>\n+              <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+            </div>\n           </div>\n         </div>\n       </div>\n-    </div>\n \n-    <div class=\"tablerow alt\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <wicket:message key=\"inheritOwner\"/>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"inheritOwner\" />\n+      <div class=\"tablerow alt\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <wicket:message key=\"inheritOwner\"/>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"inheritOwner\"/>\n+        </div>\n       </div>\n-    </div>\n \n-    <div wicket:id=\"ownerContainer\">\n       <div class=\"tablerow\">\n         <div class=\"tablecolumn_label short_dynamicsize\">\n-          <wicket:message key=\"userOwner\"/>\n+          <wicket:message key=\"inheritTemplates\"/>\n         </div>\n         <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"userOwner\"/>\n-          <a href=\"#\" wicket:id=\"userOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select user owner\" title=\"Search\"/></a>\n-          <a href=\"#\" wicket:id=\"userOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset user owner\" title=\"Delete\"/></a>\n+          <span wicket:id=\"inheritTemplates\"/>\n         </div>\n       </div>\n \n-      <div class=\"tablerow alt\">\n-        <div class=\"tablecolumn_label short_dynamicsize\">\n-          <wicket:message key=\"roleOwner\"/>\n+      <div wicket:id=\"ownerContainer\">\n+        <div class=\"tablerow alt\">\n+          <div class=\"tablecolumn_label short_dynamicsize\">\n+            <wicket:message key=\"userOwner\"/>\n+          </div>\n+          <div class=\"tablecolumn_field medium_dynamicsize\">\n+            <span wicket:id=\"userOwner\"/>\n+            <a href=\"#\" wicket:id=\"userOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select user owner\" title=\"Search\"/></a>\n+            <a href=\"#\" wicket:id=\"userOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset user owner\" title=\"Delete\"/></a>\n+          </div>\n         </div>\n-        <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"roleOwner\"/>\n-          <a href=\"#\" wicket:id=\"roleOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select role owner\" title=\"Search\"/></a>\n-          <a href=\"#\" wicket:id=\"roleOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset role owner\" title=\"Delete\"/></a>\n+\n+        <div class=\"tablerow\">\n+          <div class=\"tablecolumn_label short_dynamicsize\">\n+            <wicket:message key=\"roleOwner\"/>\n+          </div>\n+          <div class=\"tablecolumn_field medium_dynamicsize\">\n+            <span wicket:id=\"roleOwner\"/>\n+            <a href=\"#\" wicket:id=\"roleOwnerSelect\"><img src=\"img/actions/search.png\" alt=\"select role owner\" title=\"Search\"/></a>\n+            <a href=\"#\" wicket:id=\"roleOwnerReset\"><img src=\"img/actions/delete.png\" alt=\"reset role owner\" title=\"Delete\"/></a>\n+          </div>\n         </div>\n       </div>\n     </div>\n-  </div>\n \n-  <span wicket:id=\"parentSelectWin\"/>\n-  <span wicket:id=\"userOwnerSelectWin\"/>\n-  <span wicket:id=\"roleOwnerSelectWin\"/>\n+    <span wicket:id=\"parentSelectWin\"/>\n+    <span wicket:id=\"userOwnerSelectWin\"/>\n+    <span wicket:id=\"roleOwnerSelectWin\"/>\n \n-  <wicket:fragment wicket:id=\"parentFragment\">\n-    <div class=\"tablerow alt\">\n-      <div class=\"tablecolumn_label short_dynamicsize\">\n-        <wicket:message key=\"parent\"/>\n-      </div>\n-      <div class=\"tablecolumn_field medium_dynamicsize\">\n-        <span wicket:id=\"parent\"/>\n-        <a href=\"#\" wicket:id=\"parentSelect\"><img src=\"img/actions/search.png\" alt=\"select role parent\" title=\"Search\"/></a>\n-        <a href=\"#\" wicket:id=\"parentReset\"><img src=\"img/actions/delete.png\" alt=\"reset role parent\" title=\"Delete\"/></a>\n+    <wicket:fragment wicket:id=\"parentFragment\">\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <wicket:message key=\"parent\"/>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"parent\"/>\n+          <a href=\"#\" wicket:id=\"parentSelect\"><img src=\"img/actions/search.png\" alt=\"select role parent\" title=\"Search\"/></a>\n+          <a href=\"#\" wicket:id=\"parentReset\"><img src=\"img/actions/delete.png\" alt=\"reset role parent\" title=\"Delete\"/></a>\n+        </div>\n       </div>\n-    </div>\n-  </wicket:fragment>\n+    </wicket:fragment>\n \n-  <wicket:fragment wicket:id=\"emptyFragment\">\n-  </wicket:fragment>\n-</wicket:panel>\n+    <wicket:fragment wicket:id=\"emptyFragment\">\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>"},{"sha":"b729c65b37bcaffd13549957f6b902cf7c41a1ed","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleDetailsPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,3 +19,4 @@ userOwner=Owner (user)\n roleOwner=Owner (role)\n inheritOwner=Inherit owner\n parent=Parent\n+inheritTemplates=Inherit templates"},{"sha":"7938baecca4ddc87768bfb8836d9315a2069f3fc","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleDetailsPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,3 +19,4 @@ userOwner=Proprietario (utente)\n roleOwner=Proprietario (ruolo)\n inheritOwner=Eredita proprietario\n parent=Padre\n+inheritTemplates=Eredita modelli"},{"sha":"eadc335595095ab70cf5b2474ab2bd97e7990ba2","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleDetailsPanel_pt_BR.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -15,7 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n name=Nome\n-userOwner=Dono (usu\\u00E1rio)\n-roleOwner=Dono (fun\\u00E7\\u00E3o)\n+userOwner=Dono (usu\\u00e1rio)\n+roleOwner=Dono (fun\\u00e7\\u00e3o)\n inheritOwner=Dono herdado\n parent=Parente\n+inheritTemplates=Modelo herdado"},{"sha":"a308eefcecd42f3b257e3358526e34196e899cd0","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RolePanel.html","status":"modified","additions":21,"deletions":17,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,64 +19,68 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n \n-    <div id=\"tabs-1\">\n+    <div id=\"details\">\n       <span wicket:id=\"details\">[role details]</span>\n       <span wicket:id=\"statuspanel\">[Status Panel]</span>\n       <span wicket:id=\"systeminformation\">[System Information]</span>\n     </div>\n \n-    <div id=\"tabs-2\">\n+    <div id=\"templates\">\n+      <span wicket:id=\"templates\">[templates]</span>\n+    </div>\n+\n+    <div id=\"attrs\">\n       <div id=\"formtable\">\n         <div class=\"tablerow\">\n           <div class=\"tablecolumn_label short_dynamicsize\">\n-            <wicket:message key=\"inheritAttributes\"/>\n+            <wicket:message key=\"inheritAttrs\"/>\n           </div>\n           <div class=\"tablecolumn_field medium_dynamicsize\">\n-            <span wicket:id=\"inheritAttributes\" />\n+            <span wicket:id=\"inheritAttrs\" />\n           </div>\n         </div>\n \n-        <span wicket:id=\"attributes\">[role attributes]</span>\n+        <span wicket:id=\"attrs\">[role attributes]</span>\n       </div>\n     </div>\n \n-    <div id=\"tabs-3\">\n+    <div id=\"derAttrs\">\n       <div id=\"formtable\">\n         <div class=\"tablerow alt\">\n           <div class=\"tablecolumn_label short_dynamicsize\">\n-            <wicket:message key=\"inheritDerivedAttributes\"/>\n+            <wicket:message key=\"inheritDerAttrs\"/>\n           </div>\n           <div class=\"tablecolumn_field medium_dynamicsize\">\n-            <span wicket:id=\"inheritDerivedAttributes\" />\n+            <span wicket:id=\"inheritDerAttrs\" />\n           </div>\n         </div>\n \n-        <span wicket:id=\"derivedAttributes\">[role derived attributes]</span>\n+        <span wicket:id=\"derAttrs\">[role derived attributes]</span>\n       </div>\n     </div>\n \n-    <div id=\"tabs-4\">\n+    <div id=\"virAttrs\">\n       <div id=\"formtable\">\n         <div class=\"tablerow alt\">\n           <div class=\"tablecolumn_label short_dynamicsize\">\n-            <wicket:message key=\"inheritVirtualAttributes\"/>\n+            <wicket:message key=\"inheritVirAttrs\"/>\n           </div>\n           <div class=\"tablecolumn_field medium_dynamicsize\">\n-            <span wicket:id=\"inheritVirtualAttributes\" />\n+            <span wicket:id=\"inheritVirAttrs\" />\n           </div>\n         </div>\n \n-        <span wicket:id=\"virtualAttributes\">[role virtual attributes]</span>\n+        <span wicket:id=\"virAttrs\">[role virtual attributes]</span>\n       </div>\n     </div>\n \n-    <div id=\"tabs-5\">\n+    <div id=\"resources\">\n       <span wicket:id=\"resources\">[resources]</span>\n     </div>\n-    <div id=\"tabs-6\">\n-      <span wicket:id=\"entitlementsPalette\">[entitlements]</span>\n+    <div id=\"entitlements\">\n+      <span wicket:id=\"entitlements\">[entitlements]</span>\n     </div>\n-    <div id=\"tabs-7\">\n+    <div id=\"security\">\n       <span wicket:id=\"security\">[security]</span>\n     </div>\n "},{"sha":"38b4584ccb0e1fdb7b75327b9075553998a01797","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RolePanel.properties","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -23,21 +23,8 @@ firstResourcesList=Role's resources\n secondResourcesList=Available resources\n firstEntitlementsList=Role's entitlements\n secondEntitlementsList=Available entitlements\n-derivedAttributes=Derived Attributes\n-derivedAttributeToBeRemoved=Delete\n-derivedAttributeName=Name\n-derivedAttributeValue=Derived value\n-\n-virtuyalAttributes=Virtual Attributes\n-virtualAttributeToBeRemoved=Delete\n-virtualAttributeName=Name\n-virtualAttributeValue=Virtual value\n \n addAttributeBtn=Add\n-\n-inheritAttributes=Inherit attributes\n-inheritDerivedAttributes=Inherit derived attributes\n-inheritVirtualAttributes=Inherit virtual attributes\n required_alert=All form fields are required.\n add=+\n drop=-\n@@ -47,18 +34,18 @@ firstResourcesList=Role's resources\n secondResourcesList=Available resources\n firstEntitlementsList=Role's entitlements\n secondEntitlementsList=Available entitlements\n-derivedAttributes=Derived Attributes\n-derivedAttributeToBeRemoved=Delete\n-derivedAttributeName=Name\n-derivedAttributeValue=Derived value\n+derAttrs=Derived Attributes\n+derAttrToRemove=Delete\n+derAttrName=Name\n+derAttrValue=Derived value\n \n-virtuyalAttributes=Virtual Attributes\n-virtualAttributeToBeRemoved=Delete\n-virtualAttributeName=Name\n-virtualAttributeValue=Virtual value\n+virAttrs=Virtual Attributes\n+virAttrToRemove=Delete\n+virAttrName=Name\n+virAttrValue=Virtual value\n \n addAttributeBtn=Add\n \n-inheritAttributes=Inherit attributes\n-inheritDerivedAttributes=Inherit derived attributes\n-inheritVirtualAttributes=Inherit virtual attributes\n+inheritAttrs=Inherit attributes\n+inheritDerAttrs=Inherit derived attributes\n+inheritVirAttrs=Inherit virtual attributes"},{"sha":"8fc1ccf20881c2043a707763a8cdd67d4e888248","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RolePanel_it.properties","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -23,21 +23,8 @@ firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n firstResourcesList=Entitlement ruolo\n secondResourcesList=Entitlement disponibili\n-derivedAttributes=Attributi derivati\n-derivedAttributeToBeRemoved=Rimuovi\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valore derivato\n-\n-virtuyalAttributes=Attributi virtuali\n-virtualAttributeToBeRemoved=Rimuovi\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valore virtuale\n \n addAttributeBtn=Aggiungi\n-\n-inheritAttributes=Eredita attributi\n-inheritDerivedAttributes=Eredita attributi derivati\n-inheritVirtualAttributes=Eredita attributi virtuali\n required_alert=Tutti i valori sono richiesti.\n add=+\n drop=-\n@@ -47,20 +34,20 @@ firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n-derivedAttributes=Attributi derivati\n-derivedAttributeToBeRemoved=Rimuovi\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valore derivato\n+derAttrs=Attributi derivati\n+derAttrToRemove=Rimuovi\n+derAttrName=Nome\n+derAttrValue=Valore derivato\n \n-virtuyalAttributes=Attributi virtuali\n-virtualAttributeToBeRemoved=Rimuovi\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valore virtuale\n+virAttrs=Attributi virtuali\n+virAttrToRemove=Rimuovi\n+virAttrName=Nome\n+virAttrValue=Valore virtuale\n \n addAttributeBtn=Aggiungi\n \n-inheritAttributes=Eredita attributi\n-inheritDerivedAttributes=Eredita attributi derivati\n-inheritVirtualAttributes=Eredita attributi virtuali\n+inheritAttrs=Eredita attributi\n+inheritDerAttrs=Eredita attributi derivati\n+inheritVirAttrs=Eredita attributi virtuali\n firstEntitlementsList=Entitlement ruolo\n secondEntitlementsList=Entitlement disponibili"},{"sha":"bf48ab656d652d67447615ee5502abbe3a6f3554","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RolePanel_pt_BR.properties","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -14,27 +14,27 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-required_alert=Todos os campos s\\u00E3o obrigat\\u00F3rios\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n add=+\n drop=-\n-error=Um erro gen\\u00E9rico ocorreu durante a opera\\u00E7\\u00E3o\n+error=Um erro gen\\u00e9rico ocorreu durante a opera\\u00e7\\u00e3o\n name=Nome\n-firstResourcesList=Recursos de Fun\\u00E7\\u00F5es\n-secondResourcesList=Recursos Dipon\\u00EDveis\n-firstEntitlementsList=Direitos de Fun\\u00E7\\u00F5es\n-secondEntitlementsList=Direitos Dispon\\u00EDveis\n-derivedAttributes=Atributos Derivados\n-derivedAttributeToBeRemoved=Remover\n-derivedAttributeName=Nome\n-derivedAttributeValue=Valor Derivado\n+firstResourcesList=Recursos de Fun\\u00e7\\u00f5es\n+secondResourcesList=Recursos Dipon\\u00edveis\n+firstEntitlementsList=Direitos de Fun\\u00e7\\u00f5es\n+secondEntitlementsList=Direitos Dispon\\u00edveis\n+derAttrs=Atributos Derivados\n+derAttrToRemove=Remover\n+derAttrName=Nome\n+derAttrValue=Valor Derivado\n \n-virtuyalAttributes=Atributos Virtuais\n-virtualAttributeToBeRemoved=Remover\n-virtualAttributeName=Nome\n-virtualAttributeValue=Valor Virtual\n+virAttrs=Atributos Virtuais\n+virAttrToRemove=Remover\n+virAttrName=Nome\n+virAttrValue=Valor Virtual\n \n addAttributeBtn=Adicionar\n \n-inheritAttributes=Atributos Herdados\n-inheritDerivedAttributes=Atributos Herdados Derivados\n-inheritVirtualAttributes=Atributos Virtuais Herdados\n+inheritAttrs=Atributos Herdados\n+inheritDerAttrs=Atributos Herdados Derivados\n+inheritVirAttrs=Atributos Virtuais Herdados"},{"sha":"30f0309cac1685d8fed009b901c1c38bf313d36d","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleSummaryPanel.html","status":"modified","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,22 +16,24 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n \n-  <span wicket:id=\"roleSummaryPanel\">[Role panel]</span>\n+    <span wicket:id=\"roleSummaryPanel\">[Role panel]</span>\n \n-  <wicket:fragment wicket:id=\"roleViewPanel\">\n-    <span wicket:id=\"nodeViewPanel\"></span>\n-  </wicket:fragment>\n+    <wicket:fragment wicket:id=\"roleViewPanel\">\n+      <span wicket:id=\"nodeViewPanel\"></span>\n+    </wicket:fragment>\n \n-  <wicket:fragment wicket:id=\"rootPanel\">\n-    <div style=\"float:left; width:65%;\">\n-      <p style=\"height:15px; margin-top: 0px;\" class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <span wicket:id=\"actionLink\"/>\n-      </p>\n-    </div>\n-  </wicket:fragment>\n+    <wicket:fragment wicket:id=\"rootPanel\">\n+      <div style=\"float:left; width:65%;\">\n+        <p style=\"height:15px; margin-top: 0px;\" class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <span wicket:id=\"actionLink\"/>\n+        </p>\n+      </div>\n+    </wicket:fragment>\n \n-  <wicket:fragment wicket:id=\"fakerootFrag\">\n-  </wicket:fragment>\n-</wicket:panel>\n+    <wicket:fragment wicket:id=\"fakerootFrag\">\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>"},{"sha":"35b515c980de2f3f4774cea6def24981996040ee","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel.html","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -25,20 +25,21 @@\n     </p>\n \n     <form wicket:id=\"roleForm\">\n-      <div id=\"tabs\">\n+      <div id=\"tabs\" style=\"margin: 0px;\">\n         <ul>\n-          <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-          <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-          <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-          <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-          <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-          <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n-          <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n-          <li><a href=\"#tabs-8\"><span><wicket:message key=\"tab8\"/></span></a></li>\n+          <li><a href=\"#details\"><span><wicket:message key=\"details\"/></span></a></li>\n+          <li><a href=\"#templates\"><span><wicket:message key=\"templates\"/></span></a></li>\n+          <li><a href=\"#attrs\"><span><wicket:message key=\"attrs\"/></span></a></li>\n+          <li><a href=\"#derAttrs\"><span><wicket:message key=\"derAttrs\"/></span></a></li>\n+          <li><a href=\"#virAttrs\"><span><wicket:message key=\"virAttrs\"/></span></a></li>\n+          <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n+          <li><a href=\"#entitlements\"><span><wicket:message key=\"entitlements\"/></span></a></li>\n+          <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n+          <li><a href=\"#users\"><span><wicket:message key=\"users\"/></span></a></li>\n         </ul>\n         <div wicket:id=\"rolePanel\">\n         </div>\n-        <div id=\"tabs-8\">\n+        <div id=\"users\">\n           <div wicket:id=\"userListContainer\">\n             <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n                    wicket:id=\"search\"/>"},{"sha":"605c28945a70ad3d5a4ced5c076485b072234fed","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel.properties","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -15,12 +15,13 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Role\n-tab1=Details\n-tab2=Attributes\n-tab3=Derived attributes\n-tab4=Virtual attributes\n-tab5=Resources\n-tab6=Entitlements\n-tab7=Security\n-tab8=Users\n+details=Details\n+attrs=Attributes\n+derAttrs=Derived attributes\n+virAttrs=Virtual attributes\n+resources=Resources\n+entitlements=Entitlements\n+security=Security\n+users=Users\n search=Get Users\n+templates=Templates"},{"sha":"26ef8a526f25e9b7bef542f2be68906e2f025ce9","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel_it.properties","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_it.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -15,12 +15,13 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Ruolo\n-tab1=Dettagli\n-tab2=Attributi\n-tab3=Attributi derivati\n-tab4=Attributi virtuali\n-tab5=Risorse\n-tab6=Entitlement\n-tab7=Sicurezza\n-tab8=Utenti\n+details=Dettagli\n+attrs=Attributi\n+derAttrs=Attributi derivati\n+virAttrs=Attributi virtuali\n+resources=Risorse\n+entitlements=Entitlement\n+security=Sicurezza\n+users=Utenti\n search=Lista Utenti\n+templates=Modelli"},{"sha":"2ecc202d30e4be1beed41346e31523cf56b953cd","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel_pt_BR.properties","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -14,13 +14,14 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Fun\\u00E7\\u00E3o\n-tab1=Detalhes\n-tab2=Atributos\n-tab3=Atributos Derivados\n-tab4=Atributos Virtuais\n-tab5=Recursos\n-tab6=Direitos\n-tab7=Seguran\\u00E7a\n-tab8=Usu\\u00E1rios\n-search=Obter Usu\\u00E1rios\n+title=Fun\\u00e7\\u00e3o\n+details=Detalhes\n+attrs=Atributos\n+derAttrs=Atributos Derivados\n+virAttrs=Atributos Virtuais\n+resources=Recursos\n+entitlements=Direitos\n+security=Seguran\\u00e7a\n+users=Usu\\u00e1rios\n+search=Obter Usu\\u00e1rios\n+templates=Modelo"},{"sha":"5b3454eaa170eacdb66a8f853fdc3470b176fdf4","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -23,9 +23,9 @@\n            width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\">\n       <thead>\n         <tr class=\"ui-widget-header\">\n-          <th><wicket:message key=\"virtualAttributeToBeRemoved\"/></th>\n-          <th><wicket:message key=\"virtualAttributeName\"/></th>\n-          <th><wicket:message key=\"virtualAttributeValue\"/></th>\n+          <th><wicket:message key=\"virAttrToRemove\"/></th>\n+          <th><wicket:message key=\"virAttrName\"/></th>\n+          <th><wicket:message key=\"virAttrValue\"/></th>\n         </tr>\n       </thead>\n \n@@ -39,7 +39,7 @@\n       </tfoot>\n \n       <tbody wicket:id=\"virAttrContainer\">\n-        <tr wicket:id=\"attributes\">\n+        <tr wicket:id=\"attrs\">\n           <td align=\"center\" valign=\"top\">\n             <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n           </td>"},{"sha":"183314006ce1fca16f398fe0634b2cbc8ecba289","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.html","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,6 +16,8 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:panel>\n-  <span wicket:id=\"paletteField\">[Palette]</span>\n-</wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"paletteField\">[Palette]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"112ca4901866f19fa3609dcc0058fcf9d7e1cb37","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/NonI18nPalette.html","status":"modified","additions":35,"deletions":33,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -15,47 +15,49 @@\n    See the License for the specific language governing permissions and\n    limitations under the License.\n -->\n-<wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n \n-  <div style=\"display: inline-table;\">\n-    <input type=\"hidden\" wicket:id=\"recorder\"/>\n+    <div style=\"display: inline-table;\">\n+      <input type=\"hidden\" wicket:id=\"recorder\"/>\n \n-    <div style=\"display: table-row\">\n-      <div id=\"choices\" style=\"display: table-cell; text-align: center; font-weight: bold;\">\n-        <span wicket:id=\"availableHeader\">[available header]</span>\n-      </div>\n-\n-      <div id=\"buttons\" style=\"display: table-cell;\">\n-      </div>\n+      <div style=\"display: table-row\">\n+        <div id=\"choices\" style=\"display: table-cell; text-align: center; font-weight: bold;\">\n+          <span wicket:id=\"availableHeader\">[available header]</span>\n+        </div>\n \n-      <div id=\"selections\" style=\"display: table-cell; text-align: center; font-weight: bold;\">\n-        <span wicket:id=\"selectedHeader\">[selected header]</span>\n-      </div>\n-    </div>\n+        <div id=\"buttons\" style=\"display: table-cell;\">\n+        </div>\n \n-    <div style=\"display: table-row\">\n-      <div id=\"choices\" style=\"display: table-cell;\">\n-        <select class=\"choicesSelect\" style=\"min-width: 100px;\" wicket:id=\"choices\">[choices]</select>\t\n+        <div id=\"selections\" style=\"display: table-cell; text-align: center; font-weight: bold;\">\n+          <span wicket:id=\"selectedHeader\">[selected header]</span>\n+        </div>\n       </div>\n \n-      <div id=\"buttons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n-        <div style=\"padding-bottom: 5px;\">\n-          <a wicket:id=\"addButton\"><img src=\"img/right-icon.png\" alt=\"add icon\"/></a>\n-        </div>\n-        <div>\n-          <a wicket:id=\"removeButton\"><img src=\"img/left-icon.png\" alt=\"remove icon\"/></a>\n-        </div>\n-        <div>\n-          <a wicket:id=\"moveUpButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+      <div style=\"display: table-row\">\n+        <div id=\"choices\" style=\"display: table-cell;\">\n+          <select class=\"choicesSelect\" style=\"min-width: 100px;\" wicket:id=\"choices\">[choices]</select>\t\n         </div>\n-        <div style=\"padding-top: 5px;\">\n-          <a wicket:id=\"moveDownButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+\n+        <div id=\"buttons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n+          <div style=\"padding-bottom: 5px;\">\n+            <a wicket:id=\"addButton\"><img src=\"img/right-icon.png\" alt=\"add icon\"/></a>\n+          </div>\n+          <div>\n+            <a wicket:id=\"removeButton\"><img src=\"img/left-icon.png\" alt=\"remove icon\"/></a>\n+          </div>\n+          <div>\n+            <a wicket:id=\"moveUpButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+          </div>\n+          <div style=\"padding-top: 5px;\">\n+            <a wicket:id=\"moveDownButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+          </div>\n         </div>\n-      </div>\n \n-      <div id=\"selections\" style=\"display: table-cell;\">\n-        <select class=\"selectionSelect\" style=\"min-width: 100px;\" wicket:id=\"selection\">[selection]</select>\t\n+        <div id=\"selections\" style=\"display: table-cell;\">\n+          <select class=\"selectionSelect\" style=\"min-width: 100px;\" wicket:id=\"selection\">[selection]</select>\t\n+        </div>\n       </div>\n     </div>\n-  </div>\n-</wicket:panel>\n+  </wicket:panel>\n+</html>"},{"sha":"1a312c464c1d0390c392d5497cd6f9fc9335bf81","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.html","status":"modified","additions":23,"deletions":21,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.html?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,34 +16,36 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n     <style type=\"text/css\">\n-        .actionLink a{\n-            text-decoration: none;\n-            font-weight: normal;\n-        }\n+      .actionLink a{\n+        text-decoration: none;\n+        font-weight: normal;\n+      }\n     </style>\n-</wicket:head>\n-<wicket:panel>\n-    \n+  </wicket:head>\n+  <wicket:panel>\n+\n     <span class=\"actionLink\" style=\"float:right\" wicket:id=\"menuPanel\"/>\n \n     <wicket:fragment wicket:id=\"roleFrag\">\n-        <a wicket:id=\"createRoleLink\">\n-            <wicket:message key=\"create_role\"/>\n-        </a>|\n-        <a wicket:id=\"updateRoleLink\">\n-            <wicket:message key=\"update_role\"/>\n-        </a>|\n-        <a wicket:id=\"dropRoleLink\">\n-            <wicket:message key=\"drop_role\"/>\n-        </a>\n+      <a wicket:id=\"createRoleLink\">\n+        <wicket:message key=\"create_role\"/>\n+      </a>|\n+      <a wicket:id=\"updateRoleLink\">\n+        <wicket:message key=\"update_role\"/>\n+      </a>|\n+      <a wicket:id=\"dropRoleLink\">\n+        <wicket:message key=\"drop_role\"/>\n+      </a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fakerootFrag\">\n-        <a wicket:id=\"createRoleLink\">\n-            <wicket:message key=\"create_role\"/>\n-        </a>\n+      <a wicket:id=\"createRoleLink\">\n+        <wicket:message key=\"create_role\"/>\n+      </a>\n     </wicket:fragment>\n \n-</wicket:panel>\n+  </wicket:panel>\n+</html>"},{"sha":"8ee410a7e5db7368aac9ebd9262f40e21803e16b","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel_pt_BR.properties?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -14,8 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-column1=Fun\\u00E7\\u00F5es\n-column2=A\\u00E7\\u00F5es\n+column1=Fun\\u00e7\\u00f5es\n+column2=A\\u00e7\\u00f5es\n create_role=Adicionar Filho\n update_role=Editar\n drop_role=Excluir"},{"sha":"132c483183d1272357cb8005b0d0185fd980f701","filename":"console/src/test/java/org/apache/syncope/console/RoleTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -112,7 +112,7 @@ public void checkSecurityTab() {\n         selenium.click(\"//div/form/div[2]/ul/li[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div[7]/span/div/div/div/label\\\");\", \"30000\");\n+                + \"\\\"//form/div[2]/div/div[8]/span/div/div/div/label\\\");\", \"30000\");\n     }\n \n     @Test"},{"sha":"d88ee0ca37b2b0597c799fea2121538736a3e66a","filename":"core/pom.xml","status":"modified","additions":69,"deletions":2,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -80,8 +80,8 @@ under the License.\n     <dependency>\n       <groupId>org.apache.commons</groupId>\n       <artifactId>commons-jexl</artifactId>\n-    </dependency>\n-\n+    </dependency>    \n+      \n     <dependency>\n       <groupId>org.activiti</groupId>\n       <artifactId>activiti-engine</artifactId>\n@@ -689,6 +689,73 @@ under the License.\n       </build>\n     </profile>\n \n+    <profile>\n+      <id>sqlgen</id>\n+      \n+      <dependencies>\n+        <dependency>\n+          <groupId>com.h2database</groupId>\n+          <artifactId>h2</artifactId>\n+        </dependency>\n+      </dependencies>\n+\n+      <build>\n+        <defaultGoal>clean process-classes</defaultGoal>        \n+        \n+        <plugins>\n+          <plugin>\n+            <groupId>org.codehaus.mojo</groupId>\n+            <artifactId>exec-maven-plugin</artifactId>\n+            <configuration>\n+              <includeProjectDependencies>false</includeProjectDependencies>\n+              <includePluginDependencies>true</includePluginDependencies>\n+          \n+              <executable>java</executable>\n+              <arguments>\n+                <argument>-DpersistenceXmlFile=${project.basedir}/src/main/resources/META-INF/spring-persistence.xml</argument>\n+                <argument>-Dbase=${project.build.outputDirectory}/org/apache/syncope/core/persistence/beans</argument>\n+                <argument>-DconnectionDriverName=org.apache.commons.dbcp.BasicDataSource</argument>\n+                <argument>-DconnectionProperties=driverClassName;org.h2.Driver,url;jdbc:h2:mem:syncopedb,username;sa,password;</argument>\n+                <argument>-DsqlFile=${project.build.directory}/database.sql</argument>\n+          \n+                <argument>-classpath</argument>\n+                <classpath>\n+                  <dependency>org.apache.syncope:syncope-common</dependency>\n+                  <dependency>org.apache.openjpa:openjpa</dependency>\n+                  <dependency>commons-io:commons-io</dependency>\n+                  <dependency>commons-lang:commons-lang</dependency>\n+                  <dependency>org.apache.geronimo.specs:geronimo-jpa_2.0_spec</dependency>\n+                  <dependency>org.apache.geronimo.specs:geronimo-jms_1.1_spec</dependency>\n+                  <dependency>org.apache.geronimo.specs:geronimo-jta_1.1_spec</dependency>\n+                  <dependency>javax.validation:validation-api</dependency>\n+                  <dependency>net.sourceforge.serp:serp</dependency>\n+                  <dependency>commons-pool:commons-pool</dependency>\n+                  <dependency>commons-dbcp:commons-dbcp</dependency>\n+                  <dependency>commons-collections:commons-collections</dependency>\n+                  <dependency>org.apache.commons:commons-jexl</dependency>\n+                  <dependency>org.connid:connid-framework</dependency>\n+                  <dependency>com.h2database:h2</dependency>\n+                  <dependency>org.slf4j:slf4j-api</dependency>\n+                  <dependency>org.apache.logging.log4j:log4j-api</dependency>\n+                </classpath>\n+\n+                <argument>org.apache.syncope.core.persistence.SQLSchemaGenerator</argument>\n+              </arguments>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>sql</id>\n+                <phase>process-classes</phase>\n+                <goals>\n+                  <goal>exec</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n     <profile>\n       <id>dev</id>\n "},{"sha":"c5dedd9c6ff09bcf7003c097181d5985711994e6","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":28,"deletions":20,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -295,7 +295,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             attributeTO.getValues().add(attribute.getValue().get(0).toString());\n                         }\n \n-                        ((RoleTO) attributableTO).getAttributes().add(attributeTO);\n+                        ((RoleTO) attributableTO).getAttrs().add(attributeTO);\n                     }\n                     break;\n \n@@ -312,14 +312,14 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                         }\n                     }\n \n-                    attributableTO.getAttributes().add(attributeTO);\n+                    attributableTO.getAttrs().add(attributeTO);\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n-                    attributableTO.getDerivedAttributes().add(attributeTO);\n+                    attributableTO.getDerAttrs().add(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n@@ -336,7 +336,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                         }\n                     }\n \n-                    attributableTO.getVirtualAttributes().add(attributeTO);\n+                    attributableTO.getVirAttrs().add(attributeTO);\n                     break;\n \n                 default:\n@@ -391,13 +391,21 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n \n                 ((RoleTO) attributableTO).getEntitlements().addAll(((RoleTO) template).getEntitlements());\n \n+                ((RoleTO) attributableTO).getRAttrTemplates().addAll(((RoleTO) template).getRAttrTemplates());\n+                ((RoleTO) attributableTO).getRDerAttrTemplates().addAll(((RoleTO) template).getRDerAttrTemplates());\n+                ((RoleTO) attributableTO).getRVirAttrTemplates().addAll(((RoleTO) template).getRVirAttrTemplates());\n+                ((RoleTO) attributableTO).getMAttrTemplates().addAll(((RoleTO) template).getMAttrTemplates());\n+                ((RoleTO) attributableTO).getMDerAttrTemplates().addAll(((RoleTO) template).getMDerAttrTemplates());\n+                ((RoleTO) attributableTO).getMVirAttrTemplates().addAll(((RoleTO) template).getMVirAttrTemplates());\n+\n                 ((RoleTO) attributableTO).setAccountPolicy(((RoleTO) template).getAccountPolicy());\n                 ((RoleTO) attributableTO).setPasswordPolicy(((RoleTO) template).getPasswordPolicy());\n \n                 ((RoleTO) attributableTO).setInheritOwner(((RoleTO) template).isInheritOwner());\n-                ((RoleTO) attributableTO).setInheritAttributes(((RoleTO) template).isInheritAttributes());\n-                ((RoleTO) attributableTO).setInheritDerivedAttributes(((RoleTO) template).isInheritDerivedAttributes());\n-                ((RoleTO) attributableTO).setInheritVirtualAttributes(((RoleTO) template).isInheritVirtualAttributes());\n+                ((RoleTO) attributableTO).setInheritTemplates(((RoleTO) template).isInheritTemplates());\n+                ((RoleTO) attributableTO).setInheritAttrs(((RoleTO) template).isInheritAttrs());\n+                ((RoleTO) attributableTO).setInheritDerAttrs(((RoleTO) template).isInheritDerAttrs());\n+                ((RoleTO) attributableTO).setInheritVirAttrs(((RoleTO) template).isInheritVirAttrs());\n                 ((RoleTO) attributableTO).setInheritPasswordPolicy(((RoleTO) template).isInheritPasswordPolicy());\n                 ((RoleTO) attributableTO).setInheritAccountPolicy(((RoleTO) template).isInheritAccountPolicy());\n             }\n@@ -471,7 +479,7 @@ public ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n                 }\n             }\n \n-            connObjectTO.getAttributes().add(attrTO);\n+            connObjectTO.getAttrs().add(attrTO);\n         }\n \n         return connObjectTO;\n@@ -496,7 +504,7 @@ public void retrieveVirAttrValues(final AbstractAttributable owner, final Attrib\n         // -----------------------\n         // Retrieve virtual attribute values if and only if they have not been retrieved yet\n         // -----------------------\n-        for (AbstractVirAttr virAttr : owner.getVirtualAttributes()) {\n+        for (AbstractVirAttr virAttr : owner.getVirAttrs()) {\n             // reset value set\n             if (virAttr.getValues().isEmpty()) {\n                 retrieveVirAttrValue(owner, virAttr, attrUtil, type, externalResources, connFactory);\n@@ -513,7 +521,7 @@ private void retrieveVirAttrValue(\n             final Map<String, ConnectorObject> externalResources,\n             final ConnectorFactory connFactory) {\n \n-        final String schemaName = virAttr.getVirtualSchema().getName();\n+        final String schemaName = virAttr.getSchema().getName();\n         final List<String> values = virAttrCache.get(attrUtil.getType(), owner.getId(), schemaName);\n \n         LOG.debug(\"Retrieve values for virtual attribute {} ({})\", schemaName, type);\n@@ -591,7 +599,7 @@ private Set<ExternalResource> getTargetResource(\n         for (ExternalResource res : attr.getOwner().getResources()) {\n             if (!MappingUtil.getMatchingMappingItems(\n                     attrUtil.getMappingItems(res, MappingPurpose.BOTH),\n-                    attr.getVirtualSchema().getName(), type).isEmpty()) {\n+                    attr.getSchema().getName(), type).isEmpty()) {\n \n                 resources.add(res);\n             }\n@@ -601,30 +609,30 @@ private Set<ExternalResource> getTargetResource(\n     }\n \n     private void fillFromTemplate(final AbstractAttributableTO attributableTO, final AbstractAttributableTO template) {\n-        Map<String, AttributeTO> currentAttrMap = attributableTO.getAttributeMap();\n-        for (AttributeTO templateAttr : template.getAttributes()) {\n+        Map<String, AttributeTO> currentAttrMap = attributableTO.getAttrMap();\n+        for (AttributeTO templateAttr : template.getAttrs()) {\n             if (templateAttr.getValues() != null && !templateAttr.getValues().isEmpty()\n                     && (!currentAttrMap.containsKey(templateAttr.getSchema())\n                     || currentAttrMap.get(templateAttr.getSchema()).getValues().isEmpty())) {\n \n-                attributableTO.getAttributes().add(evaluateAttrTemplate(attributableTO, templateAttr));\n+                attributableTO.getAttrs().add(evaluateAttrTemplate(attributableTO, templateAttr));\n             }\n         }\n \n-        currentAttrMap = attributableTO.getDerivedAttributeMap();\n-        for (AttributeTO templateDerAttr : template.getDerivedAttributes()) {\n+        currentAttrMap = attributableTO.getDerAttrMap();\n+        for (AttributeTO templateDerAttr : template.getDerAttrs()) {\n             if (!currentAttrMap.containsKey(templateDerAttr.getSchema())) {\n-                attributableTO.getDerivedAttributes().add(templateDerAttr);\n+                attributableTO.getDerAttrs().add(templateDerAttr);\n             }\n         }\n \n-        currentAttrMap = attributableTO.getVirtualAttributeMap();\n-        for (AttributeTO templateVirAttr : template.getDerivedAttributes()) {\n+        currentAttrMap = attributableTO.getVirAttrMap();\n+        for (AttributeTO templateVirAttr : template.getDerAttrs()) {\n             if (templateVirAttr.getValues() != null && !templateVirAttr.getValues().isEmpty()\n                     && (!currentAttrMap.containsKey(templateVirAttr.getSchema())\n                     || currentAttrMap.get(templateVirAttr.getSchema()).getValues().isEmpty())) {\n \n-                attributableTO.getVirtualAttributes().add(evaluateAttrTemplate(attributableTO, templateVirAttr));\n+                attributableTO.getVirAttrs().add(evaluateAttrTemplate(attributableTO, templateVirAttr));\n             }\n         }\n     }"},{"sha":"b447835176868429d2560bfa0e24bebd54d0b69d","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.core.init;\n \n-import static org.apache.syncope.core.init.JobInstanceLoader.getJobName;\n-import static org.apache.syncope.core.init.JobInstanceLoader.getTriggerName;\n-\n import java.text.ParseException;\n import java.util.HashSet;\n import java.util.Set;"},{"sha":"d372a8788253e71822a725ae853ef6e7db9e821f","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -227,23 +227,23 @@ private String getRecipientEmail(\n                 break;\n \n             case UserSchema:\n-                UAttr attr = user.getAttribute(recipientAttrName);\n+                UAttr attr = user.getAttr(recipientAttrName);\n                 if (attr != null && !attr.getValuesAsStrings().isEmpty()) {\n                     email = attr.getValuesAsStrings().get(0);\n                 }\n                 break;\n \n             case UserVirtualSchema:\n-                UVirAttr virAttr = user.getVirtualAttribute(recipientAttrName);\n+                UVirAttr virAttr = user.getVirAttr(recipientAttrName);\n                 if (virAttr != null && !virAttr.getValues().isEmpty()) {\n                     email = virAttr.getValues().get(0);\n                 }\n                 break;\n \n             case UserDerivedSchema:\n-                UDerAttr derAttr = user.getDerivedAttribute(recipientAttrName);\n+                UDerAttr derAttr = user.getDerAttr(recipientAttrName);\n                 if (derAttr != null) {\n-                    email = derAttr.getValue(user.getAttributes());\n+                    email = derAttr.getValue(user.getAttrs());\n                 }\n                 break;\n "},{"sha":"342e3477b396cbd59efcb3d146a56857f84a7ec1","filename":"core/src/main/java/org/apache/syncope/core/persistence/SQLSchemaGenerator.java","status":"added","additions":187,"deletions":0,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import javax.persistence.Entity;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.openjpa.enhance.PersistenceCapable;\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl;\n+import org.apache.openjpa.jdbc.meta.MappingTool;\n+import org.apache.openjpa.lib.conf.Configurations;\n+import org.apache.openjpa.lib.meta.ClassArgParser;\n+import org.apache.openjpa.lib.util.Options;\n+import org.apache.openjpa.meta.MetaDataRepository;\n+\n+public final class SQLSchemaGenerator {\n+\n+    private static final String OPTION_PROPERTIES_FILE = \"propertiesFile\";\n+\n+    private static final String OPTION_CONNECTION_PROPERTIES = \"ConnectionProperties\";\n+\n+    private static final String OPTION_CONNECTION_DRIVER_NAME = \"ConnectionDriverName\";\n+\n+    private static final String OPTION_SQL_ACTION = \"schemaAction\";\n+\n+    private static final String OPTION_SQL_FILE = \"sqlFile\";\n+\n+    /**\n+     * Locates and returns a list of class files found under specified class directory.\n+     *\n+     * @param base base class directory\n+     * @return list of class files\n+     */\n+    private static List<File> findEntityClassFiles(final String base) {\n+        File baseDir = new File(base);\n+        if (!baseDir.exists() || !baseDir.isDirectory()) {\n+            throw new IllegalArgumentException(baseDir + \" not found or not a directory\");\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Iterator<File> itor = FileUtils.iterateFiles(baseDir, new String[] {\"class\"}, true);\n+        List<File> entityClasses = new ArrayList<File>();\n+        while (itor.hasNext()) {\n+            entityClasses.add(itor.next());\n+        }\n+\n+        return entityClasses;\n+    }\n+\n+    /**\n+     * @param cls the Class to check\n+     * @return <code>true</code> if the given Class cls implements the interface {@link PersistenceCapable}\n+     */\n+    private static boolean implementsPersistenceCapable(final Class<?> cls) {\n+        boolean isPersistenceCapable = false;\n+        Class<?>[] interfaces = cls.getInterfaces();\n+        for (int i = 0; i < interfaces.length; i++) {\n+            if (interfaces[i].getName().equals(PersistenceCapable.class.getName())) {\n+                isPersistenceCapable = true;\n+                break;\n+            }\n+        }\n+\n+        return isPersistenceCapable;\n+    }\n+\n+    /**\n+     * Filter out all classes which are not PersistenceCapable.\n+     * This is needed since the MappingTool fails if it gets non-persistent capable classes.\n+     *\n+     * @param files List with classPath Files; non persistence classes will be removed\n+     * @param opts filled configuration Options\n+     */\n+    private static void filterPersistenceCapable(final List<File> files, final Options opts) {\n+        JDBCConfiguration conf = new JDBCConfigurationImpl();\n+        Configurations.populateConfiguration(conf, opts);\n+        MetaDataRepository repo = conf.newMetaDataRepositoryInstance();\n+        ClassArgParser cap = repo.getMetaDataFactory().newClassArgParser();\n+\n+        Iterator<File> fileIt = files.iterator();\n+        while (fileIt.hasNext()) {\n+            File classPath = fileIt.next();\n+\n+            Class[] classes = cap.parseTypes(classPath.getAbsolutePath());\n+            if (classes == null) {\n+                System.out.println(\"Found no classes for \" + classPath.getAbsolutePath());\n+            } else {\n+                for (int i = 0; i < classes.length; i++) {\n+                    Class<?> cls = classes[i];\n+\n+                    if (cls.getAnnotation(Entity.class) == null && !implementsPersistenceCapable(cls)) {\n+                        fileIt.remove();\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * @param files List of files\n+     * @return the paths of the given files as String[]\n+     */\n+    private static String[] getFilePaths(final List<File> files) {\n+        String[] args = new String[files.size()];\n+        for (int i = 0; i < files.size(); i++) {\n+            File file = files.get(i);\n+\n+            args[ i] = file.getAbsolutePath();\n+        }\n+        return args;\n+    }\n+\n+    /**\n+     * Processes a list of class file resources and perform the proper mapping action.\n+     */\n+    private static void mappingTool(final List<File> files,\n+            final String persistenceXmlFile, final String sqlFile, final String connectionDriverName,\n+            final String connectionProperties) {\n+\n+        //extendRealmClasspath();\n+\n+        Options opts = new Options();\n+        opts.put(OPTION_PROPERTIES_FILE, persistenceXmlFile);\n+        opts.put(OPTION_CONNECTION_DRIVER_NAME, connectionDriverName);\n+        opts.put(OPTION_CONNECTION_PROPERTIES, connectionProperties);\n+        opts.put(OPTION_SQL_FILE, sqlFile);\n+        opts.put(OPTION_SQL_ACTION, \"build\");\n+\n+        filterPersistenceCapable(files, opts);\n+\n+        // list of input files\n+        final String[] args = getFilePaths(files);\n+\n+        boolean ok = Configurations.runAgainstAllAnchors(opts,\n+                new Configurations.Runnable() {\n+\n+            @Override\n+            public boolean run(final Options opts) throws IOException, SQLException {\n+                JDBCConfiguration conf = new JDBCConfigurationImpl();\n+                try {\n+                    return MappingTool.run(conf, args, opts);\n+                } finally {\n+                    conf.close();\n+                }\n+            }\n+        });\n+\n+        if (!ok) {\n+            throw new IllegalStateException(\"The OpenJPA MappingTool detected an error!\");\n+        }\n+\n+    }\n+\n+    public static void main(final String[] args) {\n+        List<File> entities = findEntityClassFiles(System.getProperty(\"base\"));\n+\n+        mappingTool(entities, System.getProperty(\"persistenceXmlFile\"), System.getProperty(\"sqlFile\"),\n+                System.getProperty(\"connectionDriverName\"),\n+                System.getProperty(\"connectionProperties\").replaceAll(\";\", \"=\"));\n+    }\n+\n+    private SQLSchemaGenerator() {\n+        // Empty constructor for main() class\n+    }\n+}"},{"sha":"fd729b5689e1e06ad2808754fd96deb56f9cf9f5","filename":"core/src/main/java/org/apache/syncope/core/persistence/SysInfoListener.java","status":"renamed","additions":14,"deletions":19,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSysInfoListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSysInfoListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSysInfoListener.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -16,12 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.util;\n+package org.apache.syncope.core.persistence;\n \n import java.util.Date;\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.beans.AbstractSysInfo;\n+import org.apache.syncope.core.util.EntitlementUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -30,30 +31,24 @@ public class SysInfoListener {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(SysInfoListener.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(SysInfoListener.class);\n \n     @PrePersist\n     @PreUpdate\n     public void setSysInfo(final AbstractSysInfo entity) {\n-        try {\n-            final String username = EntitlementUtil.getAuthenticatedUsername();\n-            LOG.debug(\"Set system properties for '{}'\", entity);\n+        final String username = EntitlementUtil.getAuthenticatedUsername();\n+        LOG.debug(\"Set system properties for '{}'\", entity);\n \n-            final Date now = new Date();\n+        final Date now = new Date();\n \n-            if (entity.getCreationDate() == null) {\n-                LOG.debug(\"Set creation date '{}' and creator '{}' for '{}'\", new Object[] {now, username, entity});\n-                entity.setCreationDate(now);\n-                entity.setCreator(username);\n-            }\n-\n-            LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", new Object[] {now, username, entity});\n-            entity.setLastModifier(username);\n-            entity.setLastChangeDate(now);\n-        } catch (Exception e) {\n-            // In case of exception, do not trace create/update event info: maybe it's an internal management action.\n-            // See SyncopeAuthenticationProvider for instance.\n-            LOG.info(\"Unauthenticated user action: no system property to be update\");\n+        if (entity.getCreationDate() == null) {\n+            LOG.debug(\"Set creation date '{}' and creator '{}' for '{}'\", now, username, entity);\n+            entity.setCreationDate(now);\n+            entity.setCreator(username);\n         }\n+\n+        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, username, entity);\n+        entity.setLastModifier(username);\n+        entity.setLastChangeDate(now);\n     }\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/util/SysInfoListener.java"},{"sha":"db84609b2bfdd633692808a1b84989f40233ec68","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttr.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -67,9 +67,7 @@ public <T extends AbstractAttrValue> T addValue(final String value, final Attrib\n \n     public abstract <T extends AbstractAttributable> void setOwner(T owner);\n \n-    public abstract <T extends AbstractSchema> T getSchema();\n-\n-    public abstract <T extends AbstractSchema> void setSchema(T schema);\n+    public abstract <T extends AbstractNormalSchema> T getSchema();\n \n     public abstract <T extends AbstractAttrValue> boolean addValue(T attrValue);\n "},{"sha":"8786cce14f36bf482384809c87b6451cb5003831","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrTemplate.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans;\n+\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+\n+@MappedSuperclass\n+public abstract class AbstractAttrTemplate<T extends AbstractSchema> extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 4829112252713766666L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    protected Long id;\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public abstract SyncopeRole getOwner();\n+\n+    public abstract void setOwner(SyncopeRole role);\n+\n+    public abstract T getSchema();\n+\n+    public abstract void setSchema(T schema);\n+}"},{"sha":"b155dd39b9a8a218be45b484923abc18703af77e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrUniqueValue.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -22,7 +22,7 @@ public abstract class AbstractAttrUniqueValue extends AbstractAttrValue {\n \n     private static final long serialVersionUID = -1114553598914979353L;\n \n-    public abstract <T extends AbstractSchema> T getSchema();\n+    public abstract <T extends AbstractNormalSchema> T getSchema();\n \n-    public abstract <T extends AbstractSchema> void setSchema(T schema);\n+    public abstract <T extends AbstractNormalSchema> void setSchema(T schema);\n }"},{"sha":"7ba61184960cfaf1cc8e720583442d67ff72e02e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -102,7 +102,7 @@ public void setStringValue(final String stringValue) {\n         this.stringValue = stringValue;\n     }\n \n-    public <T extends AbstractAttrValue> void parseValue(final AbstractSchema schema, final String value)\n+    public <T extends AbstractAttrValue> void parseValue(final AbstractNormalSchema schema, final String value)\n             throws ParsingValidationException {\n \n         Exception exception = null;"},{"sha":"e0ecaaf7a25bd4897cb9cd14eb3116c9e2506bae","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -30,9 +30,9 @@ public abstract class AbstractAttributable extends AbstractSysInfo {\n     private static final long serialVersionUID = -4801685541488201119L;\n \n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n+    public <T extends AbstractAttr> T getAttr(final String schemaName) {\n         T result = null;\n-        for (Iterator<? extends AbstractAttr> itor = getAttributes().iterator(); result == null && itor.hasNext();) {\n+        for (Iterator<? extends AbstractAttr> itor = getAttrs().iterator(); result == null && itor.hasNext();) {\n             final T attribute = (T) itor.next();\n             if (attribute.getSchema() != null && schemaName.equals(attribute.getSchema().getName())) {\n                 result = attribute;\n@@ -42,43 +42,43 @@ public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSchemaName) {\n+    public <T extends AbstractDerAttr> T getDerAttr(final String derSchemaName) {\n         T result = null;\n-        for (Iterator<? extends AbstractDerAttr> itor = getDerivedAttributes().iterator();\n+        for (Iterator<? extends AbstractDerAttr> itor = getDerAttrs().iterator();\n                 result == null && itor.hasNext();) {\n \n-            T derivedAttribute = (T) itor.next();\n-            if (derivedAttribute.getDerivedSchema() != null\n-                    && derivedSchemaName.equals(derivedAttribute.getDerivedSchema().getName())) {\n+            T derAttr = (T) itor.next();\n+            if (derAttr.getSchema() != null\n+                    && derSchemaName.equals(derAttr.getSchema().getName())) {\n \n-                result = derivedAttribute;\n+                result = derAttr;\n             }\n         }\n \n         return result;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractVirAttr> T getVirtualAttribute(final String virtualSchemaName) {\n+    public <T extends AbstractVirAttr> T getVirAttr(final String virSchemaName) {\n         T result = null;\n-        for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator();\n+        for (Iterator<? extends AbstractVirAttr> itor = getVirAttrs().iterator();\n                 result == null && itor.hasNext();) {\n \n-            T virtualAttribute = (T) itor.next();\n-            if (virtualAttribute.getVirtualSchema() != null\n-                    && virtualSchemaName.equals(virtualAttribute.getVirtualSchema().getName())) {\n+            T virAttr = (T) itor.next();\n+            if (virAttr.getSchema() != null\n+                    && virSchemaName.equals(virAttr.getSchema().getName())) {\n \n-                result = virtualAttribute;\n+                result = virAttr;\n             }\n         }\n \n         return result;\n     }\n \n-    protected Map<AbstractSchema, AbstractAttr> getAttrMap() {\n-        final Map<AbstractSchema, AbstractAttr> map = new HashMap<AbstractSchema, AbstractAttr>();\n+    protected Map<AbstractNormalSchema, AbstractAttr> getAttrMap() {\n+        final Map<AbstractNormalSchema, AbstractAttr> map = new HashMap<AbstractNormalSchema, AbstractAttr>();\n \n-        for (AbstractAttr attr : getAttributes()) {\n+        for (AbstractAttr attr : getAttrs()) {\n             map.put(attr.getSchema(), attr);\n         }\n \n@@ -88,8 +88,8 @@ protected Map<AbstractSchema, AbstractAttr> getAttrMap() {\n     protected Map<AbstractDerSchema, AbstractDerAttr> getDerAttrMap() {\n         final Map<AbstractDerSchema, AbstractDerAttr> map = new HashMap<AbstractDerSchema, AbstractDerAttr>();\n \n-        for (AbstractDerAttr attr : getDerivedAttributes()) {\n-            map.put(attr.getDerivedSchema(), attr);\n+        for (AbstractDerAttr attr : getDerAttrs()) {\n+            map.put(attr.getSchema(), attr);\n         }\n \n         return map;\n@@ -98,38 +98,38 @@ protected Map<AbstractDerSchema, AbstractDerAttr> getDerAttrMap() {\n     protected Map<AbstractVirSchema, AbstractVirAttr> getVirAttrMap() {\n         final Map<AbstractVirSchema, AbstractVirAttr> map = new HashMap<AbstractVirSchema, AbstractVirAttr>();\n \n-        for (AbstractVirAttr attr : getVirtualAttributes()) {\n-            map.put(attr.getVirtualSchema(), attr);\n+        for (AbstractVirAttr attr : getVirAttrs()) {\n+            map.put(attr.getSchema(), attr);\n         }\n \n         return map;\n     }\n \n     public abstract Long getId();\n \n-    public abstract <T extends AbstractAttr> boolean addAttribute(T attribute);\n+    public abstract <T extends AbstractAttr> boolean addAttr(T attribute);\n \n-    public abstract <T extends AbstractAttr> boolean removeAttribute(T attribute);\n+    public abstract <T extends AbstractAttr> boolean removeAttr(T attribute);\n \n-    public abstract List<? extends AbstractAttr> getAttributes();\n+    public abstract List<? extends AbstractAttr> getAttrs();\n \n-    public abstract void setAttributes(List<? extends AbstractAttr> attributes);\n+    public abstract void setAttrs(List<? extends AbstractAttr> attributes);\n \n-    public abstract <T extends AbstractDerAttr> boolean addDerivedAttribute(T derivedAttribute);\n+    public abstract <T extends AbstractDerAttr> boolean addDerAttr(T derivedAttribute);\n \n-    public abstract <T extends AbstractDerAttr> boolean removeDerivedAttribute(T derivedAttribute);\n+    public abstract <T extends AbstractDerAttr> boolean removeDerAttr(T derivedAttribute);\n \n-    public abstract List<? extends AbstractDerAttr> getDerivedAttributes();\n+    public abstract List<? extends AbstractDerAttr> getDerAttrs();\n \n-    public abstract void setDerivedAttributes(List<? extends AbstractDerAttr> derivedAttributes);\n+    public abstract void setDerAttrs(List<? extends AbstractDerAttr> derivedAttributes);\n \n-    public abstract <T extends AbstractVirAttr> boolean addVirtualAttribute(T virtualAttributes);\n+    public abstract <T extends AbstractVirAttr> boolean addVirAttr(T virtualAttributes);\n \n-    public abstract <T extends AbstractVirAttr> boolean removeVirtualAttribute(T virtualAttribute);\n+    public abstract <T extends AbstractVirAttr> boolean removeVirAttr(T virtualAttribute);\n \n-    public abstract List<? extends AbstractVirAttr> getVirtualAttributes();\n+    public abstract List<? extends AbstractVirAttr> getVirAttrs();\n \n-    public abstract void setVirtualAttributes(List<? extends AbstractVirAttr> virtualAttributes);\n+    public abstract void setVirAttrs(List<? extends AbstractVirAttr> virtualAttributes);\n \n     protected abstract Set<ExternalResource> internalGetResources();\n "},{"sha":"882b121120a3889425e2ce0db1f05addf92220d8","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractDerAttr.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -57,14 +57,12 @@ public String getValue(final Collection<? extends AbstractAttr> attributes) {\n         jexlUtil.addFieldsToContext(getOwner(), jexlContext);\n \n         // Evaluate expression using the context prepared before\n-        return jexlUtil.evaluate(getDerivedSchema().getExpression(), jexlContext);\n+        return jexlUtil.evaluate(getSchema().getExpression(), jexlContext);\n     }\n \n     public abstract <T extends AbstractAttributable> T getOwner();\n \n     public abstract <T extends AbstractAttributable> void setOwner(T owner);\n \n-    public abstract <T extends AbstractDerSchema> T getDerivedSchema();\n-\n-    public abstract <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema);\n+    public abstract <T extends AbstractDerSchema> T getSchema();\n }"},{"sha":"a810045b65b9e35ee0e9780c2f4989e885d3e513","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractDerSchema.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -26,7 +26,7 @@\n \n @MappedSuperclass\n @SchemaNameCheck\n-public abstract class AbstractDerSchema extends AbstractBaseBean {\n+public abstract class AbstractDerSchema extends AbstractSchema {\n \n     private static final long serialVersionUID = -6173643493348674060L;\n \n@@ -36,10 +36,12 @@ public abstract class AbstractDerSchema extends AbstractBaseBean {\n     @Column(nullable = false)\n     private String expression;\n \n+    @Override\n     public String getName() {\n         return name;\n     }\n \n+    @Override\n     public void setName(final String name) {\n         this.name = name;\n     }"},{"sha":"0e0ac4e3f64a1f9450569a8d946acc9d00103d2b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractNormalSchema.java","status":"added","additions":209,"deletions":0,"changes":209,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractNormalSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,209 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans;\n+\n+import java.lang.reflect.Constructor;\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.Id;\n+import javax.persistence.Lob;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.Transient;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n+import org.apache.syncope.common.types.AttributeSchemaType;\n+import org.apache.syncope.core.persistence.validation.attrvalue.AbstractValidator;\n+import org.apache.syncope.core.persistence.validation.attrvalue.BasicValidator;\n+import org.apache.syncope.core.persistence.validation.entity.SchemaCheck;\n+import org.apache.syncope.core.persistence.validation.entity.SchemaNameCheck;\n+\n+@MappedSuperclass\n+@SchemaCheck\n+@SchemaNameCheck\n+public abstract class AbstractNormalSchema extends AbstractSchema {\n+\n+    private static final long serialVersionUID = -8621028596062054739L;\n+\n+    @Id\n+    private String name;\n+\n+    @Column(nullable = false)\n+    @Enumerated(EnumType.STRING)\n+    private AttributeSchemaType type;\n+\n+    @Column(nullable = false)\n+    private String mandatoryCondition;\n+\n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer multivalue;\n+\n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer uniqueConstraint;\n+\n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer readonly;\n+\n+    @Column(nullable = true)\n+    private String conversionPattern;\n+\n+    @Column(nullable = true)\n+    private String validatorClass;\n+\n+    @Column(nullable = true)\n+    @Lob\n+    private String enumerationValues;\n+\n+    @Column(nullable = true)\n+    @Lob\n+    private String enumerationKeys;\n+\n+    @Transient\n+    private AbstractValidator validator;\n+\n+    public AbstractNormalSchema() {\n+        super();\n+\n+        type = AttributeSchemaType.String;\n+        mandatoryCondition = Boolean.FALSE.toString();\n+        multivalue = getBooleanAsInteger(false);\n+        uniqueConstraint = getBooleanAsInteger(false);\n+        readonly = getBooleanAsInteger(false);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n+    public AttributeSchemaType getType() {\n+        return type;\n+    }\n+\n+    public void setType(final AttributeSchemaType type) {\n+        this.type = type;\n+    }\n+\n+    public String getMandatoryCondition() {\n+        return mandatoryCondition;\n+    }\n+\n+    public void setMandatoryCondition(final String mandatoryCondition) {\n+        this.mandatoryCondition = mandatoryCondition;\n+    }\n+\n+    public boolean isMultivalue() {\n+        return isBooleanAsInteger(multivalue);\n+    }\n+\n+    public void setMultivalue(boolean multivalue) {\n+        this.multivalue = getBooleanAsInteger(multivalue);\n+    }\n+\n+    public boolean isUniqueConstraint() {\n+        return isBooleanAsInteger(uniqueConstraint);\n+    }\n+\n+    public void setUniqueConstraint(final boolean uniquevalue) {\n+        this.uniqueConstraint = getBooleanAsInteger(uniquevalue);\n+    }\n+\n+    public boolean isReadonly() {\n+        return isBooleanAsInteger(readonly);\n+    }\n+\n+    public void setReadonly(final boolean readonly) {\n+        this.readonly = getBooleanAsInteger(readonly);\n+    }\n+\n+    public AbstractValidator getValidator() {\n+        if (validator != null) {\n+            return validator;\n+        }\n+\n+        if (getValidatorClass() != null && getValidatorClass().length() > 0) {\n+            try {\n+                Constructor<?> validatorConstructor = Class.forName(getValidatorClass()).\n+                        getConstructor(new Class<?>[] {getClass().getSuperclass()});\n+                validator = (AbstractValidator) validatorConstructor.newInstance(this);\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate validator of type {}, reverting to {}\",\n+                        getValidatorClass(), BasicValidator.class.getSimpleName(), e);\n+            }\n+        }\n+\n+        if (validator == null) {\n+            validator = new BasicValidator(this);\n+        }\n+\n+        return validator;\n+    }\n+\n+    public String getValidatorClass() {\n+        return validatorClass;\n+    }\n+\n+    public void setValidatorClass(final String validatorClass) {\n+        this.validatorClass = validatorClass;\n+    }\n+\n+    public String getEnumerationValues() {\n+        return enumerationValues;\n+    }\n+\n+    public void setEnumerationValues(final String enumerationValues) {\n+        this.enumerationValues = enumerationValues;\n+    }\n+\n+    public String getEnumerationKeys() {\n+        return enumerationKeys;\n+    }\n+\n+    public void setEnumerationKeys(String enumerationKeys) {\n+        this.enumerationKeys = enumerationKeys;\n+    }\n+\n+    public String getConversionPattern() {\n+        if (!getType().isConversionPatternNeeded()) {\n+            LOG.debug(\"Conversion pattern is not needed: {}'s type is {}\", this, getType());\n+        }\n+\n+        return conversionPattern;\n+    }\n+\n+    public void setConversionPattern(final String conversionPattern) {\n+        if (!getType().isConversionPatternNeeded()) {\n+            LOG.warn(\"Conversion pattern will be ignored: this attribute type is {}\", getType());\n+        }\n+\n+        this.conversionPattern = conversionPattern;\n+    }\n+}"},{"sha":"8028b10efc7f57bc314424731c350a58f0dec8e9","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":3,"deletions":185,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,193 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n-import static javax.persistence.EnumType.STRING;\n-\n-import java.lang.reflect.Constructor;\n-import javax.persistence.Basic;\n-import javax.persistence.Column;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Id;\n-import javax.persistence.Lob;\n-import javax.persistence.MappedSuperclass;\n-import javax.persistence.Transient;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n-import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.core.persistence.validation.attrvalue.AbstractValidator;\n-import org.apache.syncope.core.persistence.validation.attrvalue.BasicValidator;\n-import org.apache.syncope.core.persistence.validation.entity.SchemaCheck;\n-import org.apache.syncope.core.persistence.validation.entity.SchemaNameCheck;\n-\n-@MappedSuperclass\n-@SchemaCheck\n-@SchemaNameCheck\n public abstract class AbstractSchema extends AbstractBaseBean {\n \n-    public static String enumValuesSeparator = \";\";\n-\n-    private static final long serialVersionUID = -8621028596062054739L;\n-\n-    @Id\n-    private String name;\n-\n-    @Column(nullable = false)\n-    @Enumerated(STRING)\n-    private AttributeSchemaType type;\n-\n-    @Column(nullable = false)\n-    private String mandatoryCondition;\n-\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer multivalue;\n-\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer uniqueConstraint;\n-\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer readonly;\n-\n-    @Column(nullable = true)\n-    private String conversionPattern;\n-\n-    @Column(nullable = true)\n-    private String validatorClass;\n-\n-    @Column(nullable = true)\n-    @Lob\n-    private String enumerationValues;\n-\n-    @Column(nullable = true)\n-    @Lob\n-    private String enumerationKeys;\n-\n-    @Transient\n-    private AbstractValidator validator;\n-\n-    public AbstractSchema() {\n-        super();\n-\n-        type = AttributeSchemaType.String;\n-        mandatoryCondition = Boolean.FALSE.toString();\n-        multivalue = getBooleanAsInteger(false);\n-        uniqueConstraint = getBooleanAsInteger(false);\n-        readonly = getBooleanAsInteger(false);\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(final String name) {\n-        this.name = name;\n-    }\n-\n-    public AttributeSchemaType getType() {\n-        return type;\n-    }\n-\n-    public void setType(final AttributeSchemaType type) {\n-        this.type = type;\n-    }\n-\n-    public String getMandatoryCondition() {\n-        return mandatoryCondition;\n-    }\n-\n-    public void setMandatoryCondition(final String mandatoryCondition) {\n-        this.mandatoryCondition = mandatoryCondition;\n-    }\n-\n-    public boolean isMultivalue() {\n-        return isBooleanAsInteger(multivalue);\n-    }\n-\n-    public void setMultivalue(boolean multivalue) {\n-        this.multivalue = getBooleanAsInteger(multivalue);\n-    }\n-\n-    public boolean isUniqueConstraint() {\n-        return isBooleanAsInteger(uniqueConstraint);\n-    }\n-\n-    public void setUniqueConstraint(final boolean uniquevalue) {\n-        this.uniqueConstraint = getBooleanAsInteger(uniquevalue);\n-    }\n-\n-    public boolean isReadonly() {\n-        return isBooleanAsInteger(readonly);\n-    }\n-\n-    public void setReadonly(final boolean readonly) {\n-        this.readonly = getBooleanAsInteger(readonly);\n-    }\n-\n-    public AbstractValidator getValidator() {\n-        if (validator != null) {\n-            return validator;\n-        }\n-\n-        if (getValidatorClass() != null && getValidatorClass().length() > 0) {\n-            try {\n-                Constructor validatorConstructor = Class.forName(getValidatorClass()).getConstructor(\n-                        new Class[] {getClass().getSuperclass()});\n-                validator = (AbstractValidator) validatorConstructor.newInstance(this);\n-            } catch (Exception e) {\n-                LOG.error(\"Could not instantiate validator of type \" + getValidatorClass()\n-                        + \", reverting to \" + BasicValidator.class.getSimpleName(), e);\n-            }\n-        }\n-\n-        if (validator == null) {\n-            validator = new BasicValidator(this);\n-        }\n-\n-        return validator;\n-    }\n-\n-    public String getValidatorClass() {\n-        return validatorClass;\n-    }\n-\n-    public void setValidatorClass(final String validatorClass) {\n-        this.validatorClass = validatorClass;\n-    }\n-\n-    public String getEnumerationValues() {\n-        return enumerationValues;\n-    }\n-\n-    public void setEnumerationValues(final String enumerationValues) {\n-        this.enumerationValues = enumerationValues;\n-    }\n-\n-    public String getEnumerationKeys() {\n-        return enumerationKeys;\n-    }\n-\n-    public void setEnumerationKeys(String enumerationKeys) {\n-        this.enumerationKeys = enumerationKeys;\n-    }\n-\n-    public String getConversionPattern() {\n-        if (!getType().isConversionPatternNeeded()) {\n-            LOG.debug(\"Conversion pattern is not needed: {}'s type is {}\", this, getType());\n-        }\n-\n-        return conversionPattern;\n-    }\n+    private static final long serialVersionUID = 2251957673265528044L;\n \n-    public void setConversionPattern(final String conversionPattern) {\n-        if (!getType().isConversionPatternNeeded()) {\n-            LOG.warn(\"Conversion pattern will be ignored: \" + \"this attribute type is \" + getType());\n-        }\n+    public abstract String getName();\n \n-        this.conversionPattern = conversionPattern;\n-    }\n+    public abstract void setName(String name);\n }"},{"sha":"9d7440b01cdc94de94d31f39c32ba24d8c50398c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSysInfo.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSysInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSysInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSysInfo.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -24,7 +24,7 @@\n import javax.persistence.MappedSuperclass;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n-import org.apache.syncope.core.util.SysInfoListener;\n+import org.apache.syncope.core.persistence.SysInfoListener;\n \n /**\n  * Abstract wrapper for common system information.\n@@ -37,9 +37,8 @@ public abstract class AbstractSysInfo extends AbstractBaseBean {\n \n     /**\n      * Username of the user that has created this profile.\n-     * <p>\n-     * Cannot be used a reference to an existing user for two main reasons: the creator can be the user <tt>admin</tt>;\n-     * the creator could have been removed.\n+     * <br/>\n+     * Reference to existing user cannot be used: the creator can either be <tt>admin</tt> or was deleted.\n      */\n     @Column(nullable = false)\n     private String creator;\n@@ -53,21 +52,20 @@ public abstract class AbstractSysInfo extends AbstractBaseBean {\n \n     /**\n      * Username of the user that has performed the last modification to this profile.\n-     * <p>\n-     * This field cannot be null: at creation time it have to be initialized with the creator username.\n-     * <p>\n-     * The modifier can be the user itself whether the last performed change has been a self-modification.\n-     * <p>\n-     * Cannot be used a reference to an existing user for two main reasons: the modifier can be the user <tt>admin</tt>;\n-     * the modifier could have been removed.\n+     * <br/>\n+     * This field cannot be null: at creation time it needs to be initialized with the creator username.\n+     * <br/>\n+     * The modifier can be the user itself if the last performed change was a self-modification.\n+     * <br/>\n+     * Reference to existing user cannot be used: the creator can either be <tt>admin</tt> or was deleted.\n      */\n     @Column(nullable = false)\n     private String lastModifier;\n \n     /**\n      * Last change date.\n-     * <p>\n-     * This field cannot be null: at creation time it has to be initialized with <tt>creationDate</tt> field value.\n+     * <br/>\n+     * This field cannot be null: at creation time it needs to be initialized with <tt>creationDate</tt> field value.\n      */\n     @Column(nullable = false)\n     @Temporal(TemporalType.TIMESTAMP)"},{"sha":"9fbb0e40c3e39c1438e9b0d8495600e79b5265a3","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -37,33 +37,34 @@ public abstract class AbstractVirAttr extends AbstractBaseBean {\n     protected Long id;\n \n     @Transient\n-    protected List<String> values;\n+    protected List<String> values = new ArrayList<String>();\n \n     public Long getId() {\n         return id;\n     }\n \n-    public void setValues(final List<String> values) {\n-        this.values = values;\n+    public List<String> getValues() {\n+        return values;\n     }\n \n-    public void addValue(final String value) {\n-        if (values == null) {\n-            values = new ArrayList<String>();\n-        }\n+    public boolean addValue(final String value) {\n+        return !values.contains(value) && values.add(value);\n+    }\n \n-        if (!values.contains(value)) {\n-            values.add(value);\n-        }\n+    public boolean removeValue(final String value) {\n+        return values.remove(value);\n     }\n \n-    public abstract List<String> getValues();\n+    public void setValues(final List<String> values) {\n+        this.values.clear();\n+        if (values != null && !values.isEmpty()) {\n+            this.values.addAll(values);\n+        }\n+    }\n \n     public abstract <T extends AbstractAttributable> T getOwner();\n \n     public abstract <T extends AbstractAttributable> void setOwner(T owner);\n \n-    public abstract <T extends AbstractVirSchema> T getVirtualSchema();\n-\n-    public abstract <T extends AbstractVirSchema> void setVirtualSchema(T derivedSchema);\n+    public abstract <T extends AbstractVirSchema> T getSchema();\n }"},{"sha":"1f0f1575374b0039f3c854f996f470337bc997fe","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractVirSchema.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -29,7 +29,7 @@\n \n @MappedSuperclass\n @SchemaNameCheck\n-public abstract class AbstractVirSchema extends AbstractBaseBean {\n+public abstract class AbstractVirSchema extends AbstractSchema {\n \n     @Id\n     private String name;\n@@ -45,10 +45,12 @@ public AbstractVirSchema() {\n         readonly = getBooleanAsInteger(false);\n     }\n \n+    @Override\n     public String getName() {\n         return name;\n     }\n \n+    @Override\n     public void setName(final String name) {\n         this.name = name;\n     }"},{"sha":"acd2586c0a0bc7c3130ccaf2aa4e72a843984876","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MAttr.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,18 +21,18 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.Id;\n-import javax.persistence.JoinColumn;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.validation.Valid;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n public class MAttr extends AbstractAttr {\n@@ -45,9 +45,9 @@ public class MAttr extends AbstractAttr {\n     @ManyToOne(fetch = FetchType.EAGER)\n     private Membership owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER)\n-    @JoinColumn(name = \"schema_name\")\n-    private MSchema schema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private MAttrTemplate template;\n \n     @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n@@ -81,18 +81,18 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (Membership) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractSchema> T getSchema() {\n-        return (T) schema;\n+    public MAttrTemplate getTemplate() {\n+        return template;\n+    }\n+\n+    public void setTemplate(final MAttrTemplate template) {\n+        this.template = template;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n-        if (!(schema instanceof MSchema)) {\n-            throw new ClassCastException(\"schema is expected to be typed MSchema: \" + schema.getClass().getName());\n-        }\n-        this.schema = (MSchema) schema;\n+    public <T extends AbstractNormalSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n \n     @Override\n@@ -125,7 +125,6 @@ public <T extends AbstractAttrValue> List<T> getValues() {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public <T extends AbstractAttrValue> void setValues(final List<T> attributeValues) {\n-\n         this.values.clear();\n         if (attributeValues != null && !attributeValues.isEmpty()) {\n             for (T mav : attributeValues) {"},{"sha":"a727eedbb2f45e74795cdf59812d207babe3990c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MAttrTemplate.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.membership;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+\n+@Entity\n+public class MAttrTemplate extends AbstractAttrTemplate<MSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private MSchema schema;\n+\n+    @Override\n+    public MSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final MSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"c7a662193a29dd98b6623ae792138c95c5a166f5","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MAttrUniqueValue.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -25,7 +25,7 @@\n import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n public class MAttrUniqueValue extends AbstractAttrUniqueValue {\n@@ -63,12 +63,12 @@ public <T extends AbstractAttr> void setAttribute(final T attribute) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> T getSchema() {\n+    public <T extends AbstractNormalSchema> T getSchema() {\n         return (T) schema;\n     }\n \n     @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n+    public <T extends AbstractNormalSchema> void setSchema(final T schema) {\n         if (!(schema instanceof MSchema)) {\n             throw new ClassCastException(\"expected type MSchema, found: \" + schema.getClass().getName());\n         }"},{"sha":"bea20b24300ecf4ebc596eb02c633995221ee2b8","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MDerAttr.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.beans.membership;\n \n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n@@ -33,8 +35,9 @@ public class MDerAttr extends AbstractDerAttr {\n     @ManyToOne\n     private Membership owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER)\n-    private MDerSchema derivedSchema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private MDerAttrTemplate template;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -50,17 +53,17 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (Membership) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractDerSchema> T getDerivedSchema() {\n-        return (T) derivedSchema;\n+    public MDerAttrTemplate getTemplate() {\n+        return template;\n+    }\n+\n+    public void setTemplate(final MDerAttrTemplate template) {\n+        this.template = template;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(final T derivedSchema) {\n-        if (!(derivedSchema instanceof MDerSchema)) {\n-            throw new ClassCastException(\"expected type MDerSchema, found: \" + derivedSchema.getClass().getName());\n-        }\n-        this.derivedSchema = (MDerSchema) derivedSchema;\n+    public <T extends AbstractDerSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n }"},{"sha":"f8fe5097a41e92dca455f6a4893e34d52a4c3063","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MDerAttrTemplate.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.membership;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+\n+@Entity\n+public class MDerAttrTemplate extends AbstractAttrTemplate<MDerSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private MDerSchema schema;\n+\n+    @Override\n+    public MDerSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final MDerSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"f0e1280ccf93aa0b4a35f4c8dab34121292734ba","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MSchema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,11 +20,11 @@\n \n import javax.persistence.Cacheable;\n import javax.persistence.Entity;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n @Cacheable\n-public class MSchema extends AbstractSchema {\n+public class MSchema extends AbstractNormalSchema {\n \n     private static final long serialVersionUID = -8053736450044590651L;\n "},{"sha":"dbdfbe3a32223ab88b0a43a6a07918e1821a99df","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MVirAttr.java","status":"modified","additions":30,"deletions":12,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,9 +20,11 @@\n \n import java.util.Collections;\n import java.util.List;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n@@ -35,8 +37,9 @@ public class MVirAttr extends AbstractVirAttr {\n     @ManyToOne\n     private Membership owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER)\n-    private MVirSchema virtualSchema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private MVirAttrTemplate template;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -53,22 +56,37 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (Membership) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractVirSchema> T getVirtualSchema() {\n-        return (T) virtualSchema;\n+    public MVirAttrTemplate getTemplate() {\n+        return template;\n+    }\n+\n+    public void setTemplate(final MVirAttrTemplate template) {\n+        this.template = template;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n-        if (!(virtualSchema instanceof MVirSchema)) {\n-            throw new ClassCastException(\"expected type MVirSchema, found: \" + virtualSchema.getClass().getName());\n-        }\n-        this.virtualSchema = (MVirSchema) virtualSchema;\n+    public <T extends AbstractVirSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n \n     @Override\n     public List<String> getValues() {\n         return Collections.emptyList();\n     }\n+\n+    @Override\n+    public boolean addValue(final String value) {\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean removeValue(final String value) {\n+        return false;\n+    }\n+\n+    @Override\n+    public void setValues(final List<String> values) {\n+        // do nothing\n+    }\n }"},{"sha":"940c5f7538a3444d2f995c670cbec87add8d5b4a","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/MVirAttrTemplate.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.membership;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+\n+@Entity\n+public class MVirAttrTemplate extends AbstractAttrTemplate<MVirSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private MVirSchema schema;\n+\n+    @Override\n+    public MVirSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final MVirSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"549c41382d85aa200bf99271afa3caf84770d4ec","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":78,"deletions":41,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -40,7 +40,7 @@\n \n @Entity\n @Table(uniqueConstraints =\n-@UniqueConstraint(columnNames = {\"syncopeUser_id\", \"syncopeRole_id\"}))\n+        @UniqueConstraint(columnNames = {\"syncopeUser_id\", \"syncopeRole_id\"}))\n public class Membership extends AbstractAttributable {\n \n     private static final long serialVersionUID = 5030106264797289469L;\n@@ -56,22 +56,22 @@ public class Membership extends AbstractAttributable {\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<MAttr> attributes;\n+    private List<MAttr> attrs;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<MDerAttr> derivedAttributes;\n+    private List<MDerAttr> derAttrs;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<MVirAttr> virtualAttributes;\n+    private List<MVirAttr> virAttrs;\n \n     public Membership() {\n         super();\n \n-        attributes = new ArrayList<MAttr>();\n-        derivedAttributes = new ArrayList<MDerAttr>();\n-        virtualAttributes = new ArrayList<MVirAttr>();\n+        attrs = new ArrayList<MAttr>();\n+        derAttrs = new ArrayList<MDerAttr>();\n+        virAttrs = new ArrayList<MVirAttr>();\n     }\n \n     @Override\n@@ -101,95 +101,132 @@ public void setSyncopeUser(final SyncopeUser syncopeUser) {\n     }\n \n     @Override\n-    public <T extends AbstractAttr> boolean addAttribute(final T attribute) {\n-        if (!(attribute instanceof MAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed MAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean addAttr(final T attr) {\n+        if (!(attr instanceof MAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed MAttr: \" + attr.getClass().getName());\n         }\n-        return attributes.add((MAttr) attribute);\n+        return attrs.add((MAttr) attr);\n     }\n \n     @Override\n-    public <T extends AbstractAttr> boolean removeAttribute(final T attribute) {\n-        if (!(attribute instanceof MAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed MAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean removeAttr(final T attr) {\n+        if (!(attr instanceof MAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed MAttr: \" + attr.getClass().getName());\n         }\n-        return attributes.remove((MAttr) attribute);\n+        return attrs.remove((MAttr) attr);\n     }\n \n     @Override\n-    public List<? extends AbstractAttr> getAttributes() {\n-        return attributes;\n+    public List<? extends AbstractAttr> getAttrs() {\n+        return attrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setAttributes(final List<? extends AbstractAttr> attributes) {\n-        this.attributes.clear();\n-        if (attributes != null && !attributes.isEmpty()) {\n-            this.attributes.addAll((List<MAttr>) attributes);\n+    public void setAttrs(final List<? extends AbstractAttr> attrs) {\n+        this.attrs.clear();\n+        if (attrs != null && !attrs.isEmpty()) {\n+            for (AbstractAttr attr : attrs) {\n+                addAttr(attr);\n+            }\n         }\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean addDerAttr(final T derAttr) {\n         if (!(derAttr instanceof MDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed MDerAttr: \" + derAttr.getClass().getName());\n         }\n-        return derivedAttributes.add((MDerAttr) derAttr);\n+\n+        if (getSyncopeRole() != null && derAttr.getSchema() != null) {\n+            MDerAttrTemplate found = null;\n+            for (MDerAttrTemplate template : getSyncopeRole().findInheritedTemplates(MDerAttrTemplate.class)) {\n+                if (derAttr.getSchema().equals(template.getSchema())) {\n+                    found = template;\n+                }\n+            }\n+            if (found != null) {\n+                ((MDerAttr) derAttr).setTemplate(found);\n+                return derAttrs.add((MDerAttr) derAttr);\n+            }\n+        }\n+\n+        LOG.warn(\"Attribute not added because either role was not yet set, \"\n+                + \"schema was not specified or no template for that schema is available\");\n+        return false;\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean removeDerAttr(final T derAttr) {\n         if (!(derAttr instanceof MDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed MDerAttr: \" + derAttr.getClass().getName());\n         }\n \n-        return derivedAttributes.remove((MDerAttr) derAttr);\n+        return derAttrs.remove((MDerAttr) derAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractDerAttr> getDerivedAttributes() {\n-        return derivedAttributes;\n+    public List<? extends AbstractDerAttr> getDerAttrs() {\n+        return derAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setDerivedAttributes(final List<? extends AbstractDerAttr> derivedAttributes) {\n-        this.derivedAttributes.clear();\n-        if (derivedAttributes != null && !derivedAttributes.isEmpty()) {\n-            this.derivedAttributes.addAll((List<MDerAttr>) derivedAttributes);\n+    public void setDerAttrs(final List<? extends AbstractDerAttr> derAttrs) {\n+        this.derAttrs.clear();\n+        if (derAttrs != null && !derAttrs.isEmpty()) {\n+            for (AbstractDerAttr attr : derAttrs) {\n+                addDerAttr(attr);\n+            }\n         }\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean addVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean addVirAttr(final T virAttr) {\n         if (!(virAttr instanceof MVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed MVirAttr: \" + virAttr.getClass().getName());\n         }\n \n-        return virtualAttributes.add((MVirAttr) virAttr);\n+        if (getSyncopeRole() != null && virAttr.getSchema() != null) {\n+            MVirAttrTemplate found = null;\n+            for (MVirAttrTemplate template : getSyncopeRole().findInheritedTemplates(MVirAttrTemplate.class)) {\n+                if (virAttr.getSchema().equals(template.getSchema())) {\n+                    found = template;\n+                }\n+            }\n+            if (found != null) {\n+                ((MVirAttr) virAttr).setTemplate(found);\n+                return virAttrs.add((MVirAttr) virAttr);\n+            }\n+        }\n+\n+        LOG.warn(\"Attribute not added because either \"\n+                + \"schema was not specified or no template for that schema is available\");\n+        return false;\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean removeVirAttr(final T virAttr) {\n         if (!(virAttr instanceof MVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed MVirAttr: \" + virAttr.getClass().getName());\n         }\n \n-        return virtualAttributes.remove((MVirAttr) virAttr);\n+        return virAttrs.remove((MVirAttr) virAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractVirAttr> getVirtualAttributes() {\n-        return virtualAttributes;\n+    public List<? extends AbstractVirAttr> getVirAttrs() {\n+        return virAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setVirtualAttributes(final List<? extends AbstractVirAttr> virtualAttributes) {\n-        this.virtualAttributes.clear();\n-        if (virtualAttributes != null && !virtualAttributes.isEmpty()) {\n-            this.virtualAttributes.addAll((List<MVirAttr>) virtualAttributes);\n+    public void setVirAttrs(final List<? extends AbstractVirAttr> virAttrs) {\n+        this.virAttrs.clear();\n+        if (virAttrs != null && !virAttrs.isEmpty()) {\n+            for (AbstractVirAttr attr : virAttrs) {\n+                addVirAttr(attr);\n+            }\n         }\n     }\n "},{"sha":"d63c7efd480ce4160e25a29872855709250881a0","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RAttr.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,18 +21,18 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.Id;\n-import javax.persistence.JoinColumn;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.validation.Valid;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n public class RAttr extends AbstractAttr {\n@@ -45,9 +45,9 @@ public class RAttr extends AbstractAttr {\n     @ManyToOne(fetch = FetchType.EAGER)\n     private SyncopeRole owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER)\n-    @JoinColumn(name = \"schema_name\")\n-    private RSchema schema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private RAttrTemplate template;\n \n     @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n@@ -81,18 +81,18 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (SyncopeRole) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractSchema> T getSchema() {\n-        return (T) schema;\n+    public RAttrTemplate getTemplate() {\n+        return template;\n     }\n \n+    public void setTemplate(final RAttrTemplate template) {\n+        this.template = template;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n-        if (!(schema instanceof RSchema)) {\n-            throw new ClassCastException(\"schema is expected to be typed RSchema: \" + schema.getClass().getName());\n-        }\n-        this.schema = (RSchema) schema;\n+    public <T extends AbstractNormalSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n \n     @Override"},{"sha":"4b5653e8f6dd90abbba555f405f0e4a42d6c9bc4","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RAttrTemplate.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.role;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+\n+@Entity\n+public class RAttrTemplate extends AbstractAttrTemplate<RSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private RSchema schema;\n+\n+    @Override\n+    public RSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final RSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"c27e0ac1416fd4431482206582b2fc36988a8403","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RAttrUniqueValue.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -25,7 +25,7 @@\n import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n public class RAttrUniqueValue extends AbstractAttrUniqueValue {\n@@ -63,12 +63,12 @@ public <T extends AbstractAttr> void setAttribute(final T attribute) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> T getSchema() {\n+    public <T extends AbstractNormalSchema> T getSchema() {\n         return (T) schema;\n     }\n \n     @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n+    public <T extends AbstractNormalSchema> void setSchema(final T schema) {\n         if (!(schema instanceof RSchema)) {\n             throw new ClassCastException(\"expected type RSchema, found: \" + schema.getClass().getName());\n         }"},{"sha":"0bb4897c9cee07202fba976f7d8796931a8c2898","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RDerAttr.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.beans.role;\n \n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n@@ -33,8 +35,9 @@ public class RDerAttr extends AbstractDerAttr {\n     @ManyToOne\n     private SyncopeRole owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n-    private RDerSchema derivedSchema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private RDerAttrTemplate template;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -51,17 +54,17 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (SyncopeRole) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractDerSchema> T getDerivedSchema() {\n-        return (T) derivedSchema;\n+    public RDerAttrTemplate getTemplate() {\n+        return template;\n+    }\n+\n+    public void setTemplate(final RDerAttrTemplate template) {\n+        this.template = template;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(final T derivedSchema) {\n-        if (!(derivedSchema instanceof RDerSchema)) {\n-            throw new ClassCastException(\"expected type RDerSchema, found: \" + derivedSchema.getClass().getName());\n-        }\n-        this.derivedSchema = (RDerSchema) derivedSchema;\n+    public <T extends AbstractDerSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n }"},{"sha":"4aa9f36c18588e4f4362029275f0123253be3793","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RDerAttrTemplate.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.role;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+\n+@Entity\n+public class RDerAttrTemplate extends AbstractAttrTemplate<RDerSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private RDerSchema schema;\n+\n+    @Override\n+    public RDerSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final RDerSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"d82f40ac9aeb8127bd40ca49e6c1dad99a010cf1","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RSchema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,11 +20,11 @@\n \n import javax.persistence.Cacheable;\n import javax.persistence.Entity;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n @Cacheable\n-public class RSchema extends AbstractSchema {\n+public class RSchema extends AbstractNormalSchema {\n \n     private static final long serialVersionUID = -7417234690221851342L;\n "},{"sha":"7965872ab27752bc14524750ab2715cb974d10ca","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RVirAttr.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.beans.role;\n \n-import java.util.ArrayList;\n-import java.util.List;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n@@ -35,8 +35,9 @@ public class RVirAttr extends AbstractVirAttr {\n     @ManyToOne\n     private SyncopeRole owner;\n \n-    @ManyToOne(fetch = FetchType.EAGER)\n-    private RVirSchema virtualSchema;\n+    @Column(nullable = false)\n+    @OneToOne(cascade = CascadeType.MERGE)\n+    private RVirAttrTemplate template;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -52,25 +53,17 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n         this.owner = (SyncopeRole) owner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public <T extends AbstractVirSchema> T getVirtualSchema() {\n-        return (T) virtualSchema;\n+    public RVirAttrTemplate getTemplate() {\n+        return template;\n     }\n \n-    @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n-        if (!(virtualSchema instanceof RVirSchema)) {\n-            throw new ClassCastException(\"expected type RVirSchema, found: \" + virtualSchema.getClass().getName());\n-        }\n-        this.virtualSchema = (RVirSchema) virtualSchema;\n+    public void setTemplate(final RVirAttrTemplate template) {\n+        this.template = template;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public List<String> getValues() {\n-        if (values == null) {\n-            values = new ArrayList<String>();\n-        }\n-        return values;\n+    public <T extends AbstractVirSchema> T getSchema() {\n+        return template == null ? null : (T) template.getSchema();\n     }\n }"},{"sha":"a074417aa8e5be256fed68020d4114a7a009fdfc","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RVirAttrTemplate.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttrTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttrTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttrTemplate.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.role;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+\n+@Entity\n+public class RVirAttrTemplate extends AbstractAttrTemplate<RVirSchema> {\n+\n+    private static final long serialVersionUID = -3424574558427502145L;\n+\n+    @ManyToOne\n+    private SyncopeRole owner;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"schema_name\")\n+    private RVirSchema schema;\n+\n+    @Override\n+    public RVirSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final RVirSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public SyncopeRole getOwner() {\n+        return owner;\n+    }\n+\n+    @Override\n+    public void setOwner(final SyncopeRole owner) {\n+        this.owner = owner;\n+    }\n+}"},{"sha":"32411fd5e5270e5af5f22f54df07dabfc7dd67d9","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":203,"deletions":88,"changes":291,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -43,22 +43,27 @@\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.validation.entity.SyncopeRoleCheck;\n \n @Entity\n @Table(uniqueConstraints =\n-@UniqueConstraint(columnNames = {\"name\", \"parent_id\"}))\n+        @UniqueConstraint(columnNames = {\"name\", \"parent_id\"}))\n @Cacheable\n @SyncopeRoleCheck\n public class SyncopeRole extends AbstractAttributable {\n@@ -82,22 +87,46 @@ public class SyncopeRole extends AbstractAttributable {\n \n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-    @JoinColumn(name = \"role_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"entitlement_name\"))\n+            @JoinColumn(name = \"role_id\"),\n+            inverseJoinColumns =\n+            @JoinColumn(name = \"entitlement_name\"))\n     private Set<Entitlement> entitlements;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<RAttr> attributes;\n+    private List<RAttrTemplate> rAttrTemplates;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<RDerAttr> derivedAttributes;\n+    private List<RDerAttrTemplate> rDerAttrTemplates;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<RVirAttr> virtualAttributes;\n+    private List<RVirAttrTemplate> rVirAttrTemplates;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<MAttrTemplate> mAttrTemplates;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<MDerAttrTemplate> mDerAttrTemplates;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<MVirAttrTemplate> mVirAttrTemplates;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<RAttr> attrs;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<RDerAttr> derAttrs;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<RVirAttr> virAttrs;\n \n     @Basic(optional = true)\n     @Min(0)\n@@ -107,17 +136,22 @@ public class SyncopeRole extends AbstractAttributable {\n     @Basic(optional = true)\n     @Min(0)\n     @Max(1)\n-    private Integer inheritAttributes;\n+    private Integer inheritTemplates;\n+\n+    @Basic(optional = true)\n+    @Min(0)\n+    @Max(1)\n+    private Integer inheritAttrs;\n \n     @Basic(optional = true)\n     @Min(0)\n     @Max(1)\n-    private Integer inheritDerivedAttributes;\n+    private Integer inheritDerAttrs;\n \n     @Basic(optional = true)\n     @Min(0)\n     @Max(1)\n-    private Integer inheritVirtualAttributes;\n+    private Integer inheritVirAttrs;\n \n     @Basic(optional = true)\n     @Min(0)\n@@ -140,25 +174,36 @@ public class SyncopeRole extends AbstractAttributable {\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(joinColumns =\n-    @JoinColumn(name = \"role_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"resource_name\"))\n+            @JoinColumn(name = \"role_id\"),\n+            inverseJoinColumns =\n+            @JoinColumn(name = \"resource_name\"))\n     @Valid\n     private Set<ExternalResource> resources;\n \n     public SyncopeRole() {\n         super();\n \n         entitlements = new HashSet<Entitlement>();\n-        attributes = new ArrayList<RAttr>();\n-        derivedAttributes = new ArrayList<RDerAttr>();\n-        virtualAttributes = new ArrayList<RVirAttr>();\n+\n+        rAttrTemplates = new ArrayList<RAttrTemplate>();\n+        rDerAttrTemplates = new ArrayList<RDerAttrTemplate>();\n+        rVirAttrTemplates = new ArrayList<RVirAttrTemplate>();\n+        mAttrTemplates = new ArrayList<MAttrTemplate>();\n+        mDerAttrTemplates = new ArrayList<MDerAttrTemplate>();\n+        mVirAttrTemplates = new ArrayList<MVirAttrTemplate>();\n+\n+        attrs = new ArrayList<RAttr>();\n+        derAttrs = new ArrayList<RDerAttr>();\n+        virAttrs = new ArrayList<RVirAttr>();\n+\n         inheritOwner = getBooleanAsInteger(false);\n-        inheritAttributes = getBooleanAsInteger(false);\n-        inheritDerivedAttributes = getBooleanAsInteger(false);\n-        inheritVirtualAttributes = getBooleanAsInteger(false);\n+        inheritTemplates = getBooleanAsInteger(false);\n+        inheritAttrs = getBooleanAsInteger(false);\n+        inheritDerAttrs = getBooleanAsInteger(false);\n+        inheritVirAttrs = getBooleanAsInteger(false);\n         inheritPasswordPolicy = getBooleanAsInteger(false);\n         inheritAccountPolicy = getBooleanAsInteger(false);\n+\n         resources = new HashSet<ExternalResource>();\n     }\n \n@@ -231,102 +276,170 @@ public void setEntitlements(final List<Entitlement> entitlements) {\n         }\n     }\n \n+    public boolean isInheritTemplates() {\n+        return isBooleanAsInteger(inheritTemplates);\n+    }\n+\n+    public void setInheritTemplates(final boolean inheritAttrTemplates) {\n+        this.inheritTemplates = getBooleanAsInteger(inheritAttrTemplates);\n+    }\n+\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    public <T extends AbstractAttrTemplate> List<T> getAttrTemplates(final Class<T> reference) {\n+        List<T> result = null;\n+\n+        if (reference.equals(RAttrTemplate.class)) {\n+            result = (List<T>) rAttrTemplates;\n+        } else if (reference.equals(RDerAttrTemplate.class)) {\n+            result = (List<T>) rDerAttrTemplates;\n+        } else if (reference.equals(RVirAttrTemplate.class)) {\n+            result = (List<T>) rVirAttrTemplates;\n+        } else if (reference.equals(MAttrTemplate.class)) {\n+            result = (List<T>) mAttrTemplates;\n+        } else if (reference.equals(MDerAttrTemplate.class)) {\n+            result = (List<T>) mDerAttrTemplates;\n+        } else if (reference.equals(MVirAttrTemplate.class)) {\n+            result = (List<T>) mVirAttrTemplates;\n+        }\n+\n+        return result;\n+    }\n+\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> T getAttrTemplate(\n+            final Class<T> reference, final String schemaName) {\n+\n+        T result = null;\n+\n+        for (T template : findInheritedTemplates(reference)) {\n+            if (schemaName.equals(template.getSchema().getName())) {\n+                result = template;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> List<K> getAttrTemplateSchemas(\n+            final Class<T> reference) {\n+\n+        List<K> result = new ArrayList<K>();\n+\n+        for (T template : findInheritedTemplates(reference)) {\n+            result.add(template.getSchema());\n+        }\n+\n+        return result;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> List<T> findInheritedTemplates(\n+            final Class<T> reference) {\n+\n+        List<T> result = new ArrayList<T>(getAttrTemplates(reference));\n+\n+        if (isInheritTemplates() && getParent() != null) {\n+            result.addAll(getParent().findInheritedTemplates(reference));\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n-    public <T extends AbstractAttr> boolean addAttribute(final T attribute) {\n-        if (!(attribute instanceof RAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed RAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean addAttr(final T attr) {\n+        if (!(attr instanceof RAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed RAttr: \" + attr.getClass().getName());\n         }\n-        return attributes.add((RAttr) attribute);\n+        return attrs.add((RAttr) attr);\n     }\n \n     @Override\n-    public <T extends AbstractAttr> boolean removeAttribute(final T attribute) {\n-        if (!(attribute instanceof RAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed RAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean removeAttr(final T attr) {\n+        if (!(attr instanceof RAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed RAttr: \" + attr.getClass().getName());\n         }\n-        return attributes.remove((RAttr) attribute);\n+        return attrs.remove((RAttr) attr);\n     }\n \n     @Override\n-    public List<? extends AbstractAttr> getAttributes() {\n-        return attributes;\n+    public List<? extends AbstractAttr> getAttrs() {\n+        return attrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setAttributes(final List<? extends AbstractAttr> attributes) {\n-        this.attributes.clear();\n-        if (attributes != null && !attributes.isEmpty()) {\n-            this.attributes.addAll((List<RAttr>) attributes);\n+    public void setAttrs(final List<? extends AbstractAttr> attrs) {\n+        this.attrs.clear();\n+        if (attrs != null && !attrs.isEmpty()) {\n+            this.attrs.addAll((List<RAttr>) attrs);\n         }\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean addDerAttr(final T derAttr) {\n         if (!(derAttr instanceof RDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed RDerAttr: \" + derAttr.getClass().getName());\n         }\n-        return derivedAttributes.add((RDerAttr) derAttr);\n+        return derAttrs.add((RDerAttr) derAttr);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean removeDerAttr(final T derAttr) {\n         if (!(derAttr instanceof RDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed RDerAttr: \" + derAttr.getClass().getName());\n         }\n-        return derivedAttributes.remove((RDerAttr) derAttr);\n+        return derAttrs.remove((RDerAttr) derAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractDerAttr> getDerivedAttributes() {\n-        return derivedAttributes;\n+    public List<? extends AbstractDerAttr> getDerAttrs() {\n+        return derAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setDerivedAttributes(final List<? extends AbstractDerAttr> derivedAttributes) {\n-        this.derivedAttributes.clear();\n-        if (derivedAttributes != null && !derivedAttributes.isEmpty()) {\n-            this.derivedAttributes.addAll((List<RDerAttr>) derivedAttributes);\n+    public void setDerAttrs(final List<? extends AbstractDerAttr> derAttrs) {\n+        this.derAttrs.clear();\n+        if (derAttrs != null && !derAttrs.isEmpty()) {\n+            this.derAttrs.addAll((List<RDerAttr>) derAttrs);\n         }\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean addVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean addVirAttr(final T virAttr) {\n         if (!(virAttr instanceof RVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed RVirAttr: \" + virAttr.getClass().getName());\n         }\n-        return virtualAttributes.add((RVirAttr) virAttr);\n+        return virAttrs.add((RVirAttr) virAttr);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean removeVirAttr(final T virAttr) {\n         if (!(virAttr instanceof RVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed RVirAttr: \" + virAttr.getClass().getName());\n         }\n-        return virtualAttributes.remove((RVirAttr) virAttr);\n+        return virAttrs.remove((RVirAttr) virAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractVirAttr> getVirtualAttributes() {\n-        return virtualAttributes;\n+    public List<? extends AbstractVirAttr> getVirAttrs() {\n+        return virAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setVirtualAttributes(final List<? extends AbstractVirAttr> virtualAttributes) {\n-        this.virtualAttributes.clear();\n-        if (virtualAttributes != null && !virtualAttributes.isEmpty()) {\n-            this.virtualAttributes.addAll((List<RVirAttr>) virtualAttributes);\n+    public void setVirAttrs(final List<? extends AbstractVirAttr> virAttrs) {\n+        this.virAttrs.clear();\n+        if (virAttrs != null && !virAttrs.isEmpty()) {\n+            this.virAttrs.addAll((List<RVirAttr>) virAttrs);\n         }\n     }\n \n-    public boolean isInheritAttributes() {\n-        return isBooleanAsInteger(inheritAttributes);\n+    public boolean isInheritAttrs() {\n+        return isBooleanAsInteger(inheritAttrs);\n     }\n \n-    public void setInheritAttributes(final boolean inheritAttributes) {\n-        this.inheritAttributes = getBooleanAsInteger(inheritAttributes);\n+    public void setInheritAttrs(final boolean inheritAttrs) {\n+        this.inheritAttrs = getBooleanAsInteger(inheritAttrs);\n     }\n \n     /**\n@@ -335,21 +448,21 @@ public void setInheritAttributes(final boolean inheritAttributes) {\n      * @return a list of inherited and only inherited attributes.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public List<RAttr> findInheritedAttributes() {\n+    public List<RAttr> findInheritedAttrs() {\n         final Map<RSchema, RAttr> result = new HashMap<RSchema, RAttr>();\n \n-        if (isInheritAttributes() && getParent() != null) {\n-            final Map<AbstractSchema, AbstractAttr> attrMap = getAttrMap();\n+        if (isInheritAttrs() && getParent() != null) {\n+            final Map<AbstractNormalSchema, AbstractAttr> attrMap = getAttrMap();\n \n             // Add attributes not specialized\n-            for (RAttr attr : (Collection<RAttr>) getParent().getAttributes()) {\n+            for (RAttr attr : (Collection<RAttr>) getParent().getAttrs()) {\n                 if (!attrMap.containsKey(attr.getSchema())) {\n                     result.put((RSchema) attr.getSchema(), attr);\n                 }\n             }\n \n             // Add attributes not specialized and not already added\n-            for (RAttr attr : getParent().findInheritedAttributes()) {\n+            for (RAttr attr : getParent().findInheritedAttrs()) {\n                 if (!attrMap.containsKey(attr.getSchema()) && !result.containsKey((RSchema) attr.getSchema())) {\n                     result.put((RSchema) attr.getSchema(), attr);\n                 }\n@@ -359,12 +472,12 @@ public List<RAttr> findInheritedAttributes() {\n         return new ArrayList<RAttr>(result.values());\n     }\n \n-    public boolean isInheritDerivedAttributes() {\n-        return isBooleanAsInteger(inheritDerivedAttributes);\n+    public boolean isInheritDerAttrs() {\n+        return isBooleanAsInteger(inheritDerAttrs);\n     }\n \n-    public void setInheritDerivedAttributes(final boolean inheritDerivedAttributes) {\n-        this.inheritDerivedAttributes = getBooleanAsInteger(inheritDerivedAttributes);\n+    public void setInheritDerAttrs(final boolean inheritDerAttrs) {\n+        this.inheritDerAttrs = getBooleanAsInteger(inheritDerAttrs);\n \n     }\n \n@@ -374,37 +487,38 @@ public void setInheritDerivedAttributes(final boolean inheritDerivedAttributes)\n      * @return a list of inherited and only inherited attributes.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public List<RDerAttr> findInheritedDerivedAttributes() {\n+    public List<RDerAttr> findInheritedDerAttrs() {\n         final Map<RDerSchema, RDerAttr> result = new HashMap<RDerSchema, RDerAttr>();\n \n-        if (isInheritDerivedAttributes() && getParent() != null) {\n+        if (isInheritDerAttrs() && getParent() != null) {\n             final Map<AbstractDerSchema, AbstractDerAttr> attrMap = getDerAttrMap();\n \n             // Add attributes not specialized\n-            for (RDerAttr attr : (Collection<RDerAttr>) getParent().getDerivedAttributes()) {\n-                if (!attrMap.containsKey(attr.getDerivedSchema())) {\n-                    result.put((RDerSchema) attr.getDerivedSchema(), attr);\n+            for (RDerAttr attr : (Collection<RDerAttr>) getParent().getDerAttrs()) {\n+                if (!attrMap.containsKey(attr.getSchema())) {\n+                    result.put((RDerSchema) attr.getSchema(), attr);\n                 }\n             }\n \n             // Add attributes not specialized and not already added\n-            for (RDerAttr attr : getParent().findInheritedDerivedAttributes()) {\n-                if (!attrMap.containsKey(attr.getDerivedSchema())\n-                        && !result.containsKey((RDerSchema) attr.getDerivedSchema())) {\n-                    result.put((RDerSchema) attr.getDerivedSchema(), attr);\n+            for (RDerAttr attr : getParent().findInheritedDerAttrs()) {\n+                if (!attrMap.containsKey(attr.getSchema())\n+                        && !result.containsKey((RDerSchema) attr.getSchema())) {\n+\n+                    result.put((RDerSchema) attr.getSchema(), attr);\n                 }\n             }\n         }\n \n         return new ArrayList<RDerAttr>(result.values());\n     }\n \n-    public boolean isInheritVirtualAttributes() {\n-        return isBooleanAsInteger(inheritVirtualAttributes);\n+    public boolean isInheritVirAttrs() {\n+        return isBooleanAsInteger(inheritVirAttrs);\n     }\n \n-    public void setInheritVirtualAttributes(final boolean inheritVirtualAttributes) {\n-        this.inheritVirtualAttributes = getBooleanAsInteger(inheritVirtualAttributes);\n+    public void setInheritVirAttrs(final boolean inheritVirAttrs) {\n+        this.inheritVirAttrs = getBooleanAsInteger(inheritVirAttrs);\n \n     }\n \n@@ -414,24 +528,25 @@ public void setInheritVirtualAttributes(final boolean inheritVirtualAttributes)\n      * @return a list of inherited and only inherited attributes.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public List<RVirAttr> findInheritedVirtualAttributes() {\n+    public List<RVirAttr> findInheritedVirAttrs() {\n         final Map<RVirSchema, RVirAttr> result = new HashMap<RVirSchema, RVirAttr>();\n \n-        if (isInheritVirtualAttributes() && getParent() != null) {\n+        if (isInheritVirAttrs() && getParent() != null) {\n             final Map<AbstractVirSchema, AbstractVirAttr> attrMap = getVirAttrMap();\n \n             // Add attributes not specialized\n-            for (RVirAttr attr : (Collection<RVirAttr>) getParent().getVirtualAttributes()) {\n-                if (!attrMap.containsKey(attr.getVirtualSchema())) {\n-                    result.put((RVirSchema) attr.getVirtualSchema(), attr);\n+            for (RVirAttr attr : (Collection<RVirAttr>) getParent().getVirAttrs()) {\n+                if (!attrMap.containsKey(attr.getSchema())) {\n+                    result.put((RVirSchema) attr.getSchema(), attr);\n                 }\n             }\n \n             // Add attributes not specialized and not already added\n-            for (RVirAttr attr : getParent().findInheritedVirtualAttributes()) {\n-                if (!attrMap.containsKey(attr.getVirtualSchema())\n-                        && !result.containsKey((RVirSchema) attr.getVirtualSchema())) {\n-                    result.put((RVirSchema) attr.getVirtualSchema(), attr);\n+            for (RVirAttr attr : getParent().findInheritedVirAttrs()) {\n+                if (!attrMap.containsKey(attr.getSchema())\n+                        && !result.containsKey((RVirSchema) attr.getSchema())) {\n+\n+                    result.put((RVirSchema) attr.getSchema(), attr);\n                 }\n             }\n         }"},{"sha":"02c5d4572670ed7a50e95c32f936dadea222a99c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":40,"deletions":40,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -84,15 +84,15 @@ public class SyncopeUser extends AbstractAttributable {\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<UAttr> attributes;\n+    private List<UAttr> attrs;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<UDerAttr> derivedAttributes;\n+    private List<UDerAttr> derAttrs;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<UVirAttr> virtualAttributes;\n+    private List<UVirAttr> virAttrs;\n \n     private String workflowId;\n \n@@ -159,9 +159,9 @@ public SyncopeUser() {\n         super();\n \n         memberships = new ArrayList<Membership>();\n-        attributes = new ArrayList<UAttr>();\n-        derivedAttributes = new ArrayList<UDerAttr>();\n-        virtualAttributes = new ArrayList<UVirAttr>();\n+        attrs = new ArrayList<UAttr>();\n+        derAttrs = new ArrayList<UDerAttr>();\n+        virAttrs = new ArrayList<UVirAttr>();\n         passwordHistory = new ArrayList<String>();\n         failedLogins = 0;\n         suspended = getBooleanAsInteger(Boolean.FALSE);\n@@ -284,95 +284,95 @@ public boolean canDecodePassword() {\n     }\n \n     @Override\n-    public <T extends AbstractAttr> boolean addAttribute(final T attribute) {\n-        if (!(attribute instanceof UAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed UAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean addAttr(final T attr) {\n+        if (!(attr instanceof UAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed UAttr: \" + attr.getClass().getName());\n         }\n \n-        return attributes.add((UAttr) attribute);\n+        return attrs.add((UAttr) attr);\n     }\n \n     @Override\n-    public <T extends AbstractAttr> boolean removeAttribute(final T attribute) {\n-        if (!(attribute instanceof UAttr)) {\n-            throw new ClassCastException(\"attribute is expected to be typed UAttr: \" + attribute.getClass().getName());\n+    public <T extends AbstractAttr> boolean removeAttr(final T attr) {\n+        if (!(attr instanceof UAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed UAttr: \" + attr.getClass().getName());\n         }\n \n-        return attributes.remove((UAttr) attribute);\n+        return attrs.remove((UAttr) attr);\n     }\n \n     @Override\n-    public List<? extends AbstractAttr> getAttributes() {\n-        return attributes;\n+    public List<? extends AbstractAttr> getAttrs() {\n+        return attrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setAttributes(final List<? extends AbstractAttr> attributes) {\n-        this.attributes.clear();\n-        if (attributes != null && !attributes.isEmpty()) {\n-            this.attributes.addAll((List<UAttr>) attributes);\n+    public void setAttrs(final List<? extends AbstractAttr> attrs) {\n+        this.attrs.clear();\n+        if (attrs != null && !attrs.isEmpty()) {\n+            this.attrs.addAll((List<UAttr>) attrs);\n         }\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean addDerAttr(final T derAttr) {\n         if (!(derAttr instanceof UDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed UDerAttr: \" + derAttr.getClass().getName());\n         }\n \n-        return derivedAttributes.add((UDerAttr) derAttr);\n+        return derAttrs.add((UDerAttr) derAttr);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(final T derAttr) {\n+    public <T extends AbstractDerAttr> boolean removeDerAttr(final T derAttr) {\n         if (!(derAttr instanceof UDerAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed UDerAttr: \" + derAttr.getClass().getName());\n         }\n-        return derivedAttributes.remove((UDerAttr) derAttr);\n+        return derAttrs.remove((UDerAttr) derAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractDerAttr> getDerivedAttributes() {\n-        return derivedAttributes;\n+    public List<? extends AbstractDerAttr> getDerAttrs() {\n+        return derAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setDerivedAttributes(final List<? extends AbstractDerAttr> derivedAttributes) {\n-        this.derivedAttributes.clear();\n-        if (derivedAttributes != null && !derivedAttributes.isEmpty()) {\n-            this.derivedAttributes.addAll((List<UDerAttr>) derivedAttributes);\n+    public void setDerAttrs(final List<? extends AbstractDerAttr> derAttr) {\n+        this.derAttrs.clear();\n+        if (derAttr != null && !derAttr.isEmpty()) {\n+            this.derAttrs.addAll((List<UDerAttr>) derAttr);\n         }\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean addVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean addVirAttr(final T virAttr) {\n         if (!(virAttr instanceof UVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed UVirAttr: \" + virAttr.getClass().getName());\n         }\n-        return virtualAttributes.add((UVirAttr) virAttr);\n+        return virAttrs.add((UVirAttr) virAttr);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(final T virAttr) {\n+    public <T extends AbstractVirAttr> boolean removeVirAttr(final T virAttr) {\n         if (!(virAttr instanceof UVirAttr)) {\n             throw new ClassCastException(\"attribute is expected to be typed UVirAttr: \" + virAttr.getClass().getName());\n         }\n-        return virtualAttributes.remove((UVirAttr) virAttr);\n+        return virAttrs.remove((UVirAttr) virAttr);\n     }\n \n     @Override\n-    public List<? extends AbstractVirAttr> getVirtualAttributes() {\n-        return virtualAttributes;\n+    public List<? extends AbstractVirAttr> getVirAttrs() {\n+        return virAttrs;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void setVirtualAttributes(final List<? extends AbstractVirAttr> virtualAttributes) {\n-        this.virtualAttributes.clear();\n-        if (virtualAttributes != null && !virtualAttributes.isEmpty()) {\n-            this.virtualAttributes.addAll((List<UVirAttr>) virtualAttributes);\n+    public void setVirAttrs(final List<? extends AbstractVirAttr> virAttrs) {\n+        this.virAttrs.clear();\n+        if (virAttrs != null && !virAttrs.isEmpty()) {\n+            this.virAttrs.addAll((List<UVirAttr>) virAttrs);\n         }\n     }\n "},{"sha":"dad8df0c858354eec53914c5c565449af5e3e6de","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UAttr.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n /**\n  * User attribute.\n@@ -104,16 +104,12 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> T getSchema() {\n+    public <T extends AbstractNormalSchema> T getSchema() {\n         return (T) schema;\n     }\n \n-    @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n-        if (!(schema instanceof USchema)) {\n-            throw new ClassCastException(\"schema is expected to be typed USchema: \" + schema.getClass().getName());\n-        }\n-        this.schema = (USchema) schema;\n+    public void setSchema(final USchema schema) {\n+        this.schema = schema;\n     }\n \n     @Override"},{"sha":"801bf98284fd828ea66e48df1e8b97f71ecc7134","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UAttrUniqueValue.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -25,7 +25,7 @@\n import javax.persistence.OneToOne;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n public class UAttrUniqueValue extends AbstractAttrUniqueValue {\n@@ -63,12 +63,12 @@ public <T extends AbstractAttr> void setAttribute(final T attribute) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractSchema> T getSchema() {\n+    public <T extends AbstractNormalSchema> T getSchema() {\n         return (T) schema;\n     }\n \n     @Override\n-    public <T extends AbstractSchema> void setSchema(final T schema) {\n+    public <T extends AbstractNormalSchema> void setSchema(final T schema) {\n         if (!(schema instanceof USchema)) {\n             throw new ClassCastException(\"expected type USchema, found: \" + schema.getClass().getName());\n         }"},{"sha":"ae76aaa83f2d7686b0a8f7996e4dce03599d8a0b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UDerAttr.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -34,7 +34,7 @@ public class UDerAttr extends AbstractDerAttr {\n     private SyncopeUser owner;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n-    private UDerSchema derivedSchema;\n+    private UDerSchema derSchema;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -53,15 +53,11 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractDerSchema> T getDerivedSchema() {\n-        return (T) derivedSchema;\n+    public <T extends AbstractDerSchema> T getSchema() {\n+        return (T) derSchema;\n     }\n \n-    @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(final T derivedSchema) {\n-        if (!(derivedSchema instanceof UDerSchema)) {\n-            throw new ClassCastException(\"expected type UDerSchema, found: \" + derivedSchema.getClass().getName());\n-        }\n-        this.derivedSchema = (UDerSchema) derivedSchema;\n+    public void setSchema(final UDerSchema derSchema) {\n+        this.derSchema = derSchema;\n     }\n }"},{"sha":"2073602596c09d444febdc14d1d6f9323d262fca","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/USchema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUSchema.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,11 +20,11 @@\n \n import javax.persistence.Cacheable;\n import javax.persistence.Entity;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n @Entity\n @Cacheable\n-public class USchema extends AbstractSchema {\n+public class USchema extends AbstractNormalSchema {\n \n     private static final long serialVersionUID = -2776513645999914610L;\n "},{"sha":"053d787afaaef2d28552f86f06da5e3a83113b89","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/UVirAttr.java","status":"modified","additions":5,"deletions":19,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.beans.user;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n@@ -36,7 +34,7 @@ public class UVirAttr extends AbstractVirAttr {\n     private SyncopeUser owner;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n-    private UVirSchema virtualSchema;\n+    private UVirSchema virSchema;\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n@@ -54,23 +52,11 @@ public <T extends AbstractAttributable> void setOwner(final T owner) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractVirSchema> T getVirtualSchema() {\n-        return (T) virtualSchema;\n+    public <T extends AbstractVirSchema> T getSchema() {\n+        return (T) virSchema;\n     }\n \n-    @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(final T virtualSchema) {\n-        if (!(virtualSchema instanceof UVirSchema)) {\n-            throw new ClassCastException(\"expected type UVirSchema, found: \" + virtualSchema.getClass().getName());\n-        }\n-        this.virtualSchema = (UVirSchema) virtualSchema;\n-    }\n-\n-    @Override\n-    public List<String> getValues() {\n-        if (values == null) {\n-            values = new ArrayList<String>();\n-        }\n-        return values;\n+    public void setSchema(final UVirSchema virSchema) {\n+        this.virSchema = virSchema;\n     }\n }"},{"sha":"b78222efa8bcfc23800bcde9b79987029bf6bb1f","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttrDAO.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,19 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import java.util.List;\n-\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n-import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface AttrDAO extends DAO {\n \n     <T extends AbstractAttr> T find(Long id, Class<T> reference);\n \n-    <T extends AbstractAttr> List<T> findAll(Class<T> reference);\n-\n-    <T extends AbstractAttr> T save(T attribute) throws InvalidEntityException;\n-\n     <T extends AbstractAttr> void delete(Long id, Class<T> reference);\n \n     <T extends AbstractAttr> void delete(T attribute);"},{"sha":"df490ad8f2e310888d46e1dbe23c06698fde10d8","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttrTemplateDAO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTemplateDAO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+\n+public interface AttrTemplateDAO extends DAO {\n+\n+    <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> T find(Long id, Class<T> reference);\n+\n+    <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> List<Number> findBySchemaName(\n+            String schemaName, Class<T> reference);\n+\n+    <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> void delete(Long id, Class<T> reference);\n+\n+    <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> void delete(T attrTemplate);\n+}"},{"sha":"3a6ba9f793f361c74685c14f97c08e076ca08afb","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/DerSchemaDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -31,9 +31,9 @@ public interface DerSchemaDAO extends DAO {\n \n     <T extends AbstractDerSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractDerSchema> T save(T derivedSchema) throws InvalidEntityException;\n+    <T extends AbstractDerAttr> List<T> findAttrs(AbstractDerSchema schema, Class<T> reference);\n \n-    <T extends AbstractDerAttr> List<T> getAttributes(AbstractDerSchema schema, Class<T> reference);\n+    <T extends AbstractDerSchema> T save(T derivedSchema) throws InvalidEntityException;\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"958ed1863eef849871fb98aecfbf52d1d6d1a0ce","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/SchemaDAO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -20,19 +20,19 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.util.AttributableUtil;\n \n public interface SchemaDAO extends DAO {\n \n-    <T extends AbstractSchema> T find(String name, Class<T> reference);\n+    <T extends AbstractNormalSchema> T find(String name, Class<T> reference);\n \n-    <T extends AbstractSchema> List<T> findAll(Class<T> reference);\n+    <T extends AbstractNormalSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractAttr> List<T> getAttributes(AbstractSchema schema, Class<T> reference);\n+    <T extends AbstractAttr> List<T> findAttrs(AbstractNormalSchema schema, Class<T> reference);\n \n-    <T extends AbstractSchema> T save(T schema) throws InvalidEntityException;\n+    <T extends AbstractNormalSchema> T save(T schema) throws InvalidEntityException;\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"a103a84ecba447fb0c1addbda9e89208dad79bdc","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/VirSchemaDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -30,9 +30,9 @@ public interface VirSchemaDAO extends DAO {\n \n     <T extends AbstractVirSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractVirSchema> T save(T virtualSchema) throws InvalidEntityException;\n+    <T extends AbstractVirAttr> List<T> findAttrs(AbstractVirSchema virSchema, Class<T> reference);\n \n-    <T extends AbstractVirAttr> List<T> getAttributes(AbstractVirSchema virtualSchema, Class<T> reference);\n+    <T extends AbstractVirSchema> T save(T virtualSchema) throws InvalidEntityException;\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"63bffb17e1ca44b3e1b15771a6770c1a8ccdf156","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractAttributableDAOImpl.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.dao.AttributableDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n@@ -149,7 +149,7 @@ public int compare(final String t, final String t1) {\n             if (!used.contains(identifiers.get(i))) {\n \n                 // verify schema existence and get schema type\n-                AbstractSchema schema = schemaDAO.find(identifiers.get(i), attrUtil.schemaClass());\n+                AbstractNormalSchema schema = schemaDAO.find(identifiers.get(i), attrUtil.schemaClass());\n                 if (schema == null) {\n                     LOG.error(\"Invalid schema name '{}'\", identifiers.get(i));\n                     throw new InvalidSearchConditionException(\"Invalid schema name \" + identifiers.get(i));\n@@ -204,11 +204,13 @@ public int compare(final String t, final String t1) {\n \n     protected abstract <T extends AbstractAttributable> T findInternal(final Long id);\n \n+    protected abstract TypedQuery<AbstractAttrValue> findByAttrValueQuery(final String entityName);\n+\n     @Override\n     public <T extends AbstractAttributable> List<T> findByAttrValue(final String schemaName,\n             final AbstractAttrValue attrValue, final AttributableUtil attrUtil) {\n \n-        AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+        AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaName);\n             return Collections.<T>emptyList();\n@@ -218,14 +220,7 @@ public <T extends AbstractAttributable> List<T> findByAttrValue(final String sch\n                 ? attrUtil.attrUniqueValueClass().getName()\n                 : attrUtil.attrValueClass().getName();\n \n-        TypedQuery<AbstractAttrValue> query = entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.name = :schemaName AND (e.stringValue IS NOT NULL\"\n-                + \" AND e.stringValue = :stringValue)\"\n-                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n-                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n-                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\",\n-                AbstractAttrValue.class);\n+        TypedQuery<AbstractAttrValue> query = findByAttrValueQuery(entityName);\n \n         query.setParameter(\"schemaName\", schemaName);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n@@ -255,7 +250,7 @@ public <T extends AbstractAttributable> List<T> findByAttrValue(final String sch\n     public <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueValue(final String schemaName,\n             final AbstractAttrValue attrUniqueValue, final AttributableUtil attrUtil) {\n \n-        AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+        AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaName);\n             return null;"},{"sha":"b18065b8020bea119ca93bbcc89e3f2688726e06","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttrDAOImpl.java","status":"modified","additions":1,"deletions":16,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import java.util.List;\n-import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.dao.AttrDAO;\n import org.springframework.stereotype.Repository;\n@@ -29,24 +27,11 @@ public class AttrDAOImpl extends AbstractDAOImpl implements AttrDAO {\n \n     @Override\n     public <T extends AbstractAttr> T find(final Long id, final Class<T> reference) {\n-\n         return entityManager.find(reference, id);\n     }\n \n-    @Override\n-    public <T extends AbstractAttr> List<T> findAll(final Class<T> reference) {\n-        TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\", reference);\n-        return query.getResultList();\n-    }\n-\n-    @Override\n-    public <T extends AbstractAttr> T save(final T attribute) {\n-        return entityManager.merge(attribute);\n-    }\n-\n     @Override\n     public <T extends AbstractAttr> void delete(final Long id, final Class<T> reference) {\n-\n         T attribute = find(id, reference);\n         if (attribute == null) {\n             return;\n@@ -58,7 +43,7 @@ public <T extends AbstractAttr> void delete(final Long id, final Class<T> refere\n     @Override\n     public <T extends AbstractAttr> void delete(final T attribute) {\n         if (attribute.getOwner() != null) {\n-            attribute.getOwner().removeAttribute(attribute);\n+            attribute.getOwner().removeAttr(attribute);\n         }\n \n         entityManager.remove(attribute);"},{"sha":"465905a025d9e0c22b5473a328d89e952ece1b40","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttrTemplateDAOImpl.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrTemplateDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrTemplateDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrTemplateDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao.impl;\n+\n+import java.util.List;\n+import javax.persistence.Query;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.dao.AttrTemplateDAO;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class AttrTemplateDAOImpl extends AbstractDAOImpl implements AttrTemplateDAO {\n+\n+    @Override\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> T find(\n+            final Long id, final Class<T> reference) {\n+\n+        return entityManager.find(reference, id);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> List<Number> findBySchemaName(\n+            final String schemaName, final Class<T> reference) {\n+\n+        Query query = entityManager.createNativeQuery(\n+                \"SELECT id FROM \" + reference.getSimpleName() + \" WHERE schema_name=?1\");\n+        query.setParameter(1, schemaName);\n+\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> void delete(\n+            final Long id, final Class<T> reference) {\n+\n+        T attrTemplate = find(id, reference);\n+        if (attrTemplate == null) {\n+            return;\n+        }\n+\n+        delete(attrTemplate);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> void delete(final T attrTemplate) {\n+        if (attrTemplate.getOwner() != null) {\n+            attrTemplate.getOwner().getAttrTemplates(attrTemplate.getClass()).remove(attrTemplate);\n+        }\n+\n+        entityManager.remove(attrTemplate);\n+    }\n+}"},{"sha":"951c14d7641f8683bc2e816a2035a4bbc9cd2184","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttributableSearchDAOImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n@@ -390,7 +390,7 @@ private String getQuery(final EntitlementCond cond, final boolean not, final Lis\n     }\n \n     private void fillAttributeQuery(final StringBuilder query, final AbstractAttrValue attrValue,\n-            final AbstractSchema schema, final AttributeCond cond, final boolean not, final List<Object> parameters) {\n+            final AbstractNormalSchema schema, final AttributeCond cond, final boolean not, final List<Object> parameters) {\n \n         String column = (cond instanceof AttributableCond)\n                 ? cond.getSchema()\n@@ -515,7 +515,7 @@ private String getFieldName(final AttributeSchemaType type) {\n     private String getQuery(final AttributeCond cond, final boolean not, final List<Object> parameters,\n             final AttributableUtil attrUtil) {\n \n-        AbstractSchema schema = schemaDAO.find(cond.getSchema(), attrUtil.schemaClass());\n+        AbstractNormalSchema schema = schemaDAO.find(cond.getSchema(), attrUtil.schemaClass());\n         if (schema == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n@@ -566,7 +566,7 @@ private String getQuery(final AttributableCond cond, final boolean not, final Li\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        AbstractSchema schema = attrUtil.newSchema();\n+        AbstractNormalSchema schema = attrUtil.newSchema();\n         schema.setName(attributableField.getName());\n         for (AttributeSchemaType type : AttributeSchemaType.values()) {\n             if (attributableField.getType().isAssignableFrom(type.getType())) {"},{"sha":"fbdf0349f34384ab84c130418ad28d6b6d90c493","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ContentLoader.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import static org.apache.syncope.core.persistence.dao.impl.AbstractContentDealer.LOG;\n import java.io.InputStream;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;"},{"sha":"e1dbd85c0f221effb3603ac774e26904894fa8f5","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/DerAttrDAOImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -40,8 +40,8 @@ public <T extends AbstractDerAttr> List<T> findAll(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> T save(final T derivedAttribute) {\n-        return entityManager.merge(derivedAttribute);\n+    public <T extends AbstractDerAttr> T save(final T derAttr) {\n+        return entityManager.merge(derAttr);\n     }\n \n     @Override\n@@ -55,11 +55,11 @@ public <T extends AbstractDerAttr> void delete(final Long id, final Class<T> ref\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> void delete(final T derivedAttribute) {\n-        if (derivedAttribute.getOwner() != null) {\n-            derivedAttribute.getOwner().removeDerivedAttribute(derivedAttribute);\n+    public <T extends AbstractDerAttr> void delete(final T derAttr) {\n+        if (derAttr.getOwner() != null) {\n+            derAttr.getOwner().removeDerAttr(derAttr);\n         }\n \n-        entityManager.remove(derivedAttribute);\n+        entityManager.remove(derAttr);\n     }\n }"},{"sha":"9b57f7946fdaefd580ea19cddad580efcaa04cd0","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/DerSchemaDAOImpl.java","status":"modified","additions":46,"deletions":27,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,12 +19,16 @@\n package org.apache.syncope.core.persistence.dao.impl;\n \n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.TypedQuery;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n+import org.apache.syncope.core.persistence.beans.user.UDerAttr;\n import org.apache.syncope.core.persistence.beans.user.UMappingItem;\n+import org.apache.syncope.core.persistence.dao.AttrTemplateDAO;\n import org.apache.syncope.core.persistence.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n@@ -36,7 +40,10 @@\n public class DerSchemaDAOImpl extends AbstractDAOImpl implements DerSchemaDAO {\n \n     @Autowired\n-    private DerAttrDAO derivedAttributeDAO;\n+    private DerAttrDAO derAttrDAO;\n+\n+    @Autowired\n+    private AttrTemplateDAO attrTemplateDAO;\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n@@ -53,44 +60,56 @@ public <T extends AbstractDerSchema> List<T> findAll(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends AbstractDerSchema> T save(final T derivedSchema) {\n-        return entityManager.merge(derivedSchema);\n+    public <T extends AbstractDerAttr> List<T> findAttrs(\n+            final AbstractDerSchema schema, final Class<T> reference) {\n+\n+        final StringBuilder queryString =\n+                new StringBuilder(\"SELECT e FROM \").append(reference.getSimpleName()).append(\" e WHERE e.\");\n+        if (reference.equals(UDerAttr.class)) {\n+            queryString.append(\"derSchema\");\n+        } else {\n+            queryString.append(\"template.schema\");\n+        }\n+        queryString.append(\"=:schema\");\n+\n+        TypedQuery<T> query = entityManager.createQuery(queryString.toString(), reference);\n+        query.setParameter(\"schema\", schema);\n+\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public <T extends AbstractDerSchema> T save(final T derSchema) {\n+        return entityManager.merge(derSchema);\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public void delete(final String name, final AttributableUtil attributableUtil) {\n-        final AbstractDerSchema derivedSchema = find(name, attributableUtil.derSchemaClass());\n-        if (derivedSchema == null) {\n+        final AbstractDerSchema schema = find(name, attributableUtil.derSchemaClass());\n+        if (schema == null) {\n             return;\n         }\n \n-        List<? extends AbstractDerAttr> attributes = getAttributes(derivedSchema, attributableUtil.derAttrClass());\n-\n-        final Set<Long> derivedAttributeIds = new HashSet<Long>(attributes.size());\n-\n-        Class<? extends AbstractDerAttr> attributeClass = null;\n-        for (AbstractDerAttr attribute : attributes) {\n-            derivedAttributeIds.add(attribute.getId());\n-            attributeClass = attribute.getClass();\n+        final Set<Long> attrIds = new HashSet<Long>();\n+        for (AbstractDerAttr attr : findAttrs(schema, attributableUtil.derAttrClass())) {\n+            attrIds.add(attr.getId());\n         }\n-\n-        for (Long derivedAttributeId : derivedAttributeIds) {\n-            derivedAttributeDAO.delete(derivedAttributeId, attributeClass);\n+        for (Long attrId : attrIds) {\n+            derAttrDAO.delete(attrId, attributableUtil.derAttrClass());\n         }\n \n-        resourceDAO.deleteMapping(name, attributableUtil.derIntMappingType(), UMappingItem.class);\n-\n-        entityManager.remove(derivedSchema);\n-    }\n+        if (attributableUtil.getType() != AttributableType.USER) {\n+            for (Iterator<Number> it = attrTemplateDAO.\n+                    findBySchemaName(schema.getName(), attributableUtil.derAttrTemplateClass()).iterator();\n+                    it.hasNext();) {\n \n-    @Override\n-    public <T extends AbstractDerAttr> List<T> getAttributes(final AbstractDerSchema derivedSchema,\n-            final Class<T> reference) {\n+                attrTemplateDAO.delete(it.next().longValue(), attributableUtil.derAttrTemplateClass());\n+            }\n+        }\n \n-        TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n-                + \" WHERE e.derivedSchema=:schema\", reference);\n-        query.setParameter(\"schema\", derivedSchema);\n+        resourceDAO.deleteMapping(name, attributableUtil.derIntMappingType(), UMappingItem.class);\n \n-        return query.getResultList();\n+        entityManager.remove(schema);\n     }\n }"},{"sha":"696d4261c36ff1ac3b38edf81fff2dabbe3c62ad","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/PolicyDAOImpl.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,12 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import static org.apache.syncope.common.types.PolicyType.ACCOUNT;\n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_ACCOUNT;\n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_PASSWORD;\n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_SYNC;\n-import static org.apache.syncope.common.types.PolicyType.PASSWORD;\n-import static org.apache.syncope.common.types.PolicyType.SYNC;\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.common.types.EntityViolationType;"},{"sha":"06d6c27d01bb3d0881e4c1edcd33985ef30c8f50","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":139,"deletions":7,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,21 +21,41 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.persistence.NoResultException;\n+import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n \n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.membership.MAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n+import org.apache.syncope.core.persistence.beans.role.RAttr;\n+import org.apache.syncope.core.persistence.beans.role.RAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AttrDAO;\n+import org.apache.syncope.core.persistence.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.persistence.dao.VirAttrDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -47,6 +67,15 @@ public class RoleDAOImpl extends AbstractAttributableDAOImpl implements RoleDAO\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private AttrDAO attrDAO;\n+\n+    @Autowired\n+    private DerAttrDAO derAttrDAO;\n+\n+    @Autowired\n+    private VirAttrDAO virAttrDAO;\n+\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n@@ -185,10 +214,15 @@ public List<SyncopeRole> findDescendants(final SyncopeRole role) {\n     }\n \n     @Override\n-    public List<SyncopeRole> findByDerAttrValue(final String schemaName, final String value)\n-            throws InvalidSearchConditionException {\n-\n-        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.ROLE));\n+    protected TypedQuery<AbstractAttrValue> findByAttrValueQuery(final String entityName) {\n+        return entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n+                + \" WHERE e.attribute.template.schema.name = :schemaName AND (e.stringValue IS NOT NULL\"\n+                + \" AND e.stringValue = :stringValue)\"\n+                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n+                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n+                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\",\n+                AbstractAttrValue.class);\n     }\n \n     @Override\n@@ -202,6 +236,13 @@ public SyncopeRole findByAttrUniqueValue(final String schemaName, final RAttrVal\n                 AttributableUtil.getInstance(AttributableType.ROLE));\n     }\n \n+    @Override\n+    public List<SyncopeRole> findByDerAttrValue(final String schemaName, final String value)\n+            throws InvalidSearchConditionException {\n+\n+        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.ROLE));\n+    }\n+\n     @Override\n     public List<SyncopeRole> findByResource(final ExternalResource resource) {\n         return findByResource(resource, SyncopeRole.class);\n@@ -223,6 +264,25 @@ public List<Membership> findMemberships(final SyncopeRole role) {\n         return query.getResultList();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private List<Long> unmatched(final Long roleId,\n+            final Class<?> attrClass, final Class<? extends AbstractAttrTemplate> attrTemplateClass) {\n+\n+        final Query query = entityManager.createNativeQuery(new StringBuilder().\n+                append(\"SELECT ma.id \").\n+                append(\"FROM \").append(Membership.class.getSimpleName()).append(\" m, \").\n+                append(attrClass.getSimpleName()).append(\" ma \").\n+                append(\"WHERE m.syncopeRole_id = ?1 \").\n+                append(\"AND ma.owner_id = m.id \").\n+                append(\"AND ma.template_id NOT IN (\").\n+                append(\"SELECT id \").\n+                append(\"FROM \").append(attrTemplateClass.getSimpleName()).append(' ').\n+                append(\"WHERE owner_id = ?1)\").toString());\n+        query.setParameter(1, roleId);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public SyncopeRole save(final SyncopeRole role) {\n         // reset account policy in case of inheritance\n@@ -235,9 +295,81 @@ public SyncopeRole save(final SyncopeRole role) {\n             role.setPasswordPolicy(null);\n         }\n \n-        final SyncopeRole merged = entityManager.merge(role);\n-        for (AbstractVirAttr virtual : merged.getVirtualAttributes()) {\n-            virtual.setValues(role.getVirtualAttribute(virtual.getVirtualSchema().getName()).getValues());\n+        // remove attributes without a valid template\n+        List<RAttr> rToBeDeleted = new ArrayList<RAttr>();\n+        for (AbstractAttr attr : role.getAttrs()) {\n+            boolean found = false;\n+            for (RAttrTemplate template : role.findInheritedTemplates(RAttrTemplate.class)) {\n+                if (template.getSchema().equals(attr.getSchema())) {\n+                    found = true;\n+                }\n+            }\n+            if (!found) {\n+                rToBeDeleted.add((RAttr) attr);\n+            }\n+        }\n+        for (RAttr attr : rToBeDeleted) {\n+            LOG.debug(\"Removing {} from {} because no template is available for it\", attr, role);\n+            role.removeAttr(attr);\n+        }\n+\n+        // remove derived attributes without a valid template\n+        List<RDerAttr> rDerToBeDeleted = new ArrayList<RDerAttr>();\n+        for (AbstractDerAttr attr : role.getDerAttrs()) {\n+            boolean found = false;\n+            for (RDerAttrTemplate template : role.findInheritedTemplates(RDerAttrTemplate.class)) {\n+                if (template.getSchema().equals(attr.getSchema())) {\n+                    found = true;\n+                }\n+            }\n+            if (!found) {\n+                rDerToBeDeleted.add((RDerAttr) attr);\n+            }\n+        }\n+        for (RDerAttr attr : rDerToBeDeleted) {\n+            LOG.debug(\"Removing {} from {} because no template is available for it\", attr, role);\n+            role.removeDerAttr(attr);\n+        }\n+\n+        // remove virtual attributes without a valid template\n+        List<RVirAttr> rVirToBeDeleted = new ArrayList<RVirAttr>();\n+        for (AbstractVirAttr attr : role.getVirAttrs()) {\n+            boolean found = false;\n+            for (RVirAttrTemplate template : role.findInheritedTemplates(RVirAttrTemplate.class)) {\n+                if (template.getSchema().equals(attr.getSchema())) {\n+                    found = true;\n+                }\n+            }\n+            if (!found) {\n+                LOG.debug(\"Removing {} from {} because no template is available for it\", attr, role);\n+                rVirToBeDeleted.add((RVirAttr) attr);\n+            }\n+        }\n+        for (RVirAttr attr : rVirToBeDeleted) {\n+            role.removeVirAttr(attr);\n+        }\n+        \n+        SyncopeRole merged = entityManager.merge(role);\n+        \n+        // Now the same process for any exising membership of the role being saved\n+        if (role.getId() != null) {\n+            for (Long id : unmatched(role.getId(), MAttr.class, MAttrTemplate.class)) {\n+                LOG.debug(\"Removing MAttr[{}] because no template is available for it in {}\", id, role);\n+                attrDAO.delete(id, MAttr.class);\n+            }\n+            for (Long id : unmatched(role.getId(), MDerAttr.class, MDerAttrTemplate.class)) {\n+                LOG.debug(\"Removing MDerAttr[{}] because no template is available for it in {}\", id, role);\n+                derAttrDAO.delete(id, MDerAttr.class);\n+            }\n+            for (Long id : unmatched(role.getId(), MVirAttr.class, MVirAttrTemplate.class)) {\n+                LOG.debug(\"Removing MVirAttr[{}] because no template is available for it in {}\", id, role);\n+                virAttrDAO.delete(id, MVirAttr.class);\n+            }\n+        }\n+\n+        merged = entityManager.merge(merged);\n+        for (AbstractVirAttr attr : merged.getVirAttrs()) {\n+            attr.setValues(role.getVirAttr(attr.getSchema().getName()).getValues());\n         }\n \n         entitlementDAO.saveEntitlementRole(merged);"},{"sha":"0cebcda16be4ef9dad448fbf8b43bacf1266abc1","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":37,"deletions":16,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,13 +19,17 @@\n package org.apache.syncope.core.persistence.dao.impl;\n \n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.TypedQuery;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.user.UAttr;\n import org.apache.syncope.core.persistence.beans.user.UMappingItem;\n import org.apache.syncope.core.persistence.dao.AttrDAO;\n+import org.apache.syncope.core.persistence.dao.AttrTemplateDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -36,53 +40,70 @@\n public class SchemaDAOImpl extends AbstractDAOImpl implements SchemaDAO {\n \n     @Autowired\n-    private AttrDAO attributeDAO;\n+    private AttrDAO attrDAO;\n+\n+    @Autowired\n+    private AttrTemplateDAO attrTemplateDAO;\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n \n     @Override\n-    public <T extends AbstractSchema> T find(final String name, final Class<T> reference) {\n+    public <T extends AbstractNormalSchema> T find(final String name, final Class<T> reference) {\n \n         return entityManager.find(reference, name);\n     }\n \n     @Override\n-    public <T extends AbstractSchema> List<T> findAll(final Class<T> reference) {\n+    public <T extends AbstractNormalSchema> List<T> findAll(final Class<T> reference) {\n         TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\", reference);\n \n         return query.getResultList();\n     }\n \n     @Override\n-    public <T extends AbstractAttr> List<T> getAttributes(final AbstractSchema schema, final Class<T> reference) {\n-        TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n-                + \" WHERE e.schema=:schema\", reference);\n+    public <T extends AbstractAttr> List<T> findAttrs(final AbstractNormalSchema schema, final Class<T> reference) {\n+        final StringBuilder queryString =\n+                new StringBuilder(\"SELECT e FROM \").append(reference.getSimpleName()).append(\" e WHERE e.\");\n+        if (!reference.equals(UAttr.class)) {\n+            queryString.append(\"template.\");\n+        }\n+        queryString.append(\"schema=:schema\");\n+\n+        TypedQuery<T> query = entityManager.createQuery(queryString.toString(), reference);\n         query.setParameter(\"schema\", schema);\n \n         return query.getResultList();\n     }\n \n     @Override\n-    public <T extends AbstractSchema> T save(final T schema) {\n+    public <T extends AbstractNormalSchema> T save(final T schema) {\n         return entityManager.merge(schema);\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public void delete(final String name, final AttributableUtil attributableUtil) {\n-        AbstractSchema schema = find(name, attributableUtil.schemaClass());\n+        AbstractNormalSchema schema = find(name, attributableUtil.schemaClass());\n         if (schema == null) {\n             return;\n         }\n \n-        List<? extends AbstractAttr> attributes = getAttributes(schema, attributableUtil.attrClass());\n-\n-        Set<Long> attributeIds = new HashSet<Long>(attributes.size());\n-        for (AbstractAttr attribute : attributes) {\n-            attributeIds.add(attribute.getId());\n+        final Set<Long> attrIds = new HashSet<Long>();\n+        for (AbstractAttr attr : findAttrs(schema, attributableUtil.attrClass())) {\n+            attrIds.add(attr.getId());\n+        }\n+        for (Long attrId : attrIds) {\n+            attrDAO.delete(attrId, attributableUtil.attrClass());\n         }\n-        for (Long attributeId : attributeIds) {\n-            attributeDAO.delete(attributeId, attributableUtil.attrClass());\n+\n+        if (attributableUtil.getType() != AttributableType.USER) {\n+            for (Iterator<Number> it = attrTemplateDAO.\n+                    findBySchemaName(schema.getName(), attributableUtil.attrTemplateClass()).iterator();\n+                    it.hasNext();) {\n+\n+                attrTemplateDAO.delete(it.next().longValue(), attributableUtil.attrTemplateClass());\n+            }\n         }\n \n         resourceDAO.deleteMapping(name, attributableUtil.intMappingType(), UMappingItem.class);"},{"sha":"c5c6bef9e82fb31ea028dd225acb7e24894e50a3","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -27,6 +27,7 @@\n \n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n@@ -100,10 +101,15 @@ public SyncopeUser findByWorkflowId(final String workflowId) {\n     }\n \n     @Override\n-    public List<SyncopeUser> findByDerAttrValue(final String schemaName, final String value)\n-            throws InvalidSearchConditionException {\n-\n-        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.USER));\n+    protected TypedQuery<AbstractAttrValue> findByAttrValueQuery(final String entityName) {\n+        return entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n+                + \" WHERE e.attribute.schema.name = :schemaName AND (e.stringValue IS NOT NULL\"\n+                + \" AND e.stringValue = :stringValue)\"\n+                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n+                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n+                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\",\n+                AbstractAttrValue.class);\n     }\n \n     @Override\n@@ -117,6 +123,13 @@ public SyncopeUser findByAttrUniqueValue(final String schemaName, final UAttrVal\n                 AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n+    @Override\n+    public List<SyncopeUser> findByDerAttrValue(final String schemaName, final String value)\n+            throws InvalidSearchConditionException {\n+\n+        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.USER));\n+    }\n+\n     @Override\n     public List<SyncopeUser> findByResource(final ExternalResource resource) {\n         return findByResource(resource, SyncopeUser.class);\n@@ -212,8 +225,8 @@ public final int count(final Set<Long> adminRoles) {\n     @Override\n     public SyncopeUser save(final SyncopeUser user) {\n         final SyncopeUser merged = entityManager.merge(user);\n-        for (AbstractVirAttr virtual : merged.getVirtualAttributes()) {\n-            virtual.setValues(user.getVirtualAttribute(virtual.getVirtualSchema().getName()).getValues());\n+        for (AbstractVirAttr virtual : merged.getVirAttrs()) {\n+            virtual.setValues(user.getVirAttr(virtual.getSchema().getName()).getValues());\n         }\n \n         return merged;"},{"sha":"2d9b2e0ee0ebb417ff5350f772d7b906ceffb8c1","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/VirAttrDAOImpl.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -40,26 +40,26 @@ public <T extends AbstractVirAttr> List<T> findAll(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> T save(final T virtualAttribute) {\n-        return entityManager.merge(virtualAttribute);\n+    public <T extends AbstractVirAttr> T save(final T virAttr) {\n+        return entityManager.merge(virAttr);\n     }\n \n     @Override\n     public <T extends AbstractVirAttr> void delete(final Long id, final Class<T> reference) {\n-        T virtualAttribute = find(id, reference);\n-        if (virtualAttribute == null) {\n+        T virAttr = find(id, reference);\n+        if (virAttr == null) {\n             return;\n         }\n \n-        delete(virtualAttribute);\n+        delete(virAttr);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> void delete(final T virtualAttribute) {\n-        if (virtualAttribute.getOwner() != null) {\n-            virtualAttribute.getOwner().removeVirtualAttribute(virtualAttribute);\n+    public <T extends AbstractVirAttr> void delete(final T virAttr) {\n+        if (virAttr.getOwner() != null) {\n+            virAttr.getOwner().removeVirAttr(virAttr);\n         }\n \n-        entityManager.remove(virtualAttribute);\n+        entityManager.remove(virAttr);\n     }\n }"},{"sha":"7a74ff592631a32253f5d0e99119fb7a1bd99318","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/VirSchemaDAOImpl.java","status":"modified","additions":46,"deletions":29,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,12 +19,16 @@\n package org.apache.syncope.core.persistence.dao.impl;\n \n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import javax.persistence.TypedQuery;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.user.UMappingItem;\n+import org.apache.syncope.core.persistence.beans.user.UVirAttr;\n+import org.apache.syncope.core.persistence.dao.AttrTemplateDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.VirAttrDAO;\n import org.apache.syncope.core.persistence.dao.VirSchemaDAO;\n@@ -36,7 +40,10 @@\n public class VirSchemaDAOImpl extends AbstractDAOImpl implements VirSchemaDAO {\n \n     @Autowired\n-    private VirAttrDAO virtualAttributeDAO;\n+    private VirAttrDAO virAttrDAO;\n+\n+    @Autowired\n+    private AttrTemplateDAO attrTemplateDAO;\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n@@ -53,46 +60,56 @@ public <T extends AbstractVirSchema> List<T> findAll(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> T save(final T virtualSchema) {\n-        return entityManager.merge(virtualSchema);\n+    public <T extends AbstractVirAttr> List<T> findAttrs(\n+            final AbstractVirSchema schema, final Class<T> reference) {\n+\n+        final StringBuilder queryString =\n+                new StringBuilder(\"SELECT e FROM \").append(reference.getSimpleName()).append(\" e WHERE e.\");\n+        if (reference.equals(UVirAttr.class)) {\n+            queryString.append(\"virSchema\");\n+        } else {\n+            queryString.append(\"template.schema\");\n+        }\n+        queryString.append(\"=:schema\");\n+\n+        TypedQuery<T> query = entityManager.createQuery(queryString.toString(), reference);\n+        query.setParameter(\"schema\", schema);\n+\n+        return query.getResultList();\n     }\n \n     @Override\n-    public void delete(final String name, final AttributableUtil attributableUtil) {\n-        final AbstractVirSchema virtualSchema = find(name, attributableUtil.virSchemaClass());\n+    public <T extends AbstractVirSchema> T save(final T virSchema) {\n+        return entityManager.merge(virSchema);\n+    }\n \n-        if (virtualSchema == null) {\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void delete(final String name, final AttributableUtil attributableUtil) {\n+        final AbstractVirSchema schema = find(name, attributableUtil.virSchemaClass());\n+        if (schema == null) {\n             return;\n         }\n \n-        List<? extends AbstractVirAttr> attributes = getAttributes(virtualSchema, attributableUtil.virAttrClass());\n-\n-        final Set<Long> virAttrIds = new HashSet<Long>(attributes.size());\n-\n-        Class<? extends AbstractVirAttr> attributeClass = null;\n-\n-        for (AbstractVirAttr attribute : attributes) {\n-            virAttrIds.add(attribute.getId());\n-            attributeClass = attribute.getClass();\n+        final Set<Long> attrIds = new HashSet<Long>();\n+        for (AbstractVirAttr attr : findAttrs(schema, attributableUtil.virAttrClass())) {\n+            attrIds.add(attr.getId());\n         }\n-\n-        for (Long virtualAttributeId : virAttrIds) {\n-            virtualAttributeDAO.delete(virtualAttributeId, attributeClass);\n+        for (Long attrId : attrIds) {\n+            virAttrDAO.delete(attrId, attributableUtil.virAttrClass());\n         }\n \n-        resourceDAO.deleteMapping(name, attributableUtil.virIntMappingType(), UMappingItem.class);\n-\n-        entityManager.remove(virtualSchema);\n-    }\n+        if (attributableUtil.getType() != AttributableType.USER) {\n+            for (Iterator<Number> it = attrTemplateDAO.\n+                    findBySchemaName(schema.getName(), attributableUtil.virAttrTemplateClass()).iterator();\n+                    it.hasNext();) {\n \n-    @Override\n-    public <T extends AbstractVirAttr> List<T> getAttributes(final AbstractVirSchema virtualSchema,\n-            final Class<T> reference) {\n+                attrTemplateDAO.delete(it.next().longValue(), attributableUtil.virAttrTemplateClass());\n+            }\n+        }\n \n-        TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n-                + \" WHERE e.virtualSchema=:schema\", reference);\n-        query.setParameter(\"schema\", virtualSchema);\n+        resourceDAO.deleteMapping(name, attributableUtil.virIntMappingType(), UMappingItem.class);\n \n-        return query.getResultList();\n+        entityManager.remove(schema);\n     }\n }"},{"sha":"ec2fa71f3837fa8c044b4efac974ca7d8ed1d1c4","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/AbstractValidator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,7 +21,7 @@\n import java.io.Serializable;\n \n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -34,9 +34,9 @@ public abstract class AbstractValidator implements Validator, Serializable {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n-    protected final AbstractSchema schema;\n+    protected final AbstractNormalSchema schema;\n \n-    public AbstractValidator(final AbstractSchema schema) {\n+    public AbstractValidator(final AbstractNormalSchema schema) {\n         this.schema = schema;\n     }\n "},{"sha":"adfa718a08caf2bf7c48f1959ae45d7395453000","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/AlwaysTrueValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.core.persistence.validation.attrvalue;\n \n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n public class AlwaysTrueValidator extends AbstractValidator {\n \n     private static final long serialVersionUID = 872107345555773183L;\n \n-    public AlwaysTrueValidator(final AbstractSchema schema) {\n+    public AlwaysTrueValidator(final AbstractNormalSchema schema) {\n         super(schema);\n     }\n "},{"sha":"4f56398a84da9277ac88fd7a1916c701f434125d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/BasicValidator.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -19,22 +19,23 @@\n package org.apache.syncope.core.persistence.validation.attrvalue;\n \n import java.util.Arrays;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n public class BasicValidator extends AbstractValidator {\n \n     private static final long serialVersionUID = -2606728447694223607L;\n \n-    public BasicValidator(final AbstractSchema schema) {\n+    public BasicValidator(final AbstractNormalSchema schema) {\n         super(schema);\n     }\n \n     @Override\n     protected void doValidate(final AbstractAttrValue attributeValue) throws InvalidAttrValueException {\n         if (AttributeSchemaType.Enum.equals(schema.getType())) {\n-            final String[] enumeration = schema.getEnumerationValues().split(AbstractSchema.enumValuesSeparator);\n+            final String[] enumeration = schema.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n \n             final String value = attributeValue.getStringValue();\n "},{"sha":"0ab15409f4da67c5b746a4cf1bb2bb800ffe0bf6","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/EmailAddressValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -22,7 +22,7 @@\n import java.util.regex.Pattern;\n \n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n public class EmailAddressValidator extends AbstractValidator {\n \n@@ -33,7 +33,7 @@ public class EmailAddressValidator extends AbstractValidator {\n             + \"@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\",\n             Pattern.CASE_INSENSITIVE);\n \n-    public EmailAddressValidator(final AbstractSchema schema) {\n+    public EmailAddressValidator(final AbstractNormalSchema schema) {\n         super(schema);\n     }\n "},{"sha":"4c26048ba62ba4cd31e79db6cc43b2fad875617d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrValueValidator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n public class AttrValueValidator extends AbstractValidator<AttrValueCheck, AbstractAttrValue> {\n \n@@ -60,8 +60,8 @@ public boolean isValid(final AbstractAttrValue object, final ConstraintValidator\n                         addNode(object.getClass().getSimpleName().replaceAll(\"\\\\n\", \" \")).addConstraintViolation();\n \n             } else if (object instanceof AbstractAttrUniqueValue) {\n-                AbstractSchema uniqueValueSchema = ((AbstractAttrUniqueValue) object).getSchema();\n-                AbstractSchema attrSchema = object.getAttribute().getSchema();\n+                AbstractNormalSchema uniqueValueSchema = ((AbstractAttrUniqueValue) object).getSchema();\n+                AbstractNormalSchema attrSchema = object.getAttribute().getSchema();\n \n                 isValid = uniqueValueSchema.equals(attrSchema);\n "},{"sha":"69892f903c03c0534df1e11128c738106367f94d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaValidator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -23,12 +23,12 @@\n \n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n-public class SchemaValidator extends AbstractValidator<SchemaCheck, AbstractSchema> {\n+public class SchemaValidator extends AbstractValidator<SchemaCheck, AbstractNormalSchema> {\n \n     @Override\n-    public boolean isValid(final AbstractSchema schema, final ConstraintValidatorContext context) {\n+    public boolean isValid(final AbstractNormalSchema schema, final ConstraintValidatorContext context) {\n         boolean isValid = schema.getType() != AttributeSchemaType.Enum\n                 || StringUtils.isNotBlank(schema.getEnumerationValues());\n         if (!isValid) {"},{"sha":"68e30d01bf1f63f301f78469ccec98c1ac9dc530","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyEvaluator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -55,7 +55,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[]{\"schemasNotPermitted\"});\n \n                 for (String schema : ppSpec.getSchemasNotPermitted()) {\n-                    AbstractAttr attribute = attributable.getAttribute(schema);\n+                    AbstractAttr attribute = attributable.getAttr(schema);\n                     if (attribute != null) {\n                         List<String> values = attribute.getValuesAsStrings();\n                         if (values != null && !values.isEmpty()) {\n@@ -86,7 +86,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 BeanUtils.copyProperties(spec, accountPolicy, new String[]{\"schemasNotPermitted\"});\n \n                 for (String schema : spec.getSchemasNotPermitted()) {\n-                    AbstractAttr attribute = attributable.getAttribute(schema);\n+                    AbstractAttr attribute = attributable.getAttr(schema);\n                     if (attribute != null) {\n                         List<String> values = attribute.getValuesAsStrings();\n                         if (values != null && !values.isEmpty()) {"},{"sha":"b2fdfa0aa5ac045dceeb47f7de74224ed97d8996","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/LDAPMembershipPropagationActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -84,8 +84,8 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n \n                         final JexlContext jexlContext = new MapContext();\n                         jexlUtil.addFieldsToContext(role, jexlContext);\n-                        jexlUtil.addAttrsToContext(role.getAttributes(), jexlContext);\n-                        jexlUtil.addDerAttrsToContext(role.getDerivedAttributes(), role.getAttributes(), jexlContext);\n+                        jexlUtil.addAttrsToContext(role.getAttrs(), jexlContext);\n+                        jexlUtil.addDerAttrsToContext(role.getDerAttrs(), role.getAttrs(), jexlContext);\n                         final String roleAccountLink =\n                                 jexlUtil.evaluate(task.getResource().getRmapping().getAccountLink(), jexlContext);\n                         LOG.debug(\"AccountLink for {} is '{}'\", role, roleAccountLink);"},{"sha":"71777d950940bfa3ded3d2d76f34cf85a99329f2","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -494,7 +494,7 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n             final Map<String, AttributeMod> vAttrsToBeUpdated, final Boolean enable, final ExternalResource resource) {\n \n         LOG.debug(\"Preparing resource attributes for {} on resource {} with attributes {}\",\n-                subject, resource, subject.getAttributes());\n+                subject, resource, subject.getAttrs());\n \n         Set<Attribute> attributes = new HashSet<Attribute>();\n         String accountId = null;\n@@ -576,8 +576,8 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n             connObjectUtil.retrieveVirAttrValues(subject, attrUtil);\n \n             // update vAttrsToBeUpdated as well\n-            for (AbstractVirAttr virAttr : subject.getVirtualAttributes()) {\n-                final String schema = virAttr.getVirtualSchema().getName();\n+            for (AbstractVirAttr virAttr : subject.getVirAttrs()) {\n+                final String schema = virAttr.getSchema().getName();\n \n                 final AttributeMod attributeMod = new AttributeMod();\n                 attributeMod.setSchema(schema);"},{"sha":"9f564bb7f7908a5face88a852937287eb77f4731","filename":"core/src/main/java/org/apache/syncope/core/report/AbstractReportlet.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.core.report;\n \n-import static org.apache.syncope.core.report.ReportXMLConst.ATTR_CLASS;\n-import static org.apache.syncope.core.report.ReportXMLConst.ATTR_NAME;\n-import static org.apache.syncope.core.report.ReportXMLConst.ELEMENT_REPORTLET;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_STRING;\n-\n import org.apache.syncope.common.report.AbstractReportletConf;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -60,12 +55,12 @@ public void extract(final ContentHandler handler) throws SAXException, ReportExc\n         }\n \n         AttributesImpl atts = new AttributesImpl();\n-        atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, conf.getName());\n-        atts.addAttribute(\"\", \"\", ATTR_CLASS, XSD_STRING, getClass().getName());\n-        handler.startElement(\"\", \"\", ELEMENT_REPORTLET, atts);\n+        atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, conf.getName());\n+        atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_CLASS, ReportXMLConst.XSD_STRING, getClass().getName());\n+        handler.startElement(\"\", \"\", ReportXMLConst.ELEMENT_REPORTLET, atts);\n \n         doExtract(handler);\n \n-        handler.endElement(\"\", \"\", ELEMENT_REPORTLET);\n+        handler.endElement(\"\", \"\", ReportXMLConst.ELEMENT_REPORTLET);\n     }\n }"},{"sha":"899c6f734d2603bd077d9fc0f16991b9435d065c","filename":"core/src/main/java/org/apache/syncope/core/report/ReportJob.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,10 +18,6 @@\n  */\n package org.apache.syncope.core.report;\n \n-import static org.apache.syncope.core.report.ReportXMLConst.ATTR_NAME;\n-import static org.apache.syncope.core.report.ReportXMLConst.ELEMENT_REPORT;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_STRING;\n-\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.PrintWriter;\n@@ -148,8 +144,8 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n             // report header\n             handler.startDocument();\n             AttributesImpl atts = new AttributesImpl();\n-            atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, report.getName());\n-            handler.startElement(\"\", \"\", ELEMENT_REPORT, atts);\n+            atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, report.getName());\n+            handler.startElement(\"\", \"\", ReportXMLConst.ELEMENT_REPORT, atts);\n \n             // iterate over reportlet instances defined for this report\n             for (ReportletConf reportletConf : report.getReportletConfs()) {\n@@ -177,7 +173,7 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n             }\n \n             // report footer\n-            handler.endElement(\"\", \"\", ELEMENT_REPORT);\n+            handler.endElement(\"\", \"\", ReportXMLConst.ELEMENT_REPORT);\n             handler.endDocument();\n \n             if (!ReportExecStatus.FAILURE.name().equals(execution.getStatus())) {"},{"sha":"5368a6173dc1a885cbc978c842e8fab092107a52","filename":"core/src/main/java/org/apache/syncope/core/report/RoleReportlet.java","status":"modified","additions":16,"deletions":19,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,10 +18,6 @@\n  */\n package org.apache.syncope.core.report;\n \n-import static org.apache.syncope.core.report.ReportXMLConst.ATTR_NAME;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_LONG;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_STRING;\n-\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n@@ -97,7 +93,7 @@ private void doExtractResources(final ContentHandler handler, final AbstractAttr\n             for (String resourceName : attributableTO.getResources()) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, resourceName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, resourceName);\n                 handler.startElement(\"\", \"\", \"resource\", atts);\n                 handler.endElement(\"\", \"\", \"resource\");\n             }\n@@ -112,13 +108,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n \n         AttributesImpl atts = new AttributesImpl();\n         if (!attrs.isEmpty()) {\n-            Map<String, AttributeTO> attrMap = attributableTO.getAttributeMap();\n+            Map<String, AttributeTO> attrMap = attributableTO.getAttrMap();\n \n             handler.startElement(\"\", \"\", \"attributes\", null);\n             for (String attrName : attrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"attribute\", atts);\n \n                 if (attrMap.containsKey(attrName)) {\n@@ -138,13 +134,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n \n         if (!derAttrs.isEmpty()) {\n-            Map<String, AttributeTO> derAttrMap = attributableTO.getDerivedAttributeMap();\n+            Map<String, AttributeTO> derAttrMap = attributableTO.getDerAttrMap();\n \n             handler.startElement(\"\", \"\", \"derivedAttributes\", null);\n             for (String attrName : derAttrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"derivedAttribute\", atts);\n \n                 if (derAttrMap.containsKey(attrName)) {\n@@ -164,13 +160,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n \n         if (!virAttrs.isEmpty()) {\n-            Map<String, AttributeTO> virAttrMap = attributableTO.getVirtualAttributeMap();\n+            Map<String, AttributeTO> virAttrMap = attributableTO.getVirAttrMap();\n \n             handler.startElement(\"\", \"\", \"virtualAttributes\", null);\n             for (String attrName : virAttrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"virtualAttribute\", atts);\n \n                 if (virAttrMap.containsKey(attrName)) {\n@@ -202,22 +198,22 @@ private void doExtract(final ContentHandler handler, final List<SyncopeRole> rol\n                 String value = null;\n                 switch (feature) {\n                     case id:\n-                        type = XSD_LONG;\n+                        type = ReportXMLConst.XSD_LONG;\n                         value = String.valueOf(role.getId());\n                         break;\n \n                     case name:\n-                        type = XSD_STRING;\n+                        type = ReportXMLConst.XSD_STRING;\n                         value = String.valueOf(role.getName());\n                         break;\n \n                     case roleOwner:\n-                        type = XSD_LONG;\n+                        type = ReportXMLConst.XSD_LONG;\n                         value = String.valueOf(role.getRoleOwner());\n                         break;\n \n                     case userOwner:\n-                        type = XSD_LONG;\n+                        type = ReportXMLConst.XSD_LONG;\n                         value = String.valueOf(role.getUserOwner());\n                         break;\n \n@@ -244,7 +240,7 @@ private void doExtract(final ContentHandler handler, final List<SyncopeRole> rol\n                 for (String ent : roleTO.getEntitlements()) {\n                     atts.clear();\n \n-                    atts.addAttribute(\"\", \"\", \"id\", XSD_STRING, String.valueOf(ent));\n+                    atts.addAttribute(\"\", \"\", \"id\", ReportXMLConst.XSD_STRING, String.valueOf(ent));\n \n                     handler.startElement(\"\", \"\", \"entitlement\", atts);\n                     handler.endElement(\"\", \"\", \"entitlement\");\n@@ -263,9 +259,10 @@ private void doExtract(final ContentHandler handler, final List<SyncopeRole> rol\n                 for (Membership memb : roleDAO.findMemberships(role)) {\n                     atts.clear();\n \n-                    atts.addAttribute(\"\", \"\", \"userId\", XSD_LONG, String.valueOf(memb.getSyncopeUser().getId()));\n-                    atts.addAttribute(\"\", \"\", \"userUsername\", XSD_STRING, String.valueOf(memb.getSyncopeUser().\n-                            getUsername()));\n+                    atts.addAttribute(\"\", \"\", \"userId\", ReportXMLConst.XSD_LONG,\n+                            String.valueOf(memb.getSyncopeUser().getId()));\n+                    atts.addAttribute(\"\", \"\", \"userUsername\", ReportXMLConst.XSD_STRING,\n+                            String.valueOf(memb.getSyncopeUser().getUsername()));\n \n                     handler.startElement(\"\", \"\", \"user\", atts);\n                     handler.endElement(\"\", \"\", \"user\");"},{"sha":"56a2bf059a803175b4b43743661aff49725d191e","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":21,"deletions":27,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,12 +18,6 @@\n  */\n package org.apache.syncope.core.report;\n \n-import static org.apache.syncope.core.report.ReportXMLConst.ATTR_NAME;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_DATETIME;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_INT;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_LONG;\n-import static org.apache.syncope.core.report.ReportXMLConst.XSD_STRING;\n-\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n@@ -107,7 +101,7 @@ private void doExtractResources(final ContentHandler handler, final AbstractAttr\n             for (String resourceName : attributableTO.getResources()) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, resourceName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, resourceName);\n                 handler.startElement(\"\", \"\", \"resource\", atts);\n                 handler.endElement(\"\", \"\", \"resource\");\n             }\n@@ -122,13 +116,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n \n         AttributesImpl atts = new AttributesImpl();\n         if (!attrs.isEmpty()) {\n-            Map<String, AttributeTO> attrMap = attributableTO.getAttributeMap();\n+            Map<String, AttributeTO> attrMap = attributableTO.getAttrMap();\n \n             handler.startElement(\"\", \"\", \"attributes\", null);\n             for (String attrName : attrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"attribute\", atts);\n \n                 if (attrMap.containsKey(attrName)) {\n@@ -148,13 +142,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n \n         if (!derAttrs.isEmpty()) {\n-            Map<String, AttributeTO> derAttrMap = attributableTO.getDerivedAttributeMap();\n+            Map<String, AttributeTO> derAttrMap = attributableTO.getDerAttrMap();\n \n             handler.startElement(\"\", \"\", \"derivedAttributes\", null);\n             for (String attrName : derAttrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"derivedAttribute\", atts);\n \n                 if (derAttrMap.containsKey(attrName)) {\n@@ -174,13 +168,13 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n \n         if (!virAttrs.isEmpty()) {\n-            Map<String, AttributeTO> virAttrMap = attributableTO.getVirtualAttributeMap();\n+            Map<String, AttributeTO> virAttrMap = attributableTO.getVirAttrMap();\n \n             handler.startElement(\"\", \"\", \"virtualAttributes\", null);\n             for (String attrName : virAttrs) {\n                 atts.clear();\n \n-                atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, attrName);\n+                atts.addAttribute(\"\", \"\", ReportXMLConst.ATTR_NAME, ReportXMLConst.XSD_STRING, attrName);\n                 handler.startElement(\"\", \"\", \"virtualAttribute\", atts);\n \n                 if (virAttrMap.containsKey(attrName)) {\n@@ -212,53 +206,53 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n                 String value = null;\n                 switch (feature) {\n                     case id:\n-                        type = XSD_LONG;\n+                        type = ReportXMLConst.XSD_LONG;\n                         value = String.valueOf(user.getId());\n                         break;\n \n                     case username:\n-                        type = XSD_STRING;\n+                        type = ReportXMLConst.XSD_STRING;\n                         value = user.getUsername();\n                         break;\n \n                     case workflowId:\n-                        type = XSD_LONG;\n+                        type = ReportXMLConst.XSD_LONG;\n                         value = String.valueOf(user.getWorkflowId());\n                         break;\n \n                     case status:\n-                        type = XSD_STRING;\n+                        type = ReportXMLConst.XSD_STRING;\n                         value = user.getStatus();\n                         break;\n \n                     case creationDate:\n-                        type = XSD_DATETIME;\n+                        type = ReportXMLConst.XSD_DATETIME;\n                         value = user.getCreationDate() == null\n                                 ? \"\"\n                                 : DataFormat.format(user.getCreationDate());\n                         break;\n \n                     case lastLoginDate:\n-                        type = XSD_DATETIME;\n+                        type = ReportXMLConst.XSD_DATETIME;\n                         value = user.getLastLoginDate() == null\n                                 ? \"\"\n                                 : DataFormat.format(user.getLastLoginDate());\n                         break;\n \n                     case changePwdDate:\n-                        type = XSD_DATETIME;\n+                        type = ReportXMLConst.XSD_DATETIME;\n                         value = user.getChangePwdDate() == null\n                                 ? \"\"\n                                 : DataFormat.format(user.getChangePwdDate());\n                         break;\n \n                     case passwordHistorySize:\n-                        type = XSD_INT;\n+                        type = ReportXMLConst.XSD_INT;\n                         value = String.valueOf(user.getPasswordHistory().size());\n                         break;\n \n                     case failedLoginCount:\n-                        type = XSD_INT;\n+                        type = ReportXMLConst.XSD_INT;\n                         value = String.valueOf(user.getFailedLogins());\n                         break;\n \n@@ -284,13 +278,13 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n                 for (MembershipTO memb : userTO.getMemberships()) {\n                     atts.clear();\n \n-                    atts.addAttribute(\"\", \"\", \"id\", XSD_LONG, String.valueOf(memb.getId()));\n-                    atts.addAttribute(\"\", \"\", \"roleId\", XSD_LONG, String.valueOf(memb.getRoleId()));\n-                    atts.addAttribute(\"\", \"\", \"roleName\", XSD_STRING, String.valueOf(memb.getRoleName()));\n+                    atts.addAttribute(\"\", \"\", \"id\", ReportXMLConst.XSD_LONG, String.valueOf(memb.getId()));\n+                    atts.addAttribute(\"\", \"\", \"roleId\", ReportXMLConst.XSD_LONG, String.valueOf(memb.getRoleId()));\n+                    atts.addAttribute(\"\", \"\", \"roleName\", ReportXMLConst.XSD_STRING, String.valueOf(memb.getRoleName()));\n                     handler.startElement(\"\", \"\", \"membership\", atts);\n \n-                    doExtractAttributes(handler, memb, memb.getAttributeMap().keySet(), memb.getDerivedAttributeMap()\n-                            .keySet(), memb.getVirtualAttributeMap().keySet());\n+                    doExtractAttributes(handler, memb, memb.getAttrMap().keySet(), memb.getDerAttrMap()\n+                            .keySet(), memb.getVirAttrMap().keySet());\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n                         Membership actualMemb = user.getMembership(memb.getRoleId());"},{"sha":"38b3d9b99b91e203a4b646f17fd2e162f68a6d8e","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n-import static org.apache.syncope.core.rest.controller.AbstractController.LOG;\n-\n import java.lang.reflect.Method;\n import java.util.Collection;\n import java.util.Collections;"},{"sha":"c957dbf96c2667d6c774ba626e39e062d1555b1b","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -262,7 +262,7 @@ public RoleTO create(final RoleTO roleTO) {\n \n         EntitlementUtil.extendAuthContext(created.getResult());\n \n-        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, roleTO.getVirtualAttributes());\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, roleTO.getVirAttrs());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n         final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n@@ -293,7 +293,7 @@ public RoleTO update(final RoleMod roleMod) {\n         WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n \n         List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n-                roleMod.getVirtualAttributesToBeRemoved(), roleMod.getVirtualAttributesToBeUpdated());\n+                roleMod.getVirAttrsToRemove(), roleMod.getVirAttrsToUpdate());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n         final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n@@ -359,7 +359,7 @@ public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n \n-        roleMod.getResourcesToBeRemoved().addAll(resources);\n+        roleMod.getResourcesToRemove().addAll(resources);\n \n         final WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n \n@@ -380,7 +380,7 @@ public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleId);\n-        roleMod.getResourcesToBeRemoved().addAll(resources);\n+        roleMod.getResourcesToRemove().addAll(resources);\n \n         return update(roleMod);\n     }"},{"sha":"542560d98d9564401cb7aeb98ee020124243616c","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n@@ -128,7 +128,7 @@ public <T extends AbstractSchemaTO> T create(final AttributableType attrType, fi\n \n             case NORMAL:\n             default:\n-                AbstractSchema normalSchema = attrUtil.newSchema();\n+                AbstractNormalSchema normalSchema = attrUtil.newSchema();\n                 binder.create((SchemaTO) schemaTO, normalSchema);\n                 normalSchema = schemaDAO.save(normalSchema);\n \n@@ -193,9 +193,9 @@ public <T extends AbstractSchemaTO> List<T> list(final AttributableType attrType\n \n             case NORMAL:\n             default:\n-                List<AbstractSchema> schemas = schemaDAO.findAll(attrUtil.schemaClass());\n+                List<AbstractNormalSchema> schemas = schemaDAO.findAll(attrUtil.schemaClass());\n                 result = (List<T>) new ArrayList<SchemaTO>(schemas.size());\n-                for (AbstractSchema schema : schemas) {\n+                for (AbstractNormalSchema schema : schemas) {\n                     result.add((T) binder.getSchemaTO(schema, attrUtil));\n                 }\n         }\n@@ -236,7 +236,7 @@ public <T extends AbstractSchemaTO> T read(final AttributableType attrType, fina\n \n             case NORMAL:\n             default:\n-                AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+                AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n                 if (schema == null) {\n                     throw new NotFoundException(\"Schema '\" + schemaName + \"'\");\n                 }\n@@ -284,7 +284,7 @@ public <T extends AbstractSchemaTO> void update(final AttributableType attrType,\n \n             case NORMAL:\n             default:\n-                AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+                AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n                 if (schema == null) {\n                     throw new NotFoundException(\"Schema '\" + schemaName + \"'\");\n                 }"},{"sha":"dc10c9d434b4b7a49df168e07e860c254315fad5","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -255,7 +255,7 @@ public UserTO create(final UserTO userTO) {\n         WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(userTO);\n \n         List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n-                created, userTO.getPassword(), userTO.getVirtualAttributes());\n+                created, userTO.getPassword(), userTO.getVirAttrs());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n         final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n@@ -296,7 +296,7 @@ public UserTO update(final UserMod userMod) {\n         if (userMod.getPwdPropRequest() == null) {\n             // 2a. no specific password propagation request: generate propagation tasks for any resource associated\n             tasks = propagationManager.getUserUpdateTaskIds(updated, changedPwd,\n-                    userMod.getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated());\n+                    userMod.getVirAttrsToRemove(), userMod.getVirAttrsToUpdate());\n         } else {\n             // 2b. generate the propagation task list in two phases: first the ones containing password,\n             // the the rest (with no password)\n@@ -312,13 +312,13 @@ public UserTO update(final UserMod userMod) {\n \n             if (!pwdPropByRes.isEmpty()) {\n                 Set<String> toBeExcluded = new HashSet<String>(user.getResourceNames());\n-                toBeExcluded.addAll(userMod.getResourcesToBeAdded());\n+                toBeExcluded.addAll(userMod.getResourcesToAdd());\n                 toBeExcluded.removeAll(pwdResourceNames);\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n                         updated,\n                         changedPwd,\n-                        userMod.getVirtualAttributesToBeRemoved(),\n-                        userMod.getVirtualAttributesToBeUpdated(),\n+                        userMod.getVirAttrsToRemove(),\n+                        userMod.getVirAttrsToUpdate(),\n                         toBeExcluded));\n             }\n \n@@ -332,8 +332,8 @@ public UserTO update(final UserMod userMod) {\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n                         updated,\n                         null,\n-                        userMod.getVirtualAttributesToBeRemoved(),\n-                        userMod.getVirtualAttributesToBeUpdated(),\n+                        userMod.getVirAttrsToRemove(),\n+                        userMod.getVirAttrsToUpdate(),\n                         pwdResourceNames));\n             }\n \n@@ -629,7 +629,7 @@ public UserTO unlink(final Long userId, final Collection<String> resources) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n \n-        userMod.getResourcesToBeRemoved().addAll(resources);\n+        userMod.getResourcesToRemove().addAll(resources);\n \n         final WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n \n@@ -650,7 +650,7 @@ public UserTO unassign(final Long userId, final Collection<String> resources) {\n \n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n-        userMod.getResourcesToBeRemoved().addAll(resources);\n+        userMod.getResourcesToRemove().addAll(resources);\n \n         return update(userMod);\n     }"},{"sha":"81ec137357c2a675ee1f7bf22cb4d45ab33e7407","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":302,"deletions":135,"changes":437,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -46,10 +46,31 @@\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.membership.MAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.Membership;\n+import org.apache.syncope.core.persistence.beans.role.RAttr;\n+import org.apache.syncope.core.persistence.beans.role.RAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.apache.syncope.core.persistence.beans.user.UAttr;\n+import org.apache.syncope.core.persistence.beans.user.UDerAttr;\n+import org.apache.syncope.core.persistence.beans.user.UDerSchema;\n+import org.apache.syncope.core.persistence.beans.user.USchema;\n+import org.apache.syncope.core.persistence.beans.user.UVirAttr;\n+import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.core.persistence.dao.AttrDAO;\n import org.apache.syncope.core.persistence.dao.AttrValueDAO;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n@@ -120,7 +141,22 @@ public abstract class AbstractAttributableDataBinder {\n     @Autowired\n     private JexlUtil jexlUtil;\n \n-    private <T extends AbstractSchema> T getSchema(final String schemaName, final Class<T> reference) {\n+    @SuppressWarnings(\"unchecked\")\n+    protected <T extends AbstractSchema> T getSchema(final String schemaName, final Class<T> reference) {\n+        T result = null;\n+\n+        if (AbstractNormalSchema.class.isAssignableFrom(reference)) {\n+            result = (T) getNormalSchema(schemaName, (Class<? extends AbstractNormalSchema>) reference);\n+        } else if (AbstractDerSchema.class.isAssignableFrom(reference)) {\n+            result = (T) getDerSchema(schemaName, (Class<? extends AbstractDerSchema>) reference);\n+        } else if (AbstractVirSchema.class.isAssignableFrom(reference)) {\n+            result = (T) getVirSchema(schemaName, (Class<? extends AbstractVirSchema>) reference);\n+        }\n+\n+        return result;\n+    }\n+\n+    private <T extends AbstractNormalSchema> T getNormalSchema(final String schemaName, final Class<T> reference) {\n         T schema = null;\n         if (StringUtils.isNotBlank(schemaName)) {\n             schema = schemaDAO.find(schemaName, reference);\n@@ -139,7 +175,7 @@ private <T extends AbstractSchema> T getSchema(final String schemaName, final Cl\n         return schema;\n     }\n \n-    private <T extends AbstractDerSchema> T getDerivedSchema(final String derSchemaName, final Class<T> reference) {\n+    private <T extends AbstractDerSchema> T getDerSchema(final String derSchemaName, final Class<T> reference) {\n         T derivedSchema = null;\n         if (StringUtils.isNotBlank(derSchemaName)) {\n             derivedSchema = derSchemaDAO.find(derSchemaName, reference);\n@@ -151,7 +187,7 @@ private <T extends AbstractDerSchema> T getDerivedSchema(final String derSchemaN\n         return derivedSchema;\n     }\n \n-    private <T extends AbstractVirSchema> T getVirtualSchema(final String virSchemaName, final Class<T> reference) {\n+    private <T extends AbstractVirSchema> T getVirSchema(final String virSchemaName, final Class<T> reference) {\n         T virtualSchema = null;\n         if (StringUtils.isNotBlank(virSchemaName)) {\n             virtualSchema = virSchemaDAO.find(virSchemaName, reference);\n@@ -178,11 +214,10 @@ private ExternalResource getResource(final String resourceName) {\n     }\n \n     protected void fillAttribute(final List<String> values, final AttributableUtil attributableUtil,\n-            final AbstractSchema schema, final AbstractAttr attribute, final SyncopeClientException invalidValues) {\n+            final AbstractNormalSchema schema, final AbstractAttr attr, final SyncopeClientException invalidValues) {\n \n-        // if the schema is multivalue, all values are considered for\n-        // addition, otherwise only the fist one - if provided - is\n-        // considered\n+        // if schema is multivalue, all values are considered for addition;\n+        // otherwise only the fist one - if provided - is considered\n         List<String> valuesProvided = schema.isMultivalue()\n                 ? values\n                 : (values.isEmpty()\n@@ -194,7 +229,7 @@ protected void fillAttribute(final List<String> values, final AttributableUtil a\n                 LOG.debug(\"Null value for {}, ignoring\", schema.getName());\n             } else {\n                 try {\n-                    attribute.addValue(value, attributableUtil);\n+                    attr.addValue(value, attributableUtil);\n                 } catch (ValidationException e) {\n                     LOG.error(\"Invalid value for attribute \" + schema.getName() + \": \" + value, e);\n \n@@ -209,9 +244,9 @@ private boolean evaluateMandatoryCondition(final String mandatoryCondition,\n             final AbstractAttributable attributable) {\n \n         JexlContext jexlContext = new MapContext();\n-        jexlUtil.addAttrsToContext(attributable.getAttributes(), jexlContext);\n-        jexlUtil.addDerAttrsToContext(attributable.getDerivedAttributes(), attributable.getAttributes(), jexlContext);\n-        jexlUtil.addVirAttrsToContext(attributable.getVirtualAttributes(), jexlContext);\n+        jexlUtil.addAttrsToContext(attributable.getAttrs(), jexlContext);\n+        jexlUtil.addDerAttrsToContext(attributable.getDerAttrs(), attributable.getAttrs(), jexlContext);\n+        jexlUtil.addVirAttrsToContext(attributable.getVirAttrs(), jexlContext);\n \n         return Boolean.parseBoolean(jexlUtil.evaluate(mandatoryCondition, jexlContext));\n     }\n@@ -255,8 +290,23 @@ private SyncopeClientException checkMandatory(final AttributableUtil attrUtil,\n         LOG.debug(\"Check mandatory constraint among resources {}\", attributable.getResources());\n \n         // Check if there is some mandatory schema defined for which no value has been provided\n-        for (AbstractSchema schema : schemaDAO.findAll(attrUtil.schemaClass())) {\n-            if (attributable.getAttribute(schema.getName()) == null\n+        List<? extends AbstractNormalSchema> normalSchemas;\n+        switch (attrUtil.getType()) {\n+            case ROLE:\n+                normalSchemas = ((SyncopeRole) attributable).getAttrTemplateSchemas(RAttrTemplate.class);\n+                break;\n+\n+            case MEMBERSHIP:\n+                normalSchemas = ((Membership) attributable).getSyncopeRole().\n+                        getAttrTemplateSchemas(MAttrTemplate.class);\n+                break;\n+\n+            case USER:\n+            default:\n+                normalSchemas = schemaDAO.findAll(attrUtil.schemaClass());\n+        }\n+        for (AbstractNormalSchema schema : normalSchemas) {\n+            if (attributable.getAttr(schema.getName()) == null\n                     && !schema.isReadonly()\n                     && (evaluateMandatoryCondition(schema.getMandatoryCondition(), attributable)\n                     || evaluateMandatoryCondition(attrUtil, attributable, schema.getName(),\n@@ -267,8 +317,24 @@ private SyncopeClientException checkMandatory(final AttributableUtil attrUtil,\n                 reqValMissing.addElement(schema.getName());\n             }\n         }\n-        for (AbstractDerSchema derSchema : derSchemaDAO.findAll(attrUtil.derSchemaClass())) {\n-            if (attributable.getDerivedAttribute(derSchema.getName()) == null\n+\n+        List<? extends AbstractDerSchema> derSchemas;\n+        switch (attrUtil.getType()) {\n+            case ROLE:\n+                derSchemas = ((SyncopeRole) attributable).getAttrTemplateSchemas(RDerAttrTemplate.class);\n+                break;\n+\n+            case MEMBERSHIP:\n+                derSchemas = ((Membership) attributable).getSyncopeRole().\n+                        getAttrTemplateSchemas(MDerAttrTemplate.class);\n+                break;\n+\n+            case USER:\n+            default:\n+                derSchemas = derSchemaDAO.findAll(attrUtil.derSchemaClass());\n+        }\n+        for (AbstractDerSchema derSchema : derSchemas) {\n+            if (attributable.getDerAttr(derSchema.getName()) == null\n                     && evaluateMandatoryCondition(attrUtil, attributable, derSchema.getName(),\n                     attrUtil.derIntMappingType())) {\n \n@@ -277,8 +343,24 @@ && evaluateMandatoryCondition(attrUtil, attributable, derSchema.getName(),\n                 reqValMissing.addElement(derSchema.getName());\n             }\n         }\n-        for (AbstractVirSchema virSchema : virSchemaDAO.findAll(attrUtil.virSchemaClass())) {\n-            if (attributable.getVirtualAttribute(virSchema.getName()) == null\n+\n+        List<? extends AbstractVirSchema> virSchemas;\n+        switch (attrUtil.getType()) {\n+            case ROLE:\n+                virSchemas = ((SyncopeRole) attributable).getAttrTemplateSchemas(RVirAttrTemplate.class);\n+                break;\n+\n+            case MEMBERSHIP:\n+                virSchemas = ((Membership) attributable).getSyncopeRole().\n+                        getAttrTemplateSchemas(MVirAttrTemplate.class);\n+                break;\n+\n+            case USER:\n+            default:\n+                virSchemas = virSchemaDAO.findAll(attrUtil.virSchemaClass());\n+        }\n+        for (AbstractVirSchema virSchema : virSchemas) {\n+            if (attributable.getVirAttr(virSchema.getName()) == null\n                     && !virSchema.isReadonly()\n                     && evaluateMandatoryCondition(attrUtil, attributable, virSchema.getName(),\n                     attrUtil.virIntMappingType())) {\n@@ -292,6 +374,67 @@ && evaluateMandatoryCondition(attrUtil, attributable, virSchema.getName(),\n         return reqValMissing;\n     }\n \n+    private void setAttrSchema(final AbstractAttributable attributable,\n+            final AbstractAttr attr, final AbstractNormalSchema schema) {\n+\n+        if (attr instanceof UAttr) {\n+            ((UAttr) attr).setSchema((USchema) schema);\n+        } else if (attr instanceof RAttr) {\n+            RAttrTemplate template = ((SyncopeRole) attributable).\n+                    getAttrTemplate(RAttrTemplate.class, schema.getName());\n+            if (template != null) {\n+                ((RAttr) attr).setTemplate(template);\n+            }\n+        } else if (attr instanceof MAttr) {\n+            MAttrTemplate template = ((Membership) attributable).getSyncopeRole().\n+                    getAttrTemplate(MAttrTemplate.class, schema.getName());\n+            if (template != null) {\n+                ((MAttr) attr).setTemplate(template);\n+            }\n+        }\n+    }\n+\n+    private void setDerAttrSchema(final AbstractAttributable attributable,\n+            final AbstractDerAttr derAttr, final AbstractDerSchema derSchema) {\n+\n+        if (derAttr instanceof UDerAttr) {\n+            ((UDerAttr) derAttr).setSchema((UDerSchema) derSchema);\n+        } else if (derAttr instanceof RDerAttr) {\n+            RDerAttrTemplate template = ((SyncopeRole) attributable).\n+                    getAttrTemplate(RDerAttrTemplate.class, derSchema.getName());\n+            if (template != null) {\n+                ((RDerAttr) derAttr).setTemplate(template);\n+            }\n+        } else if (derAttr instanceof MDerAttr) {\n+            MDerAttrTemplate template = ((Membership) attributable).getSyncopeRole().\n+                    getAttrTemplate(MDerAttrTemplate.class, derSchema.getName());\n+            if (template != null) {\n+                ((MDerAttr) derAttr).setTemplate(template);\n+            }\n+        }\n+    }\n+\n+    private void setVirAttrSchema(final AbstractAttributable attributable,\n+            final AbstractVirAttr virAttr, final AbstractVirSchema virSchema) {\n+\n+        if (virAttr instanceof UVirAttr) {\n+            ((UVirAttr) virAttr).setSchema((UVirSchema) virSchema);\n+        } else if (virAttr instanceof RVirAttr) {\n+            RVirAttrTemplate template = ((SyncopeRole) attributable).\n+                    getAttrTemplate(RVirAttrTemplate.class, virSchema.getName());\n+            if (template != null) {\n+                ((RVirAttr) virAttr).setTemplate(template);\n+            }\n+        } else if (virAttr instanceof MVirAttr) {\n+            MVirAttrTemplate template =\n+                    ((Membership) attributable).getSyncopeRole().\n+                    getAttrTemplate(MVirAttrTemplate.class, virSchema.getName());\n+            if (template != null) {\n+                ((MVirAttr) virAttr).setTemplate(template);\n+            }\n+        }\n+    }\n+\n     public PropagationByResource fillVirtual(final AbstractAttributable attributable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n             final AttributableUtil attrUtil) {\n@@ -300,13 +443,13 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n \n         // 1. virtual attributes to be removed\n         for (String vAttrToBeRemoved : vAttrsToBeRemoved) {\n-            AbstractVirSchema virSchema = getVirtualSchema(vAttrToBeRemoved, attrUtil.virSchemaClass());\n+            AbstractVirSchema virSchema = getVirSchema(vAttrToBeRemoved, attrUtil.virSchemaClass());\n             if (virSchema != null) {\n-                AbstractVirAttr virAttr = attributable.getVirtualAttribute(virSchema.getName());\n+                AbstractVirAttr virAttr = attributable.getVirAttr(virSchema.getName());\n                 if (virAttr == null) {\n                     LOG.debug(\"No virtual attribute found for schema {}\", virSchema.getName());\n                 } else {\n-                    attributable.removeVirtualAttribute(virAttr);\n+                    attributable.removeVirAttr(virAttr);\n                     virAttrDAO.delete(virAttr);\n                 }\n \n@@ -332,8 +475,22 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n \n         // 2. virtual attributes to be updated\n         for (AttributeMod vAttrToBeUpdated : vAttrsToBeUpdated) {\n-            AbstractVirSchema virSchema = getVirtualSchema(vAttrToBeUpdated.getSchema(), attrUtil.virSchemaClass());\n+            AbstractVirSchema virSchema = getVirSchema(vAttrToBeUpdated.getSchema(), attrUtil.virSchemaClass());\n+            AbstractVirAttr virAttr = null;\n             if (virSchema != null) {\n+                virAttr = attributable.getVirAttr(virSchema.getName());\n+                if (virAttr == null) {\n+                    virAttr = attrUtil.newVirAttr();\n+                    setVirAttrSchema(attributable, virAttr, virSchema);\n+                    if (virAttr.getSchema() == null) {\n+                        LOG.debug(\"Ignoring {} because no valid schema or template was found\", vAttrToBeUpdated);\n+                    } else {\n+                        attributable.addVirAttr(virAttr);\n+                    }\n+                }\n+            }\n+\n+            if (virSchema != null && virAttr != null && virAttr.getSchema() != null) {\n                 for (ExternalResource resource : resourceDAO.findAll()) {\n                     for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n                         if (virSchema.getName().equals(mapItem.getIntAttrName())\n@@ -345,13 +502,6 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                     }\n                 }\n \n-                AbstractVirAttr virAttr = attributable.getVirtualAttribute(virSchema.getName());\n-                if (virAttr == null) {\n-                    virAttr = attrUtil.newVirAttr();\n-                    virAttr.setVirtualSchema(virSchema);\n-                    attributable.addVirtualAttribute(virAttr);\n-                }\n-\n                 final List<String> values = new ArrayList<String>(virAttr.getValues());\n                 values.removeAll(vAttrToBeUpdated.getValuesToBeRemoved());\n                 values.addAll(vAttrToBeUpdated.getValuesToBeAdded());\n@@ -377,7 +527,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         SyncopeClientException invalidValues = new SyncopeClientException(SyncopeClientExceptionType.InvalidValues);\n \n         // 1. resources to be removed\n-        for (String resourceToBeRemoved : attributableMod.getResourcesToBeRemoved()) {\n+        for (String resourceToBeRemoved : attributableMod.getResourcesToRemove()) {\n             ExternalResource resource = getResource(resourceToBeRemoved);\n             if (resource != null) {\n                 propByRes.add(ResourceOperation.DELETE, resource.getName());\n@@ -388,7 +538,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Resources to be removed:\\n{}\", propByRes);\n \n         // 2. resources to be added\n-        for (String resourceToBeAdded : attributableMod.getResourcesToBeAdded()) {\n+        for (String resourceToBeAdded : attributableMod.getResourcesToAdd()) {\n             ExternalResource resource = getResource(resourceToBeAdded);\n             if (resource != null) {\n                 propByRes.add(ResourceOperation.CREATE, resource.getName());\n@@ -399,25 +549,25 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Resources to be added:\\n{}\", propByRes);\n \n         // 3. attributes to be removed\n-        for (String attributeToBeRemoved : attributableMod.getAttributesToBeRemoved()) {\n-            AbstractSchema schema = getSchema(attributeToBeRemoved, attrUtil.schemaClass());\n+        for (String attributeToBeRemoved : attributableMod.getAttrsToRemove()) {\n+            AbstractNormalSchema schema = getNormalSchema(attributeToBeRemoved, attrUtil.schemaClass());\n             if (schema != null) {\n-                AbstractAttr attribute = attributable.getAttribute(schema.getName());\n-                if (attribute == null) {\n+                AbstractAttr attr = attributable.getAttr(schema.getName());\n+                if (attr == null) {\n                     LOG.debug(\"No attribute found for schema {}\", schema);\n                 } else {\n                     String newValue = null;\n-                    for (AttributeMod mod : attributableMod.getAttributesToBeUpdated()) {\n+                    for (AttributeMod mod : attributableMod.getAttrsToUpdate()) {\n                         if (schema.getName().equals(mod.getSchema())) {\n                             newValue = mod.getValuesToBeAdded().get(0);\n                         }\n                     }\n \n                     if (!schema.isUniqueConstraint()\n-                            || (!attribute.getUniqueValue().getStringValue().equals(newValue))) {\n+                            || (!attr.getUniqueValue().getStringValue().equals(newValue))) {\n \n-                        attributable.removeAttribute(attribute);\n-                        attrDAO.delete(attribute.getId(), attrUtil.attrClass());\n+                        attributable.removeAttr(attr);\n+                        attrDAO.delete(attr.getId(), attrUtil.attrClass());\n                     }\n                 }\n \n@@ -429,11 +579,11 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n                             propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n-                            if (mapItem.isAccountid() && attribute != null\n-                                    && !attribute.getValuesAsStrings().isEmpty()) {\n+                            if (mapItem.isAccountid() && attr != null\n+                                    && !attr.getValuesAsStrings().isEmpty()) {\n \n                                 propByRes.addOldAccountId(resource.getName(),\n-                                        attribute.getValuesAsStrings().iterator().next());\n+                                        attr.getValuesAsStrings().iterator().next());\n                             }\n                         }\n                     }\n@@ -444,9 +594,24 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Attributes to be removed:\\n{}\", propByRes);\n \n         // 4. attributes to be updated\n-        for (AttributeMod attributeMod : attributableMod.getAttributesToBeUpdated()) {\n-            AbstractSchema schema = getSchema(attributeMod.getSchema(), attrUtil.schemaClass());\n+        for (AttributeMod attributeMod : attributableMod.getAttrsToUpdate()) {\n+            AbstractNormalSchema schema = getNormalSchema(attributeMod.getSchema(), attrUtil.schemaClass());\n+            AbstractAttr attr = null;\n             if (schema != null) {\n+                attr = attributable.getAttr(schema.getName());\n+                if (attr == null) {\n+                    attr = attrUtil.newAttr();\n+                    setAttrSchema(attributable, attr, schema);\n+                    if (attr.getSchema() == null) {\n+                        LOG.debug(\"Ignoring {} because no valid schema or template was found\", attributeMod);\n+                    } else {\n+                        attr.setOwner(attributable);\n+                        attributable.addAttr(attr);\n+                    }\n+                }\n+            }\n+\n+            if (schema != null && attr != null && attr.getSchema() != null) {\n                 for (ExternalResource resource : resourceDAO.findAll()) {\n                     for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n                         if (schema.getName().equals(mapItem.getIntAttrName())\n@@ -458,26 +623,18 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                     }\n                 }\n \n-                AbstractAttr attribute = attributable.getAttribute(schema.getName());\n-                if (attribute == null) {\n-                    attribute = attrUtil.newAttr();\n-                    attribute.setSchema(schema);\n-                    attribute.setOwner(attributable);\n-\n-                    attributable.addAttribute(attribute);\n-                }\n \n                 // 1.1 remove values\n                 Set<Long> valuesToBeRemoved = new HashSet<Long>();\n                 for (String valueToBeRemoved : attributeMod.getValuesToBeRemoved()) {\n-                    if (attribute.getSchema().isUniqueConstraint()) {\n-                        if (attribute.getUniqueValue() != null\n-                                && valueToBeRemoved.equals(attribute.getUniqueValue().getValueAsString())) {\n+                    if (attr.getSchema().isUniqueConstraint()) {\n+                        if (attr.getUniqueValue() != null\n+                                && valueToBeRemoved.equals(attr.getUniqueValue().getValueAsString())) {\n \n-                            valuesToBeRemoved.add(attribute.getUniqueValue().getId());\n+                            valuesToBeRemoved.add(attr.getUniqueValue().getId());\n                         }\n                     } else {\n-                        for (AbstractAttrValue mav : attribute.getValues()) {\n+                        for (AbstractAttrValue mav : attr.getValues()) {\n                             if (valueToBeRemoved.equals(mav.getValueAsString())) {\n                                 valuesToBeRemoved.add(mav.getId());\n                             }\n@@ -491,15 +648,15 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                 // 1.2 add values\n                 List<String> valuesToBeAdded = attributeMod.getValuesToBeAdded();\n                 if (valuesToBeAdded != null && !valuesToBeAdded.isEmpty()\n-                        && (!schema.isUniqueConstraint() || attribute.getUniqueValue() == null\n-                        || !valuesToBeAdded.iterator().next().equals(attribute.getUniqueValue().getValueAsString()))) {\n+                        && (!schema.isUniqueConstraint() || attr.getUniqueValue() == null\n+                        || !valuesToBeAdded.iterator().next().equals(attr.getUniqueValue().getValueAsString()))) {\n \n-                    fillAttribute(attributeMod.getValuesToBeAdded(), attrUtil, schema, attribute, invalidValues);\n+                    fillAttribute(attributeMod.getValuesToBeAdded(), attrUtil, schema, attr, invalidValues);\n                 }\n \n                 // if no values are in, the attribute can be safely removed\n-                if (attribute.getValuesAsStrings().isEmpty()) {\n-                    attrDAO.delete(attribute);\n+                if (attr.getValuesAsStrings().isEmpty()) {\n+                    attrDAO.delete(attr);\n                 }\n             }\n         }\n@@ -511,10 +668,10 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Attributes to be updated:\\n{}\", propByRes);\n \n         // 5. derived attributes to be removed\n-        for (String derAttrToBeRemoved : attributableMod.getDerivedAttributesToBeRemoved()) {\n-            AbstractDerSchema derSchema = getDerivedSchema(derAttrToBeRemoved, attrUtil.derSchemaClass());\n+        for (String derAttrToBeRemoved : attributableMod.getDerAttrsToRemove()) {\n+            AbstractDerSchema derSchema = getDerSchema(derAttrToBeRemoved, attrUtil.derSchemaClass());\n             if (derSchema != null) {\n-                AbstractDerAttr derAttr = attributable.getDerivedAttribute(derSchema.getName());\n+                AbstractDerAttr derAttr = attributable.getDerAttr(derSchema.getName());\n                 if (derAttr == null) {\n                     LOG.debug(\"No derived attribute found for schema {}\", derSchema.getName());\n                 } else {\n@@ -530,10 +687,10 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                             propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n                             if (mapItem.isAccountid() && derAttr != null\n-                                    && !derAttr.getValue(attributable.getAttributes()).isEmpty()) {\n+                                    && !derAttr.getValue(attributable.getAttrs()).isEmpty()) {\n \n                                 propByRes.addOldAccountId(resource.getName(),\n-                                        derAttr.getValue(attributable.getAttributes()));\n+                                        derAttr.getValue(attributable.getAttrs()));\n                             }\n                         }\n                     }\n@@ -544,8 +701,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Derived attributes to be removed:\\n{}\", propByRes);\n \n         // 6. derived attributes to be added\n-        for (String derAttrToBeAdded : attributableMod.getDerivedAttributesToBeAdded()) {\n-            AbstractDerSchema derSchema = getDerivedSchema(derAttrToBeAdded, attrUtil.derSchemaClass());\n+        for (String derAttrToBeAdded : attributableMod.getDerAttrsToAdd()) {\n+            AbstractDerSchema derSchema = getDerSchema(derAttrToBeAdded, attrUtil.derSchemaClass());\n             if (derSchema != null) {\n                 for (ExternalResource resource : resourceDAO.findAll()) {\n                     for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource, MappingPurpose.PROPAGATION)) {\n@@ -559,18 +716,22 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                 }\n \n                 AbstractDerAttr derAttr = attrUtil.newDerAttr();\n-                derAttr.setDerivedSchema(derSchema);\n-                derAttr.setOwner(attributable);\n-                attributable.addDerivedAttribute(derAttr);\n+                setDerAttrSchema(attributable, derAttr, derSchema);\n+                if (derAttr.getSchema() == null) {\n+                    LOG.debug(\"Ignoring {} because no valid schema or template was found\", derAttrToBeAdded);\n+                } else {\n+                    derAttr.setOwner(attributable);\n+                    attributable.addDerAttr(derAttr);\n+                }\n             }\n         }\n \n         LOG.debug(\"Derived attributes to be added:\\n{}\", propByRes);\n \n         // 7. virtual attributes: for users and roles this is delegated to PropagationManager\n         if (AttributableType.USER != attrUtil.getType() && AttributableType.ROLE != attrUtil.getType()) {\n-            fillVirtual(attributable, attributableMod.getVirtualAttributesToBeRemoved(),\n-                    attributableMod.getVirtualAttributesToBeUpdated(), attrUtil);\n+            fillVirtual(attributable, attributableMod.getVirAttrsToRemove(),\n+                    attributableMod.getVirAttrsToUpdate(), attrUtil);\n         }\n \n         // Finally, check if mandatory values are missing\n@@ -598,15 +759,19 @@ public void fillVirtual(final AbstractAttributable attributable, final List<Attr\n             final AttributableUtil attrUtil) {\n \n         for (AttributeTO attributeTO : vAttrs) {\n-            AbstractVirAttr virAttr = attributable.getVirtualAttribute(attributeTO.getSchema());\n+            AbstractVirAttr virAttr = attributable.getVirAttr(attributeTO.getSchema());\n             if (virAttr == null) {\n-                AbstractVirSchema virSchema = getVirtualSchema(attributeTO.getSchema(), attrUtil.virSchemaClass());\n+                AbstractVirSchema virSchema = getVirSchema(attributeTO.getSchema(), attrUtil.virSchemaClass());\n                 if (virSchema != null) {\n                     virAttr = attrUtil.newVirAttr();\n-                    virAttr.setVirtualSchema(virSchema);\n-                    virAttr.setOwner(attributable);\n-                    attributable.addVirtualAttribute(virAttr);\n-                    virAttr.setValues(attributeTO.getValues());\n+                    setVirAttrSchema(attributable, virAttr, virSchema);\n+                    if (virAttr.getSchema() == null) {\n+                        LOG.debug(\"Ignoring {} because no valid schema or template was found\", attributeTO);\n+                    } else {\n+                        virAttr.setOwner(attributable);\n+                        attributable.addVirAttr(virAttr);\n+                        virAttr.setValues(attributeTO.getValues());\n+                    }\n                 }\n             } else {\n                 virAttr.setValues(attributeTO.getValues());\n@@ -620,27 +785,26 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         // 1. attributes\n         SyncopeClientException invalidValues = new SyncopeClientException(SyncopeClientExceptionType.InvalidValues);\n \n-        AbstractSchema schema;\n-        AbstractAttr attribute;\n-\n         // Only consider attributeTO with values\n-        for (AttributeTO attributeTO : attributableTO.getAttributes()) {\n+        for (AttributeTO attributeTO : attributableTO.getAttrs()) {\n             if (attributeTO.getValues() != null && !attributeTO.getValues().isEmpty()) {\n-\n-                schema = getSchema(attributeTO.getSchema(), attributableUtil.schemaClass());\n+                AbstractNormalSchema schema = getNormalSchema(attributeTO.getSchema(), attributableUtil.schemaClass());\n \n                 if (schema != null) {\n-                    attribute = attributable.getAttribute(schema.getName());\n-                    if (attribute == null) {\n-                        attribute = attributableUtil.newAttr();\n-                        attribute.setSchema(schema);\n+                    AbstractAttr attr = attributable.getAttr(schema.getName());\n+                    if (attr == null) {\n+                        attr = attributableUtil.newAttr();\n+                        setAttrSchema(attributable, attr, schema);\n                     }\n+                    if (attr.getSchema() == null) {\n+                        LOG.debug(\"Ignoring {} because no valid schema or template was found\", attributeTO);\n+                    } else {\n+                        fillAttribute(attributeTO.getValues(), attributableUtil, schema, attr, invalidValues);\n \n-                    fillAttribute(attributeTO.getValues(), attributableUtil, schema, attribute, invalidValues);\n-\n-                    if (!attribute.getValuesAsStrings().isEmpty()) {\n-                        attributable.addAttribute(attribute);\n-                        attribute.setOwner(attributable);\n+                        if (!attr.getValuesAsStrings().isEmpty()) {\n+                            attributable.addAttr(attr);\n+                            attr.setOwner(attributable);\n+                        }\n                     }\n                 }\n             }\n@@ -651,42 +815,46 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n         }\n \n         // 2. derived attributes\n-        AbstractDerSchema derivedSchema;\n-        AbstractDerAttr derivedAttribute;\n-        for (AttributeTO attributeTO : attributableTO.getDerivedAttributes()) {\n+        for (AttributeTO attributeTO : attributableTO.getDerAttrs()) {\n+            AbstractDerSchema derSchema = getDerSchema(attributeTO.getSchema(), attributableUtil.derSchemaClass());\n \n-            derivedSchema = getDerivedSchema(attributeTO.getSchema(), attributableUtil.derSchemaClass());\n-\n-            if (derivedSchema != null) {\n-                derivedAttribute = attributableUtil.newDerAttr();\n-                derivedAttribute.setDerivedSchema(derivedSchema);\n-                derivedAttribute.setOwner(attributable);\n-                attributable.addDerivedAttribute(derivedAttribute);\n+            if (derSchema != null) {\n+                AbstractDerAttr derAttr = attributableUtil.newDerAttr();\n+                setDerAttrSchema(attributable, derAttr, derSchema);\n+                if (derAttr.getSchema() == null) {\n+                    LOG.debug(\"Ignoring {} because no valid schema or template was found\", attributeTO);\n+                } else {\n+                    derAttr.setOwner(attributable);\n+                    attributable.addDerAttr(derAttr);\n+                }\n             }\n         }\n \n         // 3. user and role virtual attributes will be evaluated by the propagation manager only (if needed).\n         if (AttributableType.USER == attributableUtil.getType()\n                 || AttributableType.ROLE == attributableUtil.getType()) {\n \n-            for (AttributeTO vattrTO : attributableTO.getVirtualAttributes()) {\n-                AbstractVirSchema uVirSchema = getVirtualSchema(vattrTO.getSchema(), attributableUtil.virSchemaClass());\n+            for (AttributeTO vattrTO : attributableTO.getVirAttrs()) {\n+                AbstractVirSchema virSchema = getVirSchema(vattrTO.getSchema(), attributableUtil.virSchemaClass());\n \n-                if (uVirSchema != null) {\n-                    AbstractVirAttr vattr = attributableUtil.newVirAttr();\n-                    vattr.setVirtualSchema(uVirSchema);\n-                    vattr.setOwner(attributable);\n-                    attributable.addVirtualAttribute(vattr);\n+                if (virSchema != null) {\n+                    AbstractVirAttr virAttr = attributableUtil.newVirAttr();\n+                    setVirAttrSchema(attributable, virAttr, virSchema);\n+                    if (virAttr.getSchema() == null) {\n+                        LOG.debug(\"Ignoring {} because no valid schema or template was found\", vattrTO);\n+                    } else {\n+                        virAttr.setOwner(attributable);\n+                        attributable.addVirAttr(virAttr);\n+                    }\n                 }\n             }\n         }\n \n-        fillVirtual(attributable, attributableTO.getVirtualAttributes(), attributableUtil);\n+        fillVirtual(attributable, attributableTO.getVirAttrs(), attributableUtil);\n \n         // 4. resources\n-        ExternalResource resource;\n         for (String resourceName : attributableTO.getResources()) {\n-            resource = getResource(resourceName);\n+            ExternalResource resource = getResource(resourceName);\n \n             if (resource != null) {\n                 attributable.addResource(resource);\n@@ -698,49 +866,48 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n             scce.addException(requiredValuesMissing);\n         }\n \n-        // Throw composite exception if there is at least one element set\n-        // in the composing exceptions\n+        // Throw composite exception if there is at least one element set in the composing exceptions\n         if (scce.hasExceptions()) {\n             throw scce;\n         }\n     }\n \n-    protected void fillTO(final AbstractAttributableTO abstractAttributableTO,\n-            final Collection<? extends AbstractAttr> attributes,\n-            final Collection<? extends AbstractDerAttr> derivedAttributes,\n-            final Collection<? extends AbstractVirAttr> virtualAttributes,\n+    protected void fillTO(final AbstractAttributableTO attributableTO,\n+            final Collection<? extends AbstractAttr> attrs,\n+            final Collection<? extends AbstractDerAttr> derAttrs,\n+            final Collection<? extends AbstractVirAttr> virAttrs,\n             final Collection<ExternalResource> resources) {\n \n         AttributeTO attributeTO;\n-        for (AbstractAttr attribute : attributes) {\n+        for (AbstractAttr attr : attrs) {\n             attributeTO = new AttributeTO();\n-            attributeTO.setSchema(attribute.getSchema().getName());\n-            attributeTO.getValues().addAll(attribute.getValuesAsStrings());\n-            attributeTO.setReadonly(attribute.getSchema().isReadonly());\n+            attributeTO.setSchema(attr.getSchema().getName());\n+            attributeTO.getValues().addAll(attr.getValuesAsStrings());\n+            attributeTO.setReadonly(attr.getSchema().isReadonly());\n \n-            abstractAttributableTO.getAttributes().add(attributeTO);\n+            attributableTO.getAttrs().add(attributeTO);\n         }\n \n-        for (AbstractDerAttr derivedAttribute : derivedAttributes) {\n+        for (AbstractDerAttr derAttr : derAttrs) {\n             attributeTO = new AttributeTO();\n-            attributeTO.setSchema(derivedAttribute.getDerivedSchema().getName());\n-            attributeTO.getValues().add(derivedAttribute.getValue(attributes));\n+            attributeTO.setSchema(derAttr.getSchema().getName());\n+            attributeTO.getValues().add(derAttr.getValue(attrs));\n             attributeTO.setReadonly(true);\n \n-            abstractAttributableTO.getDerivedAttributes().add(attributeTO);\n+            attributableTO.getDerAttrs().add(attributeTO);\n         }\n \n-        for (AbstractVirAttr virtualAttribute : virtualAttributes) {\n+        for (AbstractVirAttr virAttr : virAttrs) {\n             attributeTO = new AttributeTO();\n-            attributeTO.setSchema(virtualAttribute.getVirtualSchema().getName());\n-            attributeTO.getValues().addAll(virtualAttribute.getValues());\n-            attributeTO.setReadonly(virtualAttribute.getVirtualSchema().isReadonly());\n+            attributeTO.setSchema(virAttr.getSchema().getName());\n+            attributeTO.getValues().addAll(virAttr.getValues());\n+            attributeTO.setReadonly(virAttr.getSchema().isReadonly());\n \n-            abstractAttributableTO.getVirtualAttributes().add(attributeTO);\n+            attributableTO.getVirAttrs().add(attributeTO);\n         }\n \n         for (ExternalResource resource : resources) {\n-            abstractAttributableTO.getResources().add(resource.getName());\n+            attributableTO.getResources().add(resource.getName());\n         }\n     }\n }"},{"sha":"0577e7051caabd5729532d3ed0d598b44386c858","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_ACCOUNT;\n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_PASSWORD;\n-import static org.apache.syncope.common.types.PolicyType.GLOBAL_SYNC;\n import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n import org.apache.syncope.common.to.AbstractPolicyTO;"},{"sha":"fdbb02f4e6cb8561f8597d35c9fbc4f44c2d0eba","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":117,"deletions":20,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -31,14 +31,28 @@\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n+import org.apache.syncope.core.persistence.beans.membership.MSchema;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttr;\n+import org.apache.syncope.core.persistence.beans.role.RAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n+import org.apache.syncope.core.persistence.beans.role.RSchema;\n import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n@@ -104,12 +118,43 @@ public List<WorkflowResult<Long>> getUsersOnResourcesOnlyBecauseOfRole(final Lon\n         return result;\n     }\n \n+    private <T extends AbstractAttrTemplate<K>, K extends AbstractSchema> void setAttrTemplates(\n+            final SyncopeRole role, final List<String> schemaNames,\n+            final Class<T> templateClass, final Class<K> schemaClass) {\n+\n+        List<T> toRemove = new ArrayList<T>();\n+        for (T template : role.getAttrTemplates(templateClass)) {\n+            if (!schemaNames.contains(template.getSchema().getName())) {\n+                toRemove.add(template);\n+            }\n+        }\n+        role.getAttrTemplates(templateClass).removeAll(toRemove);\n+\n+        for (String schemaName : schemaNames) {\n+            if (role.getAttrTemplate(templateClass, schemaName) == null) {\n+                K schema = getSchema(schemaName, schemaClass);\n+                if (schema != null) {\n+                    try {\n+                        T template = templateClass.newInstance();\n+                        template.setSchema(schema);\n+                        template.setOwner(role);\n+                        role.getAttrTemplates(templateClass).add(template);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not create template for {}\", templateClass, e);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n     public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n         role.setInheritOwner(roleTO.isInheritOwner());\n \n-        role.setInheritAttributes(roleTO.isInheritAttributes());\n-        role.setInheritDerivedAttributes(roleTO.isInheritDerivedAttributes());\n-        role.setInheritVirtualAttributes(roleTO.isInheritVirtualAttributes());\n+        role.setInheritAttrs(roleTO.isInheritAttrs());\n+        role.setInheritDerAttrs(roleTO.isInheritDerAttrs());\n+        role.setInheritVirAttrs(roleTO.isInheritVirAttrs());\n+\n+        role.setInheritTemplates(roleTO.isInheritTemplates());\n \n         role.setInheritPasswordPolicy(roleTO.isInheritPasswordPolicy());\n         role.setInheritAccountPolicy(roleTO.isInheritAccountPolicy());\n@@ -147,13 +192,20 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n             invalidRoles.addElement(roleTO.getName());\n         }\n \n+        // attribute templates\n+        setAttrTemplates(role, roleTO.getRAttrTemplates(), RAttrTemplate.class, RSchema.class);\n+        setAttrTemplates(role, roleTO.getRDerAttrTemplates(), RDerAttrTemplate.class, RDerSchema.class);\n+        setAttrTemplates(role, roleTO.getRVirAttrTemplates(), RVirAttrTemplate.class, RVirSchema.class);\n+        setAttrTemplates(role, roleTO.getMAttrTemplates(), MAttrTemplate.class, MSchema.class);\n+        setAttrTemplates(role, roleTO.getMDerAttrTemplates(), MDerAttrTemplate.class, MDerSchema.class);\n+        setAttrTemplates(role, roleTO.getMVirAttrTemplates(), MVirAttrTemplate.class, MVirSchema.class);\n+\n         // attributes, derived attributes, virtual attributes and resources\n         fill(role, roleTO, AttributableUtil.getInstance(AttributableType.ROLE), scce);\n \n         // entitlements\n-        Entitlement entitlement;\n         for (String entitlementName : roleTO.getEntitlements()) {\n-            entitlement = entitlementDAO.find(entitlementName);\n+            Entitlement entitlement = entitlementDAO.find(entitlementName);\n             if (entitlement == null) {\n                 LOG.warn(\"Ignoring invalid entitlement {}\", entitlementName);\n             } else {\n@@ -224,14 +276,18 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n             role.setInheritOwner(roleMod.getInheritOwner());\n         }\n \n-        if (roleMod.getInheritAttributes() != null) {\n-            role.setInheritAttributes(roleMod.getInheritAttributes());\n+        if (roleMod.getInheritTemplates() != null) {\n+            role.setInheritTemplates(roleMod.getInheritTemplates());\n         }\n-        if (roleMod.getInheritDerivedAttributes() != null) {\n-            role.setInheritDerivedAttributes(roleMod.getInheritDerivedAttributes());\n+\n+        if (roleMod.getInheritAttrs() != null) {\n+            role.setInheritAttrs(roleMod.getInheritAttrs());\n+        }\n+        if (roleMod.getInheritDerAttrs() != null) {\n+            role.setInheritDerAttrs(roleMod.getInheritDerAttrs());\n         }\n-        if (roleMod.getInheritVirtualAttributes() != null) {\n-            role.setInheritVirtualAttributes(roleMod.getInheritVirtualAttributes());\n+        if (roleMod.getInheritVirAttrs() != null) {\n+            role.setInheritVirAttrs(roleMod.getInheritVirAttrs());\n         }\n \n         if (roleMod.getInheritPasswordPolicy() != null) {\n@@ -254,6 +310,26 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n             }\n         }\n \n+        // attribute templates\n+        if (roleMod.isModRAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getRAttrTemplates(), RAttrTemplate.class, RSchema.class);\n+        }\n+        if (roleMod.isModRDerAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getRDerAttrTemplates(), RDerAttrTemplate.class, RDerSchema.class);\n+        }\n+        if (roleMod.isModRVirAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getRVirAttrTemplates(), RVirAttrTemplate.class, RVirSchema.class);\n+        }\n+        if (roleMod.isModMAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getMAttrTemplates(), MAttrTemplate.class, MSchema.class);\n+        }\n+        if (roleMod.isModMDerAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getMDerAttrTemplates(), MDerAttrTemplate.class, MDerSchema.class);\n+        }\n+        if (roleMod.isModMVirAttrTemplates()) {\n+            setAttrTemplates(role, roleMod.getMVirAttrTemplates(), MVirAttrTemplate.class, MVirSchema.class);\n+        }\n+\n         // policies\n         if (roleMod.getPasswordPolicy() != null) {\n             role.setPasswordPolicy(roleMod.getPasswordPolicy().getId() == null\n@@ -302,9 +378,11 @@ public RoleTO getRoleTO(final SyncopeRole role) {\n \n         roleTO.setInheritOwner(role.isInheritOwner());\n \n-        roleTO.setInheritAttributes(role.isInheritAttributes());\n-        roleTO.setInheritDerivedAttributes(role.isInheritDerivedAttributes());\n-        roleTO.setInheritVirtualAttributes(role.isInheritVirtualAttributes());\n+        roleTO.setInheritTemplates(role.isInheritTemplates());\n+\n+        roleTO.setInheritAttrs(role.isInheritAttrs());\n+        roleTO.setInheritDerAttrs(role.isInheritDerAttrs());\n+        roleTO.setInheritVirAttrs(role.isInheritVirAttrs());\n \n         roleTO.setInheritPasswordPolicy(role.isInheritPasswordPolicy());\n         roleTO.setInheritAccountPolicy(role.isInheritAccountPolicy());\n@@ -323,14 +401,14 @@ public RoleTO getRoleTO(final SyncopeRole role) {\n         // -------------------------\n         // Retrieve all [derived/virtual] attributes (inherited and not)\n         // -------------------------\n-        final List<RAttr> allAttributes = role.findInheritedAttributes();\n-        allAttributes.addAll((List<RAttr>) role.getAttributes());\n+        final List<RAttr> allAttributes = role.findInheritedAttrs();\n+        allAttributes.addAll((List<RAttr>) role.getAttrs());\n \n-        final List<RDerAttr> allDerAttributes = role.findInheritedDerivedAttributes();\n-        allDerAttributes.addAll((List<RDerAttr>) role.getDerivedAttributes());\n+        final List<RDerAttr> allDerAttributes = role.findInheritedDerAttrs();\n+        allDerAttributes.addAll((List<RDerAttr>) role.getDerAttrs());\n \n-        final List<RVirAttr> allVirAttributes = role.findInheritedVirtualAttributes();\n-        allVirAttributes.addAll((List<RVirAttr>) role.getVirtualAttributes());\n+        final List<RVirAttr> allVirAttributes = role.findInheritedVirAttrs();\n+        allVirAttributes.addAll((List<RVirAttr>) role.getVirAttrs());\n         // -------------------------\n \n         fillTO(roleTO, allAttributes, allDerAttributes, allVirAttributes, role.getResources());\n@@ -339,6 +417,25 @@ public RoleTO getRoleTO(final SyncopeRole role) {\n             roleTO.getEntitlements().add(entitlement.getName());\n         }\n \n+        for (RAttrTemplate template : role.findInheritedTemplates(RAttrTemplate.class)) {\n+            roleTO.getRAttrTemplates().add(template.getSchema().getName());\n+        }\n+        for (RDerAttrTemplate template : role.findInheritedTemplates(RDerAttrTemplate.class)) {\n+            roleTO.getRDerAttrTemplates().add(template.getSchema().getName());\n+        }\n+        for (RVirAttrTemplate template : role.findInheritedTemplates(RVirAttrTemplate.class)) {\n+            roleTO.getRVirAttrTemplates().add(template.getSchema().getName());\n+        }\n+        for (MAttrTemplate template : role.findInheritedTemplates(MAttrTemplate.class)) {\n+            roleTO.getMAttrTemplates().add(template.getSchema().getName());\n+        }\n+        for (MDerAttrTemplate template : role.findInheritedTemplates(MDerAttrTemplate.class)) {\n+            roleTO.getMDerAttrTemplates().add(template.getSchema().getName());\n+        }\n+        for (MVirAttrTemplate template : role.findInheritedTemplates(MVirAttrTemplate.class)) {\n+            roleTO.getMVirAttrTemplates().add(template.getSchema().getName());\n+        }\n+\n         roleTO.setPasswordPolicy(role.getPasswordPolicy() == null\n                 ? null\n                 : role.getPasswordPolicy().getId());"},{"sha":"cac2a7e4b49aff80b2dc02aa5a2c9bf02c5f80f3","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -48,7 +48,7 @@ public class SchemaDataBinder {\n     private JexlUtil jexlUtil;\n \n     // --------------- NORMAL -----------------\n-    private <T extends AbstractSchema> void fill(final T schema, final SchemaTO schemaTO) {\n+    private <T extends AbstractNormalSchema> void fill(final T schema, final SchemaTO schemaTO) {\n         if (!jexlUtil.isExpressionValid(schemaTO.getMandatoryCondition())) {\n             SyncopeClientCompositeException scce =\n                     new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n@@ -64,17 +64,17 @@ private <T extends AbstractSchema> void fill(final T schema, final SchemaTO sche\n         BeanUtils.copyProperties(schemaTO, schema);\n     }\n \n-    public <T extends AbstractSchema> void create(final SchemaTO schemaTO, final T schema) {\n+    public <T extends AbstractNormalSchema> void create(final SchemaTO schemaTO, final T schema) {\n         fill(schema, schemaTO);\n     }\n \n-    public <T extends AbstractSchema> void update(final SchemaTO schemaTO, final T schema,\n+    public <T extends AbstractNormalSchema> void update(final SchemaTO schemaTO, final T schema,\n             final AttributableUtil attributableUtil) {\n \n         SyncopeClientCompositeException scce =\n                 new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n \n-        List<AbstractAttr> attrs = schemaDAO.getAttributes(schema, attributableUtil.attrClass());\n+        List<AbstractAttr> attrs = schemaDAO.findAttrs(schema, attributableUtil.attrClass());\n         if (!attrs.isEmpty()) {\n             if (schema.getType() != schemaTO.getType()) {\n                 SyncopeClientException e = new SyncopeClientException(SyncopeClientExceptionType.valueOf(\"Invalid\"\n@@ -99,7 +99,7 @@ public <T extends AbstractSchema> void update(final SchemaTO schemaTO, final T s\n         fill(schema, schemaTO);\n     }\n \n-    public <T extends AbstractSchema> SchemaTO getSchemaTO(final T schema, final AttributableUtil attributableUtil) {\n+    public <T extends AbstractNormalSchema> SchemaTO getSchemaTO(final T schema, final AttributableUtil attributableUtil) {\n         SchemaTO schemaTO = new SchemaTO();\n         BeanUtils.copyProperties(schema, schemaTO);\n "},{"sha":"d8cd1f83b15cf9197241f2ba9f64ad53fe0a6f91","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -82,12 +82,12 @@ public class TaskDataBinder {\n     private JexlUtil jexlUtil;\n \n     private void checkJexl(final AbstractAttributableTO attributableTO, final SyncopeClientException sce) {\n-        for (AttributeTO attrTO : attributableTO.getAttributes()) {\n+        for (AttributeTO attrTO : attributableTO.getAttrs()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n                 sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n-        for (AttributeTO attrTO : attributableTO.getVirtualAttributes()) {\n+        for (AttributeTO attrTO : attributableTO.getVirAttrs()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n                 sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }"},{"sha":"67a3cde75426ab0f801ee77b38c4d98a8afb046c","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -66,7 +66,7 @@\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n     private static final String[] IGNORE_USER_PROPERTIES = {\n-        \"memberships\", \"attributes\", \"derivedAttributes\", \"virtualAttributes\", \"resources\"};\n+        \"memberships\", \"attrs\", \"derAttrs\", \"virAttrs\", \"resources\"};\n \n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n@@ -272,15 +272,15 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n \n         // store the role ids of membership required to be added\n         Set<Long> membershipToBeAddedRoleIds = new HashSet<Long>();\n-        for (MembershipMod membToBeAdded : userMod.getMembershipsToBeAdded()) {\n+        for (MembershipMod membToBeAdded : userMod.getMembershipsToAdd()) {\n             membershipToBeAddedRoleIds.add(membToBeAdded.getRole());\n         }\n \n         final Set<String> toBeDeprovisioned = new HashSet<String>();\n         final Set<String> toBeProvisioned = new HashSet<String>();\n \n         // memberships to be removed\n-        for (Long membershipId : userMod.getMembershipsToBeRemoved()) {\n+        for (Long membershipId : userMod.getMembershipsToRemove()) {\n             LOG.debug(\"Membership to be removed: {}\", membershipId);\n \n             Membership membership = membershipDAO.find(membershipId);\n@@ -299,8 +299,8 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n                 membership = user.getMembership(membership.getSyncopeRole().getId());\n                 if (membershipToBeAddedRoleIds.contains(membership.getSyncopeRole().getId())) {\n \n-                    Set<Long> attributeIds = new HashSet<Long>(membership.getAttributes().size());\n-                    for (AbstractAttr attribute : membership.getAttributes()) {\n+                    Set<Long> attributeIds = new HashSet<Long>(membership.getAttrs().size());\n+                    for (AbstractAttr attribute : membership.getAttrs()) {\n                         attributeIds.add(attribute.getId());\n                     }\n                     for (Long attributeId : attributeIds) {\n@@ -309,7 +309,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n                     attributeIds.clear();\n \n                     // remove derived attributes\n-                    for (AbstractDerAttr derAttr : membership.getDerivedAttributes()) {\n+                    for (AbstractDerAttr derAttr : membership.getDerAttrs()) {\n \n                         attributeIds.add(derAttr.getId());\n                     }\n@@ -319,7 +319,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n                     attributeIds.clear();\n \n                     // remove virtual attributes\n-                    for (AbstractVirAttr virAttr : membership.getVirtualAttributes()) {\n+                    for (AbstractVirAttr virAttr : membership.getVirAttrs()) {\n                         attributeIds.add(virAttr.getId());\n                     }\n                     for (Long virAttrId : attributeIds) {\n@@ -335,7 +335,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n         }\n \n         // memberships to be added\n-        for (MembershipMod membershipMod : userMod.getMembershipsToBeAdded()) {\n+        for (MembershipMod membershipMod : userMod.getMembershipsToAdd()) {\n             LOG.debug(\"Membership to be added: role({})\", membershipMod.getRole());\n \n             SyncopeRole role = roleDAO.find(membershipMod.getRole());\n@@ -381,8 +381,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n \n         connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n \n-        fillTO(userTO, user.getAttributes(), user.getDerivedAttributes(), user.getVirtualAttributes(),\n-                user.getResources());\n+        fillTO(userTO, user.getAttrs(), user.getDerAttrs(), user.getVirAttrs(), user.getResources());\n \n         MembershipTO membershipTO;\n         for (Membership membership : user.getMemberships()) {\n@@ -398,8 +397,9 @@ public UserTO getUserTO(final SyncopeUser user) {\n             membershipTO.setRoleId(membership.getSyncopeRole().getId());\n             membershipTO.setRoleName(membership.getSyncopeRole().getName());\n \n-            fillTO(membershipTO, membership.getAttributes(), membership.getDerivedAttributes(), membership.\n-                    getVirtualAttributes(), membership.getResources());\n+            fillTO(membershipTO,\n+                    membership.getAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n+                    membership.getResources());\n \n             userTO.getMemberships().add(membershipTO);\n         }"},{"sha":"113cf93597bd15f0b868a72d6f9415cad95a4e01","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -152,7 +152,7 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n \n             MembershipMod membershipMod = new MembershipMod();\n             membershipMod.setRole(roleTO.getId());\n-            userMod.getMembershipsToBeAdded().add(membershipMod);\n+            userMod.getMembershipsToAdd().add(membershipMod);\n         }\n \n         return userMod;\n@@ -201,8 +201,8 @@ protected void userUpdate(final UserMod userMod, final String resourceName) {\n             WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n \n             List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n-                    userMod.getPassword(), userMod.getVirtualAttributesToBeRemoved(),\n-                    userMod.getVirtualAttributesToBeUpdated(),\n+                    userMod.getPassword(), userMod.getVirAttrsToRemove(),\n+                    userMod.getVirAttrsToUpdate(),\n                     Collections.singleton(resourceName));\n \n             taskExecutor.execute(tasks);\n@@ -242,7 +242,7 @@ protected void synchronizeMemberships(final SyncopeSyncResultHandler handler, fi\n         for (Map.Entry<Long, Long> member : membersBeforeRoleUpdate.entrySet()) {\n             UserMod userMod = new UserMod();\n             userMod.setId(member.getKey());\n-            userMod.getMembershipsToBeRemoved().add(member.getValue());\n+            userMod.getMembershipsToRemove().add(member.getValue());\n             userUpdate(userMod, resource.getName());\n         }\n     }"},{"sha":"338d9072f26716bcbc0bf69565c5bc06dfd77cb5","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -48,7 +48,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncPolicy;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n@@ -276,7 +276,7 @@ protected List<Long> findByAccountIdItem(final String uid, final AttributableUti\n             case RoleSchema:\n                 final AbstractAttrValue value = attrUtil.newAttrValue();\n \n-                AbstractSchema schema = schemaDAO.find(accountIdItem.getIntAttrName(), attrUtil.schemaClass());\n+                AbstractNormalSchema schema = schemaDAO.find(accountIdItem.getIntAttrName(), attrUtil.schemaClass());\n                 if (schema == null) {\n                     value.setStringValue(uid);\n                 } else {\n@@ -534,7 +534,7 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                             uwfAdapter.create((UserTO) subjectTO, true, enabled);\n \n                     List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(created,\n-                            ((UserTO) subjectTO).getPassword(), subjectTO.getVirtualAttributes(),\n+                            ((UserTO) subjectTO).getPassword(), subjectTO.getVirAttrs(),\n                             Collections.singleton(syncTask.getResource().getName()));\n \n                     taskExecutor.execute(tasks);\n@@ -548,15 +548,15 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                 }\n                 if (AttributableType.ROLE == attrUtil.getType()) {\n                     WorkflowResult<Long> created = rwfAdapter.create((RoleTO) subjectTO);\n-                    AttributeTO roleOwner = subjectTO.getAttributeMap().get(StringUtils.EMPTY);\n+                    AttributeTO roleOwner = subjectTO.getAttrMap().get(StringUtils.EMPTY);\n                     if (roleOwner != null) {\n                         roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n                     }\n \n                     EntitlementUtil.extendAuthContext(created.getResult());\n \n                     List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n-                            subjectTO.getVirtualAttributes(), Collections.singleton(syncTask.getResource().getName()));\n+                            subjectTO.getVirAttrs(), Collections.singleton(syncTask.getResource().getName()));\n \n                     taskExecutor.execute(tasks);\n \n@@ -632,8 +632,8 @@ protected UserTO updateUser(final Long id, SyncDelta delta, final boolean dryRun\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n                 userMod.getPassword(),\n-                userMod.getVirtualAttributesToBeRemoved(),\n-                userMod.getVirtualAttributesToBeUpdated(),\n+                userMod.getVirAttrsToRemove(),\n+                userMod.getVirAttrsToUpdate(),\n                 Collections.singleton(syncTask.getResource().getName()));\n \n         taskExecutor.execute(tasks);\n@@ -662,7 +662,7 @@ protected RoleTO updateRole(final Long id, SyncDelta delta, final boolean dryRun\n \n         WorkflowResult<Long> updated = rwfAdapter.update(roleMod);\n         String roleOwner = null;\n-        for (AttributeMod attrMod : roleMod.getAttributesToBeUpdated()) {\n+        for (AttributeMod attrMod : roleMod.getAttrsToUpdate()) {\n             if (attrMod.getSchema().isEmpty()) {\n                 roleOwner = attrMod.getValuesToBeAdded().iterator().next();\n             }\n@@ -672,8 +672,8 @@ protected RoleTO updateRole(final Long id, SyncDelta delta, final boolean dryRun\n         }\n \n         List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n-                roleMod.getVirtualAttributesToBeRemoved(),\n-                roleMod.getVirtualAttributesToBeUpdated(),\n+                roleMod.getVirAttrsToRemove(),\n+                roleMod.getVirAttrsToUpdate(),\n                 Collections.singleton(syncTask.getResource().getName()));\n \n         taskExecutor.execute(tasks);"},{"sha":"ca14b78a6d2a7c28cfa7893347d768147ed24844","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":64,"deletions":3,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -31,32 +31,39 @@\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.MAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MAttrUniqueValue;\n import org.apache.syncope.core.persistence.beans.membership.MAttrValue;\n import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n import org.apache.syncope.core.persistence.beans.membership.MVirAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttr;\n+import org.apache.syncope.core.persistence.beans.role.RAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RAttrUniqueValue;\n import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.role.RMappingItem;\n import org.apache.syncope.core.persistence.beans.role.RSchema;\n import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -322,7 +329,7 @@ public IntMappingType virIntMappingType() {\n         return result;\n     }\n \n-    public <T extends AbstractSchema> Class<T> schemaClass() {\n+    public <T extends AbstractNormalSchema> Class<T> schemaClass() {\n         Class result = null;\n \n         switch (type) {\n@@ -340,7 +347,7 @@ public <T extends AbstractSchema> Class<T> schemaClass() {\n         return result;\n     }\n \n-    public <T extends AbstractSchema> T newSchema() {\n+    public <T extends AbstractNormalSchema> T newSchema() {\n         T result = null;\n \n         switch (type) {\n@@ -414,6 +421,24 @@ public <T extends AbstractDerSchema> T newDerSchema() {\n         return result;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n+    public <T extends AbstractAttrTemplate> Class<T> attrTemplateClass() {\n+        Class result = null;\n+\n+        switch (type) {\n+            case USER:\n+                break;\n+            case ROLE:\n+                result = RAttrTemplate.class;\n+                break;\n+            case MEMBERSHIP:\n+                result = MAttrTemplate.class;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractAttr> Class<T> attrClass() {\n         Class result = null;\n \n@@ -450,6 +475,24 @@ public <T extends AbstractAttr> T newAttr() {\n         return result;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n+    public <T extends AbstractAttrTemplate> Class<T> derAttrTemplateClass() {\n+        Class result = null;\n+\n+        switch (type) {\n+            case USER:\n+                break;\n+            case ROLE:\n+                result = RDerAttrTemplate.class;\n+                break;\n+            case MEMBERSHIP:\n+                result = MDerAttrTemplate.class;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractDerAttr> Class<T> derAttrClass() {\n         Class result = null;\n \n@@ -468,6 +511,24 @@ public <T extends AbstractDerAttr> Class<T> derAttrClass() {\n         return result;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n+    public <T extends AbstractAttrTemplate> Class<T> virAttrTemplateClass() {\n+        Class result = null;\n+\n+        switch (type) {\n+            case USER:\n+                break;\n+            case ROLE:\n+                result = RVirAttrTemplate.class;\n+                break;\n+            case MEMBERSHIP:\n+                result = MVirAttrTemplate.class;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractVirAttr> Class<T> virAttrClass() {\n         Class result = null;\n "},{"sha":"ecb862cd174c9b0f58914bf7c90c8470f662ca79","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Set;\n import java.util.regex.Pattern;\n+import org.apache.syncope.common.SyncopeConstants;\n \n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.slf4j.Logger;\n@@ -44,7 +45,8 @@ public final class EntitlementUtil {\n     private static final Logger LOG = LoggerFactory.getLogger(EntitlementUtil.class);\n \n     public static String getAuthenticatedUsername() {\n-        return SecurityContextHolder.getContext().getAuthentication().getName();\n+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+        return authentication == null ? SyncopeConstants.ANONYMOUS_USER : authentication.getName();\n     }\n \n     public static Set<String> getOwnedEntitlementNames() {\n@@ -108,7 +110,7 @@ public static Set<Long> getRoleIds(final List<Entitlement> entitlements) {\n \n     /**\n      * Extend the current authentication context to include the given role.\n-     * \n+     *\n      * @param roleId role id\n      */\n     public static void extendAuthContext(final Long roleId) {"},{"sha":"1577f46703c45db00d8ffaeaddf054ac2c23329e","filename":"core/src/main/java/org/apache/syncope/core/util/JexlUtil.java","status":"modified","additions":29,"deletions":23,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -137,22 +137,24 @@ public JexlContext addFieldsToContext(final Object attributable, final JexlConte\n         return context;\n     }\n \n-    public JexlContext addAttrsToContext(final Collection<? extends AbstractAttr> attributes,\n+    public JexlContext addAttrsToContext(final Collection<? extends AbstractAttr> attrs,\n             final JexlContext jexlContext) {\n \n         JexlContext context = jexlContext == null\n                 ? new MapContext()\n                 : jexlContext;\n \n-        for (AbstractAttr attr : attributes) {\n-            List<String> attributeValues = attr.getValuesAsStrings();\n-            String expressionValue = attributeValues.isEmpty()\n-                    ? \"\"\n-                    : attributeValues.get(0);\n+        for (AbstractAttr attr : attrs) {\n+            if (attr.getSchema() != null) {\n+                List<String> attrValues = attr.getValuesAsStrings();\n+                String expressionValue = attrValues.isEmpty()\n+                        ? \"\"\n+                        : attrValues.get(0);\n \n-            LOG.debug(\"Add attribute {} with value {}\", attr.getSchema().getName(), expressionValue);\n+                LOG.debug(\"Add attribute {} with value {}\", attr.getSchema().getName(), expressionValue);\n \n-            context.set(attr.getSchema().getName(), expressionValue);\n+                context.set(attr.getSchema().getName(), expressionValue);\n+            }\n         }\n \n         return context;\n@@ -166,14 +168,16 @@ public JexlContext addDerAttrsToContext(final Collection<? extends AbstractDerAt\n                 : jexlContext;\n \n         for (AbstractDerAttr derAttr : derAttrs) {\n-            String expressionValue = derAttr.getValue(attrs);\n-            if (expressionValue == null) {\n-                expressionValue = \"\";\n-            }\n+            if (derAttr.getSchema() != null) {\n+                String expressionValue = derAttr.getValue(attrs);\n+                if (expressionValue == null) {\n+                    expressionValue = \"\";\n+                }\n \n-            LOG.debug(\"Add derived attribute {} with value {}\", derAttr.getDerivedSchema().getName(), expressionValue);\n+                LOG.debug(\"Add derived attribute {} with value {}\", derAttr.getSchema().getName(), expressionValue);\n \n-            context.set(derAttr.getDerivedSchema().getName(), expressionValue);\n+                context.set(derAttr.getSchema().getName(), expressionValue);\n+            }\n         }\n \n         return context;\n@@ -187,14 +191,16 @@ public JexlContext addVirAttrsToContext(final Collection<? extends AbstractVirAt\n                 : jexlContext;\n \n         for (AbstractVirAttr virAttr : virAttrs) {\n-            List<String> attributeValues = virAttr.getValues();\n-            String expressionValue = attributeValues.isEmpty()\n-                    ? \"\"\n-                    : attributeValues.get(0);\n+            if (virAttr.getSchema() != null) {\n+                List<String> attrValues = virAttr.getValues();\n+                String expressionValue = attrValues.isEmpty()\n+                        ? \"\"\n+                        : attrValues.get(0);\n \n-            LOG.debug(\"Add virtual attribute {} with value {}\", virAttr.getVirtualSchema().getName(), expressionValue);\n+                LOG.debug(\"Add virtual attribute {} with value {}\", virAttr.getSchema().getName(), expressionValue);\n \n-            context.set(virAttr.getVirtualSchema().getName(), expressionValue);\n+                context.set(virAttr.getSchema().getName(), expressionValue);\n+            }\n         }\n \n         return context;\n@@ -205,7 +211,7 @@ public String evaluate(final String expression, final AbstractAttributableTO att\n \n         addFieldsToContext(attributableTO, context);\n \n-        for (AttributeTO attr : attributableTO.getAttributes()) {\n+        for (AttributeTO attr : attributableTO.getAttrs()) {\n             List<String> values = attr.getValues();\n             String expressionValue = values.isEmpty()\n                     ? \"\"\n@@ -215,7 +221,7 @@ public String evaluate(final String expression, final AbstractAttributableTO att\n \n             context.set(attr.getSchema(), expressionValue);\n         }\n-        for (AttributeTO derAttr : attributableTO.getDerivedAttributes()) {\n+        for (AttributeTO derAttr : attributableTO.getDerAttrs()) {\n             List<String> values = derAttr.getValues();\n             String expressionValue = values.isEmpty()\n                     ? \"\"\n@@ -225,7 +231,7 @@ public String evaluate(final String expression, final AbstractAttributableTO att\n \n             context.set(derAttr.getSchema(), expressionValue);\n         }\n-        for (AttributeTO virAttr : attributableTO.getVirtualAttributes()) {\n+        for (AttributeTO virAttr : attributableTO.getVirAttrs()) {\n             List<String> values = virAttr.getValues();\n             String expressionValue = values.isEmpty()\n                     ? \"\""},{"sha":"5e3bcabc75cd81b08f701e38712ec1edeed67a21","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n@@ -162,7 +162,7 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n         final List<AbstractAttrValue> values = MappingUtil.getIntValues(resource, mapItem, attributables,\n                 vAttrsToBeRemoved, vAttrsToBeUpdated);\n \n-        AbstractSchema schema = null;\n+        AbstractNormalSchema schema = null;\n         AttributeSchemaType schemaType;\n         switch (mapItem.getIntMappingType()) {\n             case UserSchema:\n@@ -271,8 +271,8 @@ public static <T extends AbstractAttributable> Name evaluateNAME(final T subject\n \n             final JexlContext jexlContext = new MapContext();\n             jexlUtil.addFieldsToContext(subject, jexlContext);\n-            jexlUtil.addAttrsToContext(subject.getAttributes(), jexlContext);\n-            jexlUtil.addDerAttrsToContext(subject.getDerivedAttributes(), subject.getAttributes(), jexlContext);\n+            jexlUtil.addAttrsToContext(subject.getAttrs(), jexlContext);\n+            jexlUtil.addDerAttrsToContext(subject.getDerAttrs(), subject.getAttrs(), jexlContext);\n             evalAccountLink = jexlUtil.evaluate(attrUtil.getAccountLink(resource), jexlContext);\n         }\n \n@@ -331,7 +331,7 @@ public static List<AbstractAttrValue> getIntValues(final ExternalResource resour\n             case RoleSchema:\n             case MembershipSchema:\n                 for (AbstractAttributable attributable : attributables) {\n-                    final AbstractAttr attr = attributable.getAttribute(mappingItem.getIntAttrName());\n+                    final AbstractAttr attr = attributable.getAttr(mappingItem.getIntAttrName());\n                     if (attr != null) {\n                         if (attr.getUniqueValue() != null) {\n                             values.add(attr.getUniqueValue());\n@@ -353,7 +353,7 @@ public static List<AbstractAttrValue> getIntValues(final ExternalResource resour\n             case RoleVirtualSchema:\n             case MembershipVirtualSchema:\n                 for (AbstractAttributable attributable : attributables) {\n-                    AbstractVirAttr virAttr = attributable.getVirtualAttribute(mappingItem.getIntAttrName());\n+                    AbstractVirAttr virAttr = attributable.getVirAttr(mappingItem.getIntAttrName());\n                     if (virAttr != null) {\n                         if (virAttr.getValues() != null) {\n                             for (String value : virAttr.getValues()) {\n@@ -387,11 +387,11 @@ public static List<AbstractAttrValue> getIntValues(final ExternalResource resour\n             case RoleDerivedSchema:\n             case MembershipDerivedSchema:\n                 for (AbstractAttributable attributable : attributables) {\n-                    AbstractDerAttr derAttr = attributable.getDerivedAttribute(mappingItem.getIntAttrName());\n+                    AbstractDerAttr derAttr = attributable.getDerAttr(mappingItem.getIntAttrName());\n                     if (derAttr != null) {\n                         attrValue = (attributable instanceof SyncopeRole)\n                                 ? new RAttrValue() : new UAttrValue();\n-                        attrValue.setStringValue(derAttr.getValue(attributable.getAttributes()));\n+                        attrValue.setStringValue(derAttr.getValue(attributable.getAttrs()));\n                         values.add(attrValue);\n                     }\n "},{"sha":"1ead312854485d0aeeae5ce0141517d65e29b8d6","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -21,57 +21,6 @@ under the License.\n <properties>\n   <comment>Additional indexes (in respect to JPA's)</comment>\n \n-  <!-- These indexes are not needed by OpenJPA, only by Hibernate\n-  <entry key=\"roleNameIndex\">CREATE INDEX roleNameIndex ON SyncopeRole(name)</entry>\n-  <entry key=\"ConnInstance_capabilities_Index_1\">CREATE INDEX ConnInstance_ca_Index_1 ON ConnInstance_capabilities(ConnInstance_id)</entry>    \n-  <entry key=\"ExternalResource_Index_2\">CREATE INDEX ExternalResourc_Index_2 ON ExternalResource(connector_id)</entry>\n-  <entry key=\"ExternalResource_Index_3\">CREATE INDEX ExternalResourc_Index_3 ON ExternalResource(accountPolicy_id)</entry>\n-  <entry key=\"ExternalResource_Index_4\">CREATE INDEX ExternalResourc_Index_4 ON ExternalResource(passwordPolicy_id)</entry>\n-  <entry key=\"ExternalResource_Index_5\">CREATE INDEX ExternalResourc_Index_5 ON ExternalResource(syncPolicy_id)</entry>\n-  <entry key=\"MAttr_Index_6\">CREATE INDEX MAttr_Index_6 ON MAttr(schema_name)</entry>\n-  <entry key=\"MAttr_Index_7\">CREATE INDEX MAttr_Index_7 ON MAttr(owner_id)</entry>\n-  <entry key=\"MAttrUniqueValue_Index_9\">CREATE INDEX MAttrUniqueValu_Index_9 ON MAttrUniqueValue(schema_name)</entry>\n-  <entry key=\"MAttrValue_Index_10\">CREATE INDEX MAttrValue_Index_10 ON MAttrValue(attribute_id)</entry>\n-  <entry key=\"MDerAttr_Index_11\">CREATE INDEX MDerAttr_Index_11 ON MDerAttr(derivedSchema_name)</entry>\n-  <entry key=\"MDerAttr_Index_12\">CREATE INDEX MDerAttr_Index_12 ON MDerAttr(owner_id)</entry>\n-  <entry key=\"MVirAttr_Index_13\">CREATE INDEX MVirAttr_Index_13 ON MVirAttr(virtualSchema_name)</entry>\n-  <entry key=\"MVirAttr_Index_14\">CREATE INDEX MVirAttr_Index_14 ON MVirAttr(owner_id)</entry>\n-  <entry key=\"Membership_Index_15\">CREATE INDEX Membership_Index_15 ON Membership(syncopeUser_id)</entry>\n-  <entry key=\"Membership_Index_16\">CREATE INDEX Membership_Index_16 ON Membership(syncopeRole_id)</entry>\n-  <entry key=\"NotificationTask_recipients_Index_19\">CREATE INDEX NotificationTas_Index_19 ON NotificationTask_recipients(NotificationTask_id)</entry>\n-  <entry key=\"Notification_events_Index_20\">CREATE INDEX Notification_ev_Index_20 ON Notification_events(Notification_id)</entry>\n-  <entry key=\"RAttr_Index_21\">CREATE INDEX RAttr_Index_21 ON RAttr(schema_name)</entry>\n-  <entry key=\"RAttr_Index_22\">CREATE INDEX RAttr_Index_22 ON RAttr(owner_id)</entry>\n-  <entry key=\"RAttrUniqueValue_Index_24\">CREATE INDEX RAttrUniqueValu_Index_24 ON RAttrUniqueValue(schema_name)</entry>\n-  <entry key=\"RAttrValue_Index_25\">CREATE INDEX RAttrValue_Index_25 ON RAttrValue(attribute_id)</entry>\n-  <entry key=\"RDerAttr_Index_26\">CREATE INDEX RDerAttr_Index_26 ON RDerAttr(derivedSchema_name)</entry>\n-  <entry key=\"RDerAttr_Index_27\">CREATE INDEX RDerAttr_Index_27 ON RDerAttr(owner_id)</entry>\n-  <entry key=\"RVirAttr_Index_28\">CREATE INDEX RVirAttr_Index_28 ON RVirAttr(virtualSchema_name)</entry>\n-  <entry key=\"RVirAttr_Index_29\">CREATE INDEX RVirAttr_Index_29 ON RVirAttr(owner_id)</entry>\n-  <entry key=\"SchemaMapping_Index_30\">CREATE INDEX SchemaMapping_Index_30 ON SchemaMapping(resource_name)</entry>\n-  <entry key=\"SyncopeRole_Index_31\">CREATE INDEX SyncopeRole_Index_31 ON SyncopeRole(accountPolicy_id)</entry>\n-  <entry key=\"SyncopeRole_Index_32\">CREATE INDEX SyncopeRole_Index_32 ON SyncopeRole(passwordPolicy_id)</entry>\n-  <entry key=\"SyncopeRole_Index_33\">CREATE INDEX SyncopeRole_Index_33 ON SyncopeRole(parent_id)</entry>\n-  <entry key=\"SyncopeRole_Entitlement_Index_34\">CREATE INDEX SyncopeRole_Ent_Index_34 ON SyncopeRole_Entitlement(entitlement_name)</entry>\n-  <entry key=\"SyncopeRole_Entitlement_Index_35\">CREATE INDEX SyncopeRole_Ent_Index_35 ON SyncopeRole_Entitlement(role_id)</entry>\n-  <entry key=\"SyncopeRole_ExternalResource_Index_36\">CREATE INDEX SyncopeRole_Ext_Index_36 ON SyncopeRole_ExternalResource(resource_name)</entry>\n-  <entry key=\"SyncopeRole_ExternalResource_Index_37\">CREATE INDEX SyncopeRole_Ext_Index_37 ON SyncopeRole_ExternalResource(role_id)</entry>\n-  <entry key=\"SyncopeUser_ExternalResource_Index_38\">CREATE INDEX SyncopeUser_Ext_Index_38 ON SyncopeUser_ExternalResource(resource_name)</entry>\n-  <entry key=\"SyncopeUser_ExternalResource_Index_39\">CREATE INDEX SyncopeUser_Ext_Index_39 ON SyncopeUser_ExternalResource(user_id)</entry>\n-  <entry key=\"SyncopeUser_passwordHistory_Index_40\">CREATE INDEX SyncopeUser_pas_Index_40 ON SyncopeUser_passwordHistory(SyncopeUser_id)</entry>\n-  <entry key=\"Task_Index_41\">CREATE INDEX Task_Index_41 ON Task(syncopeUser_id)</entry>\n-  <entry key=\"Task_Index_42\">CREATE INDEX Task_Index_42 ON Task(resource_name)</entry>\n-  <entry key=\"TaskExec_Index_43\">CREATE INDEX TaskExec_Index_43 ON TaskExec(task_id)</entry>\n-  <entry key=\"UAttr_Index_44\">CREATE INDEX UAttr_Index_44 ON UAttr(schema_name)</entry>\n-  <entry key=\"UAttr_Index_45\">CREATE INDEX UAttr_Index_45 ON UAttr(owner_id)</entry>\n-  <entry key=\"UAttrUniqueValue_Index_47\">CREATE INDEX UAttrUniqueValu_Index_47 ON UAttrUniqueValue(schema_name)</entry>\n-  <entry key=\"UAttrValue_Index_48\">CREATE INDEX UAttrValue_Index_48 ON UAttrValue(attribute_id)</entry>\n-  <entry key=\"UDerAttr_Index_49\">CREATE INDEX UDerAttr_Index_49 ON UDerAttr(derivedSchema_name)</entry>\n-  <entry key=\"UDerAttr_Index_50\">CREATE INDEX UDerAttr_Index_50 ON UDerAttr(owner_id)</entry>\n-  <entry key=\"UVirAttr_Index_51\">CREATE INDEX UVirAttr_Index_51 ON UVirAttr(virtualSchema_name)</entry>\n-  <entry key=\"UVirAttr_Index_52\">CREATE INDEX UVirAttr_Index_52 ON UVirAttr(owner_id)</entry>\n-  -->\n-\n   <entry key=\"UAttrValue_stringvalueIndex\">CREATE INDEX UAttrValue_stringvalueIndex ON UAttrValue(stringvalue)</entry>\n   <entry key=\"UAttrValue_datevalueIndex\">CREATE INDEX UAttrValue_datevalueIndex ON UAttrValue(datevalue)</entry>\n   <entry key=\"UAttrValue_longvalueIndex\">CREATE INDEX UAttrValue_longvalueIndex ON UAttrValue(longvalue)</entry>"},{"sha":"5ad93bcc15eca78907d56c90197845eb357c1e93","filename":"core/src/main/resources/views.xml","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -94,27 +94,29 @@ under the License.\n     CREATE VIEW role_search_unique_attr AS\n \n     SELECT ra.owner_id AS subject_id,\n-    ra.schema_name AS schema_name,\n+    rat.schema_name AS schema_name,\n     rav.booleanvalue AS booleanvalue,\n     rav.datevalue AS datevalue,\n     rav.doublevalue AS doublevalue,\n     rav.longvalue AS longvalue,\n     rav.stringvalue AS stringvalue\n-    FROM RAttrUniqueValue rav, RAttr ra\n+    FROM RAttrUniqueValue rav, RAttr ra, RAttrTemplate rat\n     WHERE rav.attribute_id = ra.id\n+    AND ra.template_id = rat.id\n   </entry>\n   <entry key=\"role_search_attr\">\n     CREATE VIEW role_search_attr AS\n \n     SELECT ra.owner_id AS subject_id,\n-    ra.schema_name AS schema_name,\n+    rat.schema_name AS schema_name,\n     rav.booleanvalue AS booleanvalue,\n     rav.datevalue AS datevalue,\n     rav.doublevalue AS doublevalue,\n     rav.longvalue AS longvalue,\n     rav.stringvalue AS stringvalue\n-    FROM RAttrValue rav, RAttr ra\n+    FROM RAttrValue rav, RAttr ra, RAttrTemplate rat\n     WHERE rav.attribute_id = ra.id\n+    AND ra.template_id = rat.id\n   </entry>\n   <entry key=\"role_search_null_attr\">\n     CREATE VIEW role_search_null_attr AS\n@@ -127,7 +129,8 @@ under the License.\n     NULL AS longvalue,\n     NULL AS stringvalue\n     FROM SyncopeRole r CROSS JOIN RSchema\n-    LEFT OUTER JOIN RAttr ra ON (RSchema.name = ra.schema_name AND ra.owner_id = r.id)\n+    LEFT OUTER JOIN RAttr ra ON (ra.owner_id = r.id)\n+    LEFT OUTER JOIN RAttrTemplate rat ON (RSchema.name = rat.schema_name AND ra.template_id = rat.id)\n     WHERE ra.id IS NULL\n   </entry>\n   <entry key=\"role_search_resource\">"},{"sha":"bce4cbd67b6b5e5a5a0853cf05d7432a4eb0696e","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AttrTest.java","status":"modified","additions":9,"deletions":30,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n-\n-import java.util.List;\n+import static org.junit.Assert.fail;\n \n import javax.validation.ValidationException;\n \n@@ -51,12 +49,6 @@ public class AttrTest extends AbstractDAOTest {\n     @Autowired\n     private SchemaDAO userSchemaDAO;\n \n-    @Test\n-    public void findAll() {\n-        List<UAttr> list = attrDAO.findAll(UAttr.class);\n-        assertEquals(\"did not get expected number of attributes \", 28, list.size());\n-    }\n-\n     @Test\n     public void findById() {\n         UAttr attribute = attrDAO.find(100L, UAttr.class);\n@@ -101,18 +93,6 @@ public void save() throws ClassNotFoundException {\n             thrown = e;\n         }\n         assertNotNull(\"validation exception expected here \", thrown);\n-\n-        InvalidEntityException iee = null;\n-        try {\n-            attribute = attrDAO.save(attribute);\n-        } catch (InvalidEntityException e) {\n-            iee = e;\n-        }\n-        assertNull(iee);\n-\n-        UAttr actual = attrDAO.find(attribute.getId(), UAttr.class);\n-        assertNotNull(\"expected save to work\", actual);\n-        assertEquals(attribute, actual);\n     }\n \n     @Test\n@@ -127,7 +107,7 @@ public void checkForEnumType() throws ClassNotFoundException {\n         UAttr attribute = new UAttr();\n         attribute.setSchema(gender);\n         attribute.setOwner(user);\n-        user.addAttribute(attribute);\n+        user.addAttr(attribute);\n \n         Exception thrown = null;\n \n@@ -142,21 +122,17 @@ public void checkForEnumType() throws ClassNotFoundException {\n \n         InvalidEntityException iee = null;\n         try {\n-            attribute = attrDAO.save(attribute);\n+            user = userDAO.save(user);\n         } catch (InvalidEntityException e) {\n             iee = e;\n         }\n         assertNull(iee);\n-\n-        UAttr actual = attrDAO.find(attribute.getId(), UAttr.class);\n-        assertNotNull(\"expected save to work\", actual);\n-        assertEquals(attribute, actual);\n-        assertEquals(actual.getSchema(), gender);\n-        assertEquals(actual.getValues().size(), 1);\n     }\n \n     @Test\n     public void validateAndSave() {\n+        SyncopeUser user = userDAO.find(1L);\n+\n         final USchema emailSchema = userSchemaDAO.find(\"email\", USchema.class);\n         assertNotNull(emailSchema);\n \n@@ -173,9 +149,12 @@ public void validateAndSave() {\n \n         attribute.setUniqueValue(uauv);\n \n+        user.addAttr(attribute);\n+\n         InvalidEntityException iee = null;\n         try {\n-            attrDAO.save(attribute);\n+            userDAO.save(user);\n+            fail();\n         } catch (InvalidEntityException e) {\n             iee = e;\n         }"},{"sha":"d72f56ec7188e7af44422bbbc368a8d5347140c9","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/DerAttrTest.java","status":"modified","additions":48,"deletions":43,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -28,10 +28,12 @@\n \n import org.apache.syncope.core.persistence.beans.membership.MAttrValue;\n import org.apache.syncope.core.persistence.beans.membership.MDerAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MDerAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n import org.apache.syncope.core.persistence.beans.role.RDerAttr;\n+import org.apache.syncope.core.persistence.beans.role.RDerAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -73,8 +75,7 @@ public void findById() {\n     }\n \n     @Test\n-    public void saveUDerAttribute()\n-            throws ClassNotFoundException {\n+    public void saveUDerAttribute() {\n         UDerSchema cnSchema = derSchemaDAO.find(\"cn\", UDerSchema.class);\n         assertNotNull(cnSchema);\n \n@@ -83,75 +84,69 @@ public void saveUDerAttribute()\n \n         UDerAttr derivedAttribute = new UDerAttr();\n         derivedAttribute.setOwner(owner);\n-        derivedAttribute.setDerivedSchema(cnSchema);\n+        derivedAttribute.setSchema(cnSchema);\n \n         derivedAttribute = derAttrDAO.save(derivedAttribute);\n \n         UDerAttr actual = derAttrDAO.find(derivedAttribute.getId(), UDerAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n         assertEquals(derivedAttribute, actual);\n \n-        UAttrValue firstnameAttribute = (UAttrValue) owner.getAttribute(\"firstname\").getValues().iterator().next();\n-        UAttrValue surnameAttribute = (UAttrValue) owner.getAttribute(\"surname\").getValues().iterator().next();\n+        UAttrValue firstnameAttribute = (UAttrValue) owner.getAttr(\"firstname\").getValues().iterator().next();\n+        UAttrValue surnameAttribute = (UAttrValue) owner.getAttr(\"surname\").getValues().iterator().next();\n \n         assertEquals(surnameAttribute.getValue() + \", \" + firstnameAttribute.getValue(), derivedAttribute\n-                .getValue(owner.getAttributes()));\n+                .getValue(owner.getAttrs()));\n     }\n \n     @Test\n-    public void saveMDerAttribute()\n-            throws ClassNotFoundException {\n-        MDerSchema deriveddata = derSchemaDAO.find(\"mderiveddata\", MDerSchema.class);\n-        assertNotNull(deriveddata);\n-\n+    public void saveMDerAttribute() {\n         Membership owner = membershipDAO.find(1L);\n         assertNotNull(\"did not get expected user\", owner);\n \n-        MDerAttr derivedAttribute = new MDerAttr();\n-        derivedAttribute.setOwner(owner);\n-        derivedAttribute.setDerivedSchema(deriveddata);\n+        MDerAttr derAttr = new MDerAttr();\n+        derAttr.setOwner(owner);\n+        derAttr.setTemplate(owner.getSyncopeRole().getAttrTemplate(MDerAttrTemplate.class, \"mderiveddata\"));\n \n-        derivedAttribute = derAttrDAO.save(derivedAttribute);\n+        derAttr = derAttrDAO.save(derAttr);\n+        assertNotNull(derAttr.getTemplate());\n \n-        MDerAttr actual = derAttrDAO.find(derivedAttribute.getId(), MDerAttr.class);\n+        MDerAttr actual = derAttrDAO.find(derAttr.getId(), MDerAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(derivedAttribute, actual);\n+        assertEquals(derAttr, actual);\n \n-        MAttrValue sx = (MAttrValue) owner.getAttribute(\"mderived_sx\").getValues().iterator().next();\n-        MAttrValue dx = (MAttrValue) owner.getAttribute(\"mderived_dx\").getValues().iterator().next();\n+        MAttrValue sx = (MAttrValue) owner.getAttr(\"mderived_sx\").getValues().iterator().next();\n+        MAttrValue dx = (MAttrValue) owner.getAttr(\"mderived_dx\").getValues().iterator().next();\n \n-        assertEquals(sx.getValue() + \"-\" + dx.getValue(), derivedAttribute.getValue(owner.getAttributes()));\n+        assertEquals(sx.getValue() + \"-\" + dx.getValue(), derAttr.getValue(owner.getAttrs()));\n     }\n \n     @Test\n-    public void saveRDerAttribute()\n-            throws ClassNotFoundException {\n-        RDerSchema deriveddata = derSchemaDAO.find(\"rderiveddata\", RDerSchema.class);\n-        assertNotNull(deriveddata);\n-\n+    public void saveRDerAttribute() {\n         SyncopeRole owner = roleDAO.find(1L);\n         assertNotNull(\"did not get expected user\", owner);\n \n-        RDerAttr derivedAttribute = new RDerAttr();\n-        derivedAttribute.setOwner(owner);\n-        derivedAttribute.setDerivedSchema(deriveddata);\n+        RDerAttr derAttr = new RDerAttr();\n+        derAttr.setOwner(owner);\n+        derAttr.setTemplate(owner.getAttrTemplate(RDerAttrTemplate.class, \"rderiveddata\"));\n \n-        derivedAttribute = derAttrDAO.save(derivedAttribute);\n+        derAttr = derAttrDAO.save(derAttr);\n+        assertNotNull(derAttr.getTemplate());\n \n-        RDerAttr actual = derAttrDAO.find(derivedAttribute.getId(), RDerAttr.class);\n+        RDerAttr actual = derAttrDAO.find(derAttr.getId(), RDerAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(derivedAttribute, actual);\n+        assertEquals(derAttr, actual);\n \n-        RAttrValue sx = (RAttrValue) owner.getAttribute(\"rderived_sx\").getValues().iterator().next();\n-        RAttrValue dx = (RAttrValue) owner.getAttribute(\"rderived_dx\").getValues().iterator().next();\n+        RAttrValue sx = (RAttrValue) owner.getAttr(\"rderived_sx\").getValues().iterator().next();\n+        RAttrValue dx = (RAttrValue) owner.getAttr(\"rderived_dx\").getValues().iterator().next();\n \n-        assertEquals(sx.getValue() + \"-\" + dx.getValue(), derivedAttribute.getValue(owner.getAttributes()));\n+        assertEquals(sx.getValue() + \"-\" + dx.getValue(), derAttr.getValue(owner.getAttrs()));\n     }\n \n     @Test\n     public void delete() {\n         UDerAttr attribute = derAttrDAO.find(100L, UDerAttr.class);\n-        String attributeSchemaName = attribute.getDerivedSchema().getName();\n+        String attributeSchemaName = attribute.getSchema().getName();\n \n         derAttrDAO.delete(attribute.getId(), UDerAttr.class);\n \n@@ -180,15 +175,15 @@ public void issueSYNCOPE134User() {\n \n         UDerAttr derAttr = new UDerAttr();\n         derAttr.setOwner(owner);\n-        derAttr.setDerivedSchema(sderived);\n+        derAttr.setSchema(sderived);\n \n         derAttr = derAttrDAO.save(derAttr);\n         derAttrDAO.flush();\n \n         derAttr = derAttrDAO.find(derAttr.getId(), UDerAttr.class);\n         assertNotNull(\"expected save to work\", derAttr);\n \n-        String value = derAttr.getValue(owner.getAttributes());\n+        String value = derAttr.getValue(owner.getAttrs());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n         assertTrue(value.startsWith(\"active - vivaldi - 2010-10-20\"));\n@@ -209,19 +204,24 @@ public void issueSYNCOPE134Role() {\n         assertEquals(sderived, actual);\n \n         SyncopeRole owner = roleDAO.find(7L);\n-        assertNotNull(\"did not get expected user\", owner);\n+        assertNotNull(\"did not get expected role\", owner);\n+\n+        RDerAttrTemplate template = new RDerAttrTemplate();\n+        template.setSchema(sderived);\n+        owner.getAttrTemplates(RDerAttrTemplate.class).add(template);\n \n         RDerAttr derAttr = new RDerAttr();\n         derAttr.setOwner(owner);\n-        derAttr.setDerivedSchema(sderived);\n+        derAttr.setTemplate(owner.getAttrTemplate(RDerAttrTemplate.class, sderived.getName()));\n \n         derAttr = derAttrDAO.save(derAttr);\n+        assertNotNull(derAttr.getTemplate());\n         derAttrDAO.flush();\n \n         derAttr = derAttrDAO.find(derAttr.getId(), RDerAttr.class);\n         assertNotNull(\"expected save to work\", derAttr);\n \n-        String value = derAttr.getValue(owner.getAttributes());\n+        String value = derAttr.getValue(owner.getAttrs());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n         assertTrue(value.startsWith(\"managingDirector\"));\n@@ -241,19 +241,24 @@ public void issueSYNCOPE134Memb() {\n         assertEquals(sderived, actual);\n \n         Membership owner = membershipDAO.find(4L);\n-        assertNotNull(\"did not get expected user\", owner);\n+        assertNotNull(\"did not get expected membership\", owner);\n+\n+        MDerAttrTemplate template = new MDerAttrTemplate();\n+        template.setSchema(sderived);\n+        owner.getSyncopeRole().getAttrTemplates(MDerAttrTemplate.class).add(template);\n \n         MDerAttr derAttr = new MDerAttr();\n         derAttr.setOwner(owner);\n-        derAttr.setDerivedSchema(sderived);\n+        derAttr.setTemplate(owner.getSyncopeRole().getAttrTemplate(MDerAttrTemplate.class, sderived.getName()));\n \n         derAttr = derAttrDAO.save(derAttr);\n+        assertNotNull(derAttr.getTemplate());\n         derAttrDAO.flush();\n \n         derAttr = derAttrDAO.find(derAttr.getId(), MDerAttr.class);\n         assertNotNull(\"expected save to work\", derAttr);\n \n-        String value = derAttr.getValue(owner.getAttributes());\n+        String value = derAttr.getValue(owner.getAttrs());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n         assertTrue(value.equalsIgnoreCase(\"4\"));"},{"sha":"fcc9dc8ed508665239fe16c4792d77b5984a0a2d","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/DerSchemaTest.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -28,6 +28,8 @@\n \n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n+import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.user.UDerSchema;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -68,11 +70,22 @@ public void save() {\n \n     @Test\n     public void delete() {\n-        UDerSchema attributeSchema = derSchemaDAO.find(\"cn\", UDerSchema.class);\n+        UDerSchema cn = derSchemaDAO.find(\"cn\", UDerSchema.class);\n+        assertNotNull(cn);\n+\n+        derSchemaDAO.delete(cn.getName(), AttributableUtil.getInstance(AttributableType.USER));\n+\n+        AbstractDerSchema actual = derSchemaDAO.find(\"cn\", UDerSchema.class);\n+        assertNull(\"delete did not work\", actual);\n+\n+        // ------------- //\n+\n+        RDerSchema rderiveddata = derSchemaDAO.find(\"rderiveddata\", RDerSchema.class);\n+        assertNotNull(rderiveddata);\n \n-        derSchemaDAO.delete(attributeSchema.getName(), AttributableUtil.getInstance(AttributableType.USER));\n+        derSchemaDAO.delete(rderiveddata.getName(), AttributableUtil.getInstance(AttributableType.ROLE));\n \n-        UDerSchema actual = derSchemaDAO.find(\"cn\", UDerSchema.class);\n+        actual = derSchemaDAO.find(\"rderiveddata\", RDerSchema.class);\n         assertNull(\"delete did not work\", actual);\n     }\n "},{"sha":"c12e0edfbac87f189f599b80f43ed9c4e9e4974c","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/RoleTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -63,21 +63,21 @@ public void find() {\n     public void inheritedAttributes() {\n         SyncopeRole director = roleDAO.find(7L);\n \n-        assertEquals(1, director.findInheritedAttributes().size());\n+        assertEquals(1, director.findInheritedAttrs().size());\n     }\n \n     @Test\n     public void inheritedDerivedAttributes() {\n         SyncopeRole director = roleDAO.find(7L);\n \n-        assertEquals(1, director.findInheritedDerivedAttributes().size());\n+        assertEquals(1, director.findInheritedDerAttrs().size());\n     }\n \n     @Test\n     public void inheritedVirtualAttributes() {\n         SyncopeRole director = roleDAO.find(7L);\n \n-        assertEquals(1, director.findInheritedVirtualAttributes().size());\n+        assertEquals(1, director.findInheritedVirAttrs().size());\n     }\n \n     @Test"},{"sha":"9f4ff5179b57c65f4a52753cfbb226dffccb7437","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SchemaTest.java","status":"modified","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -26,11 +26,12 @@\n import static org.junit.Assert.fail;\n \n import java.util.List;\n+import org.apache.syncope.common.SyncopeConstants;\n \n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.EntityViolationType;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.role.RAttr;\n import org.apache.syncope.core.persistence.beans.role.RSchema;\n import org.apache.syncope.core.persistence.beans.user.USchema;\n@@ -57,51 +58,50 @@ public void findAll() {\n \n     @Test\n     public void findByName() {\n-        USchema attributeSchema = schemaDAO.find(\"fullname\", USchema.class);\n-        assertNotNull(\"did not find expected attribute schema\", attributeSchema);\n+        USchema schema = schemaDAO.find(\"fullname\", USchema.class);\n+        assertNotNull(\"did not find expected attribute schema\", schema);\n     }\n \n     @Test\n-    public void getAttributes() {\n+    public void findAttrs() {\n         List<RSchema> schemas = schemaDAO.findAll(RSchema.class);\n         assertNotNull(schemas);\n         assertFalse(schemas.isEmpty());\n \n-        List<RAttr> attrs;\n         for (RSchema schema : schemas) {\n-            attrs = schemaDAO.getAttributes(schema, RAttr.class);\n+            List<RAttr> attrs = schemaDAO.findAttrs(schema, RAttr.class);\n             assertNotNull(attrs);\n             assertFalse(attrs.isEmpty());\n         }\n     }\n \n     @Test\n     public void save() {\n-        USchema attributeSchema = new USchema();\n-        attributeSchema.setName(\"secondaryEmail\");\n-        attributeSchema.setType(AttributeSchemaType.String);\n-        attributeSchema.setValidatorClass(\"org.apache.syncope.core.validation.EmailAddressValidator\");\n-        attributeSchema.setMandatoryCondition(\"false\");\n-        attributeSchema.setMultivalue(true);\n+        USchema schema = new USchema();\n+        schema.setName(\"secondaryEmail\");\n+        schema.setType(AttributeSchemaType.String);\n+        schema.setValidatorClass(\"org.apache.syncope.core.validation.EmailAddressValidator\");\n+        schema.setMandatoryCondition(\"false\");\n+        schema.setMultivalue(true);\n \n-        schemaDAO.save(attributeSchema);\n+        schemaDAO.save(schema);\n \n         USchema actual = schemaDAO.find(\"secondaryEmail\", USchema.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(attributeSchema, actual);\n+        assertEquals(schema, actual);\n     }\n \n     @Test(expected = InvalidEntityException.class)\n     public void saveNonValid() {\n-        USchema attributeSchema = new USchema();\n-        attributeSchema.setName(\"secondaryEmail\");\n-        attributeSchema.setType(AttributeSchemaType.String);\n-        attributeSchema.setValidatorClass(\"org.apache.syncope.core.validation.EmailAddressValidator\");\n-        attributeSchema.setMandatoryCondition(\"false\");\n-        attributeSchema.setMultivalue(true);\n-        attributeSchema.setUniqueConstraint(true);\n-\n-        schemaDAO.save(attributeSchema);\n+        USchema schema = new USchema();\n+        schema.setName(\"secondaryEmail\");\n+        schema.setType(AttributeSchemaType.String);\n+        schema.setValidatorClass(\"org.apache.syncope.core.validation.EmailAddressValidator\");\n+        schema.setMandatoryCondition(\"false\");\n+        schema.setMultivalue(true);\n+        schema.setUniqueConstraint(true);\n+\n+        schemaDAO.save(schema);\n     }\n \n     @Test\n@@ -118,8 +118,8 @@ public void checkForEnumType() {\n         }\n         assertNotNull(ex);\n \n-        schema.setEnumerationValues(\"red\" + AbstractSchema.enumValuesSeparator + \"yellow\");\n-        schema.setEnumerationKeys(\"1\" + AbstractSchema.enumValuesSeparator + \"2\");\n+        schema.setEnumerationValues(\"red\" + SyncopeConstants.ENUM_VALUES_SEPARATOR + \"yellow\");\n+        schema.setEnumerationKeys(\"1\" + SyncopeConstants.ENUM_VALUES_SEPARATOR + \"2\");\n \n         schemaDAO.save(schema);\n \n@@ -138,9 +138,9 @@ public void saveInvalidSchema() {\n \n     @Test\n     public void delete() {\n-        USchema schema = schemaDAO.find(\"fullname\", USchema.class);\n+        USchema fullnam = schemaDAO.find(\"fullname\", USchema.class);\n \n-        schemaDAO.delete(schema.getName(), AttributableUtil.getInstance(AttributableType.USER));\n+        schemaDAO.delete(fullnam.getName(), AttributableUtil.getInstance(AttributableType.USER));\n \n         USchema actual = schemaDAO.find(\"fullname\", USchema.class);\n         assertNull(\"delete did not work\", actual);"},{"sha":"7b7b3579c349ef06fa9af09263f10aebe542e345","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirAttrTest.java","status":"modified","additions":28,"deletions":34,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -25,10 +25,10 @@\n import java.util.List;\n \n import org.apache.syncope.core.persistence.beans.membership.MVirAttr;\n-import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n+import org.apache.syncope.core.persistence.beans.membership.MVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.RVirAttr;\n-import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n+import org.apache.syncope.core.persistence.beans.role.RVirAttrTemplate;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UVirAttr;\n@@ -68,68 +68,62 @@ public void findById() {\n     }\n \n     @Test\n-    public void saveUVirAttribute() throws ClassNotFoundException {\n-        UVirSchema virtualSchema = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n-        assertNotNull(virtualSchema);\n+    public void saveUVirAttribute() {\n+        UVirSchema virSchema = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n+        assertNotNull(virSchema);\n \n         SyncopeUser owner = userDAO.find(3L);\n         assertNotNull(\"did not get expected user\", owner);\n \n-        UVirAttr virtualAttribute = new UVirAttr();\n-        virtualAttribute.setOwner(owner);\n-        virtualAttribute.setVirtualSchema(virtualSchema);\n+        UVirAttr virAttr = new UVirAttr();\n+        virAttr.setOwner(owner);\n+        virAttr.setSchema(virSchema);\n \n-        virtualAttribute = virAttrDAO.save(virtualAttribute);\n+        virAttr = virAttrDAO.save(virAttr);\n \n-        UVirAttr actual = virAttrDAO.find(virtualAttribute.getId(), UVirAttr.class);\n+        UVirAttr actual = virAttrDAO.find(virAttr.getId(), UVirAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(virtualAttribute, actual);\n+        assertEquals(virAttr, actual);\n     }\n \n     @Test\n-    public void saveMVirAttribute() throws ClassNotFoundException {\n-\n-        MVirSchema virtualSchema = new MVirSchema();\n-        virtualSchema.setName(\"mvirtualdata\");\n-\n+    public void saveMVirAttribute() {\n         Membership owner = membershipDAO.find(3L);\n         assertNotNull(\"did not get expected membership\", owner);\n \n-        MVirAttr virtualAttribute = new MVirAttr();\n-        virtualAttribute.setOwner(owner);\n-        virtualAttribute.setVirtualSchema(virtualSchema);\n+        MVirAttr virAttr = new MVirAttr();\n+        virAttr.setOwner(owner);\n+        virAttr.setTemplate(owner.getSyncopeRole().getAttrTemplate(MVirAttrTemplate.class, \"mvirtualdata\"));\n \n-        virtualAttribute = virAttrDAO.save(virtualAttribute);\n+        virAttr = virAttrDAO.save(virAttr);\n+        assertNotNull(virAttr.getTemplate());\n \n-        MVirAttr actual = virAttrDAO.find(virtualAttribute.getId(), MVirAttr.class);\n+        MVirAttr actual = virAttrDAO.find(virAttr.getId(), MVirAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(virtualAttribute, actual);\n+        assertEquals(virAttr, actual);\n     }\n \n     @Test\n-    public void saveRVirAttribute() throws ClassNotFoundException {\n-\n-        RVirSchema virtualSchema = new RVirSchema();\n-        virtualSchema.setName(\"rvirtualdata\");\n-\n+    public void saveRVirAttribute() {\n         SyncopeRole owner = roleDAO.find(3L);\n         assertNotNull(\"did not get expected membership\", owner);\n \n-        RVirAttr virtualAttribute = new RVirAttr();\n-        virtualAttribute.setOwner(owner);\n-        virtualAttribute.setVirtualSchema(virtualSchema);\n+        RVirAttr virAttr = new RVirAttr();\n+        virAttr.setOwner(owner);\n+        virAttr.setTemplate(owner.getAttrTemplate(RVirAttrTemplate.class, \"rvirtualdata\"));\n \n-        virtualAttribute = virAttrDAO.save(virtualAttribute);\n+        virAttr = virAttrDAO.save(virAttr);\n+        assertNotNull(virAttr.getTemplate());\n \n-        RVirAttr actual = virAttrDAO.find(virtualAttribute.getId(), RVirAttr.class);\n+        RVirAttr actual = virAttrDAO.find(virAttr.getId(), RVirAttr.class);\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(virtualAttribute, actual);\n+        assertEquals(virAttr, actual);\n     }\n \n     @Test\n     public void delete() {\n         UVirAttr attribute = virAttrDAO.find(1000L, UVirAttr.class);\n-        String attributeSchemaName = attribute.getVirtualSchema().getName();\n+        String attributeSchemaName = attribute.getSchema().getName();\n \n         virAttrDAO.delete(attribute.getId(), UVirAttr.class);\n "},{"sha":"737d5895a9ef66f881eba634539f364b6aab3478","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirSchemaTest.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -27,6 +27,8 @@\n import java.util.List;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n+import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -67,11 +69,21 @@ public void save() {\n \n     @Test\n     public void delete() {\n-        UVirSchema attributeSchema = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n+        UVirSchema virtualdata = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n+\n+        virSchemaDAO.delete(virtualdata.getName(), AttributableUtil.getInstance(AttributableType.USER));\n+\n+        AbstractVirSchema actual = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n+        assertNull(\"delete did not work\", actual);\n+\n+        // ------------- //\n+\n+        RVirSchema rvirtualdata = virSchemaDAO.find(\"rvirtualdata\", RVirSchema.class);\n+        assertNotNull(rvirtualdata);\n \n-        virSchemaDAO.delete(attributeSchema.getName(), AttributableUtil.getInstance(AttributableType.USER));\n+        virSchemaDAO.delete(rvirtualdata.getName(), AttributableUtil.getInstance(AttributableType.ROLE));\n \n-        UVirSchema actual = virSchemaDAO.find(\"virtualdata\", UVirSchema.class);\n+        actual = virSchemaDAO.find(\"rvirtualdata\", RVirSchema.class);\n         assertNull(\"delete did not work\", actual);\n     }\n "},{"sha":"57a2535789fa7c69cd85d27f4a83d1ed32da2482","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/AttrTest.java","status":"modified","additions":45,"deletions":15,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -24,12 +24,15 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.membership.MAttr;\n+import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n+import org.apache.syncope.core.persistence.beans.role.RAttrTemplate;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttr;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n@@ -41,6 +44,7 @@\n import org.apache.syncope.core.persistence.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.MembershipDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -69,6 +73,9 @@ public class AttrTest extends AbstractDAOTest {\n     @Autowired\n     private MembershipDAO membershipDAO;\n \n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Autowired\n     private UserDAO userDAO;\n \n@@ -99,32 +106,37 @@ public void deleteAttributeValue() {\n \n     @Test\n     public void checkForEnumType() {\n+        SyncopeUser user = userDAO.find(1L);\n+        Membership membership = user.getMembership(1L);\n+        assertNotNull(membership);\n+\n         MSchema schema = new MSchema();\n         schema.setType(AttributeSchemaType.Enum);\n         schema.setName(\"color\");\n-        schema.setEnumerationValues(\"red\" + AbstractSchema.enumValuesSeparator + \"yellow\");\n+        schema.setEnumerationValues(\"red\" + SyncopeConstants.ENUM_VALUES_SEPARATOR + \"yellow\");\n \n         MSchema actualSchema = schemaDAO.save(schema);\n         assertNotNull(actualSchema);\n \n-        Membership membership = membershipDAO.find(1L);\n-        assertNotNull(membership);\n+        MAttrTemplate template = new MAttrTemplate();\n+        template.setSchema(actualSchema);\n+        membership.getSyncopeRole().getAttrTemplates(MAttrTemplate.class).add(template);\n \n-        MAttr attribute = new MAttr();\n-        attribute.setSchema(actualSchema);\n-        attribute.setOwner(membership);\n-        attribute.addValue(\"yellow\", AttributableUtil.getInstance(AttributableType.MEMBERSHIP));\n-        membership.addAttribute(attribute);\n+        MAttr attr = new MAttr();\n+        attr.setTemplate(template);\n+        attr.setOwner(membership);\n+        attr.addValue(\"yellow\", AttributableUtil.getInstance(AttributableType.MEMBERSHIP));\n+        membership.addAttr(attr);\n \n-        MAttr actualAttribute = attrDAO.save(attribute);\n+        MAttr actualAttribute = userDAO.save(user).getMembership(1L).getAttr(\"color\");\n         assertNotNull(actualAttribute);\n \n         membership = membershipDAO.find(1L);\n         assertNotNull(membership);\n-        assertNotNull(membership.getAttribute(schema.getName()));\n-        assertNotNull(membership.getAttribute(schema.getName()).getValues());\n+        assertNotNull(membership.getAttr(schema.getName()));\n+        assertNotNull(membership.getAttr(schema.getName()).getValues());\n \n-        assertEquals(membership.getAttribute(schema.getName()).getValues().size(), 1);\n+        assertEquals(membership.getAttr(schema.getName()).getValues().size(), 1);\n     }\n \n     @Test\n@@ -145,18 +157,36 @@ public void derAttrFromSpecialAttrs() {\n \n         UDerAttr derAttr = new UDerAttr();\n         derAttr.setOwner(owner);\n-        derAttr.setDerivedSchema(sderived);\n+        derAttr.setSchema(sderived);\n \n         derAttr = derAttrDAO.save(derAttr);\n         derAttrDAO.flush();\n \n         derAttr = derAttrDAO.find(derAttr.getId(), UDerAttr.class);\n         assertNotNull(\"expected save to work\", derAttr);\n \n-        String value = derAttr.getValue(owner.getAttributes());\n+        String value = derAttr.getValue(owner.getAttrs());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n         assertTrue(value.startsWith(\"vivaldi - 2010-10-20\"));\n         assertTrue(value.endsWith(\"[0]\"));\n     }\n+\n+    @Test\n+    public void unmatchedRoleAttr() {\n+        SyncopeRole role = roleDAO.find(1L);\n+        assertNotNull(role);\n+\n+        assertNotNull(role.getAttrTemplate(RAttrTemplate.class, \"icon\"));\n+        assertNotNull(role.getAttr(\"icon\"));\n+\n+        assertTrue(role.getAttrTemplates(RAttrTemplate.class).\n+                remove(role.getAttrTemplate(RAttrTemplate.class, \"icon\")));\n+\n+        role = roleDAO.save(role);\n+        roleDAO.flush();\n+\n+        assertNull(role.getAttrTemplate(RAttrTemplate.class, \"icon\"));\n+        assertNull(role.getAttr(\"icon\"));\n+    }\n }"},{"sha":"76f4c4922b4b97d49f268851e095506f8f079d54","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/DerSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FDerSchemaTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -54,6 +54,6 @@ public void test() {\n \n         assertNull(derSchemaDAO.find(schema.getName(), UDerSchema.class));\n         assertNull(derAttrDAO.find(100L, UDerAttr.class));\n-        assertNull(userDAO.find(3L).getDerivedAttribute(schema.getName()));\n+        assertNull(userDAO.find(3L).getDerAttr(schema.getName()));\n     }\n }"},{"sha":"a4279a10d9aa2d816690fd29bcd518e90bd7252e","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/SchemaTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -112,8 +112,8 @@ public void deleteFullname() {\n \n         assertNull(attrDAO.find(100L, UAttr.class));\n         assertNull(attrDAO.find(300L, UAttr.class));\n-        assertNull(userDAO.find(1L).getAttribute(\"fullname\"));\n-        assertNull(userDAO.find(3L).getAttribute(\"fullname\"));\n+        assertNull(userDAO.find(1L).getAttr(\"fullname\"));\n+        assertNull(userDAO.find(3L).getAttr(\"fullname\"));\n     }\n \n     @Test"},{"sha":"f8a52c4ab201004880a116d4bb8eef2e04027d2f","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -99,7 +99,7 @@ public void testUserSchemaAuthorization() {\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n         testAttributeTO.getValues().add(\"a value\");\n-        membershipTO.getAttributes().add(testAttributeTO);\n+        membershipTO.getAttrs().add(testAttributeTO);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n@@ -140,7 +140,7 @@ public void testUserRead() {\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n         testAttributeTO.getValues().add(\"a value\");\n-        membershipTO.getAttributes().add(testAttributeTO);\n+        membershipTO.getAttrs().add(testAttributeTO);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n@@ -174,7 +174,7 @@ public void testUserSearch() throws InvalidSearchConditionException {\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n         testAttributeTO.getValues().add(\"a value\");\n-        membershipTO.getAttributes().add(testAttributeTO);\n+        membershipTO.getAttrs().add(testAttributeTO);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n@@ -220,7 +220,7 @@ public void checkFailedLogins() {\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n         testAttributeTO.getValues().add(\"a value\");\n-        membershipTO.getAttributes().add(testAttributeTO);\n+        membershipTO.getAttrs().add(testAttributeTO);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n@@ -253,7 +253,7 @@ public void checkUserSuspension() {\n         AttributeTO testAttributeTO = new AttributeTO();\n         testAttributeTO.setSchema(\"testAttribute\");\n         testAttributeTO.getValues().add(\"a value\");\n-        membershipTO.getAttributes().add(testAttributeTO);\n+        membershipTO.getAttrs().add(testAttributeTO);\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);"},{"sha":"cc69a875a11d93c4497e1005834d3303a57359a5","filename":"core/src/test/java/org/apache/syncope/core/rest/DerivedSchemaTestITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -76,8 +76,7 @@ public void delete() {\n         DerSchemaTO schema = schemaService.read(AttributableType.ROLE, SchemaType.DERIVED, \"rderiveddata\");\n         assertNotNull(schema);\n \n-        schemaService.delete(AttributableType.ROLE, SchemaType.DERIVED,\n-                schema.getName());\n+        schemaService.delete(AttributableType.ROLE, SchemaType.DERIVED, schema.getName());\n \n         Throwable t = null;\n         try {"},{"sha":"767fd47e02ac14c3ccb9a7314d6286ca009ab705","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":68,"deletions":26,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n-import static org.apache.syncope.core.rest.AbstractTest.roleService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -36,8 +34,10 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.PropagationTargetsTO;\n import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -67,7 +67,8 @@ private RoleTO buildRoleTO(final String name) {\n         // inherited so setter execution should be ignored\n         roleTO.setPasswordPolicy(2L);\n \n-        roleTO.getAttributes().add(attributeTO(\"icon\", \"anIcon\"));\n+        roleTO.getRAttrTemplates().add(\"icon\");\n+        roleTO.getAttrs().add(attributeTO(\"icon\", \"anIcon\"));\n \n         roleTO.getResources().add(\"resource-ldap\");\n         return roleTO;\n@@ -80,7 +81,7 @@ private ConnObjectTO readConnectorObject(final String resourceName, final Long r\n     @Test\n     public void createWithException() {\n         RoleTO newRoleTO = new RoleTO();\n-        newRoleTO.getAttributes().add(attributeTO(\"attr1\", \"value1\"));\n+        newRoleTO.getAttrs().add(attributeTO(\"attr1\", \"value1\"));\n \n         try {\n             createRole(roleService, newRoleTO);\n@@ -93,16 +94,17 @@ public void createWithException() {\n     @Test\n     public void create() {\n         RoleTO roleTO = buildRoleTO(\"lastRole\");\n-        roleTO.getVirtualAttributes().add(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n+        roleTO.getRVirAttrTemplates().add(\"rvirtualdata\");\n+        roleTO.getVirAttrs().add(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n         roleTO.setRoleOwner(8L);\n \n         roleTO = createRole(roleService, roleTO);\n         assertNotNull(roleTO);\n \n-        assertNotNull(roleTO.getVirtualAttributeMap());\n-        assertNotNull(roleTO.getVirtualAttributeMap().get(\"rvirtualdata\").getValues());\n-        assertFalse(roleTO.getVirtualAttributeMap().get(\"rvirtualdata\").getValues().isEmpty());\n-        assertEquals(\"rvirtualvalue\", roleTO.getVirtualAttributeMap().get(\"rvirtualdata\").getValues().get(0));\n+        assertNotNull(roleTO.getVirAttrMap());\n+        assertNotNull(roleTO.getVirAttrMap().get(\"rvirtualdata\").getValues());\n+        assertFalse(roleTO.getVirAttrMap().get(\"rvirtualdata\").getValues().isEmpty());\n+        assertEquals(\"rvirtualvalue\", roleTO.getVirAttrMap().get(\"rvirtualdata\").getValues().get(0));\n \n         assertNotNull(roleTO.getAccountPolicy());\n         assertEquals(6L, (long) roleTO.getAccountPolicy());\n@@ -114,7 +116,7 @@ public void create() {\n \n         ConnObjectTO connObjectTO = readConnectorObject(\"resource-ldap\", roleTO.getId());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getAttributeMap().get(\"owner\"));\n+        assertNotNull(connObjectTO.getAttrMap().get(\"owner\"));\n     }\n \n     @Test\n@@ -183,8 +185,8 @@ public void read() {\n         RoleTO roleTO = roleService.read(1L);\n \n         assertNotNull(roleTO);\n-        assertNotNull(roleTO.getAttributes());\n-        assertFalse(roleTO.getAttributes().isEmpty());\n+        assertNotNull(roleTO.getAttrs());\n+        assertFalse(roleTO.getAttrs().isEmpty());\n     }\n \n     @Test\n@@ -209,16 +211,17 @@ public void selfRead() {\n \n         RoleTO roleTO = roleService2.selfRead(1L);\n         assertNotNull(roleTO);\n-        assertNotNull(roleTO.getAttributes());\n-        assertFalse(roleTO.getAttributes().isEmpty());\n+        assertNotNull(roleTO.getAttrs());\n+        assertFalse(roleTO.getAttrs().isEmpty());\n     }\n \n     @Test\n     public void update() {\n         RoleTO roleTO = buildRoleTO(\"latestRole\" + getUUIDString());\n+        roleTO.getRAttrTemplates().add(\"show\");\n         roleTO = createRole(roleService, roleTO);\n \n-        assertEquals(1, roleTO.getAttributes().size());\n+        assertEquals(1, roleTO.getAttrs().size());\n \n         assertNotNull(roleTO.getAccountPolicy());\n         assertEquals(6L, (long) roleTO.getAccountPolicy());\n@@ -230,15 +233,15 @@ public void update() {\n         roleMod.setId(roleTO.getId());\n         String modName = \"finalRole\" + getUUIDString();\n         roleMod.setName(modName);\n-        roleMod.getAttributesToBeUpdated().add(attributeMod(\"show\", \"FALSE\"));\n+        roleMod.getAttrsToUpdate().add(attributeMod(\"show\", \"FALSE\"));\n \n         // change password policy inheritance\n         roleMod.setInheritPasswordPolicy(Boolean.FALSE);\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n \n         assertEquals(modName, roleTO.getName());\n-        assertEquals(2, roleTO.getAttributes().size());\n+        assertEquals(2, roleTO.getAttrs().size());\n \n         // changes ignored because not requested (null ReferenceMod)\n         assertNotNull(roleTO.getAccountPolicy());\n@@ -251,41 +254,43 @@ public void update() {\n     @Test\n     public void updateRemovingVirAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withvirtual\" + getUUIDString());\n-        roleTO.getVirtualAttributes().add(attributeTO(\"rvirtualdata\", null));\n+        roleTO.getRVirAttrTemplates().add(\"rvirtualdata\");\n+        roleTO.getVirAttrs().add(attributeTO(\"rvirtualdata\", null));\n \n         roleTO = createRole(roleService, roleTO);\n \n         assertNotNull(roleTO);\n-        assertEquals(1, roleTO.getVirtualAttributes().size());\n+        assertEquals(1, roleTO.getVirAttrs().size());\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.getVirtualAttributesToBeRemoved().add(\"rvirtualdata\");\n+        roleMod.getVirAttrsToRemove().add(\"rvirtualdata\");\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n \n         assertNotNull(roleTO);\n-        assertTrue(roleTO.getVirtualAttributes().isEmpty());\n+        assertTrue(roleTO.getVirAttrs().isEmpty());\n     }\n \n     @Test\n     public void updateRemovingDerAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withderived\" + getUUIDString());\n-        roleTO.getDerivedAttributes().add(attributeTO(\"rderivedschema\", null));\n+        roleTO.getRDerAttrTemplates().add(\"rderivedschema\");\n+        roleTO.getDerAttrs().add(attributeTO(\"rderivedschema\", null));\n \n         roleTO = createRole(roleService, roleTO);\n \n         assertNotNull(roleTO);\n-        assertEquals(1, roleTO.getDerivedAttributes().size());\n+        assertEquals(1, roleTO.getDerAttrs().size());\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.getDerivedAttributesToBeRemoved().add(\"rderivedschema\");\n+        roleMod.getDerAttrsToRemove().add(\"rderivedschema\");\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n \n         assertNotNull(roleTO);\n-        assertTrue(roleTO.getDerivedAttributes().isEmpty());\n+        assertTrue(roleTO.getDerAttrs().isEmpty());\n     }\n \n     @Test\n@@ -376,7 +381,7 @@ public void issueSYNCOPE228() {\n \n         RoleMod roleMod = new RoleMod();\n         roleMod.setId(roleTO.getId());\n-        roleMod.setInheritDerivedAttributes(Boolean.TRUE);\n+        roleMod.setInheritDerAttrs(Boolean.TRUE);\n \n         roleTO = roleService.update(roleMod.getId(), roleMod);\n         assertNotNull(roleTO);\n@@ -465,4 +470,41 @@ public void deprovision() {\n             // ignore\n         }\n     }\n+\n+    @Test\n+    public void createWithMandatorySchemaNotTemplate() {\n+        // 1. create a role mandatory schema\n+        SchemaTO badge = new SchemaTO();\n+        badge.setName(\"badge\");\n+        badge.setMandatoryCondition(\"true\");\n+        schemaService.create(AttributableType.ROLE, SchemaType.NORMAL, badge);\n+\n+        // 2. create a role *without* an attribute for that schema: it works\n+        RoleTO roleTO = buildRoleTO(\"lastRole\");\n+        assertFalse(roleTO.getAttrMap().containsKey(badge.getName()));\n+        roleTO = createRole(roleService, roleTO);\n+        assertNotNull(roleTO);\n+        assertFalse(roleTO.getAttrMap().containsKey(badge.getName()));\n+\n+        // 3. add a template for badge to the role just created - \n+        // failure since no values are provided and it is mandatory\n+        RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleTO.getId());\n+        roleMod.setModRAttrTemplates(true);\n+        roleMod.getRAttrTemplates().add(\"badge\");\n+\n+        try {\n+            roleService.update(roleMod.getId(), roleMod);\n+            fail();\n+        } catch (SyncopeClientCompositeException e) {\n+            assertNotNull(e.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        }\n+\n+        // 4. also add an actual attribute for badge - it will work        \n+        roleMod.getAttrsToUpdate().add(attributeMod(badge.getName(), \"xxxxxxxxxx\"));\n+\n+        roleTO = roleService.update(roleMod.getId(), roleMod);\n+        assertNotNull(roleTO);\n+        assertTrue(roleTO.getAttrMap().containsKey(badge.getName()));\n+    }\n }"},{"sha":"b9c01785c88e458f4edf42040edd8ba55bf7ec23","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -181,7 +181,7 @@ public void issue258() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue258@syncope.apache.org\");\n-        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1.2\"));\n+        userTO.getAttrs().add(attributeTO(schemaTO.getName(), \"1.2\"));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -205,7 +205,7 @@ public void issue259() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue259@syncope.apache.org\");\n-        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1\"));\n+        userTO.getAttrs().add(attributeTO(schemaTO.getName(), \"1\"));\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n@@ -229,7 +229,7 @@ public void issue260() {\n         assertNotNull(schemaTO);\n \n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue260@syncope.apache.org\");\n-        userTO.getAttributes().add(attributeTO(schemaTO.getName(), \"1.2\"));\n+        userTO.getAttrs().add(attributeTO(schemaTO.getName(), \"1.2\"));\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n "},{"sha":"d78b9a7c62971d0835ee685580ae59a8a3bf5354","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -208,7 +208,7 @@ public void searchCount() throws InvalidSearchConditionException {\n     @Test\n     public void searchByBooleanAttributableCond() throws InvalidSearchConditionException {\n         final AttributableCond cond = new AttributableCond(AttributableCond.Type.EQ);\n-        cond.setSchema(\"inheritAttributes\");\n+        cond.setSchema(\"inheritAttrs\");\n         cond.setExpression(\"true\");\n \n         final NodeCond searchCondition = NodeCond.getLeafCond(cond);"},{"sha":"ca77ac15101d60edd4873212c3126fe4d49d6be0","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":45,"deletions":45,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -234,13 +234,13 @@ public void sync() {\n         inUserTO.setPassword(\"password123\");\n         String userName = \"test9\";\n         inUserTO.setUsername(userName);\n-        inUserTO.getAttributes().add(attributeTO(\"firstname\", \"nome9\"));\n-        inUserTO.getAttributes().add(attributeTO(\"surname\", \"cognome\"));\n-        inUserTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n-        inUserTO.getAttributes().add(attributeTO(\"fullname\", \"nome cognome\"));\n-        inUserTO.getAttributes().add(attributeTO(\"userId\", \"puccini@syncope.apache.org\"));\n-        inUserTO.getAttributes().add(attributeTO(\"email\", \"puccini@syncope.apache.org\"));\n-        inUserTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        inUserTO.getAttrs().add(attributeTO(\"firstname\", \"nome9\"));\n+        inUserTO.getAttrs().add(attributeTO(\"surname\", \"cognome\"));\n+        inUserTO.getAttrs().add(attributeTO(\"type\", \"a type\"));\n+        inUserTO.getAttrs().add(attributeTO(\"fullname\", \"nome cognome\"));\n+        inUserTO.getAttrs().add(attributeTO(\"userId\", \"puccini@syncope.apache.org\"));\n+        inUserTO.getAttrs().add(attributeTO(\"email\", \"puccini@syncope.apache.org\"));\n+        inUserTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         inUserTO = createUser(inUserTO);\n         assertNotNull(inUserTO);\n@@ -259,14 +259,14 @@ public void sync() {\n \n             // add user template\n             UserTO template = new UserTO();\n-            template.getAttributes().add(attributeTO(\"type\",\n+            template.getAttrs().add(attributeTO(\"type\",\n                     \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n-            template.getDerivedAttributes().add(attributeTO(\"cn\", null));\n+            template.getDerAttrs().add(attributeTO(\"cn\", null));\n             template.getResources().add(\"resource-testdb\");\n \n             MembershipTO membershipTO = new MembershipTO();\n             membershipTO.setRoleId(8L);\n-            membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n+            membershipTO.getAttrs().add(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n             template.getMemberships().add(membershipTO);\n \n             task.setUserTemplate(template);\n@@ -285,23 +285,23 @@ public void sync() {\n             assertNotNull(userTO);\n             assertEquals(\"test9\", userTO.getUsername());\n             assertEquals(ActivitiDetector.isActivitiEnabledForUsers() ? \"active\" : \"created\", userTO.getStatus());\n-            assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"email\").getValues().get(0));\n-            assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n-            assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getAttrMap().get(\"email\").getValues().get(0));\n+            assertEquals(\"test9@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n+            assertTrue(Integer.valueOf(userTO.getAttrMap().get(\"fullname\").getValues().get(0)) <= 10);\n \n             // check for user template\n             userTO = userService.read(\"test7\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_OTHER\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"TYPE_OTHER\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n             assertEquals(2, userTO.getResources().size());\n             assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n             assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n             assertEquals(1, userTO.getMemberships().size());\n-            assertTrue(userTO.getMemberships().get(0).getAttributeMap().containsKey(\"subscriptionDate\"));\n+            assertTrue(userTO.getMemberships().get(0).getAttrMap().containsKey(\"subscriptionDate\"));\n \n             userTO = userService.read(\"test8\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_8\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"TYPE_8\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n \n             // check for sync results\n             int usersPost = userService.count();\n@@ -335,10 +335,10 @@ public void reconcileFromDB() {\n \n         // add user template\n         UserTO template = new UserTO();\n-        template.getAttributes().add(attributeTO(\"type\", \"'type a'\"));\n-        template.getAttributes().add(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n-        template.getAttributes().add(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n-        template.getAttributes().add(attributeTO(\"surname\", \"'surname'\"));\n+        template.getAttrs().add(attributeTO(\"type\", \"'type a'\"));\n+        template.getAttrs().add(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n+        template.getAttrs().add(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n+        template.getAttrs().add(attributeTO(\"surname\", \"'surname'\"));\n \n         task.setUserTemplate(template);\n \n@@ -355,7 +355,7 @@ public void reconcileFromDB() {\n \n         UserTO userTO = userService.read(\"testuser1\");\n         assertNotNull(userTO);\n-        assertEquals(\"reconciled@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n+        assertEquals(\"reconciled@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         // enable user on external resource\n@@ -382,7 +382,8 @@ public void reconcileFromLDAP()\n         //  add user template\n         RoleTO template = new RoleTO();\n         template.setParent(8L);\n-        template.getAttributes().add(attributeTO(\"show\", \"'true'\"));\n+        template.getRAttrTemplates().add(\"show\");\n+        template.getAttrs().add(attributeTO(\"show\", \"'true'\"));\n \n         task.setRoleTemplate(template);\n \n@@ -419,7 +420,7 @@ public void reconcileFromLDAP()\n         assertNotNull(roleTO);\n         assertEquals(\"testLDAPGroup\", roleTO.getName());\n         assertEquals(8L, roleTO.getParent());\n-        assertEquals(\"true\", roleTO.getAttributeMap().get(\"show\").getValues().get(0));\n+        assertEquals(\"true\", roleTO.getAttrMap().get(\"show\").getValues().get(0));\n         assertEquals(matchingUsers.iterator().next().getId(), (long) roleTO.getUserOwner());\n         assertNull(roleTO.getRoleOwner());\n \n@@ -448,7 +449,6 @@ public void dryRun() {\n \n     @Test\n     public void issueSYNCOPE81() {\n-\n         String sender = createNotificationTask();\n         NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n         assertNotNull(taskTO);\n@@ -572,12 +572,12 @@ public void issueSYNCOPE68() {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(\"testuser2\");\n \n-        userTO.getAttributes().add(attributeTO(\"firstname\", \"testuser2\"));\n-        userTO.getAttributes().add(attributeTO(\"surname\", \"testuser2\"));\n-        userTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n-        userTO.getAttributes().add(attributeTO(\"fullname\", \"a type\"));\n-        userTO.getAttributes().add(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n-        userTO.getAttributes().add(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n+        userTO.getAttrs().add(attributeTO(\"firstname\", \"testuser2\"));\n+        userTO.getAttrs().add(attributeTO(\"surname\", \"testuser2\"));\n+        userTO.getAttrs().add(attributeTO(\"type\", \"a type\"));\n+        userTO.getAttrs().add(attributeTO(\"fullname\", \"a type\"));\n+        userTO.getAttrs().add(attributeTO(\"userId\", \"testuser2@syncope.apache.org\"));\n+        userTO.getAttrs().add(attributeTO(\"email\", \"testuser2@syncope.apache.org\"));\n \n         userTO.getResources().add(\"ws-target-resource-nopropagation2\");\n         userTO.getResources().add(\"ws-target-resource-nopropagation4\");\n@@ -628,7 +628,7 @@ public void issueSYNCOPE68() {\n \n             userTO = userService.read(\"testuser2\");\n             assertNotNull(userTO);\n-            assertEquals(\"testuser2@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n+            assertEquals(\"testuser2@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n             assertEquals(2, userTO.getMemberships().size());\n             assertEquals(4, userTO.getResources().size());\n         } finally {\n@@ -673,7 +673,7 @@ public void issueSYNCOPE230() {\n         // 3. read e-mail address for user created by the SyncTask first execution\n         UserTO userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n-        String email = userTO.getAttributeMap().get(\"email\").getValues().iterator().next();\n+        String email = userTO.getAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n \n         // 4. update TESTSYNC on external H2 by changing e-mail address\n@@ -686,7 +686,7 @@ public void issueSYNCOPE230() {\n         // 6. verify that the e-mail was updated\n         userTO = userService.read(\"issuesyncope230\");\n         assertNotNull(userTO);\n-        email = userTO.getAttributeMap().get(\"email\").getValues().iterator().next();\n+        email = userTO.getAttrMap().get(\"email\").getValues().iterator().next();\n         assertNotNull(email);\n         assertEquals(\"updatedSYNCOPE230@syncope.apache.org\", email);\n     }\n@@ -750,10 +750,10 @@ public void issueSYNCOPE272() {\n             newAttrTO.getValues().add(\"\");\n \n             UserTO template = new UserTO();\n-            template.getAttributes().add(newAttrTO);\n-            template.getAttributes().add(attributeTO(\"userId\", \"'test'\"));\n-            template.getAttributes().add(attributeTO(\"fullname\", \"'test'\"));\n-            template.getAttributes().add(attributeTO(\"surname\", \"'test'\"));\n+            template.getAttrs().add(newAttrTO);\n+            template.getAttrs().add(attributeTO(\"userId\", \"'test'\"));\n+            template.getAttrs().add(attributeTO(\"fullname\", \"'test'\"));\n+            template.getAttrs().add(attributeTO(\"surname\", \"'test'\"));\n             template.getResources().add(\"resource-testdb\");\n \n             task.setUserTemplate(template);\n@@ -772,7 +772,7 @@ public void issueSYNCOPE272() {\n \n             userTO = userService.read(userTO.getUsername());\n             assertNotNull(userTO);\n-            assertNotNull(userTO.getAttributeMap().get(\"firstname\").getValues().get(0));\n+            assertNotNull(userTO.getAttrMap().get(\"firstname\").getValues().get(0));\n         } finally {\n             removeTestUsers();\n         }\n@@ -816,8 +816,8 @@ public void issueSYNCOPE258() {\n         // change email in order to unmatch the second user\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getAttributesToBeRemoved().add(\"email\");\n-        userMod.getAttributesToBeUpdated().add(attributeMod(\"email\", \"s258@apache.org\"));\n+        userMod.getAttrsToRemove().add(\"email\");\n+        userMod.getAttrsToUpdate().add(attributeMod(\"email\", \"s258@apache.org\"));\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -837,7 +837,7 @@ public void issueSYNCOPE307() {\n \n         AttributeTO csvuserid = new AttributeTO();\n         csvuserid.setSchema(\"csvuserid\");\n-        userTO.getDerivedAttributes().add(csvuserid);\n+        userTO.getDerAttrs().add(csvuserid);\n \n         userTO.getResources().clear();\n         userTO.getResources().add(\"ws-target-resource-2\");\n@@ -847,7 +847,7 @@ public void issueSYNCOPE307() {\n         assertNotNull(userTO);\n \n         userTO = userService.read(userTO.getId());\n-        assertEquals(\"virtualvalue\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         // Update sync task\n         SyncTaskTO task = taskService.read(12L);\n@@ -858,10 +858,10 @@ public void issueSYNCOPE307() {\n         template.getResources().add(\"resource-db-virattr\");\n \n         AttributeTO userId = attributeTO(\"userId\", \"'s307@apache.org'\");\n-        template.getAttributes().add(userId);\n+        template.getAttrs().add(userId);\n \n         AttributeTO email = attributeTO(\"email\", \"'s307@apache.org'\");\n-        template.getAttributes().add(email);\n+        template.getAttrs().add(email);\n \n         task.setUserTemplate(template);\n \n@@ -870,7 +870,7 @@ public void issueSYNCOPE307() {\n \n         // check for sync policy\n         userTO = userService.read(userTO.getId());\n-        assertEquals(\"virtualvalue\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         try {\n             final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);"},{"sha":"e531191629c2be2b298da2c4cd54cdd7ada45b9d","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":173,"deletions":178,"changes":351,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -18,11 +18,6 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.AbstractTest.ADMIN_PWD;\n-import static org.apache.syncope.core.rest.AbstractTest.attributeMod;\n-import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n-import static org.apache.syncope.core.rest.AbstractTest.getUUIDString;\n-import static org.apache.syncope.core.rest.AbstractTest.userService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n@@ -114,16 +109,16 @@ public static UserTO getSampleTO(final String email) {\n         userTO.setPassword(\"password123\");\n         userTO.setUsername(uid);\n \n-        userTO.getAttributes().add(attributeTO(\"fullname\", uid));\n-        userTO.getAttributes().add(attributeTO(\"firstname\", uid));\n-        userTO.getAttributes().add(attributeTO(\"surname\", \"surname\"));\n-        userTO.getAttributes().add(attributeTO(\"type\", \"a type\"));\n-        userTO.getAttributes().add(attributeTO(\"userId\", uid));\n-        userTO.getAttributes().add(attributeTO(\"email\", uid));\n+        userTO.getAttrs().add(attributeTO(\"fullname\", uid));\n+        userTO.getAttrs().add(attributeTO(\"firstname\", uid));\n+        userTO.getAttrs().add(attributeTO(\"surname\", \"surname\"));\n+        userTO.getAttrs().add(attributeTO(\"type\", \"a type\"));\n+        userTO.getAttrs().add(attributeTO(\"userId\", uid));\n+        userTO.getAttrs().add(attributeTO(\"email\", uid));\n         DateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        userTO.getAttributes().add(attributeTO(\"loginDate\", sdf.format(new Date())));\n-        userTO.getDerivedAttributes().add(attributeTO(\"cn\", null));\n-        userTO.getVirtualAttributes().add(attributeTO(\"virtualdata\", \"virtualvalue\"));\n+        userTO.getAttrs().add(attributeTO(\"loginDate\", sdf.format(new Date())));\n+        userTO.getDerAttrs().add(attributeTO(\"cn\", null));\n+        userTO.getVirAttrs().add(attributeTO(\"virtualdata\", \"virtualvalue\"));\n         return userTO;\n     }\n \n@@ -209,9 +204,9 @@ public void issue186() {\n         userTO.setUsername(userId);\n         userTO.setPassword(\"password\");\n \n-        userTO.getAttributes().add(attributeTO(\"userId\", userId));\n-        userTO.getAttributes().add(attributeTO(\"fullname\", userId));\n-        userTO.getAttributes().add(attributeTO(\"surname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"userId\", userId));\n+        userTO.getAttrs().add(attributeTO(\"fullname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"surname\", userId));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -221,7 +216,7 @@ public void issue186() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-2\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-2\");\n \n         SyncopeClientException sce = null;\n         try {\n@@ -236,7 +231,7 @@ public void issue186() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n@@ -246,7 +241,7 @@ public void issue186() {\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.getResourcesToBeAdded().add(\"resource-db\");\n+        userMod.getResourcesToAdd().add(\"resource-db\");\n \n         sce = null;\n         try {\n@@ -264,13 +259,13 @@ public void testEnforceMandatoryCondition() {\n         userTO.setPassword(\"newPassword\");\n \n         AttributeTO type = null;\n-        for (AttributeTO attr : userTO.getAttributes()) {\n+        for (AttributeTO attr : userTO.getAttrs()) {\n             if (\"type\".equals(attr.getSchema())) {\n                 type = attr;\n             }\n         }\n         assertNotNull(type);\n-        userTO.getAttributes().remove(type);\n+        userTO.getAttrs().remove(type);\n \n         SyncopeClientException sce = null;\n         try {\n@@ -280,7 +275,7 @@ public void testEnforceMandatoryCondition() {\n         }\n         assertNotNull(sce);\n \n-        userTO.getAttributes().add(type);\n+        userTO.getAttrs().add(type);\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n     }\n@@ -308,7 +303,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n         }\n         assertNotNull(sce);\n \n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -375,7 +370,7 @@ public void createWithInvalidPasswordByRole() {\n     @Test(expected = SyncopeClientCompositeException.class)\n     public void createWithException() {\n         UserTO newUserTO = new UserTO();\n-        newUserTO.getAttributes().add(attributeTO(\"userId\", \"userId@nowhere.org\"));\n+        newUserTO.getAttrs().add(attributeTO(\"userId\", \"userId@nowhere.org\"));\n         createUser(newUserTO);\n     }\n \n@@ -402,14 +397,14 @@ public void create() {\n         userTO.getMemberships().add(membershipTO);\n \n         // add an attribute with no values: must be ignored\n-        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", null));\n+        membershipTO.getAttrs().add(attributeTO(\"subscriptionDate\", null));\n \n         // add an attribute with a non-existing schema: must be ignored\n         AttributeTO attrWithInvalidSchemaTO = attributeTO(\"invalid schema\", \"a value\");\n-        userTO.getAttributes().add(attrWithInvalidSchemaTO);\n+        userTO.getAttrs().add(attrWithInvalidSchemaTO);\n \n         // add an attribute with null value: must be ignored\n-        userTO.getAttributes().add(attributeTO(\"activationDate\", null));\n+        userTO.getAttrs().add(attributeTO(\"activationDate\", null));\n \n         // 1. create user\n         UserTO newUserTO = createUser(userTO);\n@@ -423,7 +418,7 @@ public void create() {\n         assertNotNull(newUserTO.getLastModifier());\n         assertEquals(newUserTO.getCreationDate(), newUserTO.getLastChangeDate());\n \n-        assertFalse(newUserTO.getAttributes().contains(attrWithInvalidSchemaTO));\n+        assertFalse(newUserTO.getAttrs().contains(attrWithInvalidSchemaTO));\n \n         // check for changePwdDate\n         assertNotNull(newUserTO.getCreationDate());\n@@ -432,10 +427,10 @@ public void create() {\n         newUserTO = userService.read(newUserTO.getId());\n         assertNotNull(newUserTO);\n \n-        assertNotNull(newUserTO.getVirtualAttributeMap());\n-        assertNotNull(newUserTO.getVirtualAttributeMap().get(\"virtualdata\").getValues());\n-        assertFalse(newUserTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue\", newUserTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertNotNull(newUserTO.getVirAttrMap());\n+        assertNotNull(newUserTO.getVirAttrMap().get(\"virtualdata\").getValues());\n+        assertFalse(newUserTO.getVirAttrMap().get(\"virtualdata\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue\", newUserTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         // get the new task list\n         tasks = taskService.list(TaskType.PROPAGATION);\n@@ -477,7 +472,7 @@ public void create() {\n \n         // 4. try (and fail) to create another user with same (unique) values\n         userTO = getSampleTO(userTO.getUsername());\n-        AttributeTO userIdAttr = getManadatoryAttrByName(userTO.getAttributes(), \"userId\");\n+        AttributeTO userIdAttr = getManadatoryAttrByName(userTO.getAttrs(), \"userId\");\n         userIdAttr.getValues().clear();\n         userIdAttr.getValues().add(\"a.b@c.com\");\n \n@@ -503,8 +498,8 @@ private AttributeTO getManadatoryAttrByName(List<AttributeTO> attributes, String\n     public void createWithRequiredValueMissing() {\n         UserTO userTO = getSampleTO(\"a.b@c.it\");\n \n-        AttributeTO type = getManadatoryAttrByName(userTO.getAttributes(), \"type\");\n-        userTO.getAttributes().remove(type);\n+        AttributeTO type = getManadatoryAttrByName(userTO.getAttrs(), \"type\");\n+        userTO.getAttrs().remove(type);\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n@@ -520,10 +515,10 @@ public void createWithRequiredValueMissing() {\n         assertNotNull(ex);\n         assertNotNull(ex.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n \n-        userTO.getAttributes().add(attributeTO(\"type\", \"F\"));\n+        userTO.getAttrs().add(attributeTO(\"type\", \"F\"));\n \n-        AttributeTO surname = getManadatoryAttrByName(userTO.getAttributes(), \"surname\");\n-        userTO.getAttributes().remove(surname);\n+        AttributeTO surname = getManadatoryAttrByName(userTO.getAttrs(), \"surname\");\n+        userTO.getAttrs().remove(surname);\n \n         // 2. create user without surname (mandatory when type == 'F')\n         ex = null;\n@@ -702,7 +697,7 @@ public void delete() {\n \n         assertNotNull(userTO);\n         assertEquals(id, userTO.getId());\n-        assertTrue(userTO.getAttributes().isEmpty());\n+        assertTrue(userTO.getAttrs().isEmpty());\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n@@ -730,7 +725,7 @@ public void deleteByUsername() {\n \n         assertNotNull(userTO);\n         assertEquals(id, userTO.getId());\n-        assertTrue(userTO.getAttributes().isEmpty());\n+        assertTrue(userTO.getAttrs().isEmpty());\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n@@ -789,8 +784,8 @@ public void read() {\n         UserTO userTO = userService.read(1L);\n \n         assertNotNull(userTO);\n-        assertNotNull(userTO.getAttributes());\n-        assertFalse(userTO.getAttributes().isEmpty());\n+        assertNotNull(userTO.getAttrs());\n+        assertFalse(userTO.getAttrs().isEmpty());\n     }\n \n     @Test\n@@ -810,13 +805,13 @@ public void updateWithouPassword() {\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getDerivedAttributesToBeRemoved().add(\"cn\");\n+        userMod.getDerAttrsToRemove().add(\"cn\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n         assertNotNull(userTO);\n-        assertNotNull(userTO.getDerivedAttributeMap());\n-        assertFalse(userTO.getDerivedAttributeMap().containsKey(\"cn\"));\n+        assertNotNull(userTO.getDerAttrMap());\n+        assertFalse(userTO.getDerAttrMap().containsKey(\"cn\"));\n     }\n \n     @Test(expected = SyncopeClientCompositeException.class)\n@@ -853,33 +848,33 @@ public void update() {\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n+        membershipTO.getAttrs().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n \n-        assertFalse(userTO.getDerivedAttributes().isEmpty());\n+        assertFalse(userTO.getDerAttrs().isEmpty());\n         assertEquals(1, userTO.getMemberships().size());\n \n         MembershipMod membershipMod = new MembershipMod();\n         membershipMod.setRole(8L);\n-        membershipMod.getAttributesToBeUpdated().add(attributeMod(\"subscriptionDate\", \"2010-08-18T16:33:12.203+0200\"));\n+        membershipMod.getAttrsToUpdate().add(attributeMod(\"subscriptionDate\", \"2010-08-18T16:33:12.203+0200\"));\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"new2Password\");\n \n-        userMod.getAttributesToBeRemoved().add(\"userId\");\n+        userMod.getAttrsToRemove().add(\"userId\");\n         String newUserId = getUUIDString() + \"t.w@spre.net\";\n-        userMod.getAttributesToBeUpdated().add(attributeMod(\"userId\", newUserId));\n+        userMod.getAttrsToUpdate().add(attributeMod(\"userId\", newUserId));\n \n-        userMod.getAttributesToBeRemoved().add(\"fullname\");\n+        userMod.getAttrsToRemove().add(\"fullname\");\n         String newFullName = getUUIDString() + \"g.h@t.com\";\n-        userMod.getAttributesToBeUpdated().add(attributeMod(\"fullname\", newFullName));\n+        userMod.getAttrsToUpdate().add(attributeMod(\"fullname\", newFullName));\n \n-        userMod.getDerivedAttributesToBeAdded().add(\"cn\");\n-        userMod.getMembershipsToBeAdded().add(membershipMod);\n-        userMod.getMembershipsToBeRemoved().add(userTO.getMemberships().iterator().next().getId());\n+        userMod.getDerAttrsToAdd().add(\"cn\");\n+        userMod.getMembershipsToAdd().add(membershipMod);\n+        userMod.getMembershipsToRemove().add(userTO.getMemberships().iterator().next().getId());\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -896,13 +891,13 @@ public void update() {\n         assertEquals(passwordTestUser.getPassword(), userTO.getPassword());\n \n         assertEquals(1, userTO.getMemberships().size());\n-        assertEquals(1, userTO.getMemberships().iterator().next().getAttributes().size());\n-        assertFalse(userTO.getDerivedAttributes().isEmpty());\n+        assertEquals(1, userTO.getMemberships().iterator().next().getAttrs().size());\n+        assertFalse(userTO.getDerAttrs().isEmpty());\n \n-        AttributeTO userIdAttr = getManadatoryAttrByName(userTO.getAttributes(), \"userId\");\n+        AttributeTO userIdAttr = getManadatoryAttrByName(userTO.getAttrs(), \"userId\");\n         assertEquals(Collections.singletonList(newUserId), userIdAttr.getValues());\n \n-        AttributeTO fullNameAttr = getManadatoryAttrByName(userTO.getAttributes(), \"fullname\");\n+        AttributeTO fullNameAttr = getManadatoryAttrByName(userTO.getAttrs(), \"fullname\");\n         assertEquals(Collections.singletonList(newFullName), fullNameAttr.getValues());\n     }\n \n@@ -916,7 +911,7 @@ public void updatePasswordOnly() {\n         UserTO userTO = getUniqueSampleTO(\"pwdonly@t.com\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        membershipTO.getAttributes().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n+        membershipTO.getAttrs().add(attributeTO(\"subscriptionDate\", \"2009-08-18T16:33:12.203+0200\"));\n         userTO.getMemberships().add(membershipTO);\n \n         userTO = createUser(userTO);\n@@ -986,7 +981,7 @@ public void verifyTaskRegistration() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n \n-        userMod.getAttributesToBeUpdated().add(attributeMod(\"surname\", \"surname\"));\n+        userMod.getAttrsToUpdate().add(attributeMod(\"surname\", \"surname\"));\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -1193,13 +1188,13 @@ public void suspendReactivateOnResource() {\n     public void updateMultivalueAttribute() {\n         UserTO userTO = getSampleTO(\"multivalue@syncope.apache.org\");\n         userTO.getResources().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        AttributeTO loginDate = userTO.getAttributeMap().get(\"loginDate\");\n+        AttributeTO loginDate = userTO.getAttrMap().get(\"loginDate\");\n         assertNotNull(loginDate);\n         assertEquals(1, loginDate.getValues().size());\n \n@@ -1209,12 +1204,12 @@ public void updateMultivalueAttribute() {\n         loginDateMod.getValuesToBeAdded().add(\"2000-01-01\");\n \n         userMod.setId(userTO.getId());\n-        userMod.getAttributesToBeUpdated().add(loginDateMod);\n+        userMod.getAttrsToUpdate().add(loginDateMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n \n-        loginDate = userTO.getAttributeMap().get(\"loginDate\");\n+        loginDate = userTO.getAttrMap().get(\"loginDate\");\n         assertNotNull(loginDate);\n         assertEquals(2, loginDate.getValues().size());\n     }\n@@ -1238,7 +1233,7 @@ public void issue213() {\n         UserMod userMod = new UserMod();\n \n         userMod.setId(userTO.getId());\n-        userMod.getResourcesToBeRemoved().add(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToRemove().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n \n@@ -1272,18 +1267,18 @@ public void issue270() {\n         // 1. create a new user without virtual attributes\n         UserTO original = getUniqueSampleTO(\"issue270@syncope.apache.org\");\n         // be sure to remove all virtual attributes\n-        original.getVirtualAttributes().clear();\n+        original.getVirAttrs().clear();\n \n         original = createUser(original);\n \n         assertNotNull(original);\n \n-        assertTrue(original.getVirtualAttributes().isEmpty());\n+        assertTrue(original.getVirAttrs().isEmpty());\n \n         UserTO toBeUpdated = userService.read(original.getId());\n \n         AttributeTO virtual = attributeTO(\"virtualdata\", \"virtualvalue\");\n-        toBeUpdated.getVirtualAttributes().add(virtual);\n+        toBeUpdated.getVirAttrs().add(virtual);\n \n         // 2. try to update by adding a resource, but no password: must fail\n         UserMod userMod = AttributableOperations.diff(toBeUpdated, original);\n@@ -1294,26 +1289,26 @@ public void issue270() {\n \n         assertNotNull(toBeUpdated);\n \n-        assertFalse(toBeUpdated.getVirtualAttributes().isEmpty());\n-        assertNotNull(toBeUpdated.getVirtualAttributes().get(0));\n+        assertFalse(toBeUpdated.getVirAttrs().isEmpty());\n+        assertNotNull(toBeUpdated.getVirAttrs().get(0));\n \n-        assertEquals(virtual.getSchema(), toBeUpdated.getVirtualAttributes().get(0).getSchema());\n+        assertEquals(virtual.getSchema(), toBeUpdated.getVirAttrs().get(0).getSchema());\n     }\n \n     @Test\n     public final void issue280() {\n         UserTO userTO = getUniqueSampleTO(\"issue280@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n+        userTO.getDerAttrs().clear();\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"123password\");\n-        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1336,7 +1331,7 @@ public void issue281() {\n         UserTO userTO = getUniqueSampleTO(\"issue281@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n+        userTO.getDerAttrs().clear();\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         userTO = createUser(userTO);\n@@ -1358,7 +1353,7 @@ public void issue281() {\n     @Test\n     public void issue288() {\n         UserTO userTO = getSampleTO(\"issue288@syncope.apache.org\");\n-        userTO.getAttributes().add(attributeTO(\"aLong\", \"STRING\"));\n+        userTO.getAttrs().add(attributeTO(\"aLong\", \"STRING\"));\n \n         try {\n             createUser(userTO);\n@@ -1373,10 +1368,10 @@ public void roleAttrPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"checkRoleAttrPropagation@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n \n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n@@ -1387,38 +1382,38 @@ public void roleAttrPropagation() {\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n-        assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n+        assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n+        assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"ROLE\").getValues().get(0));\n     }\n \n     @Test\n     public void membershipAttrPropagation() {\n         UserTO userTO = getUniqueSampleTO(\"checkMembAttrPropagation@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(1L);\n-        membershipTO.getAttributes().add(attributeTO(\"mderived_sx\", \"sx\"));\n-        membershipTO.getAttributes().add(attributeTO(\"mderived_dx\", \"dx\"));\n-        membershipTO.getDerivedAttributes().add(attributeTO(\"mderToBePropagated\", null));\n+        membershipTO.getAttrs().add(attributeTO(\"mderived_sx\", \"sx\"));\n+        membershipTO.getAttrs().add(attributeTO(\"mderived_dx\", \"dx\"));\n+        membershipTO.getDerAttrs().add(attributeTO(\"mderToBePropagated\", null));\n         userTO.getMemberships().add(membershipTO);\n \n         userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n         assertNotNull(actual);\n-        assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n+        assertNotNull(actual.getDerAttrMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n+        assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n \n     @Test\n@@ -1436,12 +1431,12 @@ public void issueSYNCOPE16() {\n         // 2. check for virtual attribute value\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n-        assertEquals(\"virtualvalue\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n-        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n-        userMod.getVirtualAttributesToBeUpdated().add(attributeMod(\"virtualdata\", \"virtualupdated\"));\n+        userMod.getVirAttrsToRemove().add(\"virtualdata\");\n+        userMod.getVirAttrsToUpdate().add(attributeMod(\"virtualdata\", \"virtualupdated\"));\n \n         // 3. update virtual attribute\n         actual = userService.update(userMod.getId(), userMod);\n@@ -1450,17 +1445,17 @@ public void issueSYNCOPE16() {\n         // 4. check for virtual attribute value\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n-        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualupdated\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test\n     public void issueSYNCOPE108() {\n         UserTO userTO = getUniqueSampleTO(\"syncope108@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n@@ -1488,7 +1483,7 @@ public void issueSYNCOPE108() {\n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.getMembershipsToBeRemoved().add(actual.getMemberships().get(0).getId());\n+        userMod.getMembershipsToRemove().add(actual.getMemberships().get(0).getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1504,7 +1499,7 @@ public void issueSYNCOPE108() {\n         userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.getResourcesToBeRemoved().add(actual.getResources().iterator().next());\n+        userMod.getResourcesToRemove().add(actual.getResources().iterator().next());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1521,7 +1516,7 @@ public void issueSYNCOPE108() {\n         userMod = new UserMod();\n         userMod.setId(actual.getId());\n \n-        userMod.getMembershipsToBeRemoved().add(actual.getMemberships().get(0).getId());\n+        userMod.getMembershipsToRemove().add(actual.getMemberships().get(0).getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1541,13 +1536,13 @@ public void issueSYNCOPE111() {\n         UserTO userTO = getUniqueSampleTO(\"syncope111@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n         MembershipTO memb12 = new MembershipTO();\n         memb12.setRoleId(12L);\n-        memb12.getAttributes().add(attributeTO(\"postalAddress\", \"postalAddress\"));\n+        memb12.getAttrs().add(attributeTO(\"postalAddress\", \"postalAddress\"));\n         userTO.getMemberships().add(memb12);\n \n         MembershipTO memb13 = new MembershipTO();\n@@ -1563,12 +1558,12 @@ public void issueSYNCOPE111() {\n         ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n         assertNotNull(connObjectTO);\n \n-        AttributeTO postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n+        AttributeTO postalAddress = connObjectTO.getAttrMap().get(\"postalAddress\");\n         assertNotNull(postalAddress);\n         assertEquals(1, postalAddress.getValues().size());\n         assertEquals(\"postalAddress\", postalAddress.getValues().get(0));\n \n-        AttributeTO title = connObjectTO.getAttributeMap().get(\"title\");\n+        AttributeTO title = connObjectTO.getAttrMap().get(\"title\");\n         assertNotNull(title);\n         assertEquals(2, title.getValues().size());\n         assertTrue(title.getValues().contains(\"r12\") && title.getValues().contains(\"r13\"));\n@@ -1583,7 +1578,7 @@ public void issueSYNCOPE111() {\n                 ? actual.getMemberships().get(0)\n                 : actual.getMemberships().get(1);\n \n-        userMod.getMembershipsToBeRemoved().add(membershipTO.getId());\n+        userMod.getMembershipsToRemove().add(membershipTO.getId());\n \n         actual = userService.update(userMod.getId(), userMod);\n         assertNotNull(actual);\n@@ -1592,11 +1587,11 @@ public void issueSYNCOPE111() {\n         connObjectTO = readConnectorObject(RESOURCE_NAME_LDAP, actual.getId());\n         assertNotNull(connObjectTO);\n \n-        postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n+        postalAddress = connObjectTO.getAttrMap().get(\"postalAddress\");\n         assertTrue(postalAddress == null || postalAddress.getValues().isEmpty()\n                 || StringUtils.hasText(postalAddress.getValues().get(0)));\n \n-        title = connObjectTO.getAttributeMap().get(\"title\");\n+        title = connObjectTO.getAttrMap().get(\"title\");\n         assertNotNull(title);\n         assertEquals(1, title.getValues().size());\n         assertTrue(title.getValues().contains(\"r13\"));\n@@ -1607,7 +1602,7 @@ public void issueSYNCOPE111() {\n     public void issueSYNCOPE185() {\n         // 1. create user with LDAP resource, succesfully propagated\n         UserTO userTO = getSampleTO(\"syncope185@syncope.apache.org\");\n-        userTO.getVirtualAttributes().clear();\n+        userTO.getVirAttrs().clear();\n         userTO.getResources().add(RESOURCE_NAME_LDAP);\n \n         userTO = createUser(userTO);\n@@ -1675,7 +1670,7 @@ public void issueSYNCOPE260() {\n \n         ConnObjectTO connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -1689,7 +1684,7 @@ public void issueSYNCOPE260() {\n         attrMod.getValuesToBeRemoved().add(\"virtualvalue\");\n         attrMod.getValuesToBeAdded().add(\"virtualvalue2\");\n \n-        userMod.getVirtualAttributesToBeUpdated().add(attrMod);\n+        userMod.getVirAttrsToUpdate().add(attrMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1699,7 +1694,7 @@ public void issueSYNCOPE260() {\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -1710,16 +1705,16 @@ public void issueSYNCOPE260() {\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n \n         userTO = userService.reactivate(userTO.getId());\n         assertEquals(\"active\", userTO.getStatus());\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -1733,7 +1728,7 @@ public void issueSYNCOPE260() {\n         attrMod.getValuesToBeRemoved().add(\"Surname\");\n         attrMod.getValuesToBeAdded().add(\"Surname2\");\n \n-        userMod.getAttributesToBeUpdated().add(attrMod);\n+        userMod.getAttrsToUpdate().add(attrMod);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1743,23 +1738,23 @@ public void issueSYNCOPE260() {\n \n         connObjectTO = readConnectorObject(\"ws-target-resource-2\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n+        assertEquals(\"Surname2\", connObjectTO.getAttrMap().get(\"SURNAME\").getValues().get(0));\n \n         // attribute \"name\" mapped on virtual attribute \"virtualdata\" shouldn't be changed\n-        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        assertFalse(connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"NAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n         // remove user virtual attribute and check virtual attribute value (reset)\n         // ----------------------------------\n         userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n+        userMod.getVirAttrsToRemove().add(\"virtualdata\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n-        assertTrue(userTO.getVirtualAttributes().isEmpty());\n+        assertTrue(userTO.getVirAttrs().isEmpty());\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n@@ -1768,8 +1763,8 @@ public void issueSYNCOPE260() {\n         assertNotNull(connObjectTO);\n \n         // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n-        assertTrue(connObjectTO.getAttributeMap().get(\"NAME\").getValues() == null\n-                || connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        assertTrue(connObjectTO.getAttrMap().get(\"NAME\").getValues() == null\n+                || connObjectTO.getAttrMap().get(\"NAME\").getValues().isEmpty());\n         // ----------------------------------\n     }\n \n@@ -1790,14 +1785,14 @@ public void issueSYNCOPE267() {\n \n         ConnObjectTO connObjectTO = readConnectorObject(\"resource-db-virattr\", userTO.getId());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"USERNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n \n         userTO = userService.read(userTO.getId());\n \n         assertNotNull(userTO);\n-        assertEquals(1, userTO.getVirtualAttributes().size());\n-        assertEquals(\"virtualvalue\", userTO.getVirtualAttributes().get(0).getValues().get(0));\n+        assertEquals(1, userTO.getVirAttrs().size());\n+        assertEquals(\"virtualvalue\", userTO.getVirAttrs().get(0).getValues().get(0));\n     }\n \n     @Test\n@@ -1812,7 +1807,7 @@ public void issueSYNCOPE266() {\n         userMod.setId(userTO.getId());\n \n         // this resource has not a mapping for Password\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-update\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-update\");\n \n         userTO = userService.update(userTO.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1846,15 +1841,15 @@ public void issueSYNCOPE122() {\n \n         ConnObjectTO userOnDb =\n                 resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n-        final AttributeTO pwdOnTestDbAttr = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttributeTO pwdOnTestDbAttr = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 =\n                 resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n-        final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttributeTO pwdOnTestDb2Attr = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n         assertFalse(pwdOnTestDb2Attr.getValues().isEmpty());\n@@ -1880,15 +1875,15 @@ public void issueSYNCOPE122() {\n \n         // 3c. verify that password *has* changed on testdb\n         userOnDb = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, AttributableType.USER, userTO.getId());\n-        final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttributeTO pwdOnTestDbAttrAfter = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n         userOnDb2 = resourceService.getConnectorObject(\"resource-testdb2\", AttributableType.USER, userTO.getId());\n-        final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttributeMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttributeTO pwdOnTestDb2AttrAfter = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n         assertFalse(pwdOnTestDb2AttrAfter.getValues().isEmpty());\n@@ -1915,7 +1910,7 @@ public void isseSYNCOPE136AES() {\n         // 4. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1946,7 +1941,7 @@ public void isseSYNCOPE136Random() {\n         // 2. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_LDAP);\n+        userMod.getResourcesToAdd().add(RESOURCE_NAME_LDAP);\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertNotNull(userTO);\n@@ -1964,12 +1959,12 @@ public void isseSYNCOPE136Random() {\n     @Test\n     public void virAttrCache() {\n         UserTO userTO = getUniqueSampleTO(\"virattrcache@apache.org\");\n-        userTO.getVirtualAttributes().clear();\n+        userTO.getVirAttrs().clear();\n \n         AttributeTO virAttrTO = new AttributeTO();\n         virAttrTO.setSchema(\"virtualdata\");\n         virAttrTO.getValues().add(\"virattrcache\");\n-        userTO.getVirtualAttributes().add(virAttrTO);\n+        userTO.getVirAttrs().add(virAttrTO);\n \n         userTO.getMemberships().clear();\n         userTO.getResources().clear();\n@@ -1981,7 +1976,7 @@ public void virAttrCache() {\n \n         // 2. check for virtual attribute value\n         actual = userService.read(actual.getId());\n-        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         Exception exception = null;\n         try {\n@@ -2004,7 +1999,7 @@ public void virAttrCache() {\n \n         // 2. check for cached attribute value\n         actual = userService.read(actual.getId());\n-        assertEquals(\"virattrcache\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virattrcache\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         UserMod userMod = new UserMod();\n         userMod.setId(actual.getId());\n@@ -2013,8 +2008,8 @@ public void virAttrCache() {\n         virtualdata.setSchema(\"virtualdata\");\n         virtualdata.getValuesToBeAdded().add(\"virtualupdated\");\n \n-        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n-        userMod.getVirtualAttributesToBeUpdated().add(virtualdata);\n+        userMod.getVirAttrsToRemove().add(\"virtualdata\");\n+        userMod.getVirAttrsToUpdate().add(virtualdata);\n \n         // 3. update virtual attribute\n         actual = userService.update(actual.getId(), userMod);\n@@ -2023,7 +2018,7 @@ public void virAttrCache() {\n         // 4. check for virtual attribute value\n         actual = userService.read(actual.getId());\n         assertNotNull(actual);\n-        assertEquals(\"virtualupdated\", actual.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+        assertEquals(\"virtualupdated\", actual.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n     }\n \n     @Test\n@@ -2032,7 +2027,7 @@ public void mappingPurpose() {\n \n         AttributeTO csvuserid = new AttributeTO();\n         csvuserid.setSchema(\"csvuserid\");\n-        userTO.getDerivedAttributes().add(csvuserid);\n+        userTO.getDerAttrs().add(csvuserid);\n \n         userTO.getResources().clear();\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n@@ -2041,7 +2036,7 @@ public void mappingPurpose() {\n         assertNotNull(actual);\n \n         final ConnObjectTO connObjectTO = readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n-        assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n+        assertNull(connObjectTO.getAttrMap().get(\"email\"));\n     }\n \n     @Test\n@@ -2054,11 +2049,11 @@ public void issueSYNCOPE265() {\n             attributeMod.setSchema(\"type\");\n             attributeMod.getValuesToBeAdded().add(\"a type\");\n \n-            userMod.getAttributesToBeRemoved().add(\"type\");\n-            userMod.getAttributesToBeUpdated().add(attributeMod);\n+            userMod.getAttrsToRemove().add(\"type\");\n+            userMod.getAttrsToUpdate().add(attributeMod);\n \n             UserTO userTO = userService.update(i, userMod);\n-            assertEquals(\"a type\", userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"a type\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n         }\n     }\n \n@@ -2130,21 +2125,21 @@ public void issueSYNCOPE354() {\n         ConnObjectTO connObj =\n                 resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n         assertNotNull(connObj);\n-        assertTrue(connObj.getAttributeMap().get(\"uniqueMember\").getValues().\n+        assertTrue(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 4. remove membership\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getMembershipsToBeRemoved().add(userTO.getMemberships().iterator().next().getId());\n+        userMod.getMembershipsToRemove().add(userTO.getMemberships().iterator().next().getId());\n \n         userTO = userService.update(userMod.getId(), userMod);\n         assertTrue(userTO.getResources().contains(RESOURCE_NAME_LDAP));\n \n         // 5. read role on resource, check that user DN was removed from uniqueMember\n         connObj = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE, roleTO.getId());\n         assertNotNull(connObj);\n-        assertFalse(connObj.getAttributeMap().get(\"uniqueMember\").getValues().\n+        assertFalse(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 6. restore original resource-ldap role mapping\n@@ -2210,7 +2205,7 @@ public void issueSYNCOPE383() {\n         // 2. assign resource without specifying a new pwd and check propagation failure\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.getResourcesToBeAdded().add(RESOURCE_NAME_TESTDB);\n+        userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n@@ -2262,12 +2257,12 @@ public void issueSYNCOPE397() {\n         UserTO userTO = getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n \n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n-        userTO.getDerivedAttributes().add(attributeTO(\"cn\", null));\n-        userTO.getVirtualAttributes().add(attributeTO(\"virtualdata\", \"test@testone.org\"));\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().add(attributeTO(\"cn\", null));\n+        userTO.getVirAttrs().add(attributeTO(\"virtualdata\", \"test@testone.org\"));\n         // assign resource-csv to user\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n         // save user\n@@ -2281,10 +2276,10 @@ public void issueSYNCOPE397() {\n         userMod.setId(toBeUpdated.getId());\n         userMod.setPassword(\"password2\");\n         // assign new resource to user\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-2\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-2\");\n         //modify virtual attribute\n-        userMod.getVirtualAttributesToBeRemoved().add(\"virtualdata\");\n-        userMod.getVirtualAttributesToBeUpdated().add(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n+        userMod.getVirAttrsToRemove().add(\"virtualdata\");\n+        userMod.getVirAttrsToUpdate().add(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n         // check Syncope change password\n \n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n@@ -2295,7 +2290,7 @@ public void issueSYNCOPE397() {\n         userMod.setPwdPropRequest(pwdPropRequest);\n         toBeUpdated = userService.update(userMod.getId(), userMod);\n         assertNotNull(toBeUpdated);\n-        assertEquals(\"test@testoneone.com\", toBeUpdated.getVirtualAttributes().get(0).getValues().get(0));\n+        assertEquals(\"test@testoneone.com\", toBeUpdated.getVirAttrs().get(0).getValues().get(0));\n         // check if propagates correctly with assertEquals on size of tasks list\n \n         assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n@@ -2309,9 +2304,9 @@ public void issueSYNCOPE402() {\n         userTO.setUsername(userId);\n         userTO.setPassword(\"password\");\n \n-        userTO.getAttributes().add(attributeTO(\"userId\", userId));\n-        userTO.getAttributes().add(attributeTO(\"fullname\", userId));\n-        userTO.getAttributes().add(attributeTO(\"surname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"userId\", userId));\n+        userTO.getAttrs().add(attributeTO(\"fullname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"surname\", userId));\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -2322,8 +2317,8 @@ public void issueSYNCOPE402() {\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"newPassword\");\n-        userMod.getResourcesToBeAdded().add(\"ws-target-resource-1\");\n-        userMod.getResourcesToBeAdded().add(\"resource-testdb\");\n+        userMod.getResourcesToAdd().add(\"ws-target-resource-1\");\n+        userMod.getResourcesToAdd().add(\"resource-testdb\");\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(1).getFailureReason());\n@@ -2336,8 +2331,8 @@ public void issueSYNCOPE15() {\n \n         UserTO userTO = getUniqueSampleTO(\"issueSYNCOPE15@syncope.apache.org\");\n         userTO.getResources().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().clear();\n         userTO.getMemberships().clear();\n \n         // User with role 9 are defined in workflow as subject to approval\n@@ -2426,9 +2421,9 @@ public void unlink() {\n         UserTO userTO = getUniqueSampleTO(\"unlink@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n@@ -2458,9 +2453,9 @@ public void unassign() {\n         UserTO userTO = getUniqueSampleTO(\"unassign@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n@@ -2493,9 +2488,9 @@ public void deprovision() {\n         UserTO userTO = getUniqueSampleTO(\"deprovision@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n-        userTO.getDerivedAttributes().clear();\n-        userTO.getVirtualAttributes().clear();\n-        userTO.getDerivedAttributes().add(attributeTO(\"csvuserid\", null));\n+        userTO.getDerAttrs().clear();\n+        userTO.getVirAttrs().clear();\n+        userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n         userTO.getResources().add(RESOURCE_NAME_CSV);\n \n         UserTO actual = createUser(userTO);\n@@ -2528,7 +2523,7 @@ private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName)\n     }\n \n     private String getStringAttribute(ConnObjectTO connObjectTO, String attrName) {\n-        return connObjectTO.getAttributeMap().get(attrName).getValues().get(0);\n+        return connObjectTO.getAttrMap().get(attrName).getValues().get(0);\n     }\n \n     private long getMaxTaskId(List<PropagationTaskTO> tasks) {"},{"sha":"8f626a4641d45c4950a44f073c6bf5392da183f9","filename":"core/src/test/java/org/apache/syncope/core/rest/VirtualSchemaTestITCase.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -71,12 +71,10 @@ public void create() {\n \n     @Test\n     public void delete() {\n-        VirSchemaTO schema = schemaService.read(AttributableType.ROLE, SchemaType.VIRTUAL,\n-                \"rvirtualdata\");\n+        VirSchemaTO schema = schemaService.read(AttributableType.ROLE, SchemaType.VIRTUAL, \"rvirtualdata\");\n         assertNotNull(schema);\n \n-        schemaService.delete(AttributableType.ROLE, SchemaType.VIRTUAL,\n-                schema.getName());\n+        schemaService.delete(AttributableType.ROLE, SchemaType.VIRTUAL, schema.getName());\n \n         Throwable t = null;\n         try {"},{"sha":"1314b3e2c602a06181814c1d455fbdaf009cac3e","filename":"core/src/test/java/org/apache/syncope/core/sync/TestSyncActions.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -35,15 +35,15 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(final SyncResul\n             final SyncDelta delta, final T subject) throws JobExecutionException {\n \n         AttributeTO attrTO = null;\n-        for (int i = 0; i < subject.getAttributes().size(); i++) {\n-            if (\"fullname\".equals(subject.getAttributes().get(i).getSchema())) {\n-                attrTO = subject.getAttributes().get(i);\n+        for (int i = 0; i < subject.getAttrs().size(); i++) {\n+            if (\"fullname\".equals(subject.getAttrs().get(i).getSchema())) {\n+                attrTO = subject.getAttrs().get(i);\n             }\n         }\n         if (attrTO == null) {\n             attrTO = new AttributeTO();\n             attrTO.setSchema(\"fullname\");\n-            subject.getAttributes().add(attrTO);\n+            subject.getAttrs().add(attrTO);\n         }\n         attrTO.getValues().clear();\n         attrTO.getValues().add(String.valueOf(counter++));\n@@ -56,18 +56,18 @@ public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> Syn\n             final SyncResultsHandler handler, final SyncDelta delta, final T subject, final K subjectMod)\n             throws JobExecutionException {\n \n-        subjectMod.getAttributesToBeRemoved().add(\"fullname\");\n+        subjectMod.getAttrsToRemove().add(\"fullname\");\n \n         AttributeMod fullnameMod = null;\n-        for (AttributeMod attrMod : subjectMod.getAttributesToBeUpdated()) {\n+        for (AttributeMod attrMod : subjectMod.getAttrsToUpdate()) {\n             if (\"fullname\".equals(attrMod.getSchema())) {\n                 fullnameMod = attrMod;\n             }\n         }\n         if (fullnameMod == null) {\n             fullnameMod = new AttributeMod();\n             fullnameMod.setSchema(\"fullname\");\n-            subjectMod.getAttributesToBeUpdated().add(fullnameMod);\n+            subjectMod.getAttrsToUpdate().add(fullnameMod);\n         }\n \n         fullnameMod.getValuesToBeAdded().clear();"},{"sha":"8843943e065f5e947d3e5e070f1b0dceedd08c13","filename":"core/src/test/resources/content.xml","status":"modified","additions":88,"deletions":58,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -75,21 +75,21 @@ under the License.\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <SyncopeRole id=\"6\"\n                name=\"director\" parent_id=\"4\" userOwner_id=\"5\"\n-               inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n+               inheritAttrs=\"1\" inheritDerAttrs=\"1\" inheritVirAttrs=\"1\"\n                inheritPasswordPolicy=\"0\" inheritAccountPolicy=\"0\"\n                passwordPolicy_id=\"4\"\n                accountPolicy_id=\"6\"\n                creator=\"admin\" lastModifier=\"admin\" \n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <SyncopeRole id=\"7\"\n                name=\"managingDirector\" parent_id=\"6\"\n-               inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n+               inheritAttrs=\"1\" inheritDerAttrs=\"1\" inheritVirAttrs=\"1\"\n                inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\" inheritOwner=\"1\"\n                creator=\"admin\" lastModifier=\"admin\" \n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <SyncopeRole id=\"8\"\n                name=\"otherchild\" parent_id=\"1\"\n-               inheritVirtualAttributes=\"1\"\n+               inheritVirAttrs=\"1\"\n                passwordPolicy_id=\"4\"\n                creator=\"admin\" lastModifier=\"admin\" \n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n@@ -98,7 +98,7 @@ under the License.\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <SyncopeRole id=\"10\"\n                name=\"managingConsultant\" parent_id=\"6\"\n-               inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n+               inheritAttrs=\"1\" inheritDerAttrs=\"1\" inheritVirAttrs=\"1\"\n                inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\" inheritOwner=\"0\"\n                creator=\"admin\" lastModifier=\"admin\" \n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n@@ -113,7 +113,7 @@ under the License.\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <SyncopeRole id=\"14\"\n                name=\"artDirector\" parent_id=\"4\"\n-               inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n+               inheritAttrs=\"1\" inheritDerAttrs=\"1\" inheritVirAttrs=\"1\"\n                inheritPasswordPolicy=\"0\" inheritAccountPolicy=\"0\"\n                passwordPolicy_id=\"8\"\n                accountPolicy_id=\"6\"\n@@ -173,35 +173,46 @@ under the License.\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n   <UDerSchema name=\"csvuserid\" expression=\"firstname + ',' + surname\"/>\n+  <UDerSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n+  <UDerSchema name=\"noschema\" expression=\"surname + ', ' + notfound\"/>\n+\n+  <UVirSchema name=\"virtualdata\"/>\n \n   <RSchema name=\"icon\" type=\"String\"\n-           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-                \n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>                \n   <RSchema name=\"show\" type=\"Boolean\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n   <RSchema name=\"rderived_sx\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n   <RSchema name=\"rderived_dx\" type=\"String\"\n-           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-           \n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>           \n   <RSchema name=\"title\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n+  <RDerSchema name=\"rderiveddata\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+  <RDerSchema name=\"displayProperty\" expression=\"icon + ': ' + show\"/>\n+  <RDerSchema name=\"rderToBePropagated\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+\n+  <RVirSchema name=\"rvirtualdata\"/>\n+\n+  <!-- rderiveddata is used to verify der schema deletion -->\n+  <RDerSchema name=\"rderivedschema\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+\n   <MSchema name=\"subscriptionDate\" type=\"Date\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n            conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n-\n   <MSchema name=\"mderived_sx\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n   <MSchema name=\"mderived_dx\" type=\"String\"\n-           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-           \n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>          \n   <MSchema name=\"postalAddress\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n+  <MDerSchema name=\"mderiveddata\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n+  <MDerSchema name=\"mderToBePropagated\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n+\n+  <MVirSchema name=\"mvirtualdata\"/>\n+  \n   <UAttr id=\"99\" owner_id=\"1\" schema_name=\"type\"/>\n   <UAttrValue id=\"9\" attribute_id=\"99\" stringValue=\"G\"/>\n   <UAttr id=\"100\" owner_id=\"1\" schema_name=\"fullname\"/>\n@@ -265,72 +276,91 @@ under the License.\n   <UAttr id=\"126\" owner_id=\"3\" schema_name=\"type\"/>\n   <UAttrValue id=\"37\" attribute_id=\"126\" stringValue=\"F\"/>\n     \n-  <RAttr id=\"600\" owner_id=\"1\" schema_name=\"icon\"/>\n-  <RAttr id=\"700\" owner_id=\"2\" schema_name=\"icon\"/>\n-  <RAttr id=\"800\" owner_id=\"1\" schema_name=\"show\"/>\n-  <RAttr id=\"900\" owner_id=\"6\" schema_name=\"icon\"/>\n-  <RAttr id=\"950\" owner_id=\"4\" schema_name=\"icon\"/>\n+  <UVirAttr id=\"1000\" virSchema_name=\"virtualdata\" owner_id=\"3\"/>\n \n+  <UDerAttr id=\"100\" derSchema_name=\"cn\" owner_id=\"3\"/>\n+  <UDerAttr id=\"101\" derSchema_name=\"cn\" owner_id=\"1\"/>\n+\n+  <RAttrTemplate id=\"600\" owner_id=\"1\" schema_name=\"icon\"/>\n+  <RAttr id=\"600\" owner_id=\"1\" template_id=\"600\"/>\n   <RAttrValue attribute_id=\"600\" id=\"40\" stringValue=\"niceIcon\"/>\n+\n+  <RAttrTemplate id=\"700\" owner_id=\"2\" schema_name=\"icon\"/>\n+  <RAttr id=\"700\" owner_id=\"2\" template_id=\"700\"/>\n   <RAttrValue attribute_id=\"700\" id=\"41\" stringValue=\"badIcon\"/>\n+\n+  <RAttrTemplate id=\"800\" owner_id=\"1\" schema_name=\"show\"/>\n+  <RAttr id=\"800\" owner_id=\"1\" template_id=\"800\"/>\n   <RAttrValue attribute_id=\"800\" id=\"42\" booleanValue=\"1\"/>\n+\n+  <RAttrTemplate id=\"900\" owner_id=\"6\" schema_name=\"icon\"/>\n+  <RAttr id=\"900\" owner_id=\"6\" template_id=\"900\"/>\n   <RAttrValue attribute_id=\"900\" id=\"43\" stringValue=\"icon6\"/>\n+\n+  <RAttrTemplate id=\"950\" owner_id=\"4\" schema_name=\"icon\"/>\n+  <RAttr id=\"950\" owner_id=\"4\" template_id=\"950\"/>\n   <RAttrValue attribute_id=\"950\" id=\"44\" stringValue=\"icon4\"/>\n \n-  <RAttr id=\"992\" owner_id=\"1\" schema_name=\"rderived_sx\"/>\n+  <RAttrTemplate id=\"992\" owner_id=\"1\" schema_name=\"rderived_sx\"/>\n+  <RAttr id=\"992\" owner_id=\"1\" template_id=\"992\"/>\n   <RAttrValue attribute_id=\"992\" id=\"92\" stringValue=\"sx\"/>\n \n-  <RAttr id=\"993\" owner_id=\"1\" schema_name=\"rderived_dx\"/>\n+  <RAttrTemplate id=\"993\" owner_id=\"1\" schema_name=\"rderived_dx\"/>\n+  <RAttr id=\"993\" owner_id=\"1\" template_id=\"993\"/>\n   <RAttrValue attribute_id=\"993\" id=\"93\" stringValue=\"dx\"/>\n \n-  <RDerSchema name=\"rderiveddata\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n-  <RDerAttr id=\"1000\" derivedSchema_name=\"rderiveddata\" owner_id=\"1\"/>\n+  <RAttrTemplate id=\"994\" owner_id=\"12\" schema_name=\"title\"/>\n+  <RAttr id=\"994\" owner_id=\"12\" template_id=\"994\"/>\n+  <RAttrValue attribute_id=\"994\" id=\"94\" stringValue=\"r12\"/>\n+  \n+  <RAttrTemplate id=\"995\" owner_id=\"13\" schema_name=\"title\"/>\n+  <RAttr id=\"995\" owner_id=\"13\" template_id=\"995\"/>\n+  <RAttrValue attribute_id=\"995\" id=\"95\" stringValue=\"r13\"/>\n+\n+  <RDerAttrTemplate id=\"1000\" owner_id=\"1\" schema_name=\"rderiveddata\"/>\n+  <RDerAttr id=\"1000\" owner_id=\"1\" template_id=\"1000\"/>\n     \n-  <RDerSchema name=\"displayProperty\" expression=\"icon + ': ' + show\"/>\n+  <RDerAttrTemplate id=\"1001\" owner_id=\"1\" schema_name=\"displayProperty\"/>\n+  <RDerAttr id=\"1001\" owner_id=\"1\" template_id=\"1001\"/>\n+  \n+  <RDerAttrTemplate id=\"1002\" owner_id=\"4\" schema_name=\"displayProperty\"/>\n+  <RDerAttr id=\"1002\" owner_id=\"4\" template_id=\"1002\"/>\n \n-  <RDerAttr id=\"1001\" derivedSchema_name=\"displayProperty\" owner_id=\"1\"/>\n-  <RDerAttr id=\"1002\" derivedSchema_name=\"displayProperty\" owner_id=\"4\"/>\n+  <RDerAttrTemplate id=\"1003\" owner_id=\"1\" schema_name=\"rderToBePropagated\"/>    \n+  <RDerAttr id=\"1003\" owner_id=\"1\" template_id=\"1003\"/>    \n \n-  <RDerSchema name=\"rderToBePropagated\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n-  <RDerAttr id=\"1003\" derivedSchema_name=\"rderToBePropagated\" owner_id=\"1\"/>\n-    \n-  <!-- rderiveddata is used to verify der schema deletion -->\n-  <RDerSchema name=\"rderivedschema\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+  <RVirAttrTemplate id=\"100\" owner_id=\"4\" schema_name=\"rvirtualdata\"/>\n+  <RVirAttr id=\"100\" owner_id=\"4\" template_id=\"100\"/>\n \n-  <RAttr id=\"994\" owner_id=\"12\" schema_name=\"title\"/>\n-  <RAttrValue attribute_id=\"994\" id=\"94\" stringValue=\"r12\"/>\n-  \n-  <RAttr id=\"995\" owner_id=\"13\" schema_name=\"title\"/>\n-  <RAttrValue attribute_id=\"995\" id=\"95\" stringValue=\"r13\"/>\n+  <RVirAttrTemplate id=\"101\" owner_id=\"3\" schema_name=\"rvirtualdata\"/>\n \n-  <MAttr id=\"100\" owner_id=\"4\" schema_name=\"subscriptionDate\"/>\n+  <MAttrTemplate id=\"98\" owner_id=\"1\" schema_name=\"mderived_sx\"/>\n+  \n+  <MAttrTemplate id=\"99\" owner_id=\"1\" schema_name=\"mderived_dx\"/>\n \n+  <MAttrTemplate id=\"100\" owner_id=\"7\" schema_name=\"subscriptionDate\"/>\n+  <MAttr id=\"100\" owner_id=\"4\" template_id=\"100\"/>\n   <MAttrValue attribute_id=\"100\" id=\"90\" dateValue=\"2009-05-26\"/>\n   <MAttrValue attribute_id=\"100\" id=\"91\" dateValue=\"2010-05-26 15:40:04\"/>\n \n-  <MAttr id=\"102\" owner_id=\"1\" schema_name=\"mderived_sx\"/>\n+  <MAttrTemplate id=\"101\" owner_id=\"8\" schema_name=\"subscriptionDate\"/>\n+\n+  <MAttrTemplate id=\"102\" owner_id=\"1\" schema_name=\"mderived_sx\"/>\n+  <MAttr id=\"102\" owner_id=\"1\" template_id=\"102\"/>\n   <MAttrValue attribute_id=\"102\" id=\"92\" stringValue=\"sx\"/>\n \n-  <MAttr id=\"103\" owner_id=\"1\" schema_name=\"mderived_dx\"/>\n+  <MAttrTemplate id=\"103\" owner_id=\"1\" schema_name=\"mderived_dx\"/>\n+  <MAttr id=\"103\" owner_id=\"1\" template_id=\"103\"/>\n   <MAttrValue attribute_id=\"103\" id=\"93\" stringValue=\"dx\"/>\n \n-  <MDerSchema name=\"mderiveddata\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n-  <MDerAttr id=\"100\" derivedSchema_name=\"mderiveddata\" owner_id=\"1\"/>\n-    \n-  <MDerSchema name=\"mderToBePropagated\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n-\n-  <UVirSchema name=\"virtualdata\"/>\n-  <UVirAttr id=\"1000\" virtualSchema_name=\"virtualdata\" owner_id=\"3\"/>\n-\n-  <UDerSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n-  <UDerAttr id=\"100\" derivedSchema_name=\"cn\" owner_id=\"3\"/>\n-  <UDerAttr id=\"101\" derivedSchema_name=\"cn\" owner_id=\"1\"/>\n+  <MAttrTemplate id=\"104\" owner_id=\"12\" schema_name=\"postalAddress\"/>\n \n-  <UDerSchema name=\"noschema\" expression=\"surname + ', ' + notfound\"/>\n-\n-  <MVirSchema name=\"mvirtualdata\"/>\n-  <RVirSchema name=\"rvirtualdata\"/>\n-  <RVirAttr id=\"100\" virtualSchema_name=\"rvirtualdata\" owner_id=\"4\"/>\n+  <MDerAttrTemplate id=\"100\" owner_id=\"1\" schema_name=\"mderiveddata\"/>\n+  <MDerAttr id=\"100\" owner_id=\"1\" template_id=\"100\"/>\n+  \n+  <MDerAttrTemplate id=\"101\" owner_id=\"1\" schema_name=\"mderToBePropagated\"/>  \n+    \n+  <MVirAttrTemplate id=\"100\" owner_id=\"2\" schema_name=\"mvirtualdata\"/>\n \n   <ConnInstance id=\"100\" displayName=\"ConnInstance100\"\n                 location=\"${connid.location}\"\n@@ -785,8 +815,8 @@ under the License.\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++++%3Cdisposed%3Efalse%3C%2Fdisposed%3E%0A++++++++++%3CencryptedBytes%3Em9nh2US0Sa6m%2BcXccCq0Xw%3D%3D%3C%2FencryptedBytes%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>I\n   <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n-              performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n-              jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n   <Task DTYPE=\"NotificationTask\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n   <Task DTYPE=\"SyncTask\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\""},{"sha":"755f7ee3980eecf84df429a25a646f17cafaf224","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc5ad54bf23198264a01d72549f9cdd9fa26a768/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc5ad54bf23198264a01d72549f9cdd9fa26a768/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=fc5ad54bf23198264a01d72549f9cdd9fa26a768","patch":"@@ -317,7 +317,7 @@ under the License.\n     <jackson.version>2.2.3</jackson.version>\n     <xstream.version>1.4.4</xstream.version>\n     <velocity.version>1.7</velocity.version>\n-    <quartz.version>2.2.0</quartz.version>\n+    <quartz.version>2.2.1</quartz.version>\n \n     <openjpa.version>2.2.2</openjpa.version>\n     <bval.version>0.5</bval.version>"}]}