{"sha":"7ff49c1f5dc91303803dfc494854461e505c94f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdmZjQ5YzFmNWRjOTEzMDM4MDNkZmM0OTQ4NTQ0NjFlNTA1Yzk0ZjU=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-29T15:23:14Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-29T15:23:14Z"},"message":"SYNCOPE-231 Handling client side exceptions in UserRequestService create\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439928 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6f350f4d8a0665da9233e6a717a69dd14021063e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6f350f4d8a0665da9233e6a717a69dd14021063e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7ff49c1f5dc91303803dfc494854461e505c94f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ff49c1f5dc91303803dfc494854461e505c94f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7ff49c1f5dc91303803dfc494854461e505c94f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ff49c1f5dc91303803dfc494854461e505c94f5/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"1afa7b53156681fca707e2cc554f23c07358e742","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1afa7b53156681fca707e2cc554f23c07358e742","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1afa7b53156681fca707e2cc554f23c07358e742"}],"stats":{"total":40,"additions":33,"deletions":7},"files":[{"sha":"122b9679d1ab6aaee6ff9bd660b153e0269ad60c","filename":"core/src/main/java/org/apache/syncope/core/services/UserRequestServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java?ref=7ff49c1f5dc91303803dfc494854461e505c94f5","patch":"@@ -61,7 +61,7 @@ public Response create(final UserRequestTO userRequestTO) {\n             userRequestController.delete(userRequestTO.getUserId());\n         }\n         URI location = uriInfo.getAbsolutePathBuilder().path(\"\" + outUserRequestTO.getId()).build();\n-        return Response.created(location).entity(outUserRequestTO).build();\n+        return Response.created(location).entity(outUserRequestTO.getId()).build();\n     }\n \n     @Override"},{"sha":"2811a2b6cf3a67a7d3f7c258201ed5aaab91642e","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=7ff49c1f5dc91303803dfc494854461e505c94f5","patch":"@@ -26,14 +26,17 @@\n \n import javax.sql.DataSource;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n \n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.http.HttpStatus;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n+import org.apache.syncope.client.rest.utils.RestClientExceptionMapper;\n import org.apache.syncope.client.services.proxy.ConfigurationServiceProxy;\n import org.apache.syncope.client.services.proxy.ConnectorServiceProxy;\n import org.apache.syncope.client.services.proxy.EntitlementServiceProxy;\n@@ -144,6 +147,9 @@ public abstract class AbstractTest {\n     protected UserRequestService userRequestService;\n \n     protected PolicyService policyService;\n+    \n+    @Autowired\n+    protected RestClientExceptionMapper clientExceptionMapper;\n \n     @Before\n     public void setup() throws Exception {\n@@ -300,4 +306,17 @@ protected UserTO createUser(UserTO userTO) {\n         Response response = userService.create(userTO);\n         return response.readEntity(UserTO.class);\n     }\n+\n+    protected void assertCreated(Response response) {\n+        if (response.getStatus() != HttpStatus.SC_CREATED) {\n+            StringBuilder builder = new StringBuilder();\n+            MultivaluedMap<String, Object> headers = response.getHeaders();\n+            builder.append(\"Headers (\");\n+            for (String key : headers.keySet()) {\n+                builder.append(key + \":\" + headers.getFirst(key) + \",\");\n+            }\n+            builder.append(\")\");\n+            throw new RuntimeException(\"Error on create. Status is : \" + response.getStatus() + \" with headers \" + builder.toString());\n+        }\n+    }\n }"},{"sha":"a6571cf474628ea7424a92a01c71a46b1cc78e25","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ff49c1f5dc91303803dfc494854461e505c94f5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=7ff49c1f5dc91303803dfc494854461e505c94f5","patch":"@@ -64,7 +64,7 @@ public void create() {\n         // 2. get unauthorized when trying to request user create\n         SyncopeClientException exception = null;\n         try {\n-            userRequestService.create(new UserRequestTO(userTO));\n+            createUserRequest(new UserRequestTO(userTO));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -117,7 +117,7 @@ public void update() {\n         // 2. try to request user update as admin: failure\n         SyncopeClientException exception = null;\n         try {\n-            userRequestService.create(new UserRequestTO(userMod));\n+            createUserRequest(new UserRequestTO(userMod));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -130,7 +130,7 @@ public void update() {\n         // 4. update with same password: not matching password policy\n         exception = null;\n         try {\n-            userRequestService.create(new UserRequestTO(userMod));\n+            createUserRequest(new UserRequestTO(userMod));\n         } catch (SyncopeClientCompositeErrorException scce) {\n             exception = scce.getException(SyncopeClientExceptionType.InvalidSyncopeUser);\n         }\n@@ -169,7 +169,7 @@ public void delete() {\n         // 2. try to request user delete as admin: failure\n         SyncopeClientException exception = null;\n         try {\n-            userRequestService.create(new UserRequestTO(userTO.getId()));\n+            createUserRequest(new UserRequestTO(userTO.getId()));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n@@ -180,8 +180,7 @@ public void delete() {\n         super.setupRestTemplate(userTO.getUsername(), initialPassword);\n \n         // 4. now request user delete works\n-        Response response = userRequestService.create(new UserRequestTO(userTO.getId()));\n-        assertEquals(org.apache.http.HttpStatus.SC_CREATED, response.getStatus());\n+        createUserRequest(new UserRequestTO(userTO.getId()));\n \n         // 5. switch back to admin\n         super.resetRestTemplate();\n@@ -201,4 +200,12 @@ public void delete() {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n+\n+    private Long createUserRequest(UserRequestTO userRequestTO) throws RuntimeException {\n+        Response response = userRequestService.create(userRequestTO);\n+        if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n+            throw (RuntimeException)clientExceptionMapper.fromResponse(response);\n+        }\n+        return (Long) response.readEntity(Long.class);\n+    }\n }"}]}