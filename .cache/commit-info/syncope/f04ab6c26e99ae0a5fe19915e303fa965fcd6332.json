{"sha":"f04ab6c26e99ae0a5fe19915e303fa965fcd6332","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYwNGFiNmMyNmU5OWFlMGE1ZmUxOTkxNWUzMDNmYTk2NWZjZDYzMzI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-31T14:10:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-31T14:16:53Z"},"message":"[SYNCOPE-152] Implementations for /ServiceProviderConfig /ResourceTypes and /Schemas - still static","tree":{"sha":"2906b0262d09e0e74af8935440f4ba14d3767dba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2906b0262d09e0e74af8935440f4ba14d3767dba"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f04ab6c26e99ae0a5fe19915e303fa965fcd6332","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f04ab6c26e99ae0a5fe19915e303fa965fcd6332","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f04ab6c26e99ae0a5fe19915e303fa965fcd6332","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5697a5f90a9e26547012f37040efff1eba90ba34","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5697a5f90a9e26547012f37040efff1eba90ba34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5697a5f90a9e26547012f37040efff1eba90ba34"}],"stats":{"total":2071,"additions":1999,"deletions":72},"files":[{"sha":"abc90b1a69204663380053f31281f7ae21522b15","filename":"ext/scimv2/logic/pom.xml","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fpom.xml?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 Logic</name>\n+  <description>Apache Syncope Ext: SCIMv2 Logic</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-logic</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-scim-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"75d0ecfc92cd0cfc80bb2b497adc1bb77af9b77c","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/RootLogic.java","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRootLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRootLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRootLogic.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.core.UriBuilder;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.core.logic.init.SCIMLoader;\n+import org.apache.syncope.ext.scimv2.api.data.AuthenticationScheme;\n+import org.apache.syncope.ext.scimv2.api.data.BulkConfigurationOption;\n+import org.apache.syncope.ext.scimv2.api.data.ConfigurationOption;\n+import org.apache.syncope.ext.scimv2.api.data.FilterConfigurationOption;\n+import org.apache.syncope.ext.scimv2.api.data.Meta;\n+import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.data.SchemaExtension;\n+import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RootLogic extends AbstractLogic<AbstractBaseBean> {\n+\n+    private static final Object MONITOR = new Object();\n+\n+    private static ServiceProviderConfig SERVICE_PROVIDER_CONFIG;\n+\n+    private static ResourceType USER;\n+\n+    private static ResourceType GROUP;\n+\n+    @Autowired\n+    private SCIMLoader loader;\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public ServiceProviderConfig serviceProviderConfig() {\n+        synchronized (MONITOR) {\n+            if (SERVICE_PROVIDER_CONFIG == null) {\n+                SERVICE_PROVIDER_CONFIG = new ServiceProviderConfig(\n+                        new ConfigurationOption(true),\n+                        new BulkConfigurationOption(\n+                                true, loader.getBulkMaxOperations(), loader.getBulkMaxPayloadSize()),\n+                        new FilterConfigurationOption(true, loader.getFilterMaxResults()),\n+                        new ConfigurationOption(true),\n+                        new ConfigurationOption(true),\n+                        new ConfigurationOption(true));\n+                SERVICE_PROVIDER_CONFIG.getAuthenticationSchemes().add(new AuthenticationScheme(\n+                        \"JSON Web Token\",\n+                        \"Apache Syncope JWT authentication\",\n+                        URI.create(\"http://www.rfc-editor.org/info/rfc6750\"),\n+                        URI.create(\"https://syncope.apache.org/docs/\"\n+                                + \"reference-guide.html#rest-authentication-and-authorization\"),\n+                        \"oauthbearertoken\",\n+                        true));\n+                SERVICE_PROVIDER_CONFIG.getAuthenticationSchemes().add(new AuthenticationScheme(\n+                        \"HTTP Basic\",\n+                        \"Apache Syncope HTTP Basic authentication\",\n+                        URI.create(\"http://www.rfc-editor.org/info/rfc2617\"),\n+                        URI.create(\"https://syncope.apache.org/docs/\"\n+                                + \"reference-guide.html#rest-authentication-and-authorization\"),\n+                        \"httpbasic\",\n+                        false));\n+            }\n+        }\n+        return SERVICE_PROVIDER_CONFIG;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public List<ResourceType> resourceTypes(final UriBuilder uriBuilder) {\n+        synchronized (MONITOR) {\n+            if (USER == null) {\n+                USER = new ResourceType(\"User\", \"User\", \"/Users\", \"User Account\", Resource.User.schema(),\n+                        new Meta(Resource.ResourceType,\n+                                null, null, null, uriBuilder.path(\"User\").build().toASCIIString()));\n+                USER.getSchemaExtensions().add(new SchemaExtension(Resource.EnterpriseUser.schema(), true));\n+            }\n+            if (GROUP == null) {\n+                GROUP = new ResourceType(\"Group\", \"Group\", \"/Groups\", \"Group\", Resource.Group.schema(),\n+                        new Meta(Resource.ResourceType,\n+                                null, null, null, uriBuilder.path(\"Group\").build().toASCIIString()));\n+            }\n+        }\n+\n+        return Arrays.asList(USER, GROUP);\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public ResourceType resourceType(final UriBuilder uriBuilder, final String type) {\n+        if (Resource.User.name().equals(type)) {\n+            resourceTypes(uriBuilder);\n+            return USER;\n+        } else if (Resource.Group.name().equals(type)) {\n+            resourceTypes(uriBuilder);\n+            return GROUP;\n+        } else {\n+            throw new IllegalArgumentException(\"Unsupported resource type: \" + type);\n+        }\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public String schemas() {\n+        return loader.getSchemas();\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public String schema(final String schema) {\n+        String found = loader.getSchema(schema);\n+        if (found == null) {\n+            throw new NotFoundException(\"Schema \" + schema);\n+        }\n+\n+        return found;\n+    }\n+\n+    @Override\n+    protected AbstractBaseBean resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+\n+}"},{"sha":"894ba24c4130a9be97183672ea0da38cd00ef254","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/init/SCIMLoader.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.init;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SCIMLoader implements SyncopeLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SCIMLoader.class);\n+\n+    private static final String SCIMV2_LOGIC_PROPERTIES = \"scimv2-logic.properties\";\n+\n+    private static final String SCHEMAS = \"schemas.json\";\n+\n+    private int bulkMaxOperations = 0;\n+\n+    private int bulkMaxPayloadSize = 0;\n+\n+    private int filterMaxResults = 0;\n+\n+    private String schemas;\n+\n+    private final Map<String, String> schemaMap = new HashMap<>();\n+\n+    @Override\n+    public Integer getPriority() {\n+        return 1000;\n+    }\n+\n+    @Override\n+    public void load() {\n+        Pair<Properties, String> init = PropertyUtils.read(getClass(), SCIMV2_LOGIC_PROPERTIES, \"conf.directory\");\n+        Properties props = init.getLeft();\n+\n+        bulkMaxOperations = Integer.valueOf(props.getProperty(\"bulk.maxOperations\"));\n+        bulkMaxPayloadSize = Integer.valueOf(props.getProperty(\"bulk.maxPayloadSize\"));\n+        filterMaxResults = Integer.valueOf(props.getProperty(\"filter.maxResults\"));\n+\n+        try {\n+            ObjectMapper mapper = new ObjectMapper();\n+            JsonNode tree = mapper.readTree(getClass().getResourceAsStream(\"/\" + SCHEMAS));\n+            if (!tree.isArray()) {\n+                throw new IOException(\"JSON node is not a tree\");\n+            }\n+\n+            ArrayNode schemaArray = (ArrayNode) tree;\n+            schemas = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(tree);\n+\n+            for (JsonNode schema : schemaArray) {\n+                schemaMap.put(schema.get(\"id\").asText(), mapper.writeValueAsString(schema));\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"Could not parse the default schema definitions\", e);\n+        }\n+    }\n+\n+    public int getBulkMaxOperations() {\n+        return bulkMaxOperations;\n+    }\n+\n+    public int getBulkMaxPayloadSize() {\n+        return bulkMaxPayloadSize;\n+    }\n+\n+    public int getFilterMaxResults() {\n+        return filterMaxResults;\n+    }\n+\n+    public String getSchemas() {\n+        return schemas;\n+    }\n+\n+    public String getSchema(final String schema) {\n+        return schemaMap.get(schema);\n+    }\n+\n+}"},{"sha":"2b9558b93171312045b4c04099ecd1ac2c0c6157","filename":"ext/scimv2/logic/src/main/resources/schemas.json","status":"added","additions":960,"deletions":0,"changes":960,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fschemas.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fschemas.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fschemas.json?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,960 @@\n+[\n+  {\n+    \"id\": \"urn:ietf:params:scim:schemas:core:2.0:User\",\n+    \"name\": \"User\",\n+    \"description\": \"User Account\",\n+    \"attributes\": [\n+      {\n+        \"name\": \"userName\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Unique identifier for the User, typically used by the user to directly authenticate to the service provider. Each User MUST include a non-empty userName value. This identifier MUST be unique across the service provider's entire set of Users. REQUIRED.\",\n+        \"required\": true,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"server\"\n+      },\n+      {\n+        \"name\": \"name\",\n+        \"type\": \"complex\",\n+        \"multiValued\": false,\n+        \"description\": \"The components of the user's real name. Providers MAY return just the full name as a single string in the formatted sub-attribute, or they MAY return just the individual component attributes using the other sub-attributes, or they MAY return both. If both variants are returned, they SHOULD be describing the same name, with the formatted name indicating how the component attributes should be combined.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"formatted\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The full name, including all middle names, titles, and suffixes as appropriate, formatted for display 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"familyName\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The family name of the User, or last name in most Western languages (e.g., 'Jensen' given the full name 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"givenName\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The given name of the User, or first name in most Western languages (e.g., 'Barbara' given the full name 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"middleName\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The middle name(s) of the User (e.g., 'Jane' given the full name 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"honorificPrefix\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The honorific prefix(es) of the User, or title in most Western languages (e.g., 'Ms.' given the full name 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"honorificSuffix\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The honorific suffix(es) of the User, or suffix in most Western languages (e.g., 'III' given the full name 'Ms. Barbara J Jensen, III').\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"displayName\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"The name of the User, suitable for display to end-users. The name SHOULD be the full name of the User being described, if known.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"nickName\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"The casual way to address the user in real life, e.g., 'Bob' or 'Bobby' instead of 'Robert'. This attribute SHOULD NOT be used to represent a User's username (e.g., 'bjensen' or 'mpepperidge').\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"profileUrl\",\n+        \"type\": \"reference\",\n+        \"referenceTypes\": [\"external\"],\n+        \"multiValued\": false,\n+        \"description\": \"A fully qualified URL pointing to a page representing the User's online profile.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"title\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"The user's title, such as \\\"Vice President.\\\"\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"userType\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Used to identify the relationship between the organization and the user. Typical values used might be 'Contractor', 'Employee', 'Intern', 'Temp', 'External', and 'Unknown', but any value may be used.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"preferredLanguage\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Indicates the User's preferred written or spoken language. Generally used for selecting a localized user interface; e.g., 'en_US' specifies the language English and country US.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"locale\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Used to indicate the User's default location for purposes of localizing items such as currency, date time format, or numerical representations.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"timezone\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"The User's time zone in the 'Olson' time zone database format, e.g., 'America/Los_Angeles'.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"active\",\n+        \"type\": \"boolean\",\n+        \"multiValued\": false,\n+        \"description\": \"A Boolean value indicating the User's administrative status.\",\n+        \"required\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"password\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"The User's cleartext password. This attribute is intended to be used as a means to specify an initial password when creating a new User or to reset an existing User's password.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"writeOnly\",\n+        \"returned\": \"never\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"emails\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"Email addresses for the user. The value SHOULD be canonicalized by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home', and 'other'.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"Email addresses for the user. The value SHOULD be canonicalized by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home', and 'other'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, e.g., 'work' or 'home'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"work\",\n+              \"home\",\n+              \"other\"\n+            ],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred mailing address or primary email address. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"phoneNumbers\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"Phone numbers for the User. The value SHOULD be canonicalized by the service provider according to the format specified in RFC 3966, e.g., 'tel:+1-201-555-0123'. Canonical type values of 'work', 'home', 'mobile', 'fax', 'pager', and 'other'.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"Phone number of the User.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, e.g., 'work', 'home', 'mobile'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"work\",\n+              \"home\",\n+              \"mobile\",\n+              \"fax\",\n+              \"pager\",\n+              \"other\"\n+            ],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred phone number or primary phone number. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"ims\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"Instant messaging addresses for the User.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"Instant messaging address for the User.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, e.g., 'aim', 'gtalk', 'xmpp'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"aim\",\n+              \"gtalk\",\n+              \"icq\",\n+              \"xmpp\",\n+              \"msn\",\n+              \"skype\",\n+              \"qq\",\n+              \"yahoo\"\n+            ],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred messenger or primary messenger. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"photos\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"URLs of photos of the User.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"reference\",\n+            \"referenceTypes\": [\"external\"],\n+            \"multiValued\": false,\n+            \"description\": \"URL of a photo of the User.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, i.e., 'photo' or 'thumbnail'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"photo\",\n+              \"thumbnail\"\n+            ],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred photo or thumbnail. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"addresses\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A physical mailing address for this User. Canonical type values of 'work', 'home', and 'other'. This attribute is a complex type with the following sub-attributes.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"formatted\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The full mailing address, formatted for display or use with a mailing label. This attribute MAY contain newlines.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"streetAddress\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information. This attribute MAY contain newlines.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"locality\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The city or locality component.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"region\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The state or region component.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"postalCode\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The zip code or postal code component.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"country\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The country name component.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, e.g., 'work' or 'home'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"work\",\n+              \"home\",\n+              \"other\"\n+            ],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"groups\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A list of groups to which the user belongs, either through direct membership, through nested groups, or dynamically calculated.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The identifier of the User's group.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readOnly\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"$ref\",\n+            \"type\": \"reference\",\n+            \"referenceTypes\": [\n+              \"User\",\n+              \"Group\"\n+            ],\n+            \"multiValued\": false,\n+            \"description\": \"The URI of the corresponding 'Group' resource to which the user belongs.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readOnly\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readOnly\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function, e.g., 'direct' or 'indirect'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"direct\",\n+              \"indirect\"\n+            ],\n+            \"mutability\": \"readOnly\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          }\n+        ],\n+        \"mutability\": \"readOnly\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"entitlements\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A list of entitlements for the User that represent a thing the User has.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The value of an entitlement.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"roles\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A list of roles for the User that collectively represent who the User is, e.g., 'Student', 'Faculty'.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The value of a role.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      },\n+      {\n+        \"name\": \"x509Certificates\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A list of certificates issued to the User.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"binary\",\n+            \"multiValued\": false,\n+            \"description\": \"The value of an X.509 certificate.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"display\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A human-readable name, primarily used for display purposes. READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the attribute's function.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [],\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"primary\",\n+            \"type\": \"boolean\",\n+            \"multiValued\": false,\n+            \"description\": \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.\",\n+            \"required\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      }\n+    ],\n+    \"meta\": {\n+      \"resourceType\": \"Schema\",\n+      \"location\":\n+              \"/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User\"\n+    }\n+  },\n+  {\n+    \"id\": \"urn:ietf:params:scim:schemas:core:2.0:Group\",\n+    \"name\": \"Group\",\n+    \"description\": \"Group\",\n+    \"attributes\": [\n+      {\n+        \"name\": \"displayName\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"A human-readable name for the Group. REQUIRED.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"members\",\n+        \"type\": \"complex\",\n+        \"multiValued\": true,\n+        \"description\": \"A list of members of the Group.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"Identifier of the member of this Group.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"immutable\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"$ref\",\n+            \"type\": \"reference\",\n+            \"referenceTypes\": [\n+              \"User\",\n+              \"Group\"\n+            ],\n+            \"multiValued\": false,\n+            \"description\": \"The URI corresponding to a SCIM resource that is a member of this Group.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"immutable\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"type\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"A label indicating the type of resource, e.g., 'User' or 'Group'.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"canonicalValues\": [\n+              \"User\",\n+              \"Group\"\n+            ],\n+            \"mutability\": \"immutable\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      }\n+    ],\n+    \"meta\": {\n+      \"resourceType\": \"Schema\",\n+      \"location\":\n+              \"/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group\"\n+    }\n+  },\n+  {\n+    \"id\": \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\",\n+    \"name\": \"EnterpriseUser\",\n+    \"description\": \"Enterprise User\",\n+    \"attributes\": [\n+      {\n+        \"name\": \"employeeNumber\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Numeric or alphanumeric identifier assigned to a person, typically based on order of hire or association with an organization.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"costCenter\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Identifies the name of a cost center.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"organization\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Identifies the name of an organization.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"division\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Identifies the name of a division.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"department\",\n+        \"type\": \"string\",\n+        \"multiValued\": false,\n+        \"description\": \"Identifies the name of a department.\",\n+        \"required\": false,\n+        \"caseExact\": false,\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\",\n+        \"uniqueness\": \"none\"\n+      },\n+      {\n+        \"name\": \"manager\",\n+        \"type\": \"complex\",\n+        \"multiValued\": false,\n+        \"description\": \"The User's manager. A complex type that optionally allows service providers to represent organizational hierarchy by referencing the 'id' attribute of another User.\",\n+        \"required\": false,\n+        \"subAttributes\": [\n+          {\n+            \"name\": \"value\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The id of the SCIM resource representing the User's manager. REQUIRED.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"$ref\",\n+            \"type\": \"reference\",\n+            \"referenceTypes\": [\n+              \"User\"\n+            ],\n+            \"multiValued\": false,\n+            \"description\": \"The URI of the SCIM resource representing the User's manager. REQUIRED.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readWrite\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          },\n+          {\n+            \"name\": \"displayName\",\n+            \"type\": \"string\",\n+            \"multiValued\": false,\n+            \"description\": \"The displayName of the User's manager. OPTIONAL and READ-ONLY.\",\n+            \"required\": false,\n+            \"caseExact\": false,\n+            \"mutability\": \"readOnly\",\n+            \"returned\": \"default\",\n+            \"uniqueness\": \"none\"\n+          }\n+        ],\n+        \"mutability\": \"readWrite\",\n+        \"returned\": \"default\"\n+      }\n+    ],\n+    \"meta\": {\n+      \"resourceType\": \"Schema\",\n+      \"location\": \"/v2/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\"\n+    }\n+  }\n+]\n\\ No newline at end of file"},{"sha":"2d85a37ec76a1de2f8572fd371c7d4affe4cf801","filename":"ext/scimv2/logic/src/main/resources/scimv2-logic.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fscimv2-logic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fscimv2-logic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fresources%2Fscimv2-logic.properties?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+conf.directory=${conf.directory}\n+\n+bulk.maxOperations=1000\n+bulk.maxPayloadSize=1048576\n+filter.maxResults=200"},{"sha":"bc62e00531809dd96e079ae6d8cfd4501c91e4a2","filename":"ext/scimv2/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fpom.xml?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -40,6 +40,7 @@ under the License.\n   <modules>\n     <module>scim-rest-api</module>\n     <module>scim-rest-cxf</module>\n+    <module>logic</module>\n   </modules>\n \n </project>"},{"sha":"10e3f7722e4717a11bc9f808df4dd9c5dd33d83d","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/AuthenticationScheme.java","status":"added","additions":82,"deletions":0,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FAuthenticationScheme.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FAuthenticationScheme.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FAuthenticationScheme.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.net.URI;\n+\n+public class AuthenticationScheme extends SCIMBean {\n+\n+    private static final long serialVersionUID = -1326661422976856869L;\n+\n+    private final String name;\n+\n+    private final String description;\n+\n+    private final URI specUri;\n+\n+    private final URI documentationUri;\n+\n+    private final String type;\n+\n+    private final boolean primary;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public AuthenticationScheme(\n+            @JsonProperty(\"name\") final String name,\n+            @JsonProperty(\"description\") final String description,\n+            @JsonProperty(\"specUri\") final URI specUri,\n+            @JsonProperty(\"documentationUri\") final URI documentationUri,\n+            @JsonProperty(\"type\") final String type,\n+            @JsonProperty(\"primary\") final boolean primary) {\n+\n+        this.name = name;\n+        this.description = description;\n+        this.specUri = specUri;\n+        this.documentationUri = documentationUri;\n+        this.type = type;\n+        this.primary = primary;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public URI getSpecUri() {\n+        return specUri;\n+    }\n+\n+    public URI getDocumentationUri() {\n+        return documentationUri;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public boolean isPrimary() {\n+        return primary;\n+    }\n+\n+}"},{"sha":"b81b652e9cda10750b124ed467e3b68cec6bd673","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/BulkConfigurationOption.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FBulkConfigurationOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FBulkConfigurationOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FBulkConfigurationOption.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class BulkConfigurationOption extends ConfigurationOption {\n+\n+    private static final long serialVersionUID = 8218541842239260269L;\n+\n+    private final int maxOperations;\n+\n+    private final int maxPayloadSize;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public BulkConfigurationOption(\n+            @JsonProperty(\"supported\") final boolean supported,\n+            @JsonProperty(\"maxOperations\") final int maxOperations,\n+            @JsonProperty(\"maxPayloadSize\") final int maxPayloadSize) {\n+\n+        super(supported);\n+        this.maxOperations = maxOperations;\n+        this.maxPayloadSize = maxPayloadSize;\n+    }\n+\n+    public int getMaxOperations() {\n+        return maxOperations;\n+    }\n+\n+    public int getMaxPayloadSize() {\n+        return maxPayloadSize;\n+    }\n+\n+}"},{"sha":"821cae451d94b94523dab66aaebb70c4bb06534b","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ConfigurationOption.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FConfigurationOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FConfigurationOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FConfigurationOption.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class ConfigurationOption extends SCIMBean {\n+\n+    private static final long serialVersionUID = 5165678196717776426L;\n+\n+    private final boolean supported;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public ConfigurationOption(@JsonProperty(\"supported\") final boolean supported) {\n+        this.supported = supported;\n+    }\n+\n+    public boolean isSupported() {\n+        return supported;\n+    }\n+\n+}"},{"sha":"3eda87ed57557e803d13ceffc623d5240de51d3e","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/FilterConfigurationOption.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FFilterConfigurationOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FFilterConfigurationOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FFilterConfigurationOption.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class FilterConfigurationOption extends ConfigurationOption {\n+\n+    private static final long serialVersionUID = 8218541842239260269L;\n+\n+    private final int maxResults;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public FilterConfigurationOption(\n+            @JsonProperty(\"supported\") final boolean supported,\n+            @JsonProperty(\"maxResults\") final int maxResults) {\n+\n+        super(supported);\n+        this.maxResults = maxResults;\n+    }\n+\n+    public int getMaxResults() {\n+        return maxResults;\n+    }\n+\n+}"},{"sha":"d20f50a78fdc76ab9df96de1c1f7b7b2d894be4c","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ListResponse.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -23,13 +23,13 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n \n public class ListResponse<R extends SCIMResource> extends SCIMBean {\n \n     private static final long serialVersionUID = -776611610457583160L;\n \n-    private final List<String> schemas = Arrays.asList(ResourceType.ListResponse.getSchema());\n+    private final List<String> schemas = Arrays.asList(Resource.ListResponse.schema());\n \n     private final int totalResults;\n "},{"sha":"aa2f5dd418354979c0e1e819ed1c875c81518610","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Member.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -21,21 +21,21 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n \n @JsonPropertyOrder({ \"value\", \"$ref\", \"display\", \"type\" })\n public class Member extends Reference {\n \n     private static final long serialVersionUID = 75245960461062907L;\n \n     @JsonIgnore\n-    private final ResourceType type;\n+    private final Resource type;\n \n     public Member(\n             @JsonProperty(\"value\") final String value,\n             @JsonProperty(\"$ref\") final String ref,\n             @JsonProperty(\"display\") final String display,\n-            @JsonProperty(\"type\") final ResourceType type) {\n+            @JsonProperty(\"type\") final Resource type) {\n \n         super(value, ref, display);\n         this.type = type;"},{"sha":"661ec86b96e89254fd42c37e198ee9bafaaae644","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Meta.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -21,16 +21,15 @@\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n import java.util.Date;\n import javax.ws.rs.core.EntityTag;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n \n-public class Meta implements Serializable {\n+public class Meta extends SCIMBean {\n \n     private static final long serialVersionUID = 8976451652101091915L;\n \n-    private final ResourceType resourceType;\n+    private final Resource resourceType;\n \n     private final Date created;\n \n@@ -43,7 +42,7 @@ public class Meta implements Serializable {\n \n     @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n     public Meta(\n-            @JsonProperty(\"resourceType\") final ResourceType resourceType,\n+            @JsonProperty(\"resourceType\") final Resource resourceType,\n             @JsonProperty(\"created\") final Date created,\n             @JsonProperty(\"lastModified\") final Date lastModified,\n             @JsonProperty(\"version\") final String version,\n@@ -52,11 +51,11 @@ public Meta(\n         this.resourceType = resourceType;\n         this.created = created;\n         this.lastModified = lastModified;\n-        this.version = new EntityTag(version);\n+        this.version = version == null ? null : new EntityTag(version, true);\n         this.location = location;\n     }\n \n-    public ResourceType getResourceType() {\n+    public Resource getResourceType() {\n         return resourceType;\n     }\n "},{"sha":"19dceacd55fa9206ecfa4e20c285ee6f71cae135","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ResourceType.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FResourceType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FResourceType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FResourceType.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+\n+public class ResourceType extends SCIMBean {\n+\n+    private static final long serialVersionUID = -6559584102333757279L;\n+\n+    private final List<String> schemas = Arrays.asList(Resource.ResourceType.schema());\n+\n+    private final String id;\n+\n+    private final String name;\n+\n+    private final String endpoint;\n+\n+    private final String description;\n+\n+    private final String schema;\n+\n+    private final List<SchemaExtension> schemaExtensions = new ArrayList<>();\n+\n+    private final Meta meta;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public ResourceType(\n+            @JsonProperty(\"id\") final String id,\n+            @JsonProperty(\"name\") final String name,\n+            @JsonProperty(\"endpoint\") final String endpoint,\n+            @JsonProperty(\"description\") final String description,\n+            @JsonProperty(\"schema\") final String schema,\n+            @JsonProperty(\"meta\") final Meta meta) {\n+\n+        this.id = id;\n+        this.name = name;\n+        this.endpoint = endpoint;\n+        this.description = description;\n+        this.schema = schema;\n+        this.meta = meta;\n+    }\n+\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getEndpoint() {\n+        return endpoint;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    public List<SchemaExtension> getSchemaExtensions() {\n+        return schemaExtensions;\n+    }\n+\n+    public Meta getMeta() {\n+        return meta;\n+    }\n+\n+}"},{"sha":"fb2fe2e5480ae5bff0da805afdaa6f0e6d0c4147","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SchemaExtension.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSchemaExtension.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSchemaExtension.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSchemaExtension.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class SchemaExtension extends SCIMBean {\n+\n+    private static final long serialVersionUID = -2891887818183122384L;\n+\n+    private final String schema;\n+\n+    private final boolean required;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public SchemaExtension(\n+            @JsonProperty(\"schema\") final String schema,\n+            @JsonProperty(\"required\") final boolean required) {\n+\n+        this.schema = schema;\n+        this.required = required;\n+    }\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+    public boolean isRequired() {\n+        return required;\n+    }\n+\n+}"},{"sha":"3014a6c2acfd40cce90b852f4df90495a1114e0a","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ServiceProviderConfig.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FServiceProviderConfig.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+\n+public class ServiceProviderConfig extends SCIMBean {\n+\n+    private static final long serialVersionUID = 1027738509789460252L;\n+\n+    private final List<String> schemas = Arrays.asList(Resource.ServiceProviderConfig.schema());\n+\n+    private final ConfigurationOption patch;\n+\n+    private final BulkConfigurationOption bulk;\n+\n+    private final FilterConfigurationOption filter;\n+\n+    private final ConfigurationOption changePassword;\n+\n+    private final ConfigurationOption sort;\n+\n+    private final ConfigurationOption etag;\n+\n+    private final List<AuthenticationScheme> authenticationSchemes = new ArrayList<>();\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public ServiceProviderConfig(\n+            @JsonProperty(\"patch\") final ConfigurationOption patch,\n+            @JsonProperty(\"bulk\") final BulkConfigurationOption bulk,\n+            @JsonProperty(\"filter\") final FilterConfigurationOption filter,\n+            @JsonProperty(\"changePassword\") final ConfigurationOption changePassword,\n+            @JsonProperty(\"sort\") final ConfigurationOption sort,\n+            @JsonProperty(\"etag\") final ConfigurationOption etag) {\n+\n+        this.patch = patch;\n+        this.bulk = bulk;\n+        this.filter = filter;\n+        this.changePassword = changePassword;\n+        this.sort = sort;\n+        this.etag = etag;\n+    }\n+\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+    public ConfigurationOption getPatch() {\n+        return patch;\n+    }\n+\n+    public BulkConfigurationOption getBulk() {\n+        return bulk;\n+    }\n+\n+    public FilterConfigurationOption getFilter() {\n+        return filter;\n+    }\n+\n+    public ConfigurationOption getChangePassword() {\n+        return changePassword;\n+    }\n+\n+    public ConfigurationOption getSort() {\n+        return sort;\n+    }\n+\n+    public ConfigurationOption getEtag() {\n+        return etag;\n+    }\n+\n+    public List<AuthenticationScheme> getAuthenticationSchemes() {\n+        return authenticationSchemes;\n+    }\n+\n+}"},{"sha":"8881ec8edadb878839e525a36a321755250e74e1","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/GroupService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n \n-@Path(\"Groups\")\n+@Path(\"v2/Groups\")\n public interface GroupService extends SCIMService<SCIMGroup> {\n \n     @POST"},{"sha":"6e9b201fe8014f7f1d85d061ca8e6a65d4152544","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/RootService.java","status":"modified","additions":19,"deletions":5,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -18,28 +18,42 @@\n  */\n package org.apache.syncope.ext.scimv2.api.service;\n \n+import java.util.List;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n \n-@Path(\"\")\n-public interface RootService extends SCIMService {\n+@Path(\"v2\")\n+public interface RootService extends SCIMService<SCIMResource> {\n \n     @GET\n-    @Path(\"ServiceProviderConfigs\")\n+    @Path(\"ServiceProviderConfig\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    Response serviceProviderConfigs();\n+    ServiceProviderConfig serviceProviderConfig();\n \n     @GET\n     @Path(\"ResourceTypes\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    Response resourceTypes();\n+    List<ResourceType> resourceTypes();\n+\n+    @GET\n+    @Path(\"ResourceTypes/{type}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    ResourceType resourceType(@PathParam(\"type\") String type);\n \n     @GET\n     @Path(\"Schemas\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n     Response schemas();\n \n+    @GET\n+    @Path(\"Schemas/{schema}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response schema(@PathParam(\"schema\") String schema);\n }"},{"sha":"8003b66c4e24fafdd91794d55b43f9d43c9dc655","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/UserService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n \n-@Path(\"Users\")\n+@Path(\"v2/Users\")\n public interface UserService extends SCIMService<SCIMUser> {\n \n     @POST"},{"sha":"37b15b6556f0c5d28d87ab422952d6d7aff8cfaf","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/Resource.java","status":"renamed","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResource.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -18,19 +18,23 @@\n  */\n package org.apache.syncope.ext.scimv2.api.type;\n \n-public enum ResourceType {\n+public enum Resource {\n \n+    ServiceProviderConfig(\"urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\"),\n+    ResourceType(\"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"),\n+    Schema(\"urn:ietf:params:scim:schemas:core:2.0:Schema\"),\n     User(\"urn:ietf:params:scim:schemas:core:2.0:User\"),\n+    EnterpriseUser(\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\"),\n     Group(\"urn:ietf:params:scim:schemas:core:2.0:Group\"),\n     ListResponse(\"urn:ietf:params:scim:api:messages:2.0:ListResponse\");\n \n     private final String schema;\n \n-    ResourceType(final String schema) {\n+    Resource(final String schema) {\n         this.schema = schema;\n     }\n \n-    public String getSchema() {\n+    public String schema() {\n         return schema;\n     }\n ","previous_filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/ResourceType.java"},{"sha":"25a924930d936b608fac2426759b828245683ade","filename":"ext/scimv2/scim-rest-cxf/pom.xml","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -97,14 +97,9 @@ under the License.\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-logic</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.ext.scimv2</groupId>\n-      <artifactId>syncope-ext-scimv2-scim-rest-api</artifactId>\n+      <artifactId>syncope-ext-scimv2-logic</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n   </dependencies>"},{"sha":"498ea954c41d684f57c2626d58fd91557eefa4af","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/AddETagFilter.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FAddETagFilter.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf;\n+\n+import java.io.IOException;\n+import java.util.Date;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.core.EntityTag;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.ext.Provider;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+\n+@Provider\n+public class AddETagFilter implements ContainerResponseFilter {\n+\n+    @Override\n+    public void filter(final ContainerRequestContext reqCtx, final ContainerResponseContext resCtx) throws IOException {\n+        if (resCtx.getEntityTag() == null) {\n+            Date lastModified = null;\n+            if (resCtx.getEntity() instanceof SCIMUser) {\n+                lastModified = ((SCIMUser) resCtx.getEntity()).getMeta().getLastModified();\n+                if (resCtx.getEntity() instanceof SCIMGroup) {\n+                    lastModified = ((SCIMGroup) resCtx.getEntity()).getMeta().getLastModified();\n+                }\n+\n+                if (lastModified != null) {\n+                    String etagValue = String.valueOf(lastModified.getTime());\n+                    if (StringUtils.isNotBlank(etagValue)) {\n+                        resCtx.getHeaders().add(HttpHeaders.ETAG, new EntityTag(etagValue).toString());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"},{"sha":"cd31e1f33d64af0812d7b529fe0a88514d044241","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractSCIMService.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -47,7 +47,7 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n import org.apache.syncope.ext.scimv2.api.service.SCIMService;\n import org.apache.syncope.ext.scimv2.api.type.Function;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -84,7 +84,7 @@ protected GroupLogic groupLogic() {\n         return groupLogic;\n     }\n \n-    protected AbstractAnyLogic<?, ?> anyLogic(final ResourceType type) {\n+    protected AbstractAnyLogic<?, ?> anyLogic(final Resource type) {\n         switch (type) {\n             case User:\n                 return userLogic();\n@@ -100,11 +100,12 @@ protected GroupLogic groupLogic() {\n     protected SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n         SCIMUser user = new SCIMUser(\n                 userTO.getKey(),\n-                Collections.singletonList(ResourceType.User.getSchema()),\n+                Collections.singletonList(Resource.User.schema()),\n                 new Meta(\n-                        ResourceType.User,\n+                        Resource.User,\n                         userTO.getCreationDate(),\n-                        userTO.getLastChangeDate(),\n+                        userTO.getLastChangeDate() == null\n+                        ? userTO.getCreationDate() : userTO.getLastChangeDate(),\n                         userTO.getETagValue(),\n                         location),\n                 userTO.getUsername(),\n@@ -135,11 +136,12 @@ protected SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n     protected SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n         SCIMGroup group = new SCIMGroup(\n                 groupTO.getKey(),\n-                Collections.singletonList(ResourceType.Group.getSchema()),\n+                Collections.singletonList(Resource.Group.schema()),\n                 new Meta(\n-                        ResourceType.Group,\n+                        Resource.Group,\n                         groupTO.getCreationDate(),\n-                        groupTO.getLastChangeDate(),\n+                        groupTO.getLastChangeDate() == null\n+                        ? groupTO.getCreationDate() : groupTO.getLastChangeDate(),\n                         groupTO.getETagValue(),\n                         location),\n                 groupTO.getName());\n@@ -166,7 +168,7 @@ protected SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n                         userTO.getKey(),\n                         StringUtils.substringBefore(location, \"/Groups\") + \"/Users/\" + userTO.getKey(),\n                         userTO.getUsername(),\n-                        ResourceType.User));\n+                        Resource.User));\n             });\n         }\n \n@@ -175,7 +177,7 @@ protected SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n \n     @SuppressWarnings(\"unchecked\")\n     protected ListResponse<R> doSearch(\n-            final ResourceType type,\n+            final Resource type,\n             final Integer startIndex,\n             final Integer count,\n             final String filter,"},{"sha":"85b9198a0556601b5cdf81882fabc0db0b28859d","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/GroupServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n import org.apache.syncope.ext.scimv2.api.service.GroupService;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n public class GroupServiceImpl extends AbstractSCIMService<SCIMGroup> implements GroupService {\n@@ -65,7 +65,7 @@ public ListResponse<SCIMGroup> search(\n             final SortOrder sortOrder,\n             final List<String> attributes) {\n \n-        return doSearch(ResourceType.Group, startIndex, count, filter, sortBy, sortOrder, attributes);\n+        return doSearch(Resource.Group, startIndex, count, filter, sortBy, sortOrder, attributes);\n     }\n \n }"},{"sha":"6038f2b677cc17d942d1b4c7539b0d8a8bb11b54","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/RootServiceImpl.java","status":"modified","additions":33,"deletions":6,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -18,24 +18,51 @@\n  */\n package org.apache.syncope.ext.scimv2.cxf.service;\n \n+import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.core.logic.RootLogic;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n import org.apache.syncope.ext.scimv2.api.service.RootService;\n \n-public class RootServiceImpl extends AbstractSCIMService implements RootService {\n+public class RootServiceImpl extends AbstractSCIMService<SCIMResource> implements RootService {\n+\n+    private RootLogic rootLogic;\n+\n+    protected RootLogic rootLogic() {\n+        synchronized (this) {\n+            if (rootLogic == null) {\n+                rootLogic = ApplicationContextProvider.getApplicationContext().getBean(RootLogic.class);\n+            }\n+        }\n+        return rootLogic;\n+    }\n \n     @Override\n-    public Response serviceProviderConfigs() {\n-        return Response.ok().build();\n+    public ServiceProviderConfig serviceProviderConfig() {\n+        return rootLogic().serviceProviderConfig();\n     }\n \n     @Override\n-    public Response resourceTypes() {\n-        return Response.ok().build();\n+    public List<ResourceType> resourceTypes() {\n+        return rootLogic().resourceTypes(uriInfo.getAbsolutePathBuilder());\n+    }\n+\n+    @Override\n+    public ResourceType resourceType(final String type) {\n+        return rootLogic().resourceType(uriInfo.getAbsolutePathBuilder(), type);\n     }\n \n     @Override\n     public Response schemas() {\n-        return Response.ok().build();\n+        return Response.ok(rootLogic().schemas()).build();\n+    }\n+\n+    @Override\n+    public Response schema(final String schema) {\n+        return Response.ok(rootLogic().schema(schema)).build();\n     }\n \n }"},{"sha":"c12ed6c4d19df0977785a6867fc0c389dc34fd75","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n import org.apache.syncope.ext.scimv2.api.service.UserService;\n-import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n public class UserServiceImpl extends AbstractSCIMService<SCIMUser> implements UserService {\n@@ -65,6 +65,6 @@ public ListResponse<SCIMUser> search(\n             final SortOrder sortOrder,\n             final List<String> attributes) {\n \n-        return doSearch(ResourceType.User, startIndex, count, filter, sortBy, sortOrder, attributes);\n+        return doSearch(Resource.User, startIndex, count, filter, sortBy, sortOrder, attributes);\n     }\n }"},{"sha":"ebbbe6e1029e38d62c23170c6002dea8fd3043af","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/restSCIMv2CXFContext.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -49,6 +49,8 @@ under the License.\n     <property name=\"force\" value=\"true\"/>\n   </bean>\n \n+  <bean id=\"addETagFilter\" class=\"org.apache.syncope.ext.scimv2.cxf.AddETagFilter\"/>\n+\n   <bean id=\"wadlGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n     <property name=\"applicationTitle\" value=\"Apache Syncope SCIMv2 ${syncope.version}\"/>\n     <property name=\"namespacePrefix\" value=\"syncope2\"/>\n@@ -76,6 +78,7 @@ under the License.\n     </jaxrs:outInterceptors>\n     <jaxrs:providers>\n       <ref bean=\"jsonProvider\"/>\n+      <ref bean=\"addETagFilter\"/>\n       <ref bean=\"wadlGenerator\"/>\n     </jaxrs:providers>\n   </jaxrs:server>"},{"sha":"2d85a37ec76a1de2f8572fd371c7d4affe4cf801","filename":"fit/core-reference/src/main/resources/all/scimv2-logic.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fscimv2-logic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fscimv2-logic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fscimv2-logic.properties?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+conf.directory=${conf.directory}\n+\n+bulk.maxOperations=1000\n+bulk.maxPayloadSize=1048576\n+filter.maxResults=200"},{"sha":"265e292410c43948fd41df4483e1c91b4e7f0c90","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/SCIMDetector.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -18,12 +18,8 @@\n  */\n package org.apache.syncope.fit;\n \n-import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n-import javax.xml.bind.DatatypeConverter;\n import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n-import org.apache.syncope.fit.core.SCIMITCase;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -33,16 +29,11 @@ public class SCIMDetector {\n \n     private static Boolean ENABLED;\n \n-    public static boolean isSCIMAvailable() {\n+    public static boolean isSCIMAvailable(final WebClient webClient) {\n         synchronized (LOG) {\n             if (ENABLED == null) {\n                 try {\n-                    Response response = WebClient.create(SCIMITCase.SCIM_ADDRESS).path(\"ServiceProviderConfigs\").\n-                            accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n-                            header(HttpHeaders.AUTHORIZATION,\n-                                    \"Basic \" + DatatypeConverter.printBase64Binary(\n-                                            (AbstractITCase.ADMIN_UNAME + \":\" + AbstractITCase.ADMIN_PWD).getBytes())).\n-                            get();\n+                    Response response = webClient.path(\"ServiceProviderConfig\").get();\n                     ENABLED = response.getStatus() == 200;\n                 } catch (Exception e) {\n                     // ignore"},{"sha":"0e85639d94151593bce372d4e566d6cd6d260791","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":76,"deletions":13,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -24,45 +24,110 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n import java.io.IOException;\n-import java.io.InputStream;\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n+import org.apache.syncope.ext.scimv2.api.type.Resource;\n+import org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider;\n import org.apache.syncope.fit.AbstractITCase;\n import org.apache.syncope.fit.SCIMDetector;\n import org.junit.jupiter.api.Test;\n \n public class SCIMITCase extends AbstractITCase {\n \n-    public static final String SCIM_ADDRESS = \"http://localhost:9080/syncope/scim\";\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n+    public static final String SCIM_ADDRESS = \"http://localhost:9080/syncope/scim/v2\";\n \n     private WebClient webClient() {\n-        return WebClient.create(SCIM_ADDRESS).\n+        return WebClient.create(SCIM_ADDRESS, Arrays.asList(new JacksonSCIMJsonProvider())).\n                 accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n                 header(HttpHeaders.AUTHORIZATION, \"Bearer \" + adminClient.getJWT());\n     }\n \n+    @Test\n+    public void serviceProviderConfig() {\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n+\n+        Response response = webClient().path(\"ServiceProviderConfig\").get();\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        ServiceProviderConfig serviceProviderConfig = response.readEntity(ServiceProviderConfig.class);\n+        assertNotNull(serviceProviderConfig);\n+        assertTrue(serviceProviderConfig.getEtag().isSupported());\n+    }\n+\n+    @Test\n+    public void resourceTypes() {\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n+\n+        Response response = webClient().path(\"ResourceTypes\").get();\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        List<ResourceType> resourceTypes = response.readEntity(new GenericType<List<ResourceType>>() {\n+        });\n+        assertNotNull(resourceTypes);\n+        assertEquals(2, resourceTypes.size());\n+\n+        response = webClient().path(\"ResourceTypes\").path(\"User\").get();\n+        assertEquals(200, response.getStatus());\n+\n+        ResourceType user = response.readEntity(ResourceType.class);\n+        assertNotNull(user);\n+        assertEquals(Resource.User.schema(), user.getSchema());\n+        assertFalse(user.getSchemaExtensions().isEmpty());\n+    }\n+\n+    @Test\n+    public void schemas() {\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n+\n+        Response response = webClient().path(\"Schemas\").get();\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        ArrayNode schemas = response.readEntity(ArrayNode.class);\n+        assertNotNull(schemas);\n+        assertEquals(3, schemas.size());\n+\n+        response = webClient().path(\"Schemas\").path(Resource.EnterpriseUser.schema()).get();\n+        assertEquals(200, response.getStatus());\n+\n+        ObjectNode enterpriseUser = response.readEntity(ObjectNode.class);\n+        assertNotNull(enterpriseUser);\n+        assertEquals(Resource.EnterpriseUser.schema(), enterpriseUser.get(\"id\").textValue());\n+    }\n+\n     @Test\n     public void read() throws IOException {\n-        assumeTrue(SCIMDetector.isSCIMAvailable());\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n \n         Response response = webClient().path(\"Users\").path(\"1417acbe-cbf6-4277-9372-e75e04f97000\").get();\n         assertEquals(200, response.getStatus());\n         assertEquals(\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        SCIMUser user = MAPPER.readValue((InputStream) response.getEntity(), SCIMUser.class);\n+        SCIMUser user = response.readEntity(SCIMUser.class);\n         assertNotNull(user);\n         assertEquals(\"1417acbe-cbf6-4277-9372-e75e04f97000\", user.getId());\n         assertEquals(\"rossini\", user.getUserName());\n@@ -72,17 +137,15 @@ public void read() throws IOException {\n \n     @Test\n     public void list() throws IOException {\n-        assumeTrue(SCIMDetector.isSCIMAvailable());\n+        assumeTrue(SCIMDetector.isSCIMAvailable(webClient()));\n \n         Response response = webClient().path(\"Groups\").get();\n         assertEquals(200, response.getStatus());\n         assertEquals(\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        ListResponse<SCIMGroup> result = MAPPER.readValue(\n-                (InputStream) response.getEntity(),\n-                new TypeReference<ListResponse<SCIMGroup>>() {\n+        ListResponse<SCIMGroup> result = response.readEntity(new GenericType<ListResponse<SCIMGroup>>() {\n         });\n         assertNotNull(result);\n         assertTrue(result.getTotalResults() > 0);"},{"sha":"c0f933150447a269cb2b161ebdf2fe7a102e03fa","filename":"fit/core-reference/src/test/resources/rebel.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f04ab6c26e99ae0a5fe19915e303fa965fcd6332/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=f04ab6c26e99ae0a5fe19915e303fa965fcd6332","patch":"@@ -95,6 +95,8 @@ under the License.\n     </dir>\n     <dir name=\"${basedir}/../../ext/scimv2/scim-rest-cxf/target/classes\">\n     </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/logic/target/classes\">\n+    </dir>\n   </classpath>\n \n   <web>"}]}