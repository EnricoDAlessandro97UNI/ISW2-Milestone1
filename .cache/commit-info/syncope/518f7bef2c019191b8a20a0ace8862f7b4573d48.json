{"sha":"518f7bef2c019191b8a20a0ace8862f7b4573d48","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUxOGY3YmVmMmMwMTkxOTFiOGEyMGEwYWNlODg2MmY3YjQ1NzNkNDg=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-07-30T08:01:17Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-07-30T08:01:17Z"},"message":"[SYNCOPE-156] Realm page now displays user groups and any object","tree":{"sha":"1cb32c050a885c99ac515154914eb4bc332ba69c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1cb32c050a885c99ac515154914eb4bc332ba69c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/518f7bef2c019191b8a20a0ace8862f7b4573d48","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/518f7bef2c019191b8a20a0ace8862f7b4573d48","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/518f7bef2c019191b8a20a0ace8862f7b4573d48","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/518f7bef2c019191b8a20a0ace8862f7b4573d48/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"7eca0abb8ae8ef21a7a3be4bb8c54b98140b7fed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7eca0abb8ae8ef21a7a3be4bb8c54b98140b7fed","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7eca0abb8ae8ef21a7a3be4bb8c54b98140b7fed"}],"stats":{"total":3086,"additions":2895,"deletions":191},"files":[{"sha":"e13840c93d7bf87859265fda159a346a006a93db","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -42,9 +42,12 @@ public class AnyDataProvider extends SortableDataProvider<AnyTO, String> {\n \n     private final AbstractAnyRestClient restClient;\n \n-    private final String realm = \"/\";\n+    private final String realm;\n \n-    public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginatorRows, final boolean filtered) {\n+    private final String type;\n+\n+    public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginatorRows, final boolean filtered,\n+            final String realm, final String type) {\n         super();\n \n         this.restClient = restClient;\n@@ -55,6 +58,9 @@ public AnyDataProvider(final AbstractAnyRestClient restClient, final int paginat\n         setSort(\"key\", SortOrder.ASCENDING);\n \n         this.comparator = new SortableAnyProviderComparator(this);\n+        \n+        this.realm = realm;\n+        this.type = type;\n     }\n \n     public void setFIQL(final String fiql) {\n@@ -70,9 +76,9 @@ public Iterator<? extends AnyTO> iterator(final long first, final long count) {\n         if (filtered) {\n             result = fiql == null\n                     ? Collections.<AnyTO>emptyList()\n-                    : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+                    : restClient.search(realm, fiql, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n         } else {\n-            result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+            result = restClient.list(realm, (page < 0 ? 0 : page) + 1, paginatorRows, getSort(), type);\n         }\n \n         Collections.sort(result, comparator);\n@@ -86,7 +92,7 @@ public long size() {\n         if (filtered) {\n             result = fiql == null\n                     ? 0\n-                    : restClient.searchCount(realm, fiql);\n+                    : restClient.searchCount(realm, fiql, type);\n         } else {\n             result = restClient.count(realm);\n         }"},{"sha":"804f9feee06cea280d2004a912de4d2f345b2f16","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -54,6 +54,12 @@ public final class Constants {\n \n     public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS = \"user.virtual.schema.paginator.rows\";\n \n+    public static final String PREF_GROUP_DETAILS_VIEW = \"group.details.view\";\n+\n+    public static final String PREF_GROUP_ATTRIBUTES_VIEW = \"group.attributes.view\";\n+\n+    public static final String PREF_GROUP_DERIVED_ATTRIBUTES_VIEW = \"group.derived.attributes.view\";\n+\n     public static final String PREF_GROUP_PLAIN_SCHEMA_PAGINATOR_ROWS = \"group.schema.paginator.rows\";\n \n     public static final String PREF_GROUP_DER_SCHEMA_PAGINATOR_ROWS = \"group.derived.schema.paginator.rows\";\n@@ -91,6 +97,12 @@ public final class Constants {\n     public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";\n \n     public static final String PREF_POLICY_PAGINATOR_ROWS = \"policy.paginator.rows\";\n+    \n+    public static final String PREF_ANY_DETAILS_VIEW = \"any.details.view\";\n+    \n+    public static final String PREF_ANY_ATTRIBUTES_VIEW = \"any.attributes.view\";\n+\n+    public static final String PREF_ANY_DERIVED_ATTRIBUTES_VIEW = \"any.derived.attributes.view\";\n \n     /**\n      * ConnId's GuardedString is not in the classpath."},{"sha":"63223a0a0827451e0a6c46d8cac243469c11b716","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AnyDisplayAttributesModalPage.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAnyDisplayAttributesModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display user attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class AnyDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] ANY_DEFAULT_SELECTION = { \"key\" };\n+\n+    public AnyDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_ANY_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_ANY_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_ANY_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return AnyObjectTO.class;\n+    }\n+}"},{"sha":"769cb45d71f7f852850b6f95b9e29cc5142b839d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"added","additions":236,"deletions":0,"changes":236,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,236 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.client.console.PreferenceManager;\n+import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+/**\n+ * Modal window with Display attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public abstract class DisplayAttributesModalPage extends BaseModalPage {\n+\n+    private static final long serialVersionUID = -4274117450918385110L;\n+\n+    /**\n+     * Max allowed selections.\n+     */\n+    private static final int MAX_SELECTIONS = 9;\n+\n+    @SpringBean\n+    private PreferenceManager prefMan;\n+\n+    private final List<String> selectedDetails;\n+\n+    private final List<String> selectedPlainSchemas;\n+\n+    private final List<String> selectedDerSchemas;\n+\n+    public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+\n+        super();\n+\n+        final IModel<List<String>> fnames = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return SearchableFields.get(getTOClass());\n+            }\n+        };\n+\n+        final IModel<List<String>> names = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return schemaNames;\n+            }\n+        };\n+\n+        final IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return dSchemaNames;\n+            }\n+        };\n+\n+        final Form form = new Form(FORM);\n+        form.setModel(new CompoundPropertyModel(this));\n+\n+        selectedDetails = prefMan.getList(getRequest(), getPrefDetailView());\n+\n+        selectedPlainSchemas = prefMan.getList(getRequest(), getPrefAttributeView());\n+\n+        selectedDerSchemas = prefMan.getList(getRequest(), getPrefDerivedAttributeView());\n+\n+        final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n+        form.add(dgroup);\n+\n+        final ListView<String> details = new ListView<String>(\"details\", fnames) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                item.add(new Check(\"dcheck\", item.getModel()));\n+                item.add(new Label(\"dname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+            }\n+        };\n+        dgroup.add(details);\n+\n+        if (names.getObject() == null || names.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"plainSchemas\", \"emptyFragment\", form);\n+            form.add(fragment);\n+\n+            selectedPlainSchemas.clear();\n+        } else {\n+            final Fragment fragment = new Fragment(\"plainSchemas\", \"sfragment\", form);\n+            form.add(fragment);\n+\n+            final CheckGroup sgroup = new CheckGroup(\"psCheckGroup\", new PropertyModel(this, \"selectedPlainSchemas\"));\n+            fragment.add(sgroup);\n+\n+            final ListView<String> schemas = new ListView<String>(\"plainSchemas\", names) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<String> item) {\n+                    item.add(new Check(\"scheck\", item.getModel()));\n+                    item.add(new Label(\"sname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n+            sgroup.add(schemas);\n+        }\n+\n+        if (dsnames.getObject() == null || dsnames.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"emptyFragment\", form);\n+            form.add(fragment);\n+\n+            selectedDerSchemas.clear();\n+        } else {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n+            form.add(fragment);\n+\n+            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n+            fragment.add(dsgroup);\n+\n+            final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<String> item) {\n+                    item.add(new Check(\"dscheck\", item.getModel()));\n+                    item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n+            dsgroup.add(derSchemas);\n+        }\n+\n+        final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                if (selectedDetails.size() + selectedPlainSchemas.size() + selectedDerSchemas.size()\n+                        > MAX_SELECTIONS) {\n+\n+                    error(getString(\"tooManySelections\"));\n+                    onError(target, form);\n+                } else {\n+                    final Map<String, List<String>> prefs = new HashMap<>();\n+\n+                    prefs.put(getPrefDetailView(), selectedDetails);\n+\n+                    prefs.put(getPrefAttributeView(), selectedPlainSchemas);\n+\n+                    prefs.put(getPrefDerivedAttributeView(), selectedDerSchemas);\n+\n+                    prefMan.setList(getRequest(), getResponse(), prefs);\n+\n+                    ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                    window.close(target);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                feedbackPanel.refresh(target);\n+            }\n+        };\n+\n+        form.add(submit);\n+\n+        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+        };\n+\n+        cancel.setDefaultFormProcessing(false);\n+        form.add(cancel);\n+\n+        add(form);\n+    }\n+\n+    public abstract String getPrefDetailView();\n+\n+    public abstract String getPrefAttributeView();\n+\n+    public abstract String getPrefDerivedAttributeView();\n+    \n+    public abstract Class getTOClass();\n+\n+}"},{"sha":"248162ed80404adb6b0fa85135adb824a5f99830","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/EditRealmModalPage.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditRealmModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditRealmModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditRealmModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+public class EditRealmModalPage<T extends AnyTO> extends RealmModalPage {\n+\n+    private static final long serialVersionUID = -4285220460543213901L;\n+\n+    public EditRealmModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final RealmTO realmTO,\n+            final String parentPath,\n+            final String entitlement) {\n+\n+        super(pageRef, window, realmTO, parentPath, entitlement);\n+\n+    }\n+\n+}"},{"sha":"0e5e10f09c5e5d0d50572d2a91f089a8113057a8","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/GroupDisplayAttributesModalPage.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FGroupDisplayAttributesModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display group attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class GroupDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] GROUP_DEFAULT_SELECTION = { \"key\", \"name\" };\n+\n+    public GroupDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_GROUP_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_GROUP_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_GROUP_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return GroupTO.class;\n+    }\n+}"},{"sha":"6e44d629567d47ade993ef33af751a60d7154189","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -198,10 +198,10 @@ public List<StatusBean> getStatusBeans() {\n             final List<T> subjects = new ArrayList<>();\n             if (anyTypeKind == AnyTypeKind.USER) {\n                 subjects.addAll((List<T>) userRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n+                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.USER.toString()));\n             } else {\n                 subjects.addAll((List<T>) groupRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true)));\n+                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.GROUP.toString()));\n             }\n \n             final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects("},{"sha":"5b8526d3205b3e66e35eef0963699bfdbea5e5d6","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/RealmModalPage.java","status":"added","additions":142,"deletions":0,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import static org.apache.syncope.client.console.pages.AbstractBasePage.CANCEL;\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.RealmDetails;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class RealmModalPage<T extends AnyTO> extends BaseModalPage {\n+\n+    private static final long serialVersionUID = -4285220460543213901L;\n+\n+    private static final int ROWS_PER_PAGE = 10;\n+\n+    protected RealmTO realmTO;\n+\n+    private final PageReference pageRef;\n+\n+    private final ModalWindow window;\n+\n+    @SpringBean\n+    private RealmRestClient realmRestClient;\n+    \n+    private final String parentPath;\n+\n+    public RealmModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final RealmTO realmTO,\n+            final String parentPath,\n+            final String entitlement) {\n+\n+        super();\n+\n+        this.pageRef = pageRef;\n+        this.window = window;\n+        this.realmTO = realmTO;\n+        this.parentPath = parentPath;\n+\n+        final Form<RealmTO> form = new Form<RealmTO>(\"RealmForm\");\n+        form.setModel(new CompoundPropertyModel<RealmTO>(realmTO));\n+\n+        RealmDetails realmDetail = new RealmDetails(\"details\", realmTO);\n+        if (SyncopeConsoleSession.get().owns(entitlement)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(realmDetail, ENABLE, entitlement);\n+        }\n+        form.add(realmDetail);\n+\n+        final AjaxButton submit = getOnSubmit();\n+        form.add(submit);\n+        form.setDefaultButton(submit);\n+\n+        final AjaxButton cancel = new AjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n+\n+            private static final long serialVersionUID = 530608535790823587L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                window.close(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+            }\n+        };\n+\n+        cancel.setDefaultFormProcessing(false);\n+        form.add(cancel);\n+\n+        add(form);\n+    }\n+\n+    protected AjaxButton getOnSubmit() {\n+        return new IndicatingAjaxButton(APPLY, new ResourceModel(SUBMIT)) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    submitAction(target, form);\n+\n+                    if (pageRef.getPage() instanceof BasePage) {\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                    }\n+\n+                    closeAction(target, form);\n+                } catch (Exception e) {\n+                    LOG.error(\"While creating or updating user\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    feedbackPanel.refresh(target);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                feedbackPanel.refresh(target);\n+            }\n+        };\n+    }\n+\n+    protected void submitAction(final AjaxRequestTarget target, final Form<?> form) {\n+        final RealmTO updatedRealmTO = (RealmTO) form.getModelObject();\n+        realmRestClient.create(this.parentPath, updatedRealmTO);\n+    }\n+\n+    protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n+        this.window.close(target);\n+    }\n+}"},{"sha":"50378edc002e6eedcfb079e7428abbb06a0947e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":82,"deletions":2,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -18,21 +18,29 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n@@ -54,9 +62,13 @@ public class Realms extends BasePage {\n \n     private final WebMarkupContainer content;\n \n+    private final ModalWindow editModalWin;\n+\n+    protected RealmTO currentRealm;\n+\n     public Realms(final PageParameters parameters) {\n         super(parameters);\n-\n+        \n         final List<RealmTO> realms = realmRestClient.list();\n         Collections.sort(realms, new RealmNameComparator());\n \n@@ -68,6 +80,40 @@ public Realms(final PageParameters parameters) {\n \n         content.add(new Label(\"header\", \"Root realm\"));\n         content.add(new Label(\"body\", \"Root realm\"));\n+\n+        //create new realms                \n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", getPageReference()) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                editModalWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+                        return new RealmModalPage(Realms.this.getPageReference(), editModalWin, new RealmTO(),\n+                                Realms.this.getCurrentRealm().getFullPath(), Entitlement.REALM_CREATE);\n+                    }\n+                });\n+\n+                editModalWin.show(target);\n+            }\n+        };\n+        if (SyncopeConsoleSession.get().owns(Entitlement.REALM_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, Entitlement.REALM_CREATE);\n+        }\n+        content.add(createLink);\n+\n+        // Modal window for editing realms\n+        editModalWin = new ModalWindow(\"editModal\");\n+        editModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editModalWin.setCookieName(\"edit-modal\");\n+\n+        content.add(editModalWin);\n+        setCurrentRealm(realms.get(0));\n     }\n \n     private void add(final Map<Long, List<RealmTO>> parentMap, final Long key, final MarkupContainer container) {\n@@ -83,6 +129,7 @@ private void add(final Map<Long, List<RealmTO>> parentMap, final Long key, final\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n+                    Realms.this.setCurrentRealm(realm);\n                     send(Realms.this, Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n                 }\n             };\n@@ -148,11 +195,44 @@ public void onEvent(final IEvent<?> event) {\n             @SuppressWarnings(\"unchecked\")\n             final ControlSidebarClick<RealmTO> controlSidebarClick = ControlSidebarClick.class.cast(event.getPayload());\n             content.addOrReplace(new Label(\"header\", controlSidebarClick.getObj().getName()));\n-            content.addOrReplace(new Realm(\"body\", controlSidebarClick.getObj()));\n+            content.addOrReplace(new Realm(\"body\", controlSidebarClick.getObj(), getPageReference()));\n             controlSidebarClick.getTarget().add(content);\n         }\n     }\n \n+    public void setCurrentRealm(final RealmTO realmTO) {\n+        this.currentRealm = realmTO;\n+        setupEditModalPage(currentRealm);\n+    }\n+\n+    public RealmTO getCurrentRealm() {\n+        return this.currentRealm;\n+    }\n+\n+    public void setupEditModalPage(final RealmTO realmTO) {\n+        final AjaxLink<Void> edit = new ClearIndicatingAjaxLink<Void>(\"edit\", getPageReference()) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                editModalWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+                        return new EditRealmModalPage(Realms.this.getPageReference(), editModalWin, realmTO,\n+                                Realms.this.getCurrentRealm().getFullPath(), Entitlement.REALM_UPDATE);\n+                    }\n+                });\n+\n+                editModalWin.show(target);\n+            }\n+        };\n+        content.addOrReplace(edit);\n+    }\n+\n     private static class ControlSidebarClick<T> {\n \n         private final AjaxRequestTarget target;"},{"sha":"6ebb7be6640cf9a7cc140f2fa10cac3a032ba507","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java","status":"added","additions":641,"deletions":0,"changes":641,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,641 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n+import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.console.commons.status.Status;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.console.panels.ActionDataTablePanel;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.ResourceAssociationActionType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class StatusModalPage<T extends AnyTO> extends AbstractStatusModalPage {\n+\n+    private static final long serialVersionUID = -9148734710505211261L;\n+\n+    private final AnyTO anyTO;\n+\n+    private int rowsPerPage = 10;\n+\n+    private final StatusUtils statusUtils;\n+\n+    private final boolean statusOnly;\n+\n+    // --------------------------------\n+    // password management fields ..\n+    // --------------------------------\n+    private final ClearIndicatingAjaxButton cancel;\n+\n+    private final WebMarkupContainer pwdMgt;\n+\n+    private final Form<?> pwdMgtForm;\n+\n+    private final AjaxCheckBoxPanel changepwd;\n+\n+    private final PasswordTextField password;\n+\n+    private final PasswordTextField confirm;\n+    // --------------------------------\n+\n+    private final PageReference pageRef;\n+\n+    private final ModalWindow window;\n+\n+    private final ActionDataTablePanel<StatusBean, String> table;\n+\n+    private final List<IColumn<StatusBean, String>> columns;\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AnyTO attributableTO) {\n+\n+        this(pageRef, window, attributableTO, false);\n+    }\n+\n+    public StatusModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final AnyTO anyTO,\n+            final boolean statusOnly) {\n+\n+        super();\n+\n+        this.pageRef = pageRef;\n+        this.window = window;\n+        this.statusOnly = statusOnly;\n+        this.anyTO = anyTO;\n+\n+        statusUtils = new StatusUtils(anyTO instanceof UserTO ? userRestClient : groupRestClient);\n+\n+        add(new Label(\"displayName\", anyTO.getKey() + \" \"\n+                + (anyTO instanceof UserTO ? ((UserTO) anyTO).getUsername() : ((GroupTO) anyTO).getName())));\n+\n+        columns = new ArrayList<>();\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null), \"resourceName\") {\n+\n+                    private static final long serialVersionUID = 2054811145491901166L;\n+\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                                    private static final long serialVersionUID = 8432079838783825801L;\n+\n+                                    @Override\n+                                    protected void onComponentTag(final ComponentTag tag) {\n+                                        if (model.getObject().isLinked()) {\n+                                            super.onComponentTag(tag);\n+                                        } else {\n+                                            tag.put(\"style\", \"color: #DDDDDD\");\n+                                        }\n+                                    }\n+                                });\n+                            }\n+                });\n+\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"accountLink\", this, null), \"accountLink\", \"accountLink\"));\n+\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"status\", this, null)) {\n+\n+                    private static final long serialVersionUID = -3503023501954863131L;\n+\n+                    @Override\n+                    public String getCssClass() {\n+                        return \"action\";\n+                    }\n+\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                if (model.getObject().isLinked()) {\n+                                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n+                                                    getStatus()));\n+                                } else {\n+                                    cellItem.add(new Label(componentId, \"\"));\n+                                }\n+                            }\n+                });\n+\n+        table = new ActionDataTablePanel<StatusBean, String>(\n+                \"resourceDatatable\",\n+                columns,\n+                (ISortableDataProvider<StatusBean, String>) new AttributableStatusProvider(),\n+                rowsPerPage,\n+                pageRef) {\n+\n+                    private static final long serialVersionUID = 6510391461033818316L;\n+\n+                    @Override\n+                    public boolean isElementEnabled(final StatusBean element) {\n+                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+                    }\n+                };\n+        table.setOutputMarkupId(true);\n+\n+        final String pageId = anyTO instanceof GroupTO ? \"Groups\" : \"Users\";\n+\n+        final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n+        addOrReplace(pwdMgtFragment);\n+\n+        pwdMgt = new WebMarkupContainer(\"pwdMgt\");\n+        pwdMgtFragment.add(pwdMgt.setOutputMarkupId(true));\n+\n+        pwdMgtForm = new Form(\"pwdMgtForm\");\n+        pwdMgtForm.setVisible(false).setEnabled(false);\n+        pwdMgt.add(pwdMgtForm);\n+\n+        password = new PasswordTextField(\"password\", new Model<String>());\n+        pwdMgtForm.add(password.setRequired(false).setEnabled(false));\n+\n+        confirm = new PasswordTextField(\"confirm\", new Model<String>());\n+        pwdMgtForm.add(confirm.setRequired(false).setEnabled(false));\n+\n+        changepwd = new AjaxCheckBoxPanel(\"changepwd\", \"changepwd\", new Model<Boolean>(false));\n+        pwdMgtForm.add(changepwd.setModelObject(false));\n+        pwdMgtForm.add(new Label(\"changePwdLabel\", new ResourceModel(\"changePwdLabel\", \"Password propagation\")));\n+\n+        changepwd.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                password.setEnabled(changepwd.getModelObject());\n+                confirm.setEnabled(changepwd.getModelObject());\n+                target.add(pwdMgt);\n+            }\n+        });\n+\n+        cancel = new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), pageRef) {\n+\n+            private static final long serialVersionUID = -2341391430136818026L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                // ignore\n+                window.close(target);\n+            }\n+        }.feedbackPanelAutomaticReload(false);\n+\n+        pwdMgtForm.add(cancel);\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"), pageRef) {\n+\n+                    private static final long serialVersionUID = -2341391430136818027L;\n+\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        // none\n+                    }\n+                };\n+\n+        pwdMgtForm.add(goon);\n+\n+        if (statusOnly) {\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        userRestClient.reactivate(\n+                                anyTO.getETagValue(),\n+                                anyTO.getKey(),\n+                                new ArrayList<>(table.getModelObject()));\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error enabling resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.REACTIVATE, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        userRestClient.suspend(\n+                                anyTO.getETagValue(),\n+                                anyTO.getKey(),\n+                                new ArrayList<>(table.getModelObject()));\n+\n+                        if (pageRef.getPage() instanceof BasePage) {\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        }\n+\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error disabling resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.SUSPEND, pageId);\n+        } else {\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        if (anyTO instanceof UserTO) {\n+                            userRestClient.unlink(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            groupRestClient.unlink(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unlinking resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.UNLINK, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        if (anyTO instanceof UserTO) {\n+                            userRestClient.link(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            groupRestClient.link(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        window.close(target);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error linking resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.LINK, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        BulkActionResult bulkActionResult;\n+                        if (anyTO instanceof UserTO) {\n+                            bulkActionResult = userRestClient.deprovision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            bulkActionResult = groupRestClient.deprovision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error de-provisioning user\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.DEPROVISION, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+\n+                    if (anyTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationActionType.PROVISION, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = groupRestClient.provision(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning user\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        final BulkActionResult bulkActionResult;\n+                        if (anyTO instanceof UserTO) {\n+                            bulkActionResult = userRestClient.unassign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        } else {\n+                            bulkActionResult = groupRestClient.unassign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+                        }\n+\n+                        ((BasePage) pageRef.getPage()).setModalResult(true);\n+                        loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error unassigning resources\", e);\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        feedbackPanel.refresh(target);\n+                    }\n+                }\n+            }, ActionLink.ActionType.UNASSIGN, pageId);\n+\n+            table.addAction(new ActionLink() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    if (anyTO instanceof UserTO) {\n+                        StatusModalPage.this.passwordManagement(\n+                                target, ResourceAssociationActionType.ASSIGN, table.getModelObject());\n+                    } else {\n+                        try {\n+                            final BulkActionResult bulkActionResult = groupRestClient.assign(\n+                                    anyTO.getETagValue(),\n+                                    anyTO.getKey(),\n+                                    new ArrayList<>(table.getModelObject()));\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error assigning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }\n+            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n+        }\n+\n+        table.addCancelButton(window);\n+        add(table);\n+    }\n+\n+    private class AttributableStatusProvider extends AbstractStatusBeanProvider {\n+\n+        private static final long serialVersionUID = 4586969457669796621L;\n+\n+        public AttributableStatusProvider() {\n+            super(statusOnly ? \"resourceName\" : \"accountLink\");\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<StatusBean> getStatusBeans() {\n+            final List<String> resources = new ArrayList<>();\n+            for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n+                resources.add(resourceTO.getKey());\n+            }\n+\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(anyTO);\n+\n+            final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size() + 1);\n+\n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        anyTO instanceof GroupTO);\n+\n+                statusBeans.add(statusBean);\n+                resources.remove(entry.getResourceName());\n+            }\n+\n+            if (statusOnly) {\n+                final StatusBean syncope = new StatusBean(anyTO, \"Syncope\");\n+\n+                syncope.setConnObjectLink(((UserTO) anyTO).getUsername());\n+\n+                Status syncopeStatus = Status.UNDEFINED;\n+                if (((UserTO) anyTO).getStatus() != null) {\n+                    try {\n+                        syncopeStatus = Status.valueOf(((UserTO) anyTO).getStatus().toUpperCase());\n+                    } catch (IllegalArgumentException e) {\n+                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) anyTO).getStatus(), e);\n+                    }\n+                }\n+                syncope.setStatus(syncopeStatus);\n+\n+                statusBeans.add(syncope);\n+            } else {\n+                for (String resource : resources) {\n+                    final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                            resource,\n+                            null,\n+                            anyTO instanceof GroupTO);\n+\n+                    statusBean.setLinked(false);\n+                    statusBeans.add(statusBean);\n+                }\n+            }\n+\n+            return statusBeans;\n+        }\n+    }\n+\n+    private void passwordManagement(\n+            final AjaxRequestTarget target,\n+            final ResourceAssociationActionType type,\n+            final Collection<StatusBean> selection) {\n+\n+        final ClearIndicatingAjaxButton goon =\n+                new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\"), pageRef) {\n+\n+                    private static final long serialVersionUID = -2341391430136818027L;\n+\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (StringUtils.isNotBlank(password.getModelObject())\n+                            && !password.getModelObject().equals(confirm.getModelObject())) {\n+                                throw new Exception(getString(\"passwordMismatch\"));\n+                            }\n+\n+                            final BulkActionResult bulkActionResult;\n+                            switch (type) {\n+                                case ASSIGN:\n+                                    bulkActionResult = userRestClient.assign(\n+                                            anyTO.getETagValue(),\n+                                            anyTO.getKey(),\n+                                            new ArrayList<>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                case PROVISION:\n+                                    bulkActionResult = userRestClient.provision(\n+                                            anyTO.getETagValue(),\n+                                            anyTO.getKey(),\n+                                            new ArrayList<>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                default:\n+                                    bulkActionResult = null;\n+                                // ignore\n+                            }\n+\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n+\n+                            if (bulkActionResult != null) {\n+                                loadBulkActionResultPage(selection, bulkActionResult);\n+                            } else {\n+\n+                                target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                                window.close(target);\n+                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }.feedbackPanelAutomaticReload(false);\n+\n+        pwdMgtForm.addOrReplace(goon);\n+\n+        table.setVisible(false);\n+        pwdMgtForm.setVisible(true).setEnabled(true);\n+\n+        target.add(table);\n+        target.add(pwdMgt);\n+    }\n+\n+    private void loadBulkActionResultPage(\n+            final Collection<StatusBean> selection, final BulkActionResult bulkActionResult) {\n+        final List<String> resources = new ArrayList<String>(selection.size());\n+        for (StatusBean statusBean : selection) {\n+            resources.add(statusBean.getResourceName());\n+        }\n+\n+        final List<ConnObjectWrapper> connObjects =\n+                statusUtils.getConnectorObjects(Collections.singletonList(anyTO), resources);\n+\n+        final List<StatusBean> statusBeans = new ArrayList<StatusBean>(connObjects.size());\n+\n+        for (ConnObjectWrapper entry : connObjects) {\n+            final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                    entry.getResourceName(),\n+                    entry.getConnObjectTO(),\n+                    anyTO instanceof GroupTO);\n+\n+            statusBeans.add(statusBean);\n+        }\n+\n+        setResponsePage(new BulkActionResultModalPage<StatusBean, String>(\n+                window,\n+                statusBeans,\n+                columns,\n+                bulkActionResult,\n+                \"resourceName\"));\n+    }\n+}"},{"sha":"0eeaa42f7817e497a147b795e0ec3a3aa1216987","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/UserDisplayAttributesModalPage.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FUserDisplayAttributesModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Display user attributes form.\n+ */\n+@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+public class UserDisplayAttributesModalPage extends DisplayAttributesModalPage {\n+\n+    private static final long serialVersionUID = 5194630813773543054L;\n+\n+    public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n+    \n+    public UserDisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n+        super(pageRef, window, schemaNames, dSchemaNames);\n+    }\n+\n+    @Override\n+    public String getPrefDetailView() {\n+        return Constants.PREF_USERS_DETAILS_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefAttributeView() {\n+        return Constants.PREF_USERS_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public String getPrefDerivedAttributeView() {\n+        return Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW;\n+    }\n+\n+    @Override\n+    public Class getTOClass() {\n+        return UserTO.class;\n+    }\n+\n+}"},{"sha":"d91c083480543541fc73c0d5d662c4e9a1a9a8cd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -147,8 +147,19 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n      */\n     protected final AbstractBasePage page;\n \n+    /**\n+     * Realm related to current panel.\n+     */\n+    private final String realm;\n+\n+    /**\n+     * Any type related to current panel.\n+     */\n+    private final String type;\n+\n     protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient) {\n+            final String fiql, final PageReference pageRef, final AbstractAnyRestClient restClient,\n+            final String realm, final String type) {\n \n         super(id);\n \n@@ -186,6 +197,9 @@ protected <T extends AnyTO> AbstractSearchResultPanel(final String id, final boo\n         add(container);\n \n         rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+\n+        this.realm = realm;\n+        this.type = type;\n     }\n \n     protected void initResultTable() {\n@@ -238,7 +252,7 @@ private void updateResultTable(final boolean create) {\n     }\n \n     private void updateResultTable(final boolean create, final int rows) {\n-        dataProvider = new AnyDataProvider(restClient, rows, filtered);\n+        dataProvider = new AnyDataProvider(restClient, rows, filtered, realm, type);\n         dataProvider.setFIQL(fiql);\n \n         final int currentPage = resultTable != null"},{"sha":"7c77228339e2d96485de9a1c5112b5d2c9e4be1a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.pages.BulkActionModalPage;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -110,6 +111,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         columns.add(0, new CheckGroupColumn<T, S>(group));\n         dataTable = new AjaxFallbackDefaultDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage);\n+        dataTable.add(new AttributeModifier(\"class\",\n+                \"ui-widget ui-widget-content table-hover table table-striped table-bordered\"));\n+\n         group.add(dataTable);\n \n         fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, pageRef) {"},{"sha":"21f76092a35e491e204f7a3efebbf518f7b86663","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"added","additions":264,"deletions":0,"changes":264,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,264 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class AnySearchResultPanel extends AbstractSearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnySearchResultPanel.class);\n+\n+    private String customMarkupId;\n+\n+    @SpringBean\n+    protected SchemaRestClient schemaRestClient;\n+\n+    protected final List<String> schemaNames;\n+\n+    protected final List<String> dSchemaNames;\n+\n+    protected final String pageID = \"Any\";\n+\n+    private final String entitlement = \"USER_LIST\";\n+\n+    public AnySearchResultPanel(final String type, final String parentId, final String markupId, final boolean filtered,\n+            final String fiql, final PageReference callerRef, final AbstractAnyRestClient restClient,\n+            final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+        super(parentId, filtered, fiql, callerRef, restClient, realm, type);\n+        setCustomMarkupId(markupId);\n+        add(new Label(\"name\", type));\n+\n+        this.schemaNames = new ArrayList<String>();\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            this.schemaNames.addAll(anyTypeClassTO.getPlainSchemas());\n+        }\n+        this.dSchemaNames = new ArrayList<String>();\n+        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            this.dSchemaNames.addAll(anyTypeClassTO.getDerSchemas());\n+        }\n+\n+        initResultTable();\n+    }\n+\n+    public String getCustomMarkupId() {\n+        return customMarkupId;\n+    }\n+\n+    public void setCustomMarkupId(final String markupId) {\n+        this.customMarkupId = markupId;\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns =\n+                new ArrayList<IColumn<AnyTO, String>>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_ANY_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : AnyDisplayAttributesModalPage.ANY_DEFAULT_SELECTION) {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                // SYNCOPE-294: re-read anyTO before edit\n+                                AnyObjectTO anyTO = ((AnyObjectRestClient) restClient).read(model.getObject().getKey());\n+                                return null;\n+                            }\n+                        });\n+\n+                        editmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            final AnyObjectTO anyTO = (AnyObjectTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            page.setModalResult(true);\n+\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID = -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return null;\n+                                }\n+                            });\n+\n+                            editmodal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel getHeader(final String componentId) {\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, new Model(), page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new AnyDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel;\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<ActionLink.ActionType>();\n+\n+        bulkActions.add(ActionLink.ActionType.DELETE);\n+        bulkActions.add(ActionLink.ActionType.SUSPEND);\n+        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"b6b2c9b4e95e651ebee7212c025348a9ac62583e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeMenuItem.java","status":"renamed","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -18,18 +18,26 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class Any extends Panel {\n+public class AnyTypeMenuItem extends Panel {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(Any.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnyTypeMenuItem.class);\n \n-    public Any(final String id) {\n-        super(id);\n+    public AnyTypeMenuItem(final String label, final String href) {\n+        super(\"anytype-menuitem\");\n+\n+        WebMarkupContainer myLink = new WebMarkupContainer(\"tabLink\");\n+        myLink.add(new AttributeModifier(\"href\", \"#\" + href));\n+        myLink.add(new Label(\"tabLabel\", label));\n+        add(myLink);\n     }\n \n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Any.java"},{"sha":"83e442b1f6a2c26a2e2c648eb56cb1a5b1b0083c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"added","additions":234,"deletions":0,"changes":234,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,234 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class GroupSearchResultPanel extends AnySearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(GroupSearchResultPanel.class);\n+\n+    private final String entitlement = \"GROUP_READ\";\n+\n+    public GroupSearchResultPanel(final String type, final String parentId, final String markupId,\n+            final boolean filtered, final String fiql, final PageReference callerRef,\n+            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+\n+        super(type, parentId, markupId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns =\n+                new ArrayList<IColumn<AnyTO, String>>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(GroupTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+        \n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION) {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n+                    Arrays.asList(GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                // SYNCOPE-294: re-read groupTO before edit\n+                                GroupTO groupTO = ((GroupRestClient) restClient).read(model.getObject().getKey());\n+                                return null;\n+                            }\n+                        });\n+\n+                        editmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            final GroupTO groupTO = (GroupTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            page.setModalResult(true);\n+\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID = -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return null;\n+                                }\n+                            });\n+\n+                            editmodal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel getHeader(final String componentId) {\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, new Model(), page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new GroupDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel;\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<ActionType>();\n+\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"a35fc09e82aca1b137c4c9d65a31d0df625aac33","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":90,"deletions":10,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -18,8 +18,22 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.syncope.common.lib.types.AnyTypeKind.USER;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -31,19 +45,85 @@ public class Realm extends Panel {\n \n     private final RealmTO realmTO;\n \n-    public Realm(final String id, final RealmTO realmTO) {\n+    private static Integer MARKUP_ID = 0;\n+\n+    @SpringBean\n+    private AnyTypeRestClient anyTypeRestClient;\n+\n+    @SpringBean\n+    private UserRestClient userRestClient;\n+\n+    @SpringBean\n+    private GroupRestClient groupRestClient;\n+\n+    @SpringBean\n+    private AnyObjectRestClient anyObjectRestClient;\n+\n+    public Realm(final String id, final RealmTO realmTO, final PageReference pageReference) {\n         super(id);\n         this.realmTO = realmTO;\n \n-        add(new RealmDetails(\"details\", realmTO));\n-        add(new Any(\"users\"));\n-        add(new Any(\"groups\"));\n-        add(new Any(\"services\"));\n-        add(new Any(\"serviceRoles\"));\n-        add(new Any(\"contexts\"));\n-        add(new Any(\"enactmentEngine\"));\n-        add(new AccountPolicy(\"accountPolicy\"));\n-        add(new PasswordPolicy(\"passwordPolicy\"));\n+        List<AnyTypeMenuItem> anyMenu = new ArrayList<>();\n+        List<AnySearchResultPanel> anyList = new ArrayList<>();\n+\n+        for (AnyTypeTO anyTypeTO : anyTypeRestClient.list()) {\n+            anyMenu.add(new AnyTypeMenuItem(anyTypeTO.getKey(), MARKUP_ID.toString()));\n+\n+            switch (anyTypeTO.getKind()) {\n+                case USER:\n+                    anyList.add(\n+                            new UserSearchResultPanel(anyTypeTO.getKey(), \"anytype-contentitem\", MARKUP_ID.toString(),\n+                                    false, null, pageReference, userRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                            anyTypeTO.getClasses()), realmTO.getFullPath()));\n+                    break;\n+                case GROUP:\n+                    anyList.add(\n+                            new GroupSearchResultPanel(anyTypeTO.getKey(), \"anytype-contentitem\", MARKUP_ID.toString(),\n+                                    false, null, pageReference, groupRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                            anyTypeTO.getClasses()), realmTO.getFullPath()));\n+                    break;\n+                case ANY_OBJECT:\n+                    anyList.add(\n+                            new AnySearchResultPanel(anyTypeTO.getKey(), \"anytype-contentitem\", MARKUP_ID.toString(),\n+                                    false, null, pageReference, anyObjectRestClient, anyTypeRestClient.getAnyTypeClass(\n+                                            anyTypeTO.getClasses()), realmTO.getFullPath()));\n+                    break;\n+                default:\n+            }\n+            MARKUP_ID++;\n+        }\n+\n+        ListView<AnyTypeMenuItem> menuListView = new ListView<AnyTypeMenuItem>(\"anytype-menu\", anyMenu) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<AnyTypeMenuItem> item) {\n+                item.add(item.getModelObject());\n+                if (item.getIndex() == 0) {\n+                    item.add(new AttributeModifier(\"class\", \"active\"));\n+                }\n+            }\n+        };\n+        add(menuListView);\n+\n+        add(new ListView<AnySearchResultPanel>(\"anytype-content\", anyList) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<AnySearchResultPanel> item) {\n+                item.setMarkupId(item.getModelObject().getCustomMarkupId());\n+                item.add(item.getModelObject());\n+                if (item.getIndex() == 0) {\n+                    item.add(new AttributeModifier(\"class\", \"tab-pane active\"));\n+                }\n+            }\n+        });\n+    }\n+\n+    public RealmTO getRealmTO() {\n+        return realmTO;\n     }\n \n }"},{"sha":"8797d13f6b8502122365576fe6c7015bea394263","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -33,9 +33,10 @@ public class RealmDetails extends Panel {\n \n     public RealmDetails(final String id, final RealmTO realmTO) {\n         super(id);\n-        add(new TextField<>(\"id\", new PropertyModel<>(realmTO, \"key\")).setEnabled(false));\n-        add(new TextField<>(\"name\", new PropertyModel<>(realmTO, \"name\")).setEnabled(false));\n-        add(new TextField<>(\"path\", new PropertyModel<>(realmTO, \"fullPath\")).setEnabled(false));\n+        add(new TextField<>(\"name\", new PropertyModel<>(realmTO, \"name\")));\n+        add(new TextField<>(\"path\", new PropertyModel<>(realmTO, \"fullPath\")));\n+        add(new TextField<>(\"accountPolicy\", new PropertyModel<>(realmTO, \"accountPolicy\")));\n+        add(new TextField<>(\"passwordPolicy\", new PropertyModel<>(realmTO, \"passwordPolicy\")));\n     }\n \n }"},{"sha":"8c787854b7aa3b85ede77c643a73713fc84ac60d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"added","additions":277,"deletions":0,"changes":277,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,277 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.StatusModalPage;\n+import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class UserSearchResultPanel extends AnySearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(UserSearchResultPanel.class);\n+\n+    private final String entitlement = \"USER_LIST\";\n+\n+    public UserSearchResultPanel(final String type, final String parentId, final String markupId,\n+            final boolean filtered, final String fiql, final PageReference callerRef,\n+            final AbstractAnyRestClient restClient, final List<AnyTypeClassTO> anyTypeClassTOs, final String realm) {\n+\n+        super(type, parentId, markupId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm);\n+    }\n+\n+    @Override\n+    protected List<IColumn<AnyTO, String>> getColumns() {\n+\n+        final List<IColumn<AnyTO, String>> columns =\n+                new ArrayList<IColumn<AnyTO, String>>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(UserTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.PLAIN));                \n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION) {\n+                columns.add(\n+                        new PropertyColumn<AnyTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n+                    Arrays.asList(UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<AnyTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel getActions(final String componentId, final IModel<AnyTO> model) {\n+\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage<UserTO>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject());\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.MANAGE_RESOURCES, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage<UserTO>(\n+                                        page.getPageReference(), statusmodal, (UserTO) model.getObject(), true);\n+                            }\n+                        });\n+\n+                        statusmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.ENABLE, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                // SYNCOPE-294: re-read userTO before edit\n+                                UserTO userTO = ((UserRestClient) restClient).read(model.getObject().getKey());\n+                                return null;\n+                            }\n+                        });\n+\n+                        editmodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            final UserTO userTO = (UserTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getKey());\n+\n+                            page.setModalResult(true);\n+\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID = -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return null;\n+                                }\n+                            });\n+\n+                            editmodal.show(target);\n+                        } catch (SyncopeClientException scce) {\n+                            error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n+                            feedbackPanel.refresh(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, entitlement);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel getHeader(final String componentId) {\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, new Model(), page.getPageReference());\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new UserDisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n+                            }\n+                        });\n+\n+                        displaymodal.show(target);\n+                    }\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement);\n+\n+                panel.add(new ActionLink() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement);\n+\n+                return panel;\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<ActionType>();\n+\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+}"},{"sha":"d4debf06a29b2b29e61d2279fdb8e3285de81f73","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -32,12 +32,12 @@ public abstract class AbstractAnyRestClient extends BaseRestClient {\n     public abstract int count(String realm);\n \n     public abstract List<? extends AnyTO> list(\n-            String realm, int page, int size, final SortParam<String> sort);\n+            String realm, int page, int size, final SortParam<String> sort, final String type);\n \n-    public abstract int searchCount(String realm, String fiql);\n+    public abstract int searchCount(String realm, String fiql, final String type);\n \n     public abstract List<? extends AnyTO> search(\n-            String realm, String fiql, int page, int size, final SortParam<String> sort);\n+            String realm, String fiql, int page, int size, final SortParam<String> sort, final String type);\n \n     public abstract ConnObjectTO readConnObject(String resourceName, Long key);\n "},{"sha":"3fd98bdfbb3a3499674602bc8d517c92515cd202","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest any type class services.\n+ */\n+@Component\n+public class AnyObjectRestClient extends AbstractAnyRestClient {\n+\n+    private static final long serialVersionUID = -8874495991295283249L;\n+\n+    @Override\n+    public int count(final String realm) {\n+        return getService(AnyObjectService.class).list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(\n+                1).build()).getTotalCount();\n+    }\n+\n+    @Override\n+    public List<? extends AnyTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n+        return list(type, realm).getResult();\n+    }\n+\n+    public PagedResult<AnyObjectTO> list(final String type, final String realm) {\n+        return getService(AnyObjectService.class).\n+                list(type, SyncopeClient.getAnyListQueryBuilder().realm(realm).build());\n+    }\n+\n+    @Override\n+    public int searchCount(final String realm, final String fiql, final String type) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public List<? extends AnyTO> search(final String realm, final String fiql, final int page, final int size,\n+            final SortParam<String> sort,\n+            final String type) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public ConnObjectTO readConnObject(final String resourceName, final Long key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    public AnyObjectTO read(final Long id) {\n+        AnyObjectTO anyObjectTO = null;\n+        try {\n+            anyObjectTO = getService(AnyObjectService.class).read(id);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading any object\", e);\n+        }\n+        return anyObjectTO;\n+    }\n+\n+    @Override\n+    public AnyTO delete(final String etag, final Long key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public BulkActionResult bulkAction(final BulkAction action) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+}"},{"sha":"cce0befc1556071f6bc3625afbe72f45b197242a","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest any type class services.\n+ */\n+@Component\n+public class AnyTypeRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -8874495991295283249L;\n+\n+    public List<AnyTypeTO> list() {\n+        return getService(AnyTypeService.class).list();\n+    }\n+\n+    public List<AnyTypeClassTO> getAnyTypeClass(final List<String> anyTypeClassNames) {\n+        List<AnyTypeClassTO> anyTypeClassTOs = new ArrayList<AnyTypeClassTO>();\n+        for (String anyTypeClass : anyTypeClassNames) {\n+            anyTypeClassTOs.add(getService(AnyTypeClassService.class).read(anyTypeClass));\n+        }\n+        return anyTypeClassTOs;\n+    }\n+\n+}"},{"sha":"659eeb47677a06ee9b0f377e75931b7b4a73da1b","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -56,23 +56,25 @@ public int count(final String realm) {\n     }\n \n     @Override\n-    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n         return getService(GroupService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n \n     @Override\n-    public int searchCount(final String realm, final String fiql) {\n+    public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(GroupService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<GroupTO> search(\n-            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n \n         return getService(GroupService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size)."},{"sha":"5dfe69a64f42069b812bb4654f99cc664475ade3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.springframework.stereotype.Component;\n@@ -35,4 +34,8 @@ public class RealmRestClient extends BaseRestClient {\n     public List<RealmTO> list() {\n         return getService(RealmService.class).list();\n     }\n+\n+    public void create(final String parentPath, final RealmTO realmTO) {\n+        getService(RealmService.class).create(parentPath, realmTO);         \n+    }\n }"},{"sha":"142a2db3bb68ac1fff23c799ba01a52746802fc0","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -57,7 +57,8 @@ public int count(final String realm) {\n     }\n \n     @Override\n-    public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n+    public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n         return getService(UserService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).details(false).build()).\n@@ -101,15 +102,16 @@ public UserTO read(final Long id) {\n     }\n \n     @Override\n-    public int searchCount(final String realm, final String fiql) {\n+    public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(UserService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n     @Override\n     public List<UserTO> search(\n-            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort) {\n+            final String realm, final String fiql, final int page, final int size, final SortParam<String> sort,\n+            final String type) {\n \n         return getService(UserService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size)."},{"sha":"b9dfa62e51a84a5e9323a15025e93676c8854303","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class ActionColumn<T, S> extends AbstractColumn<T, S> {\n+\n+    private static final long serialVersionUID = 7955560320949560725L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(ActionColumn.class);\n+\n+    public ActionColumn(final IModel<String> displayModel) {\n+        super(displayModel);\n+    }\n+\n+    @Override\n+    public String getCssClass() {\n+        return \"action\";\n+    }\n+\n+    @Override\n+    public Component getHeader(final String componentId) {\n+        return super.getHeader(componentId);\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n+        item.add(getActions(componentId, rowModel));\n+    }\n+\n+    public abstract ActionLinksPanel getActions(final String componentId, final IModel<T> rowModel);\n+}"},{"sha":"029a523b564e9c0a5d2ce11940d7ab30402b333b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+\n+public class AttrColumn extends AbstractColumn<AnyTO, String> {\n+\n+    private static final long serialVersionUID = 2624734332447371372L;\n+\n+    private final String name;\n+\n+    private final SchemaType schemaType;\n+\n+    public AttrColumn(final String name, final SchemaType schemaType) {\n+        // set sortProperty to schematype#name (e.g. derivedSchema#cn, \n+        // for use with SortableUserProviderComparator.AttrModel#getObject)\n+        super(new ResourceModel(name, name), schemaType.name() + \"#\" + name);\n+        this.name = name;\n+        this.schemaType = schemaType;\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<AnyTO>> cellItem, final String componentId,\n+            final IModel<AnyTO> rowModel) {\n+        List<String> values = null;\n+\n+        switch (schemaType) {\n+            case PLAIN:\n+                if (rowModel.getObject().getPlainAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getPlainAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            case VIRTUAL:\n+                if (rowModel.getObject().getVirAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getVirAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            case DERIVED:\n+                if (rowModel.getObject().getDerAttrMap().containsKey(name)) {\n+                    values = rowModel.getObject().getDerAttrMap().get(name).getValues();\n+                }\n+                break;\n+\n+            default:\n+        }\n+\n+        if (values == null || values.isEmpty()) {\n+            cellItem.add(new Label(componentId, \"\"));\n+        } else {\n+            if (values.size() == 1) {\n+                cellItem.add(new Label(componentId, values.get(0)));\n+            } else {\n+                cellItem.add(new Label(componentId, values.toString()));\n+            }\n+        }\n+    }\n+}"},{"sha":"2587b849d99cf1a14955aa442974ee09fa8173e1","filename":"client/console/src/main/resources/META-INF/resources/css/AdminLTE.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FAdminLTE.css?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -4360,3 +4360,7 @@ fieldset[disabled] .btn-vk.active {\n     white-space: normal!important;\n   }\n }\n+\n+i{\n+  margin-right: 5px;\n+}"},{"sha":"3cfd6800341963d26a67a74f80a28dd94f6e0e7e","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":67,"deletions":67,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -17,129 +17,129 @@\n  * under the License.\n  */\n .feedbackPanel {\n-    padding-left: 0px;\n-    text-align: center;\n+  padding-left: 0px;\n+  text-align: center;\n }\n \n .notificationpanel_row {  \n-    list-style-type: none;\n+  list-style-type: none;\n }  \n \n .notificationpanel_row span {  \n-    border:0 none;\n+  border:0 none;\n }    \n pre {\n-    white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n-    white-space: -pre-wrap; /* Opera */\n-    white-space: -o-pre-wrap; /* Opera */\n-    white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n-    word-wrap: break-word; /* IE 5.5+ */\n+  white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n+  white-space: -pre-wrap; /* Opera */\n+  white-space: -o-pre-wrap; /* Opera */\n+  white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n+  word-wrap: break-word; /* IE 5.5+ */\n }\n \n #veil {\n-    display:none;\n-    position:absolute;\n-    top:0;\n-    left:0;\n-    z-index:99999;\n-    background-color:black;\n-    width:100%;\n-    height:20000px;\n-    color:white;\n-    opacity:0.3;\n-    filter:alpha(opacity=30);\n+  display:none;\n+  position:absolute;\n+  top:0;\n+  left:0;\n+  z-index:99999;\n+  background-color:black;\n+  width:100%;\n+  height:20000px;\n+  color:white;\n+  opacity:0.3;\n+  filter:alpha(opacity=30);\n }\n \n #veil img {\n-    position:absolute;\n-    top:300px;\n-    left:50%;\n-    margin-left:-75px;\n-    width:150px;\n+  position:absolute;\n+  top:300px;\n+  left:50%;\n+  margin-left:-75px;\n+  width:150px;\n }\n \n .block-sidebar {\n-    max-height: 100%; \n-    overflow: auto; \n-    padding-top: 90px; \n-    padding-bottom: 50px; \n-    position: fixed;\n+  max-height: 100%; \n+  overflow: auto; \n+  padding-top: 90px; \n+  padding-bottom: 50px; \n+  position: fixed;\n }\n \n .inner-control-sidebar {\n-    position: fixed; \n-    height: auto;\n+  position: fixed; \n+  height: auto;\n }\n \n .content-margin-layout {\n-    margin: 0px 230px 0px 0px !important;\n-    padding: 20px !important;\n+  margin: 0px 230px 0px 0px !important;\n+  padding: 20px !important;\n }\n \n .admin-content-page {\n-    padding: 20px;\n-    background: #ecf0f5\n+  padding: 20px;\n+  background: #ecf0f5\n }\n \n .realms {\n-    min-height: 554px\n+  min-height: 554px\n }\n \n .actions > li > a {\n-    padding-top: 5px !important;\n-    padding-bottom: 5px !important;\n+  padding-top: 5px !important;\n+  padding-bottom: 5px !important;\n }\n \n .block-header {\n-    position: fixed;\n-    width: 100%;\n-    top: 0;\n+  position: fixed;\n+  width: 100%;\n+  top: 0;\n }\n \n .block-footer {\n-    position: fixed;\n-    width: 100%;\n-    bottom: 0px;\n+  position: fixed;\n+  width: 100%;\n+  bottom: 0px;\n }\n \n .logo-pos {\n-    padding-top: 4px !important;\n-    overflow: visible !important;\n+  padding-top: 4px !important;\n+  overflow: visible !important;\n }\n \n .angle {\n-    border: medium none !important;\n-    cursor: pointer;\n-    display: inline-table !important;\n-    float: right;\n-    height: 30px;\n-    overflow: hidden;\n-    position: relative !important;\n-    right: 0;\n-    top: -30px;\n-    width: 25%;\n-    z-index: 3;\n+  border: medium none !important;\n+  cursor: pointer;\n+  display: inline-table !important;\n+  float: right;\n+  height: 30px;\n+  overflow: hidden;\n+  position: relative !important;\n+  right: 0;\n+  top: -30px;\n+  width: 25%;\n+  z-index: 3;\n }\n \n @media (min-width: 768px) {\n-    .main-header .logo {\n-\theight: 54px;\n-    }\n+  .main-header .logo {\n+    height: 54px;\n+  }\n }\n \n .w_caption h3 {\n-    font-size: 16px;\n+  font-size: 16px;\n }\n \n div.wicket-modal div.w_content_3 {\n-    border: 1px solid #eee;\n-    border-radius: 20px;\n-    padding: 5px;\n+  border: 1px solid #eee;\n+  border-radius: 20px;\n+  padding: 5px;\n }\n \n .tab-content {\n-    margin-bottom: 10px;\n-    margin-top: 10px;\n+  margin-bottom: 10px;\n+  margin-top: 10px;\n }\n \n a.help {"},{"sha":"c48612f4c2fb7a485529e3014fb567234ac35230","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.html","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,118 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      div.group{\n+        width:450px;\n+      }\n+\n+      div.group div{\n+        width:150;\n+        height: 25px;\n+        float:left;\n+      }\n+\n+      div.group div input {\n+        width: 30px;\n+      }\n+\n+      div#attributes-view {\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        overflow: auto;\n+        margin-top: 0px;\n+        margin-bottom: 20px;\n+        margin-left: 10px;\n+        margin-right: 10px;\n+      }\n+\n+      .submit{\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        margin-left: 10px;\n+      }\n+\n+      span.grouplabel{\n+        display:block;\n+        clear: both;\n+        margin-left: 10px;\n+        margin-bottom: 10px;\n+        font-weight: bold;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <form wicket:id=\"form\">\n+      <div id=\"attributes-view\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <wicket:message key=\"title\"/>\n+        </p>\n+\n+        <span class=\"grouplabel\"><wicket:message key=\"plainSchemas\"/></span>\n+        <span wicket:id=\"dCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"details\">\n+              <input type=\"checkbox\" wicket:id=\"dcheck\"/>\n+              <span wicket:id=\"dname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+\n+        <span wicket:id=\"plainSchemas\">[schemas]</span>\n+\n+        <span wicket:id=\"dschemas\">[derived schemas]</span>\n+\n+      </div>\n+\n+      <wicket:fragment wicket:id=\"sfragment\">\n+        <span wicket:id=\"psCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"plainSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"scheck\"/>\n+              <span wicket:id=\"sname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"dsfragment\">\n+        <span class=\"grouplabel\"><wicket:message key=\"derSchemas\"/></span>\n+        <span wicket:id=\"dsCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"derSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"dscheck\"/>\n+              <span wicket:id=\"dsname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"emptyFragment\">\n+      </wicket:fragment>\n+\n+      <div class=\"submit\">\n+        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n+        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n+      </div>\n+    </form>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"2b5c573d65ddbe785cf65d4a347073fd674a931c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.properties","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.properties?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,32 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Change display attributes\n+tooManySelections=Too many columns to be shown\n+plainSchemas=Plain attributes\n+derSchemas=Derived attributes\n+\n+firstname=Firstname\n+surname=Surname\n+userId=User Id\n+edit=Edit\n+delete=Delete\n+status=Status\n+token=Token\n+username=Username\n+creationDate=Creation Date\n+tokenValued=Valued\n+tokenNotValued=Not valued"},{"sha":"e655aa1dfd1eb9c3c6b7d0af48034c4790ec0c7f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/RealmModalPage.html","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealmModalPage.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -0,0 +1,70 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title></title>\n+\n+    <link href=\"webjars/bootstrap/${bootstrap.version}/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/css/bootstrap-select.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"webjars/font-awesome/${font-awesome.version}/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"webjars/ionicons/${ionicons.version}/css/ionicons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"css/AdminLTE.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"css/AdminLTE_skins/skin-green.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"css/syncopeConsole.css\" rel=\"stylesheet\" type=\"text/css\" />\n+    <link href=\"css/fieldstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n+\n+    <script type=\"text/javascript\" src=\"webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/bootstrap/${bootstrap.version}/js/bootstrap.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/js/bootstrap-select.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"js/AdminLTE-app.min.js\"></script>\n+\n+    <script type=\"text/javascript\">\n+      var notificationShownTimes = 0;\n+\n+      function showNotification(componentId, messagecount) {\n+        notificationShownTimes++;\n+        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n+        $('div#' + componentId).fadeTo('normal', 1.0);\n+        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n+      }\n+    </script>\n+\n+    <style type=\"text/css\">\n+      table.palette td.header {\n+        background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n+          repeat-x scroll 50% 50% #E6E6E6 !important;\n+      }\n+    </style>\n+  </head>\n+  <body onload=\"setTimeout('window.focus();', 0);\">\n+    <div wicket:id=\"feedback\"/>\n+    <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\" wicket:id=\"RealmForm\">\n+      <wicket:container wicket:id=\"details\"/>\n+      <wicket:child />\n+      <div style=\"margin: 20px 10px 0\">\n+        <input type=\"submit\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"apply\"/>\n+        <input type=\"button\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"cancel\"/>\n+      </div>\n+    </form>\n+  </body>\n+</html>"},{"sha":"7eaf56d9091a8a6b44b190f1a532a08fa6659206","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -30,10 +30,19 @@ <h3 class=\"box-title\">\n             </h3>\n             <div class=\"box-tools pull-right\">\n               <ul class=\"nav navbar-nav actions\">\n-                <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n+                <li>\n+                  <a href=\"#\" wicket:id=\"createLink\">\n+                    <i class=\"fa fa-plus\"></i>\n+                  </a>                  \n+                </li>\n                 <li><a href=\"#\"><i class=\"fa fa-minus\"></i></a></li>\n-                <li><a href=\"#\"><i class=\"fa fa-pencil-square-o\"></i></a></li>\n+                <li>\n+                  <a href=\"#\" wicket:id=\"edit\">\n+                    <i class=\"fa fa-pencil-square-o\"></i>\n+                  </a>                  \n+                </li>\n               </ul>\n+              <div wicket:id=\"editModal\" ></div>\n             </div><!-- /.box-tools -->\n           </div><!-- /.box-header -->\n           <div class=\"box-body\">"},{"sha":"86b6359da35954f27a3d25a3e4cbd73fc2b04f67","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AjaxDataTablePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -33,7 +33,7 @@\n       <div class=\"bulkAction\">\n         <div class=\"bulkActionCell\" style=\"width: 40px\">\n           <a href=\"#\" wicket:id=\"bulkActionLink\">\n-            <img src=\"img/actions/bulk.png\" alt=\"bulk action icon\"  title=\"Bulk action\"/>\n+            <i class=\"fa fa-gear\" alt=\"bulk action icon\"  title=\"Bulk action\"></i>\n           </a>\n         </div>\n       </div>"},{"sha":"9d9ed0ef01523d7144c394d43a0a686c2cc55288","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeMenuItem.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeMenuItem.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -23,7 +23,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n-      <h1>ANY</h1>\n+      <a data-toggle=\"tab\" wicket:id=\"tabLink\"><span wicket:id=\"tabLabel\"></span></a>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Any.html"},{"sha":"a38698a3a66a48a0f4117641bc344670cd9ac1e8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Realm.html","status":"modified","additions":6,"deletions":58,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -23,68 +23,16 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n-      \n+\n       <div class=\"tabbable tabs-left\">\n-        <ul class=\"nav nav-tabs\">\n-          <li class=\"active\">\n-            <a data-toggle=\"tab\" href=\"#lA\">Details</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lB\">Users</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lC\">Groups</a>\n-          </li>\n-          <li class=\"dropdown\">\n-            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n-              ANY\n-              <b class=\"caret\"></b>\n-            </a>\n-            <ul class=\"dropdown-menu\">\n-              <li><a data-toggle=\"tab\" href=\"#lB\">Users</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lC\">Groups</a></li>\n-              <li class=\"divider\"></li>\n-              <li class=\"nav-header\">Others</li>\n-              <li><a data-toggle=\"tab\" href=\"#lD\">Services</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lE\">Service Roles</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lF\">Enactment Engines</a></li>\n-              <li><a data-toggle=\"tab\" href=\"#lG\">Contexts</a></li>\n-            </ul>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lH\">Account policy</a>\n-          </li>\n-          <li>\n-            <a data-toggle=\"tab\" href=\"#lI\">Password policy</a>\n+        <ul class=\"nav nav-tabs realm\">\n+          <li wicket:id=\"anytype-menu\">\n+            <wicket:container wicket:id=\"anytype-menuitem\"/>\n           </li>\n         </ul>\n         <div class=\"tab-content\">\n-          <div id=\"lA\" class=\"tab-pane active\">\n-            <wicket:container wicket:id=\"details\"/>\n-          </div>\n-          <div id=\"lB\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"users\"/>\n-          </div>\n-          <div id=\"lC\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"groups\"/>\n-          </div>\n-          <div id=\"lD\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"services\"/>\n-          </div>\n-          <div id=\"lE\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"serviceRoles\"/>\n-          </div>\n-          <div id=\"lF\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"enactmentEngine\"/>\n-          </div>\n-          <div id=\"lG\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"contexts\"/>\n-          </div>\n-          <div id=\"lH\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"accountPolicy\"/>\n-          </div>\n-          <div id=\"lI\" class=\"tab-pane\">\n-            <wicket:container wicket:id=\"passwordPolicy\"/>\n+          <div class=\"tab-pane\" wicket:id=\"anytype-content\">\n+            <wicket:container wicket:id=\"anytype-contentitem\"/>\n           </div>\n         </div>\n       </div>"},{"sha":"f75f98d4367ec06c3b294d137787ae12db52a2d6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":20,"deletions":16,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -23,23 +23,27 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <body>\n     <wicket:panel>\n+      <div class=\"input-group\">\n+        <span id=\"basic-addon1\" class=\"input-group-addon\">Name</span>\n+        <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"name\" class=\"form-control\" wicket:id=\"name\" />\n+      </div>\n       <br />\n-      <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\">\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Id</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"id\" class=\"form-control\" wicket:id=\"id\" />\n-        </div>\n-        <br />\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Name</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"name\" class=\"form-control\" wicket:id=\"name\" />\n-        </div>\n-        <br />\n-        <div class=\"input-group\">\n-          <span id=\"basic-addon1\" class=\"input-group-addon\">Path</span>\n-          <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"path\" class=\"form-control\" wicket:id=\"path\" />\n-        </div>\n-      </form>\n+      <div class=\"input-group\">\n+        <span id=\"basic-addon1\" class=\"input-group-addon\">Path</span>\n+        <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"path\" class=\"form-control\" wicket:id=\"path\" />\n+      </div>\n+      <br />\n+      <div class=\"input-group\">\n+        <span id=\"basic-addon1\" class=\"input-group-addon\">Account Policy</span>\n+        <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"accountPolicy\" class=\"form-control\" \n+               wicket:id=\"accountPolicy\" />\n+      </div>\n+      <br />\n+      <div class=\"input-group\">\n+        <span id=\"basic-addon1\" class=\"input-group-addon\">Password Policy</span>\n+        <input type=\"text\" aria-describedby=\"basic-addon1\" placeholder=\"passwordPolicy\" class=\"form-control\" \n+               wicket:id=\"passwordPolicy\" />\n+      </div>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"312cbbaa5bc8d867ef881743fe4c602c41b07c47","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -60,7 +60,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentManageResources\">\n-      <a href=\"#\" wicket:id=\"manageResourcesLink\"><img id=\"actionLink\" src=\"img/actions/resources-icon.png\" alt=\"manage resources icon\" title=\"Manage resources\"/></a>\n+      <a href=\"#\" wicket:id=\"manageResourcesLink\"><i id=\"actionLink\" class=\"fa fa-sitemap\" alt=\"manage resources icon\" title=\"Manage resources\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentManageUsers\">\n@@ -80,11 +80,11 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentEnable\">\n-      <a href=\"#\" wicket:id=\"enableLink\"><img id=\"actionLink\" src=\"img/actions/enable.png\" alt=\"enable icon\" title=\"Enable / Disable\"/></a>\n+      <a href=\"#\" wicket:id=\"enableLink\"><i id=\"actionLink\" class=\"fa fa-toggle-on\" alt=\"enable icon\" title=\"Enable / Disable\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentEdit\">\n-      <a href=\"#\" wicket:id=\"editLink\"><img id=\"actionLink\" src=\"img/actions/edit.png\" alt=\"edit icon\" title=\"Edit\"/></a>\n+      <a href=\"#\" wicket:id=\"editLink\"><i id=\"actionLink\" class=\"fa fa-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReset\">\n@@ -100,7 +100,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDelete\">\n-      <a href=\"#\" wicket:id=\"deleteLink\"><img id=\"actionLink\" src=\"img/actions/delete.png\" alt=\"delete icon\" title=\"Delete\"/></a>\n+      <a href=\"#\" wicket:id=\"deleteLink\"><i id=\"actionLink\" class=\"fa fa-remove\"  alt=\"delete icon\" title=\"Delete\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDryRun\">\n@@ -128,11 +128,11 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReload\">\n-      <a href=\"#\" wicket:id=\"reloadLink\"><img id=\"actionLink\" src=\"img/actions/reload.png\" alt=\"reload icon\" title=\"Reload\"/></a>\n+      <a href=\"#\" wicket:id=\"reloadLink\"><i id=\"actionLink\" class=\"fa fa-repeat\" alt=\"reload icon\" title=\"Reload\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentChangeView\">\n-      <a href=\"#\" wicket:id=\"changeViewLink\"><img id=\"actionLink\" src=\"img/actions/settings-icon.png\" alt=\"Change view icon\" title=\"Change view\"/></a>\n+      <a href=\"#\" wicket:id=\"changeViewLink\"><i id=\"actionLink\" class=\"fa fa-list\" alt=\"Change view icon\" title=\"Change view\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentUnlink\">"},{"sha":"f4a6cea6a861b7fde2a2b59db46a2c6b4e939ce8","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -57,7 +57,7 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n      */\n     private static final int MAX_SELECTIONS = 9;\n \n-    public static final String[] DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n+        public static final String[] DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n \n     @SpringBean\n     private PreferenceManager prefMan;"},{"sha":"15119d3442ae4cdeb65b7ad203fbe482b08842c1","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/EditUserModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/518f7bef2c019191b8a20a0ace8862f7b4573d48/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=518f7bef2c019191b8a20a0ace8862f7b4573d48","patch":"@@ -98,6 +98,6 @@ protected void submitAction(final AjaxRequestTarget target, final Form<?> form)\n \n     @Override\n     protected void closeAction(final AjaxRequestTarget target, final Form<?> form) {\n-        setResponsePage(new ResultStatusModalPage.Builder(window, userTO).mode(mode).build());\n+        setResponsePage(new Realms.Builder(window, userTO).mode(mode).build());\n     }\n }"}]}