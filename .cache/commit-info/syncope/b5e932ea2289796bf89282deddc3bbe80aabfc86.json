{"sha":"b5e932ea2289796bf89282deddc3bbe80aabfc86","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI1ZTkzMmVhMjI4OTc5NmJmODkyODJkZWRkYzNiYmU4MGFhYmZjODY=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2019-12-06T14:49:28Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2019-12-06T15:47:32Z"},"message":"SYNCOPE-1511: Test fixes (#143)","tree":{"sha":"55a1463dfeb47d68e10afc735f8abea19e070c48","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/55a1463dfeb47d68e10afc735f8abea19e070c48"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b5e932ea2289796bf89282deddc3bbe80aabfc86","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5e932ea2289796bf89282deddc3bbe80aabfc86","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5e932ea2289796bf89282deddc3bbe80aabfc86","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5e932ea2289796bf89282deddc3bbe80aabfc86/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"886d9711858389a83586eb883fd685035fd94692","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/886d9711858389a83586eb883fd685035fd94692","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/886d9711858389a83586eb883fd685035fd94692"}],"stats":{"total":108,"additions":61,"deletions":47},"files":[{"sha":"e5533eb4dd03e1c1f8b7a897773f06730becd651","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=b5e932ea2289796bf89282deddc3bbe80aabfc86","patch":"@@ -148,7 +148,7 @@ public void checkDeletePrinterLink() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:5:action:action\",\n+                + \"actions:actions:actionRepeater:6:action:action\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"d486b74df82ffd06fac756f8a4e405c9fd4e22cd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=b5e932ea2289796bf89282deddc3bbe80aabfc86","patch":"@@ -141,7 +141,7 @@ public void clickToCloneGroup() {\n \n         UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n+                + \"actions:actions:actionRepeater:10:action:action\"), Constants.ON_CLICK);\n \n         UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n         UTILITY_UI.getTester().cleanupFeedbackMessages();\n@@ -233,11 +233,11 @@ public void editGroup() {\n         UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n         UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:9:action:action\"));\n+                + \"actions:actions:actionRepeater:10:action:action\"));\n \n         UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n+                + \"actions:actions:actionRepeater:10:action:action\"), Constants.ON_CLICK);\n \n         UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n         UTILITY_UI.getTester().cleanupFeedbackMessages();\n@@ -255,6 +255,6 @@ public void checkDeleteGroupLink() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:9:action:action\", IndicatingOnConfirmAjaxLink.class);\n+                + \"actions:actions:actionRepeater:10:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"e4b0cbc43a4ed6e1ee4dda63838477662533cc30","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=b5e932ea2289796bf89282deddc3bbe80aabfc86","patch":"@@ -837,7 +837,7 @@ public void issueSYNCOPE1030() {\n \n         UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n-                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:9:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:10:\"\n                 + \"action:action\"), Constants.ON_CLICK);\n \n         UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");"},{"sha":"4bd4091d2a046dc342889822231bf2a0589e88cc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=b5e932ea2289796bf89282deddc3bbe80aabfc86","patch":"@@ -582,7 +582,7 @@ public void checkDeleteUsrLink() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:9:action:action\", IndicatingOnConfirmAjaxLink.class);\n+                + \"actions:actions:actionRepeater:10:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n \n     @Test"},{"sha":"70988ef60a68240a21603f1112bf30de13462a86","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"modified","additions":54,"deletions":40,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b5e932ea2289796bf89282deddc3bbe80aabfc86/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=b5e932ea2289796bf89282deddc3bbe80aabfc86","patch":"@@ -20,9 +20,7 @@\n \n import static org.junit.jupiter.api.Assertions.fail;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n import java.util.List;\n@@ -41,45 +39,52 @@\n \n public class AuditITCase extends AbstractITCase {\n \n-    private static final int MAX_WAIT_SECONDS = 30;\n+    private static final int MAX_WAIT_SECONDS = 50;\n \n     private static AuditEntryTO query(final AuditQuery query, final int maxWaitSeconds, final boolean failIfEmpty) {\n+        List<AuditEntryTO> results = query(query, maxWaitSeconds);\n+        if (results.isEmpty()) {\n+            if (failIfEmpty) {\n+                fail(\"Timeout when executing query for key \" + query.getEntityKey());\n+            }\n+            return null;\n+        }\n+        return results.get(0);\n+    }\n+\n+    private static List<AuditEntryTO> query(final AuditQuery query, final int maxWaitSeconds) {\n         int i = 0;\n         List<AuditEntryTO> results = List.of();\n         do {\n             try {\n                 Thread.sleep(1000);\n             } catch (InterruptedException e) {\n             }\n-\n             results = auditService.search(query).getResult();\n-\n             i++;\n         } while (results.isEmpty() && i < maxWaitSeconds);\n-        if (results.isEmpty()) {\n-            if (failIfEmpty) {\n-                fail(\"Timeout when executing query for key \" + query.getEntityKey());\n-            }\n-            return null;\n-        }\n-\n-        return results.get(0);\n+        return results;\n     }\n \n     @Test\n     public void userReadAndSearchYieldsNoAudit() {\n-        PagedResult<UserTO> users = userService.search(\n-                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).page(1).size(2).build());\n-        assertNotNull(users);\n-        assertFalse(users.getResult().isEmpty());\n-\n-        users.getResult().forEach(user -> assertNotNull(userService.read(user.getKey())));\n-\n-        users.getResult().forEach(user -> {\n-            AuditQuery query = new AuditQuery.Builder(user.getKey()).build();\n-            AuditEntryTO entry = query(query, MAX_WAIT_SECONDS, false);\n-            assertNull(entry);\n-        });\n+        UserTO userTO = createUser(UserITCase.getUniqueSample(\"audit@syncope.org\")).getEntity();\n+        assertNotNull(userTO.getKey());\n+\n+        AuditQuery query = new AuditQuery.Builder(userTO.getKey()).build();\n+        List<AuditEntryTO> entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n+\n+        PagedResult<UserTO> usersTOs = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(userTO.getUsername()).\n+                                query()).\n+                        build());\n+        assertNotNull(usersTOs);\n+        assertFalse(usersTOs.getResult().isEmpty());\n+\n+        entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n     }\n \n     @Test\n@@ -127,18 +132,23 @@ public void findByGroup() {\n \n     @Test\n     public void groupReadAndSearchYieldsNoAudit() {\n+        GroupTO groupTO = createGroup(GroupITCase.getBasicSample(\"AuditGroupSearch\")).getEntity();\n+        assertNotNull(groupTO.getKey());\n+\n+        AuditQuery query = new AuditQuery.Builder(groupTO.getKey()).build();\n+        List<AuditEntryTO> entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n+\n         PagedResult<GroupTO> groups = groupService.search(\n-                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).build());\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(groupTO.getName()).\n+                                query()).\n+                        build());\n         assertNotNull(groups);\n         assertFalse(groups.getResult().isEmpty());\n \n-        groups.getResult().forEach(groupTO -> assertNotNull(groupService.read(groupTO.getKey())));\n-\n-        groups.getResult().forEach(groupTO -> {\n-            AuditQuery query = new AuditQuery.Builder(groupTO.getKey()).build();\n-            AuditEntryTO entry = query(query, MAX_WAIT_SECONDS, false);\n-            assertNull(entry);\n-        });\n+        entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n     }\n \n     @Test\n@@ -154,17 +164,21 @@ public void findByAnyObject() {\n \n     @Test\n     public void anyObjectReadAndSearchYieldsNoAudit() {\n+        AnyObjectTO anyObjectTO = createAnyObject(AnyObjectITCase.getSample(\"USA\")).getEntity();\n+        assertNotNull(anyObjectTO);\n+\n+        AuditQuery query = new AuditQuery.Builder(anyObjectTO.getKey()).build();\n+        List<AuditEntryTO> entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n+\n         PagedResult<AnyObjectTO> anyObjects = anyObjectService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(getUUIDString()).query()).\n+                        fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(anyObjectTO.getType()).query()).\n                         build());\n         assertNotNull(anyObjects);\n-        assertTrue(anyObjects.getResult().isEmpty());\n+        assertFalse(anyObjects.getResult().isEmpty());\n \n-        anyObjects.getResult().forEach(anyObjectTO -> {\n-            AuditQuery query = new AuditQuery.Builder(anyObjectTO.getKey()).build();\n-            AuditEntryTO entry = query(query, MAX_WAIT_SECONDS, false);\n-            assertNull(entry);\n-        });\n+        entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(1, entries.size());\n     }\n }"}]}