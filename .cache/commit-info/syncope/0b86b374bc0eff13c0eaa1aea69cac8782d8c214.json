{"sha":"0b86b374bc0eff13c0eaa1aea69cac8782d8c214","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiODZiMzc0YmMwZWZmMTNjMGVhYTFhZWE2OWNhYzg3ODJkOGMyMTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-20T09:51:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-20T09:51:44Z"},"message":"Further Java 8 cleanup for RandomStringGenerator","tree":{"sha":"84ad6b3bb07406fd56afcc8a77434e186a50625f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/84ad6b3bb07406fd56afcc8a77434e186a50625f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0b86b374bc0eff13c0eaa1aea69cac8782d8c214","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b86b374bc0eff13c0eaa1aea69cac8782d8c214","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b86b374bc0eff13c0eaa1aea69cac8782d8c214","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b86b374bc0eff13c0eaa1aea69cac8782d8c214/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2cfafbbfb774a4c4964ddcc7175deadfdd9be85c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cfafbbfb774a4c4964ddcc7175deadfdd9be85c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2cfafbbfb774a4c4964ddcc7175deadfdd9be85c"}],"stats":{"total":57,"additions":13,"deletions":44},"files":[{"sha":"7cbb5f5667fc43a763c5e18431dfeba2f76a3546","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/CaptchaResource.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b86b374bc0eff13c0eaa1aea69cac8782d8c214/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b86b374bc0eff13c0eaa1aea69cac8782d8c214/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaResource.java?ref=0b86b374bc0eff13c0eaa1aea69cac8782d8c214","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.client.enduser.resources;\n \n+import java.security.SecureRandom;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.text.RandomStringGenerator;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n-import org.apache.syncope.common.lib.SecureTextRandomProvider;\n import org.apache.wicket.extensions.markup.html.captcha.CaptchaImageResource;\n import org.apache.wicket.request.cycle.RequestCycle;\n import org.slf4j.Logger;\n@@ -31,10 +31,12 @@ public class CaptchaResource extends CaptchaImageResource {\n \n     private static final long serialVersionUID = 8293404296348102926L;\n \n+    private static final SecureRandom RANDOM = new SecureRandom();\n+\n     private static final Logger LOG = LoggerFactory.getLogger(CaptchaResource.class);\n \n     private static final RandomStringGenerator RANDOM_LETTERS = new RandomStringGenerator.Builder().\n-            usingRandom(new SecureTextRandomProvider()).\n+            usingRandom(RANDOM::nextInt).\n             withinRange('a', 'z').\n             build();\n "},{"sha":"ee13bc4c131f77cc87010adfb0ce59c115915055","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SecureTextRandomProvider.java","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cfafbbfb774a4c4964ddcc7175deadfdd9be85c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSecureTextRandomProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cfafbbfb774a4c4964ddcc7175deadfdd9be85c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSecureTextRandomProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSecureTextRandomProvider.java?ref=2cfafbbfb774a4c4964ddcc7175deadfdd9be85c","patch":"@@ -1,36 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import java.security.SecureRandom;\n-import org.apache.commons.text.TextRandomProvider;\n-\n-/**\n- * {@link TextRandomProvider} baking {@link SecureRandom}.\n- */\n-public class SecureTextRandomProvider implements TextRandomProvider {\n-\n-    private static final SecureRandom RANDOM = new SecureRandom();\n-\n-    @Override\n-    public int nextInt(final int max) {\n-        return RANDOM.nextInt(max);\n-    }\n-\n-}"},{"sha":"91d932b67485994133c998adfbac53863779a26f","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SecureRandomUtils.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b86b374bc0eff13c0eaa1aea69cac8782d8c214/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecureRandomUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b86b374bc0eff13c0eaa1aea69cac8782d8c214/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecureRandomUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecureRandomUtils.java?ref=0b86b374bc0eff13c0eaa1aea69cac8782d8c214","patch":"@@ -18,23 +18,26 @@\n  */\n package org.apache.syncope.core.spring.security;\n \n+import java.security.SecureRandom;\n import org.apache.commons.text.RandomStringGenerator;\n-import org.apache.syncope.common.lib.SecureTextRandomProvider;\n \n public final class SecureRandomUtils {\n \n+    private static final SecureRandom RANDOM = new SecureRandom();\n+\n     private static final RandomStringGenerator FOR_PASSWORD = new RandomStringGenerator.Builder().\n-            usingRandom(new SecureTextRandomProvider()).\n-            filteredBy(codePoint -> (codePoint >= 'a' && codePoint <= 'z') || (codePoint >= '0' && codePoint <= '9')).\n+            usingRandom(RANDOM::nextInt).\n+            withinRange('0', 'z').\n+            filteredBy(Character::isLetterOrDigit).\n             build();\n \n     private static final RandomStringGenerator FOR_LETTERS = new RandomStringGenerator.Builder().\n-            usingRandom(new SecureTextRandomProvider()).\n+            usingRandom(RANDOM::nextInt).\n             withinRange('a', 'z').\n             build();\n \n     private static final RandomStringGenerator FOR_NUMBERS = new RandomStringGenerator.Builder().\n-            usingRandom(new SecureTextRandomProvider()).\n+            usingRandom(RANDOM::nextInt).\n             withinRange('0', '9').\n             build();\n \n@@ -52,7 +55,7 @@ public static String generateRandomNumber() {\n \n     public static String generateRandomSpecialCharacter(final char[] characters) {\n         return new RandomStringGenerator.Builder().\n-                usingRandom(new SecureTextRandomProvider()).\n+                usingRandom(RANDOM::nextInt).\n                 filteredBy(codePoint -> {\n                     boolean found = false;\n                     for (int i = 0; i < characters.length && !found; i++) {"}]}