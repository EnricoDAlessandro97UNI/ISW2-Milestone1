{"sha":"716e2ed6a0614cf4b9e1882a80b7bb2496b83343","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxNmUyZWQ2YTA2MTRjZjRiOWUxODgyYTgwYjdiYjI0OTZiODMzNDM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-28T11:15:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-28T11:15:48Z"},"message":"Integration tests working with Glassfish via jaxrsContentType=application/xml - see SYNCOPE-688","tree":{"sha":"079d20c24dea9d3a836ca1ef8c354aa488a4cfe0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/079d20c24dea9d3a836ca1ef8c354aa488a4cfe0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/716e2ed6a0614cf4b9e1882a80b7bb2496b83343","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/716e2ed6a0614cf4b9e1882a80b7bb2496b83343","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/716e2ed6a0614cf4b9e1882a80b7bb2496b83343","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8338f8fa4586f9f87368772ab060c39cd18352df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8338f8fa4586f9f87368772ab060c39cd18352df","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8338f8fa4586f9f87368772ab060c39cd18352df"}],"stats":{"total":37,"additions":18,"deletions":19},"files":[{"sha":"661f3b0bd58904aaf610347d9f41f68b12843a25","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/UnwrappedObjectMapper.java","status":"renamed","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java?ref=716e2ed6a0614cf4b9e1882a80b7bb2496b83343","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.misc.serialization;\n+package org.apache.syncope.core.rest.cxf;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonProcessingException;\n@@ -36,8 +36,8 @@ public class UnwrappedObjectMapper extends ObjectMapper {\n     private static final long serialVersionUID = -317191546835195103L;\n \n     /**\n-     * Unwraps the given value if it implements the Map interface and contains\n-     * only a single entry. Otherwise the value is returned unmodified.\n+     * Unwraps the given value if it implements the Map interface and contains only a single entry, otherwise the\n+     * value is returned unmodified.\n      *\n      * @param value the potential Map to unwrap\n      * @return the unwrapped map or the original value\n@@ -54,31 +54,23 @@ private Object unwrapMap(final Object value) {\n     }\n \n     @Override\n-    public void writeValue(final JsonGenerator jgen, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final JsonGenerator jgen, final Object value) throws IOException {\n         super.writeValue(jgen, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final File resultFile, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final File resultFile, final Object value) throws IOException {\n         super.writeValue(resultFile, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final OutputStream out, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final OutputStream out, final Object value) throws IOException {\n         super.writeValue(out, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final Writer w, final Object value)\n-            throws IOException {\n-\n-        super.writeValue(w, unwrapMap(value));\n+    public void writeValue(final Writer writer, final Object value) throws IOException {\n+        super.writeValue(writer, unwrapMap(value));\n     }\n \n     @Override","previous_filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/UnwrappedObjectMapper.java"},{"sha":"b5b75dbd713e2c23e7b0aea5ad929ead8cea225c","filename":"core/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=716e2ed6a0614cf4b9e1882a80b7bb2496b83343","patch":"@@ -61,7 +61,7 @@ under the License.\n     </property>\n   </bean>\n \n-  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.misc.serialization.UnwrappedObjectMapper\"/>\n+  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.rest.cxf.UnwrappedObjectMapper\"/>\n   <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\">\n     <property name=\"mapper\" ref=\"jacksonObjectMapper\"/>\n   </bean>"},{"sha":"2e650891ad3e0ce597f8e07458297fbd585815c6","filename":"fit/core-reference/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=716e2ed6a0614cf4b9e1882a80b7bb2496b83343","patch":"@@ -518,6 +518,11 @@ under the License.\n     <profile>\n       <id>glassfish-it</id>\n \n+      <properties>\n+        <!-- see SYNCOPE-688 -->\n+        <jaxrs.content.type>application/xml</jaxrs.content.type>\n+      </properties>\n+      \n       <dependencies>\n         <dependency>\n           <groupId>com.h2database</groupId>"},{"sha":"728379a5b78e653b2eda49f7f6c5ca05c410bfcc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/DomainITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/716e2ed6a0614cf4b9e1882a80b7bb2496b83343/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java?ref=716e2ed6a0614cf4b9e1882a80b7bb2496b83343","patch":"@@ -83,14 +83,16 @@ public void update() {\n \n             // 2. attempt to access with old pwd -> fail\n             try {\n-                new SyncopeClientFactoryBean().setAddress(ADDRESS).setDomain(\"Two\").\n+                new SyncopeClientFactoryBean().\n+                        setAddress(ADDRESS).setDomain(\"Two\").setContentType(clientFactory.getContentType()).\n                         create(ADMIN_UNAME, \"password2\").self();\n             } catch (AccessControlException e) {\n                 assertNotNull(e);\n             }\n \n             // 3. access with new pwd -> succeed\n-            new SyncopeClientFactoryBean().setAddress(ADDRESS).setDomain(\"Two\").\n+            new SyncopeClientFactoryBean().\n+                    setAddress(ADDRESS).setDomain(\"Two\").setContentType(clientFactory.getContentType()).\n                     create(ADMIN_UNAME, \"password3\").self();\n         } finally {\n             restoreTwo();"}]}