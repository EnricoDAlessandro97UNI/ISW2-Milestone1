{"sha":"f8bc1288de2381d8027d2a56510a9064f3174409","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY4YmMxMjg4ZGUyMzgxZDgwMjdkMmE1NjUxMGE5MDY0ZjMxNzQ0MDk=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-01T15:41:00Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-01T15:41:00Z"},"message":"[SYNCOPE-752] Add console test and fixes","tree":{"sha":"218d3eea2e4aeb82c7f9a97ee36584f84a56e5da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/218d3eea2e4aeb82c7f9a97ee36584f84a56e5da"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f8bc1288de2381d8027d2a56510a9064f3174409","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f8bc1288de2381d8027d2a56510a9064f3174409","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f8bc1288de2381d8027d2a56510a9064f3174409","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f8bc1288de2381d8027d2a56510a9064f3174409/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"d729b206354b17a711e54e3ad9341cef803b961c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d729b206354b17a711e54e3ad9341cef803b961c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d729b206354b17a711e54e3ad9341cef803b961c"}],"stats":{"total":240,"additions":182,"deletions":58},"files":[{"sha":"262871a6be8763e2dfd22573e6663fb85f8512a7","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/StyledNotificationBehavior.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStyledNotificationBehavior.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -38,12 +38,14 @@ public StyledNotificationBehavior(final String selector, final Options options)\n \n     @Override\n     public void show(final IPartialPageRequestHandler handler, final Serializable message, final String level) {\n-        handler.appendJavaScript(String.format(\"%s.options.autoHideAfter = %s; %s.show( { message: '%s' } , '%s');\",\n-                this.widget(),\n-                Notification.SUCCESS.equalsIgnoreCase(level)\n-                || Notification.INFO.equalsIgnoreCase(level) ? AUTOHIDEAFTER_SUCCESS : AUTOHIDEAFTER_ERROR,\n-                this.widget(),\n-                this.format(String.valueOf(message), level),\n-                level.toLowerCase()));\n+        if (handler != null) {\n+            handler.appendJavaScript(String.format(\"%s.options.autoHideAfter = %s; %s.show( { message: '%s' } , '%s');\",\n+                    this.widget(),\n+                    Notification.SUCCESS.equalsIgnoreCase(level)\n+                    || Notification.INFO.equalsIgnoreCase(level) ? AUTOHIDEAFTER_SUCCESS : AUTOHIDEAFTER_ERROR,\n+                    this.widget(),\n+                    this.format(String.valueOf(message), level),\n+                    level.toLowerCase()));\n+        }\n     }\n }"},{"sha":"3a8d9e9e37a4a1a1c2b91b25cfe407bd97d4ee2f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -36,7 +36,7 @@ public class ParametersCreateWizardPanel extends AjaxWizardBuilder<ParametersCre\n     private static final long serialVersionUID = -2868592590785581481L;\n \n     private static final Logger LOG = LoggerFactory.getLogger(ParametersCreateWizardPanel.class);\n-    \n+\n     public ParametersCreateWizardPanel(final String id, final ParametersForm defaultItem, final PageReference pageRef) {\n         super(id, defaultItem, pageRef);\n "},{"sha":"c778bab03d6a512e5f3843e595a0625a7949aa80","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -41,8 +41,10 @@\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -107,16 +109,6 @@ BaseModal.CONTENT_ID, new AttrTO(), pageRef) {\n             public ModalPanel<AttrTO> build(final int index, final boolean edit) {\n                 return new ParametersCreateModalPanel(modal, newModelObject(), pageRef);\n             }\n-\n-            @Override\n-            protected void onCancelInternal(final AttrTO modelObject) {\n-            }\n-\n-            @Override\n-            protected Serializable onApplyInternal(final AttrTO modelObject) {\n-                return null;\n-            }\n-\n         }, true);\n         modal.size(Modal.Size.Medium);\n         initResultTable();\n@@ -220,6 +212,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 try {\n                                     SyncopeConsoleSession.get().getService(\n                                             ConfigurationService.class).delete(attrTO.getSchema());\n+                                    SyncopeConsoleSession.get().getService(\n+                                            SchemaService.class).delete(SchemaType.PLAIN, attrTO.getSchema());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {"},{"sha":"8207b7888a9f741fe41a948dd0b0ce26f058a900","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":32,"deletions":2,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -28,6 +28,8 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -42,8 +44,10 @@\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.ConfigurationService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -266,12 +270,38 @@ private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n         public Iterator<AbstractSchemaTO> iterator(final long first, final long count) {\n             final List<AbstractSchemaTO> list = schemaRestClient.getSchemas(this.schemaType);\n             Collections.sort(list, comparator);\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n+\n+            if (SchemaType.PLAIN == this.schemaType) {\n+                final List<String> configurations = new ArrayList<>();\n+\n+                CollectionUtils.collect(\n+                        SyncopeConsoleSession.get().getService(ConfigurationService.class).list(),\n+                        new Transformer<AttrTO, String>() {\n+\n+                    @Override\n+                    public String transform(final AttrTO attrTO) {\n+                        return attrTO.getSchema();\n+                    }\n+                }, configurations);\n+\n+                final List<AbstractSchemaTO> res = new ArrayList<>();\n+                for (AbstractSchemaTO item : list) {\n+                    if (!configurations.contains(item.getKey())) {\n+                        res.add(item);\n+                    }\n+                }\n+                return res.subList((int) first, (int) first + (int) count).iterator();\n+            } else {\n+                return list.subList((int) first, (int) first + (int) count).iterator();\n+            }\n         }\n \n         @Override\n         public long size() {\n-            return schemaRestClient.getSchemas(this.schemaType).size();\n+            int size = schemaRestClient.getSchemas(this.schemaType).size();\n+            return SchemaType.PLAIN == this.schemaType\n+                    ? size - SyncopeConsoleSession.get().getService(ConfigurationService.class).list().size()\n+                    : size;\n         }\n \n         @Override"},{"sha":"dc883bf61494f13d07037edebec3f10a64bea69a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -86,7 +87,8 @@ public final void onCancel() {\n             send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemCancelEvent<>(item, target));\n         } catch (Exception e) {\n             LOG.warn(\"Wizard error on cancel\", e);\n-            error(getString(\"wizard.cancel.error\"));\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n         }\n     }\n \n@@ -100,8 +102,9 @@ public final void onFinish() {\n             final Serializable res = onApplyInternal();\n             send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemFinishEvent<>(item, target).setResult(res));\n         } catch (Exception e) {\n-            LOG.warn(\"Wizard error on finish\", e);\n-            error(getString(\"wizard.apply.error\"));\n+            LOG.error(\"Wizard error on finish\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n         }\n     }\n "},{"sha":"c1839107350826376184940e7c6a956b3907d7ff","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -25,7 +25,7 @@\n public abstract class AjaxWizardBuilder<T extends Serializable> extends AbstractModalPanelBuilder<T> {\n \n     private static final long serialVersionUID = 5241745929825564456L;\n-    \n+\n     /**\n      * Construct.\n      *"},{"sha":"95db1bf14a3fc61595b499638fcf36128a785905","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -110,6 +110,8 @@ public Conf delete(final String key) {\n         CPlainAttr attr = instance.getPlainAttr(key);\n         if (attr != null) {\n             instance.getPlainAttrs().remove(attr);\n+            attrDAO.delete(attr.getKey(), CPlainAttr.class);\n+\n             instance = entityManager().merge(instance);\n         }\n "},{"sha":"33013a251fa393e0f195611761730280d81831f6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":2,"deletions":34,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -21,15 +21,12 @@\n import java.lang.reflect.InvocationTargetException;\n import javax.servlet.ServletContext;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.pages.Login;\n-import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.fit.AbstractITCase;\n import org.apache.wicket.Component;\n-import org.apache.wicket.Page;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n import org.apache.wicket.markup.repeater.OddEvenItem;\n import org.apache.wicket.util.tester.FormTester;\n@@ -41,6 +38,8 @@\n public abstract class AbstractConsoleITCase extends AbstractITCase {\n \n     protected static final String KEY = \"key\";\n+    \n+    protected static final String SCHEMA = \"schema\";\n \n     protected WicketTester wicketTester;\n \n@@ -100,35 +99,4 @@ public void component(final OddEvenItem<?> object, final IVisit<Component> visit\n                 });\n         return result;\n     }\n-\n-    protected Component findSuccessNotification(final Page page, final String searchPath, final String key) {\n-        Component result = page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n-\n-            @Override\n-            public void component(final NotificationPanel object, final IVisit<Component> visit) {\n-\n-                if (object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n-                    wicketTester.clickLink(object.getPageRelativePath());\n-                    visit.stop(object);\n-                }\n-            }\n-        });\n-        return result;\n-    }\n-\n-    protected Component findErrorNotification(final Page page, final String searchPath, final String key) {\n-        Component result = page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n-\n-            @Override\n-            public void component(final NotificationPanel object, final IVisit<Component> visit) {\n-\n-                if (!object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n-                    wicketTester.clickLink(object.getPageRelativePath());\n-                    visit.stop(object);\n-                }\n-\n-            }\n-        });\n-        return result;\n-    }\n }"},{"sha":"78acf35a150577459349647aee2a39fb79bc8943","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8bc1288de2381d8027d2a56510a9064f3174409/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8bc1288de2381d8027d2a56510a9064f3174409/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=f8bc1288de2381d8027d2a56510a9064f3174409","patch":"@@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.pages.Parameters;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class ParametersITCase extends AbstractConsoleITCase {\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        browsingToParameters();\n+    }\n+\n+    @Test\n+    public void readParameter() {\n+        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        assertNotNull(findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"token.expireTime\"));\n+    }\n+\n+    @Test\n+    public void createParameter() {\n+        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+\n+        wicketTester.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        wicketTester.assertComponent(\"body:content:parametersPanel:modal\", Modal.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:parametersPanel:modal:form\");\n+        formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:parametersPanel:modal:form\");\n+        formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"testParam\");\n+        formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n+\n+        formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+\n+        wicketTester.cleanupFeedbackMessages();\n+        wicketTester.assertRenderedPage(Parameters.class);\n+    }\n+\n+    @Test\n+    public void updateParameter() {\n+        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+\n+        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"token.expireTime\");\n+        assertNotNull(result);\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:5:cell:panelEdit:editLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:parametersPanel:container:content:modalDetails:form\");\n+\n+        formTester.setValue(\"content:parametersDetailsPanel:container:form:panel:spinner\", \"70\");\n+        wicketTester.clickLink(\"body:content:parametersPanel:\"\n+                + \"container:content:modalDetails:dialog:footer:inputs:0:submit\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+        wicketTester.assertRenderedPage(Parameters.class);\n+    }\n+\n+    @Test\n+    public void deleteParameter() {\n+        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+\n+        wicketTester.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        wicketTester.assertComponent(\"body:content:parametersPanel:modal\", Modal.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:parametersPanel:modal:form\");\n+        formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:parametersPanel:modal:form\");\n+        formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"deleteParam\");\n+        formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n+\n+        formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        wicketTester.clickLink(\"body:content:parametersPanel:\"\n+                + \"container:content:searchContainer:resultTable:tablePanel:\"\n+                + \"groupForm:checkgroup:dataTable:bottomToolbars:toolbars:3:span:navigator:last\");\n+\n+        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n+        assertNotNull(result);\n+        wicketTester.clickLink(result.getPageRelativePath() + \"cells:5:cell:panelDelete:deleteLink\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+    }\n+\n+    private void browsingToParameters() {\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:parametersLI:parameters\");\n+        wicketTester.assertRenderedPage(Parameters.class);\n+    }\n+}"}]}