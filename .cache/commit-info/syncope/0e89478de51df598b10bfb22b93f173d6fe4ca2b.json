{"sha":"0e89478de51df598b10bfb22b93f173d6fe4ca2b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlODk0NzhkZTUxZGY1OThiMTBiZmIyMmI5M2YxNzNkNmZlNGNhMmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-06T11:50:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-06T11:50:01Z"},"message":"[SYNCOPE-807] Fixed","tree":{"sha":"b34797763db423bf8974fe82347add4bacb762af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b34797763db423bf8974fe82347add4bacb762af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e89478de51df598b10bfb22b93f173d6fe4ca2b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e89478de51df598b10bfb22b93f173d6fe4ca2b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e89478de51df598b10bfb22b93f173d6fe4ca2b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e89478de51df598b10bfb22b93f173d6fe4ca2b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"692e1f91c67d8eeaa731392d42daa03b1df07248","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/692e1f91c67d8eeaa731392d42daa03b1df07248","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/692e1f91c67d8eeaa731392d42daa03b1df07248"}],"stats":{"total":396,"additions":258,"deletions":138},"files":[{"sha":"0002d6220281938853d133a35578e116a6fc3a37","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.panels.RealmModalPanel;\n import org.apache.syncope.client.console.panels.RealmChoicePanel;\n-import org.apache.syncope.client.console.panels.RealmChoicePanel.ChoosenRealm;\n+import org.apache.syncope.client.console.panels.RealmChoicePanel.ChosenRealm;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -75,6 +75,7 @@ public Realms(final PageParameters parameters) {\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(realmChoicePanel.reloadRealmTree(target));\n+                target.add(content);\n                 modal.show(false);\n             }\n         });\n@@ -86,9 +87,9 @@ public void onClose(final AjaxRequestTarget target) {\n     public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n \n-        if (event.getPayload() instanceof ChoosenRealm) {\n+        if (event.getPayload() instanceof ChosenRealm) {\n             @SuppressWarnings(\"unchecked\")\n-            final ChoosenRealm<RealmTO> choosenRealm = ChoosenRealm.class.cast(event.getPayload());\n+            final ChosenRealm<RealmTO> choosenRealm = ChosenRealm.class.cast(event.getPayload());\n             updateRealmContent(choosenRealm.getObj());\n             choosenRealm.getTarget().add(content);\n         }\n@@ -151,10 +152,10 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     realmRestClient.delete(realmTO.getFullPath());\n                     RealmTO parent = realmChoicePanel.moveToParentRealm(realmTO.getKey());\n                     target.add(realmChoicePanel.reloadRealmTree(target));\n-                    \n+\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                     updateRealmContent(parent);\n-                    target.add(content);                  \n+                    target.add(content);\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);\n                     // Escape line breaks"},{"sha":"eed2a4e5397ec0f8b0c849c25e4b6b9ad023fdf5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -70,10 +70,10 @@ public RealmChoicePanel(final String id, final PageReference pageRef) {\n         this.pageRef = pageRef;\n         tree = new HashMap<>();\n \n-        final RealmTO def = new RealmTO();\n-        def.setName(\"/\");\n-        def.setFullPath(\"/\");\n-        model = Model.of(def);\n+        RealmTO fakeRootRealm = new RealmTO();\n+        fakeRootRealm.setName(\"/\");\n+        fakeRootRealm.setFullPath(\"/\");\n+        model = Model.of(fakeRootRealm);\n \n         ldm = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n \n@@ -96,8 +96,11 @@ private void getChildren(\n \n             @Override\n             protected List<Pair<String, RealmTO>> load() {\n+                Map<Long, Pair<RealmTO, List<RealmTO>>> map = reloadRealmParentMap();\n+                model.setObject(map.get(1L).getKey());\n+\n                 final List<Pair<String, RealmTO>> full = new ArrayList<>();\n-                getChildren(full, 0L, reloadRealmParentMap(), StringUtils.EMPTY);\n+                getChildren(full, 0L, map, StringUtils.EMPTY);\n                 return full;\n             }\n         };\n@@ -138,7 +141,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             model.setObject(realmTO);\n                             label.setDefaultModelObject(model.getObject().getFullPath());\n                             target.add(label);\n-                            send(pageRef.getPage(), Broadcast.EXACT, new ChoosenRealm<>(realmTO, target));\n+                            send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n                         }\n                     });\n                 }\n@@ -232,13 +235,13 @@ public RealmTO moveToParentRealm(final long key) {\n         return null;\n     }\n \n-    public static class ChoosenRealm<T> {\n+    public static class ChosenRealm<T> {\n \n         private final AjaxRequestTarget target;\n \n         private final T obj;\n \n-        public ChoosenRealm(final T obj, final AjaxRequestTarget target) {\n+        public ChosenRealm(final T obj, final AjaxRequestTarget target) {\n             this.obj = obj;\n             this.target = target;\n         }"},{"sha":"4958f9e9546e171af37d502d991876e82af5eac2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":66,"deletions":8,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -18,14 +18,26 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -35,37 +47,83 @@ public class RealmDetails extends Panel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(RealmDetails.class);\n \n+    private final PolicyRestClient policyRestClient = new PolicyRestClient();\n+\n+    private final IModel<Map<Long, String>> accountPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<Long, String> load() {\n+            Map<Long, String> res = new HashMap<>();\n+            for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n+                res.put(policyTO.getKey(), policyTO.getDescription());\n+            }\n+            return res;\n+        }\n+    };\n+\n+    private final IModel<Map<Long, String>> passwordPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<Long, String> load() {\n+            Map<Long, String> res = new HashMap<>();\n+            for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n+                res.put(policyTO.getKey(), policyTO.getDescription());\n+            }\n+            return res;\n+        }\n+    };\n+\n     private final WebMarkupContainer container;\n \n     public RealmDetails(final String id, final RealmTO realmTO) {\n         this(id, realmTO, null, true);\n     }\n \n     public RealmDetails(\n-            final String id, final RealmTO realmTO, final ActionLinksPanel<?> actions, final boolean unwraped) {\n+            final String id,\n+            final RealmTO realmTO,\n+            final ActionLinksPanel<?> actions,\n+            final boolean unwrapped) {\n+\n         super(id);\n \n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n-        container.setRenderBodyOnly(unwraped);\n+        container.setRenderBodyOnly(unwrapped);\n         add(container);\n \n-        final FieldPanel<String> name = new AjaxTextFieldPanel(\n+        FieldPanel<String> name = new AjaxTextFieldPanel(\n                 \"name\", \"name\", new PropertyModel<String>(realmTO, \"name\"), false);\n         name.addRequiredLabel();\n         container.add(name);\n \n-        final FieldPanel<String> fullPath = new AjaxTextFieldPanel(\n+        FieldPanel<String> fullPath = new AjaxTextFieldPanel(\n                 \"fullPath\", \"fullPath\", new PropertyModel<String>(realmTO, \"fullPath\"), false);\n         fullPath.setEnabled(false);\n         container.add(fullPath);\n \n-        final FieldPanel<String> accountPolicy = new AjaxTextFieldPanel(\n-                \"accountPolicy\", \"accountPolicy\", new PropertyModel<String>(realmTO, \"accountPolicy\"), false);\n+        AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<>(\n+                \"accountPolicy\",\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n+                new PropertyModel<Long>(realmTO, \"accountPolicy\"),\n+                false);\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n+        accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n         container.add(accountPolicy);\n \n-        final FieldPanel<String> passwordPolicy = new AjaxTextFieldPanel(\n-                \"passwordPolicy\", \"passwordPolicy\", new PropertyModel<String>(realmTO, \"passwordPolicy\"), false);\n+        AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<>(\n+                \"passwordPolicy\",\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n+                new PropertyModel<Long>(realmTO, \"passwordPolicy\"),\n+                false);\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n+        passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n         container.add(passwordPolicy);\n \n         if (actions == null) {"},{"sha":"25e22ce91718cc6ee42dcc8c65106cc950deb6b1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceSecurityPanel.java","status":"modified","additions":49,"deletions":91,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -23,11 +23,11 @@\n import java.util.Map;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -41,139 +41,97 @@ public class ResourceSecurityPanel extends Panel {\n \n     private final PolicyRestClient policyRestClient = new PolicyRestClient();\n \n-    private IModel<Map<Long, String>> passwordPolicies = null;\n+    private final IModel<Map<Long, String>> passwordPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n \n-    private IModel<Map<Long, String>> accountPolicies = null;\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-    private IModel<Map<Long, String>> pullPolicies = null;\n-\n-    public ResourceSecurityPanel(final String id, final IModel<ResourceTO> model) {\n-\n-        super(id);\n-\n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        container.setRenderBodyOnly(true);\n-        add(container);\n-\n-        setOutputMarkupId(true);\n+        @Override\n+        protected Map<Long, String> load() {\n+            Map<Long, String> res = new HashMap<>();\n+            for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n+                res.put(policyTO.getKey(), policyTO.getDescription());\n+            }\n+            return res;\n+        }\n+    };\n \n-        passwordPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<Long, String>> accountPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n \n-            private static final long serialVersionUID = 5275935387613157437L;\n+        private static final long serialVersionUID = -2012833443695917883L;\n \n-            @Override\n-            protected Map<Long, String> load() {\n-                Map<Long, String> res = new HashMap<>();\n-                for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n-                    res.put(policyTO.getKey(), policyTO.getDescription());\n-                }\n-                return res;\n+        @Override\n+        protected Map<Long, String> load() {\n+            Map<Long, String> res = new HashMap<>();\n+            for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n+                res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n-        };\n+            return res;\n+        }\n+    };\n \n-        accountPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<Long, String>> pullPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n \n-            private static final long serialVersionUID = -2012833443695917883L;\n+        private static final long serialVersionUID = -2012833443695917883L;\n \n-            @Override\n-            protected Map<Long, String> load() {\n-                Map<Long, String> res = new HashMap<>();\n-                for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n-                    res.put(policyTO.getKey(), policyTO.getDescription());\n-                }\n-                return res;\n+        @Override\n+        protected Map<Long, String> load() {\n+            Map<Long, String> res = new HashMap<>();\n+            for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PULL)) {\n+                res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n-        };\n-\n-        pullPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+            return res;\n+        }\n+    };\n \n-            private static final long serialVersionUID = -2012833443695917883L;\n+    public ResourceSecurityPanel(final String id, final IModel<ResourceTO> model) {\n+        super(id);\n+        setOutputMarkupId(true);\n \n-            @Override\n-            protected Map<Long, String> load() {\n-                Map<Long, String> res = new HashMap<>();\n-                for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PULL)) {\n-                    res.put(policyTO.getKey(), policyTO.getDescription());\n-                }\n-                return res;\n-            }\n-        };\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        container.setRenderBodyOnly(true);\n+        add(container);\n \n         // -------------------------------\n-        // Password policy specification\n+        // Password policy selection\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\n+        AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<>(\n                 \"passwordPolicy\",\n                 new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n                 new PropertyModel<Long>(model, \"passwordPolicy\"),\n                 false);\n-\n-        passwordPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PASSWORD));\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n         passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n         container.add(passwordPolicy);\n         // -------------------------------\n \n         // -------------------------------\n-        // Account policy specification\n+        // Account policy selection\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\n+        AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<>(\n                 \"accountPolicy\",\n                 new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n                 new PropertyModel<Long>(model, \"accountPolicy\"),\n                 false);\n-\n-        accountPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.ACCOUNT));\n-        accountPolicy.setChoices(new ArrayList<Long>(accountPolicies.getObject().keySet()));\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n+        accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n         container.add(accountPolicy);\n         // -------------------------------\n \n         // -------------------------------\n-        // Pull policy specification\n+        // Pull policy selection\n         // -------------------------------\n         AjaxDropDownChoicePanel<Long> pullPolicy = new AjaxDropDownChoicePanel<>(\n                 \"pullPolicy\",\n                 new ResourceModel(\"pullPolicy\", \"pullPolicy\").getObject(),\n                 new PropertyModel<Long>(model, \"pullPolicy\"),\n                 false);\n-\n-        pullPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PULL));\n-        pullPolicy.setChoices(new ArrayList<Long>(pullPolicies.getObject().keySet()));\n+        pullPolicy.setChoiceRenderer(new PolicyRenderer(pullPolicies));\n+        pullPolicy.setChoices(new ArrayList<>(pullPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) pullPolicy.getField()).setNullValid(true);\n         container.add(pullPolicy);\n         // -------------------------------\n     }\n-\n-    private class PolicyRenderer extends ChoiceRenderer<Long> {\n-\n-        private static final long serialVersionUID = 8060500161321947000L;\n-\n-        private final PolicyType type;\n-\n-        PolicyRenderer(final PolicyType type) {\n-            super();\n-            this.type = type;\n-        }\n-\n-        @Override\n-        public Object getDisplayValue(final Long object) {\n-            switch (type) {\n-                case ACCOUNT:\n-                    return accountPolicies.getObject().get(object);\n-                case PASSWORD:\n-                    return passwordPolicies.getObject().get(object);\n-                case PULL:\n-                    return pullPolicies.getObject().get(object);\n-                default:\n-                    return \"\";\n-            }\n-        }\n-\n-        @Override\n-        public String getIdValue(final Long object, final int index) {\n-            return String.valueOf(object != null ? object : 0L);\n-        }\n-    };\n }"},{"sha":"f08684f151e12cb7daf129a86316a612e123040f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -46,7 +46,6 @@ public AjaxDropDownChoicePanel(\n \n         field = new BootstrapSelect<>(\n                 \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n-\n         add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {\n@@ -84,7 +83,7 @@ public AjaxDropDownChoicePanel<T> setNullValid(final boolean validity) {\n         BootstrapSelect.class.cast(field).setNullValid(validity);\n         return this;\n     }\n-    \n+\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public FieldPanel<T> clone() {"},{"sha":"a3fdbb02189f3cf355fc2c1fc11eaf74cfd0d72f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/PolicyRenderer.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Map;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+\n+public class PolicyRenderer extends ChoiceRenderer<Long> {\n+\n+    private static final long serialVersionUID = 8060500161321947000L;\n+\n+    private final IModel<Map<Long, String>> policies;\n+\n+    public PolicyRenderer(final IModel<Map<Long, String>> policies) {\n+        super();\n+        this.policies = policies;\n+    }\n+\n+    @Override\n+    public Object getDisplayValue(final Long object) {\n+        return policies.getObject().get(object);\n+    }\n+\n+    @Override\n+    public String getIdValue(final Long object, final int index) {\n+        return String.valueOf(object != null ? object : 0L);\n+    }\n+}"},{"sha":"649c884054f6212059ef8b64f529f907d8cdc5fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -18,9 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <script lang=\"text/javascript\">\n-\n-    </script>\n     <section class=\"content-header\">\n       <h1>&nbsp;</h1>\n       <ol class=\"breadcrumb\">"},{"sha":"a5e8d78fce1fb0fe1064ac95207b8407de6b434e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+fullPath=Path\n+accountPolicy=Account Policy\n+passwordPolicy=Password Policy"},{"sha":"0b97cf949a3159eb9fe0f3f74a646529a28bb8e0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+fullPath=Percorso\n+accountPolicy=Account Policy\n+passwordPolicy=Password Policy"},{"sha":"5d68eda8ac60ce1ac584ade35443b9c214c7ce19","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+fullPath=Caminho\n+accountPolicy=Pol\\u00edtica de Conta\n+passwordPolicy=Pol\\u00edtica de Senha"},{"sha":"5177e269791fd49357e71e3dc00b2e18ec641aa6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.html?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -19,10 +19,10 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div wicket:id=\"container\" class=\"summarize\">\n-      <span wicket:id=\"passwordPolicy\">\n+      <span wicket:id=\"accountPolicy\">\n         [panel for dynamic input type markup]\n       </span>\n-      <span wicket:id=\"accountPolicy\">\n+      <span wicket:id=\"passwordPolicy\">\n         [panel for dynamic input type markup]\n       </span>\n       <span wicket:id=\"pullPolicy\">"},{"sha":"0d2d9c4ecfbb88eb4be569730739b4991580107c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-passwordPolicy = Password Policy\n-accountPolicy = Account Policy\n+passwordPolicy=Password Policy\n+accountPolicy=Account Policy\n pullPolicy=Pull Policy"},{"sha":"0d2d9c4ecfbb88eb4be569730739b4991580107c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_it.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-passwordPolicy = Password Policy\n-accountPolicy = Account Policy\n+passwordPolicy=Password Policy\n+accountPolicy=Account Policy\n pullPolicy=Pull Policy"},{"sha":"48e925fad218e7a170bbee809f6891203772c740","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceSecurityPanel_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel_pt_BR.properties?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-passwordPolicy = Pol\\u00edtica de Senha\n-accountPolicy = Pol\\u00edtica de Conta\n+passwordPolicy=Pol\\u00edtica de Senha\n+accountPolicy=Pol\\u00edtica de Conta\n pullPolicy=Pol\\u00edtica de Pull"},{"sha":"c4b3da72a6689cb95b68ff27d334a6032f56a78a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -17,9 +17,6 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title>Drop down choice</title>\n-  </head>\n   <wicket:extend>\n     <wicket:enclosure child=\"field-label\">\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>"},{"sha":"70e7877c41ee0eaeec377c3d7c78aa83a9cc9deb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e89478de51df598b10bfb22b93f173d6fe4ca2b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e89478de51df598b10bfb22b93f173d6fe4ca2b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=0e89478de51df598b10bfb22b93f173d6fe4ca2b","patch":"@@ -134,24 +134,29 @@ public void update(final Realm realm, final RealmTO realmTO) {\n         realm.setName(realmTO.getName());\n         realm.setParent(realmTO.getParent() == 0 ? null : realmDAO.find(realmTO.getParent()));\n \n-        if (realmTO.getPasswordPolicy() != null) {\n-            Policy policy = policyDAO.find(realmTO.getPasswordPolicy());\n-            if (policy instanceof PasswordPolicy) {\n-                realm.setPasswordPolicy((PasswordPolicy) policy);\n+        if (realmTO.getAccountPolicy() == null) {\n+            realm.setAccountPolicy(null);\n+        } else {\n+            Policy policy = policyDAO.find(realmTO.getAccountPolicy());\n+            if (policy instanceof AccountPolicy) {\n+                realm.setAccountPolicy((AccountPolicy) policy);\n             } else {\n                 SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n-                sce.getElements().add(\"Expected \" + PasswordPolicy.class.getSimpleName()\n+                sce.getElements().add(\"Expected \" + AccountPolicy.class.getSimpleName()\n                         + \", found \" + policy.getClass().getSimpleName());\n                 throw sce;\n             }\n         }\n-        if (realmTO.getAccountPolicy() != null) {\n-            Policy policy = policyDAO.find(realmTO.getAccountPolicy());\n-            if (policy instanceof AccountPolicy) {\n-                realm.setAccountPolicy((AccountPolicy) policy);\n+\n+        if (realmTO.getPasswordPolicy() == null) {\n+            realm.setPasswordPolicy(null);\n+        } else {\n+            Policy policy = policyDAO.find(realmTO.getPasswordPolicy());\n+            if (policy instanceof PasswordPolicy) {\n+                realm.setPasswordPolicy((PasswordPolicy) policy);\n             } else {\n                 SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n-                sce.getElements().add(\"Expected \" + AccountPolicy.class.getSimpleName()\n+                sce.getElements().add(\"Expected \" + PasswordPolicy.class.getSimpleName()\n                         + \", found \" + policy.getClass().getSimpleName());\n                 throw sce;\n             }"}]}