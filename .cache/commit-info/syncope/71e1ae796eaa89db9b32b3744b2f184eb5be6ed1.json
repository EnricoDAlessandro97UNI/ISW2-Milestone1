{"sha":"71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","node_id":"C_kwDOJfYA1toAKDcxZTFhZTc5NmVhYTg5ZGI5YjMyYjM3NDRiMmYxODRlYjViZTZlZDE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-28T07:57:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-28T07:57:58Z"},"message":"Upgrading Commons JEXL","tree":{"sha":"631f91dfb1156b76257bc110aababde2fd47d600","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/631f91dfb1156b76257bc110aababde2fd47d600"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"46da3261a6004456b4cd239cdc9622f94183aab0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/46da3261a6004456b4cd239cdc9622f94183aab0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/46da3261a6004456b4cd239cdc9622f94183aab0"}],"stats":{"total":129,"additions":21,"deletions":108},"files":[{"sha":"88963eaa432c8f04cb9d57e35a292f6439011605","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/jexl/JexlUtils.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java?ref=71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","patch":"@@ -37,6 +37,7 @@\n import org.apache.commons.jexl3.JexlExpression;\n import org.apache.commons.jexl3.JxltEngine;\n import org.apache.commons.jexl3.MapContext;\n+import org.apache.commons.jexl3.introspection.JexlPermissions;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.ClassUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -73,8 +74,8 @@ private static JexlEngine getEngine() {\n         synchronized (LOG) {\n             if (JEXL_ENGINE == null) {\n                 JEXL_ENGINE = new JexlBuilder().\n-                        uberspect(new SandboxUberspect()).\n                         loader(new EmptyClassLoader()).\n+                        permissions(JexlPermissions.RESTRICTED.compose(\"java.time.*\", \"org.apache.syncope.*\")).\n                         namespaces(Map.of(\"syncope\", new SyncopeJexlFunctions())).\n                         cache(512).\n                         silent(false)."},{"sha":"26490fa60447f695d16ad513857ce6c30907d74b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/jexl/SandboxUberspect.java","status":"removed","additions":0,"deletions":103,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/46da3261a6004456b4cd239cdc9622f94183aab0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/46da3261a6004456b4cd239cdc9622f94183aab0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FSandboxUberspect.java?ref=46da3261a6004456b4cd239cdc9622f94183aab0","patch":"@@ -1,103 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.api.jexl;\n-\n-import java.time.Instant;\n-import java.time.temporal.TemporalAccessor;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.Set;\n-import org.apache.commons.jexl3.JexlEngine;\n-import org.apache.commons.jexl3.internal.introspection.Uberspect;\n-import org.apache.commons.jexl3.introspection.JexlMethod;\n-import org.apache.commons.jexl3.introspection.JexlPropertySet;\n-import org.apache.commons.jexl3.introspection.JexlUberspect;\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.persistence.api.entity.Membership;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.Realm;\n-\n-class SandboxUberspect extends Uberspect {\n-\n-    private static final Set<String> COLLECTION_METHODS =\n-            Set.of(\"contains\", \"containsAll\", \"isEmpty\", \"size\", \"iterator\", \"toString\");\n-\n-    private static final Set<String> LIST_METHODS =\n-            Set.of(\"get\", \"indexOf\", \"lastIndexOf\", \"toString\");\n-\n-    private static final Set<String> MAP_METHODS =\n-            Set.of(\"get\", \"getOrDefault\", \"containsKey\", \"containsValue\", \"toString\");\n-\n-    SandboxUberspect() {\n-        super(LogFactory.getLog(JexlEngine.class), JexlUberspect.JEXL_STRATEGY);\n-    }\n-\n-    @Override\n-    public JexlMethod getConstructor(final Object ctorHandle, final Object... args) {\n-        return null;\n-    }\n-\n-    @Override\n-    public JexlMethod getMethod(final Object obj, final String method, final Object... args) {\n-        if (obj instanceof AnyTO || obj instanceof Any\n-                || obj instanceof PlainAttr || obj instanceof Attr\n-                || obj instanceof MembershipTO || obj instanceof Membership\n-                || obj instanceof Realm || obj instanceof RealmTO) {\n-\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof SyncopeJexlFunctions) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof Optional) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj.getClass().isArray()) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof String) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof Date || obj instanceof Instant || obj instanceof TemporalAccessor) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof Map && MAP_METHODS.contains(method)) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof List && (LIST_METHODS.contains(method) || COLLECTION_METHODS.contains(method))) {\n-            return super.getMethod(obj, method, args);\n-        } else if (obj instanceof Collection && COLLECTION_METHODS.contains(method)) {\n-            return super.getMethod(obj, method, args);\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    public JexlPropertySet getPropertySet(final Object obj, final Object identifier, final Object arg) {\n-        return null;\n-    }\n-\n-    @Override\n-    public JexlPropertySet getPropertySet(\n-            final List<PropertyResolver> resolvers, final Object obj, final Object identifier, final Object arg) {\n-\n-        return null;\n-    }\n-}"},{"sha":"cd84f47c8817b27c594c7862cd9a77e5ad6b440c","filename":"core/provisioning-api/src/test/java/org/apache/syncope/core/provisioning/api/jexl/MappingTest.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FMappingTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FMappingTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FMappingTest.java?ref=71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","patch":"@@ -23,6 +23,7 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import java.time.OffsetDateTime;\n import org.apache.commons.jexl3.JexlContext;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n@@ -72,4 +73,15 @@ public void realmConnObjectLink() {\n \n         assertEquals(\"ou=even,o=isp\", JexlUtils.evaluate(connObjectLink, jexlContext));\n     }\n+\n+    @Test\n+    public void datetime() {\n+        OffsetDateTime now = OffsetDateTime.now();\n+\n+        JexlContext jexlContext = new MapContext();\n+        jexlContext.set(\"value\", now);\n+\n+        String expression = \"value.toInstant().toEpochMilli()\";\n+        assertEquals(now.toInstant().toEpochMilli(), JexlUtils.evaluate(expression, jexlContext));\n+    }\n }"},{"sha":"79678a16f3c888ce0f39b0835cc5ff41c4d94f23","filename":"core/provisioning-api/src/test/java/org/apache/syncope/core/provisioning/api/utils/JexlUtilsTest.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FJexlUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FJexlUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FJexlUtilsTest.java?ref=71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","patch":"@@ -54,8 +54,6 @@ public class JexlUtilsTest extends AbstractTest {\n     @Mock\n     private JexlContext context;\n \n-    private String expression;\n-\n     @Test\n     public void newJxltEngine() {\n         JxltEngine engine = JexlUtils.newJxltEngine();\n@@ -64,7 +62,7 @@ public void newJxltEngine() {\n \n     @Test\n     public void isExpressionValid() {\n-        expression = \"6 * 12 + 5 / 2.6\";\n+        String expression = \"6 * 12 + 5 / 2.6\";\n         assertTrue(JexlUtils.isExpressionValid(expression));\n \n         expression = \"@inv4lid expression!\";\n@@ -73,6 +71,7 @@ public void isExpressionValid() {\n \n     @Test\n     public void evaluate() {\n+        String expression = null;\n         assertEquals(StringUtils.EMPTY, JexlUtils.evaluate(expression, context));\n \n         expression = \"6 * 12 + 5 / 2.6\";\n@@ -143,6 +142,8 @@ public void addDerAttrsToContext(\n             final @Mock Any<?> any,\n             final @Mock DerSchema derSchema) {\n \n+        String expression = null;\n+\n         Map<DerSchema, String> derAttrs = new HashMap<>();\n         derAttrs.put(derSchema, expression);\n \n@@ -158,6 +159,8 @@ public void evaluateMandatoryCondition(\n             final @Mock DerSchema derSchema,\n             final @Mock Collection<? extends PlainAttr<?>> plainAttrs) {\n \n+        String expression = null;\n+\n         Map<DerSchema, String> derAttrs = new HashMap<>();\n         derAttrs.put(derSchema, expression);\n "},{"sha":"4cd8706f0cd29a67adcf692bb2b0320530f56b6e","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71e1ae796eaa89db9b32b3744b2f184eb5be6ed1/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=71e1ae796eaa89db9b32b3744b2f184eb5be6ed1","patch":"@@ -432,7 +432,7 @@ under the License.\n \n     <disruptor.version>3.4.4</disruptor.version>\n     \n-    <commons-jexl.version>3.2.1</commons-jexl.version>\n+    <commons-jexl.version>3.3</commons-jexl.version>\n     <commons-text.version>1.10.0</commons-text.version>\n \n     <pac4j.version>6.0.0-RC6-SNAPSHOT</pac4j.version>"}]}