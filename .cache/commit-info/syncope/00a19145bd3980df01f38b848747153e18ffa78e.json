{"sha":"00a19145bd3980df01f38b848747153e18ffa78e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAwYTE5MTQ1YmQzOTgwZGYwMWYzOGI4NDg3NDcxNTNlMThmZmE3OGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-21T13:20:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-31T13:37:39Z"},"message":"[SYNCOPE-1041] SAML 2.0 SP extension: console components","tree":{"sha":"bc9b2d384cc4f9966db046bc234c3156491363e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc9b2d384cc4f9966db046bc234c3156491363e6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/00a19145bd3980df01f38b848747153e18ffa78e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/00a19145bd3980df01f38b848747153e18ffa78e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/00a19145bd3980df01f38b848747153e18ffa78e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/00a19145bd3980df01f38b848747153e18ffa78e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ff26658e78ccde5ace071fc5450a21ddee0e5b6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff26658e78ccde5ace071fc5450a21ddee0e5b6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ff26658e78ccde5ace071fc5450a21ddee0e5b6a"}],"stats":{"total":2004,"additions":1094,"deletions":910},"files":[{"sha":"ac09333ce3c98087fd96bcd626488a6c0bc43c11","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleRequestCycleListener.java","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleRequestCycleListener.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -40,6 +40,14 @@ public class SyncopeConsoleRequestCycleListener extends AbstractRequestCycleList\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleRequestCycleListener.class);\n \n+    private static final String PAGE_EXPIRED = \"Session expired: please login again\";\n+\n+    private static final String MISSING_AUTHORIZATION = \"Missing authorization\";\n+\n+    private static final String MISSING_AUTHORIZATION_CORE = \"Missing authorization while contacting Syncope core\";\n+\n+    private static final String REST = \"Error while contacting Syncope core\";\n+\n     private Throwable instanceOf(final Exception e, final Class<? extends Exception> clazz) {\n         return clazz.isAssignableFrom(e.getClass())\n                 ? e\n@@ -59,23 +67,23 @@ public IRequestHandler onException(final RequestCycle cycle, final Exception e)\n \n         IRequestablePage errorPage = null;\n         if (instanceOf(e, UnauthorizedInstantiationException.class) != null) {\n-            errorParameters.add(\"errorMessage\", \"unauthorizedInstantiationException\");\n+            errorParameters.add(\"errorMessage\", MISSING_AUTHORIZATION);\n             errorPage = new Login(errorParameters);\n         } else if (instanceOf(e, AccessControlException.class) != null) {\n             if (instanceOf(e, AccessControlException.class).getMessage().contains(\"expired\")) {\n-                errorParameters.add(\"errorMessage\", \"pageExpiredException\");\n+                errorParameters.add(\"errorMessage\", PAGE_EXPIRED);\n             } else {\n-                errorParameters.add(\"errorMessage\", \"accessControlException\");\n+                errorParameters.add(\"errorMessage\", MISSING_AUTHORIZATION_CORE);\n             }\n             errorPage = new Login(errorParameters);\n         } else if (instanceOf(e, PageExpiredException.class) != null || !SyncopeConsoleSession.get().isSignedIn()) {\n-            errorParameters.add(\"errorMessage\", \"pageExpiredException\");\n+            errorParameters.add(\"errorMessage\", PAGE_EXPIRED);\n             errorPage = new Login(errorParameters);\n         } else if (instanceOf(e, BadRequestException.class) != null\n                 || instanceOf(e, WebServiceException.class) != null\n                 || instanceOf(e, SyncopeClientException.class) != null) {\n \n-            errorParameters.add(\"errorMessage\", \"restClientException\");\n+            errorParameters.add(\"errorMessage\", REST);\n             errorPage = new Login(errorParameters);\n         } else {\n             // redirect to default Wicket error page"},{"sha":"4064acf2a514f4a5cc515b30291d7f00e4500b24","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":36,"deletions":4,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -72,6 +72,8 @@ public class SyncopeConsoleSession extends AuthenticatedWebSession {\n         THREAD_POOL_FACTORY.setDaemon(true);\n     }\n \n+    private final SyncopeClient anonymousClient;\n+\n     private final PlatformInfo platformInfo;\n \n     private final SystemInfo systemInfo;\n@@ -99,7 +101,7 @@ public static SyncopeConsoleSession get() {\n     public SyncopeConsoleSession(final Request request) {\n         super(request);\n \n-        SyncopeClient anonymousClient = SyncopeConsoleApplication.get().getClientFactory().\n+        anonymousClient = SyncopeConsoleApplication.get().getClientFactory().\n                 create(new AnonymousAuthenticationHandler(\n                         SyncopeConsoleApplication.get().getAnonymousUser(),\n                         SyncopeConsoleApplication.get().getAnonymousKey()));\n@@ -113,6 +115,10 @@ public SyncopeConsoleSession(final Request request) {\n                 EntityTOUtils.<DomainTO>keyTransformer(), domains);\n     }\n \n+    public SyncopeClient getAnonymousClient() {\n+        return anonymousClient;\n+    }\n+\n     public void execute(final Runnable command) {\n         executorService.execute(command);\n     }\n@@ -141,6 +147,12 @@ public String getJWT() {\n         return client == null ? null : client.getJWT();\n     }\n \n+    private void afterAuthentication() {\n+        Pair<Map<String, Set<String>>, UserTO> self = client.self();\n+        auth = self.getKey();\n+        selfTO = self.getValue();\n+    }\n+\n     @Override\n     public boolean authenticate(final String username, final String password) {\n         boolean authenticated = false;\n@@ -149,9 +161,7 @@ public boolean authenticate(final String username, final String password) {\n             client = SyncopeConsoleApplication.get().getClientFactory().\n                     setDomain(getDomain()).create(username, password);\n \n-            Pair<Map<String, Set<String>>, UserTO> self = client.self();\n-            auth = self.getKey();\n-            selfTO = self.getValue();\n+            afterAuthentication();\n \n             authenticated = true;\n         } catch (Exception e) {\n@@ -161,6 +171,28 @@ public boolean authenticate(final String username, final String password) {\n         return authenticated;\n     }\n \n+    public boolean authenticate(final String jwt) {\n+        boolean authenticated = false;\n+\n+        try {\n+            client = SyncopeConsoleApplication.get().getClientFactory().\n+                    setDomain(getDomain()).create(jwt);\n+\n+            afterAuthentication();\n+\n+            authenticated = true;\n+        } catch (Exception e) {\n+            LOG.error(\"Authentication failed\", e);\n+        }\n+\n+        if (authenticated) {\n+            bind();\n+        }\n+        signIn(authenticated);\n+\n+        return authenticated;\n+    }\n+\n     public void cleanup() {\n         client = null;\n         auth = null;"},{"sha":"baf4653e3a04c92d756b2e135feeb0e0d46fb61d","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -47,6 +47,8 @@ public final class Constants {\n \n     public static final String ERROR = \"error\";\n \n+    public static final String BEFORE_LOGOUT_PAGE = \"beforeLogoutPage\";\n+\n     public static final String PARAM_PASSWORD_RESET_TOKEN = \"pwdResetToken\";\n \n     public static final String PREF_USERS_DETAILS_VIEW = \"users.details.view\";"},{"sha":"402bfddc38ed38d8e2273e6c5535baca5b86daaf","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/TemplateContent.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTemplateContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTemplateContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTemplateContent.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.io.Serializable;\n+\n+public class TemplateContent<F> implements Serializable {\n+\n+    private static final long serialVersionUID = 7772896797929614233L;\n+\n+    private final String key;\n+\n+    private String content;\n+\n+    private final F format;\n+\n+    public TemplateContent(final String key, final F format) {\n+        this.key = key;\n+        this.format = format;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public String getContent() {\n+        return content;\n+    }\n+\n+    public void setContent(final String content) {\n+        this.content = content;\n+    }\n+\n+    public F getFormat() {\n+        return format;\n+    }\n+\n+}"},{"sha":"d9ee460b0beb4efe1430a33617564345b516e540","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.ExtWidget;\n import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.SSOLoginFormPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.console.widgets.BaseExtWidget;\n import org.slf4j.Logger;\n@@ -53,6 +54,8 @@ public class ClassPathScanImplementationLookup {\n \n     private List<Class<? extends BaseExtWidget>> extWidgets;\n \n+    private List<Class<? extends SSOLoginFormPanel>> ssoLoginFormPanels;\n+\n     /**\n      * This method can be overridden by subclasses to customize classpath scan.\n      *\n@@ -68,12 +71,14 @@ public void load() {\n         previewers = new ArrayList<>();\n         extPages = new ArrayList<>();\n         extWidgets = new ArrayList<>();\n+        ssoLoginFormPanels = new ArrayList<>();\n \n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtWidget.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(SSOLoginFormPanel.class));\n \n         for (BeanDefinition bd : scanner.findCandidateComponents(getBasePackage())) {\n             try {\n@@ -100,6 +105,8 @@ public void load() {\n                         pages.add((Class<? extends BasePage>) clazz);\n                     } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n                         previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                    } else if (SSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n+                        ssoLoginFormPanels.add((Class<? extends SSOLoginFormPanel>) clazz);\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -137,9 +144,12 @@ public int compare(\n         });\n         extWidgets = Collections.unmodifiableList(extWidgets);\n \n+        ssoLoginFormPanels = Collections.unmodifiableList(ssoLoginFormPanels);\n+\n         LOG.debug(\"Binary previewers found: {}\", previewers);\n         LOG.debug(\"Extension pages found: {}\", extPages);\n         LOG.debug(\"Extension widgets found: {}\", extWidgets);\n+        LOG.debug(\"SSO Login pages found: {}\", ssoLoginFormPanels);\n     }\n \n     public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n@@ -171,4 +181,9 @@ public List<Class<? extends BaseExtPage>> getExtPageClasses() {\n     public List<Class<? extends BaseExtWidget>> getExtWidgetClasses() {\n         return extWidgets;\n     }\n+\n+    public List<Class<? extends SSOLoginFormPanel>> getSSOLoginFormPanels() {\n+        return ssoLoginFormPanels;\n+    }\n+\n }"},{"sha":"c82eccd149ae8b09a8fd5a6b03b34c62681da805","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/ConsoleLayoutInfo.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfo.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+\n+public class ConsoleLayoutInfo implements Serializable {\n+\n+    private static final long serialVersionUID = 961267717148831831L;\n+\n+    private final String key;\n+\n+    private String content;\n+\n+    public ConsoleLayoutInfo(final String key) {\n+        this.key = key;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public String getContent() {\n+        return content;\n+    }\n+\n+    public void setContent(final String content) {\n+        this.content = FormLayoutInfoUtils.defaultConsoleLayoutInfoIfEmpty(content, new AnyTypeRestClient().list());\n+    }\n+}"},{"sha":"4436dd97af70907b5905542e5895b08a3017ee8d","filename":"client/console/src/main/java/org/apache/syncope/client/console/layout/ConsoleLayoutInfoModal.java","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.java?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,116 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.layout;\n-\n-import java.io.Serializable;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextArea;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class ConsoleLayoutInfoModal extends AbstractModalPanel<Serializable> {\n-\n-    private static final long serialVersionUID = -5110368813584745668L;\n-\n-    private final ConsoleLayoutInfo consoleLayoutInfo;\n-\n-    public ConsoleLayoutInfoModal(\n-            final BaseModal<Serializable> modal,\n-            final ConsoleLayoutInfo consoleLayoutInfo,\n-            final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        this.consoleLayoutInfo = consoleLayoutInfo;\n-\n-        TextArea<String> consoleLayoutInfoDefArea = new TextArea<>(\"consoleLayoutInfo\", new PropertyModel<String>(\n-                consoleLayoutInfo, \"content\"));\n-        consoleLayoutInfoDefArea.setMarkupId(\"consoleLayoutInfo\").setOutputMarkupPlaceholderTag(true);\n-        add(consoleLayoutInfoDefArea);\n-    }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        super.renderHead(response);\n-        response.render(OnLoadHeaderItem.forScript(\n-                \"CodeMirror.fromTextArea(document.getElementById('consoleLayoutInfo'), {\"\n-                + \"  lineNumbers: true, \"\n-                + \"  lineWrapping: true, \"\n-                + \"  matchBrackets: true,\"\n-                + \"  autoCloseBrackets: true,\"\n-                + \"  autoRefresh: true\"\n-                + \"}).on('change', updateTextArea);\"));\n-    }\n-\n-    @Override\n-    public ConsoleLayoutInfo getItem() {\n-        return consoleLayoutInfo;\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            new RoleRestClient().setConsoleLayoutInfo(\n-                    consoleLayoutInfo.getKey(), consoleLayoutInfo.getContent());\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.show(false);\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While updating onsole layout info for role {}\", consoleLayoutInfo.getKey(), e);\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.\n-                    getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-\n-    public static class ConsoleLayoutInfo implements Serializable {\n-\n-        private static final long serialVersionUID = 961267717148831831L;\n-\n-        private final String key;\n-\n-        private String content;\n-\n-        public ConsoleLayoutInfo(final String key) {\n-            this.key = key;\n-        }\n-\n-        public String getKey() {\n-            return key;\n-        }\n-\n-        public String getContent() {\n-            return content;\n-        }\n-\n-        public void setContent(final String content) {\n-            this.content = FormLayoutInfoUtils.defaultConsoleLayoutInfoIfEmpty(content, new AnyTypeRestClient().list());\n-        }\n-    }\n-}"},{"sha":"a9b16f16c2540db4f19174f68b79247ee53a18d7","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":44,"deletions":14,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -19,14 +19,14 @@\n package org.apache.syncope.client.console.notifications;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.TemplateContent;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n@@ -55,14 +55,17 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n \n public class MailTemplateDirectoryPanel\n         extends DirectoryPanel<MailTemplateTO, MailTemplateTO, MailTemplateProvider, NotificationRestClient> {\n \n     private static final long serialVersionUID = -3789392431954221446L;\n \n-    protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n+    protected final BaseModal<String> utilityModal = new BaseModal<>(\"outer\");\n \n     public MailTemplateDirectoryPanel(final String id, final PageReference pageReference) {\n         super(id, pageReference, true);\n@@ -128,15 +131,13 @@ public ActionLinksPanel<MailTemplateTO> getActions(\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        TemplateContentModal.TemplateContent<MailTemplateFormat> content =\n-                                new TemplateContentModal.TemplateContent<>(\n-                                        model.getObject().getKey(), MailTemplateFormat.HTML);\n+                        TemplateContent<MailTemplateFormat> content =\n+                                new TemplateContent<>(model.getObject().getKey(), MailTemplateFormat.HTML);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n \n                         utilityModal.header(new ResourceModel(\"mail.template.html\", \"HTML Content\"));\n-                        utilityModal.setContent(new TemplateContentModal<>(\n-                                utilityModal, restClient, content, pageRef));\n+                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }\n@@ -148,16 +149,13 @@ public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore)\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        TemplateContentModal.TemplateContent<MailTemplateFormat> content =\n-                                new TemplateContentModal.TemplateContent<>(\n-                                        model.getObject().getKey(), MailTemplateFormat.TEXT);\n+                        TemplateContent<MailTemplateFormat> content =\n+                                new TemplateContent<>(model.getObject().getKey(), MailTemplateFormat.TEXT);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n \n-                        utilityModal.setFormModel(content);\n                         utilityModal.header(new ResourceModel(\"mail.template.text\", \"TEXT Content\"));\n-                        utilityModal.setContent(new TemplateContentModal<>(\n-                                utilityModal, restClient, content, pageRef));\n+                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }\n@@ -203,7 +201,7 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    public class MailTemplateProvider extends DirectoryDataProvider<MailTemplateTO> {\n+    protected final class MailTemplateProvider extends DirectoryDataProvider<MailTemplateTO> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -240,4 +238,36 @@ public MailTemplateTO getObject() {\n             };\n         }\n     }\n+\n+    private class TemplateContentEditorPanel extends XMLEditorPanel {\n+\n+        private static final long serialVersionUID = -3528875878627216097L;\n+\n+        private final TemplateContent<MailTemplateFormat> content;\n+\n+        TemplateContentEditorPanel(\n+                final TemplateContent<MailTemplateFormat> content,\n+                final PageReference pageRef) {\n+\n+            super(utilityModal, new PropertyModel<String>(content, \"content\"), false, pageRef);\n+            this.content = content;\n+        }\n+\n+        @Override\n+        public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+            try {\n+                restClient.updateTemplateFormat(\n+                        content.getKey(), content.getContent(), content.getFormat());\n+                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                modal.show(false);\n+                modal.close(target);\n+            } catch (Exception e) {\n+                LOG.error(\"While updating template for {}\", content.getKey(), e);\n+                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                        ? e.getClass().getName() : e.\n+                        getMessage());\n+            }\n+            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        }\n+    }\n }"},{"sha":"f462388c3b9b94e0be3941cd36a86c494e0dab3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/TemplateContentModal.java","status":"removed","additions":0,"deletions":126,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.java?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,126 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.notifications;\n-\n-import java.io.Serializable;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.TemplateRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextArea;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class TemplateContentModal<T extends EntityTO, F> extends AbstractModalPanel<Serializable> {\n-\n-    private static final long serialVersionUID = 2053048734388383021L;\n-\n-    private final TemplateContent<F> content;\n-\n-    private final TemplateRestClient<T, F> restClient;\n-\n-    public TemplateContentModal(\n-            final BaseModal<Serializable> modal,\n-            final TemplateRestClient<T, F> restClient,\n-            final TemplateContent<F> content,\n-            final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        this.restClient = restClient;\n-        this.content = content;\n-\n-        TextArea<String> templateDefArea = new TextArea<>(\"template\", new PropertyModel<String>(content, \"content\"));\n-        templateDefArea.setMarkupId(\"template\").setOutputMarkupPlaceholderTag(true);\n-        add(templateDefArea);\n-    }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        super.renderHead(response);\n-        response.render(OnLoadHeaderItem.forScript(\n-                \"CodeMirror.fromTextArea(document.getElementById('template'), {\"\n-                + \"  lineNumbers: true, \"\n-                + \"  lineWrapping: true, \"\n-                + \"  autoCloseTags: true, \"\n-                + \"  mode: 'text/html', \"\n-                + \"  autoRefresh: true\"\n-                + \"}).on('change', updateTextArea);\"));\n-    }\n-\n-    @Override\n-    public TemplateContent<F> getItem() {\n-        return this.content;\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            restClient.updateTemplateFormat(\n-                    content.getKey(), content.getContent(), content.getFormat());\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.show(false);\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While updating template for {}\", content.getKey(), e);\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.\n-                    getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-\n-    public static class TemplateContent<F> implements Serializable {\n-\n-        private static final long serialVersionUID = -1756961687134322845L;\n-\n-        private final String key;\n-\n-        private String content;\n-\n-        private final F format;\n-\n-        public TemplateContent(final String key, final F format) {\n-            this.key = key;\n-            this.format = format;\n-        }\n-\n-        public String getKey() {\n-            return key;\n-        }\n-\n-        public String getContent() {\n-            return content;\n-        }\n-\n-        public void setContent(final String content) {\n-            this.content = content;\n-        }\n-\n-        public F getFormat() {\n-            return format;\n-        }\n-    }\n-}"},{"sha":"62eb829d78c75f10b54f07ccf3d13e385391b31a","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":28,"deletions":1,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -41,6 +41,8 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.behavior.AttributeAppender;\n@@ -238,7 +240,32 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n         body.add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));\n-        body.add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n+\n+        @SuppressWarnings(\"unchecked\")\n+        final Class<? extends WebPage> beforeLogout = (Class<? extends WebPage>) SyncopeConsoleSession.get().\n+                getAttribute(Constants.BEFORE_LOGOUT_PAGE);\n+        if (beforeLogout == null) {\n+            body.add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n+        } else {\n+            body.add(new AjaxLink<Page>(\"logout\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                    super.updateAjaxAttributes(attributes);\n+\n+                    AjaxCallListener ajaxCallListener = new AjaxCallListener();\n+                    ajaxCallListener.onPrecondition(\"return confirm('\" + getString(\"confirmGlobalLogout\") + \"');\");\n+                    attributes.getAjaxCallListeners().add(ajaxCallListener);\n+                }\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    setResponsePage(beforeLogout);\n+                }\n+            });\n+        }\n \n         // set 'active' menu item for everything but extensions\n         // 1. check if current class is set to top-level menu"},{"sha":"296576d889982a097efa41bf3530d42582023e46","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":37,"deletions":2,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -20,11 +20,16 @@\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.select.BootstrapSelect;\n import java.security.AccessControlException;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Locale;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.console.panels.SSOLoginFormPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -38,13 +43,19 @@\n import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.markup.html.form.StatelessForm;\n import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class Login extends WebPage {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(Login.class);\n+\n     private static final long serialVersionUID = 5889157642852559004L;\n \n     private final NotificationPanel notificationPanel;\n@@ -71,7 +82,7 @@ public Login(final PageParameters parameters) {\n         exceptionMessage.setVisible(false);\n         if (!parameters.get(\"errorMessage\").isNull()) {\n             exceptionMessage.setVisible(true);\n-            exceptionMessage.setDefaultModel(new StringResourceModel(parameters.get(\"errorMessage\").toString()));\n+            exceptionMessage.setDefaultModel(Model.of(parameters.get(\"errorMessage\")));\n         }\n         add(exceptionMessage);\n \n@@ -122,6 +133,30 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         form.add(submitButton);\n         form.setDefaultButton(submitButton);\n \n+        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n+                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n+                        getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+        List<Panel> ssoLoginFormPanels = new ArrayList<>();\n+        for (Class<? extends SSOLoginFormPanel> ssoLoginFormPanel : classPathScanImplementationLookup.\n+                getSSOLoginFormPanels()) {\n+\n+            try {\n+                ssoLoginFormPanels.add(ssoLoginFormPanel.getConstructor(String.class).newInstance(\"ssoLogin\"));\n+            } catch (Exception e) {\n+                LOG.error(\"Could not initialize the provided SSO login form panel\", e);\n+            }\n+        }\n+        ListView<Panel> ssoLogins = new ListView<Panel>(\"ssoLogins\", ssoLoginFormPanels) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Panel> item) {\n+                item.add(item.getModelObject());\n+            }\n+        };\n+        form.add(ssoLogins);\n+\n         add(form);\n     }\n "},{"sha":"c7bd44b1149a3d03ed6e45c1e6b8603c36e8eed8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":27,"deletions":5,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.layout.ConsoleLayoutInfoModal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.util.ArrayList;\n@@ -32,6 +31,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.layout.ConsoleLayoutInfo;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.RoleDirectoryPanel.RoleDataProvider;\n@@ -43,6 +43,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n@@ -60,17 +61,19 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class RoleDirectoryPanel extends DirectoryPanel<RoleTO, RoleWrapper, RoleDataProvider, RoleRestClient> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n+    protected final BaseModal<String> utilityModal = new BaseModal<>(\"outer\");\n \n     protected final BaseModal<Serializable> membersModal = new BaseModal<>(\"outer\");\n \n@@ -198,12 +201,31 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        ConsoleLayoutInfoModal.ConsoleLayoutInfo info = new ConsoleLayoutInfoModal.ConsoleLayoutInfo(\n-                                model.getObject().getKey());\n+                        final ConsoleLayoutInfo info = new ConsoleLayoutInfo(model.getObject().getKey());\n                         info.setContent(restClient.readConsoleLayoutInfo(model.getObject().getKey()));\n \n                         utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));\n-                        utilityModal.setContent(new ConsoleLayoutInfoModal(utilityModal, info, pageRef));\n+                        utilityModal.setContent(new JsonEditorPanel(\n+                                utilityModal, new PropertyModel<String>(info, \"content\"), false, pageRef) {\n+\n+                            private static final long serialVersionUID = -8927036362466990179L;\n+\n+                            @Override\n+                            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                                try {\n+                                    restClient.setConsoleLayoutInfo(info.getKey(), info.getContent());\n+                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    modal.show(false);\n+                                    modal.close(target);\n+                                } catch (Exception e) {\n+                                    LOG.error(\"While updating onsole layout info for role {}\", info.getKey(), e);\n+                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.\n+                                            getMessage());\n+                                }\n+                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                            }\n+                        });\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }"},{"sha":"3bf6ac50accd3ec54100df9c3a8bbfec9641dad2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SSOLoginFormPanel.java","status":"renamed","additions":5,"deletions":21,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSSOLoginFormPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -18,29 +18,13 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.CamelRouteTO;\n-import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n \n-public class CamelRoutesModalPanel extends AbstractModalPanel<CamelRouteTO> {\n+public abstract class SSOLoginFormPanel extends Panel {\n \n-    private static final long serialVersionUID = 2053048734388383021L;\n+    private static final long serialVersionUID = -2371733568360773586L;\n \n-    private final CamelRouteTO camelRouteTO;\n-\n-    public CamelRoutesModalPanel(\n-            final BaseModal<CamelRouteTO> modal,\n-            final CamelRouteTO camelRouteTO,\n-            final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        this.camelRouteTO = camelRouteTO;\n-        add(new CamelRoutesDetailsPanel(\"camelRouteDetailsPanel\", this.camelRouteTO));\n+    public SSOLoginFormPanel(final String id) {\n+        super(id);\n     }\n-\n-    @Override\n-    public CamelRouteTO getItem() {\n-        return this.camelRouteTO;\n-    }\n-\n }","previous_filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesModalPanel.java"},{"sha":"be1553e7d79f631c70d790395cb28f941014680b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/WorkflowTogglePanel.java","status":"modified","additions":43,"deletions":1,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -20,11 +20,19 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.File;\n+import java.io.IOException;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.ActivitiModelerPopupPage;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.WorkflowRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.client.console.wicket.markup.html.link.VeilPopupSettings;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -33,9 +41,13 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.image.Image;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.util.io.IOUtils;\n \n public class WorkflowTogglePanel extends TogglePanel<String> {\n \n@@ -88,9 +100,39 @@ public void onClose(final AjaxRequestTarget target) {\n \n             private static final long serialVersionUID = -1964967067512351526L;\n \n+            private final WorkflowRestClient restClient = new WorkflowRestClient();\n+\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(modal.setContent(new XMLWorkflowEditorModalPanel(modal, new WorkflowRestClient(), pageRef)));\n+                final IModel<String> wfDefinition = new Model<>();\n+                try {\n+                    wfDefinition.setObject(IOUtils.toString(restClient.getDefinition(MediaType.APPLICATION_XML_TYPE)));\n+                } catch (IOException e) {\n+                    LOG.error(\"Could not get workflow definition\", e);\n+                }\n+\n+                target.add(modal.setContent(new XMLEditorPanel(modal, wfDefinition, false, pageRef) {\n+\n+                    private static final long serialVersionUID = 5488080606102212554L;\n+\n+                    @Override\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n+                            try {\n+                                restClient.updateDefinition(MediaType.APPLICATION_XML_TYPE, wfDefinition.getObject());\n+                                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+\n+                                modal.show(false);\n+                                modal.close(target);\n+                            } catch (SyncopeClientException e) {\n+                                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                                        getName() : e.\n+                                                getMessage());\n+                            }\n+                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        }\n+                    }\n+                }));\n \n                 modal.header(new ResourceModel(\"xmlEditorTitle\"));\n                 modal.show(true);"},{"sha":"b1eb97eb240a936f7d4abc639dd06fd810f916f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/XMLWorkflowEditorModalPanel.java","status":"removed","additions":0,"deletions":101,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.java?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,101 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.io.IOException;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextArea;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.util.io.IOUtils;\n-\n-public class XMLWorkflowEditorModalPanel extends AbstractModalPanel<String> {\n-\n-    private static final long serialVersionUID = 1937773326401753564L;\n-\n-    private final WorkflowRestClient wfRestClient;\n-\n-    private final TextArea<String> workflowDefArea;\n-\n-    private String wfDefinition;\n-\n-    public XMLWorkflowEditorModalPanel(\n-            final BaseModal<String> modal,\n-            final WorkflowRestClient wfRestClient,\n-            final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        this.wfRestClient = wfRestClient;\n-\n-        try {\n-            wfDefinition = IOUtils.toString(wfRestClient.getDefinition(MediaType.APPLICATION_XML_TYPE));\n-        } catch (IOException e) {\n-            LOG.error(\"Could not get workflow definition\", e);\n-            wfDefinition = StringUtils.EMPTY;\n-        }\n-\n-        workflowDefArea = new TextArea<>(\"workflowDefArea\", new Model<>(wfDefinition));\n-        add(workflowDefArea);\n-    }\n-\n-    @Override\n-    public String getItem() {\n-        return this.wfDefinition;\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            wfRestClient.updateDefinition(MediaType.APPLICATION_XML_TYPE, workflowDefArea.getModelObject());\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-            modal.show(false);\n-            modal.close(target);\n-        } catch (SyncopeClientException e) {\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.\n-                    getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        super.renderHead(response);\n-        response.render(OnLoadHeaderItem.forScript(\n-                \"CodeMirror.fromTextArea(document.getElementById('workflowDefArea'), {\"\n-                + \"  lineNumbers: true, \"\n-                + \"  lineWrapping: true, \"\n-                + \"  autoCloseTags: true, \"\n-                + \"  mode: 'text/html', \"\n-                + \"  autoRefresh: true\"\n-                + \"}).on('change', updateTextArea);\"));\n-    }\n-\n-}"},{"sha":"4b01fbdbef7658c862647fc570b48bf1301836a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":47,"deletions":18,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -19,18 +19,17 @@\n package org.apache.syncope.client.console.reports;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.TemplateContent;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.notifications.TemplateContentModal;\n import org.apache.syncope.client.console.notifications.TemplateModal;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n@@ -56,15 +55,18 @@\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.reports.ReportTemplateDirectoryPanel.ReportTemplateProvider;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n \n public class ReportTemplateDirectoryPanel\n         extends DirectoryPanel<ReportTemplateTO, ReportTemplateTO, ReportTemplateProvider, ReportRestClient> {\n \n     private static final long serialVersionUID = -3789392431954221446L;\n \n-    protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n+    protected final BaseModal<String> utilityModal = new BaseModal<>(\"outer\");\n \n     public ReportTemplateDirectoryPanel(final String id, final PageReference pageReference) {\n         super(id, pageReference, true);\n@@ -130,15 +132,13 @@ public ActionLinksPanel<ReportTemplateTO> getActions(\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContentModal.TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContentModal.TemplateContent<>(\n-                                        model.getObject().getKey(), ReportTemplateFormat.FO);\n+                        TemplateContent<ReportTemplateFormat> content =\n+                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.FO);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.FO));\n \n                         utilityModal.header(new ResourceModel(\"report.template.fo\", \"FO Content\"));\n-                        utilityModal.setContent(new TemplateContentModal<>(\n-                                utilityModal, restClient, content, pageRef));\n+                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }\n@@ -150,14 +150,13 @@ public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignor\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContentModal.TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContentModal.TemplateContent<>(\n-                                        model.getObject().getKey(), ReportTemplateFormat.HTML);\n+                        TemplateContent<ReportTemplateFormat> content =\n+                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.HTML);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.HTML));\n \n                         utilityModal.header(new ResourceModel(\"report.template.html\", \"HTML Content\"));\n-                        utilityModal.setContent(new TemplateContentModal<>(utilityModal, restClient, content, pageRef));\n+                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }\n@@ -169,15 +168,13 @@ public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignor\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContentModal.TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContentModal.TemplateContent<>(\n-                                        model.getObject().getKey(), ReportTemplateFormat.CSV);\n+                        TemplateContent<ReportTemplateFormat> content =\n+                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.CSV);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.CSV));\n \n-                        utilityModal.setFormModel(content);\n                         utilityModal.header(new ResourceModel(\"report.template.text\", \"TEXT Content\"));\n-                        utilityModal.setContent(new TemplateContentModal<>(utilityModal, restClient, content, pageRef));\n+                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n                         utilityModal.show(true);\n                         target.add(utilityModal);\n                     }\n@@ -223,7 +220,7 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n \n-    public class ReportTemplateProvider extends DirectoryDataProvider<ReportTemplateTO> {\n+    protected final class ReportTemplateProvider extends DirectoryDataProvider<ReportTemplateTO> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -260,4 +257,36 @@ public ReportTemplateTO getObject() {\n             };\n         }\n     }\n+\n+    private class TemplateContentEditorPanel extends XMLEditorPanel {\n+\n+        private static final long serialVersionUID = -3528875878627216097L;\n+\n+        private final TemplateContent<ReportTemplateFormat> content;\n+\n+        TemplateContentEditorPanel(\n+                final TemplateContent<ReportTemplateFormat> content,\n+                final PageReference pageRef) {\n+\n+            super(utilityModal, new PropertyModel<String>(content, \"content\"), false, pageRef);\n+            this.content = content;\n+        }\n+\n+        @Override\n+        public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+            try {\n+                restClient.updateTemplateFormat(\n+                        content.getKey(), content.getContent(), content.getFormat());\n+                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                modal.show(false);\n+                modal.close(target);\n+            } catch (Exception e) {\n+                LOG.error(\"While updating template for {}\", content.getKey(), e);\n+                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                        ? e.getClass().getName() : e.\n+                        getMessage());\n+            }\n+            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        }\n+    }\n }"},{"sha":"34b005ca13f222b29dd6562a274a8b6d45cdbb92","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/CrontabPanel.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -100,28 +100,23 @@ public void detach() {\n         cronTemplateChooser.setChoiceRenderer(new SelectChoiceRenderer<SelectOption>());\n         add(cronTemplateChooser);\n \n-        seconds = new AjaxTextFieldPanel(\n-                \"seconds\", \"seconds\", new Model<String>(getCronField(cronExpression, 0)));\n+        seconds = new AjaxTextFieldPanel(\"seconds\", \"seconds\", new Model<>(getCronField(cronExpression, 0)));\n         add(seconds.hideLabel());\n \n-        minutes = new AjaxTextFieldPanel(\n-                \"minutes\", \"minutes\", new Model<String>(getCronField(cronExpression, 1)));\n+        minutes = new AjaxTextFieldPanel(\"minutes\", \"minutes\", new Model<>(getCronField(cronExpression, 1)));\n         add(minutes.hideLabel());\n \n-        hours = new AjaxTextFieldPanel(\n-                \"hours\", \"hours\", new Model<String>(getCronField(cronExpression, 2)));\n+        hours = new AjaxTextFieldPanel(\"hours\", \"hours\", new Model<>(getCronField(cronExpression, 2)));\n         add(hours.hideLabel());\n \n         daysOfMonth = new AjaxTextFieldPanel(\n-                \"daysOfMonth\", \"daysOfMonth\", new Model<String>(getCronField(cronExpression, 3)));\n+                \"daysOfMonth\", \"daysOfMonth\", new Model<>(getCronField(cronExpression, 3)));\n         add(daysOfMonth.hideLabel());\n \n-        months = new AjaxTextFieldPanel(\n-                \"months\", \"months\", new Model<String>(getCronField(cronExpression, 4)));\n+        months = new AjaxTextFieldPanel(\"months\", \"months\", new Model<>(getCronField(cronExpression, 4)));\n         add(months.hideLabel());\n \n-        daysOfWeek = new AjaxTextFieldPanel(\n-                \"daysOfWeek\", \"daysOfWeek\", new Model<String>(getCronField(cronExpression, 5)));\n+        daysOfWeek = new AjaxTextFieldPanel(\"daysOfWeek\", \"daysOfWeek\", new Model<>(getCronField(cronExpression, 5)));\n         add(daysOfWeek.hideLabel());\n \n         final FormComponent<SelectOption> component = cronTemplateChooser.getField();"},{"sha":"fb84c7ebd871b8a0f6e38c6a58a11c06250afa95","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/JsonEditorPanel.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FJsonEditorPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n-import java.io.Serializable;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.wicket.PageReference;\n@@ -27,7 +26,7 @@\n import org.apache.wicket.markup.html.form.TextArea;\n import org.apache.wicket.model.IModel;\n \n-public class JsonEditorPanel extends AbstractModalPanel<Serializable> {\n+public class JsonEditorPanel extends AbstractModalPanel<String> {\n \n     private static final long serialVersionUID = -5110368813584745668L;\n \n@@ -38,7 +37,7 @@ public JsonEditorPanel(final IModel<String> content) {\n     }\n \n     public JsonEditorPanel(\n-            final BaseModal<Serializable> modal,\n+            final BaseModal<String> modal,\n             final IModel<String> content,\n             final PageReference pageRef) {\n         super(modal, pageRef);\n@@ -60,9 +59,4 @@ public void renderHead(final IHeaderResponse response) {\n                 + \"  autoRefresh: true\"\n                 + \"}).on('change', updateTextArea);\"));\n     }\n-\n-    @Override\n-    public IModel<String> getItem() {\n-        return content;\n-    }\n }"},{"sha":"b061431cbc8d090d0485b529e85e458f7c80aa7b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -90,7 +90,7 @@ public Panel getPanel(final String panelId) {\n         // ------------------------\n         add(new ListView<AnyTypeTO>(\"aDynMembershipCond\", types) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {"},{"sha":"5a49b88f4dd3658a9c435a86456799babf6606c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -74,24 +74,22 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n         add(new ListView<MembershipTO>(\"membershipsVirSchemas\", membershipTOs) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipVirSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n-                        new StringResourceModel(\n-                                \"attributes.membership.accordion\",\n-                                VirAttrs.this,\n-                                Model.of(membershipTO))) {\n+                item.add(new Accordion(\"membershipVirSchemas\",\n+                        Collections.<ITab>singletonList(new AbstractTab(new StringResourceModel(\n+                                \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+                            private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public WebMarkupContainer getPanel(final String panelId) {\n-                        return new VirAttrs.VirSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n-                    }\n-                }), Model.of(-1)).setOutputMarkupId(true));\n+                            @Override\n+                            public WebMarkupContainer getPanel(final String panelId) {\n+                                return new VirAttrs.VirSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n+                            }\n+                        }), Model.of(-1)).setOutputMarkupId(true));\n             }\n         });\n     }"},{"sha":"575df6626cbd3d3699f45f949112f40f30694be0","filename":"client/console/src/main/resources/META-INF/resources/css/login.css","status":"modified","additions":81,"deletions":62,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Flogin.css?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -17,107 +17,126 @@\n  * under the License.\n  */\n body, html {\n-    height: 100% !important;\n-    background-repeat: no-repeat;\n-    background-image: linear-gradient(rgb(104, 145, 162), #00a65a);\n+  height: 100% !important;\n+  background-repeat: no-repeat;\n+  background-image: linear-gradient(rgb(104, 145, 162), #00a65a);\n }\n \n .card-container.card {\n-    width: 350px;\n-    padding: 40px 40px;\n+  width: 350px;\n+  padding: 40px 40px;\n }\n \n .btn {\n-    font-weight: 700;\n-    height: 36px;\n-    -moz-user-select: none;\n-    -webkit-user-select: none;\n-    user-select: none;\n-    cursor: default;\n+  font-weight: 700;\n+  height: 36px;\n+  -moz-user-select: none;\n+  -webkit-user-select: none;\n+  user-select: none;\n+  cursor: default;\n }\n \n /*\n  * Card component\n  */\n .card {\n-    background-color: #F7F7F7;\n-    /* just in case there no content*/\n-    padding: 20px 25px 30px;\n-    margin: 0 auto 25px;\n-    margin-top: 50px;\n-    /* shadows and rounded borders */\n-    -moz-border-radius: 2px;\n-    -webkit-border-radius: 2px;\n-    border-radius: 2px;\n-    -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n-    -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n-    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+  background-color: #F7F7F7;\n+  /* just in case there no content*/\n+  padding: 20px 25px 30px;\n+  margin: 0 auto 25px;\n+  margin-top: 50px;\n+  /* shadows and rounded borders */\n+  -moz-border-radius: 2px;\n+  -webkit-border-radius: 2px;\n+  border-radius: 2px;\n+  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n+  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n }\n \n .login-logo {\n-    width: 200px;\n-    margin: 0 auto 10px;\n-    display: block;\n+  width: 200px;\n+  margin: 0 auto 10px;\n+  display: block;\n }\n \n /*\n  * Form styles\n  */\n .profile-name-card {\n-    font-size: 16px;\n-    font-weight: bold;\n-    text-align: center;\n-    margin: 10px 0 0;\n-    min-height: 1em;\n+  font-size: 16px;\n+  font-weight: bold;\n+  text-align: center;\n+  margin: 10px 0 0;\n+  min-height: 1em;\n }\n \n .form-signin #inputPassword,\n .form-signin #inputPassword {\n-    direction: ltr;\n-    height: 44px;\n-    font-size: 16px;\n+  direction: ltr;\n+  height: 44px;\n+  font-size: 16px;\n }\n \n .form-signin input[type=password],\n .form-signin input[type=text],\n .form-signin button {\n-    width: 100%;\n-    display: block;\n-    margin-bottom: 10px;\n-    z-index: 1;\n-    position: relative;\n-    -moz-box-sizing: border-box;\n-    -webkit-box-sizing: border-box;\n-    box-sizing: border-box;\n+  width: 100%;\n+  display: block;\n+  margin-bottom: 10px;\n+  z-index: 1;\n+  position: relative;\n+  -moz-box-sizing: border-box;\n+  -webkit-box-sizing: border-box;\n+  box-sizing: border-box;\n }\n \n .form-signin .form-control:focus {\n-    border-color: rgb(104, 145, 162);\n-    outline: 0;\n-    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n-    box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n+  border-color: rgb(104, 145, 162);\n+  outline: 0;\n+  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n+  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\n }\n \n .btn.btn-signin {\n-    /*background-color: #4d90fe; */\n-    background-color: rgb(104, 145, 162);\n-    /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\n-    padding: 0px;\n-    font-weight: 700;\n-    font-size: 14px;\n-    height: 36px;\n-    -moz-border-radius: 3px;\n-    -webkit-border-radius: 3px;\n-    border-radius: 3px;\n-    border: none;\n-    -o-transition: all 0.218s;\n-    -moz-transition: all 0.218s;\n-    -webkit-transition: all 0.218s;\n-    transition: all 0.218s;\n+  background-color: rgb(104, 145, 162);\n+  padding: 0px;\n+  font-weight: 700;\n+  font-size: 14px;\n+  height: 36px;\n+  -moz-border-radius: 3px;\n+  -webkit-border-radius: 3px;\n+  border-radius: 3px;\n+  border: none;\n+  -o-transition: all 0.218s;\n+  -moz-transition: all 0.218s;\n+  -webkit-transition: all 0.218s;\n+  transition: all 0.218s;\n }\n \n .btn.btn-signin:hover,\n .btn.btn-signin:active,\n .btn.btn-signin:focus {\n-    background-color: #00a65a;\n+  background-color: #00a65a;\n+}\n+\n+.btn.btn-sso {\n+  padding: 0px;\n+  font-weight: 700;\n+  font-size: 14px;\n+  height: 36px;\n+  -moz-border-radius: 3px;\n+  -webkit-border-radius: 3px;\n+  border-radius: 3px;\n+  border: none;\n+  -o-transition: all 0.218s;\n+  -moz-transition: all 0.218s;\n+  -webkit-transition: all 0.218s;\n+  transition: all 0.218s;\n+}\n+\n+.btn.btn-sso:hover,\n+.btn.btn-sso:active,\n+.btn.btn-sso:focus {\n+  background-color: #00a65a;\n }"},{"sha":"77841d69f598e2fb682a532d9e7581f0b0f32cbe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -32,12 +32,6 @@ confirmUnassign=Do you really want to remove the assignment between the selected\n confirmDeprovision=Do you really want to de-provision the selected item(s)?\n confirmProvision=Do you really want to provision the selected item(s)?\n \n-\n-unauthorizedInstantiationException=Missing authorization.\n-accessControlException=Missing authorization while contacting Syncope core.\n-restClientException=Error while contacting Syncope core.\n-pageExpiredException=Session expired: please login again.\n-\n dropDownChoiceField.nullValid=Choose one\n DateTimeField$HoursValidator=Hour value must be in range (1, 12)\n error=Error\n@@ -74,3 +68,4 @@ entitlements=Entitlements\n audit=Audit\n connectors.confirm.reload=This request is potentially dangerous for running operations, continue?\n intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n+confirmGlobalLogout=Do you really want to perform global logout?"},{"sha":"8c2df2fff05883d8a00338e69eb354b312a3c207","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -32,11 +32,6 @@ confirmUnassign=Vuoi davvero procedere rimuovendo l'assegnamento sulla risorsa?\n confirmDeprovision=Vuoi davvero procedere con il de-provisioning?\n confirmProvision=Vuoi davvero procedere con il provisioning?\n \n-unauthorizedInstantiationException=Autorizzazione mancante.\n-accessControlException=Autorizzazione mancante durante la comunicazione con Syncope core.\n-restClientException=Errore durante la comunicazione con Syncope core.\n-pageExpiredException=Sessione scaduta: eseguire di nuovo l'accesso.\n-\n dropDownChoiceField.nullValid=Seleziona\n DateTimeField$HoursValidator=L'ora deve essere nell'intervallo (1,12)\n error=Errore\n@@ -73,3 +68,4 @@ entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n intAttrNameInfo.help=Oltre agli attributi auto-completati, \\u00e8 possibile fare riferimento anche a gruppi, any object e membership (se applicabile); ad esempio:\n+confirmGlobalLogout=Vuoi davvero procedere al logout globale?"},{"sha":"043df2912bfbffe2e2ff7783f552bbc829041e31","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -32,11 +32,6 @@ confirmUnassign=Voc\\u00ea realmente deseja apagar a atribui\\u00e7\\u00e3o entre o\n confirmDeprovision=Voc\\u00ea realmente de-provision item?\n confirmProvision=Voc\\u00ea realmente provision item?\n \n-unauthorizedInstantiationException=Falta de autoriza\\u00e7\\u00e3o para concluir.\n-accessControlException=Falta de autoriza\\u00e7\\u00e3o ao comunicar-se com o Syncope core.\n-restClientException=Erro ao comunicar-se com o Syncope core.\n-pageExpiredException=Sess\\u00e3o encerrada, favor logar-se novamente.\n-\n dropDownChoiceField.nullValid=Escolha um\n DateTimeField$HoursValidator=O seu valor precisa estar entre (1, 12)\n error=Erro\n@@ -73,3 +68,4 @@ entitlements=Entitlement\n audit=Audit\n connectors.confirm.reload=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?\n intAttrNameInfo.help=Besides auto-completed attributes, you can also refer to groups, any objects or memberships  (if applicable); for example:\n+confirmGlobalLogout=Do you really want to perform global logout?"},{"sha":"c66100802bdf64fb24a3f58946ecbb1562099297","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -31,11 +31,6 @@ confirmUnlink=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u043\n confirmUnassign=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c \\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u0430 \\u0434\\u043b\\u044f \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432?\n confirmDeprovision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043e\\u0442\\u043e\\u0437\\u0432\\u0430\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n confirmProvision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n-\n-unauthorizedInstantiationException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438.\n-accessControlException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043f\\u0440\\u0438 \\u0432\\u0437\\u0430\\u0438\\u043c\\u043e\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0438 \\u0441 \\u044f\\u0434\\u0440\\u043e\\u043c Syncope.\n-restClientException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0432\\u0437\\u0430\\u0438\\u043c\\u043e\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0441 \\u044f\\u0434\\u0440\\u043e\\u043c Syncope\n-pageExpiredException=\\u0412\\u0440\\u0435\\u043c\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438 \\u0438\\u0441\\u0442\\u0435\\u043a\\u043b\\u043e, \\u043f\\u043e\\u0436\\u0430\\u043b\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435 \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u043d\\u044b\\u0439 \\u0432\\u0445\\u043e\\u0434\n dropDownChoiceField.nullValid=\\u0412\\u044b\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\n DateTimeField$HoursValidator=\\u0427\\u0430\\u0441\\u044b \\u0434\\u043e\\u043b\\u0436\\u043d\\u044b \\u0431\\u044b\\u0442\\u044c \\u0443\\u043a\\u0430\\u0437\\u0430\\u043d\\u044b \\u0432 \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0435 (1, 12)\n error=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430\n@@ -72,3 +67,4 @@ entitlements=\\u041f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f\n audit=\\u0410\\u0443\\u0434\\u0438\\u0442\n connectors.confirm.reload=\\u0412\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u0435 \\u044d\\u0442\\u043e\\u0433\\u043e \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u043f\\u043e\\u0442\\u0435\\u043d\\u0446\\u0438\\u0430\\u043b\\u044c\\u043d\\u043e \\u043e\\u043f\\u0430\\u0441\\u043d\\u043e \\u0434\\u043b\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u044f\\u0435\\u043c\\u044b\\u0445 \\u043e\\u043f\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439. \\u041f\\u0440\\u043e\\u0434\\u043e\\u043b\\u0436\\u0438\\u0442\\u044c?\n intAttrNameInfo.help=\\u041f\\u043e\\u043c\\u0438\\u043c\\u043e \\u0430\\u0432\\u0442\\u043e\\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u043e\\u0432, \\u0432\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0433\\u0440\\u0443\\u043f\\u043f\\u044b, \\u0440\\u0430\\u0437\\u043b\\u0438\\u0447\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b \\u0438 \\u0447\\u043b\\u0435\\u043d\\u0441\\u0442\\u0432\\u043e (\\u043f\\u0440\\u0438 \\u043d\\u0430\\u043b\\u0438\\u0447\\u0438\\u0438), \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\n+confirmGlobalLogout=Do you really want to perform global logout?"},{"sha":"c969faa6bbe18c1cb3c43026924795e1a498db4b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/layout/ConsoleLayoutInfoModal.html","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FConsoleLayoutInfoModal.html?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,54 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n-\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/javascript/javascript.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/matchbrackets.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closebrackets.js\"></script>\n-    <script type=\"text/javascript\">\n-      function updateTextArea(editor) {\n-        document.getElementById(\"consoleLayoutInfoDefForm\").children[\"consoleLayoutInfo\"].value = editor.getValue();\n-      }\n-    </script>\n-    <style>\n-      .w_content_3 {\n-        padding: 0;\n-        color: #333333;\n-        font-family: Verdana,Tahoma,sans-serif;\n-        font-size: 100%;\n-        border: 1px solid #BBBBBB;\n-        padding: 1%;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:panel>\n-    <div style=\"padding: 1%;\">\n-      <div class=\"w_content_3\" id=\"consoleLayoutInfoDefForm\">\n-        <textarea wicket:id=\"consoleLayoutInfo\" id=\"consoleLayoutInfo\" name=\"consoleLayoutInfo\" style=\"width: 100%; height: 350px;\">\n-        </textarea>\n-      </div>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"29d184129bc1cbe2ae17c01058f48940e47b3982","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$About.html","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -17,15 +17,12 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"about\"></span>\n-      </div>\n-      <div wicket:id=\"search\">\n-        <span wicket:id=\"clauses\"></span>\n-      </div>\n-    </wicket:panel>\n-  </body>\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"about\"></span>\n+    </div>\n+    <div wicket:id=\"search\">\n+      <span wicket:id=\"clauses\"></span>\n+    </div>\n+  </wicket:panel>\n </html>"},{"sha":"2f30d1f21ecb0706d315cdf956728ae861441fde","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/TemplateContentModal.html","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FTemplateContentModal.html?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,53 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n-\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n-    <script type=\"text/javascript\">\n-      function updateTextArea(editor) {\n-        document.getElementById(\"templateDefForm\").children[\"template\"].value = editor.getValue();\n-      }\n-    </script>\n-    <style>\n-      .w_content_3 {\n-        padding: 0;\n-        color: #333333;\n-        font-family: Verdana,Tahoma,sans-serif;\n-        font-size: 100%;\n-        border: 1px solid #BBBBBB;\n-        padding: 1%;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:panel>\n-    <div style=\"padding: 1%;\">\n-      <div class=\"w_content_3\" id=\"templateDefForm\">\n-        <textarea wicket:id=\"template\" id=\"template\" name=\"template\" style=\"width: 100%; height: 350px;\">\n-        </textarea>\n-      </div>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"c7271b44c5ee60614f3b07a785cf821a2f056aa6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Login.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.html?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -58,6 +58,10 @@\n \n             <button wicket:id=\"submit\" type=\"submit\" class=\"btn btn-lg btn-primary btn-block btn-signin\"></button>\n           </fieldset>\n+\n+          <div wicket:id=\"ssoLogins\">\n+            <div wicket:id=\"ssoLogin\"/>\n+          </div>\n         </form>\n       </div>\n     </div>"},{"sha":"0b51d5e6fe26781d4a1125700e4999e00cc9e282","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/XMLWorkflowEditorModalPanel.html","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FXMLWorkflowEditorModalPanel.html?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,53 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n-\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n-    <script type=\"text/javascript\">\n-      function updateTextArea(editor) {\n-        document.getElementById(\"workflowDefArea\").value = editor.getValue();\n-      }\n-    </script>\n-    <style>\n-      .w_content_3 {\n-        padding: 0;\n-        color: #333333;\n-        font-family: Verdana,Tahoma,sans-serif;\n-        font-size: 100%;\n-        border: 1px solid #BBBBBB;\n-        padding: 1%;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:panel>\n-    <div style=\"padding: 1%;\">\n-      <div class=\"w_content_3\">\n-        <textarea wicket:id=\"workflowDefArea\" id=\"workflowDefArea\" name=\"workflowDefArea\" style=\"width: 100%; height: 350px;\">\n-        </textarea>\n-      </div>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"d6a2065cb4b37a07b5601bbab87cfb18227809f9","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDetailsPanel.java","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.java?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,52 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.syncope.common.lib.to.CamelRouteTO;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-import org.apache.wicket.markup.html.form.TextArea;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class CamelRoutesDetailsPanel extends Panel {\n-\n-    private static final long serialVersionUID = -768345003061796383L;\n-\n-    public CamelRoutesDetailsPanel(final String id, final CamelRouteTO camelRoute) {\n-        super(id);\n-\n-        TextArea<String> routeDefArea = new TextArea<>(\"route\", new PropertyModel<String>(camelRoute, \"content\"));\n-        routeDefArea.setMarkupId(\"route\").setOutputMarkupPlaceholderTag(true);\n-        add(routeDefArea);\n-    }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        super.renderHead(response);\n-        response.render(OnLoadHeaderItem.forScript(\n-                \"CodeMirror.fromTextArea(document.getElementById('route'), {\"\n-                + \"  lineNumbers: true, \"\n-                + \"  lineWrapping: true, \"\n-                + \"  autoCloseTags: true, \"\n-                + \"  mode: 'text/html', \"\n-                + \"  autoRefresh: true\"\n-                + \"}).on('change', updateTextArea);\"));\n-    }\n-}"},{"sha":"a4b4df502a8b3445d793a293b36b4200e9f948be","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":46,"deletions":52,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -28,38 +28,41 @@\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.pages.CamelRoutes;\n import org.apache.syncope.client.console.panels.CamelRoutesDirectoryPanel.CamelRoutesProvider;\n import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n-import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.CamelEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n \n public class CamelRoutesDirectoryPanel extends DirectoryPanel<\n         CamelRouteTO, CamelRouteTO, CamelRoutesProvider, CamelRoutesRestClient> {\n \n     private static final long serialVersionUID = 3727444742501082182L;\n \n+    private static final String PREF_CAMEL_ROUTES_PAGINATOR_ROWS = \"camel.routes.paginator.rows\";\n+\n+    private final BaseModal<String> utilityModal = new BaseModal<>(\"outer\");\n+\n     private final AnyTypeKind anyTypeKind;\n \n     public CamelRoutesDirectoryPanel(final String id, final PageReference pageRef, final AnyTypeKind anyTypeKind) {\n-        super(id, new Builder<CamelRouteTO, CamelRouteTO, CamelRoutesRestClient>(\n-                new CamelRoutesRestClient(), pageRef) {\n+        super(id, new Builder<CamelRouteTO, CamelRouteTO, CamelRoutesRestClient>(new CamelRoutesRestClient(), pageRef) {\n \n             private static final long serialVersionUID = 8769126634538601689L;\n \n@@ -68,47 +71,17 @@ protected WizardMgtPanel<CamelRouteTO> newInstance(final String id, final boolea\n                 throw new UnsupportedOperationException();\n             }\n         }.disableCheckBoxes());\n+        setOutputMarkupId(true);\n \n         this.anyTypeKind = anyTypeKind;\n         setFooterVisibility(true);\n-        modal.addSubmitButton();\n-        modal.size(Modal.Size.Large);\n-        initResultTable();\n-\n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<CamelRouteTO>(new CamelRouteTO(), pageRef) {\n-\n-            private static final long serialVersionUID = -6388405037134399367L;\n-\n-            @Override\n-            public WizardModalPanel<CamelRouteTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n-                return new CamelRoutesModalPanel(modal, newModelObject(), pageRef) {\n-\n-                    private static final long serialVersionUID = -6227956682141146095L;\n-\n-                    @Override\n-                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                        try {\n-                            restClient.update(getItem());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            modal.close(target);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While creating or updating CamelRouteTO\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                };\n-            }\n-        }, false);\n-    }\n \n-    private CamelRoutesDirectoryPanel(\n-            final String id,\n-            final Builder<CamelRouteTO, CamelRouteTO, CamelRoutesRestClient> builder,\n-            final AnyTypeKind anyTypeKind) {\n+        addOuterObject(utilityModal);\n+        setWindowClosedReloadCallback(utilityModal);\n+        utilityModal.size(Modal.Size.Large);\n+        utilityModal.addSubmitButton();\n \n-        super(id, builder);\n-        this.anyTypeKind = anyTypeKind;\n+        initResultTable();\n     }\n \n     @Override\n@@ -118,7 +91,7 @@ protected CamelRoutesProvider dataProvider() {\n \n     @Override\n     protected String paginatorRowsKey() {\n-        return CamelRoutes.PREF_CAMEL_ROUTES_PAGINATOR_ROWS;\n+        return PREF_CAMEL_ROUTES_PAGINATOR_ROWS;\n     }\n \n     @Override\n@@ -143,15 +116,36 @@ public ActionLinksPanel<CamelRouteTO> getActions(\n                 ActionLinksPanel<CamelRouteTO> panel = ActionLinksPanel.<CamelRouteTO>builder().\n                         add(new ActionLink<CamelRouteTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n-                        CamelRouteTO actual = restClient.read(model.getObject().getKey());\n-                        send(CamelRoutesDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(actual, target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE).\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n+                                final CamelRouteTO route = restClient.read(model.getObject().getKey());\n+\n+                                utilityModal.header(Model.of(route.getKey()));\n+                                utilityModal.setContent(new XMLEditorPanel(\n+                                        utilityModal, new PropertyModel<String>(route, \"content\"), filtered, pageRef) {\n+\n+                                    private static final long serialVersionUID = 5488080606102212554L;\n+\n+                                    @Override\n+                                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                                        try {\n+                                            restClient.update(route);\n+                                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                                            modal.close(target);\n+                                        } catch (Exception e) {\n+                                            LOG.error(\"While creating or updating CamelRouteTO\", e);\n+                                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                        }\n+                                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                                    }\n+\n+                                });\n+                                utilityModal.show(true);\n+                                target.add(utilityModal);\n+                            }\n+                        }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE).\n                         build(componentId);\n \n                 return panel;"},{"sha":"663a6b3342b52c5f83b3ada769946cb7bc95bcd8","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutesDetailsPanel.html","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ff26658e78ccde5ace071fc5450a21ddee0e5b6a/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDetailsPanel.html?ref=ff26658e78ccde5ace071fc5450a21ddee0e5b6a","patch":"@@ -1,53 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n-\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/mode/xml/xml.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n-    <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/edit/closetag.js\"></script>\n-    <script type=\"text/javascript\">\n-      function updateTextArea(editor) {\n-        document.getElementById(\"routeDefForm\").children[\"route\"].value = editor.getValue();\n-      }\n-    </script>\n-    <style>\n-      .w_content_3 {\n-        padding: 0;\n-        color: #333333;\n-        font-family: Verdana,Tahoma,sans-serif;\n-        font-size: 100%;\n-        border: 1px solid #BBBBBB;\n-        padding: 1%;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:panel>\n-    <div style=\"padding: 1%;\">\n-      <div class=\"w_content_3\" id=\"routeDefForm\">\n-        <textarea wicket:id=\"route\" id=\"route\" name=\"route\" style=\"width: 100%; height: 350px;\">\n-        </textarea>\n-      </div>\n-    </div>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"eaea49f121fbe5a1b60562bf66ab211562a52001","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -54,7 +54,7 @@ protected void doPost(final HttpServletRequest request, final HttpServletRespons\n                 request.setAttribute(\"responseTO\", responseTO);\n                 request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n             } else {\n-                response.sendRedirect(successURL);\n+                response.sendRedirect(successURL + \"?sloSupported=\" + responseTO.isSloSupported());\n             }\n         } catch (Exception e) {\n             LOG.error(\"While processing authentication response from IdP\", e);\n@@ -66,7 +66,7 @@ protected void doPost(final HttpServletRequest request, final HttpServletRespons\n \n                 e.printStackTrace(response.getWriter());\n             } else {\n-                response.sendRedirect(errorURL + \"?message=\" + e.getMessage());\n+                response.sendRedirect(errorURL + \"?errorMessage=\" + e.getMessage());\n             }\n         }\n     }"},{"sha":"a04376d3ecdf4b5a9c98c9c804ea7b40f7fed280","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -56,7 +56,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n \n                 e.printStackTrace(response.getWriter());\n             } else {\n-                response.sendRedirect(errorURL + \"?message=\" + e.getMessage());\n+                response.sendRedirect(errorURL + \"?errorMessage=\" + e.getMessage());\n             }\n         }\n     }"},{"sha":"ec59499feac17ab9e4229d5f5d1982ab1174cf31","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -61,7 +61,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n \n                 e.printStackTrace(response.getWriter());\n             } else {\n-                response.sendRedirect(errorURL + \"?message=\" + e.getMessage());\n+                response.sendRedirect(errorURL + \"?errorMessage=\" + e.getMessage());\n             }\n         }\n     }\n@@ -98,7 +98,7 @@ protected void doPost(final HttpServletRequest request, final HttpServletRespons\n \n                 e.printStackTrace(response.getWriter());\n             } else {\n-                response.sendRedirect(errorURL + \"?message=\" + e.getMessage());\n+                response.sendRedirect(errorURL + \"?errorMessage=\" + e.getMessage());\n             }\n         }\n     }"},{"sha":"cf533a62a5c0a019068f9f969935a66d91d95de9","filename":"ext/saml2sp/client-console/pom.xml","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fpom.xml?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,83 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-saml2sp</artifactId>\n+    <version>2.0.3-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Extensions: SAML 2.0 SP Client Console</name>\n+  <description>Apache Syncope Extensions: SAML 2.0 SP Client Console</description>\n+  <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+  <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-common-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-agent</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"22ccb35382cd18bb5f21663948b9155eb0740d2c","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SPBeforeLogout.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPBeforeLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPBeforeLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPBeforeLogout.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.UrlUtils;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.http.handler.RedirectRequestHandler;\n+\n+public class SAML2SPBeforeLogout extends WebPage {\n+\n+    private static final long serialVersionUID = 4666948447239743855L;\n+\n+    public SAML2SPBeforeLogout() {\n+        super();\n+\n+        RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n+                UrlUtils.rewriteToContextRelative(\"saml2sp/logout\", RequestCycle.get())));\n+    }\n+\n+}"},{"sha":"6b975cbdb950542b5d657f0774ab3395bc748049","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SPLogin.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogin.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.authentication.IAuthenticationStrategy;\n+import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+public class SAML2SPLogin extends WebPage {\n+\n+    private static final long serialVersionUID = -245801838574917258L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SAML2SPLogin.class);\n+\n+    public SAML2SPLogin(final PageParameters parameters) {\n+        super(parameters);\n+\n+        String token = (String) ((ServletWebRequest) getRequest()).getContainerRequest().\n+                getSession().getAttribute(org.apache.syncope.ext.saml2lsp.agent.Constants.SAML2SPJWT);\n+        if (StringUtils.isBlank(token)) {\n+            LOG.error(\"No JWT found, redirecting to default greeter\");\n+\n+            PageParameters params = new PageParameters();\n+            params.add(\"errorMessage\", \"accessControlException\");\n+            setResponsePage(Login.class, params);\n+        }\n+\n+        IAuthenticationStrategy strategy = getApplication().getSecuritySettings().getAuthenticationStrategy();\n+\n+        if (SyncopeConsoleSession.get().authenticate(token)) {\n+            if (parameters.get(\"sloSupported\").toBoolean(false)) {\n+                SyncopeConsoleSession.get().setAttribute(\n+                        org.apache.syncope.client.console.commons.Constants.BEFORE_LOGOUT_PAGE,\n+                        SAML2SPBeforeLogout.class);\n+            }\n+\n+            // If login has been called because the user was not yet logged in, than continue to the\n+            // original destination, otherwise to the Home page\n+            continueToOriginalDestination();\n+            setResponsePage(getApplication().getHomePage());\n+        } else {\n+            PageParameters params = new PageParameters();\n+            params.add(\"errorMessage\", \"accessControlException\");\n+            setResponsePage(Login.class, params);\n+        }\n+        strategy.remove();\n+    }\n+\n+}"},{"sha":"16cf4814394e34ff363ebd747e0cf20c8992c38d","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SPLogout.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPLogout.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.wicket.markup.html.WebPage;\n+\n+public class SAML2SPLogout extends WebPage {\n+\n+    private static final long serialVersionUID = 4666948447239743855L;\n+\n+    public SAML2SPLogout() {\n+        super();\n+\n+        // this is needed because the actual logout was already performed by the SAML agent\n+        SyncopeConsoleSession.get().cleanup();\n+\n+        SyncopeConsoleSession.get().invalidate();\n+\n+        setResponsePage(getApplication().getHomePage());\n+    }\n+\n+}"},{"sha":"b3fab145781d2bdf1c55f96b873f79a1a9a835cc","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAMLSSOLoginFormPanel.java","status":"added","additions":107,"deletions":0,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.net.URLEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.to.SAML2IdPTO;\n+import org.apache.syncope.common.rest.api.service.SAML2IdPService;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.UrlUtils;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.http.handler.RedirectRequestHandler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SAMLSSOLoginFormPanel extends SSOLoginFormPanel {\n+\n+    private static final long serialVersionUID = -5252094098970677128L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SAMLSSOLoginFormPanel.class);\n+\n+    public SAMLSSOLoginFormPanel(final String id) {\n+        super(id);\n+\n+        List<SAML2IdPTO> available =\n+                SyncopeConsoleSession.get().getAnonymousClient().getService(SAML2IdPService.class).list();\n+\n+        final Model<SAML2IdPTO> model = new Model<>();\n+        AjaxDropDownChoicePanel<SAML2IdPTO> idps =\n+                new AjaxDropDownChoicePanel<>(\"idps\", \"SAML 2.0\", model, false);\n+        idps.setChoices(available);\n+        idps.setChoiceRenderer(new IChoiceRenderer<SAML2IdPTO>() {\n+\n+            private static final long serialVersionUID = 1814750973898916102L;\n+\n+            @Override\n+            public Object getDisplayValue(final SAML2IdPTO object) {\n+                return object.getName();\n+            }\n+\n+            @Override\n+            public String getIdValue(final SAML2IdPTO object, final int index) {\n+                return object.getEntityID();\n+            }\n+\n+            @Override\n+            public SAML2IdPTO getObject(final String id, final IModel<? extends List<? extends SAML2IdPTO>> choices) {\n+                return IterableUtils.find(choices.getObject(), new Predicate<SAML2IdPTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final SAML2IdPTO object) {\n+                        return object.getEntityID().equals(id);\n+                    }\n+                });\n+            }\n+        });\n+        idps.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (model.getObject() != null) {\n+                    try {\n+                        RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n+                                UrlUtils.rewriteToContextRelative(\"saml2sp/login?idp=\"\n+                                        + URLEncoder.encode(\n+                                                model.getObject().getEntityID(), StandardCharsets.UTF_8.name()),\n+                                        RequestCycle.get())));\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not redirect to the selected IdP {}\", model.getObject().getEntityID(), e);\n+                    }\n+                }\n+            }\n+        });\n+        idps.setOutputMarkupPlaceholderTag(true);\n+        idps.setVisible(!available.isEmpty());\n+        add(idps);\n+    }\n+\n+}"},{"sha":"8dfeef4e3474be184c687e0fb5861d8e1265051b","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAMLSSOLoginFormPanel.html","status":"renamed","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.html?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -17,7 +17,9 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <div wicket:id=\"camelRouteDetailsPanel\">[camelRouteDetailsPanel]</div>\n-  </wicket:extend>\n-</html>\n\\ No newline at end of file\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"idps\"></span>\n+    </div>\n+  </wicket:panel>\n+</html>","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutesModalPanel.html"},{"sha":"d22dfcdda64e6c500039953d34efb6b0c77fe138","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -40,10 +40,14 @@ public class SAML2IdPTO extends AbstractBaseBean implements EntityTO {\n \n     private String entityID;\n \n+    private String name;\n+\n     private String metadata;\n \n     private boolean useDeflateEncoding;\n \n+    private boolean logoutSupported;\n+\n     private final List<MappingItemTO> mappingItems = new ArrayList<>();\n \n     @Override\n@@ -65,6 +69,14 @@ public void setEntityID(final String entityID) {\n         this.entityID = entityID;\n     }\n \n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n     public String getMetadata() {\n         return metadata;\n     }\n@@ -81,6 +93,14 @@ public void setUseDeflateEncoding(final boolean useDeflateEncoding) {\n         this.useDeflateEncoding = useDeflateEncoding;\n     }\n \n+    public boolean isLogoutSupported() {\n+        return logoutSupported;\n+    }\n+\n+    public void setLogoutSupported(final boolean logoutSupported) {\n+        this.logoutSupported = logoutSupported;\n+    }\n+\n     public MappingItemTO getConnObjectKeyItem() {\n         return IterableUtils.find(getMappingItems(), new Predicate<MappingItemTO>() {\n "},{"sha":"941d7c59a1734541abf4024982cd1a319d74a0c4","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2LoginResponseTO.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -48,6 +48,10 @@ public class SAML2LoginResponseTO extends AbstractBaseBean {\n \n     private final Set<AttrTO> attrs = new HashSet<>();\n \n+    private String idp;\n+\n+    private boolean sloSupported;\n+\n     public String getNameID() {\n         return nameID;\n     }\n@@ -117,4 +121,20 @@ public Set<AttrTO> getAttrs() {\n         return attrs;\n     }\n \n+    public String getIdp() {\n+        return idp;\n+    }\n+\n+    public void setIdp(final String idp) {\n+        this.idp = idp;\n+    }\n+\n+    public boolean isSloSupported() {\n+        return sloSupported;\n+    }\n+\n+    public void setSloSupported(final boolean sloSupported) {\n+        this.sloSupported = sloSupported;\n+    }\n+\n }"},{"sha":"b0d47698ad9962ff61ea2ecc441b742f7ab44a63","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/types/SAML2SPEntitlement.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPEntitlement.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -28,8 +28,6 @@ public final class SAML2SPEntitlement {\n \n     public static final String IDP_READ = \"IDP_READ\";\n \n-    public static final String IDP_LIST = \"IDP_LIST\";\n-\n     public static final String IDP_IMPORT = \"IDP_IMPORT\";\n \n     public static final String IDP_UPDATE = \"IDP_UPDATE\";"},{"sha":"01c04eacbf4718aa0731dbcc0585a5a241675d29","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/AbstractSAML2Logic.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.core.logic.init.SAML2SPLoader;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public abstract class AbstractSAML2Logic<T extends AbstractBaseBean> extends AbstractTransactionalLogic<T> {\n+\n+    @Autowired\n+    protected SAML2SPLoader loader;\n+\n+    protected void check() {\n+        if (!loader.isInited()) {\n+            throw new IllegalStateException(\"Keystore setup did not work properly, SAML 2.0 SP features disabled\");\n+        }\n+    }\n+}"},{"sha":"eb1a94fd2f4826d37f78ebac6a19ae66b996f3d4","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2IdPLogic.java","status":"modified","additions":20,"deletions":9,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -55,11 +55,7 @@\n import org.w3c.dom.NodeList;\n \n @Component\n-public class SAML2IdPLogic extends AbstractTransactionalLogic<SAML2IdPTO> {\n-\n-    static {\n-        OpenSAMLUtil.initSamlEngine(false);\n-    }\n+public class SAML2IdPLogic extends AbstractSAML2Logic<SAML2IdPTO> {\n \n     @Autowired\n     private SAML2IdPCache cache;\n@@ -73,27 +69,35 @@ public class SAML2IdPLogic extends AbstractTransactionalLogic<SAML2IdPTO> {\n     @Autowired\n     private SAML2ReaderWriter saml2rw;\n \n-    @PreAuthorize(\"hasRole('\" + SAML2SPEntitlement.IDP_LIST + \"')\")\n+    private SAML2IdPTO complete(final SAML2IdPTO input) {\n+        SAML2IdPEntity idp = cache.get(input.getEntityID());\n+        input.setLogoutSupported(idp.getSLOLocation(SAMLConstants.SAML2_POST_BINDING_URI) != null);\n+        return input;\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     public List<SAML2IdPTO> list() {\n         return CollectionUtils.collect(idpDAO.findAll(), new Transformer<SAML2IdP, SAML2IdPTO>() {\n \n             @Override\n             public SAML2IdPTO transform(final SAML2IdP input) {\n-                return binder.getIdPTO(input);\n+                return complete(binder.getIdPTO(input));\n             }\n         }, new ArrayList<SAML2IdPTO>());\n     }\n \n     @PreAuthorize(\"hasRole('\" + SAML2SPEntitlement.IDP_READ + \"')\")\n     @Transactional(readOnly = true)\n     public SAML2IdPTO read(final String key) {\n+        check();\n+\n         SAML2IdP idp = idpDAO.find(key);\n         if (idp == null) {\n             throw new NotFoundException(\"SAML 2.0 IdP '\" + key + \"'\");\n         }\n \n-        return binder.getIdPTO(idp);\n+        return complete(binder.getIdPTO(idp));\n     }\n \n     private List<SAML2IdPTO> importIdPs(final InputStream input) throws Exception {\n@@ -130,6 +134,7 @@ private List<SAML2IdPTO> importIdPs(final InputStream input) throws Exception {\n         for (EntityDescriptor idpEntityDescriptor : idpEntityDescriptors) {\n             SAML2IdPTO idpTO = new SAML2IdPTO();\n             idpTO.setEntityID(idpEntityDescriptor.getEntityID());\n+            idpTO.setName(idpEntityDescriptor.getEntityID());\n             idpTO.setUseDeflateEncoding(false);\n             try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n                 saml2rw.write(new OutputStreamWriter(baos), idpEntityDescriptor, false);\n@@ -149,6 +154,8 @@ private List<SAML2IdPTO> importIdPs(final InputStream input) throws Exception {\n \n     @PreAuthorize(\"hasRole('\" + SAML2SPEntitlement.IDP_IMPORT + \"')\")\n     public List<String> importFromMetadata(final InputStream input) {\n+        check();\n+\n         List<String> imported = new ArrayList<>();\n \n         try {\n@@ -170,6 +177,8 @@ public List<String> importFromMetadata(final InputStream input) {\n \n     @PreAuthorize(\"hasRole('\" + SAML2SPEntitlement.IDP_UPDATE + \"')\")\n     public void update(final SAML2IdPTO saml2IdpTO) {\n+        check();\n+\n         SAML2IdP saml2Idp = idpDAO.find(saml2IdpTO.getKey());\n         if (saml2Idp == null) {\n             throw new NotFoundException(\"SAML 2.0 IdP '\" + saml2IdpTO.getKey() + \"'\");\n@@ -186,6 +195,8 @@ public void update(final SAML2IdPTO saml2IdpTO) {\n \n     @PreAuthorize(\"hasRole('\" + SAML2SPEntitlement.IDP_DELETE + \"')\")\n     public void delete(final String key) {\n+        check();\n+\n         SAML2IdP idp = idpDAO.find(key);\n         if (idp == null) {\n             throw new NotFoundException(\"SAML 2.0 IdP '\" + key + \"'\");\n@@ -213,7 +224,7 @@ protected SAML2IdPTO resolveReference(final Method method, final Object... args)\n \n         if (key != null) {\n             try {\n-                return binder.getIdPTO(idpDAO.find(key));\n+                return complete(binder.getIdPTO(idpDAO.find(key)));\n             } catch (Throwable ignore) {\n                 LOG.debug(\"Unresolved reference\", ignore);\n                 throw new UnresolvedReferenceException(ignore);"},{"sha":"a61590f53bdd80bba47e7df30830fbf29499ac6e","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -52,7 +52,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.core.logic.init.SAML2SPLoader;\n import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n import org.apache.syncope.core.logic.saml2.SAML2IdPCache;\n import org.apache.syncope.core.logic.saml2.SAML2IdPEntity;\n@@ -75,7 +74,6 @@\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n-import org.apache.wss4j.common.saml.OpenSAMLUtil;\n import org.joda.time.DateTime;\n import org.opensaml.core.xml.XMLObject;\n import org.opensaml.core.xml.schema.XSString;\n@@ -127,7 +125,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SAML2SPLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n+public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> {\n \n     private static final Integer JWT_RELAY_STATE_DURATION = 5;\n \n@@ -143,19 +141,12 @@ public class SAML2SPLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n \n     private static final RandomBasedGenerator UUID_GENERATOR = Generators.randomBasedGenerator();\n \n-    static {\n-        OpenSAMLUtil.initSamlEngine(false);\n-    }\n-\n     @Autowired\n     private JwsSignatureVerifier jwsSignatureCerifier;\n \n     @Autowired\n     private AccessTokenDataBinder accessTokenDataBinder;\n \n-    @Autowired\n-    private SAML2SPLoader loader;\n-\n     @Autowired\n     private SAML2IdPCache cache;\n \n@@ -185,6 +176,8 @@ public class SAML2SPLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANONYMOUS + \"')\")\n     public void getMetadata(final String spEntityID, final OutputStream os) {\n+        check();\n+\n         try {\n             EntityDescriptor spEntityDescriptor = new EntityDescriptorBuilder().buildObject();\n             spEntityDescriptor.setEntityID(spEntityID);\n@@ -256,8 +249,8 @@ private SAML2IdPEntity getIdP(final String entityID) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANONYMOUS + \"')\")\n-    public SAML2RequestTO createLoginRequest(\n-            final String spEntityID, final String idpEntityID) {\n+    public SAML2RequestTO createLoginRequest(final String spEntityID, final String idpEntityID) {\n+        check();\n \n         // 1. look for IdP\n         SAML2IdPEntity idp = StringUtils.isBlank(idpEntityID) ? cache.getFirst() : cache.get(idpEntityID);\n@@ -416,6 +409,8 @@ private Pair<String, String> extract(final InputStream response) throws IOExcept\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.ANONYMOUS + \"')\")\n     public SAML2LoginResponseTO validateLoginResponse(final InputStream response) {\n+        check();\n+\n         // 1. extract raw SAML response and relay state\n         Pair<String, String> extracted;\n         try {\n@@ -478,6 +473,8 @@ public SAML2LoginResponseTO validateLoginResponse(final InputStream response) {\n \n         // 6. prepare the result: find matching user (if any) and return the received attributes\n         SAML2LoginResponseTO responseTO = new SAML2LoginResponseTO();\n+        responseTO.setIdp(idp.getId());\n+        responseTO.setSloSupported(idp.getSLOLocation(SAMLConstants.SAML2_POST_BINDING_URI) != null);\n \n         NameID nameID = null;\n         String keyValue = null;\n@@ -553,6 +550,8 @@ public SAML2LoginResponseTO validateLoginResponse(final InputStream response) {\n \n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n     public SAML2RequestTO createLogoutRequest(final String accessToken, final String spEntityID) {\n+        check();\n+\n         // 1. fetch the current JWT used for Syncope authentication\n         JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(accessToken);\n         if (!consumer.verifySignatureWith(jwsSignatureCerifier)) {\n@@ -615,6 +614,8 @@ public SAML2RequestTO createLogoutRequest(final String accessToken, final String\n \n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n     public void validateLogoutResponse(final String accessToken, final InputStream response) {\n+        check();\n+\n         // 1. fetch the current JWT used for Syncope authentication\n         JwsJwtCompactConsumer consumer = new JwsJwtCompactConsumer(accessToken);\n         if (!consumer.verifySignatureWith(jwsSignatureCerifier)) {"},{"sha":"c4f450711feb28708c8cce785459dcad3777f2c3","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":27,"deletions":1,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -30,13 +30,17 @@\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n+import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n+import org.apache.syncope.core.logic.saml2.SAML2Signer;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.apache.wss4j.common.saml.OpenSAMLUtil;\n import org.opensaml.core.criterion.EntityIdCriterion;\n import org.opensaml.security.credential.Credential;\n import org.opensaml.security.credential.impl.KeyStoreCredentialResolver;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -53,6 +57,18 @@ private static <T> T assertNotNull(final T argument, final String name) {\n         return argument;\n     }\n \n+    static {\n+        OpenSAMLUtil.initSamlEngine(false);\n+    }\n+\n+    @Autowired\n+    private SAML2ReaderWriter saml2rw;\n+\n+    @Autowired\n+    private SAML2Signer signer;\n+\n+    private boolean inited;\n+\n     private KeyStore keystore;\n \n     private String keyPass;\n@@ -120,11 +136,21 @@ public void load() {\n \n             this.credential = resolver.resolveSingle(new CriteriaSet(new EntityIdCriterion(certAlias)));\n             LOG.debug(\"SAML 2.0 Service Provider certificate loaded\");\n+\n+            saml2rw.init();\n+            signer.init();\n+\n+            inited = true;\n         } catch (Exception e) {\n-            throw new RuntimeException(\"Could not initialize the SAML 2.0 Service Provider certificate\", e);\n+            LOG.error(\"Could not initialize the SAML 2.0 Service Provider certificate\", e);\n+            inited = false;\n         }\n     }\n \n+    public boolean isInited() {\n+        return inited;\n+    }\n+\n     public KeyStore getKeyStore() {\n         return keystore;\n     }"},{"sha":"964759a6106e6711d02ed897867771fbb173bc19","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2ReaderWriter.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -47,31 +47,25 @@\n import org.opensaml.saml.saml2.core.Response;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.w3c.dom.Document;\n \n @Component\n-public class SAML2ReaderWriter implements InitializingBean {\n+public class SAML2ReaderWriter {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SAML2ReaderWriter.class);\n \n     private static final TransformerFactory TRANSFORMER_FACTORY = TransformerFactory.newInstance();\n \n-    static {\n-        OpenSAMLUtil.initSamlEngine(false);\n-    }\n-\n     @Autowired\n     private SAML2SPLoader loader;\n \n     private SAMLProtocolResponseValidator protocolValidator;\n \n     private SAML2IdPCallbackHandler callbackHandler;\n \n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n+    public void init() {\n         protocolValidator = new SAMLProtocolResponseValidator();\n         protocolValidator.setKeyInfoMustBeAvailable(true);\n "},{"sha":"cf30aa09efff55af0568d82011cf440b36861488","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2Signer.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2Signer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2Signer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2Signer.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -34,16 +34,11 @@\n import org.opensaml.xmlsec.keyinfo.impl.X509KeyInfoGeneratorFactory;\n import org.opensaml.xmlsec.signature.Signature;\n import org.opensaml.xmlsec.signature.support.SignatureConstants;\n-import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SAML2Signer implements InitializingBean {\n-\n-    static {\n-        OpenSAMLUtil.initSamlEngine(false);\n-    }\n+public class SAML2Signer {\n \n     @Autowired\n     private SAML2SPLoader loader;\n@@ -55,8 +50,7 @@ public class SAML2Signer implements InitializingBean {\n \n     private String signatureAlgorithm;\n \n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n+    public void init() {\n         X509KeyInfoGeneratorFactory keyInfoGeneratorFactory = new X509KeyInfoGeneratorFactory();\n         keyInfoGeneratorFactory.setEmitEntityCertificate(true);\n         keyInfoGenerator = keyInfoGeneratorFactory.newInstance();"},{"sha":"a71579f02dd97489834c7b0ffa96f2ce87f66378","filename":"ext/saml2sp/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SAML2IdP.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -27,6 +27,10 @@ public interface SAML2IdP extends Entity {\n \n     void setEntityID(String entityID);\n \n+    String getName();\n+\n+    void setName(String name);\n+\n     byte[] getMetadata();\n \n     void setMetadata(byte[] metadata);"},{"sha":"879b3e53ee06de1cb5be84148d652771cfc36516","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASAML2IdP.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -49,9 +49,12 @@ public class JPASAML2IdP extends AbstractGeneratedKeyEntity implements SAML2IdP\n \n     public static final String TABLE = \"SAML2IdP\";\n \n-    @Column(nullable = false)\n+    @Column(unique = true, nullable = false)\n     private String entityID;\n \n+    @Column(unique = true, nullable = false)\n+    private String name;\n+\n     @Lob\n     @Basic(fetch = FetchType.EAGER)\n     private Byte[] metadata;\n@@ -74,6 +77,16 @@ public void setEntityID(final String entityID) {\n         this.entityID = entityID;\n     }\n \n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n     @Override\n     public byte[] getMetadata() {\n         return metadata == null ? null : ArrayUtils.toPrimitive(metadata);"},{"sha":"c63d31b5134089d2ea973cb0d1aa9d12a1ec8717","filename":"ext/saml2sp/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpom.xml?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -47,6 +47,7 @@ under the License.\n     <module>logic</module>\n     <module>rest-cxf</module>\n     <module>agent</module>\n+    <module>client-console</module>\n   </modules>\n \n </project>"},{"sha":"351c487b77fe28328b5b7e0f893620be1e383002","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2IdPDataBinderImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -169,6 +169,7 @@ private void populateMapping(\n     @Override\n     public SAML2IdP update(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n         idp.setEntityID(idpTO.getEntityID());\n+        idp.setName(idpTO.getName());\n         idp.setMetadata(Base64.decode(idpTO.getMetadata()));\n         idp.setUseDeflateEncoding(idpTO.isUseDeflateEncoding());\n \n@@ -211,6 +212,7 @@ public SAML2IdPTO getIdPTO(final SAML2IdP idp) {\n \n         idpTO.setKey(idp.getKey());\n         idpTO.setEntityID(idp.getEntityID());\n+        idpTO.setName(idp.getName());\n         idpTO.setUseDeflateEncoding(idp.isUseDeflateEncoding());\n         idpTO.setMetadata(Base64.encode(idp.getMetadata()));\n "},{"sha":"284e8701e00e04e82084dd21a06a855b77f60b8a","filename":"fit/console-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -64,7 +64,7 @@ under the License.\n     \n     <dependency>\n       <groupId>org.apache.syncope.ext.saml2sp</groupId>\n-      <artifactId>syncope-ext-saml2sp-agent</artifactId>\n+      <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     "},{"sha":"66a800e3e587d9e227dbdc8fd132a384b15c54d1","filename":"fit/console-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -29,10 +29,28 @@ under the License.\n     <param-name>configuration</param-name>\n     <param-value>deployment</param-value>\n   </context-param>\n-\n+  \n+  <context-param>\n+    <param-name>saml2sp.login.success.url</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.SAML2SPLogin</param-value>\n+  </context-param>\n+  <context-param>\n+    <param-name>saml2sp.login.error.url</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n+  </context-param>\n+  \n+  <context-param>\n+    <param-name>saml2sp.logout.success.url</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.SAML2SPLogout</param-value>\n+  </context-param>\n+  <context-param>\n+    <param-name>saml2sp.logout.error.url</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n+  </context-param>\n+  \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>\n     <session-timeout>30</session-timeout>\n   </session-config>\n \n-</web-app>\n\\ No newline at end of file\n+</web-app>"},{"sha":"f1189d5038b91b598dd9dfb1281119162ac727b0","filename":"fit/console-reference/src/test/resources/rebel.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/00a19145bd3980df01f38b848747153e18ffa78e/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=00a19145bd3980df01f38b848747153e18ffa78e","patch":"@@ -30,6 +30,8 @@ under the License.\n     </dir>\n     <dir name=\"${basedir}/../../ext/saml2sp/agent/target/classes\">\n     </dir>\n+    <dir name=\"${basedir}/../../ext/saml2sp/client-console/target/classes\">\n+    </dir>\n   </classpath>\n \n   <web>\n@@ -45,6 +47,10 @@ under the License.\n       <dir name=\"${basedir}/../../ext/camel/client-console/target/classes\">\n       </dir>\n     </link>\n+    <link target=\"/\">\n+      <dir name=\"${basedir}/../../ext/saml2sp/client-console/target/classes\">\n+      </dir>\n+    </link>\n   </web>\n \n </application>"}]}