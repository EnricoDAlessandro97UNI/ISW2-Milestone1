{"sha":"cc922e652cfa8b61772459819874c7b0d6fc80b0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNjOTIyZTY1MmNmYThiNjE3NzI0NTk4MTk4NzRjN2IwZDZmYzgwYjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-31T05:06:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-31T05:06:05Z"},"message":"Merge branch 'master' into 2_0_X","tree":{"sha":"858f7f6d98d0733b96b285c368bc7cd16fa0b465","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/858f7f6d98d0733b96b285c368bc7cd16fa0b465"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cc922e652cfa8b61772459819874c7b0d6fc80b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc922e652cfa8b61772459819874c7b0d6fc80b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc922e652cfa8b61772459819874c7b0d6fc80b0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc922e652cfa8b61772459819874c7b0d6fc80b0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0430d834cd8a2b848ca160c590bef907d1937810","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0430d834cd8a2b848ca160c590bef907d1937810","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0430d834cd8a2b848ca160c590bef907d1937810"},{"sha":"3f4c7583bfa2956fdc546540038e833304f33daa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3f4c7583bfa2956fdc546540038e833304f33daa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3f4c7583bfa2956fdc546540038e833304f33daa"}],"stats":{"total":64,"additions":32,"deletions":32},"files":[{"sha":"7093bfcef4c7e54bc3c8a802b36f6ff74e4fd630","filename":"core/src/main/java/org/apache/syncope/core/init/CamelRouteLoader.java","status":"modified","additions":28,"deletions":31,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc922e652cfa8b61772459819874c7b0d6fc80b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc922e652cfa8b61772459819874c7b0d6fc80b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java?ref=cc922e652cfa8b61772459819874c7b0d6fc80b0","patch":"@@ -35,7 +35,6 @@\n import javax.xml.transform.stream.StreamResult;\n import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n-import org.apache.syncope.core.persistence.dao.RouteDAO;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -53,39 +52,37 @@ public class CamelRouteLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CamelRouteLoader.class);\n \n-    @Autowired\n-    private RouteDAO routeDAO;\n-    \n     @Autowired\n     private DataSource dataSource;\n-    \n+\n     private int size = 0;\n-    \n+\n     private boolean routeLoaded = false;\n-    \n+\n     @Transactional\n     public void load() {\n-        if(!routeLoaded){\n+        if (!routeLoaded) {\n             loadRoutes(\"/userRoute.xml\", SubjectType.USER);\n-            loadRoutes(\"/roleRoute.xml\", SubjectType.ROLE);        \n+            loadRoutes(\"/roleRoute.xml\", SubjectType.ROLE);\n             routeLoaded = true;\n         }\n     }\n-    \n+\n     public void loadRoutes(String path, SubjectType subject) {\n \n-        if(getRoutes(subject).isEmpty()){\n-            URL url = getClass().getResource(path);\n+        if (getRoutes(subject).isEmpty()) {\n+            final URL url = getClass().getResource(path);\n \n-            File file = new File(url.getPath());\n-            String query = \"INSERT INTO CamelRoute(ID, NAME, SUBJECT, ROUTECONTENT) VALUES (?, ?, ?, ?)\";\n+            final File file = new File(url.getPath());\n+            final String query = String.format(\"INSERT INTO %s(ID, NAME, SUBJECT, ROUTECONTENT) VALUES (?, ?, ?, ?)\",\n+                    CamelRoute.class.getSimpleName());\n             try {\n \n-                DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n-                Document doc = dBuilder.parse(file);\n+                final DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+                final Document doc = dBuilder.parse(file);\n                 doc.getDocumentElement().normalize();\n-                JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n-                NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n+                final JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+                final NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n                 for (int s = 0; s < listOfRoutes.getLength(); s++) {\n                     //getting the route node element\n                     Node routeEl = listOfRoutes.item(s);\n@@ -94,8 +91,8 @@ public void loadRoutes(String path, SubjectType subject) {\n                     route.setSubject(subject);\n                     route.setName(((Element) routeEl).getAttribute(\"id\"));\n                     route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n-                    jdbcTemplate.update(query, new Object[] { size++, ((Element) routeEl).getAttribute(\"id\"), \n-                                                             subject.name(), nodeToString(listOfRoutes.item(s)) });\n+                    jdbcTemplate.update(query, new Object[] { size++, ((Element) routeEl).getAttribute(\"id\"),\n+                        subject.name(), nodeToString(listOfRoutes.item(s)) });\n                     LOG.info(\"Route with id {} Registration Successed\", ((Element) routeEl).getAttribute(\"id\"));\n                 }\n             } catch (DataAccessException e) {\n@@ -105,7 +102,7 @@ public void loadRoutes(String path, SubjectType subject) {\n             }\n         }\n     }\n-    \n+\n     private String nodeToString(Node node) {\n         StringWriter sw = new StringWriter();\n         try {\n@@ -117,17 +114,17 @@ private String nodeToString(Node node) {\n         }\n         return sw.toString();\n     }\n-    \n+\n     @Transactional(readOnly = true)\n-    public List<CamelRoute> getRoutes(final SubjectType subject) {                        \n-        String sql = \"SELECT * FROM CAMELROUTE WHERE SUBJECT = ?\";\n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n-        List<CamelRoute> routes = new ArrayList<CamelRoute>();\n-        List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql, new Object[] {subject.name()});\n-        for (Map row : rows) {\n-            CamelRoute route = new CamelRoute();                    \n-            route.setName((String)row.get(\"NAME\"));\n-            route.setSubject(SubjectType.valueOf((String)row.get(\"SUBJECT\")));\n+    public List<CamelRoute> getRoutes(final SubjectType subject) {\n+        final String sql = String.format(\"SELECT * FROM %s WHERE SUBJECT = ?\", CamelRoute.class.getSimpleName());\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+        final List<CamelRoute> routes = new ArrayList<CamelRoute>();\n+        final List<Map<String, Object>> rows = jdbcTemplate.queryForList(sql, new Object[] { subject.name() });\n+        for (Map<String, ?> row : rows) {\n+            CamelRoute route = new CamelRoute();\n+            route.setName((String) row.get(\"NAME\"));\n+            route.setSubject(SubjectType.valueOf((String) row.get(\"SUBJECT\")));\n             route.setRouteContent((String) row.get(\"ROUTECONTENT\"));\n             routes.add(route);\n         }"},{"sha":"d38fe890852ba4e05b572849d545ba2c256c999d","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/CamelRoute.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc922e652cfa8b61772459819874c7b0d6fc80b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc922e652cfa8b61772459819874c7b0d6fc80b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java?ref=cc922e652cfa8b61772459819874c7b0d6fc80b0","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n+import java.io.Serializable;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n@@ -30,8 +31,10 @@\n import org.apache.syncope.common.types.SubjectType;\n \n @Entity\n-public class CamelRoute {\n+public class CamelRoute implements Serializable {\n \n+    private static final long serialVersionUID = -2767606675667839161L;\n+    \n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n     @Column(name = \"id\")"}]}