{"sha":"ae758caa603d335634503d0703bb0e402253f08f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFlNzU4Y2FhNjAzZDMzNTYzNDUwM2QwNzAzYmIwZTQwMjI1M2YwOGY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-20T08:46:39Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-20T08:46:39Z"},"message":"SYNCOPE-113 #comment if at least one connector is available, in case of create a default connector is selected (the first one) so mappings can be added\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1363681 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dc2c8f2314c2587505d4d558f10dda25c28a6d63","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dc2c8f2314c2587505d4d558f10dda25c28a6d63"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ae758caa603d335634503d0703bb0e402253f08f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae758caa603d335634503d0703bb0e402253f08f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ae758caa603d335634503d0703bb0e402253f08f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae758caa603d335634503d0703bb0e402253f08f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"38b00fa8568f30de48136d9515d8da358ec0ef04","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/38b00fa8568f30de48136d9515d8da358ec0ef04","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/38b00fa8568f30de48136d9515d8da358ec0ef04"}],"stats":{"total":67,"additions":38,"deletions":29},"files":[{"sha":"8fe796b91fc485b7ae6a7c0d0ca1fc1bd2cc7861","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=ae758caa603d335634503d0703bb0e402253f08f","patch":"@@ -63,7 +63,7 @@ public ResourceModalPage(final PageReference pageref, final ModalWindow window,\n         //--------------------------------\n         // Resource mapping panle\n         //--------------------------------\n-        form.add(new ResourceMappingPanel(\"mapping\", resourceTO, createFlag));\n+        form.add(new ResourceMappingPanel(\"mapping\", resourceTO));\n         //--------------------------------\n \n         //--------------------------------"},{"sha":"76611b72f543fab8fef715dc06668d3ced842e4d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":25,"deletions":9,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=ae758caa603d335634503d0703bb0e402253f08f","patch":"@@ -75,8 +75,8 @@ protected List<ConnInstanceTO> load() {\n \n         connInstanceTO = getConectorInstanceTO(connectors.getObject(), resourceTO);\n \n-        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\", new ResourceModel(\"name\", \"name\")\n-                .getObject(), new PropertyModel<String>(resourceTO, \"name\"));\n+        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\", new ResourceModel(\"name\", \"name\").\n+                getObject(), new PropertyModel<String>(resourceTO, \"name\"));\n \n         resourceName.setEnabled(createFlag);\n         resourceName.addRequiredLabel();\n@@ -94,7 +94,7 @@ protected List<ConnInstanceTO> load() {\n \n         final AjaxNumberFieldPanel propagationPriority = new AjaxNumberFieldPanel(\"propagationPriority\",\n                 new ResourceModel(\"propagationPriority\", \"propagationPriority\").getObject(), new PropertyModel<Number>(\n-                        resourceTO, \"propagationPriority\"), Integer.class);\n+                resourceTO, \"propagationPriority\"), Integer.class);\n         add(propagationPriority);\n \n         final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<PropagationMode>(\n@@ -123,7 +123,7 @@ protected List<ConnInstanceTO> load() {\n \n         final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n                 \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(), new PropertyModel(\n-                        resourceTO, \"syncTraceLevel\"));\n+                resourceTO, \"syncTraceLevel\"));\n         syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(syncTraceLevel);\n \n@@ -189,17 +189,33 @@ protected void onUpdate(final AjaxRequestTarget target) {\n      *\n      * @param connectorTOs list of all connectors.\n      * @param resourceTO resource.\n-     * @return selected connector instance.\n+     * @return selected connector instance. In case of no connectors available return null. In case of new resource\n+     * specification return the first on connector available.\n      */\n     private ConnInstanceTO getConectorInstanceTO(final List<ConnInstanceTO> connectorTOs, final ResourceTO resourceTO) {\n \n-        for (ConnInstanceTO to : connectorTOs) {\n-            if (Long.valueOf(to.getId()).equals(resourceTO.getConnectorId())) {\n-                return to;\n+        if (connectorTOs.isEmpty()) {\n+\n+            resourceTO.setConnectorId(null);\n+            return null;\n+\n+        } else {\n+\n+            // use the first element as default\n+            ConnInstanceTO res = connectorTOs.get(0);\n+\n+            for (ConnInstanceTO to : connectorTOs) {\n+                if (Long.valueOf(to.getId()).equals(resourceTO.getConnectorId())) {\n+                    res = to;\n+                }\n             }\n+\n+            // in case of no match\n+            resourceTO.setConnectorId(res.getId());\n+\n+            return res;\n         }\n \n-        return new ConnInstanceTO();\n     }\n \n     /**"},{"sha":"742fd8299a232d6cd066a1be3e31e1fb6b4c8e86","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":12,"deletions":19,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae758caa603d335634503d0703bb0e402253f08f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=ae758caa603d335634503d0703bb0e402253f08f","patch":"@@ -87,37 +87,32 @@ public class ResourceMappingPanel extends Panel {\n     /**\n      * Resource schema name.\n      */\n-    private List<String> schemaNames;\n+    private transient List<String> schemaNames;\n \n     /**\n      * Internal attribute types.\n      */\n-    private List<IntMappingType> attrTypes = new ArrayList<IntMappingType>();\n+    private transient List<IntMappingType> attrTypes = new ArrayList<IntMappingType>();\n \n     /**\n      * Add mapping button.\n      */\n-    private final AjaxButton addMappingBtn;\n+    private final transient AjaxButton addMappingBtn;\n \n     /**\n      * All mappings.\n      */\n-    private final ListView mappings;\n+    private final transient ListView mappings;\n \n     /**\n      * External resource to be updated.\n      */\n-    private final ResourceTO resourceTO;\n+    private final transient ResourceTO resourceTO;\n \n     /**\n      * Mapping container.\n      */\n-    private final WebMarkupContainer mappingContainer;\n-\n-    /**\n-     * Create flag.\n-     */\n-    private final boolean createFlag;\n+    private final transient WebMarkupContainer mappingContainer;\n \n     /**\n      * OnChange event name.\n@@ -144,15 +139,13 @@ public class ResourceMappingPanel extends Panel {\n      *\n      * @param panelid panel id.\n      * @param resourceTO external resource.\n-     * @param createFlag create flag.\n      */\n-    public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO, final boolean createFlag) {\n+    public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO) {\n \n         super(panelid);\n         setOutputMarkupId(true);\n \n         this.resourceTO = resourceTO;\n-        this.createFlag = createFlag;\n \n         initResourceSchemaNames();\n \n@@ -177,12 +170,12 @@ protected void populateItem(final ListItem<SchemaMappingTO> item) {\n                 final SchemaMappingTO mappingTO = item.getModelObject();\n \n                 final AttributableType entity;\n-                if (mappingTO.getIntMappingType() != null){\n+                if (mappingTO.getIntMappingType() != null) {\n                     entity = mappingTO.getIntMappingType().getAttributableType();\n                 } else {\n                     entity = null;\n                 }\n-                        \n+\n                 attrTypes = getAttributeTypes(entity);\n \n                 item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model(Boolean.FALSE)) {\n@@ -281,7 +274,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 if (mappingTO != null && !mappingTO.isAccountid() && !mappingTO.isPassword()) {\n                     required = true;\n                 }\n-                \n+\n \n                 extAttrName.setRequired(required);\n                 extAttrName.setEnabled(required);\n@@ -377,7 +370,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(!createFlag);\n+        addMappingBtn.setEnabled(resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0);\n         mappingContainer.add(addMappingBtn);\n \n     }\n@@ -498,7 +491,7 @@ private void setAccountId(final IntMappingType type, final AjaxCheckBoxPanel acc\n                 case UserVirtualSchema:\n                 case RoleVirtualSchema:\n                 case MembershipVirtualSchema:\n-                    // Virtual accountId is not permitted\n+                // Virtual accountId is not permitted\n                 case Password:\n                     // AccountId cannot be derived from password.\n                     accountId.setReadOnly(true);"}]}