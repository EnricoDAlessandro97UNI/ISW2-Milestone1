{"sha":"4fc0b470bb807f027597a51279a916f16fa85464","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRmYzBiNDcwYmI4MDdmMDI3NTk3YTUxMjc5YTkxNmYxNmZhODU0NjQ=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T09:50:05Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T09:50:05Z"},"message":"SYNCOPE-231 Do not read UserRequest after create as it will fail with anon user\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440889 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2c5eab51ec717490f6bad5b1200b01ada2e0b874","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2c5eab51ec717490f6bad5b1200b01ada2e0b874"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4fc0b470bb807f027597a51279a916f16fa85464","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fc0b470bb807f027597a51279a916f16fa85464","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4fc0b470bb807f027597a51279a916f16fa85464","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fc0b470bb807f027597a51279a916f16fa85464/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"05e758e2f62f331cce281545f7bd81b1f98a22da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05e758e2f62f331cce281545f7bd81b1f98a22da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05e758e2f62f331cce281545f7bd81b1f98a22da"}],"stats":{"total":29,"additions":11,"deletions":18},"files":[{"sha":"52ca5c72b45eb796e759cc4524a30d4f08efac61","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":11,"deletions":18,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fc0b470bb807f027597a51279a916f16fa85464/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fc0b470bb807f027597a51279a916f16fa85464/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=4fc0b470bb807f027597a51279a916f16fa85464","patch":"@@ -64,7 +64,7 @@ public void create() throws InvalidSearchConditionException {\n \n         // 2. get unauthorized when trying to request user create\n         try {\n-            createUserRequest(new UserRequestTO(userTO));\n+            createUserRequest(userRequestService, new UserRequestTO(userTO));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n@@ -81,8 +81,7 @@ public void create() throws InvalidSearchConditionException {\n \n         // 4. as anonymous, request user create works\n         UserRequestService userRequestService2 = setupCredentials(userRequestService, UserRequestService.class, null, null);\n-        response = userRequestService2.create(new UserRequestTO(userTO));\n-        UserRequestTO request = getObject(response, UserRequestTO.class, userRequestService2);\n+        response = createUserRequest(userRequestService2, new UserRequestTO(userTO));\n \n         // 5. switch back to admin\n         super.resetRestTemplate(); // TODO remove after CXF migration is complete\n@@ -96,7 +95,7 @@ public void create() throws InvalidSearchConditionException {\n         assertTrue(matchingUsers.isEmpty());\n \n         // 7. actually create user\n-        userTO = createUser(request.getUserTO());\n+        userTO = createUser(userTO);\n         assertNotNull(userTO);\n     }\n \n@@ -115,7 +114,7 @@ public void update() {\n \n         // 2. try to request user update as admin: failure\n         try {\n-            createUserRequest(new UserRequestTO(userMod));\n+            createUserRequest(userRequestService, new UserRequestTO(userMod));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n@@ -127,19 +126,15 @@ public void update() {\n \n         // 4. update with same password: not matching password policy\n         try {\n-            Response response = userRequestService2.create(new UserRequestTO(userMod));\n-            if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n-                throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n-            }\n+            createUserRequest(userRequestService2, new UserRequestTO(userMod));\n             fail();\n         } catch (SyncopeClientCompositeErrorException scce) {\n             assertNotNull(scce.getException(SyncopeClientExceptionType.InvalidSyncopeUser));\n         }\n \n         // 5. now request user update works\n         userMod.setPassword(\"new\" + initialPassword);\n-        Response response = userRequestService.create(new UserRequestTO(userMod));\n-        assertEquals(org.apache.http.HttpStatus.SC_CREATED, response.getStatus());\n+        createUserRequest(userRequestService2, new UserRequestTO(userMod));\n \n         // 6. switch back to admin\n         super.resetRestTemplate();\n@@ -168,7 +163,7 @@ public void delete() {\n \n         // 2. try to request user delete as admin: failure\n         try {\n-            createUserRequest(new UserRequestTO(userTO.getId()));\n+            createUserRequest(userRequestService, new UserRequestTO(userTO.getId()));\n             fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n@@ -179,9 +174,7 @@ public void delete() {\n                 initialPassword);\n \n         // 4. now request user delete works\n-        Response response = userRequestService2.create(new UserRequestTO(userTO.getId()));\n-        assertNotNull(response);\n-        assertEquals(org.apache.http.HttpStatus.SC_CREATED, response.getStatus());\n+        createUserRequest(userRequestService2, new UserRequestTO(userTO.getId()));\n \n         // 5. switch back to admin\n         super.resetRestTemplate();\n@@ -202,11 +195,11 @@ public void delete() {\n         }\n     }\n \n-    private UserRequestTO createUserRequest(final UserRequestTO userRequestTO) {\n-        Response response = userRequestService.create(userRequestTO);\n+    private Response createUserRequest(UserRequestService service, final UserRequestTO userRequestTO) {\n+        Response response = service.create(userRequestTO);\n         if (response.getStatus() != org.apache.http.HttpStatus.SC_CREATED) {\n             throw (RuntimeException) clientExceptionMapper.fromResponse(response);\n         }\n-        return getObject(response, UserRequestTO.class, userRequestService);\n+        return response;\n     }\n }"}]}