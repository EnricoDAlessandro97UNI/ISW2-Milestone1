{"sha":"e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3MWViZDlmY2U4NWM1OGZjYmNmY2RkMmQ4OTNlMDJiZDY3MTVkYjI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-23T17:21:45Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-23T17:22:10Z"},"message":"[SYNCOPE-156] providing type extension by assigning groups","tree":{"sha":"db351c6f7e8adf9779646cf01abdc0778f48c906","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/db351c6f7e8adf9779646cf01abdc0778f48c906"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5d228feaf6d5e136bc3ae4da69176c44cbd5940","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5d228feaf6d5e136bc3ae4da69176c44cbd5940","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5d228feaf6d5e136bc3ae4da69176c44cbd5940"}],"stats":{"total":197,"additions":144,"deletions":53},"files":[{"sha":"401f5a210f2c18043854221345f7f396a09ce146","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -18,9 +18,21 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n \n public abstract class AbstractAttrs extends WizardStep {\n@@ -31,9 +43,51 @@ public abstract class AbstractAttrs extends WizardStep {\n \n     protected final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n     protected final AnyTO entityTO;\n \n     public AbstractAttrs(final AnyTO entityTO) {\n         this.entityTO = entityTO;\n     }\n+\n+    protected Set<String> getAllAuxClasses() {\n+        final List<MembershipTO> memberships;\n+        final List<Long> dyngroups;\n+        if (entityTO instanceof UserTO) {\n+            memberships = UserTO.class.cast(entityTO).getMemberships();\n+            dyngroups = UserTO.class.cast(entityTO).getDynGroups();\n+        } else if (entityTO instanceof AnyObjectTO) {\n+            memberships = AnyObjectTO.class.cast(entityTO).getMemberships();\n+            dyngroups = AnyObjectTO.class.cast(entityTO).getDynGroups();\n+        } else {\n+            memberships = Collections.<MembershipTO>emptyList();\n+            dyngroups = Collections.<Long>emptyList();\n+        }\n+\n+        final List<GroupTO> groups = new ArrayList<>();\n+        CollectionUtils.collect(memberships, new Transformer<MembershipTO, GroupTO>() {\n+\n+            @Override\n+            public GroupTO transform(final MembershipTO input) {\n+                dyngroups.remove(input.getRightKey());\n+                return groupRestClient.read(input.getRightKey());\n+            }\n+        }, groups);\n+\n+        CollectionUtils.collect(dyngroups, new Transformer<Long, GroupTO>() {\n+\n+            @Override\n+            public GroupTO transform(final Long input) {\n+                return groupRestClient.read(input);\n+            }\n+        }, groups);\n+\n+        final Set<String> auxClasses = new HashSet<>(entityTO.getAuxClasses());\n+        for (GroupTO groupTO : groups) {\n+            auxClasses.addAll(groupTO.getAuxClasses());\n+        }\n+\n+        return auxClasses;\n+    }\n }"},{"sha":"8c091a86167488d3794e714602fbc48e6fc84ac6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":56,"deletions":36,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -46,7 +47,7 @@ public class AuxClasses extends WizardStep {\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    private static final Pattern GROUP_ID_PATTERN = Pattern.compile(\"\\\\[(\\\\d)\\\\]? (.*)\");\n+    private static final Pattern GROUP_ID_PATTERN = Pattern.compile(\"\\\\[(\\\\d*)\\\\]? (.*)\");\n \n     public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeClass) {\n         this.setOutputMarkupId(true);\n@@ -57,21 +58,39 @@ public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeCla\n         } else {\n             fragment = new Fragment(\"groups\", \"groupsFragment\", this);\n \n-            final List<MembershipTO> memberships = entityTO instanceof UserTO\n-                    ? UserTO.class.cast(entityTO).getMemberships()\n-                    : AnyObjectTO.class.cast(entityTO).getMemberships();\n+            final ArrayList<String> available = CollectionUtils.collect(\n+                    groupRestClient.list(entityTO.getRealm(), -1, -1, new SortParam<>(\"name\", true), null),\n+                    new Transformer<GroupTO, String>() {\n \n-            fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true)\n-                    .build(\n-                            \"groups\",\n-                            new ListModel<String>(CollectionUtils.collect(memberships,\n+                        @Override\n+                        public String transform(final GroupTO input) {\n+                            return String.format(\"[%d] %s\", input.getKey(), input.getName());\n+                        }\n+                    }, new ArrayList<String>());\n+\n+            final List<MembershipTO> memberships;\n+            final List<Long> dyngroups;\n+\n+            if (entityTO instanceof UserTO) {\n+                memberships = UserTO.class.cast(entityTO).getMemberships();\n+                dyngroups = UserTO.class.cast(entityTO).getDynGroups();\n+            } else if (entityTO instanceof AnyObjectTO) {\n+                memberships = AnyObjectTO.class.cast(entityTO).getMemberships();\n+                dyngroups = AnyObjectTO.class.cast(entityTO).getDynGroups();\n+            } else {\n+                memberships = Collections.<MembershipTO>emptyList();\n+                dyngroups = Collections.<Long>emptyList();\n+            }\n+\n+            fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n+                    \"groups\", new ListModel<String>(CollectionUtils.collect(memberships,\n                                     new Transformer<MembershipTO, String>() {\n \n-                                @Override\n-                                public String transform(final MembershipTO input) {\n-                                    return String.format(\"[%d] %s\", input.getRightKey(), input.getGroupName());\n-                                }\n-                            }, new ArrayList<String>())) {\n+                                        @Override\n+                                        public String transform(final MembershipTO input) {\n+                                            return String.format(\"[%d] %s\", input.getRightKey(), input.getGroupName());\n+                                        }\n+                                    }, new ArrayList<String>())) {\n \n                         private static final long serialVersionUID = 1L;\n \n@@ -84,31 +103,35 @@ public void setObject(final List<String> object) {\n                                 @Override\n                                 public MembershipTO transform(final String input) {\n                                     final Matcher m = GROUP_ID_PATTERN.matcher(input);\n-                                    final String groupName;\n-                                    final long groupKey;\n+                                    final String name;\n+                                    final long key;\n                                     if (m.matches()) {\n-                                        groupKey = Long.parseLong(m.group(1));\n-                                        groupName = m.group(2);\n+                                        key = Long.parseLong(m.group(1));\n+                                        name = m.group(2);\n                                     } else {\n-                                        groupKey = -1L;\n-                                        groupName = input;\n+                                        key = -1L;\n+                                        name = input;\n                                     }\n \n-                                    return new MembershipTO.Builder().left(entityTO.getType(), entityTO.getKey()).\n-                                            group(groupKey, groupName).build();\n+                                    return new MembershipTO.Builder().\n+                                    left(entityTO.getType(), entityTO.getKey()).group(key, name).build();\n                                 }\n                             }, memberships);\n                         }\n                     },\n-                            new ListModel<>(CollectionUtils.collect(groupRestClient.list(\n-                                    entityTO.getRealm(), -1, -1, new SortParam<>(\"name\", true), null),\n-                                    new Transformer<GroupTO, String>() {\n-\n-                                @Override\n-                                public String transform(final GroupTO input) {\n-                                    return String.format(\"[%d] %s\", input.getKey(), input.getName());\n-                                }\n-                            }, new ArrayList<String>()))).setOutputMarkupId(true));\n+                    new ListModel<>(available)).setOutputMarkupId(true));\n+\n+            fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n+                    \"dyngroups\", new ListModel<String>(CollectionUtils.collect(dyngroups,\n+                                    new Transformer<Long, String>() {\n+\n+                                        @Override\n+                                        public String transform(final Long input) {\n+                                            final GroupTO groupTO = groupRestClient.read(input);\n+                                            return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n+                                        }\n+                                    }, new ArrayList<String>())),\n+                    new ListModel<>(available)).setEnabled(false).setOutputMarkupId(true));\n         }\n         add(fragment);\n \n@@ -121,11 +144,8 @@ public String transform(final GroupTO input) {\n             }\n         }\n \n-        add(new AjaxPalettePanel.Builder<String>().\n-                setAllowOrder(true)\n-                .build(\"auxClasses\",\n-                        new PropertyModel<List<String>>(entityTO, \"auxClasses\"),\n-                        new ListModel<>(choices)).setOutputMarkupId(true));\n-\n+        add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"auxClasses\",\n+                new PropertyModel<List<String>>(entityTO, \"auxClasses\"),\n+                new ListModel<>(choices)).setOutputMarkupId(true));\n     }\n }"},{"sha":"8ac047b5066188fe7eb618b5e1489b367229c40b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -58,7 +58,7 @@ public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass\n             @Override\n             protected List<AttrTO> load() {\n                 final List<String> classes = CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(entityTO.getAuxClasses().toArray(new String[] {})),\n+                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                             @Override"},{"sha":"aef1962170503ebc29cec97172e0ff9ff31f2987","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -80,7 +80,7 @@ public <T extends AnyTO> PlainAttrs(\n             @Override\n             protected List<AttrTO> load() {\n                 setSchemas(CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(entityTO.getAuxClasses().toArray(new String[] {})),\n+                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                             @Override"},{"sha":"1c247e00828b3f8569f7f80dabd9652a3dc05be2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -56,7 +56,7 @@ public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass\n             @Override\n             protected List<AttrTO> load() {\n                 final List<String> classes = CollectionUtils.collect(\n-                        anyTypeRestClient.getAnyTypeClass(entityTO.getAuxClasses().toArray(new String[] {})),\n+                        anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n                             @Override"},{"sha":"ac3ba3c87588abf42c6be626e8ebb6cf6a645a03","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses.html","status":"modified","additions":28,"deletions":14,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.html?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -20,18 +20,7 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel>\n-      <div class=\"col-xs-12\">\n-        <div class=\"box\">\n-          <div class=\"box-header\">\n-            <h3 class=\"box-title\">\n-              <wicket:message key=\"groups.palette\">[GROUPS]</wicket:message>\n-            </h3>\n-          </div>\n-          <div class=\"box-body\">\n-            <span wicket:id=\"groups\">[GROUPS]</span>\n-          </div>\n-        </div>\n-      </div>\n+      <span wicket:id=\"groups\">[GROUPS]</span>\n \n       <div class=\"col-xs-12\">\n         <div class=\"box\">\n@@ -46,10 +35,35 @@ <h3 class=\"box-title\">\n         </div>\n       </div>\n \n-      <wicket:fragment wicket:id=\"emptyFragment\"/>\n       <wicket:fragment wicket:id=\"groupsFragment\">\n-        <span wicket:id=\"groups\"/>\n+        <div class=\"col-xs-12\">\n+          <div class=\"box\">\n+            <div class=\"box-header\">\n+              <h3 class=\"box-title\">\n+                <wicket:message key=\"groups.palette\">[GROUPS]</wicket:message>\n+              </h3>\n+            </div>\n+            <div class=\"box-body\">\n+              <span wicket:id=\"groups\"/>\n+            </div>\n+          </div>\n+        </div>\n+\n+        <div class=\"col-xs-12\">\n+          <div class=\"box\">\n+            <div class=\"box-header\">\n+              <h3 class=\"box-title\">\n+                <wicket:message key=\"dyngroups.palette\">[DYNAMIC GROUPS]</wicket:message>\n+              </h3>\n+            </div>\n+            <div class=\"box-body\">\n+              <span wicket:id=\"dyngroups\">[DYNAMIC GROUPS]</span>\n+            </div>\n+          </div>\n+        </div>\n       </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"emptyFragment\"/>\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"fdfe92bb58576a9d81f573e91bfbc875bc463b3e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.properties?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -16,3 +16,4 @@\n # under the License.\n groups.palette=Groups\n auxclasses.palette=Profile extension by auxiliary classes\n+dyngroups.palette=Dynamic groups"},{"sha":"bd84c93a0913ce68863c987403b4cb26c72cce93","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_it.properties?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -16,3 +16,4 @@\n # under the License.\n groups.palette=Gruppi\n auxclasses.palette=Estensione profilo attraverso classi ausiliarie\n+dyngroups.palette=Gruppi dinamici"},{"sha":"120c4d6eded9c5b6cf5e8498378c60b0e4829d29","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/AuxClasses_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses_pt_BR.properties?ref=e71ebd9fce85c58fcbcfcdd2d893e02bd6715db2","patch":"@@ -16,3 +16,4 @@\n # under the License.\n groups.palette=Grupos\n auxclasses.palette=Perfil de extens\\u00e3o atrav\\u00e9s de classes auxiliares\n+dyngroups.palette=Grupos din\\u00e2micos"}]}