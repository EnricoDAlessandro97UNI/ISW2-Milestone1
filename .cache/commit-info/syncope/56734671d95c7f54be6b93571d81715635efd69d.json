{"sha":"56734671d95c7f54be6b93571d81715635efd69d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU2NzM0NjcxZDk1YzdmNTRiZTZiOTM1NzFkODE3MTU2MzVlZmQ2OWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-23T12:53:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-23T12:53:59Z"},"message":"Upgrading build-helper-maven-plugin","tree":{"sha":"c7d6050b687d01caea4f57a646842d8fb53e3565","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c7d6050b687d01caea4f57a646842d8fb53e3565"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/56734671d95c7f54be6b93571d81715635efd69d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/56734671d95c7f54be6b93571d81715635efd69d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/56734671d95c7f54be6b93571d81715635efd69d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/56734671d95c7f54be6b93571d81715635efd69d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cf54140d85cf3489f67de5aabc4a3e468b013998","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf54140d85cf3489f67de5aabc4a3e468b013998","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cf54140d85cf3489f67de5aabc4a3e468b013998"}],"stats":{"total":9,"additions":4,"deletions":5},"files":[{"sha":"156d19a5641881ba087c98cb6b9006b9e72aaeb6","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/56734671d95c7f54be6b93571d81715635efd69d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/56734671d95c7f54be6b93571d81715635efd69d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=56734671d95c7f54be6b93571d81715635efd69d","patch":"@@ -2138,7 +2138,7 @@ under the License.\n         <plugin>\n           <groupId>org.codehaus.mojo</groupId>\n           <artifactId>build-helper-maven-plugin</artifactId>\n-          <version>3.0.0</version>\n+          <version>3.2.0</version>\n         </plugin>\n \n         <plugin>"},{"sha":"9e4e1b93d411a5ce5a362c1606b4cd55a3ffac12","filename":"sra/src/main/java/org/apache/syncope/sra/RouteProvider.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/56734671d95c7f54be6b93571d81715635efd69d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/56734671d95c7f54be6b93571d81715635efd69d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java?ref=56734671d95c7f54be6b93571d81715635efd69d","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.sra;\n \n import java.time.ZonedDateTime;\n-import java.util.Arrays;\n import java.util.List;\n import java.util.Objects;\n import java.util.function.Consumer;\n@@ -379,7 +378,7 @@ private AsyncPredicate<ServerWebExchange> toPredicate(final GatewayRoutePredicat\n             case HOST:\n                 String[] hostArgs = gwpredicate.getArgs().split(\",\");\n                 predicate = ctx.getBean(HostRoutePredicateFactory.class).\n-                        applyAsync(c -> c.setPatterns(Arrays.asList(hostArgs)));\n+                        applyAsync(c -> c.setPatterns(List.of(hostArgs)));\n                 break;\n \n             case METHOD:\n@@ -392,7 +391,7 @@ private AsyncPredicate<ServerWebExchange> toPredicate(final GatewayRoutePredicat\n             case PATH:\n                 String[] pathArgs = gwpredicate.getArgs().split(\",\");\n                 predicate = ctx.getBean(PathRoutePredicateFactory.class).\n-                        applyAsync(c -> c.setPatterns(Arrays.asList(pathArgs)));\n+                        applyAsync(c -> c.setPatterns(List.of(pathArgs)));\n                 break;\n \n             case QUERY:\n@@ -408,7 +407,7 @@ private AsyncPredicate<ServerWebExchange> toPredicate(final GatewayRoutePredicat\n             case REMOTE_ADDR:\n                 String[] remoteAddrArgs = gwpredicate.getArgs().split(\",\");\n                 predicate = ctx.getBean(RemoteAddrRoutePredicateFactory.class).\n-                        applyAsync(c -> c.setSources(Arrays.asList(remoteAddrArgs)));\n+                        applyAsync(c -> c.setSources(List.of(remoteAddrArgs)));\n                 break;\n \n             case CUSTOM:"}]}