{"sha":"df0032aad149bfc41e69e2f0b3e11d8291f057e4","node_id":"C_kwDOJfYA1toAKGRmMDAzMmFhZDE0OWJmYzQxZTY5ZTJmMGIzZTExZDgyOTFmMDU3ZTQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-04-15T05:23:05Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-04-15T05:23:05Z"},"message":"Miscellaneous fixes and cleanups (#339)","tree":{"sha":"668dfdddc61725f9f2f6fc951753ed766cf00369","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/668dfdddc61725f9f2f6fc951753ed766cf00369"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df0032aad149bfc41e69e2f0b3e11d8291f057e4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWQE5CRBK7hj4Ov3rIwAA53QIAKP5ROpLld6uweLFlsX8UaE9\nkW6gT/NMK8gIYhfF8ggt/+jx5gzlvIgf6R8KWMXVuSJRBXSYN23HeIZ9MqS/1N/+\nD4eavNmXtHqUl534MUT6md4bJWM0KAZd+HEsStDSo3g6Vf36tmgQ562cjJGYvCOP\nJdKXduIbZ+26OaiOHZ0ZMkUR/at/2gIVbow2u9rfGJ0FN067kyAYG1c5Zhcxb6rj\nBTO4HKHC6bu9dL5tgRistNnTJbRVqyCrEEi3h5RedZQtcd/FDv7gmcca0AfCM6rW\n1kpxh1o36r1whL/ALJt78mMHW9oPia+EPmQh9peHM8J5X5nI7ajTxvRcoHqWNpE=\n=M1Am\n-----END PGP SIGNATURE-----\n","payload":"tree 668dfdddc61725f9f2f6fc951753ed766cf00369\nparent 7e30efe6fa72329ae4c95ba5315a74c917a5c4fc\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1650000185 +0200\ncommitter GitHub <noreply@github.com> 1650000185 +0200\n\nMiscellaneous fixes and cleanups (#339)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df0032aad149bfc41e69e2f0b3e11d8291f057e4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df0032aad149bfc41e69e2f0b3e11d8291f057e4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df0032aad149bfc41e69e2f0b3e11d8291f057e4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"7e30efe6fa72329ae4c95ba5315a74c917a5c4fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7e30efe6fa72329ae4c95ba5315a74c917a5c4fc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7e30efe6fa72329ae4c95ba5315a74c917a5c4fc"}],"stats":{"total":259,"additions":140,"deletions":119},"files":[{"sha":"128c4943c15129858929de7b08d6b2670bd397b7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -61,9 +61,8 @@ public static ProvisioningResult<UserTO> create(final UserCR createReq) {\n     public ProvisioningResult<UserTO> update(final String etag, final UserUR updateReq) {\n         ProvisioningResult<UserTO> result;\n         synchronized (this) {\n-            result = getService(etag, UserService.class).update(updateReq).\n-                    readEntity(new GenericType<>() {\n-                    });\n+            result = getService(etag, UserService.class).update(updateReq).readEntity(new GenericType<>() {\n+            });\n             resetClient(getAnyServiceClass());\n         }\n         return result;\n@@ -87,9 +86,9 @@ public List<UserTO> search(\n     }\n \n     public ProvisioningResult<UserTO> mustChangePassword(final String etag, final boolean value, final String key) {\n-        UserUR userUR = new UserUR();\n-        userUR.setKey(key);\n-        userUR.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(value).build());\n+        UserUR userUR = new UserUR.Builder(key).\n+                mustChangePassword(new BooleanReplacePatchItem.Builder().value(value).build()).\n+                build();\n         return update(etag, userUR);\n     }\n "},{"sha":"c834e8f760c7b50619e9cb749e2838423b1aa44a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/EditChangePassword.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditChangePassword.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -42,20 +42,22 @@ public EditChangePassword(final PageParameters parameters) {\n \n     @Override\n     protected void doPwdSubmit(final AjaxRequestTarget target, final AjaxPasswordFieldPanel passwordField) {\n-        PageParameters parameters = new PageParameters();\n         try {\n             UserTO userTO = getPwdLoggedUser();\n \n-            UserUR req = new UserUR();\n-            req.setKey(userTO.getKey());\n-            req.setPassword(new PasswordPatch.Builder().\n-                    value(passwordField.getModelObject()).onSyncope(true).resources(userTO.getResources()).build());\n+            UserUR req = new UserUR.Builder(userTO.getKey()).\n+                    password(new PasswordPatch.Builder().\n+                            value(passwordField.getModelObject()).onSyncope(true).resources(userTO.getResources()).\n+                            build()).\n+                    build();\n             userSelfRestClient.update(userTO.getETagValue(), req);\n \n+            SyncopeEnduserSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+\n+            PageParameters parameters = new PageParameters();\n             parameters.add(EnduserConstants.STATUS, Constants.OPERATION_SUCCEEDED);\n             parameters.add(Constants.NOTIFICATION_TITLE_PARAM, getString(\"self.pwd.change.success.msg\"));\n             parameters.add(Constants.NOTIFICATION_MSG_PARAM, getString(\"self.pwd.change.success\"));\n-            SyncopeEnduserSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n             parameters.add(\n                     EnduserConstants.LANDING_PAGE,\n                     SyncopeWebApplication.get().getPageClass(\"profile\", Dashboard.class).getName());"},{"sha":"ef9cb2892b53e62ebd9f9bdc990386723f1e56cc","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/MustChangePassword.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FMustChangePassword.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.pages;\n \n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.commons.EnduserConstants;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPasswordFieldPanel;\n@@ -40,25 +41,26 @@ public MustChangePassword(final PageParameters parameters) {\n \n     @Override\n     protected void doPwdSubmit(final AjaxRequestTarget target, final AjaxPasswordFieldPanel passwordField) {\n-        PageParameters parameters = new PageParameters();\n         try {\n-            UserSelfRestClient.changePassword(passwordField.getModelObject());\n+            UserSelfRestClient.mustChangePassword(passwordField.getModelObject());\n \n+            SyncopeEnduserSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n             SyncopeEnduserSession.get().invalidate();\n+\n+            PageParameters parameters = new PageParameters();\n             parameters.add(EnduserConstants.STATUS, Constants.OPERATION_SUCCEEDED);\n-            parameters.add(Constants.NOTIFICATION_TITLE_PARAM, getString(\"self.pwd.change.success\"));\n+            parameters.add(Constants.NOTIFICATION_TITLE_PARAM, getString(\"self.pwd.change.success.msg\"));\n             parameters.add(Constants.NOTIFICATION_MSG_PARAM, getString(\"self.pwd.change.success\"));\n-            SyncopeEnduserSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+            parameters.add(\n+                    EnduserConstants.LANDING_PAGE,\n+                    SyncopeWebApplication.get().getPageClass(\"profile\", Dashboard.class).getName());\n+            setResponsePage(getApplication().getHomePage(), parameters);\n         } catch (Exception e) {\n             LOG.error(\"While changing password for {}\",\n                     SyncopeEnduserSession.get().getSelfTO().getUsername(), e);\n-            parameters.add(EnduserConstants.STATUS, Constants.OPERATION_ERROR);\n-            parameters.add(Constants.NOTIFICATION_TITLE_PARAM, getString(\"self.pwd.change.error\"));\n-            parameters.add(Constants.NOTIFICATION_MSG_PARAM, getString(\"self.pwd.change.error.msg\"));\n             SyncopeEnduserSession.get().onException(e);\n+            notificationPanel.refresh(target);\n         }\n-        notificationPanel.refresh(target);\n-        setResponsePage(SelfResult.class, parameters);\n     }\n \n     @Override\n@@ -69,7 +71,6 @@ protected UserTO getPwdLoggedUser() {\n     @Override\n     protected void doPwdCancel() {\n         SyncopeEnduserSession.get().invalidate();\n-        final PageParameters parameters = new PageParameters();\n-        setResponsePage(getApplication().getHomePage(), parameters);\n+        setResponsePage(getApplication().getHomePage(), new PageParameters());\n     }\n }"},{"sha":"4a56cba8209666d926356d36d0176e9c059a9ad6","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserSelfRestClient.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -29,7 +29,7 @@ public class UserSelfRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -1575748964398293968L;\n \n-    public static void changePassword(final String password) {\n+    public static void mustChangePassword(final String password) {\n         getService(UserSelfService.class).mustChangePassword(password);\n     }\n \n@@ -38,19 +38,15 @@ public static void requestPasswordReset(final String username, final String secu\n     }\n \n     public ProvisioningResult<UserTO> create(final UserCR createReq) {\n-        ProvisioningResult<UserTO> result;\n-        result = getService(UserSelfService.class).create(createReq).readEntity(\n-            new GenericType<>() {\n-            });\n-        return result;\n+        return getService(UserSelfService.class).create(createReq).readEntity(new GenericType<>() {\n+        });\n     }\n \n-    public ProvisioningResult<UserTO> update(final String etag, final UserUR userPatch) {\n+    public ProvisioningResult<UserTO> update(final String etag, final UserUR updateReq) {\n         ProvisioningResult<UserTO> result;\n         synchronized (this) {\n-            result = getService(etag, UserSelfService.class).update(userPatch).\n-                    readEntity(new GenericType<>() {\n-                    });\n+            result = getService(etag, UserSelfService.class).update(updateReq).readEntity(new GenericType<>() {\n+            });\n             resetClient(UserSelfService.class);\n         }\n         return result;"},{"sha":"c6e9f253f9435d58bd8ae2416fca1a3a3090dbd0","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/GroupUR.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FGroupUR.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -74,6 +74,11 @@ public Builder adynMembershipCond(final String type, final String fiql) {\n             return this;\n         }\n \n+        public Builder adynMembershipConds(final Map<String, String> conds) {\n+            getInstance().getADynMembershipConds().putAll(conds);\n+            return this;\n+        }\n+\n         public Builder typeExtension(final TypeExtensionTO typeExtension) {\n             getInstance().getTypeExtensions().add(typeExtension);\n             return this;"},{"sha":"71271cca2f1bd58efc76d660b5bee408e28a31ee","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":20,"deletions":21,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -232,11 +232,11 @@ protected void updateChecks(final String key) {\n     public AnyObjectTO unlink(final String key, final Collection<String> resources) {\n         updateChecks(key);\n \n-        AnyObjectUR req = new AnyObjectUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n+        AnyObjectUR req = new AnyObjectUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return binder.getAnyObjectTO(provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -245,11 +245,11 @@ public AnyObjectTO unlink(final String key, final Collection<String> resources)\n     public AnyObjectTO link(final String key, final Collection<String> resources) {\n         updateChecks(key);\n \n-        AnyObjectUR req = new AnyObjectUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n+        AnyObjectUR req = new AnyObjectUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return binder.getAnyObjectTO(provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -260,11 +260,11 @@ public ProvisioningResult<AnyObjectTO> unassign(\n \n         updateChecks(key);\n \n-        AnyObjectUR req = new AnyObjectUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n+        AnyObjectUR req = new AnyObjectUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return update(req, nullPriorityAsync);\n     }\n@@ -279,12 +279,11 @@ public ProvisioningResult<AnyObjectTO> assign(\n \n         updateChecks(key);\n \n-        AnyObjectUR req = new AnyObjectUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n-\n+        AnyObjectUR req = new AnyObjectUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n         return update(req, nullPriorityAsync);\n     }\n "},{"sha":"dcab7dec61b3d53d5a3fa2e7c580537cb19ef46d","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":28,"deletions":28,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -291,13 +291,13 @@ protected GroupTO updateChecks(final String key) {\n     public GroupTO unlink(final String key, final Collection<String> resources) {\n         GroupTO groupTO = updateChecks(key);\n \n-        GroupUR req = new GroupUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n-        req.setUDynMembershipCond(groupTO.getUDynMembershipCond());\n-        req.getADynMembershipConds().putAll(groupTO.getADynMembershipConds());\n+        GroupUR req = new GroupUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                udynMembershipCond(groupTO.getUDynMembershipCond()).\n+                adynMembershipConds(groupTO.getADynMembershipConds()).\n+                build();\n \n         return binder.getGroupTO(provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -307,13 +307,13 @@ public GroupTO unlink(final String key, final Collection<String> resources) {\n     public GroupTO link(final String key, final Collection<String> resources) {\n         GroupTO groupTO = updateChecks(key);\n \n-        GroupUR req = new GroupUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n-        req.getADynMembershipConds().putAll(groupTO.getADynMembershipConds());\n-        req.setUDynMembershipCond(groupTO.getUDynMembershipCond());\n+        GroupUR req = new GroupUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                udynMembershipCond(groupTO.getUDynMembershipCond()).\n+                adynMembershipConds(groupTO.getADynMembershipConds()).\n+                build();\n \n         return binder.getGroupTO(provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -325,13 +325,13 @@ public ProvisioningResult<GroupTO> unassign(\n \n         GroupTO groupTO = updateChecks(key);\n \n-        GroupUR req = new GroupUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n-        req.getADynMembershipConds().putAll(groupTO.getADynMembershipConds());\n-        req.setUDynMembershipCond(groupTO.getUDynMembershipCond());\n+        GroupUR req = new GroupUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                udynMembershipCond(groupTO.getUDynMembershipCond()).\n+                adynMembershipConds(groupTO.getADynMembershipConds()).\n+                build();\n \n         return update(req, nullPriorityAsync);\n     }\n@@ -347,13 +347,13 @@ public ProvisioningResult<GroupTO> assign(\n \n         GroupTO groupTO = updateChecks(key);\n \n-        GroupUR req = new GroupUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n-        req.getADynMembershipConds().putAll(groupTO.getADynMembershipConds());\n-        req.setUDynMembershipCond(groupTO.getUDynMembershipCond());\n+        GroupUR req = new GroupUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                udynMembershipCond(groupTO.getUDynMembershipCond()).\n+                adynMembershipConds(groupTO.getADynMembershipConds()).\n+                build();\n \n         return update(req, nullPriorityAsync);\n     }"},{"sha":"84a53f8d2d42074c282c94ba56eae493c67dd3c6","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":42,"deletions":31,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -22,6 +22,7 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -54,6 +55,7 @@\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.LogicActions;\n@@ -212,10 +214,8 @@ public ProvisioningResult<UserTO> selfUpdate(final UserUR userUR, final boolean\n         List<String> authStatuses = List.of(confParamOps.get(AuthContextUtils.getDomain(),\n                 \"authentication.statuses\", new String[] {}, String[].class));\n         if (!authStatuses.contains(updated.getEntity().getStatus())) {\n-            String accessToken = accessTokenDAO.findByOwner(updated.getEntity().getUsername()).getKey();\n-            if (accessToken != null) {\n-                accessTokenDAO.delete(accessToken);\n-            }\n+            Optional.ofNullable(accessTokenDAO.findByOwner(updated.getEntity().getUsername())).\n+                    map(AccessToken::getKey).ifPresent(accessTokenDAO::delete);\n         }\n \n         return updated;\n@@ -332,10 +332,22 @@ public ProvisioningResult<UserTO> selfStatus(final StatusR statusR, final boolea\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.MUST_CHANGE_PASSWORD + \"')\")\n     public ProvisioningResult<UserTO> mustChangePassword(final String password, final boolean nullPriorityAsync) {\n-        UserUR userUR = new UserUR();\n-        userUR.setPassword(new PasswordPatch.Builder().value(password).build());\n-        userUR.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(false).build());\n-        return selfUpdate(userUR, nullPriorityAsync);\n+        UserTO userTO = binder.getAuthenticatedUserTO();\n+\n+        UserUR userUR = new UserUR.Builder(userTO.getKey()).\n+                password(new PasswordPatch.Builder().\n+                        value(password).\n+                        onSyncope(true).\n+                        resources(userDAO.findAllResourceKeys(userTO.getKey())).\n+                        build()).\n+                mustChangePassword(new BooleanReplacePatchItem.Builder().value(false).build()).\n+                build();\n+        ProvisioningResult<UserTO> result = selfUpdate(userUR, nullPriorityAsync);\n+\n+        Optional.ofNullable(accessTokenDAO.findByOwner(result.getEntity().getUsername())).\n+                map(AccessToken::getKey).ifPresent(accessTokenDAO::delete);\n+\n+        return result;\n     }\n \n     @PreAuthorize(\"isAnonymous() or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n@@ -351,9 +363,8 @@ public void requestPasswordReset(final String username, final String securityAns\n         }\n \n         if (syncopeLogic.isPwdResetRequiringSecurityQuestions()\n-                && (securityAnswer == null\n-                || !Encryptor.getInstance().verify(securityAnswer, user.getCipherAlgorithm(),\n-                user.getSecurityAnswer()))) {\n+                && (securityAnswer == null || !Encryptor.getInstance().\n+                        verify(securityAnswer, user.getCipherAlgorithm(), user.getSecurityAnswer()))) {\n \n             throw SyncopeClientException.build(ClientExceptionType.InvalidSecurityAnswer);\n         }\n@@ -443,11 +454,11 @@ protected void updateChecks(final String key) {\n     public UserTO unlink(final String key, final Collection<String> resources) {\n         updateChecks(key);\n \n-        UserUR req = new UserUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n+        UserUR req = new UserUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return binder.getUserTO(provisioningManager.unlink(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -457,11 +468,11 @@ public UserTO unlink(final String key, final Collection<String> resources) {\n     public UserTO link(final String key, final Collection<String> resources) {\n         updateChecks(key);\n \n-        UserUR req = new UserUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n+        UserUR req = new UserUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return binder.getUserTO(provisioningManager.link(req, AuthContextUtils.getUsername(), REST_CONTEXT));\n     }\n@@ -473,11 +484,11 @@ public ProvisioningResult<UserTO> unassign(\n \n         updateChecks(key);\n \n-        UserUR req = new UserUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n-                collect(Collectors.toList()));\n+        UserUR req = new UserUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         return update(req, nullPriorityAsync);\n     }\n@@ -493,11 +504,11 @@ public ProvisioningResult<UserTO> assign(\n \n         updateChecks(key);\n \n-        UserUR req = new UserUR();\n-        req.setKey(key);\n-        req.getResources().addAll(resources.stream().\n-                map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n-                collect(Collectors.toList()));\n+        UserUR req = new UserUR.Builder(key).\n+                resources(resources.stream().\n+                        map(r -> new StringPatchItem.Builder().operation(PatchOperation.ADD_REPLACE).value(r).build()).\n+                        collect(Collectors.toList())).\n+                build();\n \n         if (changepwd) {\n             req.setPassword(new PasswordPatch.Builder()."},{"sha":"61b0f9bb161f1d39737de3b11f7a6d1a3d66fef5","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -120,5 +120,4 @@ public void confirmPasswordReset(final String token, final String password) {\n \n         logic.confirmPasswordReset(token, password);\n     }\n-\n }"},{"sha":"d48133171c1bea701f37b03ac8c7c580d49f0a24","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/EntityCacheDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntityCacheDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntityCacheDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FEntityCacheDAO.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.Map;\n+import org.apache.syncope.core.persistence.api.entity.Entity;\n \n public interface EntityCacheDAO {\n \n@@ -30,5 +31,7 @@ public interface EntityCacheDAO {\n \n     void resetStatistics();\n \n+    void evict(Class<? extends Entity> entityClass, String key);\n+\n     void clearCache();\n }"},{"sha":"09c4e8e51e338ef758dea9503bf987c54858fea4","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONUserDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -112,6 +112,7 @@ protected Pair<User, Pair<Set<String>, Set<String>>> doSave(final User user) {\n         String clearPwd = user.getClearPassword();\n \n         // 2. save\n+        entityManager().flush();\n         User merged = entityManager().merge(user);\n \n         // 3. set back the sole clear password value"},{"sha":"a4a2705b28893d19db6fc038fe1e7f3596ff1185","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAEntityCacheDAO.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntityCacheDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntityCacheDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAEntityCacheDAO.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -128,6 +128,13 @@ public void resetStatistics() {\n         queryStatistics().reset();\n     }\n \n+    @Override\n+    public void evict(final Class<? extends Entity> entityClass, final String key) {\n+        OpenJPAEntityManagerFactory emf = OpenJPAPersistence.cast(entityManagerFactory());\n+\n+        emf.getStoreCache().evict(entityClass, key);\n+    }\n+\n     @Override\n     public void clearCache() {\n         OpenJPAEntityManagerFactory emf = OpenJPAPersistence.cast(entityManagerFactory());"},{"sha":"b3981d746e7effdc6ca93a576a12d771fda7d4c2","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -196,7 +196,6 @@ public void membershipWithAttrNotAllowed() {\n         } catch (InvalidEntityException e) {\n             assertNotNull(e);\n         }\n-        entityManager().flush();\n     }\n \n     @Test"},{"sha":"ae2459f8e685328e2caa295f972bd08e1d125206","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/utils/FormatUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FFormatUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FFormatUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Futils%2FFormatUtils.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -132,7 +132,7 @@ public static OffsetDateTime parseDate(final String source, final String convers\n             dtpe = e;\n         }\n         try {\n-            return LocalDate.parse(source, dtf).atStartOfDay(DEFAULT_OFFSET).toOffsetDateTime();\n+            return LocalDate.parse(source, dtf).atStartOfDay(ZoneOffset.UTC).toOffsetDateTime();\n         } catch (DateTimeParseException e) {\n             dtpe = e;\n         }"},{"sha":"7da6a5b966ce336d0a9710b80407623dd1df06d1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AuthenticatedITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAuthenticatedITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAuthenticatedITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAuthenticatedITCase.java?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -75,10 +75,9 @@ public void mustChangePassword() {\n         // 3. submit form\n         TESTER.executeAjaxEvent(changePwdForm + \":submit\", Constants.ON_CLICK);\n \n-        TESTER.assertRenderedPage(SelfResult.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n         TESTER.cleanupFeedbackMessages();\n-        TESTER.startPage(Login.class);\n \n         doLogin(\"mustchangepassword\", \"password124\");\n "},{"sha":"285bdfc5107391bb6c622bb64d38f7ac24ae7196","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0032aad149bfc41e69e2f0b3e11d8291f057e4/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0032aad149bfc41e69e2f0b3e11d8291f057e4/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=df0032aad149bfc41e69e2f0b3e11d8291f057e4","patch":"@@ -32,7 +32,7 @@ under the License.\n   <parent>\n     <groupId>org.apache</groupId>\n     <artifactId>apache</artifactId>\n-    <version>25</version>\n+    <version>26</version>\n     <relativePath />\n   </parent>\n "}]}