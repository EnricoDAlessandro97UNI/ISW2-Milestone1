{"sha":"b1626cf0d5b438c466ca2501b23153dc4fed6d4b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxNjI2Y2YwZDViNDM4YzQ2NmNhMjUwMWIyMzE1M2RjNGZlZDZkNGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-17T08:24:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-17T08:24:25Z"},"message":"[SYNCOPE-862] Ensuring any types ordering on console","tree":{"sha":"95f06a2c5747aaebe68286ef94e9e2c8de951407","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/95f06a2c5747aaebe68286ef94e9e2c8de951407"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b1626cf0d5b438c466ca2501b23153dc4fed6d4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1626cf0d5b438c466ca2501b23153dc4fed6d4b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b1626cf0d5b438c466ca2501b23153dc4fed6d4b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5eed43a30ac25fda0b9c86e32364522d863c64e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e5eed43a30ac25fda0b9c86e32364522d863c64e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e5eed43a30ac25fda0b9c86e32364522d863c64e"}],"stats":{"total":121,"additions":75,"deletions":46},"files":[{"sha":"d19d2052f19fb68202c2d40f6fed19fd2c43f030","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyTypeComparator.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyTypeComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyTypeComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyTypeComparator.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.Comparator;\n+import org.apache.commons.collections4.ComparatorUtils;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+\n+public class AnyTypeComparator implements Comparator<AnyTypeTO> {\n+\n+    @Override\n+    public int compare(final AnyTypeTO o1, final AnyTypeTO o2) {\n+        if (o1.getKind() == AnyTypeKind.USER) {\n+            return -1;\n+        }\n+        if (o2.getKind() == AnyTypeKind.USER) {\n+            return 1;\n+        }\n+        if (o1.getKind() == AnyTypeKind.GROUP) {\n+            return -1;\n+        }\n+        if (o2.getKind() == AnyTypeKind.GROUP) {\n+            return 1;\n+        }\n+        return ComparatorUtils.<String>naturalComparator().compare(o1.getKey(), o2.getKey());\n+    }\n+\n+}"},{"sha":"38f9de0ffd7285aca24ea3f48e8bae5420ec8d2c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.AnyTypesPanel.AnyTypeProvider;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -56,6 +57,8 @@ public class AnyTypesPanel extends TypesDirectoryPanel<AnyTypeTO, AnyTypeProvide\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n+    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n     public AnyTypesPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n         disableCheckBoxes();\n@@ -75,10 +78,10 @@ public WizardModalPanel<AnyTypeTO> build(final String id, final int index, final\n                     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         try {\n                             if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n-                                SyncopeConsoleSession.get().getService(AnyTypeService.class).create(modelObject);\n+                                anyTypeRestClient.create(modelObject);\n                                 SyncopeConsoleSession.get().refreshAuth();\n                             } else {\n-                                SyncopeConsoleSession.get().getService(AnyTypeService.class).update(modelObject);\n+                                anyTypeRestClient.update(modelObject);\n                             }\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                             AnyTypesPanel.this.updateResultTable(target);\n@@ -229,14 +232,14 @@ private AnyTypeProvider(final int paginatorRows) {\n \n         @Override\n         public Iterator<AnyTypeTO> iterator(final long first, final long count) {\n-            final List<AnyTypeTO> list = SyncopeConsoleSession.get().getService(AnyTypeService.class).list();\n+            final List<AnyTypeTO> list = anyTypeRestClient.list();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            return SyncopeConsoleSession.get().getService(AnyTypeService.class).list().size();\n+            return anyTypeRestClient.list().size();\n         }\n \n         @Override"},{"sha":"bf44efa17c753875e7f19669065eb7477882280f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MembersTogglePanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -56,16 +56,14 @@ public abstract class MembersTogglePanel extends TogglePanel<Serializable> {\n \n         @Override\n         protected List<String> load() {\n-            final List<String> res = new ArrayList<>();\n-            CollectionUtils.collect(\n+            return CollectionUtils.collect(\n                     CollectionUtils.select(new AnyTypeRestClient().list(), new Predicate<AnyTypeTO>() {\n \n                         @Override\n                         public boolean evaluate(final AnyTypeTO object) {\n                             return object.getKind() != AnyTypeKind.GROUP;\n                         }\n-                    }), EntityTOUtils.<AnyTypeTO>keyTransformer(), res);\n-            return res;\n+                    }), EntityTOUtils.<AnyTypeTO>keyTransformer(), new ArrayList<String>());\n         }\n     };\n "},{"sha":"dd62ca82b8c7d86d102834b1d6fcdf15332c092e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":3,"deletions":27,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -21,11 +21,10 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections4.ComparatorUtils;\n import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.commons.AnyTypeComparator;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n@@ -35,7 +34,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -125,8 +123,8 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n-                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n+                FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n@@ -152,26 +150,4 @@ public Panel getPanel(final String panelId) {\n \n     protected abstract void onClickDelete(final AjaxRequestTarget target, final RealmTO realmTO);\n \n-    private static class AnyTypeComparator implements Comparator<AnyTypeTO> {\n-\n-        @Override\n-        public int compare(final AnyTypeTO o1, final AnyTypeTO o2) {\n-            if (o1.getKind() == AnyTypeKind.USER) {\n-                return -1;\n-            }\n-            if (o2.getKind() == AnyTypeKind.USER) {\n-                return 1;\n-            }\n-\n-            if (o1.getKind() == AnyTypeKind.GROUP) {\n-                return -1;\n-            }\n-            if (o2.getKind() == AnyTypeKind.GROUP) {\n-                return 1;\n-            }\n-\n-            return ComparatorUtils.<String>naturalComparator().compare(o1.getKey(), o2.getKey());\n-        }\n-\n-    }\n }"},{"sha":"80b6104b37c213f7a788660af7b3f4954b496b48","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.AnyTypeComparator;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n@@ -45,11 +46,19 @@ public List<AnyTypeTO> list() {\n \n         try {\n             types = getService(AnyTypeService.class).list();\n+            Collections.sort(types, new AnyTypeComparator());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While reading all any types\", e);\n         }\n \n         return types;\n     }\n \n+    public void create(final AnyTypeTO anyTypeTO) {\n+        getService(AnyTypeService.class).create(anyTypeTO);\n+    }\n+\n+    public void update(final AnyTypeTO anyTypeTO) {\n+        getService(AnyTypeService.class).update(anyTypeTO);\n+    }\n }"},{"sha":"bbec17d9d37445c331960c86f4468069bc7a84f9","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -56,7 +56,7 @@ public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaTy\n                 break;\n \n             default:\n-                for (AnyTypeTO anyTypeTO : getService(AnyTypeService.class).list()) {\n+                for (AnyTypeTO anyTypeTO : new AnyTypeRestClient().list()) {\n                     if (anyTypeTO.getKind() != AnyTypeKind.USER && anyTypeTO.getKind() != AnyTypeKind.GROUP) {\n                         classes.addAll(anyTypeTO.getClasses());\n                     }"},{"sha":"dc8015f8d0ae9694e4b743e12d123a1351c1edbf","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskFilters.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -41,8 +41,6 @@ public class PushTaskFilters extends WizardStep {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n     public PushTaskFilters(final PushTaskWrapper pushTaskWrapper) {\n         super();\n \n@@ -52,7 +50,7 @@ public PushTaskFilters(final PushTaskWrapper pushTaskWrapper) {\n \n             @Override\n             protected List<AnyTypeTO> load() {\n-                return anyTypeRestClient.list();\n+                return new AnyTypeRestClient().list();\n             }\n         };\n \n@@ -61,14 +59,14 @@ protected List<AnyTypeTO> load() {\n         // ------------------------\n         add(new ListView<AnyTypeTO>(\"filters\", types) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n                 item.add(new Accordion(\"filters\", Collections.<ITab>singletonList(\n                         new AbstractTab(new StringResourceModel(\n-                                \"filters\", this, new Model<AnyTypeTO>(item.getModelObject()))) {\n+                                \"filters\", this, new Model<>(item.getModelObject()))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n "},{"sha":"07164b4a357ce1973bb309b639bce1ce7c73b241","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.properties?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -15,4 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Edit ${anyTO.type} ${anyTO.name}\n-group.members='${right}' members of group '${left.name}' \n+group.members=${right} members of ${left.name}"},{"sha":"bd97397d4cc6d297579b52954546b9e0a772d1f4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_it.properties?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -15,4 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Modifica ${anyTO.type} ${anyTO.name}\n-group.members='${right}' membri del gruppo '${left.name}' \n+group.members=Membri ${right} di '${left.name}'"},{"sha":"9fb316de876e725816b6b8ee839ebc48ad2d7de2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_pt_BR.properties?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -15,4 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Alterar ${anyTO.type} ${anyTO.name}\n-group.members='${right}' members of group '${left.name}' \n+group.members=${right} members of ${left.name}"},{"sha":"0d6d2de1bcd9b73e18d6094d9f4dd242e50e6ec8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/GroupDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel_ru.properties?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -17,4 +17,4 @@\n #\n # any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type} ${anyTO.key}\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${anyTO.type} ${anyTO.name}\n-group.members='${right}' members of group '${left.name}' \n+group.members=${right} members of ${left.name}"},{"sha":"6b43018caa7b31d367a02e1ab7c325d5868dbfd0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1626cf0d5b438c466ca2501b23153dc4fed6d4b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=b1626cf0d5b438c466ca2501b23153dc4fed6d4b","patch":"@@ -61,7 +61,7 @@ public void read() {\n         formTester.submit(\"changeit\");\n \n         wicketTester.assertModelValue(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:outer:\"\n-                + \"dialog:header:header-label\", \"'USER' members of group 'artDirector' \");\n+                + \"dialog:header:header-label\", \"USER members of artDirector\");\n \n         assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:5:outer:form:content:searchResult:container:content:searchContainer:\""}]}