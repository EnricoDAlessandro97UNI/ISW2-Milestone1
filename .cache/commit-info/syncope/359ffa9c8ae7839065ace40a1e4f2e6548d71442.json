{"sha":"359ffa9c8ae7839065ace40a1e4f2e6548d71442","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM1OWZmYTljOGFlNzgzOTA2NWFjZTQwYTFlNGYyZTY1NDhkNzE0NDI=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-05T16:02:50Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-05T16:02:50Z"},"message":"windows build failure recovered by extending wait time for report export\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1297107 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"eedd46a3e3f65a513dbd19d537b999ab41c335d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/eedd46a3e3f65a513dbd19d537b999ab41c335d3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/359ffa9c8ae7839065ace40a1e4f2e6548d71442","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/359ffa9c8ae7839065ace40a1e4f2e6548d71442","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/359ffa9c8ae7839065ace40a1e4f2e6548d71442","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/359ffa9c8ae7839065ace40a1e4f2e6548d71442/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"69bf360b513ead311cedb6b57a4c853f2b505d34","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/69bf360b513ead311cedb6b57a4c853f2b505d34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/69bf360b513ead311cedb6b57a4c853f2b505d34"}],"stats":{"total":58,"additions":32,"deletions":26},"files":[{"sha":"a932905708226a1d3c45e3fe9586881406cfed77","filename":"core/src/test/java/org/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":30,"deletions":21,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/359ffa9c8ae7839065ace40a1e4f2e6548d71442/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/359ffa9c8ae7839065ace40a1e4f2e6548d71442/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=359ffa9c8ae7839065ace40a1e4f2e6548d71442","patch":"@@ -177,18 +177,17 @@ public void executeAndExport()\n \n         int i = 0;\n         int maxit = 50;\n+\n         do {\n             try {\n                 Thread.sleep(1000);\n             } catch (InterruptedException e) {\n             }\n \n-            reportTO = restTemplate.getForObject(\n-                    BASE_URL + \"report/read/{reportId}\", ReportTO.class, 1);\n+            reportTO = restTemplate.getForObject(BASE_URL + \"report/read/{reportId}\", ReportTO.class, 1);\n \n             i++;\n-        } while (preExecIds.size() == reportTO.getExecutions().size()\n-                && i < maxit);\n+        } while (preExecIds.size() == reportTO.getExecutions().size() && i < maxit);\n \n         Set<Long> postExecIds = new HashSet<Long>();\n         for (ReportExecTO exec : reportTO.getExecutions()) {\n@@ -198,19 +197,29 @@ public void executeAndExport()\n         postExecIds.removeAll(preExecIds);\n         assertEquals(1, postExecIds.size());\n \n-        // wait for report exec XML to be stored...\n-        try {\n-            Thread.sleep(3000);\n-        } catch (InterruptedException e) {\n-        }\n-\n         // Export\n         // 1. XML (default)\n-        HttpGet getMethod = new HttpGet(BASE_URL + \"report/execution/export/\"\n-                + postExecIds.iterator().next());\n-        HttpResponse response =\n-                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory()).getHttpClient().execute(getMethod);\n+\n+        HttpResponse response = null;\n+        HttpGet getMethod = null;\n+\n+        i = 0;\n+        maxit = 10;\n+\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            getMethod = new HttpGet(BASE_URL + \"report/execution/export/\" + postExecIds.iterator().next());\n+\n+            response = ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory()).getHttpClient().\n+                    execute(getMethod);\n+\n+            i++;\n+        } while ((response == null || response.getStatusLine().getStatusCode() != 200) && i < maxit);\n+\n         assertEquals(200, response.getStatusLine().getStatusCode());\n \n         String export = EntityUtils.toString(response.getEntity()).trim();\n@@ -220,8 +229,8 @@ public void executeAndExport()\n         // 2. HTML\n         getMethod = new HttpGet(BASE_URL + \"report/execution/export/\"\n                 + postExecIds.iterator().next() + \"?fmt=HTML\");\n-        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory()).getHttpClient().execute(getMethod);\n+        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory()).getHttpClient().execute(\n+                getMethod);\n         assertEquals(200, response.getStatusLine().getStatusCode());\n \n         export = EntityUtils.toString(response.getEntity()).trim();\n@@ -231,8 +240,8 @@ public void executeAndExport()\n         // 3. PDF\n         getMethod = new HttpGet(BASE_URL + \"report/execution/export/\"\n                 + postExecIds.iterator().next() + \"?fmt=PDF\");\n-        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory()).getHttpClient().execute(getMethod);\n+        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory()).getHttpClient().execute(\n+                getMethod);\n         assertEquals(200, response.getStatusLine().getStatusCode());\n \n         export = EntityUtils.toString(response.getEntity()).trim();\n@@ -242,8 +251,8 @@ public void executeAndExport()\n         // 4. RTF\n         getMethod = new HttpGet(BASE_URL + \"report/execution/export/\"\n                 + postExecIds.iterator().next() + \"?fmt=RTF\");\n-        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory()).getHttpClient().execute(getMethod);\n+        response = ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory()).getHttpClient().execute(\n+                getMethod);\n         assertEquals(200, response.getStatusLine().getStatusCode());\n \n         export = EntityUtils.toString(response.getEntity()).trim();"},{"sha":"ac54fc7f62097c4796a9a08408dde70ba0472661","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/359ffa9c8ae7839065ace40a1e4f2e6548d71442/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/359ffa9c8ae7839065ace40a1e4f2e6548d71442/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=359ffa9c8ae7839065ace40a1e4f2e6548d71442","patch":"@@ -318,8 +318,7 @@ public void sync() {\n         int preSyncSize = taskTO.getExecutions().size();\n \n         TaskExecTO execution = restTemplate.postForObject(\n-                BASE_URL + \"task/execute/{taskId}\", null,\n-                TaskExecTO.class, taskTO.getId());\n+                BASE_URL + \"task/execute/{taskId}\", null, TaskExecTO.class, taskTO.getId());\n         assertEquals(\"JOB_FIRED\", execution.getStatus());\n \n         int i = 0;\n@@ -332,9 +331,7 @@ public void sync() {\n             } catch (InterruptedException e) {\n             }\n \n-            taskTO = restTemplate.getForObject(\n-                    BASE_URL + \"task/read/{taskId}\",\n-                    SyncTaskTO.class, taskTO.getId());\n+            taskTO = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, taskTO.getId());\n \n             assertNotNull(taskTO);\n             assertNotNull(taskTO.getExecutions());"}]}