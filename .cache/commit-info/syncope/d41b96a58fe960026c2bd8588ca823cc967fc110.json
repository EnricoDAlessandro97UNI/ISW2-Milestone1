{"sha":"d41b96a58fe960026c2bd8588ca823cc967fc110","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0MWI5NmE1OGZlOTYwMDI2YzJiZDg1ODhjYTgyM2NjOTY3ZmMxMTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-04T10:45:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-04T10:49:25Z"},"message":"Adding some utility Builders","tree":{"sha":"9d99d8825af7dbc89f5098a5e9001e75eeee273e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9d99d8825af7dbc89f5098a5e9001e75eeee273e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d41b96a58fe960026c2bd8588ca823cc967fc110","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d41b96a58fe960026c2bd8588ca823cc967fc110","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d41b96a58fe960026c2bd8588ca823cc967fc110","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d41b96a58fe960026c2bd8588ca823cc967fc110/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8b61a2244e3f4aff87732221c9296b4032a71b4d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b61a2244e3f4aff87732221c9296b4032a71b4d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b61a2244e3f4aff87732221c9296b4032a71b4d"}],"stats":{"total":420,"additions":256,"deletions":164},"files":[{"sha":"601cd0f453beb1484bace339200afe481337fade","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -170,23 +170,22 @@ public static StatusPatch buildStatusPatch(final Collection<StatusBean> statuses\n     }\n \n     public static StatusPatch buildStatusPatch(final Collection<StatusBean> statuses, final Boolean enable) {\n-        StatusPatch statusPatch = new StatusPatch();\n-        statusPatch.setOnSyncope(false);\n+        StatusPatch.Builder builder = new StatusPatch.Builder();\n \n         for (StatusBean status : statuses) {\n             if (enable == null\n                     || (enable && !status.getStatus().isActive()) || (!enable && status.getStatus().isActive())) {\n \n                 if (\"syncope\".equalsIgnoreCase(status.getResource())) {\n-                    statusPatch.setOnSyncope(true);\n+                    builder.onSyncope(true);\n                 } else {\n-                    statusPatch.getResources().add(status.getResource());\n+                    builder.resource(status.getResource());\n                 }\n \n             }\n         }\n \n-        return statusPatch;\n+        return builder.build();\n     }\n \n     public static Panel getStatusImagePanel(final String componentId, final Status status) {"},{"sha":"4796ddb5ee7e5ad819bf61626984b69a0439bc09","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":21,"deletions":27,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -83,10 +83,9 @@ public BulkActionResult unlink(final String etag, final String key, final List<S\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n \n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(key);\n-            deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-            deassociationPatch.getResources().addAll(StatusUtils.buildStatusPatch(statuses).getResources());\n+            DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n+                    action(ResourceDeassociationAction.UNLINK).\n+                    resources(StatusUtils.buildStatusPatch(statuses).getResources()).build();\n \n             result = service.deassociate(deassociationPatch).readEntity(BulkActionResult.class);\n \n@@ -102,11 +101,10 @@ public BulkActionResult link(final String etag, final String key, final List<Sta\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(key);\n-            associationPatch.setAction(ResourceAssociationAction.LINK);\n-            associationPatch.setOnSyncope(statusPatch.isOnSyncope());\n-            associationPatch.getResources().addAll(statusPatch.getResources());\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(key).\n+                    action(ResourceAssociationAction.LINK).\n+                    onSyncope(statusPatch.isOnSyncope()).\n+                    resources(statusPatch.getResources()).build();\n \n             result = service.associate(associationPatch).readEntity(BulkActionResult.class);\n \n@@ -120,10 +118,9 @@ public BulkActionResult deprovision(final String etag, final String key, final L\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n \n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(key);\n-            deassociationPatch.setAction(ResourceDeassociationAction.DEPROVISION);\n-            deassociationPatch.getResources().addAll(StatusUtils.buildStatusPatch(statuses).getResources());\n+            DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n+                    action(ResourceDeassociationAction.DEPROVISION).\n+                    resources(StatusUtils.buildStatusPatch(statuses).getResources()).build();\n \n             result = service.deassociate(deassociationPatch).readEntity(BulkActionResult.class);\n \n@@ -139,11 +136,10 @@ public BulkActionResult provision(final String etag, final String key, final Lis\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(key);\n-            associationPatch.setAction(ResourceAssociationAction.PROVISION);\n-            associationPatch.setOnSyncope(statusPatch.isOnSyncope());\n-            associationPatch.getResources().addAll(statusPatch.getResources());\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(key).\n+                    action(ResourceAssociationAction.PROVISION).\n+                    onSyncope(statusPatch.isOnSyncope()).\n+                    resources(statusPatch.getResources()).build();\n \n             result = service.associate(associationPatch).readEntity(BulkActionResult.class);\n \n@@ -157,10 +153,9 @@ public BulkActionResult unassign(final String etag, final String key, final List\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n \n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(key);\n-            deassociationPatch.setAction(ResourceDeassociationAction.UNASSIGN);\n-            deassociationPatch.getResources().addAll(StatusUtils.buildStatusPatch(statuses).getResources());\n+            DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n+                    action(ResourceDeassociationAction.UNASSIGN).\n+                    resources(StatusUtils.buildStatusPatch(statuses).getResources()).build();\n \n             result = service.deassociate(deassociationPatch).readEntity(BulkActionResult.class);\n \n@@ -176,11 +171,10 @@ public BulkActionResult assign(final String etag, final String key, final List<S\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(key);\n-            associationPatch.setAction(ResourceAssociationAction.ASSIGN);\n-            associationPatch.setOnSyncope(statusPatch.isOnSyncope());\n-            associationPatch.getResources().addAll(statusPatch.getResources());\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(key).\n+                    action(ResourceAssociationAction.ASSIGN).\n+                    onSyncope(statusPatch.isOnSyncope()).\n+                    resources(statusPatch.getResources()).build();\n \n             result = service.associate(associationPatch).readEntity(BulkActionResult.class);\n "},{"sha":"e445aaca9edde2db1eba47def4578791ecadec45","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AssociationPatch.java","status":"modified","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.patch;\n \n+import java.util.Collection;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n@@ -29,6 +30,59 @@ public class AssociationPatch extends PasswordPatch {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n \n+    public static class Builder extends PasswordPatch.Builder {\n+\n+        @Override\n+        protected AssociationPatch newInstance() {\n+            return new AssociationPatch();\n+        }\n+\n+        @Override\n+        protected AssociationPatch getInstance() {\n+            return (AssociationPatch) super.getInstance();\n+        }\n+\n+        @Override\n+        public AssociationPatch build() {\n+            return (AssociationPatch) super.build();\n+        }\n+\n+        @Override\n+        public Builder onSyncope(final boolean onSyncope) {\n+            return (Builder) super.onSyncope(onSyncope);\n+        }\n+\n+        @Override\n+        public Builder resource(final String resource) {\n+            return (Builder) super.resource(resource);\n+        }\n+\n+        @Override\n+        public Builder resources(final Collection<String> resources) {\n+            return (Builder) super.resources(resources);\n+        }\n+\n+        @Override\n+        public Builder resources(final String... resources) {\n+            return (Builder) super.resources(resources);\n+        }\n+\n+        @Override\n+        public Builder value(final String value) {\n+            return (Builder) super.value(value);\n+        }\n+\n+        public Builder key(final String key) {\n+            getInstance().setKey(key);\n+            return this;\n+        }\n+\n+        public Builder action(final ResourceAssociationAction action) {\n+            getInstance().setAction(action);\n+            return this;\n+        }\n+    }\n+\n     private String key;\n \n     private ResourceAssociationAction action;"},{"sha":"3c6cc605d9bed3d25b94c8d7742ab092995d20e7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/DeassociationPatch.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -20,6 +20,8 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n@@ -35,6 +37,48 @@ public class DeassociationPatch extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n \n+    public static class Builder {\n+\n+        private final DeassociationPatch instance;\n+\n+        public Builder() {\n+            this.instance = new DeassociationPatch();\n+        }\n+\n+        public Builder key(final String key) {\n+            instance.setKey(key);\n+            return this;\n+        }\n+\n+        public Builder action(final ResourceDeassociationAction action) {\n+            instance.setAction(action);\n+            return this;\n+        }\n+\n+        public Builder resource(final String resource) {\n+            if (resource != null) {\n+                instance.getResources().add(resource);\n+            }\n+            return this;\n+        }\n+\n+        public Builder resources(final String... resources) {\n+            instance.getResources().addAll(Arrays.asList(resources));\n+            return this;\n+        }\n+\n+        public Builder resources(final Collection<String> resources) {\n+            if (resources != null) {\n+                instance.getResources().addAll(resources);\n+            }\n+            return this;\n+        }\n+\n+        public DeassociationPatch build() {\n+            return instance;\n+        }\n+    }\n+\n     private String key;\n \n     private ResourceDeassociationAction action;"},{"sha":"af989e4cebaa5f42656c1d98090b1037957a6b78","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/PasswordPatch.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n@@ -55,9 +56,7 @@ public Builder resource(final String resource) {\n         }\n \n         public Builder resources(final String... resources) {\n-            for (String resource : resources) {\n-                getInstance().getResources().add(resource);\n-            }\n+            getInstance().getResources().addAll(Arrays.asList(resources));\n             return this;\n         }\n "},{"sha":"9c94dc7ea857af80a4c227e9a99338dc277f12da","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/StatusPatch.java","status":"modified","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.patch;\n \n+import java.util.Collection;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n@@ -29,6 +30,59 @@ public class StatusPatch extends PasswordPatch {\n \n     private static final long serialVersionUID = 99309988426922612L;\n \n+    public static class Builder extends PasswordPatch.Builder {\n+\n+        @Override\n+        protected StatusPatch newInstance() {\n+            return new StatusPatch();\n+        }\n+\n+        @Override\n+        protected StatusPatch getInstance() {\n+            return (StatusPatch) super.getInstance();\n+        }\n+\n+        @Override\n+        public StatusPatch build() {\n+            return (StatusPatch) super.build();\n+        }\n+\n+        @Override\n+        public Builder onSyncope(final boolean onSyncope) {\n+            return (Builder) super.onSyncope(onSyncope);\n+        }\n+\n+        @Override\n+        public Builder resource(final String resource) {\n+            return (Builder) super.resource(resource);\n+        }\n+\n+        @Override\n+        public Builder resources(final Collection<String> resources) {\n+            return (Builder) super.resources(resources);\n+        }\n+\n+        @Override\n+        public Builder resources(final String... resources) {\n+            return (Builder) super.resources(resources);\n+        }\n+\n+        public Builder key(final String key) {\n+            getInstance().setKey(key);\n+            return this;\n+        }\n+\n+        public Builder type(final StatusPatchType type) {\n+            getInstance().setType(type);\n+            return this;\n+        }\n+\n+        public Builder token(final String token) {\n+            getInstance().setToken(token);\n+            return this;\n+        }\n+    }\n+\n     /**\n      * Key of user to for which status update is requested.\n      */"},{"sha":"bd635273f68b5338073c154297f102c6f92d8312","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttrTO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -21,6 +21,7 @@\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.PathParam;\n@@ -55,9 +56,7 @@ public Builder value(final String value) {\n         }\n \n         public Builder values(final String... values) {\n-            for (String value : values) {\n-                instance.getValues().add(value);\n-            }\n+            instance.getValues().addAll(Arrays.asList(values));\n             return this;\n         }\n "},{"sha":"ee8489c3cb9b9bf7a2178691f47c71fdcaa2877a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -385,10 +385,10 @@ public Response bulk(final BulkAction bulkAction) {\n             case SUSPEND:\n                 if (logic instanceof UserLogic) {\n                     bulkAction.getTargets().forEach(key -> {\n-                        StatusPatch statusPatch = new StatusPatch();\n-                        statusPatch.setKey(key);\n-                        statusPatch.setType(StatusPatchType.SUSPEND);\n-                        statusPatch.setOnSyncope(true);\n+                        StatusPatch statusPatch = new StatusPatch.Builder().key(key).\n+                                type(StatusPatchType.SUSPEND).\n+                                onSyncope(true).\n+                                build();\n \n                         try {\n                             result.getResults().put(\n@@ -408,10 +408,10 @@ public Response bulk(final BulkAction bulkAction) {\n             case REACTIVATE:\n                 if (logic instanceof UserLogic) {\n                     bulkAction.getTargets().forEach(key -> {\n-                        StatusPatch statusPatch = new StatusPatch();\n-                        statusPatch.setKey(key);\n-                        statusPatch.setType(StatusPatchType.REACTIVATE);\n-                        statusPatch.setOnSyncope(true);\n+                        StatusPatch statusPatch = new StatusPatch.Builder().key(key).\n+                                type(StatusPatchType.REACTIVATE).\n+                                onSyncope(true).\n+                                build();\n \n                         try {\n                             result.getResults().put("},{"sha":"49cc8f4a081a279a0743f65b898108c676ebc8ca","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -104,11 +104,8 @@ protected void ldapCleanup() {\n                 build());\n         if (matchingGroups.getSize() > 0) {\n             for (GroupTO group : matchingGroups.getResult()) {\n-                DeassociationPatch deassociationPatch = new DeassociationPatch();\n-                deassociationPatch.setKey(group.getKey());\n-                deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-                deassociationPatch.getResources().add(RESOURCE_NAME_LDAP);\n-                groupService.deassociate(deassociationPatch);\n+                groupService.deassociate(new DeassociationPatch.Builder().key(group.getKey()).\n+                        action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_LDAP).build());\n                 groupService.delete(group.getKey());\n             }\n         }\n@@ -119,11 +116,8 @@ protected void ldapCleanup() {\n                         build());\n         if (matchingUsers.getSize() > 0) {\n             for (UserTO user : matchingUsers.getResult()) {\n-                DeassociationPatch deassociationPatch = new DeassociationPatch();\n-                deassociationPatch.setKey(user.getKey());\n-                deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-                deassociationPatch.getResources().add(RESOURCE_NAME_LDAP);\n-                userService.deassociate(deassociationPatch);\n+                userService.deassociate(new DeassociationPatch.Builder().key(user.getKey()).\n+                        action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_LDAP).build());\n                 userService.delete(user.getKey());\n             }\n         }"},{"sha":"58dca0d85c6041c53a42288dc43e215620172543","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -396,9 +396,8 @@ public void checkUserSuspension() {\n             assertNotNull(e);\n         }\n \n-        StatusPatch reactivate = new StatusPatch();\n-        reactivate.setKey(userTO.getKey());\n-        reactivate.setType(StatusPatchType.REACTIVATE);\n+        StatusPatch reactivate = new StatusPatch.Builder().key(userTO.getKey()).\n+                type(StatusPatchType.REACTIVATE).build();\n         userTO = userService.status(reactivate).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n@@ -523,10 +522,8 @@ public void issueSYNCOPE164() throws Exception {\n         assertNotNull(user);\n \n         // 2. unlink the resource from the created user\n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(user.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_TESTDB);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(user.getKey()).\n+                action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_TESTDB).build();\n         assertNotNull(userService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n         // 3. change password on Syncope"},{"sha":"a1337d28d3f9aeea1604d42600d6ec2bad459b62","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":14,"deletions":28,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -316,10 +316,8 @@ public void unlink() {\n \n         assertNotNull(resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), actual.getKey()));\n \n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(actual.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_LDAP).build();\n \n         assertNotNull(groupService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n@@ -345,10 +343,8 @@ public void link() {\n             assertNotNull(e);\n         }\n \n-        AssociationPatch associationPatch = new AssociationPatch();\n-        associationPatch.setKey(actual.getKey());\n-        associationPatch.setAction(ResourceAssociationAction.LINK);\n-        associationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+        AssociationPatch associationPatch = new AssociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceAssociationAction.LINK).resource(RESOURCE_NAME_LDAP).build();\n \n         assertNotNull(groupService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -414,10 +410,8 @@ public void assign() {\n                 assertNotNull(e);\n             }\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(groupTO.getKey());\n-            associationPatch.setAction(ResourceAssociationAction.ASSIGN);\n-            associationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(groupTO.getKey()).\n+                    action(ResourceAssociationAction.ASSIGN).resource(RESOURCE_NAME_LDAP).build();\n \n             assertNotNull(groupService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -443,10 +437,8 @@ public void deprovision() {\n \n             assertNotNull(resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey()));\n \n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(groupTO.getKey());\n-            deassociationPatch.setAction(ResourceDeassociationAction.DEPROVISION);\n-            deassociationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+            DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(groupTO.getKey()).\n+                    action(ResourceDeassociationAction.DEPROVISION).resource(RESOURCE_NAME_LDAP).build();\n \n             assertNotNull(groupService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n@@ -483,10 +475,8 @@ public void provision() {\n                 assertNotNull(e);\n             }\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(groupTO.getKey());\n-            associationPatch.setAction(ResourceAssociationAction.PROVISION);\n-            associationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(groupTO.getKey()).\n+                    action(ResourceAssociationAction.PROVISION).resource(RESOURCE_NAME_LDAP).build();\n \n             assertNotNull(groupService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -518,10 +508,8 @@ public void deprovisionUnlinked() {\n                 assertNotNull(e);\n             }\n \n-            AssociationPatch associationPatch = new AssociationPatch();\n-            associationPatch.setKey(groupTO.getKey());\n-            associationPatch.setAction(ResourceAssociationAction.PROVISION);\n-            associationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+            AssociationPatch associationPatch = new AssociationPatch.Builder().key(groupTO.getKey()).\n+                    action(ResourceAssociationAction.PROVISION).resource(RESOURCE_NAME_LDAP).build();\n \n             assertNotNull(groupService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -531,10 +519,8 @@ public void deprovisionUnlinked() {\n             assertNotNull(resourceService.readConnObject(\n                     RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey()));\n \n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(groupTO.getKey());\n-            deassociationPatch.setAction(ResourceDeassociationAction.DEPROVISION);\n-            deassociationPatch.getResources().add(RESOURCE_NAME_LDAP);\n+            DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(groupTO.getKey()).\n+                    action(ResourceDeassociationAction.DEPROVISION).resource(RESOURCE_NAME_LDAP).build();\n \n             assertNotNull(groupService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n "},{"sha":"391289a0bc6eda85f50bb7d3bc980b11a4342c5c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -444,11 +444,8 @@ public void reconcileFromScriptedSQL() {\n                                     is(\"location\").equalTo(\"pull*\").query()).build());\n             assertTrue(matchingPrinters.getSize() > 0);\n             for (AnyObjectTO printer : matchingPrinters.getResult()) {\n-                DeassociationPatch deassociationPatch = new DeassociationPatch();\n-                deassociationPatch.setKey(printer.getKey());\n-                deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-                deassociationPatch.getResources().add(RESOURCE_NAME_DBSCRIPTED);\n-                anyObjectService.deassociate(deassociationPatch);\n+                anyObjectService.deassociate(new DeassociationPatch.Builder().key(printer.getKey()).\n+                        action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_DBSCRIPTED).build());\n                 anyObjectService.delete(printer.getKey());\n             }\n "},{"sha":"7dee2f116d1f91232e78ea6dfc492066711467fe","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":39,"deletions":62,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -713,10 +713,9 @@ public void createActivate() {\n \n         assertEquals(\"created\", userTO.getStatus());\n \n-        StatusPatch statusPatch = new StatusPatch();\n-        statusPatch.setKey(userTO.getKey());\n-        statusPatch.setType(StatusPatchType.ACTIVATE);\n-        statusPatch.setToken(userTO.getToken());\n+        StatusPatch statusPatch = new StatusPatch.Builder().key(userTO.getKey()).\n+                type(StatusPatchType.ACTIVATE).token(userTO.getToken()).build();\n+\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n \n@@ -740,17 +739,16 @@ public void suspendReactivate() {\n                 ? \"active\"\n                 : \"created\", userTO.getStatus());\n \n-        StatusPatch statusPatch = new StatusPatch();\n-        statusPatch.setKey(userTO.getKey());\n-        statusPatch.setType(StatusPatchType.SUSPEND);\n+        StatusPatch statusPatch = new StatusPatch.Builder().key(userTO.getKey()).\n+                type(StatusPatchType.SUSPEND).token(userTO.getToken()).build();\n+\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        statusPatch = new StatusPatch();\n-        statusPatch.setKey(userTO.getKey());\n-        statusPatch.setType(StatusPatchType.REACTIVATE);\n+        statusPatch = new StatusPatch.Builder().key(userTO.getKey()).type(StatusPatchType.REACTIVATE).build();\n+\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n@@ -779,12 +777,11 @@ public void suspendReactivateOnResource() {\n         String userKey = userTO.getKey();\n \n         // Suspend with effect on syncope, ldap and db => user should be suspended in syncope and all resources\n-        StatusPatch statusPatch = new StatusPatch();\n-        statusPatch.setKey(userKey);\n-        statusPatch.setType(StatusPatchType.SUSPEND);\n-        statusPatch.setOnSyncope(true);\n-        statusPatch.getResources().add(RESOURCE_NAME_TESTDB);\n-        statusPatch.getResources().add(RESOURCE_NAME_LDAP);\n+        StatusPatch statusPatch = new StatusPatch.Builder().key(userKey).\n+                type(StatusPatchType.SUSPEND).\n+                onSyncope(true).\n+                resources(RESOURCE_NAME_TESTDB, RESOURCE_NAME_LDAP).\n+                build();\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n@@ -798,11 +795,11 @@ public void suspendReactivateOnResource() {\n         assertNotNull(connObjectTO);\n \n         // Suspend and reactivate only on ldap => db and syncope should still show suspended\n-        statusPatch = new StatusPatch();\n-        statusPatch.setKey(userKey);\n-        statusPatch.setType(StatusPatchType.SUSPEND);\n-        statusPatch.setOnSyncope(false);\n-        statusPatch.getResources().add(RESOURCE_NAME_LDAP);\n+        statusPatch = new StatusPatch.Builder().key(userKey).\n+                type(StatusPatchType.SUSPEND).\n+                onSyncope(false).\n+                resources(RESOURCE_NAME_LDAP).\n+                build();\n         userService.status(statusPatch);\n         statusPatch.setType(StatusPatchType.REACTIVATE);\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n@@ -814,12 +811,11 @@ public void suspendReactivateOnResource() {\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         // Reactivate on syncope and db => syncope and db should show the user as active\n-        statusPatch = new StatusPatch();\n-        statusPatch.setKey(userKey);\n-        statusPatch.setType(StatusPatchType.REACTIVATE);\n-        statusPatch.setOnSyncope(true);\n-        statusPatch.getResources().add(RESOURCE_NAME_TESTDB);\n-\n+        statusPatch = new StatusPatch.Builder().key(userKey).\n+                type(StatusPatchType.REACTIVATE).\n+                onSyncope(true).\n+                resources(RESOURCE_NAME_TESTDB).\n+                build();\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertNotNull(userTO);\n@@ -1051,10 +1047,8 @@ public void unlink() {\n         assertNotNull(actual);\n         assertNotNull(resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey()));\n \n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(actual.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceDeassociationAction.UNLINK).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n@@ -1084,10 +1078,8 @@ public void link() {\n             assertNotNull(e);\n         }\n \n-        AssociationPatch associationPatch = new AssociationPatch();\n-        associationPatch.setKey(actual.getKey());\n-        associationPatch.setAction(ResourceAssociationAction.LINK);\n-        associationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        AssociationPatch associationPatch = new AssociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceAssociationAction.LINK).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -1116,10 +1108,8 @@ public void unassign() {\n         assertNotNull(actual);\n         assertNotNull(resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey()));\n \n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(actual.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.UNASSIGN);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceDeassociationAction.UNASSIGN).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n@@ -1154,11 +1144,8 @@ public void assign() {\n             assertNotNull(e);\n         }\n \n-        AssociationPatch associationPatch = new AssociationPatch();\n-        associationPatch.setKey(actual.getKey());\n-        associationPatch.setValue(\"password\");\n-        associationPatch.setAction(ResourceAssociationAction.ASSIGN);\n-        associationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        AssociationPatch associationPatch = new AssociationPatch.Builder().key(actual.getKey()).\n+                value(\"password\").action(ResourceAssociationAction.ASSIGN).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -1181,10 +1168,8 @@ public void deprovision() {\n         assertNotNull(actual);\n         assertNotNull(resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey()));\n \n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(actual.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.DEPROVISION);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceDeassociationAction.DEPROVISION).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n \n@@ -1219,11 +1204,8 @@ public void provision() {\n             assertNotNull(e);\n         }\n \n-        AssociationPatch associationPatch = new AssociationPatch();\n-        associationPatch.setKey(actual.getKey());\n-        associationPatch.setValue(\"password\");\n-        associationPatch.setAction(ResourceAssociationAction.PROVISION);\n-        associationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        AssociationPatch associationPatch = new AssociationPatch.Builder().key(actual.getKey()).\n+                value(\"password\").action(ResourceAssociationAction.PROVISION).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -1252,11 +1234,8 @@ public void deprovisionUnlinked() {\n             assertNotNull(e);\n         }\n \n-        AssociationPatch associationPatch = new AssociationPatch();\n-        associationPatch.setKey(actual.getKey());\n-        associationPatch.setValue(\"password\");\n-        associationPatch.setAction(ResourceAssociationAction.PROVISION);\n-        associationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        AssociationPatch associationPatch = new AssociationPatch.Builder().key(actual.getKey()).\n+                value(\"password\").action(ResourceAssociationAction.PROVISION).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.associate(associationPatch).readEntity(BulkActionResult.class));\n \n@@ -1265,10 +1244,8 @@ public void deprovisionUnlinked() {\n         assertTrue(actual.getResources().isEmpty());\n         assertNotNull(resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey()));\n \n-        DeassociationPatch deassociationPatch = new DeassociationPatch();\n-        deassociationPatch.setKey(actual.getKey());\n-        deassociationPatch.setAction(ResourceDeassociationAction.DEPROVISION);\n-        deassociationPatch.getResources().add(RESOURCE_NAME_CSV);\n+        DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(actual.getKey()).\n+                action(ResourceDeassociationAction.DEPROVISION).resource(RESOURCE_NAME_CSV).build();\n \n         assertNotNull(userService.deassociate(deassociationPatch).readEntity(BulkActionResult.class));\n "},{"sha":"43f912096c5fad93c087486d978055832a081348","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d41b96a58fe960026c2bd8588ca823cc967fc110/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=d41b96a58fe960026c2bd8588ca823cc967fc110","patch":"@@ -166,19 +166,17 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         // suspend/reactivate user and check virtual attribute value (unchanged)\n         // ----------------------------------\n-        StatusPatch statusPatch = new StatusPatch();\n-        statusPatch.setKey(userTO.getKey());\n-        statusPatch.setType(StatusPatchType.SUSPEND);\n+        StatusPatch statusPatch = new StatusPatch.Builder().key(userTO.getKey()).\n+                type(StatusPatchType.SUSPEND).build();\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertEquals(\"virtualvalue2\", connObjectTO.getAttr(\"COMPANYNAME\").get().getValues().get(0));\n \n-        statusPatch = new StatusPatch();\n-        statusPatch.setKey(userTO.getKey());\n-        statusPatch.setType(StatusPatchType.REACTIVATE);\n+        statusPatch = new StatusPatch.Builder().key(userTO.getKey()).\n+                type(StatusPatchType.REACTIVATE).build();\n         userTO = userService.status(statusPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n         }).getEntity();\n         assertEquals(\"active\", userTO.getStatus());"}]}