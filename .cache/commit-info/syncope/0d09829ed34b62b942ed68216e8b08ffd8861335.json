{"sha":"0d09829ed34b62b942ed68216e8b08ffd8861335","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBkMDk4MjllZDM0YjYyYjk0MmVkNjgyMTZlOGIwOGZmZDg4NjEzMzU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-08T15:27:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-09T11:41:03Z"},"message":"[SYNCOPE-701] Removing unwanted core/misc dependency","tree":{"sha":"1d52d573c8d36be477902082f5ece4b07af10b39","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1d52d573c8d36be477902082f5ece4b07af10b39"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0d09829ed34b62b942ed68216e8b08ffd8861335","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d09829ed34b62b942ed68216e8b08ffd8861335","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0d09829ed34b62b942ed68216e8b08ffd8861335","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d09829ed34b62b942ed68216e8b08ffd8861335/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8557d2acf267792329b03d3dcbffad8bdbf4c547","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8557d2acf267792329b03d3dcbffad8bdbf4c547","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8557d2acf267792329b03d3dcbffad8bdbf4c547"}],"stats":{"total":93,"additions":36,"deletions":57},"files":[{"sha":"eca21243769ddf9d17de69e150a47a58d489d633","filename":"client/enduser/pom.xml","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fpom.xml?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -38,13 +38,6 @@ under the License.\n   </properties>\n   \n   <dependencies>\n-    \n-    <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-misc</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-\n     <dependency> \n       <groupId>javax.servlet</groupId> \n       <artifactId>javax.servlet-api</artifactId>\n@@ -175,7 +168,7 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery-ui</artifactId>\n     </dependency>\n-    \n+\n     <!--Logging-->\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>"},{"sha":"9a3e32e523815c80118404f52ff3cc25da55edf5","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -52,7 +52,7 @@\n import org.apache.wicket.request.Response;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.request.resource.ResourceReference;\n-import org.springframework.util.Assert;\n+import org.apache.wicket.util.lang.Args;\n \n public class SyncopeEnduserApplication extends WebApplication implements Serializable {\n \n@@ -105,30 +105,30 @@ protected void init() {\n             throw new WicketRuntimeException(\"Could not read \" + ENDUSER_PROPERTIES, e);\n         }\n         version = props.getProperty(\"version\");\n-        Assert.notNull(version, \"<version> not set\");\n+        Args.notNull(version, \"<version> not set\");\n         site = props.getProperty(\"site\");\n-        Assert.notNull(site, \"<site> not set\");\n+        Args.notNull(site, \"<site> not set\");\n         license = props.getProperty(\"license\");\n-        Assert.notNull(license, \"<license> not set\");\n+        Args.notNull(license, \"<license> not set\");\n         anonymousUser = props.getProperty(\"anonymousUser\");\n-        Assert.notNull(anonymousUser, \"<anonymousUser> not set\");\n+        Args.notNull(anonymousUser, \"<anonymousUser> not set\");\n         anonymousKey = props.getProperty(\"anonymousKey\");\n-        Assert.notNull(anonymousKey, \"<anonymousKey> not set\");\n+        Args.notNull(anonymousKey, \"<anonymousKey> not set\");\n \n         captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n-        Assert.notNull(captchaEnabled, \"<captcha> not set\");\n+        Args.notNull(captchaEnabled, \"<captcha> not set\");\n \n         xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n-        Assert.notNull(xsrfEnabled, \"<xsrf> not set\");\n+        Args.notNull(xsrfEnabled, \"<xsrf> not set\");\n \n         String scheme = props.getProperty(\"scheme\");\n-        Assert.notNull(scheme, \"<scheme> not set\");\n+        Args.notNull(scheme, \"<scheme> not set\");\n         String host = props.getProperty(\"host\");\n-        Assert.notNull(host, \"<host> not set\");\n+        Args.notNull(host, \"<host> not set\");\n         String port = props.getProperty(\"port\");\n-        Assert.notNull(port, \"<port> not set\");\n+        Args.notNull(port, \"<port> not set\");\n         String rootPath = props.getProperty(\"rootPath\");\n-        Assert.notNull(rootPath, \"<rootPath> not set\");\n+        Args.notNull(rootPath, \"<rootPath> not set\");\n \n         clientFactory = new SyncopeClientFactoryBean().setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath);\n         clientFactory.setContentType(SyncopeClientFactoryBean.ContentType.JSON);"},{"sha":"a5ebe63365db6c768192ce6735282ab55162e272","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AbstractBaseResource.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.resources;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n@@ -34,6 +35,8 @@ public abstract class AbstractBaseResource extends AbstractResource {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AbstractBaseResource.class);\n \n+    protected static final ObjectMapper MAPPER = new ObjectMapper();\n+\n     protected final boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {"},{"sha":"8b369073fd65146f291ea3d6d709abd60d895ddd","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/InfoResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.PlatformInfoAdapter;\n import org.apache.syncope.client.enduser.util.SaltGenerator;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.cookies.CookieUtils;\n import org.slf4j.Logger;\n@@ -57,9 +56,9 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n                     attributes.getResponse().write(\n-                            POJOHelper.serialize(\n+                            MAPPER.writeValueAsString(\n                                     PlatformInfoAdapter.toPlatformInfoRequest(\n-                                    SyncopeEnduserSession.get().getPlatformInfo())));\n+                                            SyncopeEnduserSession.get().getPlatformInfo())));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"db996693938cca2104fac06bb36f24d849ff8340","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LoginResource.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.model.Credentials;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.io.IOUtils;\n@@ -37,12 +36,8 @@ public class LoginResource extends AbstractBaseResource {\n \n     private static final Logger LOG = LoggerFactory.getLogger(LoginResource.class);\n \n-    public LoginResource() {\n-    }\n-\n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         try {\n@@ -54,8 +49,8 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            Credentials credentials = POJOHelper.deserialize(IOUtils.toString(request.getInputStream()),\n-                    Credentials.class);\n+            Credentials credentials = MAPPER.readValue(\n+                    IOUtils.toString(request.getInputStream()), Credentials.class);\n             final String username = credentials.getUsername();\n             final String password = credentials.getPassword().isEmpty() ? null : credentials.getPassword();\n "},{"sha":"3b32d05c9db07577362940504daf607f4670033d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.slf4j.Logger;\n@@ -94,7 +93,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(new SchemaResponse().\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(new SchemaResponse().\n                             plainSchemas(plainSchemas).\n                             derSchemas(derSchemas).\n                             virSchemas(virSchemas)));"},{"sha":"0893c222de4682b807c236787e304448a7f9a658","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SecurityQuestionResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -72,7 +71,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n                     @Override\n                     public void writeData(final IResource.Attributes attributes) throws IOException {\n-                        attributes.getResponse().write(POJOHelper.serialize(securityQuestionTO));\n+                        attributes.getResponse().write(MAPPER.writeValueAsString(securityQuestionTO));\n                     }\n                 });\n             } else {\n@@ -82,7 +81,7 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n \n                     @Override\n                     public void writeData(final IResource.Attributes attributes) throws IOException {\n-                        attributes.getResponse().write(POJOHelper.serialize(securityQuestionTOs));\n+                        attributes.getResponse().write(MAPPER.writeValueAsString(securityQuestionTOs));\n                     }\n                 });\n             }"},{"sha":"bdb6f98cd5504371fb5760c5bc28f1062805f258","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyClassTypeResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -38,7 +37,7 @@ public class SyncopeAnyClassTypeResource extends AbstractBaseResource {\n \n     private final AnyTypeClassService anyTypeClassService;\n \n-    public SyncopeAnyClassTypeResource() {        \n+    public SyncopeAnyClassTypeResource() {\n         anyTypeClassService = SyncopeEnduserSession.get().getService(AnyTypeClassService.class);\n     }\n \n@@ -64,7 +63,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(anyTypeClassTOs));\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(anyTypeClassTOs));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"9c9b1ad2581a4aa68ec26f0bb25f8a503097600f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyTypeResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -64,7 +63,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(anyTypeTO));\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(anyTypeTO));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"09e3b857a6035e93597f4632ab6c3207013ff586","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeGroupResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.service.GroupService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -69,7 +68,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(groupTOs));\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(groupTOs));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"8a6d0a95fe300826f7185c166805f5f34bd87b68","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeResourceResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.slf4j.Logger;\n@@ -65,7 +64,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(resourceTOs));\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(resourceTOs));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"4ab2ca5074635232f60c0f1d5ef519a2c5ef7d56","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -58,7 +57,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             String jsonString = request.getReader().readLine();\n \n-            final UserTO userTO = POJOHelper.deserialize(jsonString, UserTO.class);\n+            final UserTO userTO = MAPPER.readValue(jsonString, UserTO.class);\n \n             if (!captchaCheck(request.getHeader(\"captcha\"), request.getSession().getAttribute(\n                     SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).toString())) {\n@@ -79,7 +78,7 @@ public void writeData(final Attributes attributes) throws IOException {\n                         attributes.getResponse().write(res.getStatusInfo().getFamily().equals(\n                                 Response.Status.Family.SUCCESSFUL)\n                                         ? responseMessage.append(\"User: \").append(userTO.getUsername()).append(\n-                                                \" successfully created\")\n+                                        \" successfully created\")\n                                         : new StringBuilder().append(\"ErrorMessage{{ \").\n                                         append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n                     }\n@@ -88,8 +87,8 @@ public void writeData(final Attributes attributes) throws IOException {\n             } else {\n                 response.setError(Response.Status.FORBIDDEN.getStatusCode(), new StringBuilder().\n                         append(\"ErrorMessage{{\").append(userTO == null\n-                                        ? \"Request received is not valid }}\"\n-                                        : \"Self registration not allowed }}\").toString());\n+                        ? \"Request received is not valid }}\"\n+                        : \"Self registration not allowed }}\").toString());\n             }\n \n         } catch (Exception e) {"},{"sha":"2411adfb26d381e229af58387755dd6b0cdf3424","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -22,7 +22,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.slf4j.Logger;\n@@ -56,7 +55,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            final String selfTOJson = POJOHelper.serialize(SyncopeEnduserSession.get().getSelfTO());\n+            final String selfTOJson = MAPPER.writeValueAsString(SyncopeEnduserSession.get().getSelfTO());\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"8e2c148d46b6bfd46330b83d896175257296582f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0d09829ed34b62b942ed68216e8b08ffd8861335/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=0d09829ed34b62b942ed68216e8b08ffd8861335","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.slf4j.Logger;\n@@ -39,14 +38,12 @@ public class UserSelfUpdateResource extends AbstractBaseResource {\n \n     private final UserSelfService userSelfService;\n \n-\n     public UserSelfUpdateResource() {\n         userSelfService = SyncopeEnduserSession.get().getService(UserSelfService.class);\n     }\n \n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         try {\n@@ -59,22 +56,22 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n             String jsonString = request.getReader().readLine();\n \n-            final UserTO userTO = POJOHelper.deserialize(jsonString, UserTO.class);\n+            final UserTO userTO = MAPPER.readValue(jsonString, UserTO.class);\n \n             if (!captchaCheck(request.getHeader(\"captcha\"), request.getSession().getAttribute(\n                     SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).toString())) {\n                 LOG.error(\"Entered captcha is not matching\");\n                 throw new Exception(\"Entered captcha is not matching\");\n             }\n-            \n+\n             LOG.debug(\"User {} id updating himself\", userTO.getUsername());\n \n             // update user\n             Response res = userSelfService.update(userTO);\n \n             final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n                     ? new StringBuilder().append(\"User\").append(userTO.getUsername()).append(\n-                            \" successfully updated\").toString()\n+                    \" successfully updated\").toString()\n                     : new StringBuilder().append(\"ErrorMessage{{ \").\n                     append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n "}]}