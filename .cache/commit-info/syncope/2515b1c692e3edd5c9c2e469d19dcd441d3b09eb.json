{"sha":"2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI1MTViMWM2OTJlM2VkZDVjOWMyZTQ2OWQxOWRjZDQ0MWQzYjA5ZWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-02-22T14:46:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-02-22T14:46:09Z"},"message":"Cleanup archetype generation with WA","tree":{"sha":"0d6b00a71e2e6762683184964f10a78a915fbf30","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0d6b00a71e2e6762683184964f10a78a915fbf30"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9ab0e5e848a75d6f8b4ad8cb5fdbcc77c732d1fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ab0e5e848a75d6f8b4ad8cb5fdbcc77c732d1fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ab0e5e848a75d6f8b4ad8cb5fdbcc77c732d1fa"}],"stats":{"total":159,"additions":90,"deletions":69},"files":[{"sha":"e37f287082e8ba0814c057f1bcd12814c2473214","filename":"archetype/pom.xml","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","patch":"@@ -135,9 +135,6 @@ under the License.\n       </resource>\n       <resource>\n         <directory>../core/provisioning-java/src/main/resources</directory>\n-        <excludes>\n-          <exclude>*Context.xml</exclude>\n-        </excludes>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n       </resource>\n       <resource>\n@@ -324,15 +321,11 @@ under the License.\n       </resource>\n \n       <resource>\n-        <directory>../wa/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n-      </resource>\n-      <resource>\n-        <directory>../wa/src/test/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n+        <directory>../wa/starter/src/main/resources</directory>\n         <includes>\n-          <include>keymaster.properties</include>          \n+          <include>application.properties</include>\n         </includes>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n       </resource>\n       <resource>\n         <directory>../fit/wa-reference/src/main/resources</directory>"},{"sha":"340064fab57b85068c2acde10fdc392732bcd95b","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/SyncopeWAPropertySourceLocator.java","status":"modified","additions":85,"deletions":59,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FSyncopeWAPropertySourceLocator.java?ref=2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","patch":"@@ -20,7 +20,6 @@\n \n import com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;\n import com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;\n-\n import java.util.List;\n import java.util.Map;\n import java.util.TreeMap;\n@@ -81,6 +80,23 @@ public SyncopeWAPropertySourceLocator(final WARestClient waRestClient) {\n         this.waRestClient = waRestClient;\n     }\n \n+    private static SimpleFilterProvider getParentCasFilterProvider() {\n+        return new SimpleFilterProvider().\n+                setFailOnUnknownId(false).\n+                addFilter(CasConfigurationProperties.class.getSimpleName(),\n+                        SimpleBeanPropertyFilter.filterOutAllExcept(\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        CasConfigurationProperties.class,\n+                                        CasConfigurationProperties::getAuthn)));\n+    }\n+\n+    private static Map<String, Object> filterCasProperties(\n+            final CasConfigurationProperties casProperties,\n+            final SimpleFilterProvider filters) {\n+\n+        return CasCoreConfigurationUtils.asMap(casProperties.withHolder(), filters);\n+    }\n+\n     private static Map<String, Object> mapAuthModule(\n             final String authModule,\n             final SyncopeAuthModuleConf conf,\n@@ -93,10 +109,12 @@ private static Map<String, Object> mapAuthModule(\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n         casProperties.getAuthn().setSyncope(syncopeProps);\n+\n         SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.addFilter(AuthenticationProperties.class.getSimpleName(),\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\n-                        CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                        CasCoreConfigurationUtils.getPropertyName(\n+                                AuthenticationProperties.class,\n                                 AuthenticationProperties::getSyncope)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -113,11 +131,13 @@ private static Map<String, Object> mapAuthModule(\n         staticProps.setUsers(users);\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().setAccept(staticProps);\n+\n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.addFilter(AuthenticationProperties.class.getSimpleName(),\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\n-                        CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                        CasCoreConfigurationUtils.getPropertyName(\n+                                AuthenticationProperties.class,\n                                 AuthenticationProperties::getAccept)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -142,18 +162,21 @@ private static Map<String, Object> mapAuthModule(\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n         casProperties.getAuthn().getLdap().add(ldapProps);\n+\n         SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.addFilter(\n                 AuthenticationProperties.class.getSimpleName(),\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\n                         CasCoreConfigurationUtils.getPropertyName(\n-                                AuthenticationProperties.class, AuthenticationProperties::getLdap)));\n+                                AuthenticationProperties.class,\n+                                AuthenticationProperties::getLdap)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n \n     private static Map<String, Object> mapAuthModule(\n-        final String authModule,\n-        final DuoMfaAuthModuleConf conf) {\n+            final String authModule,\n+            final DuoMfaAuthModuleConf conf) {\n+\n         DuoSecurityMultifactorProperties props = new DuoSecurityMultifactorProperties();\n         props.setName(authModule);\n         props.setDuoApiHost(conf.getApiHost());\n@@ -162,18 +185,20 @@ private static Map<String, Object> mapAuthModule(\n         props.setDuoSecretKey(conf.getSecretKey());\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getMfa().setDuo(List.of(props));\n-        \n+\n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.\n-            addFilter(AuthenticationProperties.class.getSimpleName(),\n-                SimpleBeanPropertyFilter.filterOutAllExcept(\n-                    CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n-                        AuthenticationProperties::getMfa))).\n-            addFilter(MultifactorAuthenticationProperties.class.getSimpleName(),\n-                SimpleBeanPropertyFilter.filterOutAllExcept(\n-                    CasCoreConfigurationUtils.getPropertyName(MultifactorAuthenticationProperties.class,\n-                        MultifactorAuthenticationProperties::getDuo)));\n+                addFilter(AuthenticationProperties.class.getSimpleName(),\n+                        SimpleBeanPropertyFilter.filterOutAllExcept(\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        AuthenticationProperties.class,\n+                                        AuthenticationProperties::getMfa))).\n+                addFilter(MultifactorAuthenticationProperties.class.getSimpleName(),\n+                        SimpleBeanPropertyFilter.filterOutAllExcept(\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        MultifactorAuthenticationProperties.class,\n+                                        MultifactorAuthenticationProperties::getDuo)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n \n@@ -190,16 +215,19 @@ private static Map<String, Object> mapAuthModule(\n         props.setWindowSize(conf.getWindowSize());\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getMfa().setGauth(props);\n-        filterProvider.\n-                addFilter(AuthenticationProperties.class.getSimpleName(),\n-                        SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n-                                        AuthenticationProperties::getMfa))).\n+\n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n+        filterProvider.addFilter(\n+                AuthenticationProperties.class.getSimpleName(),\n+                SimpleBeanPropertyFilter.filterOutAllExcept(\n+                        CasCoreConfigurationUtils.getPropertyName(\n+                                AuthenticationProperties.class,\n+                                AuthenticationProperties::getMfa))).\n                 addFilter(MultifactorAuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(MultifactorAuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        MultifactorAuthenticationProperties.class,\n                                         MultifactorAuthenticationProperties::getGauth)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -216,17 +244,19 @@ private static Map<String, Object> mapAuthModule(\n         props.setExpireRegistrationsTimeUnit(TimeUnit.valueOf(conf.getExpireRegistrationsTimeUnit()));\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getMfa().setU2f(props);\n \n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.\n                 addFilter(AuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        AuthenticationProperties.class,\n                                         AuthenticationProperties::getMfa))).\n                 addFilter(MultifactorAuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(MultifactorAuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        MultifactorAuthenticationProperties.class,\n                                         MultifactorAuthenticationProperties::getU2f)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -244,12 +274,13 @@ private static Map<String, Object> mapAuthModule(\n         props.setRealm(conf.getRealm());\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getJaas().add(props);\n \n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.addFilter(AuthenticationProperties.class.getSimpleName(),\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\n-                        CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                        CasCoreConfigurationUtils.getPropertyName(\n+                                AuthenticationProperties.class,\n                                 AuthenticationProperties::getJaas)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -272,17 +303,19 @@ private static Map<String, Object> mapAuthModule(\n         props.setPrincipalAttributeList(conf.getPrincipalAttributeList());\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getJdbc().getQuery().add(props);\n \n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.\n                 addFilter(AuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        AuthenticationProperties.class,\n                                         AuthenticationProperties::getJdbc))).\n                 addFilter(MultifactorAuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(JdbcAuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        JdbcAuthenticationProperties.class,\n                                         JdbcAuthenticationProperties::getQuery)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -307,17 +340,19 @@ private static Map<String, Object> mapAuthModule(\n         client.setGeneric(props);\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getPac4j().getOidc().add(client);\n \n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.\n                 addFilter(AuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        AuthenticationProperties.class,\n                                         AuthenticationProperties::getPac4j))).\n                 addFilter(Pac4jDelegatedAuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(Pac4jDelegatedAuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        Pac4jDelegatedAuthenticationProperties.class,\n                                         Pac4jDelegatedAuthenticationProperties::getOidc)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n@@ -346,13 +381,15 @@ private static Map<String, Object> mapAuthModule(\n         props.getServer().setRetries(conf.getRetries());\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().setRadius(props);\n-        filterProvider.\n-                addFilter(AuthenticationProperties.class.getSimpleName(),\n-                        SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n-                                        AuthenticationProperties::getRadius)));\n+\n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n+        filterProvider.addFilter(\n+                AuthenticationProperties.class.getSimpleName(),\n+                SimpleBeanPropertyFilter.filterOutAllExcept(\n+                        CasCoreConfigurationUtils.getPropertyName(\n+                                AuthenticationProperties.class,\n+                                AuthenticationProperties::getRadius)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n \n@@ -386,34 +423,23 @@ private static Map<String, Object> mapAuthModule(\n                 : TriStateBoolean.valueOf(conf.getNameIdPolicyAllowCreate().toUpperCase()));\n \n         CasConfigurationProperties casProperties = new CasConfigurationProperties();\n-        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         casProperties.getAuthn().getPac4j().getSaml().add(props);\n \n+        SimpleFilterProvider filterProvider = getParentCasFilterProvider();\n         filterProvider.\n                 addFilter(AuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(AuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        AuthenticationProperties.class,\n                                         AuthenticationProperties::getPac4j))).\n                 addFilter(Pac4jDelegatedAuthenticationProperties.class.getSimpleName(),\n                         SimpleBeanPropertyFilter.filterOutAllExcept(\n-                                CasCoreConfigurationUtils.getPropertyName(Pac4jDelegatedAuthenticationProperties.class,\n+                                CasCoreConfigurationUtils.getPropertyName(\n+                                        Pac4jDelegatedAuthenticationProperties.class,\n                                         Pac4jDelegatedAuthenticationProperties::getSaml)));\n         return filterCasProperties(casProperties, filterProvider);\n     }\n \n-    private static SimpleFilterProvider getParentCasFilterProvider() {\n-        return new SimpleFilterProvider().\n-                setFailOnUnknownId(false).\n-                addFilter(CasConfigurationProperties.class.getSimpleName(), SimpleBeanPropertyFilter.filterOutAllExcept(\n-                        CasCoreConfigurationUtils.getPropertyName(CasConfigurationProperties.class,\n-                                CasConfigurationProperties::getAuthn)));\n-    }\n-\n-    private static Map<String, Object> filterCasProperties(final CasConfigurationProperties casProperties,\n-            final SimpleFilterProvider filters) {\n-        return CasCoreConfigurationUtils.asMap(casProperties.withHolder(), filters);\n-    }\n-\n     @Override\n     public PropertySource<?> locate(final Environment environment) {\n         SyncopeClient syncopeClient = waRestClient.getSyncopeClient();\n@@ -455,8 +481,8 @@ public PropertySource<?> locate(final Environment environment) {\n             }\n         });\n \n-        syncopeClient.getService(WAConfigService.class).list()\n-                .forEach(configTO -> properties.put(configTO.getSchema(), configTO.getValues()));\n+        syncopeClient.getService(WAConfigService.class).list().\n+                forEach(configTO -> properties.put(configTO.getSchema(), configTO.getValues()));\n         LOG.debug(\"Collected WA properties: {}\", properties);\n         return new MapPropertySource(getClass().getName(), properties);\n     }"},{"sha":"3e03b0a46b29239720a2699a9c25af66d3db45e4","filename":"wa/starter/src/main/resources/application.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2515b1c692e3edd5c9c2e469d19dcd441d3b09eb/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=2515b1c692e3edd5c9c2e469d19dcd441d3b09eb","patch":"@@ -40,6 +40,8 @@ cas.service-registry.schedule.enabled=false\n \n cas.events.core.enabled=false\n \n+server.servlet.session.tracking-modes=cookie\n+\n ##\n # Allow configuration classes to override bean definitions from Spring Boot\n #"}]}