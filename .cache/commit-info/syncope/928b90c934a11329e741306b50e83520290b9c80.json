{"sha":"928b90c934a11329e741306b50e83520290b9c80","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkyOGI5MGM5MzRhMTEzMjllNzQxMzA2YjUwZTgzNTIwMjkwYjljODA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-14T16:06:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-14T16:22:46Z"},"message":"[SYNCOPE-1207] Reorganizing event management and ProvisioningManager output in case of update in order to generate correct audit messages","tree":{"sha":"07369be88796b93185d1e2adb449f59029be6aa9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/07369be88796b93185d1e2adb449f59029be6aa9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/928b90c934a11329e741306b50e83520290b9c80","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/928b90c934a11329e741306b50e83520290b9c80","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/928b90c934a11329e741306b50e83520290b9c80","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/928b90c934a11329e741306b50e83520290b9c80/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2143809efa19a7128f41ec5d9c03e1ae5ef01ff1"}],"stats":{"total":221,"additions":113,"deletions":108},"files":[{"sha":"2a66f1412212507339e376594ec56c10e32ef456","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -30,7 +30,6 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.ClientConfiguration;\n@@ -260,7 +259,7 @@ public Pair<Map<String, Set<String>>, UserTO> self() {\n         }\n \n         try {\n-            return new ImmutablePair<>(\n+            return Pair.of(\n                     (Map<String, Set<String>>) new ObjectMapper().readValue(\n                             response.getHeaderString(RESTHeaders.OWNED_ENTITLEMENTS),\n                             new TypeReference<HashMap<String, Set<String>>>() {"},{"sha":"7340d6933c0b38b60facb85b9133a27b7388c70d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -413,7 +413,10 @@ private static Collection<AttrTO> patch(final Map<String, AttrTO> attrs, final S\n             if (patch.getAttrTO() == null) {\n                 LOG.warn(\"Invalid {} specified: {}\", AttrPatch.class.getName(), patch);\n             } else {\n-                rwattrs.remove(patch.getAttrTO().getSchema());\n+                AttrTO removed = rwattrs.remove(patch.getAttrTO().getSchema());\n+                if (removed != null && removed.getSchemaInfo() != null) {\n+                    patch.getAttrTO().setSchemaInfo(removed.getSchemaInfo());\n+                }\n                 if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n                     rwattrs.put(patch.getAttrTO().getSchema(), patch.getAttrTO());\n                 }\n@@ -471,6 +474,19 @@ private static <T extends AnyTO, K extends AnyPatch> void patch(final T to, fina\n         }\n     }\n \n+    public static AnyTO patch(final AnyTO anyTO, final AnyPatch anyPatch) {\n+        if (anyTO instanceof UserTO) {\n+            return patch((UserTO) anyTO, (UserPatch) anyPatch);\n+        }\n+        if (anyTO instanceof GroupTO) {\n+            return patch((GroupTO) anyTO, (GroupPatch) anyPatch);\n+        }\n+        if (anyTO instanceof AnyObjectTO) {\n+            return patch((AnyObjectTO) anyTO, (AnyObjectPatch) anyPatch);\n+        }\n+        return null;\n+    }\n+\n     public static GroupTO patch(final GroupTO groupTO, final GroupPatch groupPatch) {\n         GroupTO result = SerializationUtils.clone(groupTO);\n         patch(groupTO, groupPatch, result);"},{"sha":"a595e9b0f0a103121f979f71fd482d6eb98e1d67","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -23,7 +23,6 @@\n import java.text.ParseException;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n@@ -162,7 +161,7 @@ public static Pair<EventCategoryTO, Result> parseEventCategory(final String even\n             }\n         }\n \n-        return new ImmutablePair<>(eventCategoryTO, condition);\n+        return Pair.of(eventCategoryTO, condition);\n     }\n \n     /**"},{"sha":"58575134772eeb3d38ba4072cb12321d50687ad3","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -137,10 +137,11 @@ public ProvisioningResult<AnyObjectTO> update(\n                 realm);\n         boolean authDynRealms = securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n-        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(anyObjectPatch, nullPriorityAsync);\n+        Pair<AnyObjectPatch, List<PropagationStatus>> updated =\n+                provisioningManager.update(anyObjectPatch, nullPriorityAsync);\n \n         return afterUpdate(\n-                binder.getAnyObjectTO(updated.getKey()),\n+                binder.getAnyObjectTO(updated.getLeft().getKey()),\n                 updated.getRight(),\n                 before.getRight(),\n                 authDynRealms,"},{"sha":"ace95dea3f7363984e410496f293e61fe2600ccc","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -201,10 +201,11 @@ public ProvisioningResult<GroupTO> update(final GroupPatch groupPatch, final boo\n                 realm);\n         boolean authDynRealms = securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n-        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(groupPatch, nullPriorityAsync);\n+        Pair<GroupPatch, List<PropagationStatus>> updated =\n+                provisioningManager.update(groupPatch, nullPriorityAsync);\n \n         return afterUpdate(\n-                binder.getGroupTO(updated.getKey()),\n+                binder.getGroupTO(updated.getLeft().getKey()),\n                 updated.getRight(),\n                 before.getRight(),\n                 authDynRealms,"},{"sha":"a3f3a3a262d52ef4a65f5465fd5ea96f5b2cf571","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LoggerLogic.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -351,37 +351,36 @@ public List<EventCategoryTO> listAuditEvents() {\n             for (AnyTypeKind anyTypeKind : AnyTypeKind.values()) {\n                 resourceDAO.findAll().forEach(resource -> {\n                     EventCategoryTO propEventCategoryTO = new EventCategoryTO(EventCategoryType.PROPAGATION);\n-                    EventCategoryTO syncEventCategoryTO = new EventCategoryTO(EventCategoryType.PULL);\n+                    EventCategoryTO pullEventCategoryTO = new EventCategoryTO(EventCategoryType.PULL);\n                     EventCategoryTO pushEventCategoryTO = new EventCategoryTO(EventCategoryType.PUSH);\n \n                     propEventCategoryTO.setCategory(anyTypeKind.name().toLowerCase());\n                     propEventCategoryTO.setSubcategory(resource.getKey());\n \n-                    syncEventCategoryTO.setCategory(anyTypeKind.name().toLowerCase());\n+                    pullEventCategoryTO.setCategory(anyTypeKind.name().toLowerCase());\n                     pushEventCategoryTO.setCategory(anyTypeKind.name().toLowerCase());\n-                    syncEventCategoryTO.setSubcategory(resource.getKey());\n+                    pullEventCategoryTO.setSubcategory(resource.getKey());\n                     pushEventCategoryTO.setSubcategory(resource.getKey());\n \n                     for (ResourceOperation resourceOperation : ResourceOperation.values()) {\n                         propEventCategoryTO.getEvents().add(resourceOperation.name().toLowerCase());\n-                        syncEventCategoryTO.getEvents().add(resourceOperation.name().toLowerCase());\n-                        pushEventCategoryTO.getEvents().add(resourceOperation.name().toLowerCase());\n                     }\n+                    pullEventCategoryTO.getEvents().add(ResourceOperation.DELETE.name().toLowerCase());\n \n                     for (UnmatchingRule unmatching : UnmatchingRule.values()) {\n                         String event = UnmatchingRule.toEventName(unmatching);\n-                        syncEventCategoryTO.getEvents().add(event);\n+                        pullEventCategoryTO.getEvents().add(event);\n                         pushEventCategoryTO.getEvents().add(event);\n                     }\n \n                     for (MatchingRule matching : MatchingRule.values()) {\n                         String event = MatchingRule.toEventName(matching);\n-                        syncEventCategoryTO.getEvents().add(event);\n+                        pullEventCategoryTO.getEvents().add(event);\n                         pushEventCategoryTO.getEvents().add(event);\n                     }\n \n                     events.add(propEventCategoryTO);\n-                    events.add(syncEventCategoryTO);\n+                    events.add(pullEventCategoryTO);\n                     events.add(pushEventCategoryTO);\n                 });\n             }"},{"sha":"a225bba73ee4a5a78c81050a5f18bc7ca1c0ec3a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -195,10 +195,11 @@ protected ProvisioningResult<UserTO> doUpdate(\n                     securityChecks(effectiveRealms, before.getLeft().getRealm().getValue(), before.getLeft().getKey());\n         }\n \n-        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(before.getLeft(), nullPriorityAsync);\n+        Pair<UserPatch, List<PropagationStatus>> updated =\n+                provisioningManager.update(before.getLeft(), nullPriorityAsync);\n \n         return afterUpdate(\n-                binder.returnUserTO(binder.getUserTO(updated.getKey())),\n+                binder.returnUserTO(binder.getUserTO(updated.getLeft().getKey())),\n                 updated.getRight(),\n                 before.getRight(),\n                 authDynRealms,"},{"sha":"6f080e1895afd9b41f86e2738df6fba3baaddb36","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserWorkflowLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -20,7 +20,7 @@\n \n import java.lang.reflect.Method;\n import java.util.List;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -72,7 +72,7 @@ public UserTO executeWorkflowTask(final UserTO userTO, final String taskId) {\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                 new WorkflowResult<>(\n-                        new ImmutablePair<>(userPatch, null),\n+                        Pair.<UserPatch, Boolean>of(userPatch, null),\n                         updated.getPropByRes(), updated.getPerformedTasks()));\n \n         taskExecutor.execute(tasks, false);\n@@ -106,7 +106,7 @@ public UserTO submitForm(final WorkflowFormTO form) {\n \n             List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                     new WorkflowResult<>(\n-                            new ImmutablePair<>((UserPatch) updated.getResult(), Boolean.TRUE),\n+                            Pair.of((UserPatch) updated.getResult(), Boolean.TRUE),\n                             updated.getPropByRes(),\n                             updated.getPerformedTasks()));\n "},{"sha":"32ece41d2c6e24346d34826766a5aeb78948e1e0","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -30,9 +30,9 @@\n \n     Pair<String, List<PropagationStatus>> create(T anyTO, boolean nullPriorityAsync);\n \n-    Pair<String, List<PropagationStatus>> update(P patch, boolean nullPriorityAsync);\n+    Pair<P, List<PropagationStatus>> update(P patch, boolean nullPriorityAsync);\n \n-    Pair<String, List<PropagationStatus>> update(P patch, Set<String> excludedResources, boolean nullPriorityAsync);\n+    Pair<P, List<PropagationStatus>> update(P patch, Set<String> excludedResources, boolean nullPriorityAsync);\n \n     List<PropagationStatus> delete(String anyKey, boolean nullPriorityAsync);\n "},{"sha":"c9aa60c6dee3a9482bcdbb1537d6285becee37c2","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/UserProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FUserProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -48,7 +48,7 @@ Pair<String, List<PropagationStatus>> create(\n             Set<String> excludedResources,\n             boolean nullPriorityAsync);\n \n-    Pair<String, List<PropagationStatus>> update(\n+    Pair<UserPatch, List<PropagationStatus>> update(\n             UserPatch userPatch,\n             ProvisioningReport result,\n             Boolean enabled,"},{"sha":"ed4fc0aff6fca0ccc9175859d771140721bcbff3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -87,15 +87,15 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<AnyObjectPatch, List<PropagationStatus>> update(\n             final AnyObjectPatch anyObjectPatch, final boolean nullPriorityAsync) {\n \n         return update(anyObjectPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<AnyObjectPatch, List<PropagationStatus>> update(\n             final AnyObjectPatch anyObjectPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         WorkflowResult<String> updated = awfAdapter.update(anyObjectPatch);\n@@ -110,7 +110,7 @@ public Pair<String, List<PropagationStatus>> update(\n                 excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return Pair.of(updated.getResult(), propagationReporter.getStatuses());\n+        return Pair.of(anyObjectPatch, propagationReporter.getStatuses());\n     }\n \n     @Override"},{"sha":"208cb00a009b85931ff5ea00823480d6ff7c854a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -112,13 +112,15 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(final GroupPatch groupPatch, final boolean nullPriorityAsync) {\n+    public Pair<GroupPatch, List<PropagationStatus>> update(\n+            final GroupPatch groupPatch, final boolean nullPriorityAsync) {\n+\n         return update(groupPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<GroupPatch, List<PropagationStatus>> update(\n             final GroupPatch groupPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         WorkflowResult<String> updated = gwfAdapter.update(groupPatch);\n@@ -133,7 +135,7 @@ public Pair<String, List<PropagationStatus>> update(\n                 excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return Pair.of(updated.getResult(), propagationReporter.getStatuses());\n+        return Pair.of(groupPatch, propagationReporter.getStatuses());\n     }\n \n     @Override"},{"sha":"a123683cea9fc37fe44586e5752232fe86739948","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -112,25 +112,25 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(final UserPatch userPatch, final boolean nullPriorityAsync) {\n+    public Pair<UserPatch, List<PropagationStatus>> update(final UserPatch userPatch, final boolean nullPriorityAsync) {\n         WorkflowResult<Pair<UserPatch, Boolean>> updated = uwfAdapter.update(userPatch);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return Pair.of(updated.getResult().getLeft().getKey(), propagationReporter.getStatuses());\n+        return Pair.of(updated.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<UserPatch, List<PropagationStatus>> update(\n             final UserPatch userPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         return update(userPatch, new ProvisioningReport(), null, excludedResources, nullPriorityAsync);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<UserPatch, List<PropagationStatus>> update(\n             final UserPatch userPatch,\n             final ProvisioningReport result,\n             final Boolean enabled,\n@@ -177,7 +177,7 @@ public Pair<String, List<PropagationStatus>> update(\n                 updated, updated.getResult().getLeft().getPassword() != null, excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return Pair.of(updated.getResult().getLeft().getKey(), propagationReporter.getStatuses());\n+        return Pair.of(updated.getResult().getLeft(), propagationReporter.getStatuses());\n     }\n \n     @Override"},{"sha":"c31f094e31a2ae5ae5508b68534f4a52c02640b9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -90,9 +91,9 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n \n     protected abstract ProvisioningManager<?, ?> getProvisioningManager();\n \n-    protected abstract AnyTO doCreate(AnyTO anyTO, SyncDelta delta, ProvisioningReport result);\n+    protected abstract AnyTO doCreate(AnyTO anyTO, SyncDelta delta);\n \n-    protected abstract AnyTO doUpdate(AnyTO before, AnyPatch anyPatch, SyncDelta delta, ProvisioningReport result);\n+    protected abstract AnyPatch doUpdate(AnyTO before, AnyPatch anyPatch, SyncDelta delta, ProvisioningReport result);\n \n     protected void doDelete(final AnyTypeKind kind, final String key) {\n         PropagationByResource propByRes = new PropagationByResource();\n@@ -263,16 +264,17 @@ protected void create(\n         Result resultStatus;\n \n         try {\n-            AnyTO actual = doCreate(anyTO, delta, result);\n-            result.setName(getName(actual));\n-            output = actual;\n+            AnyTO created = doCreate(anyTO, delta);\n+            output = created;\n+            result.setKey(created.getKey());\n+            result.setName(getName(created));\n             resultStatus = Result.SUCCESS;\n \n             for (PullActions action : profile.getActions()) {\n-                action.after(profile, delta, actual, result);\n+                action.after(profile, delta, created, result);\n             }\n \n-            LOG.debug(\"{} {} successfully created\", actual.getType(), actual.getKey());\n+            LOG.debug(\"{} {} successfully created\", created.getType(), created.getKey());\n         } catch (PropagationException e) {\n             // A propagation failure doesn't imply a pull failure.\n             // The propagation exception status will be reported into the propagation task execution.\n@@ -344,7 +346,7 @@ protected List<ProvisioningReport> update(\n                             workingDelta = action.beforeUpdate(profile, workingDelta, before, anyPatch);\n                         }\n \n-                        AnyTO updated = doUpdate(before, anyPatch, workingDelta, result);\n+                        AnyTO updated = AnyOperations.patch(before, doUpdate(before, anyPatch, workingDelta, result));\n \n                         for (PullActions action : profile.getActions()) {\n                             action.after(profile, workingDelta, updated, result);"},{"sha":"6a6c93d333c4660a144f5b2271aeaf6c8b89a0ff","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPullResultHandlerImpl.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -21,6 +21,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -85,32 +86,27 @@ protected WorkflowResult<String> update(final AnyPatch patch) {\n     }\n \n     @Override\n-    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final ProvisioningReport result) {\n+    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta) {\n         AnyObjectTO anyObjectTO = AnyObjectTO.class.cast(anyTO);\n \n         Map.Entry<String, List<PropagationStatus>> created = anyObjectProvisioningManager.create(\n                 anyObjectTO, Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n-        result.setKey(created.getKey());\n-        result.setName(getName(anyTO));\n-\n         return getAnyTO(created.getKey());\n     }\n \n     @Override\n-    protected AnyTO doUpdate(\n+    protected AnyPatch doUpdate(\n             final AnyTO before,\n             final AnyPatch anyPatch,\n             final SyncDelta delta,\n             final ProvisioningReport result) {\n \n         AnyObjectPatch anyObjectPatch = AnyObjectPatch.class.cast(anyPatch);\n \n-        Map.Entry<String, List<PropagationStatus>> updated = anyObjectProvisioningManager.update(\n+        Pair<AnyObjectPatch, List<PropagationStatus>> updated = anyObjectProvisioningManager.update(\n                 anyObjectPatch, Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n-        AnyObjectTO after = anyObjectDataBinder.getAnyObjectTO(updated.getKey());\n-        result.setName(getName(after));\n-        return after;\n+        return anyPatch;\n     }\n }"},{"sha":"b008efacef6b9464344f226c0b29b64e6dafcfcd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPullResultHandlerImpl.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -22,6 +22,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AttrPatch;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n@@ -95,7 +96,7 @@ protected WorkflowResult<String> update(final AnyPatch patch) {\n     }\n \n     @Override\n-    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final ProvisioningReport result) {\n+    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta) {\n         GroupTO groupTO = GroupTO.class.cast(anyTO);\n \n         Map.Entry<String, List<PropagationStatus>> created = groupProvisioningManager.create(\n@@ -104,22 +105,19 @@ protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final Provisi\n                 Collections.singleton(profile.getTask().getResource().getKey()),\n                 true);\n \n-        result.setKey(created.getKey());\n-        result.setName(getName(anyTO));\n-\n         return getAnyTO(created.getKey());\n     }\n \n     @Override\n-    protected AnyTO doUpdate(\n+    protected AnyPatch doUpdate(\n             final AnyTO before,\n             final AnyPatch anyPatch,\n             final SyncDelta delta,\n             final ProvisioningReport result) {\n \n         GroupPatch groupPatch = GroupPatch.class.cast(anyPatch);\n \n-        Map.Entry<String, List<PropagationStatus>> updated = groupProvisioningManager.update(\n+        Pair<GroupPatch, List<PropagationStatus>> updated = groupProvisioningManager.update(\n                 groupPatch, Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n         String groupOwner = null;\n@@ -131,14 +129,10 @@ protected AnyTO doUpdate(\n             }\n         }\n         if (groupOwner != null) {\n-            groupOwnerMap.put(updated.getKey(), groupOwner);\n+            groupOwnerMap.put(updated.getLeft().getKey(), groupOwner);\n         }\n \n-        GroupTO after = groupDataBinder.getGroupTO(updated.getKey());\n-\n-        result.setName(getName(after));\n-\n-        return after;\n+        return anyPatch;\n     }\n \n }"},{"sha":"349f8634c08f9a4014d5afcc611b4ef6fcafb73e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPullResultHandlerImpl.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -88,22 +88,19 @@ protected WorkflowResult<String> update(final AnyPatch patch) {\n     }\n \n     @Override\n-    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta, final ProvisioningReport result) {\n+    protected AnyTO doCreate(final AnyTO anyTO, final SyncDelta delta) {\n         UserTO userTO = UserTO.class.cast(anyTO);\n \n         Boolean enabled = pullUtils.readEnabled(delta.getObject(), profile.getTask());\n         Map.Entry<String, List<PropagationStatus>> created =\n                 userProvisioningManager.create(userTO, true, true, enabled,\n                         Collections.singleton(profile.getTask().getResource().getKey()), true);\n \n-        result.setKey(created.getKey());\n-        result.setName(getName(anyTO));\n-\n         return getAnyTO(created.getKey());\n     }\n \n     @Override\n-    protected AnyTO doUpdate(\n+    protected AnyPatch doUpdate(\n             final AnyTO before,\n             final AnyPatch anyPatch,\n             final SyncDelta delta,\n@@ -112,14 +109,14 @@ protected AnyTO doUpdate(\n         UserPatch userPatch = UserPatch.class.cast(anyPatch);\n         Boolean enabled = pullUtils.readEnabled(delta.getObject(), profile.getTask());\n \n-        Map.Entry<String, List<PropagationStatus>> updated = userProvisioningManager.update(\n+        Pair<UserPatch, List<PropagationStatus>> updated = userProvisioningManager.update(\n                 userPatch,\n                 result,\n                 enabled,\n                 Collections.singleton(profile.getTask().getResource().getKey()),\n                 true);\n \n-        return getAnyTO(updated.getKey());\n+        return updated.getLeft();\n     }\n \n     @Override"},{"sha":"44cd8470929b6356980ff09f0a5a90213bd2ace9","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -35,7 +35,6 @@\n import javax.annotation.Resource;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n@@ -280,7 +279,7 @@ protected WorkflowResult<Pair<String, Boolean>> doCreate(\n         Set<String> tasks = getPerformedTasks(user);\n \n         return new WorkflowResult<>(\n-                new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, tasks);\n+                Pair.of(user.getKey(), propagateEnable), propByRes, tasks);\n     }\n \n     protected Set<String> doExecuteTask(final User user, final String task, final Map<String, Object> moreVariables) {\n@@ -350,7 +349,7 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doUpdate(final User user, fin\n                 user.getWorkflowId(), PROPAGATE_ENABLE, Boolean.class);\n \n         return new WorkflowResult<>(\n-                new ImmutablePair<>(updatedPatch, propagateEnable), propByRes, tasks);\n+                Pair.of(updatedPatch, propagateEnable), propByRes, tasks);\n     }\n \n     @Override\n@@ -420,7 +419,7 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n                 user.getWorkflowId(), PROPAGATE_ENABLE, Boolean.class);\n \n         return new WorkflowResult<>(\n-                new ImmutablePair<>(updatedPatch, propagateEnable), propByRes, tasks);\n+                Pair.of(updatedPatch, propagateEnable), propByRes, tasks);\n     }\n \n     @Override\n@@ -702,7 +701,7 @@ protected Pair<Task, TaskFormData> checkTask(final String taskId, final String a\n             }\n         }\n \n-        return new ImmutablePair<>(task, formData);\n+        return Pair.of(task, formData);\n     }\n \n     @Override"},{"sha":"97c338aec4ce214646d6782c2422ea95eb7aa328","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -21,7 +21,6 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n@@ -79,7 +78,7 @@ protected WorkflowResult<Pair<String, Boolean>> doCreate(\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(ResourceOperation.CREATE, userDAO.findAllResourceKeys(user.getKey()));\n \n-        return new WorkflowResult<>(new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, \"create\");\n+        return new WorkflowResult<>(Pair.of(user.getKey(), propagateEnable), propByRes, \"create\");\n     }\n \n     @Override\n@@ -101,7 +100,7 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doUpdate(final User user, fin\n \n         userDAO.save(user);\n \n-        return new WorkflowResult<>(new ImmutablePair<>(userPatch, !user.isSuspended()), propByRes, \"update\");\n+        return new WorkflowResult<>(Pair.of(userPatch, !user.isSuspended()), propByRes, \"update\");\n     }\n \n     @Override"},{"sha":"d89e4d23a5d603c90345fb71dee78f63bbe37a9b","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelAnyObjectProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelAnyObjectProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -66,7 +66,7 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<AnyObjectPatch, List<PropagationStatus>> update(\n             final AnyObjectPatch anyPatch, final boolean nullPriorityAsync) {\n \n         return update(anyPatch, Collections.<String>emptySet(), nullPriorityAsync);\n@@ -75,7 +75,7 @@ public Pair<String, List<PropagationStatus>> update(\n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<AnyObjectPatch, List<PropagationStatus>> update(\n             final AnyObjectPatch anyPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateAnyObjectPort\");"},{"sha":"4f6620e9d22b44c1d02e50d7bafeea0e981ec428","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -85,14 +85,16 @@ public Pair<String, List<PropagationStatus>> create(\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(final GroupPatch anyPatch, final boolean nullPriorityAsync) {\n+    public Pair<GroupPatch, List<PropagationStatus>> update(\n+            final GroupPatch anyPatch, final boolean nullPriorityAsync) {\n+\n         return update(anyPatch, Collections.<String>emptySet(), nullPriorityAsync);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<GroupPatch, List<PropagationStatus>> update(\n             final GroupPatch anyPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:updateGroupPort\");"},{"sha":"7f721a520571f5cfc0fb659e4fb2a0193681ea37","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -27,7 +27,6 @@\n import java.util.Set;\n import org.apache.camel.Exchange;\n import org.apache.camel.PollingConsumer;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n@@ -91,7 +90,7 @@ public Pair<String, List<PropagationStatus>> create(\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> update(final UserPatch userPatch, final boolean nullPriorityAsync) {\n+    public Pair<UserPatch, List<PropagationStatus>> update(final UserPatch userPatch, final boolean nullPriorityAsync) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:updatePort\");\n \n         Map<String, Object> props = new HashMap<>();\n@@ -109,7 +108,7 @@ public Pair<String, List<PropagationStatus>> update(final UserPatch userPatch, f\n     }\n \n     @Override\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<UserPatch, List<PropagationStatus>> update(\n             final UserPatch anyPatch, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         return update(anyPatch, new ProvisioningReport(), null, excludedResources, nullPriorityAsync);\n@@ -317,7 +316,7 @@ public List<PropagationStatus> deprovision(\n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<String, List<PropagationStatus>> update(\n+    public Pair<UserPatch, List<PropagationStatus>> update(\n             final UserPatch userPatch,\n             final ProvisioningReport result,\n             final Boolean enabled,\n@@ -346,7 +345,7 @@ public Pair<String, List<PropagationStatus>> update(\n             result.setMessage(\"Update failed, trying to pull status anyway (if configured)\\n\" + ex.getMessage());\n \n             WorkflowResult<Pair<UserPatch, Boolean>> updated = new WorkflowResult<>(\n-                    new ImmutablePair<>(userPatch, false), new PropagationByResource(),\n+                    Pair.of(userPatch, false), new PropagationByResource(),\n                     new HashSet<>());\n             sendMessage(\"direct:userInPull\", updated, props);\n             exchange = pollingConsumer.receive();"},{"sha":"40a6f3399133b97d6aa3e46e5de4af9f2ae6cf80","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/CreateProducer.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FCreateProducer.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -26,7 +26,6 @@\n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -67,7 +66,7 @@ public void process(final Exchange exchange) throws Exception {\n                         getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n                 exchange.getOut().setBody(\n-                        new ImmutablePair<>(created.getResult().getKey(), propagationReporter.getStatuses()));\n+                        Pair.of(created.getResult().getKey(), propagationReporter.getStatuses()));\n             } else if (actual instanceof AnyTO) {\n                 WorkflowResult<String> created = (WorkflowResult<String>) exchange.getIn().getBody();\n \n@@ -86,7 +85,7 @@ public void process(final Exchange exchange) throws Exception {\n                             excludedResources);\n                     getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n-                    exchange.getOut().setBody(new ImmutablePair<>(created.getResult(), null));\n+                    exchange.getOut().setBody(Pair.of(created.getResult(), null));\n                 } else {\n                     List<PropagationTask> tasks = getPropagationManager().getCreateTasks(\n                             actual instanceof AnyObjectTO ? AnyTypeKind.ANY_OBJECT : AnyTypeKind.GROUP,\n@@ -97,8 +96,7 @@ public void process(final Exchange exchange) throws Exception {\n                     PropagationReporter propagationReporter =\n                             getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n-                    exchange.getOut().setBody(new ImmutablePair<>(created.getResult(),\n-                            propagationReporter.getStatuses()));\n+                    exchange.getOut().setBody(Pair.of(created.getResult(), propagationReporter.getStatuses()));\n                 }\n             }\n         }"},{"sha":"8fa02ad09641503ac57976a5214d2168f0fdc333","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/StatusProducer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -24,7 +24,7 @@\n \n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -102,7 +102,7 @@ public void process(final Exchange exchange) throws Exception {\n                     null);\n             PropagationReporter propagationReporter = getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n-            exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n+            exchange.getOut().setBody(Pair.of(updated.getResult(), propagationReporter.getStatuses()));\n         }\n     }\n "},{"sha":"ac43c7f99b573a510b30ef454d9b17b6ecdef6e0","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/SuspendProducer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FSuspendProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FSuspendProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FSuspendProducer.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -22,7 +22,6 @@\n \n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -49,7 +48,7 @@ public void process(final Exchange exchange) throws Exception {\n \n                 List<PropagationTask> tasks = getPropagationManager().getUserUpdateTasks(\n                         new WorkflowResult<>(\n-                                new ImmutablePair<>(userPatch, Boolean.FALSE),\n+                                Pair.of(userPatch, Boolean.FALSE),\n                                 updated.getKey().getPropByRes(), updated.getKey().getPerformedTasks()));\n                 getPropagationTaskExecutor().execute(tasks, false);\n             }"},{"sha":"90fcb2937ee98600264fe22cb4417604bef10a05","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/UpdateProducer.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FUpdateProducer.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -23,7 +23,6 @@\n \n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n@@ -61,8 +60,8 @@ public void process(final Exchange exchange) throws Exception {\n                 PropagationReporter propagationReporter =\n                         getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n-                exchange.getOut().setBody(new ImmutablePair<>(\n-                        updated.getResult().getKey().getKey(), propagationReporter.getStatuses()));\n+                exchange.getOut().setBody(Pair.of(\n+                        updated.getResult().getLeft(), propagationReporter.getStatuses()));\n             } else if (actual instanceof AnyPatch) {\n                 WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n \n@@ -77,7 +76,7 @@ public void process(final Exchange exchange) throws Exception {\n                 PropagationReporter propagationReporter =\n                         getPropagationTaskExecutor().execute(tasks, nullPriorityAsync);\n \n-                exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n+                exchange.getOut().setBody(Pair.of(actual, propagationReporter.getStatuses()));\n             }\n         }\n     }"},{"sha":"2245fc7f8ce0773504965229889678cd6d8c191f","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -267,8 +267,8 @@ public String update(final String username, final SAML2IdPEntity idp, final SAML\n             userPatch = action.beforeUpdate(userPatch, responseTO);\n         }\n \n-        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(userPatch, false);\n-        userTO = binder.getUserTO(updated.getKey());\n+        Pair<UserPatch, List<PropagationStatus>> updated = provisioningManager.update(userPatch, false);\n+        userTO = binder.getUserTO(updated.getLeft().getKey());\n \n         for (SAML2IdPActions action : actions) {\n             userTO = action.afterUpdate(userTO, responseTO);"},{"sha":"5ba1c9eb94019b13d8795d4e7b03330b764e7d00","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -211,8 +211,7 @@ public void listAuditEvents() {\n             if (AnyTypeKind.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n                 if (RESOURCE_NAME_LDAP.equals(eventCategoryTO.getSubcategory())\n                         && EventCategoryType.PULL == eventCategoryTO.getType()) {\n-                    assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.CREATE.name().toLowerCase()));\n-                    assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.UPDATE.name().toLowerCase()));\n+\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.DELETE.name().toLowerCase()));\n                     found = true;\n                 }\n@@ -225,6 +224,7 @@ public void listAuditEvents() {\n             if (AnyTypeKind.USER.name().toLowerCase().equals(eventCategoryTO.getCategory())) {\n                 if (RESOURCE_NAME_CSV.equals(eventCategoryTO.getSubcategory())\n                         && EventCategoryType.PROPAGATION == eventCategoryTO.getType()) {\n+\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.CREATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.UPDATE.name().toLowerCase()));\n                     assertTrue(eventCategoryTO.getEvents().contains(ResourceOperation.DELETE.name().toLowerCase()));"},{"sha":"0919b7739196583af966b9dc02baaa7626dd02ca","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/928b90c934a11329e741306b50e83520290b9c80/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/928b90c934a11329e741306b50e83520290b9c80/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=928b90c934a11329e741306b50e83520290b9c80","patch":"@@ -402,6 +402,9 @@ public void reconcileFromLDAP() {\n \n     @Test\n     public void reconcileFromScriptedSQL() {\n+        System.out.println(\"QUAAAAAAAAAAAAAAAAAAAAA\");\n+        LOG.info(\"QUAAAAAAAAAAAAAAAa\");\n+                \n         // 0. reset sync token and set MappingItemTransformer\n         ResourceTO resource = resourceService.read(RESOURCE_NAME_DBSCRIPTED);\n         ResourceTO originalResource = SerializationUtils.clone(resource);\n@@ -463,10 +466,10 @@ public void reconcileFromScriptedSQL() {\n             assertFalse(pullTask.isPerformDelete());\n \n             // 4. pull\n-            execProvisioningTask(taskService, \"30cfd653-257b-495f-8665-281281dbcb3d\", 50, false);\n+            execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n \n             // 5. verify that printer was re-created in Syncope (implies that location does not start with given prefix,\n-            // hence PrefixMappingItemTransformer was applied during pull)\n+            // hence PrefixItemTransformer was applied during pull)\n             matchingPrinters = anyObjectService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                     fiql(SyncopeClient.getAnyObjectSearchConditionBuilder(\"PRINTER\").\n                             is(\"location\").equalTo(\"pull*\").query()).build());"}]}