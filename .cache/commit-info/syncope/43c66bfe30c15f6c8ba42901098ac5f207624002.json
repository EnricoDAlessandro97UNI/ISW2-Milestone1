{"sha":"43c66bfe30c15f6c8ba42901098ac5f207624002","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzYzY2YmZlMzBjMTVmNmM4YmE0MjkwMTA5OGFjNWYyMDc2MjQwMDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-02T06:21:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-02T06:21:27Z"},"message":"Applying lambdas to all StreamingOutput instances","tree":{"sha":"f317ea40b712a28e3c314a1470632da156d2d12b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f317ea40b712a28e3c314a1470632da156d2d12b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43c66bfe30c15f6c8ba42901098ac5f207624002","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43c66bfe30c15f6c8ba42901098ac5f207624002","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43c66bfe30c15f6c8ba42901098ac5f207624002","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43c66bfe30c15f6c8ba42901098ac5f207624002/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2f182750bdef9e260c4e267f95e816c76a7fbccc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2f182750bdef9e260c4e267f95e816c76a7fbccc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2f182750bdef9e260c4e267f95e816c76a7fbccc"}],"stats":{"total":75,"additions":14,"deletions":61},"files":[{"sha":"4a40a7566ee162cb862225345f93f3c0ab8956d2","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConfigurationServiceImpl.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n@@ -42,17 +40,11 @@ public class ConfigurationServiceImpl extends AbstractServiceImpl implements Con\n \n     @Override\n     public Response export() {\n-        StreamingOutput sout = new StreamingOutput() {\n+        StreamingOutput sout = (os) -> logic.export(os);\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                logic.export(os);\n-            }\n-        };\n         return Response.ok(sout).\n                 type(MediaType.TEXT_XML).\n-                header(\n-                        HttpHeaders.CONTENT_DISPOSITION,\n+                header(HttpHeaders.CONTENT_DISPOSITION,\n                         \"attachment; filename=\" + AuthContextUtils.getDomain() + CONTENT_XML).\n                 build();\n     }"},{"sha":"7596171bfef94ab669f50c67fc27d35a34601627","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/MailTemplateServiceImpl.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -20,7 +20,6 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.OutputStream;\n import java.net.URI;\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n@@ -68,14 +67,9 @@ public void delete(final String key) {\n \n     @Override\n     public Response getFormat(final String key, final MailTemplateFormat format) {\n-        final String template = logic.getFormat(key, format);\n-        StreamingOutput sout = new StreamingOutput() {\n+        String template = logic.getFormat(key, format);\n+        StreamingOutput sout = (os) -> os.write(template.getBytes());\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                os.write(template.getBytes());\n-            }\n-        };\n         return Response.ok(sout).\n                 type(format.getMediaType()).\n                 build();"},{"sha":"ea5a70750056d3fa4d13594b49c670931363a111","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.net.URI;\n import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n@@ -72,15 +70,10 @@ public ReportTO read(final String key) {\n \n     @Override\n     public Response exportExecutionResult(final String executionKey, final ReportExecExportFormat fmt) {\n-        final ReportExecExportFormat format = (fmt == null) ? ReportExecExportFormat.XML : fmt;\n-        final ReportExec reportExec = logic.getReportExec(executionKey);\n-        StreamingOutput sout = new StreamingOutput() {\n+        ReportExecExportFormat format = (fmt == null) ? ReportExecExportFormat.XML : fmt;\n+        ReportExec reportExec = logic.getReportExec(executionKey);\n+        StreamingOutput sout = (os) -> logic.exportExecutionResult(os, reportExec, format);\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                logic.exportExecutionResult(os, reportExec, format);\n-            }\n-        };\n         return Response.ok(sout).\n                 header(HttpHeaders.CONTENT_DISPOSITION,\n                         \"attachment; filename=\" + reportExec.getReport().getName() + \".\" + format.name().toLowerCase())."},{"sha":"3191eb18f0dc4b8f3d9fc60d9c9bae3ae5413396","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportTemplateServiceImpl.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -20,7 +20,6 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.OutputStream;\n import java.net.URI;\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n@@ -69,14 +68,9 @@ public void delete(final String key) {\n \n     @Override\n     public Response getFormat(final String key, final ReportTemplateFormat format) {\n-        final String template = logic.getFormat(key, format);\n-        StreamingOutput sout = new StreamingOutput() {\n+        String template = logic.getFormat(key, format);\n+        StreamingOutput sout = (os) -> os.write(template.getBytes());\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                os.write(template.getBytes());\n-            }\n-        };\n         return Response.ok(sout).\n                 type(MediaType.APPLICATION_XML).\n                 build();"},{"sha":"6a0a75adf1ec0979459d2e15ae79cbc1f4e6cbc8","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -20,7 +20,6 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.OutputStream;\n import java.net.URI;\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n@@ -73,14 +72,9 @@ public void delete(final String key) {\n \n     @Override\n     public Response getConsoleLayoutInfo(final String key) {\n-        final String template = logic.getConsoleLayoutInfo(key);\n-        StreamingOutput sout = new StreamingOutput() {\n+        String template = logic.getConsoleLayoutInfo(key);\n+        StreamingOutput sout = (os) -> os.write(template.getBytes());\n \n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                os.write(template.getBytes());\n-            }\n-        };\n         return Response.ok(sout).\n                 type(MediaType.APPLICATION_JSON_TYPE).\n                 build();"},{"sha":"2321e0adbc791f5f82650006f5dfb72c55567f0e","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/WorkflowServiceImpl.java","status":"modified","additions":3,"deletions":17,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c66bfe30c15f6c8ba42901098ac5f207624002/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java?ref=43c66bfe30c15f6c8ba42901098ac5f207624002","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n@@ -45,18 +43,12 @@ public List<WorkflowDefinitionTO> list(final String anyType) {\n \n     @Override\n     public Response get(final String anyType, final String key) {\n-        final WorkflowDefinitionFormat format =\n+        WorkflowDefinitionFormat format =\n                 messageContext.getHttpHeaders().getAcceptableMediaTypes().contains(MediaType.APPLICATION_JSON_TYPE)\n                 ? WorkflowDefinitionFormat.JSON\n                 : WorkflowDefinitionFormat.XML;\n \n-        StreamingOutput sout = new StreamingOutput() {\n-\n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                logic.exportDefinition(anyType, key, format, os);\n-            }\n-        };\n+        StreamingOutput sout = (os) -> logic.exportDefinition(anyType, key, format, os);\n \n         return Response.ok(sout).\n                 type(format == WorkflowDefinitionFormat.JSON\n@@ -66,13 +58,7 @@ public void write(final OutputStream os) throws IOException {\n \n     @Override\n     public Response exportDiagram(final String anyType, final String key) {\n-        StreamingOutput sout = new StreamingOutput() {\n-\n-            @Override\n-            public void write(final OutputStream os) throws IOException {\n-                logic.exportDiagram(anyType, key, os);\n-            }\n-        };\n+        StreamingOutput sout = (os) -> logic.exportDiagram(anyType, key, os);\n \n         return Response.ok(sout).\n                 type(RESTHeaders.MEDIATYPE_IMAGE_PNG)."}]}