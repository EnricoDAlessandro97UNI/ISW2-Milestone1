{"sha":"343b3d400fd2457e2458c52eacd03af17c51dbac","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0M2IzZDQwMGZkMjQ1N2UyNDU4YzUyZWFjZDAzYWYxN2M1MWRiYWM=","commit":{"author":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-08-03T16:19:38Z"},"committer":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-08-03T16:19:38Z"},"message":"SYNCOPE-872 shows type extensions on user form","tree":{"sha":"14173f2532f756327a85e3c2e802eb8996de7612","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/14173f2532f756327a85e3c2e802eb8996de7612"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/343b3d400fd2457e2458c52eacd03af17c51dbac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/343b3d400fd2457e2458c52eacd03af17c51dbac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/343b3d400fd2457e2458c52eacd03af17c51dbac","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/343b3d400fd2457e2458c52eacd03af17c51dbac/comments","author":null,"committer":null,"parents":[{"sha":"d0d69fea0e26beec600357db1439eca7519d7e46","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0d69fea0e26beec600357db1439eca7519d7e46","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d0d69fea0e26beec600357db1439eca7519d7e46"}],"stats":{"total":757,"additions":589,"deletions":168},"files":[{"sha":"38efba279fc87ee502a5a846cba225f2b8ef6738","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/SchemaResponse.java","status":"modified","additions":13,"deletions":15,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSchemaResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSchemaResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSchemaResponse.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -21,58 +21,56 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n \n public class SchemaResponse implements Serializable {\n \n     private static final long serialVersionUID = -8896862106241712829L;\n \n-    private List<PlainSchemaTO> plainSchemas = new ArrayList<>();\n+    private List<AbstractSchemaTO> plainSchemas = new ArrayList<>();\n \n-    private List<DerSchemaTO> derSchemas = new ArrayList<>();\n+    private List<AbstractSchemaTO> derSchemas = new ArrayList<>();\n \n-    private List<VirSchemaTO> virSchemas = new ArrayList<>();\n+    private List<AbstractSchemaTO> virSchemas = new ArrayList<>();\n \n     public SchemaResponse() {\n     }\n \n-    public List<PlainSchemaTO> getPlainSchemas() {\n+    public List<AbstractSchemaTO> getPlainSchemas() {\n         return plainSchemas;\n     }\n \n-    public void setPlainSchemas(final List<PlainSchemaTO> plainSchemas) {\n+    public void setPlainSchemas(final List<AbstractSchemaTO> plainSchemas) {\n         this.plainSchemas = plainSchemas;\n     }\n \n-    public List<DerSchemaTO> getDerSchemas() {\n+    public List<AbstractSchemaTO> getDerSchemas() {\n         return derSchemas;\n     }\n \n-    public void setDerSchemas(final List<DerSchemaTO> derSchemas) {\n+    public void setDerSchemas(final List<AbstractSchemaTO> derSchemas) {\n         this.derSchemas = derSchemas;\n     }\n \n-    public List<VirSchemaTO> getVirSchemas() {\n+    public List<AbstractSchemaTO> getVirSchemas() {\n         return virSchemas;\n     }\n \n-    public void setVirSchemas(final List<VirSchemaTO> virSchemas) {\n+    public void setVirSchemas(final List<AbstractSchemaTO> virSchemas) {\n         this.virSchemas = virSchemas;\n     }\n \n-    public SchemaResponse plainSchemas(final List<PlainSchemaTO> value) {\n+    public SchemaResponse plainSchemas(final List<AbstractSchemaTO> value) {\n         this.plainSchemas = value;\n         return this;\n     }\n \n-    public SchemaResponse derSchemas(final List<DerSchemaTO> value) {\n+    public SchemaResponse derSchemas(final List<AbstractSchemaTO> value) {\n         this.derSchemas = value;\n         return this;\n     }\n \n-    public SchemaResponse virSchemas(final List<VirSchemaTO> value) {\n+    public SchemaResponse virSchemas(final List<AbstractSchemaTO> value) {\n         this.virSchemas = value;\n         return this;\n     }"},{"sha":"605426a8b35ea61792036c17ee56afd37273e889","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":59,"deletions":19,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -19,20 +19,24 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n-import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.model.SchemaResponse;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -45,9 +49,12 @@ public class SchemaResource extends AbstractBaseResource {\n \n     private final SchemaService schemaService;\n \n+    private final GroupService groupService;\n+\n     public SchemaResource() {\n         anyTypeService = SyncopeEnduserSession.get().getService(AnyTypeService.class);\n         schemaService = SyncopeEnduserSession.get().getService(SchemaService.class);\n+        groupService = SyncopeEnduserSession.get().getService(GroupService.class);\n     }\n \n     @Override\n@@ -66,24 +73,57 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n                 return response;\n             }\n \n-            final AnyTypeTO anyTypeUserTO = anyTypeService.read(AnyTypeKind.USER.name());\n+            List<String> classes = Collections.emptyList();\n+\n+            final String groupParam = attributes.getParameters().get(\"group\").toString();\n+            if (groupParam != null) {\n+                PagedResult<GroupTO> groups = groupService.search(\n+                        new AnyQuery.Builder().realm(\"/\").page(1).size(1000).build());\n+                GroupTO group = IterableUtils.find(groups.getResult(), new Predicate<GroupTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final GroupTO item) {\n+                        return groupParam.equals(item.getName());\n+                    }\n+                });\n \n-            List<String> classes = new ArrayList<>();\n-            String parameter = attributes.getParameters().get(\"anyTypeClass\").toString();\n-            if (parameter != null) {\n-                classes.add(parameter);\n+                if (group != null && group.getTypeExtension(AnyTypeKind.USER.name()) != null) {\n+                    classes = group.getTypeExtension(AnyTypeKind.USER.name()).getAuxClasses();\n+                }\n             } else {\n-                classes = anyTypeUserTO.getClasses();\n+                String anyTypeClass = attributes.getParameters().get(\"anyTypeClass\").toString();\n+                if (anyTypeClass != null) {\n+                    classes = Collections.singletonList(anyTypeClass);\n+                } else {\n+                    AnyTypeTO anyTypeUserTO = anyTypeService.read(AnyTypeKind.USER.name());\n+                    classes = anyTypeUserTO.getClasses();\n+                }\n+            }\n+\n+            final List<AbstractSchemaTO> plainSchemas = classes.isEmpty()\n+                    ? Collections.<AbstractSchemaTO>emptyList()\n+                    : schemaService.list(\n+                            new SchemaQuery.Builder().type(SchemaType.PLAIN).anyTypeClasses(classes).build());\n+            final List<AbstractSchemaTO> derSchemas = classes.isEmpty()\n+                    ? Collections.<AbstractSchemaTO>emptyList()\n+                    : schemaService.list(\n+                            new SchemaQuery.Builder().type(SchemaType.DERIVED).anyTypeClasses(classes).build());\n+            final List<AbstractSchemaTO> virSchemas = classes.isEmpty()\n+                    ? Collections.<AbstractSchemaTO>emptyList()\n+                    : schemaService.list(\n+                            new SchemaQuery.Builder().type(SchemaType.VIRTUAL).anyTypeClasses(classes).build());\n+\n+            if (groupParam != null) {\n+                for (AbstractSchemaTO schema : plainSchemas) {\n+                    schema.setKey(groupParam + \"#\" + schema.getKey());\n+                }\n+                for (AbstractSchemaTO schema : derSchemas) {\n+                    schema.setKey(groupParam + \"#\" + schema.getKey());\n+                }\n+                for (AbstractSchemaTO schema : virSchemas) {\n+                    schema.setKey(groupParam + \"#\" + schema.getKey());\n+                }\n             }\n-            final List<PlainSchemaTO> plainSchemas = schemaService.list(\n-                    new SchemaQuery.Builder().type(SchemaType.PLAIN).\n-                    anyTypeClasses(classes).build());\n-            final List<DerSchemaTO> derSchemas = schemaService.list(\n-                    new SchemaQuery.Builder().type(SchemaType.DERIVED).\n-                    anyTypeClasses(classes).build());\n-            final List<VirSchemaTO> virSchemas = schemaService.list(\n-                    new SchemaQuery.Builder().type(SchemaType.VIRTUAL).\n-                    anyTypeClasses(classes).build());\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"58d108d10970d7b109bfe9157140352e12d7a48d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":82,"deletions":2,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -19,10 +19,17 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.util.HashSet;\n+import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.slf4j.Logger;\n@@ -55,7 +62,6 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             }\n \n             String jsonString = request.getReader().readLine();\n-\n             final UserTO userTO = MAPPER.readValue(jsonString, UserTO.class);\n \n             if (!captchaCheck(\n@@ -66,6 +72,81 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             }\n \n             if (isSelfRegistrationAllowed() && userTO != null) {\n+                Set<AttrTO> membAttrs = new HashSet<>();\n+                for (AttrTO attr : userTO.getPlainAttrs()) {\n+                    if (attr.getSchema().contains(\"#\")) {\n+                        final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                        MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                                new Predicate<MembershipTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final MembershipTO item) {\n+                                return simpleAttrs[0].equals(item.getGroupName());\n+                            }\n+                        });\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                            userTO.getMemberships().add(membership);\n+                        }\n+\n+                        AttrTO clone = SerializationUtils.clone(attr);\n+                        clone.setSchema(simpleAttrs[1]);\n+                        membership.getPlainAttrs().add(clone);\n+                        membAttrs.add(attr);\n+                    }\n+                }\n+                userTO.getPlainAttrs().removeAll(membAttrs);\n+\n+                membAttrs.clear();\n+                for (AttrTO attr : userTO.getDerAttrs()) {\n+                    if (attr.getSchema().contains(\"#\")) {\n+                        final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                        MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                                new Predicate<MembershipTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final MembershipTO item) {\n+                                return simpleAttrs[0].equals(item.getGroupName());\n+                            }\n+                        });\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                            userTO.getMemberships().add(membership);\n+                        }\n+\n+                        AttrTO clone = SerializationUtils.clone(attr);\n+                        clone.setSchema(simpleAttrs[1]);\n+                        membership.getDerAttrs().add(clone);\n+                        membAttrs.add(attr);\n+                    }\n+                }\n+                userTO.getDerAttrs().removeAll(membAttrs);\n+\n+                membAttrs.clear();\n+                for (AttrTO attr : userTO.getVirAttrs()) {\n+                    if (attr.getSchema().contains(\"#\")) {\n+                        final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                        MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                                new Predicate<MembershipTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final MembershipTO item) {\n+                                return simpleAttrs[0].equals(item.getGroupName());\n+                            }\n+                        });\n+                        if (membership == null) {\n+                            membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                            userTO.getMemberships().add(membership);\n+                        }\n+\n+                        AttrTO clone = SerializationUtils.clone(attr);\n+                        clone.setSchema(simpleAttrs[1]);\n+                        membership.getVirAttrs().add(clone);\n+                        membAttrs.add(attr);\n+                    }\n+                }\n+                userTO.getVirAttrs().removeAll(membAttrs);\n+\n                 LOG.debug(\"Received user self registration request for user: [{}]\", userTO.getUsername());\n                 LOG.trace(\"Received user self registration request is: [{}]\", userTO);\n                 // adapt request and create user\n@@ -102,5 +183,4 @@ public void writeData(final Attributes attributes) throws IOException {\n         }\n         return response;\n     }\n-\n }"},{"sha":"4f04f31375d07ee3f59c3dfac9fa22ecc38945db","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -28,6 +28,7 @@\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -69,6 +70,25 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 }\n             }\n \n+            for (MembershipTO membership : userTO.getMemberships()) {\n+                String groupName = membership.getGroupName();\n+                for (AttrTO attr : membership.getPlainAttrs()) {\n+                    attr.setSchema(groupName.concat(\"#\").concat(attr.getSchema()));\n+                    userTO.getPlainAttrs().add(attr);\n+                }\n+                membership.getPlainAttrs().clear();\n+                for (AttrTO attr : membership.getDerAttrs()) {\n+                    attr.setSchema(groupName.concat(\"#\").concat(attr.getSchema()));\n+                    userTO.getDerAttrs().add(attr);\n+                }\n+                membership.getDerAttrs().clear();\n+                for (AttrTO attr : membership.getVirAttrs()) {\n+                    attr.setSchema(groupName.concat(\"#\").concat(attr.getSchema()));\n+                    userTO.getVirAttrs().add(attr);\n+                }\n+                membership.getVirAttrs().clear();\n+            }\n+\n             final String selfTOJson = MAPPER.writeValueAsString(userTO);\n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"561811a150bc73421e9a8ef10d1b14d8d64ff93c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":80,"deletions":4,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -20,14 +20,20 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n@@ -58,8 +64,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             UserTO userTO = MAPPER.readValue(request.getReader().readLine(), UserTO.class);\n-            LOG.debug(\"User {} id self-updating\", userTO.getUsername());\n-\n+            \n             Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n \n             for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n@@ -80,6 +85,79 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 }\n             }\n \n+            Set<AttrTO> membAttrs = new HashSet<>();\n+            for (AttrTO attr : userTO.getPlainAttrs()) {\n+                if (attr.getSchema().contains(\"#\")) {\n+                    final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                    MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                            new Predicate<MembershipTO>() {\n+\n+                        @Override\n+                        public boolean evaluate(final MembershipTO item) {\n+                            return simpleAttrs[0].equals(item.getGroupName());\n+                        }\n+                    });\n+                    if (membership == null) {\n+                        membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                        userTO.getMemberships().add(membership);\n+                    }\n+                    AttrTO clone = SerializationUtils.clone(attr);\n+                    clone.setSchema(simpleAttrs[1]);\n+                    membership.getPlainAttrs().add(clone);\n+                    membAttrs.add(attr);\n+                }\n+            }\n+            userTO.getPlainAttrs().removeAll(membAttrs);\n+\n+            membAttrs.clear();\n+            for (AttrTO attr : userTO.getDerAttrs()) {\n+                if (attr.getSchema().contains(\"#\")) {\n+                    final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                    MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                            new Predicate<MembershipTO>() {\n+\n+                        @Override\n+                        public boolean evaluate(final MembershipTO item) {\n+                            return simpleAttrs[0].equals(item.getGroupName());\n+                        }\n+                    });\n+                    if (membership == null) {\n+                        membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                        userTO.getMemberships().add(membership);\n+                    }\n+                    AttrTO clone = SerializationUtils.clone(attr);\n+                    clone.setSchema(simpleAttrs[1]);\n+                    membership.getDerAttrs().add(clone);\n+                    membAttrs.add(attr);\n+                }\n+            }\n+            userTO.getDerAttrs().removeAll(membAttrs);\n+\n+            membAttrs.clear();\n+            for (AttrTO attr : userTO.getVirAttrs()) {\n+                if (attr.getSchema().contains(\"#\")) {\n+                    final String[] simpleAttrs = attr.getSchema().split(\"#\");\n+                    MembershipTO membership = IterableUtils.find(userTO.getMemberships(),\n+                            new Predicate<MembershipTO>() {\n+\n+                        @Override\n+                        public boolean evaluate(final MembershipTO item) {\n+                            return simpleAttrs[0].equals(item.getGroupName());\n+                        }\n+                    });\n+                    if (membership == null) {\n+                        membership = new MembershipTO.Builder().group(null, simpleAttrs[0]).build();\n+                        userTO.getMemberships().add(membership);\n+\n+                    }\n+                    AttrTO clone = SerializationUtils.clone(attr);\n+                    clone.setSchema(simpleAttrs[1]);\n+                    membership.getVirAttrs().add(clone);\n+                    membAttrs.add(attr);\n+                }\n+            }\n+            userTO.getVirAttrs().removeAll(membAttrs);\n+\n             // update user\n             Response res = SyncopeEnduserSession.get().\n                     getService(userTO.getETagValue(), UserSelfService.class).update(userTO);\n@@ -89,7 +167,6 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                     append(\"User\").append(userTO.getUsername()).append(\" successfully updated\").toString()\n                     : new StringBuilder().\n                     append(\"ErrorMessage{{ \").append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n-\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override\n@@ -111,5 +188,4 @@ public void writeData(final Attributes attributes) throws IOException {\n         }\n         return response;\n     }\n-\n }"},{"sha":"f0e2ec514a0a4ece7ee4d7425f17ad1c4d90fb00","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":39,"deletions":11,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -56,12 +56,21 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         virtualAttributeTable: {},\n         selectedResources: [],\n         selectedGroups: [],\n-        selectedAuxClasses: []\n+        selectedAuxClasses: [],\n+        groupSchemas: ['own']\n       };\n \n-      var initUserSchemas = function (anyTypeClass) {\n+      var initUserSchemas = function (anyTypeClass, group) {\n         // initialization is done here synchronously to have all schema fields populated correctly\n-        SchemaService.getUserSchemas(anyTypeClass).then(function (schemas) {\n+        var schemaService;\n+        if (group) {\n+          schemaService = SchemaService.getTypeExtSchemas(group);\n+        } else {\n+          schemaService = SchemaService.getUserSchemas(anyTypeClass);\n+        }\n+        schemaService.then(function (schemas) {\n+          if(group && ( schemas.plainSchemas.length > 0 || schemas.derSchemas.length > 0 || schemas.virSchemas.length > 0))\n+            $scope.dynamicForm.groupSchemas.push(group);\n           //initializing user schemas values\n           initSchemaValues(schemas);\n         }, function (response) {\n@@ -188,7 +197,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n       };\n \n       var initAuxClasses = function () {\n-\n         //fetching default user classes, that should remain in any case\n         AnyService.getAnyType(\"USER\").then(function (response) {\n           $scope.dynamicForm.anyUserType = response.classes;\n@@ -242,6 +250,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           for (var index in $scope.user.auxClasses) {\n             $scope.$emit(\"auxClassAdded\", $scope.user.auxClasses[index]);\n           }\n+          for (var index in $scope.user.memberships) {\n+            $scope.$emit(\"groupAdded\", $scope.user.memberships[index].groupName);\n+          }\n           if ($scope.user.mustChangePassword) {\n             $location.path('/mustchangepassword')\n           } else {\n@@ -252,11 +263,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n-      var removeUserSchemas = function (anyTypeClass) {\n-\n+      var removeUserSchemas = function (anyTypeClass, group) {\n         //removing plain schemas\n         for (var i = 0; i < $scope.dynamicForm.plainSchemas.length; i++) {\n-          if ($scope.dynamicForm.plainSchemas[i].anyTypeClass == anyTypeClass) {\n+          if ((anyTypeClass && $scope.dynamicForm.plainSchemas[i].anyTypeClass == anyTypeClass)\n+                  || (group && $scope.dynamicForm.plainSchemas[i].key.includes(group + '#'))) {\n+\n             //cleaning both form and user model\n             delete $scope.user.plainAttrs[$scope.dynamicForm.plainSchemas[i].key];\n             $scope.dynamicForm.plainSchemas.splice(i, 1);\n@@ -265,7 +277,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n         //removing derived schemas\n         for (var i = 0; i < $scope.dynamicForm.derSchemas.length; i++) {\n-          if ($scope.dynamicForm.derSchemas[i].anyTypeClass == anyTypeClass) {\n+          if ((anyTypeClass && $scope.dynamicForm.derSchemas[i].anyTypeClass == anyTypeClass)\n+                  || (group && $scope.dynamicForm.derSchemas[i].key.includes(group + '#'))) {\n+\n             //cleaning both form and user model\n             delete $scope.user.derAttrs[$scope.dynamicForm.derSchemas[i].key];\n             $scope.dynamicForm.derSchemas.splice(i, 1);\n@@ -274,7 +288,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n         //removing virtual schemas\n         for (var i = 0; i < $scope.dynamicForm.virSchemas.length; i++) {\n-          if ($scope.dynamicForm.virSchemas[i].anyTypeClass == anyTypeClass) {\n+          if ((anyTypeClass && $scope.dynamicForm.virSchemas[i].anyTypeClass == anyTypeClass)\n+                  || (group && $scope.dynamicForm.virSchemas[i].key.includes(group + '#'))) {\n+\n             //cleaning both form and user model\n             delete $scope.user.virAttrs[$scope.dynamicForm.virSchemas[i].key];\n             $scope.dynamicForm.virSchemas.splice(i, 1);\n@@ -294,8 +310,17 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           removeUserSchemas(auxClass);\n       });\n \n-      if ($scope.createMode) {\n+      $scope.$on('groupAdded', function (event, group) {\n+        if (group)\n+          initUserSchemas(null, group);\n+      });\n+\n+      $scope.$on('groupRemoved', function (event, group) {\n+        if (group)\n+          removeUserSchemas(null, group);\n+      });\n \n+      if ($scope.createMode) {\n         $scope.user = {\n           username: '',\n           password: '',\n@@ -314,6 +339,10 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         for (var index in $scope.dynamicForm.selectedAuxClasses) {\n           initUserSchemas($scope.dynamicForm.selectedAuxClasses[index]);\n         }\n+        // initialize groups in case of pre-existing groups\n+        for (var index in $scope.dynamicForm.selectedGroups) {\n+          initUserSchemas(null, $scope.dynamicForm.selectedGroups[index]);\n+        }\n         initProperties();\n       } else {\n         // read user from syncope core\n@@ -324,7 +353,6 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n     $scope.saveUser = function (user) {\n       console.debug(\"Save user: \", user);\n       var wrappedUser = UserUtil.getWrappedUser(user);\n-\n       if ($scope.createMode) {\n         UserSelfService.create(wrappedUser, $scope.captchaInput.value).then(function (response) {\n           console.info(\"User \" + $scope.user.username + \" SUCCESSFULLY_CREATED\");"},{"sha":"7898767308c8a6e377c23bd7062db72d3581e6b9","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicDerivedAttributes.js","status":"modified","additions":37,"deletions":1,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -16,16 +16,52 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n 'use strict';\n \n angular.module('self')\n         .directive('dynamicDerivedAttributes', function () {\n+          var getTemplateUrl = function () {\n+            return 'views/dynamicDerivedAttributes.html';\n+          };\n           return {\n             restrict: 'E',\n-            templateUrl: 'views/dynamicDerivedAttributes.html',\n+            templateUrl: getTemplateUrl(),\n             scope: {\n               dynamicForm: \"=form\",\n               user: \"=\"\n+            },\n+            controller: function ($scope) {\n+              $scope.getByGroup = function (schema) {\n+                var currentDerivedSchemas = new Array();\n+                for (var i = 0; i < $scope.dynamicForm.derSchemas.length; i++) {\n+                  if (schema == \"own\" && $scope.dynamicForm.derSchemas[i].key.indexOf('#') == -1) {\n+                    var attr = $scope.dynamicForm.derSchemas[i];\n+                    attr.simpleKey = $scope.dynamicForm.derSchemas[i].key;\n+                    currentDerivedSchemas.push($scope.dynamicForm.derSchemas[i]);\n+                  }\n+                  if ($scope.dynamicForm.derSchemas[i].key.indexOf(schema) > -1) {\n+                    var attr = $scope.dynamicForm.derSchemas[i];\n+                    attr.simpleKey = $scope.dynamicForm.derSchemas[i].key.substring($scope.dynamicForm.derSchemas[i].key.indexOf(\"#\") + 1);\n+                    currentDerivedSchemas.push(attr);\n+                  }\n+                }\n+                return currentDerivedSchemas;\n+              };\n+\n+              $scope.addAttributeField = function (derSchemaKey) {\n+                console.debug(\"Add DERIVED value:\", derSchemaKey);\n+                console.debug(\" \", ($scope.dynamicForm.attributeTable[derSchemaKey].fields.length));\n+                $scope.dynamicForm.attributeTable[derSchemaKey].fields.push(derSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[derSchemaKey].fields.length));\n+              };\n+\n+              $scope.removeAttributeField = function (derSchemaKey, index) {\n+                console.debug(\"Remove DERIVED value:\", derSchemaKey);\n+                console.debug(\"attribute index:\", index);\n+                $scope.dynamicForm.attributeTable[derSchemaKey].fields.splice(index, 1);\n+                // clean user model\n+                $scope.user.derAttrs[derSchemaKey].values.splice(index, 1);\n+              };\n             }\n           };\n         });"},{"sha":"0b9526c4b7189a1224578f3293c06632ecd3f9d3","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttribute.js","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -31,7 +31,6 @@ angular.module('self')\n             },\n             controller: function ($scope, $element, $window) {\n               $scope.initAttribute = function (schema, index) {\n-\n                 switch (schema.type) {\n                   case \"Long\":\n                   case \"Double\":\n@@ -52,7 +51,6 @@ angular.module('self')\n                             || $scope.enumerationValues[0];\n                     break;\n                   case \"Binary\":\n-\n                     $scope.userFile = $scope.userFile || '';\n                     $element.bind(\"change\", function (changeEvent) {\n                       $scope.$apply(function () {\n@@ -89,10 +87,8 @@ angular.module('self')\n \n                   case \"Date\":\n                     var dateInMs = $scope.user.plainAttrs[schema.key].values[index];\n-                    console.debug(\"received date in milliseconds\", dateInMs);\n                     if (dateInMs) {\n                       var temporaryDate = new Date(dateInMs * 1);\n-                      console.debug(\"date-time\", temporaryDate);\n                       $scope.selectedDate = temporaryDate;\n                       $scope.selectedTime = temporaryDate;\n                     }\n@@ -207,6 +203,6 @@ angular.module('self')\n                           return (n !== undefined && n !== \"\");\n                         });\n               });\n-            },\n+            }\n           };\n         });"},{"sha":"a4014e94f7195232e241856ec0f0ee56f54cbcf0","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttributes.js","status":"modified","additions":48,"deletions":24,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -19,29 +19,53 @@\n 'use strict';\n \n angular.module('self')\n-        .directive('dynamicPlainAttributes', function (SchemaService) {\n-          return {\n-            restrict: 'E',\n-            templateUrl: 'views/dynamicPlainAttributes.html',\n-            scope: {\n-              dynamicForm: \"=form\",\n-              user: \"=\"\n-            },\n-            controller: function ($scope) {\n+        .directive('dynamicPlainAttributes', function () {\n+            var getTemplateUrl = function () {\n+              return 'views/dynamicPlainAttributes.html';\n+            };\n+            return {\n+              restrict: 'E',\n+              templateUrl: getTemplateUrl(),\n+              scope: {\n+                dynamicForm: \"=form\",\n+                user: \"=\"\n+              },\n+              controller: function ($scope) {\n+                \n+                $scope.getByGroup = function (schema) {\n+                  var currentPlainSchemas = new Array();\n+                  for (var i = 0; i < $scope.dynamicForm.plainSchemas.length; i++) {\n+                    if (schema == \"own\" && $scope.dynamicForm.plainSchemas[i].key.indexOf('#') == -1) {\n+                      var attr = $scope.dynamicForm.plainSchemas[i];\n+                      attr.simpleKey = $scope.dynamicForm.plainSchemas[i].key;\n+                      currentPlainSchemas.push($scope.dynamicForm.plainSchemas[i]);\n+                    }\n+                    if ($scope.dynamicForm.plainSchemas[i].key.indexOf(schema) > -1) {\n+                      var attr = $scope.dynamicForm.plainSchemas[i];\n+                      attr.simpleKey = $scope.dynamicForm.plainSchemas[i].key.substring($scope.dynamicForm.plainSchemas[i].key.indexOf(\"#\") + 1);\n+                      currentPlainSchemas.push(attr);\n+                    }\n+                  }\n+                  return currentPlainSchemas;\n+                };\n \n-              $scope.addAttributeField = function (plainSchemaKey) {\n-                console.debug(\"Add PLAIN value:\", plainSchemaKey);\n-                console.debug(\" \",($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n-                $scope.dynamicForm.attributeTable[plainSchemaKey].fields.push(plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n-              };\n+                $scope.addAttributeField = function (plainSchemaKey) {\n+                  console.debug(\"Add PLAIN value:\", plainSchemaKey);\n+                  console.debug(\" \", ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n+                  $scope.dynamicForm.attributeTable[plainSchemaKey].fields.push(plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n+                };\n \n-              $scope.removeAttributeField = function (plainSchemaKey, index) {\n-                console.debug(\"Remove PLAIN value:\", plainSchemaKey);\n-                console.debug(\"attribute index:\", index);\n-                $scope.dynamicForm.attributeTable[plainSchemaKey].fields.splice(index, 1);\n-                // clean user model\n-                $scope.user.plainAttrs[plainSchemaKey].values.splice(index, 1);\n-              };\n-            }\n-          };\n-        });\n+                $scope.removeAttributeField = function (plainSchemaKey, index) {\n+                  console.debug(\"Remove PLAIN value:\", plainSchemaKey);\n+                  console.debug(\"attribute index:\", index);\n+                  $scope.dynamicForm.attributeTable[plainSchemaKey].fields.splice(index, 1);\n+                  // clean user model\n+                  $scope.user.plainAttrs[plainSchemaKey].values.splice(index, 1);\n+                };\n+\n+                $scope.getTemplateUrl = function () {\n+                  return \"views/dynamicPlainAttributes.html\";\n+                };\n+              }\n+            };\n+          });"},{"sha":"6fc926b126d4ae53722c11331b213b1e2656e341","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicVirtualAttribute.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttribute.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttribute.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttribute.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -37,7 +37,7 @@ angular.module('self')\n                           return (n !== undefined && n !== \"\");\n                         });\n               });\n-            },\n+            }\n             //replace: true\n           };\n         });"},{"sha":"6b083205becb27551b2b3cffc86beeef641c870b","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicVirtualAttributes.js","status":"modified","additions":44,"deletions":23,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -16,32 +16,53 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n 'use strict';\n \n angular.module('self')\n         .directive('dynamicVirtualAttributes', function () {\n-          return {\n-            restrict: 'E',\n-            templateUrl: 'views/dynamicVirtualAttributes.html',\n-            scope: {\n-              dynamicForm: \"=form\",\n-              user: \"=\"\n-            },\n-            controller: function ($scope) {\n+            var getTemplateUrl = function () {\n+              return 'views/dynamicVirtualAttributes.html';\n+            };\n+            return {\n+              restrict: 'E',\n+              templateUrl: getTemplateUrl(),\n+              scope: {\n+                dynamicForm: \"=form\",\n+                user: \"=\"\n+              },\n+              controller: function ($scope) {\n+               \n+                $scope.getByGroup = function (schema) {\n+                  var currentVirSchemas = new Array();\n+                  for (var i = 0; i < $scope.dynamicForm.virSchemas.length; i++) {\n+                    if (schema == \"own\" && $scope.dynamicForm.virSchemas[i].key.indexOf('#') == -1) {\n+                      var attr = $scope.dynamicForm.virSchemas[i];\n+                      attr.simpleKey = $scope.dynamicForm.virSchemas[i].key;\n+                      currentVirSchemas.push($scope.dynamicForm.virSchemas[i]);\n+                    }\n+                    if ($scope.dynamicForm.virSchemas[i].key.indexOf(schema) > -1) {\n+                      var attr = $scope.dynamicForm.virSchemas[i];\n+                      attr.simpleKey = $scope.dynamicForm.virSchemas[i].key.substring($scope.dynamicForm.virSchemas[i].key.indexOf(\"#\") + 1);\n+                      currentVirSchemas.push(attr);\n+                    }\n+                  }\n+                  return currentVirSchemas;\n+                };\n \n-              $scope.addVirtualAttributeField = function (virSchemaKey) {\n-                console.debug(\"Add VIRTUAL value:\", virSchemaKey);\n-                console.debug(\" \", ($scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.length));\n-                $scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.push(virSchemaKey + \"_\" + ($scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.length));\n-              };\n+                $scope.addVirtualAttributeField = function (virSchemaKey) {\n+                  console.debug(\"Add VIRTUAL value:\", virSchemaKey);\n+                  console.debug(\" \", ($scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.length));\n+                  $scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.push(virSchemaKey + \"_\" + ($scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.length));\n+                };\n \n-              $scope.removeVirtualAttributeField = function (virSchemaKey, index) {\n-                console.debug(\"Remove VIRTUAL value: \", virSchemaKey);\n-                console.debug(\"Remove VIRTUAL value: \", index);\n-                $scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.splice(index, 1);\n-                // clean user model\n-                $scope.user.virAttrs[virSchemaKey].values.splice(index, 1);\n-              };\n-            }\n-          };\n-        });\n+                $scope.removeVirtualAttributeField = function (virSchemaKey, index) {\n+                  console.debug(\"Remove VIRTUAL value: \", virSchemaKey);\n+                  console.debug(\"Remove VIRTUAL value: \", index);\n+                  $scope.dynamicForm.virtualAttributeTable[virSchemaKey].fields.splice(index, 1);\n+                  // clean user model\n+                  $scope.user.virAttrs[virSchemaKey].values.splice(index, 1);\n+                };\n+              }\n+            };\n+          });"},{"sha":"52b1d0cfb0563a0a1bab498d604bb356f11ba3a1","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/groups.js","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -28,7 +28,6 @@ angular.module('self')\n               user: \"=\"\n             },\n             controller: function ($scope, $filter) {\n-\n               $scope.init = function () {\n                 if (!$scope.user.memberships) {\n                   $scope.user.memberships = new Array();\n@@ -37,22 +36,25 @@ angular.module('self')\n               };\n \n               $scope.addGroup = function (item, model) {\n-                var group = item;\n-                $scope.user.memberships.push({\"rightKey\": group.rightKey});                \n+                var membership = item;\n+                $scope.user.memberships.push({\"rightKey\": membership.rightKey, \"groupName\": membership.groupName});\n+                $scope.$emit(\"groupAdded\", membership.groupName);\n               };\n \n               $scope.removeGroup = function (item, model) {\n                 var groupIndex = $scope.getIndex(item);\n-                $scope.user.memberships.splice(groupIndex, 1);                \n+                var membership = $scope.user.memberships[groupIndex];\n+                var groupName = membership.groupName;\n+                $scope.user.memberships.splice(groupIndex, 1);\n+                $scope.$emit(\"groupRemoved\", groupName);\n               };\n \n               $scope.getIndex = function (selectedGroup) {\n-                var groupIndex = $scope.user.memberships.map(function (groupName) {\n-                  return groupName;\n-                }).indexOf(selectedGroup);\n+                var groupIndex = $scope.user.memberships.map(function (membership) {\n+                  return membership.groupName;\n+                }).indexOf(selectedGroup.groupName);\n                 return groupIndex;\n               };\n-\n             }\n           };\n         });"},{"sha":"158578d33b859b76f69c76a754d7cc0a3eb5e3c9","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/validationMessage.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FvalidationMessage.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FvalidationMessage.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FvalidationMessage.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -27,7 +27,7 @@ angular.module('SyncopeEnduserApp').\n               \"name\": \"@\",\n               \"template\": \"@\"\n             },\n-            require: '^form',\n+            require: '^?form',\n             replace: false,\n             link: function (scope, el, attrs, formCtrl) {\n               var popupMessage = \"Data are invalid: please correct accordingly\";"},{"sha":"2d86dac88beddf0fc15ebe05a0532ab69f184f51","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/schemaService.js","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -26,17 +26,29 @@ angular.module('self')\n             var schemaService = {};\n \n             schemaService.getUserSchemas = function (anyTypeClass) {\n+              var param = anyTypeClass ? \"?anyTypeClass=\" + encodeURI(anyTypeClass) : \"\";\n \n-              var classParam = anyTypeClass ? \"?anyTypeClass=\" + encodeURI(anyTypeClass) : \"\";\n+              return  $http.get(\"/syncope-enduser/api/schemas\" + param)\n+                      .then(function (response) {\n+                        return response.data;\n+                      }, function (response) {\n+                        console.error(\"Something went wrong during schema retrieval, exit with status: \", response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n \n-              return  $http.get(\"/syncope-enduser/api/schemas\" + classParam)\n+            schemaService.getTypeExtSchemas = function (group) {\n+              var param = group ? \"?group=\" + encodeURI(group) : \"\";\n+\n+              return  $http.get(\"/syncope-enduser/api/schemas\" + param)\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {\n                         console.error(\"Something went wrong during schema retrieval, exit with status: \", response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n+\n             return schemaService;\n           }]);\n "},{"sha":"d5a1e463aa8ce6b4367e2c80bbcde3e204283b5e","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/de/static.json","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -41,7 +41,9 @@\n   \"SUCCESSFULLY_CREATED\": \"succes aangemaakt\",\n   \"SUCCESSFULLY_UPDATED\": \"succesvol geüpdatet\",\n   \"PASSWORD_UPDATED\": \": password succesfully updated\",\n-  \"GOBACKHOME\": \"Klik op deze link om terug te gaan naar de home page\"\n+  \"GOBACKHOME\": \"Klik op deze link om terug te gaan naar de home page\",\n+  \"own\": \"Besitzen\"\n+\n \n }\n "},{"sha":"007cf489b9a217f7a70168f67aa6d51c76c1ef4f","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/en/static.json","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -41,6 +41,8 @@\n   \"SUCCESSFULLY_CREATED\": \"succesfully created\",\n   \"SUCCESSFULLY_UPDATED\": \"succesfully updated\",\n   \"PASSWORD_UPDATED\": \": password succesfully updated\",\n-  \"GOBACKHOME\": \"Click on this link to go back to the home page\"\n+  \"GOBACKHOME\": \"Click on this link to go back to the home page\",\n+  \"own\": \"Own\"\n+\n }\n "},{"sha":"a5921b4591023953dcf19fcc4c198a76e1f2fc96","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/it/static.json","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -40,5 +40,6 @@\n   \"SUCCESSFULLY_CREATED\": \"creato con successo\",\n   \"SUCCESSFULLY_UPDATED\": \"aggiornato con successo\",\n   \"PASSWORD_UPDATED\": \": password succesfully updated\",\n-  \"GOBACKHOME\": \"Clicca su questo link per tornare alla home page\"\n+  \"GOBACKHOME\": \"Clicca su questo link per tornare alla home page\",\n+  \"own\": \"Propri\"\n }\n\\ No newline at end of file"},{"sha":"baf12275cf3aa2e2c569a9196cad7c86017f5ad4","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicDerivedAttributes.html","status":"modified","additions":32,"deletions":6,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -16,9 +16,35 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<div id=\"attribute\" class=\"form-group\" ng-repeat=\"derSchema in dynamicForm.derSchemas\">\n-  <label for=\"derivedSchema.key\">{{derSchema.key}}</label>  <span uib-popover=\"{{derSchema.expression}}\" \n-                                                                  popover-trigger=\"mouseenter\" \n-                                                                  class=\"glyphicon glyphicon-question-sign\"/>\n-  <dynamic-derived-attribute schema=\"derSchema\" user=\"user\" index=\"0\"></dynamic-derived-attribute>\n-</div>\n+<div ng-repeat=\"groupSchema in dynamicForm.groupSchemas\">\n+  <uib-accordion>\n+    <div uib-accordion-group heading=\"{{groupSchema| translate}}\"\n+         ng-init=\"status = {isOpen: (groupSchema == 'own')}\" is-open=\"status.isOpen\"\n+         class=\"breadcrumb-header\">\n+      <div id=\"attribute\" class=\"form-group\" ng-repeat=\"derSchema in getByGroup(groupSchema) track by $index\">\n+        <label for=\"derSchema.key\">{{derSchema.simpleKey| translate}} <span ng-if=\"derSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <div ng-if=\"!derSchema.multivalue\">\n+          <dynamic-derived-attribute schema=\"derSchema\" user=\"user\" index=\"0\"></dynamic-derived-attribute>\n+          <validation-message name=\"{{derSchema.key| translate}}\"/>\n+        </div>\n+        <div ng-if=\"derSchema.multivalue\">\n+          <div ng-repeat=\"field in dynamicForm.attributeTable[derSchema.key].fields track by $index\" \n+               ng-model='dynamicForm.attributeTable[derSchema.key].fields[$index]'>\n+            <dynamic-derived-attribute schema=\"derSchema\" user=\"user\" index=\"$index\"></dynamic-derived-attribute>\n+            <span>\n+              <button class=\"btn btn-default btn-sm minus\" ng-if=\"$index > 0\" type=\"button\" \n+                      ng-click=\"removeAttributeField(derSchema.key, $index)\">\n+                <i class=\"glyphicon glyphicon-minus\" title=\"Remove value\"></i>\n+              </button>\n+            </span>\n+          </div>\n+          <span>\n+            <button class=\"btn btn-default btn-sm\" type=\"button\" ng-click=\"addAttributeField(derSchema.key)\">\n+              <i class=\"glyphicon glyphicon-plus\" title=\"Add value\"></i>\n+            </button>\n+          </span>\n+        </div>\n+      </div>\n+    </div>\n+  </uib-accordion>\n+</div>\n\\ No newline at end of file"},{"sha":"81ebc6de13c71e4889d508856316ba12ac19e2ff","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicPlainAttributes.html","status":"modified","additions":28,"deletions":22,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -16,28 +16,34 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<div id=\"attribute\" class=\"form-group\" ng-repeat=\"plainSchema in dynamicForm.plainSchemas\">\n-  <label for=\"plainSchema.key\">{{plainSchema.key| translate}} <span ng-if=\"plainSchema.mandatoryCondition === 'true'\">*</span></label>\n-  <div ng-if=\"!plainSchema.multivalue\">\n-    <dynamic-plain-attribute schema=\"plainSchema\" user=\"user\" index=\"0\"></dynamic-plain-attribute>\n-    <validation-message name=\"{{plainSchema.key| translate}}\"/>\n-  </div>\n \n-  <div ng-if=\"plainSchema.multivalue\">\n-    <div ng-repeat=\"field in dynamicForm.attributeTable[plainSchema.key].fields track by $index\" \n-         ng-model='dynamicForm.attributeTable[plainSchema.key].fields[$index]'>\n-      <div class=\"multivalue\">\n-        <button class=\"btn btn-default btn-sm\" type=\"button\" ng-click=\"addAttributeField(plainSchema.key)\">\n-          <i class=\"glyphicon glyphicon-plus\" title=\"Add value\"></i>\n-        </button>\n-        <button class=\"btn btn-default btn-sm minus\" ng-if=\"$index > 0\" type=\"button\" \n-                ng-click=\"removeAttributeField(plainSchema.key, $index)\">\n-          <i class=\"glyphicon glyphicon-minus\" title=\"Remove value\"></i>\n-        </button>\n-        <dynamic-plain-attribute schema=\"plainSchema\" user=\"user\" index=\"$index\"></dynamic-plain-attribute>\n+<div ng-repeat=\"groupSchema in dynamicForm.groupSchemas\">\n+  <uib-accordion>\n+    <div uib-accordion-group heading=\"{{groupSchema| translate}}\"\n+         ng-init=\"status = {isOpen: (groupSchema == 'own')}\" is-open=\"status.isOpen\"\n+         class=\"breadcrumb-header\">\n+      <div id=\"attribute\" class=\"form-group\" ng-repeat=\"plainSchema in getByGroup(groupSchema) track by $index\">\n+        <label for=\"plainSchema.key\">{{plainSchema.simpleKey| translate}} <span ng-if=\"plainSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <div ng-if=\"!plainSchema.multivalue\">\n+          <dynamic-plain-attribute schema=\"plainSchema\" user=\"user\" index=\"0\"></dynamic-plain-attribute>\n+          <validation-message name=\"{{plainSchema.key| translate}}\"/>\n+        </div>\n+        <div ng-if=\"plainSchema.multivalue\">\n+          <div ng-repeat=\"field in dynamicForm.attributeTable[plainSchema.key].fields track by $index\" \n+               ng-model='dynamicForm.attributeTable[plainSchema.key].fields[$index]'>\n+            <div class=\"multivalue\">\n+              <button class=\"btn btn-default btn-sm\" type=\"button\" ng-click=\"addAttributeField(plainSchema.key)\">\n+                <i class=\"glyphicon glyphicon-plus\" title=\"Add value\"></i>\n+              </button>\n+              <button class=\"btn btn-default btn-sm minus\" ng-if=\"$index > 0\" type=\"button\" \n+                      ng-click=\"removeAttributeField(plainSchema.key, $index)\">\n+                <i class=\"glyphicon glyphicon-minus\" title=\"Remove value\"></i>\n+              </button>\n+              <dynamic-plain-attribute schema=\"plainSchema\" user=\"user\" index=\"$index\"></dynamic-plain-attribute>\n+            </div>\n+          </div>\n+        </div>\n       </div>\n-\n     </div>\n-\n-  </div>\n-</div>\n+  </uib-accordion>\n+</div>\n\\ No newline at end of file"},{"sha":"4dcca94d4210a51f4c7a043636b925b8a773f254","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicVirtualAttributes.html","status":"modified","additions":28,"deletions":17,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -16,21 +16,32 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<div id=\"attribute\" class=\"form-group\" ng-repeat=\"virtualSchema in dynamicForm.virSchemas\">\n-  <label for=\"virtualSchema.key\">{{virtualSchema.key}}</label>\n-  <!--all virtual schemas are multivalue-->\n-  <div ng-repeat=\"field in dynamicForm.virtualAttributeTable[virtualSchema.key].fields track by $index\" \n-       ng-model='dynamicForm.virtualAttributeTable[virtualSchema.key].fields[$index]'>    \n-    <div class=\"multivalue\">\n-      <button class=\"btn btn-default btn-sm\" type=\"button\" ng-click=\"addVirtualAttributeField(virtualSchema.key)\" \n-              ng-show=\"!virtualSchema.readonly\">\n-        <i class=\"glyphicon glyphicon-plus\" title=\"Add value\"></i>\n-      </button>\n-      <button class=\"btn btn-default btn-sm minus\" ng-if=\"$index > 0\" type=\"button\" ng-show=\"!virtualSchema.readonly\"\n-              ng-click=\"removeVirtualAttributeField(virtualSchema.key, $index)\">\n-        <i class=\"glyphicon glyphicon-minus\" title=\"Remove value\"></i>\n-      </button>\n-      <dynamic-virtual-attribute schema=\"virtualSchema\" user=\"user\" index=\"$index\"></dynamic-virtual-attribute>\n+<div  ng-repeat=\"groupSchema in dynamicForm.groupSchemas\">\n+  <uib-accordion ng-if=\"getByGroup(groupSchema).length > 0\">\n+    <div uib-accordion-group heading=\"{{groupSchema| translate}}\"\n+         ng-init=\"status = {isOpen: (groupSchema == 'own')}\" is-open=\"status.isOpen\"\n+         class=\"breadcrumb-header\">\n+      <div id=\"attribute\" class=\"form-group\" ng-repeat=\"virSchema in getByGroup(groupSchema) track by $index\">\n+        <label for=\"virSchema.key\">{{virSchema.simpleKey| translate}} <span ng-if=\"virSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <div ng-if=\"!virSchema.multivalue\">\n+          <dynamic-virtual-attribute schema=\"virSchema\" user=\"user\" index=\"0\"></dynamic-virtual-attribute>\n+          <validation-message name=\"{{virSchema.key| translate}}\"/>\n+        </div>\n+        <div ng-if=\"virSchema.multivalue\">\n+          <div ng-repeat=\"field in dynamicForm.attributeTable[virSchema.key].fields track by $index\" \n+               ng-model='dynamicForm.attributeTable[virSchema.key].fields[$index]'>\n+            <div class=\"multivalue\">\n+              <dynamic-virtual-attribute schema=\"virSchema\" user=\"user\" index=\"$index\"></dynamic-virtual-attribute>\n+              <button class=\"btn btn-default btn-sm minus\" ng-if=\"$index > 0\" type=\"button\" \n+                      ng-click=\"removeAttributeField(virSchema.key, $index)\">\n+                <i class=\"glyphicon glyphicon-minus\" title=\"Remove value\"></i>\n+              </button><button class=\"btn btn-default btn-sm\" type=\"button\" ng-click=\"addAttributeField(virSchema.key)\">\n+                <i class=\"glyphicon glyphicon-plus\" title=\"Add value\"></i>\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n     </div>\n-  </div>\n-</div>\n+  </uib-accordion>\n+</div>\n\\ No newline at end of file"},{"sha":"9ec56b2bc0d1815f827b73464fb8b792f0d6aff6","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n \n /**\n@@ -48,6 +49,20 @@ public interface GroupService extends AnyService<GroupTO, GroupPatch> {\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     List<GroupTO> own();\n \n+    /**\n+     * Extracts type extension information, for the provided group and any type.\n+     *\n+     * @param key group key\n+     * @param anyTypeKey any type key\n+     * @return type extension information, for the provided group and any type\n+     */\n+    @GET\n+    @Path(\"{key}/{anyTypeKey}/typeExtension\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    TypeExtensionTO readTypeExtension(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n+\n     /**\n      * (De)provision all members of the given group from / onto all the resources associated to it.\n      *"},{"sha":"bd07a22fc72fa63fdf1138cf0d4fafab7792b25d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -150,6 +151,18 @@ public GroupTO transform(final Group input) {\n         }, new ArrayList<GroupTO>());\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public TypeExtensionTO readTypeExtension(final String key, final String anyTypeKey) {\n+        Group group = groupDAO.find(key);\n+        if (group == null) {\n+            throw new NotFoundException(\"Group \" + key);\n+        }\n+\n+        GroupTO groupTO = binder.getGroupTO(group, false);\n+        return groupTO.getTypeExtension(anyTypeKey);\n+    }\n+\n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     @Override"},{"sha":"0a477cf2ab29a1d5bb8f6655120a68979bc6c33e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -215,9 +215,12 @@ public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n                     searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.GROUP);\n \n             for (MembershipTO membershipTO : anyObjectTO.getMemberships()) {\n-                Group group = groupDAO.find(membershipTO.getRightKey());\n+                Group group = membershipTO.getRightKey() == null\n+                        ? groupDAO.findByName(membershipTO.getGroupName())\n+                        : groupDAO.find(membershipTO.getRightKey());\n                 if (group == null) {\n-                    LOG.debug(\"Ignoring invalid group \" + membershipTO.getGroupName());\n+                    LOG.debug(\"Ignoring invalid group \"\n+                            + membershipTO.getRightKey() + \" / \" + membershipTO.getGroupName());\n                 } else if (assignableGroups.contains(group)) {\n                     AMembership membership = entityFactory.newEntity(AMembership.class);\n                     membership.setRightEnd(group);"},{"sha":"11396d75bf360f0670077f6d0793f55584a19fba","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -231,9 +231,12 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n                     searchDAO.search(SearchCond.getLeafCond(assignableCond), AnyTypeKind.GROUP);\n \n             for (MembershipTO membershipTO : userTO.getMemberships()) {\n-                Group group = groupDAO.find(membershipTO.getRightKey());\n+                Group group = membershipTO.getRightKey() == null\n+                        ? groupDAO.findByName(membershipTO.getGroupName())\n+                        : groupDAO.find(membershipTO.getRightKey());\n                 if (group == null) {\n-                    LOG.debug(\"Ignoring invalid group \" + membershipTO.getGroupName());\n+                    LOG.debug(\"Ignoring invalid group \"\n+                            + membershipTO.getRightKey() + \" / \" + membershipTO.getGroupName());\n                 } else if (assignableGroups.contains(group)) {\n                     UMembership membership = entityFactory.newEntity(UMembership.class);\n                     membership.setRightEnd(group);"},{"sha":"69b21a175f5b34257615ef26d694215b804437aa","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/GroupServiceImpl.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/343b3d400fd2457e2458c52eacd03af17c51dbac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=343b3d400fd2457e2458c52eacd03af17c51dbac","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.core.logic.AbstractAnyLogic;\n@@ -52,6 +53,11 @@ public List<GroupTO> own() {\n         return logic.own();\n     }\n \n+    @Override\n+    public TypeExtensionTO readTypeExtension(final String key, final String anyTypeKey) {\n+        return logic.readTypeExtension(key, anyTypeKey);\n+    }\n+\n     @Override\n     public ExecTO bulkMembersAction(final String key, final BulkMembersActionType actionType) {\n         return logic.bulkMembersAction(key, actionType);"}]}