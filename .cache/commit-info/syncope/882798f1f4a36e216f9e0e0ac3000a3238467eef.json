{"sha":"882798f1f4a36e216f9e0e0ac3000a3238467eef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg4Mjc5OGYxZjRhMzZlMjE2ZjllMGUwYWMzMDAwYTMyMzg0NjdlZWY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-12T11:50:48Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-12T11:50:48Z"},"message":"SYNCOPE-198: provided table implementation and bulk actions for users\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1455500 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"48e9b0e6d2967ed37f66a8fb5e84bbd8cabc6534","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/48e9b0e6d2967ed37f66a8fb5e84bbd8cabc6534"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/882798f1f4a36e216f9e0e0ac3000a3238467eef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/882798f1f4a36e216f9e0e0ac3000a3238467eef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/882798f1f4a36e216f9e0e0ac3000a3238467eef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/882798f1f4a36e216f9e0e0ac3000a3238467eef/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8ffafa99ac5a81847eae4c385f8c21707212065c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ffafa99ac5a81847eae4c385f8c21707212065c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8ffafa99ac5a81847eae4c385f8c21707212065c"}],"stats":{"total":1771,"additions":1586,"deletions":185},"files":[{"sha":"881caf5aed42032ea07cc107c35751b95b3e8372","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/UserServiceProxy.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FUserServiceProxy.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -21,13 +21,13 @@\n import java.net.URI;\n import java.util.Arrays;\n import java.util.List;\n-\n import javax.ws.rs.core.Response;\n-\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n import org.springframework.web.client.RestTemplate;\n@@ -179,4 +179,9 @@ public List<UserTO> search(final NodeCond searchCondition, final int page, final\n     public int searchCount(final NodeCond searchCondition) {\n         return getRestTemplate().postForObject(baseUrl + \"user/search/count.json\", searchCondition, Integer.class);\n     }\n+\n+    @Override\n+    public BulkActionRes bulkAction(final BulkAction bulkActions) {\n+        return getRestTemplate().postForObject(baseUrl + \"user/bulk\", bulkActions, BulkActionRes.class);\n+    }\n }"},{"sha":"376236fb6f9baeb5b763a1d73656a5fdc1e3d487","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.common.services;\n \n import java.util.List;\n-\n import javax.ws.rs.DELETE;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n@@ -28,9 +27,10 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.Response;\n-\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n \n@@ -66,7 +66,7 @@ UserTO activateByUsername(@PathParam(\"username\") String username, @QueryParam(\"t\n     @Path(\"{userId}\")\n     UserTO delete(@PathParam(\"userId\") Long userId);\n \n-   @GET\n+    @GET\n     List<UserTO> list();\n \n     @GET\n@@ -132,4 +132,7 @@ List<UserTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @Path(\"{userId}\")\n     UserTO update(@PathParam(\"userId\") Long userId, UserMod userMod);\n \n+    @POST\n+    @Path(\"bulk\")\n+    BulkActionRes bulkAction(BulkAction bulkAction);\n }"},{"sha":"4853d3610a9ee4eb2ee381e5b9fe56ac1f259ab4","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAction.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"bulkAction\")\n+@XmlType\n+public class BulkAction extends AbstractBaseBean {\n+\n+    @XmlEnum\n+    @XmlType(name = \"bulkActionType\")\n+    public enum Type {\n+\n+        DELETE,\n+        REACTIVATE,\n+        SUSPEND\n+\n+    }\n+\n+    private Type operation;\n+\n+    /**\n+     * Serialized identifiers.\n+     */\n+    private Collection<String> targets;\n+\n+    public Type getOperation() {\n+        return operation;\n+    }\n+\n+    public void setOperation(Type operation) {\n+        this.operation = operation;\n+    }\n+\n+    public void setTargets(final Collection<String> targets) {\n+        this.targets = targets;\n+    }\n+\n+    public Collection<String> getTargets() {\n+        return targets;\n+    }\n+\n+    public void addTarget(final String target) {\n+        if (this.targets == null) {\n+            this.targets = new ArrayList();\n+        }\n+\n+        this.targets.add(target);\n+    }\n+\n+    public int size() {\n+        return targets == null ? 0 : targets.size();\n+    }\n+}"},{"sha":"73b2169dbd89935a61ecc2a27815f57784cddb55","filename":"common/src/main/java/org/apache/syncope/common/to/BulkActionRes.java","status":"added","additions":116,"deletions":0,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.common.to;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.AbstractBaseBean;\n+import org.codehaus.jackson.annotate.JsonIgnore;\n+\n+@XmlRootElement(name = \"BulkActionRes\")\n+@XmlType\n+public class BulkActionRes extends AbstractBaseBean {\n+\n+    @XmlEnum\n+    @XmlType(name = \"bulkActionStatus\")\n+    public enum Status {\n+\n+        SUCCESS,\n+        FAILURE\n+\n+    }\n+\n+    private List<Result> results;\n+\n+    public void setResults(final List<Result> results) {\n+        this.results = results;\n+    }\n+\n+    public List<Result> getResults() {\n+        return results;\n+    }\n+\n+    @JsonIgnore\n+    public void add(final Object id, final Status status) {\n+        if (results == null) {\n+            results = new ArrayList<Result>();\n+        }\n+\n+        if (id != null) {\n+            results.add(new Result(id.toString(), status));\n+        }\n+    }\n+\n+    @JsonIgnore\n+    public Map<String, Status> getResultMap() {\n+        final Map<String, Status> res = new HashMap<String, Status>();\n+        if (results != null) {\n+            for (Result result : results) {\n+                res.put(result.getKey(), result.getValue());\n+            }\n+        }\n+        return res;\n+    }\n+\n+    @JsonIgnore\n+    public List getResultByStatus(final Status status) {\n+        final List<String> res = new ArrayList<String>();\n+        if (results != null) {\n+            for (Result result : results) {\n+                if (result.getValue() == status) {\n+                    res.add(result.getKey());\n+                }\n+            }\n+        }\n+        return res;\n+    }\n+\n+    public static class Result {\n+\n+        private String key;\n+\n+        private Status value;\n+\n+        public Result() {\n+        }\n+\n+        public Result(String key, Status value) {\n+            this.key = key;\n+            this.value = value;\n+        }\n+\n+        public String getKey() {\n+            return key;\n+        }\n+\n+        public Status getValue() {\n+            return value;\n+        }\n+\n+        public void setKey(String key) {\n+            this.key = key;\n+        }\n+\n+        public void setValue(Status value) {\n+            this.value = value;\n+        }\n+    }\n+}"},{"sha":"4a4582150eb2a0d29b7e986d8f362a1fda66d917","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionModalPage.java","status":"added","additions":156,"deletions":0,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages;\n+\n+import java.beans.PropertyDescriptor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.console.rest.BaseRestClient;\n+import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.beans.BeanUtils;\n+\n+public class BulkActionModalPage<T, S> extends BaseModalPage {\n+\n+    private static final long serialVersionUID = 4114026480146090962L;\n+\n+    public BulkActionModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final List<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Collection<ActionLink.ActionType> actions,\n+            final BaseRestClient bulkActionExecutor,\n+            final String idFieldName,\n+            final String pageId) {\n+\n+        super();\n+\n+        final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n+\n+            @Override\n+            public Iterator<? extends T> iterator(long first, long count) {\n+                return items.iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return items.size();\n+            }\n+\n+            @Override\n+            public IModel<T> model(T object) {\n+                return new CompoundPropertyModel<T>(object);\n+            }\n+        };\n+\n+        add(new AjaxFallbackDefaultDataTable<T, S>(\n+                \"selectedObjects\",\n+                new ArrayList<IColumn<T, S>>(columns.subList(1, columns.size() - 1)),\n+                dataProvider,\n+                Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n+\n+        final ActionLinksPanel actionPanel = new ActionLinksPanel(\"actions\", new Model(), getPageReference());\n+        add(actionPanel);\n+\n+        for (ActionLink.ActionType action : actions) {\n+            final BulkAction bulkAction = new BulkAction();\n+            for (Object item : items) {\n+                try {\n+                    bulkAction.addTarget(getTargetId(item, idFieldName).toString());\n+                } catch (Exception e) {\n+                    LOG.error(\"Error retrieving item id {}\", idFieldName, e);\n+                }\n+            }\n+\n+            switch (action) {\n+                case DELETE:\n+                    bulkAction.setOperation(BulkAction.Type.DELETE);\n+                    break;\n+                case SUSPEND:\n+                    bulkAction.setOperation(BulkAction.Type.SUSPEND);\n+                    break;\n+                case REACTIVATE:\n+                    bulkAction.setOperation(BulkAction.Type.REACTIVATE);\n+                    break;\n+                default:\n+                    LOG.error(\"Bulk action type not supported\");\n+            }\n+\n+            actionPanel.add(new ActionLink() {\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    try {\n+                        final BulkActionRes res = (BulkActionRes) bulkActionExecutor.getClass().\n+                                getMethod(\"bulkAction\", BulkAction.class).invoke(bulkActionExecutor, bulkAction);\n+\n+                        setResponsePage(new BulkActionResultModalPage(pageRef, window, items, columns, res, idFieldName));\n+                    } catch (Exception e) {\n+                        LOG.error(\"Operation {} not supported\", bulkAction.getOperation(), e);\n+                    }\n+\n+                }\n+            }, action, pageId, !items.isEmpty());\n+        }\n+\n+        final Form form = new Form(\"form\");\n+        add(form);\n+\n+        final AjaxButton cancel =\n+                new ClearIndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\"), getPageReference()) {\n+\n+                    private static final long serialVersionUID = -958724007591692537L;\n+\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        window.close(target);\n+                    }\n+                };\n+\n+        cancel.setDefaultFormProcessing(false);\n+        form.add(cancel);\n+    }\n+\n+    private Object getTargetId(final Object target, final String idFieldName)\n+            throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {\n+        final PropertyDescriptor propDesc =\n+                BeanUtils.getPropertyDescriptor(target.getClass(), idFieldName);\n+        final Object id = propDesc.getReadMethod().invoke(target, new Object[0]);\n+        return id;\n+    }\n+}"},{"sha":"5efa9f5ef491223f90091749cac936ffaad48a67","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionResultModalPage.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.pages;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionResultColumn;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * Show user or role status after performing a successful operation.\n+ */\n+public class BulkActionResultModalPage<T, S> extends BaseModalPage {\n+\n+    /**\n+     * Serial version id.\n+     */\n+    private static final long serialVersionUID = 2646115294319713724L;\n+\n+    public BulkActionResultModalPage(\n+            final PageReference pageRef,\n+            final ModalWindow window,\n+            final List<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final BulkActionRes results,\n+            final String idFieldName) {\n+\n+        super();\n+\n+        final List<IColumn<T, S>> newColumnList = new ArrayList<IColumn<T, S>>(columns.subList(1, columns.size() - 1));\n+        newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(results, idFieldName));\n+\n+        final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n+\n+            @Override\n+            public Iterator<? extends T> iterator(long first, long count) {\n+                return items.iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return items.size();\n+            }\n+\n+            @Override\n+            public IModel<T> model(T object) {\n+                return new CompoundPropertyModel<T>(object);\n+            }\n+        };\n+\n+        add(new AjaxFallbackDefaultDataTable<T, S>(\n+                \"selectedObjects\",\n+                newColumnList,\n+                dataProvider,\n+                Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n+\n+        final AjaxLink close = new IndicatingAjaxLink(\"close\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                window.close(target);\n+            }\n+        };\n+\n+        add(close);\n+\n+    }\n+}"},{"sha":"c06cf4ca6b5f06d26d076721e344ccbe68dd575b","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -255,7 +255,7 @@ public Page createPage() {\n \n                         editConfigWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Configuration\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Configuration\");\n \n                 panel.add(new ActionLink() {\n \n@@ -276,7 +276,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         target.add(confContainer);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Configuration\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Configuration\");\n \n                 cellItem.add(panel);\n             }\n@@ -424,7 +424,7 @@ public Page createPage() {\n \n                         editNotificationWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Notification\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Notification\");\n \n                 panel.add(new ActionLink() {\n \n@@ -445,7 +445,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         target.add(notificationContainer);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Notification\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Notification\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"cc3be4f9999804b243ad4ce25b05ccef6e4954f3","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -483,7 +483,7 @@ public Page createPage() {\n                         });\n                         reportExecMessageWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Reports\", \"read\", StringUtils.hasText(model.getObject().getMessage()));\n+                }, ActionLink.ActionType.EDIT, \"Reports\", StringUtils.hasText(model.getObject().getMessage()));\n \n                 panel.add(new ActionLink() {\n \n@@ -504,7 +504,7 @@ public Page createPage() {\n                         });\n                         reportExecExportWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EXPORT, \"Reports\", \"read\", ReportExecStatus.SUCCESS.name().equals(\n+                }, ActionLink.ActionType.EXPORT, \"Reports\", ReportExecStatus.SUCCESS.name().equals(\n                         model.getObject().getStatus()));\n \n                 panel.add(new ActionLink() {\n@@ -526,7 +526,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(feedbackPanel);\n                         target.add(executions);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Reports\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Reports\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"449e7f8679b37e87b3abce3b843f2a729e182c55","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -174,7 +174,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Reports\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Reports\");\n \n                 panel.add(new ActionLink() {\n \n@@ -192,7 +192,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(feedbackPanel);\n                         target.add(reportContainer);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Reports\", \"execute\");\n+                }, ActionLink.ActionType.EXECUTE, \"Reports\");\n \n                 panel.add(new ActionLink() {\n \n@@ -209,7 +209,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(reportContainer);\n                         target.add(feedbackPanel);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Reports\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Reports\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"2b319a4ff0980d95227ebeecae9c83e04ff0dc6f","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -238,7 +238,7 @@ public Page createPage() {\n \n                         editResourceWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Resources\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Resources\");\n \n                 panel.add(new ActionLink() {\n \n@@ -260,7 +260,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(feedbackPanel);\n                         target.add(resourceContainer);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Resources\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Resources\");\n \n                 cellItem.add(panel);\n             }\n@@ -387,7 +387,7 @@ public Page createPage() {\n \n                         editConnectorWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Connectors\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Connectors\");\n \n                 panel.add(new ActionLink() {\n \n@@ -407,7 +407,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(connectorContainer);\n                         target.add(feedbackPanel);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Connectors\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Connectors\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"0bbe9149e81935a1add169710d4ce8cbad0855ee","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -734,7 +734,7 @@ public void populateItem(final Item<ICellPopulator<AbstractBaseBean>> cellItem,\n \n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n \n-                panel.add(new ActionLink() {\n+                panel.addWithRoles(new ActionLink() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -759,7 +759,7 @@ public Page createPage() {\n                     }\n                 }, ActionType.EDIT, readPermissions);\n \n-                panel.add(new ActionLink() {\n+                panel.addWithRoles(new ActionLink() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"52abd65b4521d54e8a4d649f49610504a9e0d390","filename":"console/src/main/java/org/apache/syncope/console/pages/TaskModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -148,7 +148,7 @@ public Page createPage() {\n                         });\n                         taskExecMessageWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\", StringUtils.hasText(model.getObject().getMessage()));\n+                }, ActionLink.ActionType.EDIT, \"Tasks\", StringUtils.hasText(model.getObject().getMessage()));\n \n                 panel.add(new ActionLink() {\n \n@@ -169,7 +169,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(feedbackPanel);\n                         target.add(executions);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Tasks\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"5c29579783f517c214e43c39aa9ae32857c198fb","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -153,7 +153,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(feedbackPanel);\n                         target.add(approvalContainer);\n                     }\n-                }, ActionLink.ActionType.CLAIM, \"Approval\", \"claim\");\n+                }, ActionLink.ActionType.CLAIM, \"Approval\");\n \n                 panel.add(new ActionLink() {\n \n@@ -173,7 +173,7 @@ public Page createPage() {\n \n                         editApprovalWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Approval\", \"read\",\n+                }, ActionLink.ActionType.EDIT, \"Approval\",\n                         SyncopeSession.get().getUserId().equals(formTO.getOwner()));\n \n                 cellItem.add(panel);\n@@ -269,7 +269,7 @@ public Page createPage() {\n \n                         editUserRequestWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"UserRequest\", \"read\",\n+                }, ActionLink.ActionType.EDIT, \"UserRequest\",\n                         model.getObject().getType() != UserRequestType.DELETE);\n \n                 panel.add(new ActionLink() {\n@@ -292,7 +292,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         target.add(userRequestContainer);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Users\", \"delete\",\n+                }, ActionLink.ActionType.DELETE, \"Users\",\n                         model.getObject().getType() == UserRequestType.DELETE);\n \n                 panel.add(new ActionLink() {\n@@ -314,7 +314,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         target.add(userRequestContainer);\n                     }\n-                }, ActionLink.ActionType.DELETE, \"UserRequest\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"UserRequest\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"91c955280300d39a30fb3e23b95dcc3fbf71d166","filename":"console/src/main/java/org/apache/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -31,6 +31,7 @@\n import org.apache.wicket.Session;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -69,6 +70,7 @@ public Users(final PageParameters parameters) {\n                 new UserSearchResultPanel(\"listResult\", false, null, getPageReference(), restClient);\n         add(listResult);\n \n+\n         // create new user\n         final AjaxLink createLink = new ClearIndicatingAjaxLink(\"createLink\", getPageReference()) {\n "},{"sha":"ac74e06801a938ebc0a892057bd42eb7ba7e47c8","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -30,6 +31,7 @@\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -42,7 +44,6 @@\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.event.IEventSource;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -137,7 +138,7 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     /**\n      * Result table.\n      */\n-    private AjaxFallbackDefaultDataTable<AbstractAttributableTO, String> resultTable;\n+    private AjaxDataTablePanel<AbstractAttributableTO, String> resultTable;\n \n     /**\n      * Data provider used to search for users.\n@@ -353,8 +354,16 @@ private void updateResultTable(final boolean create, final int rows) {\n                 : (int) resultTable.getCurrentPage())\n                 : 0;\n \n-        resultTable = new AjaxFallbackDefaultDataTable<AbstractAttributableTO, String>(\n-                \"resultTable\", getColumns(), dataProvider, rows);\n+        resultTable = new AjaxDataTablePanel<AbstractAttributableTO, String>(\n+                \"resultTable\",\n+                getColumns(),\n+                dataProvider,\n+                rows,\n+                getBulkActions(),\n+                restClient,\n+                \"id\",\n+                getPageId(),\n+                page.getPageReference());\n \n         resultTable.setCurrentPage(currentPage);\n \n@@ -437,4 +446,8 @@ public void setRows(int rows) {\n             this.rows = rows;\n         }\n     }\n+\n+    protected abstract <T extends AbstractAttributableTO> Collection<ActionLink.ActionType> getBulkActions();\n+\n+    protected abstract String getPageId();\n }"},{"sha":"58b6d3f27a70f787470da70c3de6910594e88361","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AjaxDataTablePanel.java","status":"added","additions":173,"deletions":0,"changes":173,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,173 @@\n+/*\n+ * Copyright 2013 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.syncope.console.pages.AbstractBasePage;\n+import org.apache.syncope.console.pages.BulkActionModalPage;\n+import org.apache.syncope.console.pages.panels.AbstractSearchResultPanel.EventDataWrapper;\n+import org.apache.syncope.console.rest.BaseRestClient;\n+import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AjaxDataTablePanel<T, S> extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(AjaxDataTablePanel.class);\n+\n+    private final CheckGroup<T> group;\n+\n+    private final Form bulkActionForm;\n+\n+    private final AjaxFallbackDefaultDataTable dataTable;\n+\n+    public AjaxDataTablePanel(\n+            final String id,\n+            final List<IColumn<T, S>> columns,\n+            final ISortableDataProvider<T, S> dataProvider,\n+            final int rowsPerPage) {\n+        super(id);\n+\n+        this.bulkActionForm = null;\n+        this.group = null;\n+        dataTable = new AjaxFallbackDefaultDataTable(\"dataTable\", columns, dataProvider, rowsPerPage);\n+\n+        Fragment fragment = new Fragment(\"tablePanel\", \"bulkNotAvailable\", this);\n+        fragment.add(dataTable);\n+\n+        add(fragment);\n+    }\n+\n+    public AjaxDataTablePanel(\n+            final String id,\n+            final List<IColumn<T, S>> columns,\n+            final ISortableDataProvider<T, S> dataProvider,\n+            final int rowsPerPage,\n+            final Collection<ActionLink.ActionType> actions,\n+            final BaseRestClient bulkActionExecutor,\n+            final String itemIdFiled,\n+            final String pageId,\n+            final PageReference pageRef) {\n+\n+        super(id);\n+\n+        final ModalWindow bulkModalWin = new ModalWindow(\"bulkModal\");\n+        bulkModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        bulkModalWin.setInitialHeight(600);\n+        bulkModalWin.setInitialWidth(900);\n+        bulkModalWin.setCookieName(\"bulk-modal\");\n+        add(bulkModalWin);\n+\n+        bulkModalWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487149L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                final EventDataWrapper data = new EventDataWrapper();\n+                data.setTarget(target);\n+                data.setRows(rowsPerPage);\n+\n+                send(pageRef.getPage(), Broadcast.BREADTH, data);\n+\n+                final AbstractBasePage page = (AbstractBasePage) pageRef.getPage();\n+\n+                if (page.isModalResult()) {\n+                    // reset modal result\n+                    page.setModalResult(false);\n+                    // set operation succeeded\n+                    getSession().info(getString(\"operation_succeeded\"));\n+                    // refresh feedback panel\n+                    target.add(page.getFeedbackPanel());\n+                }\n+            }\n+        });\n+\n+        Fragment fragment = new Fragment(\"tablePanel\", \"bulkAvailable\", this);\n+        add(fragment);\n+\n+        bulkActionForm = new Form(\"groupForm\");\n+        fragment.add(bulkActionForm);\n+\n+        group = new CheckGroup<T>(\"checkgroup\", new ArrayList<T>());\n+        bulkActionForm.add(group);\n+\n+        columns.add(0, new CheckGroupColumn<T, S>(group));\n+        dataTable = new AjaxFallbackDefaultDataTable(\"dataTable\", columns, dataProvider, rowsPerPage);\n+        group.add(dataTable);\n+\n+        fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, pageRef) {\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                bulkModalWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690941L;\n+\n+                    @Override\n+                    public Page createPage() {\n+                        return new BulkActionModalPage(\n+                                getPage().getPageReference(),\n+                                bulkModalWin,\n+                                new ArrayList<T>(group.getModelObject()),\n+                                columns,\n+                                actions,\n+                                bulkActionExecutor,\n+                                itemIdFiled,\n+                                pageId);\n+                    }\n+                });\n+\n+                bulkModalWin.show(target);\n+            }\n+        });\n+    }\n+\n+    public final void setCurrentPage(final long page) {\n+        dataTable.setCurrentPage(page);\n+    }\n+\n+    public final long getRowCount() {\n+        return dataTable.getRowCount();\n+    }\n+\n+    public final long getCurrentPage() {\n+        return dataTable.getCurrentPage();\n+    }\n+\n+    public final long getPageCount() {\n+        return dataTable.getPageCount();\n+    }\n+}"},{"sha":"c58e187a62e1cff6a40f0c2d7dd03898122ef74e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -144,7 +144,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -162,7 +162,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(getPage().get(\"feedback\"));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -179,7 +179,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Tasks\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"2480e6039c774e3ea52bdedb2be71b07bb530344","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -169,7 +169,7 @@ public Page createPage() {\n \n                         mwindow.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Policies\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Policies\");\n \n                 panel.add(new ActionLink() {\n \n@@ -192,7 +192,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Policies\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Policies\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"b576414d025c45645408a1ed6050fc6dfff8ada2","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -159,7 +159,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -177,7 +177,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(getPage().get(\"feedback\"));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -194,7 +194,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Tasks\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"3d1b326b4fa625570e6917a2d951901f4d168ed1","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchResultPanel.java","status":"modified","additions":49,"deletions":34,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -19,6 +19,8 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -29,6 +31,7 @@\n import org.apache.syncope.console.pages.StatusModalPage;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -43,116 +46,128 @@\n import org.apache.wicket.model.ResourceModel;\n \n public class RoleSearchResultPanel extends AbstractSearchResultPanel {\n-    \n+\n     private static final long serialVersionUID = -1180593361914008764L;\n-    \n+\n+    private final static String PAGEID = \"Roles\";\n+\n     public <T extends AbstractAttributableTO> RoleSearchResultPanel(final String id, final boolean filtered,\n             final NodeCond searchCond, final PageReference callerRef,\n             final AbstractAttributableRestClient restClient) {\n-        \n+\n         super(id, filtered, searchCond, callerRef, restClient);\n     }\n-    \n+\n     @Override\n     protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n         final List<IColumn<AbstractAttributableTO, String>> columns =\n                 new ArrayList<IColumn<AbstractAttributableTO, String>>();\n-        \n+\n         final String[] colnames = {\"id\", \"name\", \"entitlements\"};\n         for (String name : colnames) {\n             columns.add(\n                     new PropertyColumn<AbstractAttributableTO, String>(new ResourceModel(name, name), name, name));\n         }\n-        \n+\n         columns.add(new AbstractColumn<AbstractAttributableTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = -3503023501954863131L;\n-            \n+\n             @Override\n             public String getCssClass() {\n                 return \"action\";\n             }\n-            \n+\n             @Override\n             public void populateItem(final Item<ICellPopulator<AbstractAttributableTO>> cellItem,\n                     final String componentId, final IModel<AbstractAttributableTO> model) {\n-                \n+\n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, page.getPageReference());\n-                \n+\n                 panel.add(new ActionLink() {\n-                    \n+\n                     private static final long serialVersionUID = -3722207913631435501L;\n-                    \n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n-                            \n+\n                             private static final long serialVersionUID = -7834632442532690940L;\n-                            \n+\n                             @Override\n                             public Page createPage() {\n                                 return new StatusModalPage(page.getPageReference(), statusmodal, model.getObject());\n                             }\n                         });\n-                        \n+\n                         statusmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.SEARCH, \"Roles\", \"read\");\n-                \n+                }, ActionLink.ActionType.SEARCH, PAGEID);\n+\n                 panel.add(new ActionLink() {\n-                    \n+\n                     private static final long serialVersionUID = -3722207913631435501L;\n-                    \n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         editmodal.setPageCreator(new ModalWindow.PageCreator() {\n-                            \n+\n                             private static final long serialVersionUID = -7834632442532690940L;\n-                            \n+\n                             @Override\n                             public Page createPage() {\n                                 return new RoleModalPage(\n                                         page.getPageReference(), editmodal, (RoleTO) model.getObject());\n                             }\n                         });\n-                        \n+\n                         editmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Roles\", \"update\");\n-                \n+                }, ActionLink.ActionType.EDIT, PAGEID);\n+\n                 panel.add(new ActionLink() {\n-                    \n+\n                     private static final long serialVersionUID = -3722207913631435501L;\n-                    \n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             final RoleTO roleTO = (RoleTO) restClient.delete(model.getObject().getId());\n-                            \n+\n                             page.setModalResult(true);\n-                            \n+\n                             editmodal.setPageCreator(new ModalWindow.PageCreator() {\n-                                \n+\n                                 private static final long serialVersionUID = -7834632442532690940L;\n-                                \n+\n                                 @Override\n                                 public Page createPage() {\n                                     return new ResultStatusModalPage(editmodal, roleTO);\n                                 }\n                             });\n-                            \n+\n                             editmodal.show(target);\n                         } catch (SyncopeClientCompositeErrorException scce) {\n                             error(getString(\"operation_error\") + \": \" + scce.getMessage());\n                             target.add(feedbackPanel);\n                         }\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Roles\", \"delete\");\n-                \n+                }, ActionLink.ActionType.DELETE, PAGEID);\n+\n                 cellItem.add(panel);\n             }\n         });\n-        \n+\n         return columns;\n     }\n+\n+    @Override\n+    protected Collection<ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>singletonList(ActionLink.ActionType.DELETE);\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return PAGEID;\n+    }\n }"},{"sha":"180d778195ef1a9aeca80b79f371f76f82a672b4","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -158,7 +158,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -176,7 +176,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(getPage().get(\"feedback\"));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -194,7 +194,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(getPage().get(\"feedback\"));\n                         target.add(container);\n                     }\n-                }, ActionLink.ActionType.DRYRUN, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.DRYRUN, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -211,7 +211,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Tasks\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"c7a8e4b2f76b25ca5017bb196ba51fedbca97b01","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SelectOnlyUserSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -90,7 +90,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                 rowModel.getObject().getId()));\n                         window.close(target);\n                     }\n-                }, ActionLink.ActionType.SELECT, \"Users\", \"read\");\n+                }, ActionLink.ActionType.SELECT, \"Users\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"be3a4c39c90c52e59f05da83c37797ca6a43ecfe","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -160,7 +160,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.EDIT, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -181,7 +181,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.USER_TEMPLATE, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.USER_TEMPLATE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -202,7 +202,7 @@ public Page createPage() {\n \n                         window.show(target);\n                     }\n-                }, ActionLink.ActionType.ROLE_TEMPLATE, \"Tasks\", \"read\");\n+                }, ActionLink.ActionType.ROLE_TEMPLATE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -220,7 +220,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.EXECUTE, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.EXECUTE, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -238,7 +238,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DRYRUN, \"Tasks\", \"execute\");\n+                }, ActionLink.ActionType.DRYRUN, \"Tasks\");\n \n                 panel.add(new ActionLink() {\n \n@@ -255,7 +255,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         target.add(container);\n                         target.add(getPage().get(\"feedback\"));\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Tasks\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, \"Tasks\");\n \n                 cellItem.add(panel);\n             }"},{"sha":"13fa2f00b4dac906e0911120a5a94e99e2234a39","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":23,"deletions":3,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -21,6 +21,7 @@\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n import org.apache.syncope.common.search.NodeCond;\n@@ -39,6 +40,7 @@\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -57,6 +59,8 @@ public class UserSearchResultPanel extends AbstractSearchResultPanel {\n \n     private static final long serialVersionUID = -905187144506842332L;\n \n+    private final static String PAGEID = \"Users\";\n+\n     public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id, final boolean filtered,\n             final NodeCond searchCond, final PageReference callerRef, final AbstractAttributableRestClient restClient) {\n \n@@ -137,7 +141,7 @@ public Page createPage() {\n \n                         statusmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.ENABLE, \"Users\", \"update\");\n+                }, ActionLink.ActionType.ENABLE, PAGEID);\n \n                 panel.add(new ActionLink() {\n \n@@ -159,7 +163,7 @@ public Page createPage() {\n \n                         editmodal.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Users\", \"read\");\n+                }, ActionLink.ActionType.EDIT, PAGEID);\n \n                 panel.add(new ActionLink() {\n \n@@ -188,12 +192,28 @@ public Page createPage() {\n                             target.add(feedbackPanel);\n                         }\n                     }\n-                }, ActionLink.ActionType.DELETE, \"Users\", \"delete\");\n+                }, ActionLink.ActionType.DELETE, PAGEID);\n \n                 cellItem.add(panel);\n             }\n         });\n \n         return columns;\n     }\n+\n+    @Override\n+    protected <T extends AbstractAttributableTO> Collection<ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<ActionType>();\n+\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n+\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return PAGEID;\n+    }\n }"},{"sha":"c1719b012e673cc0d046e3678a161f0c599d3092","filename":"console/src/main/java/org/apache/syncope/console/rest/AbstractAttributableRestClient.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractAttributableRestClient.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -22,6 +22,8 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n \n public abstract class AbstractAttributableRestClient extends BaseRestClient {\n@@ -40,4 +42,6 @@ public abstract List<? extends AbstractAttributableTO> search(NodeCond searchCon\n     public abstract ConnObjectTO getConnectorObject(String resourceName, Long id);\n \n     public abstract AbstractAttributableTO delete(Long id);\n+\n+    public abstract BulkActionRes bulkAction(BulkAction action);\n }"},{"sha":"00c8f497f87252b82c759e6958a265422dd69741","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -27,6 +27,8 @@\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.RoleService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -88,4 +90,9 @@ public RoleTO update(final RoleMod roleMod) {\n     public RoleTO delete(final Long id) {\n         return getService(RoleService.class).delete(id);\n     }\n+\n+    @Override\n+    public BulkActionRes bulkAction(final BulkAction action) {\n+        return getService(RoleRestClient.class).bulkAction(action);\n+    }\n }"},{"sha":"47dcb13d50c4516acdea514dc14ec725de2c3efa","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -25,6 +25,8 @@\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -120,4 +122,9 @@ public UserTO suspend(final long userId, final List<StatusBean> statuses) {\n     public UserTO reactivate(final long userId, final List<StatusBean> statuses) {\n         return getService(UserService.class).reactivate(userId, StatusUtils.buildPropagationRequestTO(statuses, true));\n     }\n+\n+    @Override\n+    public BulkActionRes bulkAction(final BulkAction action) {\n+        return getService(UserService.class).bulkAction(action);\n+    }\n }"},{"sha":"b9e5b2528ec80d9a2082046cd53817b0154fc84e","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.beans.PropertyDescriptor;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+\n+public class ActionResultColumn<T, S> extends AbstractColumn<T, S> {\n+\n+    private static final long serialVersionUID = 7955560320949560716L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(ActionResultColumn.class);\n+\n+    private final BulkActionRes results;\n+\n+    private final String idFieldName;\n+\n+    public ActionResultColumn(final BulkActionRes results, final String idFieldName) {\n+        super(new Model());\n+        this.results = results;\n+        this.idFieldName = idFieldName;\n+    }\n+\n+    @Override\n+    public String getCssClass() {\n+        return \"bulkResultColumn\";\n+    }\n+\n+    @Override\n+    public Component getHeader(final String componentId) {\n+        return new Label(componentId, new ResourceModel(\"bulkActionResultLabel\", \"Result\"));\n+    }\n+\n+    @Override\n+    public void populateItem(Item<ICellPopulator<T>> item, String componentId, IModel<T> rowModel) {\n+        try {\n+            final PropertyDescriptor propDesc =\n+                    BeanUtils.getPropertyDescriptor(rowModel.getObject().getClass(), idFieldName);\n+            final Object id = propDesc.getReadMethod().invoke(rowModel.getObject(), new Object[0]);\n+            item.add(new Label(componentId, results.getResultMap().get(id.toString()).toString()));\n+        } catch (Exception e) {\n+            LOG.error(\"Errore retrieving target id value\", e);\n+        }\n+    }\n+}"},{"sha":"e5fffd85a0bb61aeb4ff4a4cb9473dce93cb6352","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxGroupSelectorPanel.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class CheckBoxGroupSelectorPanel<T> extends Panel {\n+\n+    private static final long serialVersionUID = 4062106303929176865L;\n+\n+    public CheckBoxGroupSelectorPanel(final String componentId, final CheckGroup<T> group) {\n+\n+        super(componentId);\n+        add(new CheckGroupSelector(\"groupselector\", group));\n+    }\n+}"},{"sha":"6f1006349674ed1b9713e0955f4f217071f2b1be","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxPanel.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+public class CheckBoxPanel<T> extends Panel {\n+\n+    private static final long serialVersionUID = 4062106303929176865L;\n+\n+    public CheckBoxPanel(String componentId, IModel<T> model, CheckGroup<T> checkGroup) {\n+        super(componentId, model);\n+        add(new Check<T>(\"check\", model, checkGroup));\n+    }\n+}"},{"sha":"489e002a89bb6306ac25cea2d8647790b20d4056","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckGroupColumn.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CheckGroupColumn<T, S> extends AbstractColumn<T, S> {\n+\n+    private static final long serialVersionUID = 7955560320949560715L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(CheckGroupColumn.class);\n+\n+    private CheckGroup<T> group;\n+\n+    public CheckGroupColumn(CheckGroup<T> checkGroup) {\n+        super(new Model());\n+        this.group = checkGroup;\n+    }\n+\n+    @Override\n+    public String getCssClass() {\n+        return \"checkGroupColumn\";\n+    }\n+\n+    @Override\n+    public Component getHeader(String componentId) {\n+        return new CheckBoxGroupSelectorPanel(componentId, group);\n+    }\n+\n+    @Override\n+    public void populateItem(Item<ICellPopulator<T>> item, String componentId, IModel<T> rowModel) {\n+        item.add(new CheckBoxPanel<T>(componentId, rowModel, group));\n+    }\n+    \n+}"},{"sha":"11437b265388f095283b2cb69190584b6783d660","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":26,"deletions":12,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -27,20 +27,34 @@ public abstract class ActionLink implements Serializable {\n \n     public enum ActionType {\n \n-        CREATE,\n-        EDIT,\n-        USER_TEMPLATE,\n-        ROLE_TEMPLATE,\n-        ENABLE,\n-        SEARCH,\n-        DELETE,\n-        EXECUTE,\n-        DRYRUN,\n-        CLAIM,\n-        SELECT,\n-        EXPORT\n+        CREATE(\"create\"),\n+        EDIT(\"read\"),\n+        USER_TEMPLATE(\"read\"),\n+        ROLE_TEMPLATE(\"read\"),\n+        ENABLE(\"update\"),\n+        SEARCH(\"read\"),\n+        DELETE(\"delete\"),\n+        EXECUTE(\"execute\"),\n+        DRYRUN(\"execute\"),\n+        CLAIM(\"claim\"),\n+        SELECT(\"read\"),\n+        EXPORT(\"read\"),\n+        SUSPEND(\"update\"),\n+        REACTIVATE(\"update\");\n \n+        private final String actionId;\n+\n+        private ActionType(final String actionId) {\n+            this.actionId = actionId;\n+        }\n+\n+        public String getActionId() {\n+            return actionId;\n+        }\n     }\n \n     public abstract void onClick(final AjaxRequestTarget target);\n+\n+    public void postClick() {\n+    }\n }"},{"sha":"43752e8fde5c8f12cca10145174edee505663497","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":78,"deletions":34,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -60,26 +60,35 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         super.add(new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelSelect\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelExport\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelSuspend\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n     }\n \n-    public void add(final ActionLink link, final ActionLink.ActionType type, final String pageId,\n-            final String actionId) {\n+    public void add(\n+            final ActionLink link, final ActionLink.ActionType type, final String pageId, final String actionId) {\n \n-        add(link, type, xmlRolesReader.getAllAllowedRoles(pageId, actionId), true);\n+        addWithRoles(link, type, xmlRolesReader.getAllAllowedRoles(pageId, actionId), true);\n     }\n \n-    public void add(final ActionLink link, final ActionLink.ActionType type, final String pageId,\n-            final String actionId, final boolean enabled) {\n+    public void add(\n+            final ActionLink link, final ActionLink.ActionType type, final String pageId) {\n \n-        add(link, type, xmlRolesReader.getAllAllowedRoles(pageId, actionId), enabled);\n+        add(link, type, pageId, true);\n     }\n \n-    public void add(final ActionLink link, final ActionLink.ActionType type, final String roles) {\n-        add(link, type, roles, true);\n+    public void add(\n+            final ActionLink link, final ActionLink.ActionType type, final String pageId, final boolean enabled) {\n+\n+        addWithRoles(link, type, xmlRolesReader.getAllAllowedRoles(pageId, type.getActionId()), enabled);\n+    }\n+\n+    public void addWithRoles(\n+            final ActionLink link, final ActionLink.ActionType type, final String roles) {\n+        addWithRoles(link, type, roles, true);\n     }\n \n-    public void add(final ActionLink link, final ActionLink.ActionType type, final String roles,\n-            final boolean enabled) {\n+    public void addWithRoles(\n+            final ActionLink link, final ActionLink.ActionType type, final String roles, final boolean enabled) {\n \n         Fragment fragment = null;\n \n@@ -88,9 +97,9 @@ public void add(final ActionLink link, final ActionLink.ActionType type, final S\n             case CLAIM:\n                 fragment = new Fragment(\"panelClaim\", \"fragmentClaim\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"claimLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"claimLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -102,9 +111,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case CREATE:\n                 fragment = new Fragment(\"panelCreate\", \"fragmentCreate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"createLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"createLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -116,9 +125,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case EDIT:\n                 fragment = new Fragment(\"panelEdit\", \"fragmentEdit\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"editLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"editLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -130,9 +139,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case USER_TEMPLATE:\n                 fragment = new Fragment(\"panelUserTemplate\", \"fragmentUserTemplate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"userTemplateLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"userTemplateLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -144,9 +153,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case ROLE_TEMPLATE:\n                 fragment = new Fragment(\"panelRoleTemplate\", \"fragmentRoleTemplate\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"roleTemplateLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"roleTemplateLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -158,9 +167,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case ENABLE:\n                 fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"enableLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"enableLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -172,9 +181,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case SEARCH:\n                 fragment = new Fragment(\"panelSearch\", \"fragmentSearch\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"searchLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"searchLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -186,9 +195,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case EXECUTE:\n                 fragment = new Fragment(\"panelExecute\", \"fragmentExecute\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"executeLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"executeLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -200,9 +209,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case DRYRUN:\n                 fragment = new Fragment(\"panelDryRun\", \"fragmentDryRun\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"dryRunLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"dryRunLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -214,9 +223,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case DELETE:\n                 fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n \n-                fragment.addOrReplace(new IndicatingDeleteOnConfirmAjaxLink<Void>(\"deleteLink\", pageRef) {\n+                fragment.addOrReplace(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -229,9 +238,9 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case SELECT:\n                 fragment = new Fragment(\"panelSelect\", \"fragmentSelect\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"selectLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"selectLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -244,9 +253,37 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n             case EXPORT:\n                 fragment = new Fragment(\"panelExport\", \"fragmentExport\", this);\n \n-                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"exportLink\", pageRef) {\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink(\"exportLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case SUSPEND:\n+                fragment = new Fragment(\"panelSuspend\", \"fragmentSuspend\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"suspendLink\", pageRef) {\n \n-                    private static final long serialVersionUID = -6957616042924610290L;\n+                    private static final long serialVersionUID = -6957616042924610291L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target);\n+                    }\n+                });\n+                break;\n+\n+            case REACTIVATE:\n+                fragment = new Fragment(\"panelReactivate\", \"fragmentReactivate\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"reactivateLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -6957616042924610292L;\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n@@ -308,6 +345,13 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelExport\", \"emptyFragment\", this));\n                 break;\n \n+            case SUSPEND:\n+                super.addOrReplace(new Fragment(\"panelSuspend\", \"emptyFragment\", this));\n+                break;\n+\n+            case REACTIVATE:\n+                super.addOrReplace(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n+                break;\n             default:\n             // do nothing\n         }"},{"sha":"fa1dce2ceed24c73a2bc2ad9c9659b5716909168","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -40,8 +40,9 @@ public AjaxDropDownChoicePanel(final String id, final String name, final IModel<\n     public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model, boolean enableOnBlur) {\n         super(id, name, model);\n \n-        field = new DropDownChoice<T>(\"dropDownChoiceField\", model, Collections.<T>emptyList(),\n-                new ChoiceRenderer<T>());\n+        field = new DropDownChoice<T>(\n+                \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n+        \n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {"},{"sha":"94fe16363c0e110dadcb4f5964bf56f4e7d6cb76","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionModalPage.html","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,43 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<wicket:head>\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+</wicket:head>\n+<wicket:extend>\n+  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+\n+<div id=\"selectedObjects\">\n+  <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n+\n+  <div id=\"actionRow\" class=\"pageRowElement\">\n+    <div id=\"actions\">\n+      <div id=\"actionPanel\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+        <span wicket:id=\"actions\">[Actions]</span>\n+      </div>\n+\n+      <div id=\"cancelBtmForm\">\n+        <form wicket:id=\"form\">\n+          <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n+        </form>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+</wicket:extend>"},{"sha":"bd28d808759017a2de701059bfe040e4235e45d3","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionModalPage.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.properties?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Bulk action"},{"sha":"3989422d593b0061e723b739981a1a20ea4f61dc","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionModalPage_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage_it.properties?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Operazioni di gruppo"},{"sha":"16dd2565494d614ee4ad405fc6a94bd29a43e348","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionResultModalPage.html","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,57 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<wicket:head>\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+</wicket:head>\n+<wicket:extend>\n+  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+\n+<div id=\"selectedObjects\">\n+  <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n+\n+  <div id=\"actionRow\" class=\"pageRowElement\">\n+    <div id=\"actions\">\n+      <div id=\"cancelBtmForm\" style=\"padding: 0px\">\n+        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"close\">\n+          <wicket:message key=\"close\"/>\n+        </a>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"7ba550cab5cf5be0c72872a87beac069dd7c8739","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionResultModalPage.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.properties?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Bulk Action Result\n+close=Close\n+bulkActionResultLabel=Result"},{"sha":"4268c002b024dd50d705b821f327204f711428b9","filename":"console/src/main/resources/org/apache/syncope/console/pages/BulkActionResultModalPage_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Risultato esecuzion Bulk Action\n+close=Chiudi\n+bulkActionResultLabel=Esito"},{"sha":"a1510a455d139f7c922c2b332507a6e0827a9959","filename":"console/src/main/resources/org/apache/syncope/console/pages/Users_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -18,7 +18,6 @@ tab1=Elenco\n tab2=Ricerca\n search=Cerca\n create_user=Crea nuovo utente\n-\n search_results_title=Risultati ricerca:\n search_noResults=Nessuna corrispondenza trovata.\n reset=Reset"},{"sha":"7643a43320c624ddb0cc9dc7c70ce50dd9beac14","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.html","status":"modified","additions":39,"deletions":39,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -17,53 +17,53 @@\n under the License.\n -->\n <wicket:head>\n-    <style>\n-        .settingsPos{\n-            position:relative; \n-            top:34px;\n-            left:93.2%;\n-            width:10px;\n-            text-decoration: none;\n-        }\n+  <style>\n+    .settingsPos{\n+      position:relative; \n+      top:34px;\n+      left:93.2%;\n+      width:10px;\n+      text-decoration: none;\n+    }\n \n-        .settingsPosMultiPage{\n-            position:relative; \n-            top:64px;\n-            left:93.2%;\n-            width:10px;\n-            text-decoration: none;\n-        }\n-    </style>\n+    .settingsPosMultiPage{\n+      position:relative; \n+      top:64px;\n+      left:93.2%;\n+      width:10px;\n+      text-decoration: none;\n+    }\n+  </style>\n </wicket:head>\n <html>\n-    <wicket:panel>\n+  <wicket:panel>\n \n-        <div wicket:id=\"container\">\n-            <a wicket:id=\"reload\">\n-                <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n-            </a>\n-            <a wicket:id=\"displayAttrsLink\">\n-                <img src=\"img/settings-icon.png\" alt=\"settings icon\" class=\"drop_button\" />\n-            </a>\n+    <div wicket:id=\"container\">\n+      <a wicket:id=\"reload\">\n+        <img src=\"img/reload.png\" alt=\"reload\" class=\"drop_button\" />\n+      </a>\n+      <a wicket:id=\"displayAttrsLink\">\n+        <img src=\"img/settings-icon.png\" alt=\"settings icon\" class=\"drop_button\" />\n+      </a>\n \n-            <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"resultTable\"/>\n+      <span wicket:id=\"resultTable\">[Table]</span>\n \n-            <span style=\"float:right\">\n-                <form wicket:id=\"paginator\" style=\"display:inline\">\n-                    <label><wicket:message key=\"displayRows\"/></label>\n-                    <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n-                </form>\n-            </span>\n-        </div>\n+      <span style=\"float:right\">\n+        <form wicket:id=\"paginator\" style=\"display:inline\">\n+          <label><wicket:message key=\"displayRows\"/></label>\n+          <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n+        </form>\n+      </span>\n+    </div>\n \n-        <div wicket:id=\"editModal\">\n-        </div>\n+    <div wicket:id=\"editModal\">\n+    </div>\n \n-        <div wicket:id=\"displayModal\">\n-        </div>\n+    <div wicket:id=\"displayModal\">\n+    </div>\n \n-        <div wicket:id=\"statusModal\">\n-        </div>\n+    <div wicket:id=\"statusModal\">\n+    </div>\n \n-    </wicket:panel>\n+  </wicket:panel>\n </html>"},{"sha":"8ccb9160d4cad2cef5a4802d6b88ee12bf996427","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AjaxDataTablePanel.html","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,45 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<wicket:head>\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+</wicket:head>\n+<wicket:panel>\n+  <span wicket:id=\"tablePanel\">[Table panel]</span>\n+  <div wicket:id=\"bulkModal\" />\n+\n+  <wicket:fragment wicket:id=\"bulkAvailable\">\n+    <form wicket:id=\"groupForm\">\n+      <span wicket:id=\"checkgroup\">\n+        <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"dataTable\">[DataTable]</table>\n+      </span>\n+    </form>\n+    <div class=\"bulkAction\">\n+      <div class=\"bulkActionCell\" style=\"width: 40px\">\n+        <a href=\"#\" wicket:id=\"bulkActionLink\">\n+          <img src=\"img/actions/bulk.png\" alt=\"bulk action icon\"  title=\"Bulk action\"/>\n+        </a>\n+      </div>\n+    </div>\n+  </wicket:fragment>\n+\n+  <wicket:fragment wicket:id=\"bulkNotAvailable\">\n+    <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"dataTable\">[DataTable]</table>\n+  </wicket:fragment>\n+\n+</wicket:panel>"},{"sha":"fde18405a8051f2dda3736df0482e60a3ebe09f8","filename":"console/src/main/resources/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxGroupSelectorPanel.html","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxGroupSelectorPanel.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,21 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<wicket:panel>\n+   <input wicket:id=\"groupselector\" type=\"checkbox\"/>\n+</wicket:panel>"},{"sha":"012a5d711a1b8dc076060b9a09c026c20409fc81","filename":"console/src/main/resources/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/CheckBoxPanel.html","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckBoxPanel.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,21 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<wicket:panel>\n+   <input wicket:id=\"check\" type=\"checkbox\"/>\n+</wicket:panel>"},{"sha":"2e5e2b34dbad0eb1901e0c06c43aa8a101e286ef","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -37,6 +37,8 @@\n   <span id=\"action\" wicket:id=\"panelExport\">[plus]</span>\n   <span id=\"action\" wicket:id=\"panelDelete\">[plus]</span>\n   <span id=\"action\" wicket:id=\"panelSelect\">[plus]</span>\n+  <span id=\"action\" wicket:id=\"panelSuspend\">[plus]</span>\n+  <span id=\"action\" wicket:id=\"panelReactivate\">[plus]</span>\n \n   <wicket:fragment wicket:id=\"fragmentClaim\">\n     <a href=\"#\" wicket:id=\"claimLink\"><img src=\"img/actions/claim.png\" alt=\"claim icon\" title=\"Claim\"/></a>\n@@ -86,6 +88,14 @@\n     <a href=\"#\" wicket:id=\"exportLink\"><img src=\"img/actions/export.png\" alt=\"export icon\"  title=\"Export\"/></a>\n   </wicket:fragment>\n \n+  <wicket:fragment wicket:id=\"fragmentSuspend\">\n+    <a href=\"#\" wicket:id=\"suspendLink\"><img src=\"img/actions/suspend.png\" alt=\"suspend icon\"  title=\"Suspend\"/></a>\n+  </wicket:fragment>\n+\n+  <wicket:fragment wicket:id=\"fragmentReactivate\">\n+    <a href=\"#\" wicket:id=\"reactivateLink\"><img src=\"img/actions/reactivate.png\" alt=\"reactivate icon\"  title=\"Reactivate\"/></a>\n+  </wicket:fragment>\n+\n   <wicket:fragment wicket:id=\"emptyFragment\">\n   </wicket:fragment>\n </wicket:panel>"},{"sha":"7519d8529720071c75797d2425764ba90fa4d31d","filename":"console/src/main/webapp/css/bulk.css","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbulk.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbulk.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbulk.css?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -0,0 +1,79 @@\n+    th.checkGroupColumn{\n+      width: 20px;\n+    }\n+\n+    td.checkGroupColumn{\n+      text-align: center;\n+    }\n+\n+    div.bulkAction{\n+      display:inline-table;\n+    }\n+\n+    div.bulkActionCell{\n+      display: table-cell;\n+      vertical-align: middle;\n+      text-align: center;\n+      width: 40px;\n+      padding-left: 7px;\n+    }\n+\n+    .pageRowElement{\n+      display: inline-table;\n+      width: 95%;\n+    }\n+\n+    div#selectedObjects{\n+      text-align: center;\n+      margin-top: 10px;\n+    }\n+\n+    div#selectedObjects table {\n+      margin: 1em 0;\n+      border-collapse: collapse;\n+    }\n+\n+    div#selectedObjects table td, div#selectedObjects table th {\n+      border: 1px solid #eee;\n+      padding: .6em 10px;\n+    }\n+\n+    div#actionRow{\n+      height: 30px;\n+      overflow: hidden;\n+      text-align: left;\n+      margin-top: 10px;\n+    }\n+\n+    div#actions{\n+      display: inline-table;\n+      height: 30px;\n+      overflow: hidden;\n+    }\n+\n+    div#actions div#actionPanel{\n+      display: table-cell;\n+      height: 30px;\n+      overflow: hidden;\n+      cursor: auto;\n+      background: none;\n+      padding: 0px 10px;\n+      vertical-align: middle;\n+    }\n+\n+    div#actions div#cancelBtmForm{\n+      display: table-cell;\n+      height: 30px;\n+      overflow: hidden;\n+      vertical-align: middle;\n+      padding-left: 3px;\n+    }\n+\n+    div#actions div#cancelBtmForm form{\n+      padding: 0px;\n+      margin: 0px;\n+    }\n+\n+    div#actions div#cancelBtmForm form input#cancel{\n+      padding: 0.6em 1em;\n+    }"},{"sha":"ea6d145a1d9275cb60fc1d876b7563d1fa3c1bef","filename":"console/src/main/webapp/img/actions/bulk.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fbulk.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fbulk.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fbulk.png?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef"},{"sha":"7ca2edbeda8e9962cc22cc30b50a54575758c82c","filename":"console/src/main/webapp/img/actions/reactivate.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Freactivate.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Freactivate.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Freactivate.png?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef"},{"sha":"7f327c487f914c82fa69ecb87fa3a326e241845c","filename":"console/src/main/webapp/img/actions/suspend.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsuspend.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsuspend.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsuspend.png?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef"},{"sha":"4e1063d0ef35e07c49b25ef61958dcdcd8f11027","filename":"console/src/test/java/org/apache/syncope/console/RoleTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -130,9 +130,9 @@ public void browseUserEditModal() {\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[4]/div/span[9]/a\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[5]/div/span[9]/a\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[4]/div/span[9]/a\");\n+        selenium.click(\"//table/tbody/tr/td[5]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div[contains(text(),'Username')]\\\");\", \"30000\");"},{"sha":"a33cf1384a4eb23d69600c505fd03fb630ddbf40","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -50,7 +50,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         //Edit vivaldi\n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[4]/div/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[5]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='Antonio Vivaldi']\\\");\", \"30000\");\n \n@@ -89,7 +89,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=4]/../td[4]/div/span[11]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=4]/../td[5]/div/span[11]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"9cd8fc6e0a4b909f37105102728b7364b22015d2","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -90,6 +90,15 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n                 throw new AccountPolicyException(\"Suffix not permitted\");\n             }\n         }\n+        \n+        LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAA suspender {}\", userSuspender);\n+        LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAA failed logins {}\", user.getFailedLogins());\n+        LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAA retries logins {}\", policy.getPermittedLoginRetries());\n+        LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAA user is suspended {}\", user.isSuspended());\n+        LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAA check {}\", (userSuspender != null\n+                && user.getFailedLogins() != null && policy.getPermittedLoginRetries() > 0\n+                && user.getFailedLogins() > policy.getPermittedLoginRetries() && !user.isSuspended()));\n+        \n \n         // check for subsequent failed logins\n         if (userSuspender != null"},{"sha":"959d80b59ecd01c2d609c22dd92260728b278ecb","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -29,6 +29,9 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.common.to.BulkActionRes.Status;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.PropagationStatusTO;\n@@ -695,4 +698,51 @@ protected UserTO doDelete(final Long userId) {\n \n         return userTO;\n     }\n+\n+    @PreAuthorize(\"(hasRole('USER_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE) or \"\n+    + \"(hasRole('USER_UPDATE') and \"\n+    + \"(#bulkAction.operation == #bulkAction.operation.REACTIVATE or \"\n+    + \"#bulkAction.operation == #bulkAction.operation.SUSPEND))\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/bulk\")\n+    public BulkActionRes bulkAction(@RequestBody final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+\n+        BulkActionRes res = new BulkActionRes();\n+\n+        switch (bulkAction.getOperation()) {\n+            case DELETE:\n+                for (String userId : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(doDelete(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing delete for user {}\", userId, e);\n+                        res.add(userId, Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            case SUSPEND:\n+                for (String userId : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(suspend(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing suspend for user {}\", userId, e);\n+                        res.add(userId, Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            case REACTIVATE:\n+                for (String userId : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(reactivate(Long.valueOf(userId)).getId(), Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing reactivate for user {}\", userId, e);\n+                        res.add(userId, Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            default:\n+        }\n+\n+        return res;\n+    }\n }"},{"sha":"dc885f14e8438946deadf55ef378a18d9f4abf87","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -27,6 +27,8 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.UserService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationRequestTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.rest.controller.UserController;\n@@ -170,4 +172,9 @@ public UserTO update(final Long userId, final UserMod userMod) {\n     public void setUriInfo(final UriInfo uriInfo) {\n         this.uriInfo = uriInfo;\n     }\n+\n+    @Override\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\n+        return userController.bulkAction(bulkAction);\n+    }\n }"},{"sha":"baaeab16a6b4d8de56419319ee8140c6a5cef987","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowUserSuspender.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -71,11 +71,6 @@ public void suspend(final SyncopeUser user, final boolean suspend) {\n \n                 taskExecutor.execute(tasks);\n             }\n-\n-            if (LOG.isDebugEnabled()) {\n-                final UserTO savedTO = userDataBinder.getUserTO(updated.getResult());\n-                LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n-            }\n         } catch (Exception e) {\n             LOG.error(\"Error during user suspension\", e);\n         }"},{"sha":"afd1765d343088350200b39628c540d152813c08","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/882798f1f4a36e216f9e0e0ac3000a3238467eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=882798f1f4a36e216f9e0e0ac3000a3238467eef","patch":"@@ -42,6 +42,9 @@\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.services.UserWorkflowService;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n+import org.apache.syncope.common.to.BulkActionRes.Status;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MembershipTO;\n@@ -2052,6 +2055,7 @@ public void mappingPurpose() {\n         assertNull(connObjectTO.getAttributeMap().get(\"email\"));\n     }\n \n+    @Test\n     public void issueSYNCOPE265() {\n         for (long i = 1; i <= 5; i++) {\n             UserMod userMod = new UserMod();\n@@ -2069,6 +2073,40 @@ public void issueSYNCOPE265() {\n         }\n     }\n \n+    @Test\n+    public void bulkActions() {\n+        final BulkAction bulkAction = new BulkAction();\n+\n+        for (int i = 0; i < 10; i++) {\n+            UserTO userTO = getUniqueSampleTO(\"bulk_\" + i + \"@apache.org\");\n+            bulkAction.addTarget(String.valueOf(createUser(userTO).getId()));\n+        }\n+\n+        // check for a fail\n+        bulkAction.addTarget(String.valueOf(Long.MAX_VALUE));\n+\n+        assertEquals(11, bulkAction.size());\n+\n+        bulkAction.setOperation(BulkAction.Type.SUSPEND);\n+        BulkActionRes res = userService.bulkAction(bulkAction);\n+        assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n+        assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n+        assertEquals(\"suspended\", userService.read(\n+                Long.parseLong(res.getResultByStatus(Status.SUCCESS).get(3).toString())).getStatus());\n+\n+        bulkAction.setOperation(BulkAction.Type.REACTIVATE);\n+        res = userService.bulkAction(bulkAction);\n+        assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n+        assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n+        assertEquals(\"active\", userService.read(\n+                Long.parseLong(res.getResultByStatus(Status.SUCCESS).get(3).toString())).getStatus());\n+\n+        bulkAction.setOperation(BulkAction.Type.DELETE);\n+        res = userService.bulkAction(bulkAction);\n+        assertEquals(10, res.getResultByStatus(Status.SUCCESS).size());\n+        assertEquals(1, res.getResultByStatus(Status.FAILURE).size());\n+    }\n+\n     private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"}]}