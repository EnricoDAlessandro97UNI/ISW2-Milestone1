{"sha":"8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkYjc1ZDIxYzJiZGFhMDgwMGEzNjZjYzJjNWE1NDEyZTQ1OWU5ZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-11T12:50:54Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-11T13:39:50Z"},"message":"[SYNCOPE-1322] Implementation provided","tree":{"sha":"9494c3af73c61c853d4847ab46e9aba0455b33a8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9494c3af73c61c853d4847ab46e9aba0455b33a8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"26e2b9dd3c7f01eb0572883ae0877d29fbdf53fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26e2b9dd3c7f01eb0572883ae0877d29fbdf53fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26e2b9dd3c7f01eb0572883ae0877d29fbdf53fa"}],"stats":{"total":155,"additions":152,"deletions":3},"files":[{"sha":"d2834c82a18dd9d2be6f48e88c1d1828cb556dc9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowTaskTO.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskTO.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"workflowTask\")\n+@XmlType\n+public class WorkflowTaskTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -3095016727396210808L;\n+\n+    private String name;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"5dbe7d508aaf81352246e5f7479b7a825ad6b0cc","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserWorkflowService.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n \n /**\n  * REST operations related to user workflow.\n@@ -88,6 +89,16 @@ public interface UserWorkflowService extends JAXRSService {\n     @Consumes({ MediaType.APPLICATION_JSON, SyncopeConstants.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     UserTO submitForm(@NotNull WorkflowFormTO form);\n \n+    /**\n+     * Returns a list of available tasks for the given user key.\n+     *\n+     * @param userKey user key\n+     * @return list of available tasks for the given user key\n+     */\n+    @GET\n+    @Path(\"tasks/{userKey}\")\n+    List<WorkflowTaskTO> getAvailableTasks(@NotNull @PathParam(\"userKey\") String userKey);\n+\n     /**\n      * Executes workflow task for matching id.\n      *"},{"sha":"8171ca97ca04a3cc03a5ee432eeaa50d2114f8f3","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserWorkflowLogic.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -79,8 +80,8 @@ public UserTO executeWorkflowTask(final UserTO userTO, final String taskId) {\n         return binder.getUserTO(updated.getResult());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_FORM_READ + \"') and hasRole('\"\n-            + StandardEntitlement.USER_READ + \"')\")\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_FORM_READ + \"') \"\n+            + \"and hasRole('\" + StandardEntitlement.USER_READ + \"')\")\n     @Transactional(readOnly = true)\n     public WorkflowFormTO getFormForUser(final String key) {\n         User user = userDAO.authFind(key);\n@@ -93,6 +94,13 @@ public List<WorkflowFormTO> getForms() {\n         return uwfAdapter.getForms();\n     }\n \n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_TASK_LIST + \"') \"\n+            + \"and hasRole('\" + StandardEntitlement.USER_READ + \"')\")\n+    public List<WorkflowTaskTO> getAvailableTasks(final String key) {\n+        User user = userDAO.authFind(key);\n+        return uwfAdapter.getAvailableTasks(user.getWorkflowId());\n+    }\n+\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_FORM_SUBMIT + \"')\")\n     public UserTO submitForm(final WorkflowFormTO form) {\n         WorkflowResult<? extends AnyPatch> updated = uwfAdapter.submitForm(form);\n@@ -120,4 +128,5 @@ protected WorkflowFormTO resolveReference(final Method method, final Object... a\n \n         throw new UnresolvedReferenceException();\n     }\n+\n }"},{"sha":"8022f361fbf4170584eac41c405f2870f93e8e46","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserWorkflowServiceImpl.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserWorkflowServiceImpl.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.common.rest.api.service.UserWorkflowService;\n import org.apache.syncope.core.logic.UserWorkflowLogic;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -52,6 +53,11 @@ public List<WorkflowFormTO> getForms() {\n         return logic.getForms();\n     }\n \n+    @Override\n+    public List<WorkflowTaskTO> getAvailableTasks(final String userKey) {\n+        return logic.getAvailableTasks(userKey);\n+    }\n+\n     @Override\n     public UserTO submitForm(final WorkflowFormTO form) {\n         return logic.submitForm(form);"},{"sha":"3b44487a7356488dc242febd91142c587a9165bb","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/WorkflowAdapter.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n \n public interface WorkflowAdapter {\n@@ -60,4 +61,12 @@ public interface WorkflowAdapter {\n      * @return object updated by this form submit\n      */\n     WorkflowResult<? extends AnyPatch> submitForm(WorkflowFormTO form);\n+\n+    /**\n+     * Get tasks available for execution, for given workflow id.\n+     *\n+     * @param workflowId workflow id\n+     * @return available tasks\n+     */\n+    List<WorkflowTaskTO> getAvailableTasks(String workflowId);\n }"},{"sha":"e765300626acc568b7ed74f73d7e98d46f377dfa","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":42,"deletions":1,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.WorkflowFormPropertyType;\n@@ -59,6 +60,10 @@\n import org.apache.syncope.core.workflow.java.AbstractUserWorkflowAdapter;\n import org.flowable.bpmn.converter.BpmnXMLConverter;\n import org.flowable.bpmn.model.BpmnModel;\n+import org.flowable.bpmn.model.FlowElement;\n+import org.flowable.bpmn.model.Gateway;\n+import org.flowable.bpmn.model.Process;\n+import org.flowable.bpmn.model.SequenceFlow;\n import org.flowable.editor.constants.ModelDataJsonConstants;\n import org.flowable.editor.language.json.converter.BpmnJsonConverter;\n import org.flowable.common.engine.api.FlowableException;\n@@ -355,7 +360,6 @@ public WorkflowResult<String> requestCertify(final User user) {\n         String authUser = AuthContextUtils.getUsername();\n         engine.getRuntimeService().setVariable(user.getWorkflowId(), FORM_SUBMITTER, authUser);\n \n-        LOG.debug(\"Executing request-certify\");\n         Set<String> performedTasks = doExecuteTask(user, \"request-certify\", null);\n \n         PropagationByResource propByRes = engine.getRuntimeService().getVariable(\n@@ -795,6 +799,43 @@ public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n         return new WorkflowResult<>(userPatch, propByRes, postTasks);\n     }\n \n+    protected void navigateAvailableTasks(final FlowElement flow, final List<String> availableTasks) {\n+        if (flow instanceof Gateway) {\n+            ((Gateway) flow).getOutgoingFlows().forEach(subflow -> navigateAvailableTasks(subflow, availableTasks));\n+        } else if (flow instanceof SequenceFlow) {\n+            availableTasks.add(((SequenceFlow) flow).getTargetRef());\n+        } else {\n+            LOG.debug(\"Unexpected flow found: {}\", flow);\n+        }\n+    }\n+\n+    @Override\n+    public List<WorkflowTaskTO> getAvailableTasks(final String workflowId) {\n+        List<String> availableTasks = new ArrayList<>();\n+        try {\n+            Task currentTask = engine.getTaskService().createTaskQuery().processInstanceId(workflowId).singleResult();\n+\n+            Process process = engine.getRepositoryService().\n+                    getBpmnModel(getProcessDefinitionByKey(WF_PROCESS_ID).getId()).getProcesses().get(0);\n+            process.getFlowElements().stream().\n+                    filter(SequenceFlow.class::isInstance).\n+                    map(SequenceFlow.class::cast).\n+                    filter(sequenceFlow -> sequenceFlow.getSourceRef().equals(currentTask.getTaskDefinitionKey())).\n+                    forEach(sequenceFlow -> {\n+                        FlowElement target = process.getFlowElement(sequenceFlow.getTargetRef(), true);\n+                        navigateAvailableTasks(target, availableTasks);\n+                    });\n+        } catch (FlowableException e) {\n+            throw new WorkflowException(\"While reading available tasks for workflow instance \" + workflowId, e);\n+        }\n+\n+        return availableTasks.stream().map(input -> {\n+            WorkflowTaskTO workflowTaskTO = new WorkflowTaskTO();\n+            workflowTaskTO.setName(input);\n+            return workflowTaskTO;\n+        }).collect(Collectors.toList());\n+    }\n+\n     protected Model getModel(final ProcessDefinition procDef) {\n         try {\n             Model model = engine.getRepositoryService().createModelQuery()."},{"sha":"5cb7303a9cf4df96a379d17a2fe3a5b7c6cf5a0c","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultAnyObjectWorkflowAdapter.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n@@ -97,6 +98,11 @@ public WorkflowResult<AnyObjectPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public List<WorkflowTaskTO> getAvailableTasks(final String workflowId) {\n+        return Collections.emptyList();\n+    }\n+\n     @Override\n     public List<WorkflowDefinitionTO> getDefinitions() {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));"},{"sha":"f0cbbd0f5791146ec86d8aab1848f2996ed2d2b5","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -97,6 +98,11 @@ public WorkflowResult<GroupPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public List<WorkflowTaskTO> getAvailableTasks(final String workflowId) {\n+        return Collections.emptyList();\n+    }\n+\n     @Override\n     public List<WorkflowDefinitionTO> getDefinitions() {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));"},{"sha":"54276e125bc06dc4685322ba9bf861bb541a92ad","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n@@ -188,6 +189,11 @@ public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public List<WorkflowTaskTO> getAvailableTasks(final String workflowId) {\n+        return Collections.emptyList();\n+    }\n+\n     @Override\n     public WorkflowResult<String> requestCertify(final User user) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));"},{"sha":"e3fa1c0c19dfeff106aa82f2c95ab03d54bab1dc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8db75d21c2bdaa0800a366cc2c5a5412e459e9f4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=8db75d21c2bdaa0800a366cc2c5a5412e459e9f4","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+import org.apache.syncope.common.lib.to.WorkflowTaskTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n@@ -279,6 +280,20 @@ public void updateApproval() {\n         assertNotNull(approved.getMembership(\"b1f7c12d-ec83-441f-a50e-1691daaedf3b\").get());\n     }\n \n+    @Test\n+    public void availableTasks() {\n+        assumeTrue(FlowableDetector.isFlowableEnabledForUsers(syncopeService));\n+\n+        UserTO user = createUser(UserITCase.getUniqueSampleTO(\"availableTasks@apache.org\")).getEntity();\n+        assertEquals(\"active\", user.getStatus());\n+\n+        List<WorkflowTaskTO> tasks = userWorkflowService.getAvailableTasks(user.getKey());\n+        assertNotNull(tasks);\n+        assertTrue(tasks.stream().anyMatch(task -> \"update\".equals(task.getName())));\n+        assertTrue(tasks.stream().anyMatch(task -> \"suspend\".equals(task.getName())));\n+        assertTrue(tasks.stream().anyMatch(task -> \"delete\".equals(task.getName())));\n+    }\n+\n     @Test\n     public void issueSYNCOPE15() {\n         assumeTrue(FlowableDetector.isFlowableEnabledForUsers(syncopeService));"}]}