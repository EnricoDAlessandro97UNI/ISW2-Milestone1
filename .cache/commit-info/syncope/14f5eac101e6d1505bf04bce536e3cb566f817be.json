{"sha":"14f5eac101e6d1505bf04bce536e3cb566f817be","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0ZjVlYWMxMDFlNmQxNTA1YmYwNGJjZTUzNmUzY2I1NjZmODE3YmU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-17T12:12:36Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-17T12:12:36Z"},"message":"Removing everey attribute reference from (Derived)SchemaTO\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246797 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ca549a72fe77e03f6afd52c1924daff3e29e6f38","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ca549a72fe77e03f6afd52c1924daff3e29e6f38"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/14f5eac101e6d1505bf04bce536e3cb566f817be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14f5eac101e6d1505bf04bce536e3cb566f817be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/14f5eac101e6d1505bf04bce536e3cb566f817be","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14f5eac101e6d1505bf04bce536e3cb566f817be/comments","author":null,"committer":null,"parents":[{"sha":"b5c5aefde2aa48045684e10bc9772046d866fa71","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5c5aefde2aa48045684e10bc9772046d866fa71","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5c5aefde2aa48045684e10bc9772046d866fa71"}],"stats":{"total":82,"additions":13,"deletions":69},"files":[{"sha":"443805bee231ce43e6ebcec442f3023609d0f6c8","filename":"client/src/main/java/org/syncope/client/to/DerivedSchemaTO.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedSchemaTO.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -26,8 +26,6 @@ public class DerivedSchemaTO extends AbstractBaseBean {\n \n     private Set<String> schemas;\n \n-    private int derivedAttributes;\n-\n     public DerivedSchemaTO() {\n         schemas = new HashSet<String>();\n     }\n@@ -63,12 +61,4 @@ public Set<String> getSchemas() {\n     public void setSchemas(Set<String> schemas) {\n         this.schemas = schemas;\n     }\n-\n-    public int getDerivedAttributes() {\n-        return derivedAttributes;\n-    }\n-\n-    public void setDerivedAttributes(int derivedAttributes) {\n-        this.derivedAttributes = derivedAttributes;\n-    }\n }"},{"sha":"02aee95bed770c5f36ba27482898bd40df149664","filename":"client/src/main/java/org/syncope/client/to/SchemaTO.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -41,8 +41,6 @@ public class SchemaTO extends AbstractBaseBean {\n \n     private Set<String> derivedSchemas;\n \n-    private int attributes;\n-\n     public SchemaTO() {\n         mandatoryCondition = \"false\";\n         derivedSchemas = new HashSet<String>();\n@@ -135,12 +133,4 @@ public Set<String> getDerivedSchemas() {\n     public void setDerivedSchemas(Set<String> derivedSchemas) {\n         this.derivedSchemas = derivedSchemas;\n     }\n-\n-    public int getAttributes() {\n-        return attributes;\n-    }\n-\n-    public void setAttributes(int attributes) {\n-        this.attributes = attributes;\n-    }\n }"},{"sha":"cc29bc67e75ee60509e97c2fd45d861c96e8cc57","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":13,"deletions":30,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -208,26 +208,25 @@ public Schema(PageParameters parameters) {\n         rolesColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        rolesColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n-                \"attributes\", \"attributes\"));\n-\n         rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n                 getString(\"name\"))) {\n \n+            @Override\n             public void populateItem(\n-                    Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SchemaTO> model) {\n \n                 final SchemaTO schemaTO = model.getObject();\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n-\n+                    public void onClick(final AjaxRequestTarget target) {\n                         editRoleSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n+                                    @Override\n                                     public Page createPage() {\n                                         SchemaModalPage window =\n                                                 new SchemaModalPage(\n@@ -256,15 +255,18 @@ public Page createPage() {\n         rolesColumns.add(new AbstractColumn<SchemaTO>(\n                 new Model<String>(getString(\"delete\"))) {\n \n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<SchemaTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SchemaTO> model) {\n \n                 final SchemaTO schemaTO = model.getObject();\n \n                 AjaxLink deleteLink = new IndicatingAjaxLink(\"deleteLink\") {\n \n                     @Override\n-                    public void onClick(AjaxRequestTarget target) {\n+                    public void onClick(final AjaxRequestTarget target) {\n                         restClient.deleteRoleSchema(schemaTO.getName());\n \n                         info(getString(\"operation_succeded\"));\n@@ -280,7 +282,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n \n                             @Override\n                             public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n+                                    final CharSequence script) {\n \n                                 return \"if (confirm('\" + getString(\n                                         \"confirmDelete\") + \"'))\"\n@@ -338,10 +340,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsRolesDer.add(new PropertyColumn(\n-                new Model(getString(\"attributes\")),\n-                \"derivedAttributes\", \"derivedAttributes\"));\n-\n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n \n@@ -473,9 +471,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         userColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        userColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n-                \"attributes\", \"attributes\"));\n-\n         userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n@@ -608,10 +603,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsUsersDer.add(new PropertyColumn(\n-                new Model(getString(\"attributes\")),\n-                \"derivedAttributes\", \"derivedAttributes\"));\n-\n         columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n \n@@ -744,10 +735,6 @@ protected void onUpdate(AjaxRequestTarget target) {\n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\n-                \"attributes\")),\n-                \"attributes\", \"attributes\"));\n-\n         membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n                 getString(\"name\"))) {\n \n@@ -882,10 +869,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 \"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n-                \"attributes\")),\n-                \"derivedAttributes\", \"derivedAttributes\"));\n-\n         columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n "},{"sha":"fc8bd6866b33eaeb8a250f2011d6188e94ee60ee","filename":"core/src/main/java/org/syncope/core/persistence/dao/SchemaDAO.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -29,9 +29,6 @@ public interface SchemaDAO extends DAO {\n     <T extends AbstractAttr> List<T> getAttributes(\n             AbstractSchema schema, Class<T> reference);\n \n-    <T extends AbstractAttr> Number getAttributeCount(\n-            AbstractSchema schema, Class<T> reference);\n-\n     <T extends AbstractSchema> T save(T schema)\n             throws InvalidEntityException;\n "},{"sha":"3c03ddb7d9f4bdb2888f4adbbf8ed6cac46e2cf1","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -68,18 +68,6 @@ public <T extends AbstractAttr> List<T> getAttributes(\n         return query.getResultList();\n     }\n \n-    @Override\n-    public <T extends AbstractAttr> Number getAttributeCount(\n-            final AbstractSchema schema, final Class<T> reference) {\n-\n-        Query query = entityManager.createQuery(\n-                \"SELECT COUNT(e) FROM \" + reference.getSimpleName() + \" e\"\n-                + \" WHERE e.schema=:schema\");\n-        query.setParameter(\"schema\", schema);\n-\n-        return (Number) query.getSingleResult();\n-    }\n-\n     @Override\n     public <T extends AbstractSchema> T save(final T schema) {\n         return entityManager.merge(schema);"},{"sha":"a3adf13e500a42457a8288d90fa6800b572cb8ae","filename":"core/src/main/java/org/syncope/core/rest/data/DerivedSchemaDataBinder.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -129,8 +129,6 @@ public <T extends AbstractDerSchema> DerivedSchemaTO getDerivedSchemaTO(\n         for (AbstractSchema schema : derivedSchema.getSchemas()) {\n             derivedSchemaTO.addSchema(schema.getName());\n         }\n-        derivedSchemaTO.setDerivedAttributes(\n-                derivedSchema.getDerivedAttributes().size());\n \n         return derivedSchemaTO;\n     }"},{"sha":"1cd63b59a0f631413b6b82b9fe32ed908c502a19","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14f5eac101e6d1505bf04bce536e3cb566f817be/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=14f5eac101e6d1505bf04bce536e3cb566f817be","patch":"@@ -175,8 +175,6 @@ public <T extends AbstractSchema> SchemaTO getSchemaTO(T schema,\n         for (AbstractDerSchema derivedSchema : schema.getDerivedSchemas()) {\n             schemaTO.addDerivedSchema(derivedSchema.getName());\n         }\n-        schemaTO.setAttributes(schemaDAO.getAttributeCount(\n-                schema, attributableUtil.attributeClass()).intValue());\n \n         return schemaTO;\n     }"}]}