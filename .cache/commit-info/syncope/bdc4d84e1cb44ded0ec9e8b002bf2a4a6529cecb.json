{"sha":"bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJkYzRkODRlMWNiNDRkZWQwZWM5ZThiMDAyYmYyYTRhNjUyOWNlY2I=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-07-03T12:48:33Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-07-03T12:48:33Z"},"message":"Fixed #SYNCOPE-525\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607616 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"520349bd5435e487ecf30db3e38c4e1387473eb9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/520349bd5435e487ecf30db3e38c4e1387473eb9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/comments","author":null,"committer":null,"parents":[{"sha":"9f7bb23dda3cf6479bffcdc02522afc69d067ed0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9f7bb23dda3cf6479bffcdc02522afc69d067ed0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9f7bb23dda3cf6479bffcdc02522afc69d067ed0"}],"stats":{"total":173,"additions":125,"deletions":48},"files":[{"sha":"7044e5ec3de69dd7dc1f1d44b1eba3085a26a9dd","filename":"installer/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fpom.xml?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -73,12 +73,10 @@ under the License.\n     <dependency>\n       <groupId>commons-codec</groupId>\n       <artifactId>commons-codec</artifactId>\n-      <version>1.9</version>\n     </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n     </dependency>\n   </dependencies>\n "},{"sha":"7163ff7807e20a10fdda18c0a4066a99fe1fdf32","filename":"installer/src/main/java/org/apache/syncope/installer/containers/Tomcat.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -34,11 +34,11 @@ public class Tomcat {\n \n     private final HttpUtils httpUtils;\n \n-    public Tomcat(final String tomcatHost, final String tomcatPort, final String installPath, final String artifactId,\n-            final String tomcatUser, final String tomcatPassword) {\n+    public Tomcat(final boolean tomcatSsl, final String tomcatHost, final String tomcatPort,\n+            final String installPath, final String artifactId, final String tomcatUser, final String tomcatPassword) {\n         this.installPath = installPath;\n         this.artifactId = artifactId;\n-        httpUtils = new HttpUtils(tomcatHost, tomcatPort, tomcatUser, tomcatPassword);\n+        httpUtils = new HttpUtils(tomcatSsl, tomcatHost, tomcatPort, tomcatUser, tomcatPassword);\n     }\n \n     public boolean deployCore() {"},{"sha":"0323d7fe96a874e12765ae6032278446555881f9","filename":"installer/src/main/java/org/apache/syncope/installer/containers/jboss/JBoss.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -31,6 +31,8 @@ public class JBoss {\n \n     private final String enableUrl = \"http://%s:%s/management/\";\n \n+    private final boolean jbossSsl;\n+\n     private final String jbossHost;\n \n     private final String jbossPort;\n@@ -41,14 +43,15 @@ public class JBoss {\n \n     private final HttpUtils httpUtils;\n \n-    public JBoss(final String jbossHost, final String jbossPort,\n+    public JBoss(final boolean jbossSsl, final String jbossHost, final String jbossPort,\n             final String jbossAdminUsername, final String jbossAdminPassword,\n             final String installPath, final String artifactId) {\n+        this.jbossSsl = jbossSsl;\n         this.jbossHost = jbossHost;\n         this.jbossPort = jbossPort;\n         this.installPath = installPath;\n         this.artifactId = artifactId;\n-        httpUtils = new HttpUtils(jbossHost, jbossPort, jbossAdminUsername, jbossAdminPassword);\n+        httpUtils = new HttpUtils(jbossSsl, jbossHost, jbossPort, jbossAdminUsername, jbossAdminPassword);\n \n     }\n "},{"sha":"bc05fb197a340b55b3366435f5c4a223906e8f6b","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ContainerProcess.java","status":"modified","additions":21,"deletions":15,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -40,6 +40,8 @@ public class ContainerProcess extends AbstractProcess {\n \n     private String tomcatPassword;\n \n+    private boolean tomcatSsl;\n+\n     private String tomcatHost;\n \n     private String tomcatPort;\n@@ -52,6 +54,8 @@ public class ContainerProcess extends AbstractProcess {\n \n     private boolean withDataSource;\n \n+    private boolean jbossSsl;\n+\n     private String jbossHost;\n \n     private String jbossPort;\n@@ -67,19 +71,21 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         installPath = args[0];\n         artifactId = args[1];\n         final Containers selectedContainer = Containers.fromContainerName(args[2]);\n-        tomcatHost = args[3];\n-        tomcatPort = args[4];\n-        tomcatUser = args[5];\n-        tomcatPassword = args[6];\n-        glassfishDir = args[7];\n-        logsDirectory = args[8];\n-        bundlesDirectory = args[9];\n-        withDataSource = Boolean.valueOf(args[10]);\n-        jbossHost = args[11];\n-        jbossPort = args[12];\n-        jbossJdbcModuleName = args[13];\n-        jbossAdminUsername = args[14];\n-        jbossAdminPassword = args[15];\n+        tomcatSsl = Boolean.valueOf(args[3]);\n+        tomcatHost = args[4];\n+        tomcatPort = args[5];\n+        tomcatUser = args[6];\n+        tomcatPassword = args[7];\n+        glassfishDir = args[8];\n+        logsDirectory = args[9];\n+        bundlesDirectory = args[10];\n+        withDataSource = Boolean.valueOf(args[11]);\n+        jbossSsl = Boolean.valueOf(args[12]);\n+        jbossHost = args[13];\n+        jbossPort = args[14];\n+        jbossJdbcModuleName = args[15];\n+        jbossAdminUsername = args[16];\n+        jbossAdminPassword = args[17];\n \n         if (withDataSource) {\n             writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH), WebXml.withDataSource());\n@@ -104,7 +110,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         switch (selectedContainer) {\n             case TOMCAT:\n                 final Tomcat tomcat = new Tomcat(\n-                        tomcatHost, tomcatPort, installPath, artifactId, tomcatUser, tomcatPassword);\n+                        tomcatSsl, tomcatHost, tomcatPort, installPath, artifactId, tomcatUser, tomcatPassword);\n                 boolean deployCoreResult = tomcat.deployCore();\n                 if (deployCoreResult) {\n                     handler.logOutput(\"Core successfully deployed \", true);\n@@ -121,7 +127,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                 break;\n             case JBOSS:\n                 final JBoss jBoss = new JBoss(\n-                        jbossHost, jbossPort, jbossAdminUsername, jbossAdminPassword, installPath, artifactId);\n+                        jbossSsl, jbossHost, jbossPort, jbossAdminUsername, jbossAdminPassword, installPath, artifactId);\n \n                 boolean deployCoreJboss = jBoss.deployCore();\n                 if (deployCoreJboss) {"},{"sha":"5d0ad432c387d9848770014f9d7e0ef956460975","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/HttpUtils.java","status":"modified","additions":58,"deletions":11,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -20,6 +20,9 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.security.KeyManagementException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n import org.apache.commons.io.IOUtils;\n import org.apache.http.HttpEntity;\n import org.apache.http.HttpHost;\n@@ -32,6 +35,9 @@\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.client.methods.HttpPost;\n import org.apache.http.client.protocol.HttpClientContext;\n+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n+import org.apache.http.conn.ssl.SSLContextBuilder;\n+import org.apache.http.conn.ssl.TrustSelfSignedStrategy;\n import org.apache.http.entity.ContentType;\n import org.apache.http.entity.StringEntity;\n import org.apache.http.entity.mime.MultipartEntityBuilder;\n@@ -45,10 +51,14 @@\n \n public class HttpUtils {\n \n-    private static final String URL_TEMPLATE = \"http://%s:%s\";\n+    private static final String HTTPS_URL_TEMPLATE = \"https://%s:%s\";\n+\n+    private static final String HTTP_URL_TEMPLATE = \"http://%s:%s\";\n \n     private final CloseableHttpClient httpClient;\n \n+    private final boolean isSsl;\n+\n     private final String host;\n \n     private final int port;\n@@ -59,17 +69,32 @@ public class HttpUtils {\n \n     private final HttpHost targetHost;\n \n-    public HttpUtils(final String host, final String port, final String username, final String password) {\n-        httpClient = HttpClients.createDefault();\n-        this.username = username;\n-        this.password = password;\n+    public HttpUtils(final boolean isSsl, final String host,\n+            final String port, final String username, final String password) {\n+\n+        this.isSsl = isSsl;\n         this.host = host;\n         this.port = Integer.valueOf(port);\n-        this.targetHost = new HttpHost(this.host, this.port);\n+\n+        if (isSsl) {\n+            httpClient = createHttpsClient();\n+            this.targetHost = new HttpHost(this.host, this.port, \"https\");\n+        } else {\n+            httpClient = HttpClients.createDefault();\n+            this.targetHost = new HttpHost(this.host, this.port, \"http\");\n+        }\n+        \n+        this.username = username;\n+        this.password = password;\n     }\n \n     public int getWithBasicAuth(final String path) {\n-        final HttpGet httpGet = new HttpGet(String.format(URL_TEMPLATE, host, port) + path);\n+        final HttpGet httpGet;\n+        if (isSsl) {\n+            httpGet = new HttpGet(String.format(HTTPS_URL_TEMPLATE, host, port) + path);\n+        } else {\n+            httpGet = new HttpGet(String.format(HTTP_URL_TEMPLATE, host, port) + path);\n+        }\n         int status = 0;\n         try {\n             final CloseableHttpResponse response = httpClient.execute(\n@@ -127,13 +152,35 @@ private HttpPost httpPost(final String url, final HttpEntity reqEntity) {\n         return httppost;\n     }\n \n-    public static int ping(final String host, final String port) {\n+    public static int ping(final boolean isSsl, final String host, final String port) {\n         int status = 0;\n         try {\n-            status = HttpClients.createDefault().execute(\n-                    new HttpGet(String.format(URL_TEMPLATE, host, port))).getStatusLine().getStatusCode();\n-        } catch (IOException ioe) {\n+            if (isSsl) {\n+                status = createHttpsClient().execute(\n+                        new HttpGet(String.format(HTTPS_URL_TEMPLATE, host, port))).getStatusLine().\n+                        getStatusCode();\n+            } else {\n+                status = HttpClients.createDefault().execute(\n+                        new HttpGet(String.format(HTTP_URL_TEMPLATE, host, port))).getStatusLine().getStatusCode();\n+            }\n+        } catch (IOException ex) {\n         }\n+\n         return status;\n     }\n+\n+    private static CloseableHttpClient createHttpsClient() {\n+        CloseableHttpClient chc = null;\n+        try {\n+            final SSLContextBuilder builder = new SSLContextBuilder();\n+            builder.loadTrustMaterial(null, new TrustSelfSignedStrategy());\n+            chc = HttpClients.custom().setSSLSocketFactory(\n+                    new SSLConnectionSocketFactory(builder.build(),\n+                            SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER)).build();\n+        } catch (KeyManagementException ex) {\n+        } catch (NoSuchAlgorithmException ex) {\n+        } catch (KeyStoreException ex) {\n+        }\n+        return chc;\n+    }\n }"},{"sha":"02c7b5a53ca54550fd535e2326e61a82e59b3b0e","filename":"installer/src/main/java/org/apache/syncope/installer/validators/ContainerValidator.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -32,11 +32,13 @@ public Status validateData(final InstallData installData) {\n \n         final Containers selectedContainer = Containers.fromContainerName(\n                 installData.getVariable(\"install.container.selection\"));\n+        final String tomcatSsl = installData.getVariable(\"tomcat.container.ssl\");\n         final String tomcatHost = installData.getVariable(\"tomcat.container.host\");\n         final String tomcatPort = installData.getVariable(\"tomcat.container.port\");\n         final String tomcatUser = installData.getVariable(\"tomcat.container.user\");\n         final String tomcatPassword = installData.getVariable(\"tomcat.container.pwd\");\n         final String glassfishDir = installData.getVariable(\"glassfish.container.dir\");\n+        final String jbossSsl = installData.getVariable(\"jboss.container.ssl\");\n         final String jbossHost = installData.getVariable(\"jboss.container.host\");\n         final String jbossPort = installData.getVariable(\"jboss.container.port\");\n         final String jbossJdbcModule = installData.getVariable(\"jboss.container.jdbc.module\");\n@@ -69,7 +71,7 @@ public Status validateData(final InstallData installData) {\n                     return Status.ERROR;\n                 }\n \n-                int responseCode = HttpUtils.ping(tomcatHost, tomcatPort);\n+                int responseCode = HttpUtils.ping(Boolean.valueOf(tomcatSsl), tomcatHost, tomcatPort);\n \n                 if (responseCode == 200) {\n                     return Status.OK;\n@@ -105,7 +107,7 @@ public Status validateData(final InstallData installData) {\n                     return Status.ERROR;\n                 }\n \n-                int jResponseCode = HttpUtils.ping(jbossHost, jbossPort);\n+                int jResponseCode = HttpUtils.ping(Boolean.valueOf(jbossSsl), jbossHost, jbossPort);\n \n                 if (jResponseCode == 200) {\n                     return Status.OK;"},{"sha":"aa5b8aa6542db6292529bcee13a95a355d1f90f8","filename":"installer/src/main/resources/izpack/ProcessPanel.Spec.xml","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -49,19 +49,21 @@ under the License.\n       <arg>$INSTALL_PATH</arg><!-- 0 -->\n       <arg>$mvn.artifactid</arg><!-- 1 -->\n       <arg>$install.container.selection</arg><!-- 2 -->\n-      <arg>$tomcat.container.host</arg><!-- 3 -->\n-      <arg>$tomcat.container.port</arg><!-- 4 -->\n-      <arg>$tomcat.container.user</arg><!-- 5 -->\n-      <arg>$tomcat.container.pwd</arg><!-- 6 -->\n-      <arg>$glassfish.container.dir</arg><!-- 7 -->\n-      <arg>$mvn.log.directory</arg><!-- 8 -->\n-      <arg>$mvn.bundle.directory</arg><!-- 9 -->\n-      <arg>$with.datasuorce</arg><!-- 10 -->\n-      <arg>$jboss.container.host</arg><!-- 11 -->\n-      <arg>$jboss.container.port</arg><!-- 12 -->\n-      <arg>$jboss.container.jdbc.module</arg><!-- 13 -->\n-      <arg>$jboss.container.user</arg><!-- 14 -->\n-      <arg>$jboss.container.pwd</arg><!-- 15 -->\n+      <arg>$tomcat.container.ssl</arg><!-- 3 -->\n+      <arg>$tomcat.container.host</arg><!-- 4 -->\n+      <arg>$tomcat.container.port</arg><!-- 5 -->\n+      <arg>$tomcat.container.user</arg><!-- 6 -->\n+      <arg>$tomcat.container.pwd</arg><!-- 7 -->\n+      <arg>$glassfish.container.dir</arg><!-- 8 -->\n+      <arg>$mvn.log.directory</arg><!-- 9 -->\n+      <arg>$mvn.bundle.directory</arg><!-- 10 -->\n+      <arg>$with.datasuorce</arg><!-- 11 -->\n+      <arg>$jboss.container.ssl</arg><!-- 12 -->\n+      <arg>$jboss.container.host</arg><!-- 13 -->\n+      <arg>$jboss.container.port</arg><!-- 14 -->\n+      <arg>$jboss.container.jdbc.module</arg><!-- 15 -->\n+      <arg>$jboss.container.user</arg><!-- 16 -->\n+      <arg>$jboss.container.pwd</arg><!-- 17 -->\n     </executeclass>\n   </job>\n   <onFail previous=\"true\" next=\"false\" />"},{"sha":"17016119b3e34932dd5e1ce377977ef890963077","filename":"installer/src/main/resources/izpack/userInputLang.xml_eng","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -35,13 +35,15 @@ under the License.\n   \n   <str id=\"with.datasuorce.id\" txt=\"DataSource with JNDI name 'java:/syncopeDataSource':\"/>\n   \n+  <str id=\"tomcat.container.ssl.id\" txt=\"Https\"/>\n   <str id=\"tomcat.container.host.id\" txt=\"Tomcat host:\"/>\n   <str id=\"tomcat.container.port.id\" txt=\"Tomcat port:\"/>\n   <str id=\"tomcat.container.user.id\" txt=\"Tomcat username:\"/>\n   <str id=\"tomcat.container.pwd.id\" txt=\"Tomcat password:\"/>\n   \n   <str id=\"glassfish.container.dir.id\" txt=\"Glassfish home directory:\"/>\n   \n+  <str id=\"jboss.container.ssl.id\" txt=\"Https\"/>\n   <str id=\"jboss.container.host.id\" txt=\"Jboss host:\"/>\n   <str id=\"jboss.container.port.id\" txt=\"Jboss port:\"/>\n   <str id=\"jboss.container.jdbc.module.id\" txt=\"Jboss JDBC module name:\"/>"},{"sha":"17016119b3e34932dd5e1ce377977ef890963077","filename":"installer/src/main/resources/izpack/userInputLang.xml_ita","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -35,13 +35,15 @@ under the License.\n   \n   <str id=\"with.datasuorce.id\" txt=\"DataSource with JNDI name 'java:/syncopeDataSource':\"/>\n   \n+  <str id=\"tomcat.container.ssl.id\" txt=\"Https\"/>\n   <str id=\"tomcat.container.host.id\" txt=\"Tomcat host:\"/>\n   <str id=\"tomcat.container.port.id\" txt=\"Tomcat port:\"/>\n   <str id=\"tomcat.container.user.id\" txt=\"Tomcat username:\"/>\n   <str id=\"tomcat.container.pwd.id\" txt=\"Tomcat password:\"/>\n   \n   <str id=\"glassfish.container.dir.id\" txt=\"Glassfish home directory:\"/>\n   \n+  <str id=\"jboss.container.ssl.id\" txt=\"Https\"/>\n   <str id=\"jboss.container.host.id\" txt=\"Jboss host:\"/>\n   <str id=\"jboss.container.port.id\" txt=\"Jboss port:\"/>\n   <str id=\"jboss.container.jdbc.module.id\" txt=\"Jboss JDBC module name:\"/>"},{"sha":"55f9d41e4c8e1218a1175554b70510ede88942c2","filename":"installer/src/main/resources/izpack/userInputSpec.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -138,6 +138,10 @@ under the License.\n     <field type=\"divider\"/>\n     <field type=\"space\"/>\n     \n+    <field type=\"check\" variable=\"tomcat.container.ssl\" conditionid=\"tomcat.choice\">\n+      <spec id=\"tomcat.container.ssl.id\" true=\"true\" false=\"false\" set=\"true\"/>\n+    </field>\n+    <field type=\"space\"/>\n     <field type=\"text\" variable=\"tomcat.container.host\" conditionid=\"tomcat.choice\">\n       <spec id=\"tomcat.container.host.id\" size=\"20\" set=\"localhost\"/>\n     </field>\n@@ -158,6 +162,10 @@ under the License.\n       <spec id=\"glassfish.container.dir.id\" size=\"20\" set=\"/opt/glassfish4/\"/>\n     </field>\n     \n+    <field type=\"check\" variable=\"jboss.container.ssl\" conditionid=\"jboss.choice\">\n+      <spec id=\"jboss.container.ssl.id\" true=\"true\" false=\"false\" set=\"true\"/>\n+    </field>\n+    <field type=\"space\"/>\n     <field type=\"text\" variable=\"jboss.container.host\" conditionid=\"jboss.choice\">\n       <spec id=\"jboss.container.host.id\" size=\"20\" set=\"localhost\"/>\n     </field>"},{"sha":"319d6e21cf46227dce63691c0ac0cd5627e0d2fd","filename":"pom.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=bdc4d84e1cb44ded0ec9e8b002bf2a4a6529cecb","patch":"@@ -319,6 +319,7 @@ under the License.\n \n     <commons-jexl.version>2.1.1</commons-jexl.version>\n     <commons-lang.version>3.3.2</commons-lang.version>\n+    <commons-codec.version>1.9</commons-codec.version>\n \n     <activiti.version>5.15.1</activiti.version>\n     \n@@ -450,6 +451,12 @@ under the License.\n         <artifactId>commons-lang3</artifactId>\n         <version>${commons-lang.version}</version>\n       </dependency>\n+      \n+      <dependency>\n+        <groupId>commons-codec</groupId>\n+        <artifactId>commons-codec</artifactId>\n+        <version>${commons-codec.version}</version>\n+      </dependency>\n \n       <dependency>\n         <groupId>org.connid</groupId>"}]}