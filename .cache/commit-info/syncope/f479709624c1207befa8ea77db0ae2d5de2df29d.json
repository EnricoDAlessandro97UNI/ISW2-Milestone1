{"sha":"f479709624c1207befa8ea77db0ae2d5de2df29d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0Nzk3MDk2MjRjMTIwN2JlZmE4ZWE3N2RiMGFlMmQ1ZGUyZGYyOWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2020-05-08T12:03:26Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-05-08T12:03:26Z"},"message":"[SYNCOPE-1496] Adding tests for all DBMS including JSON variants + Wildfly (#185)","tree":{"sha":"8ec07dd49d1980a378e94757bf3b9babbdea54d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8ec07dd49d1980a378e94757bf3b9babbdea54d3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f479709624c1207befa8ea77db0ae2d5de2df29d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJetUqOCRBK7hj4Ov3rIwAAdHIIAI1/NTwMUMJIth3V87qHaPTm\nIwTcNVvCWN6FIL+2xmSq/QwhFoSzvOBjtX8b8RJqAOE6NX4cwPI9onI2nwL0IQWw\nR0HGd4LbJ8q7rCq4ZnrlEGy3x4neXidoQ/Om1BKCJQMkWbzNaR3bd5hn1si/V8b5\nTtqFrhlhI37xLayHhNDbMM3p6qSX3daOTonJsUnO91XuolOZZHhLyvR5/Q6s6kWE\nsLRt5sJwuxH5UKULZbkPV26jXHsrxdIUCX6HSj6hLIS0OhW5UvLetC6Zp07KE/5A\npMlLRUUKrRrgthpP0vBTVEo8edOy6+2zl9MHa54Bkxe+VJr9wDggSA5uEyeiqh4=\n=9kuO\n-----END PGP SIGNATURE-----\n","payload":"tree 8ec07dd49d1980a378e94757bf3b9babbdea54d3\nparent 065933eef27abaa7c2ad7bc2385dab333ddc3bf8\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1588939406 +0200\ncommitter GitHub <noreply@github.com> 1588939406 +0200\n\n[SYNCOPE-1496] Adding tests for all DBMS including JSON variants + Wildfly (#185)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f479709624c1207befa8ea77db0ae2d5de2df29d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f479709624c1207befa8ea77db0ae2d5de2df29d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f479709624c1207befa8ea77db0ae2d5de2df29d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"065933eef27abaa7c2ad7bc2385dab333ddc3bf8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/065933eef27abaa7c2ad7bc2385dab333ddc3bf8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/065933eef27abaa7c2ad7bc2385dab333ddc3bf8"}],"stats":{"total":322,"additions":256,"deletions":66},"files":[{"sha":"9aa984e055e188d3a75139c8300f164b86af4662","filename":".travis.yml","status":"modified","additions":43,"deletions":2,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/.travis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/.travis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.travis.yml?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -48,7 +48,7 @@ jobs:\n   include:\n     - stage: build\n       name: \"Build\"\n-      script: travis_wait 55 mvn -U --quiet -T 1C -P skipTests,all\n+      script: mvn -U --quiet -T 1C -P skipTests,all\n       #######################################################\n     - stage: validate\n       name: \"Checkstyle, Legal Files, Modernizer and Release Audit Tool (RAT) Analysis\"\n@@ -71,10 +71,51 @@ jobs:\n       - export JAVA_HOME=~/openjdk15\n       - export PATH=\"$JAVA_HOME/bin:$PATH\"\n       - eval $TestCommand\n+    - stage: test\n+      name: \"Persistence Unit Tests via JDK 11: PostgreSQL (JSONB)\"\n+      script: mvn -f core/persistence-jpa-json/pom.xml -P postgres -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Dsass.skip=true\n+      after_failure:\n+       - cat core/persistence-jpa-json/target/failsafe-reports/org.apache.syncope.core.persistence.jpa.inner.AnySearchTest*\n+    - stage: test\n+      name: \"Persistence Unit Tests via JDK 11: MySQL (JSON)\"\n+      script: mvn -f core/persistence-jpa-json/pom.xml -P mysql -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Dsass.skip=true\n       ######################################################\n     - stage: fit\n       name: \"Full Integration Tests: Apache Tomcat / H2 / JSON Content-Type\"\n-      script: travis_wait 55 mvn -f fit/core-reference/pom.xml verify --quiet -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      script: mvn -f fit/core-reference/pom.xml verify -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      #- stage: fit\n+      #name: \"Full Integration Tests: Apache Tomcat / H2 / XML Content-Type\"\n+      #script: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/xml -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      #- stage: fit\n+      #name: \"Full Integration Tests: Apache Tomcat / H2 / YAML Content-Type\"\n+      #script: mvn -f fit/core-reference/pom.xml verify -Djaxrs.content.type=application/yaml -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Wildfly / H2 / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P wildfly-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+      #- stage: fit\n+      #name: \"Full Integration Tests: Payara / H2 / JSON Content-Type\"\n+      #script: mvn -f fit/core-reference/pom.xml -P payara-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / PostgreSQL / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P postgres-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / PostgreSQL (JSONB) / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P pgjsonb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / MySQL / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P mysql-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / MySQL (JSON) / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P myjson-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / MariaDB / JSON Content-Type\"\n+      script: mvn -f fit/core-reference/pom.xml -P mariadb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / H2 / JSON Content-Type + Elasticsearch\"\n+      script: mvn -f fit/core-reference/pom.xml -P elasticsearch-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+    - stage: fit\n+      name: \"Full Integration Tests: Apache Tomcat / H2 / JSON Content-Type + Zookeeper\"\n+      script: mvn -f fit/core-reference/pom.xml -P zookeeper-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n       after_failure:\n        - cat fit/core-reference/target/log/*\n        - cat fit/core-reference/target/failsafe-reports/org.apache.syncope.fit.*-output.txt"},{"sha":"da89ec5419a6967f81eb54e82f0a0204c652c6fd","filename":"core/persistence-jpa-json/pom.xml","status":"modified","additions":22,"deletions":6,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fpom.xml?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -236,6 +236,9 @@ under the License.\n                 <include>**/*Test.java</include>\n               </includes>\n               <excludedGroups>multitenancy,plainAttrTable</excludedGroups>\n+              <systemProperties>\n+                <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>                \n+              </systemProperties>\n             </configuration>\n           </plugin>\n \n@@ -245,16 +248,14 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>postgres</alias>\n                   <name>postgres:${docker.postgresql.version}</name>\n                   <run>\n                     <env>\n                       <POSTGRES_DB>syncope</POSTGRES_DB>\n                       <POSTGRES_USER>syncope</POSTGRES_USER>\n                       <POSTGRES_PASSWORD>syncope</POSTGRES_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>5432:5432</port>\n-                    </ports>\n                     <wait>\n                       <log>database system is ready to accept connections</log>\n                       <time>30000</time>\n@@ -288,6 +289,10 @@ under the License.\n             <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n           </testResource>\n+          <testResource>\n+            <directory>src/test/resources/pgjsonb</directory>\n+            <filtering>true</filtering>\n+          </testResource>\n           <testResource>\n             <directory>src/main/resources</directory>\n             <filtering>true</filtering>\n@@ -298,6 +303,9 @@ under the License.\n           <testResource>\n             <directory>src/main/resources/pgjsonb</directory>\n             <filtering>true</filtering>\n+            <excludes>\n+              <exclude>domains/Master.properties</exclude>\n+            </excludes>\n           </testResource>\n         </testResources>\n       </build>\n@@ -353,6 +361,9 @@ under the License.\n                 <include>**/*Test.java</include>\n               </includes>\n               <excludedGroups>multitenancy,plainAttrTable</excludedGroups>\n+              <systemProperties>\n+                <DB_CONTAINER_IP>${docker.container.mysql.ip}</DB_CONTAINER_IP>                \n+              </systemProperties>\n             </configuration>\n           </plugin>\n \n@@ -362,6 +373,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>mysql</alias>\n                   <name>mysql/mysql-server:${docker.mysql.version}</name>\n                   <run>\n                     <cmd>--skip-log-bin --server-id=1</cmd>\n@@ -371,9 +383,6 @@ under the License.\n                       <MYSQL_USER>syncope</MYSQL_USER>\n                       <MYSQL_PASSWORD>syncope</MYSQL_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>3306:3306</port>\n-                    </ports>\n                     <wait>\n                       <log>MySQL init process done. Ready for start up.</log>\n                       <time>30000</time>\n@@ -407,6 +416,10 @@ under the License.\n             <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n           </testResource>\n+          <testResource>\n+            <directory>src/test/resources/myjson</directory>\n+            <filtering>true</filtering>\n+          </testResource>\n           <testResource>\n             <directory>src/main/resources</directory>\n             <filtering>true</filtering>\n@@ -417,6 +430,9 @@ under the License.\n           <testResource>\n             <directory>src/main/resources/myjson</directory>\n             <filtering>true</filtering>\n+            <excludes>\n+              <exclude>domains/Master.properties</exclude>\n+            </excludes>\n           </testResource>\n         </testResources>\n       </build>"},{"sha":"5b36d417c3159688d98fb6a0c204e179602b3e88","filename":"core/persistence-jpa-json/src/test/resources/myjson/domains/Master.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+Master.driverClassName=com.mysql.cj.jdbc.Driver\n+Master.url=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+Master.schema=\n+Master.username=syncope\n+Master.password=syncope\n+Master.databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n+Master.orm=META-INF/spring-orm-myjson.xml\n+\n+Master.pool.maxActive=10\n+Master.pool.minIdle=2\n+\n+Master.audit.sql=audit_myjson.sql"},{"sha":"4f42b5619719b8f72348361043e85d1bdac3592a","filename":"core/persistence-jpa-json/src/test/resources/pgjsonb/domains/Master.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+Master.driverClassName=org.postgresql.Driver\n+Master.url=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope?stringtype=unspecified\n+Master.schema=\n+Master.username=syncope\n+Master.password=syncope\n+Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+Master.orm=META-INF/spring-orm-pgjsonb.xml\n+\n+Master.pool.maxActive=10\n+Master.pool.minIdle=2\n+\n+Master.audit.sql=audit_pgjsonb.sql"},{"sha":"abf21e1b511840015b9176c8c7134d26c635d3c0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":24,"deletions":4,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -23,17 +23,20 @@\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n+import org.apache.commons.lang3.time.DateUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.search.AttrCond;\n import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n@@ -51,15 +54,22 @@\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(\"Master\")\n public class AnySearchTest extends AbstractTest {\n \n+    private static final String LOGIN_DATE_VALUE = \"2009-05-26\";\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Autowired\n     private AnyObjectDAO anyObjectDAO;\n \n@@ -75,6 +85,16 @@ public class AnySearchTest extends AbstractTest {\n     @Autowired\n     private RealmDAO realmDAO;\n \n+    @BeforeEach\n+    public void adjustLoginDateForLocalSystem() throws ParseException {\n+        User rossini = userDAO.findByUsername(\"rossini\");\n+\n+        UPlainAttr loginDate = rossini.getPlainAttr(\"loginDate\").get();\n+        loginDate.getValues().get(0).setDateValue(DateUtils.parseDate(LOGIN_DATE_VALUE, \"yyyy-MM-dd\"));\n+\n+        userDAO.save(rossini);\n+    }\n+\n     @Test\n     public void searchWithLikeCondition() {\n         AttrCond fullnameLeafCond = new AttrCond(AttrCond.Type.LIKE);\n@@ -86,7 +106,7 @@ public void searchWithLikeCondition() {\n \n         AttrCond loginDateCond = new AttrCond(AttrCond.Type.EQ);\n         loginDateCond.setSchema(\"loginDate\");\n-        loginDateCond.setExpression(\"2009-05-26\");\n+        loginDateCond.setExpression(LOGIN_DATE_VALUE);\n \n         SearchCond subCond = SearchCond.getAnd(\n                 SearchCond.getLeaf(fullnameLeafCond), SearchCond.getLeaf(groupCond));\n@@ -113,7 +133,7 @@ public void searchCaseInsensitiveWithLikeCondition() {\n \n         AttrCond loginDateCond = new AttrCond(AttrCond.Type.EQ);\n         loginDateCond.setSchema(\"loginDate\");\n-        loginDateCond.setExpression(\"2009-05-26\");\n+        loginDateCond.setExpression(LOGIN_DATE_VALUE);\n \n         SearchCond subCond = SearchCond.getAnd(\n                 SearchCond.getLeaf(fullnameLeafCond), SearchCond.getLeaf(groupCond));\n@@ -192,7 +212,7 @@ public void searchByPageAndSize() {\n \n         AttrCond loginDateCond = new AttrCond(AttrCond.Type.EQ);\n         loginDateCond.setSchema(\"loginDate\");\n-        loginDateCond.setExpression(\"2009-05-26\");\n+        loginDateCond.setExpression(LOGIN_DATE_VALUE);\n \n         SearchCond subCond = SearchCond.getAnd(\n                 SearchCond.getLeaf(fullnameLeafCond), SearchCond.getLeaf(groupCond));\n@@ -730,7 +750,7 @@ public void issueSYNCOPE1416() {\n     public void issueSYNCOPE1419() {\n         AttrCond loginDateCond = new AttrCond(AttrCond.Type.EQ);\n         loginDateCond.setSchema(\"loginDate\");\n-        loginDateCond.setExpression(\"2009-05-26\");\n+        loginDateCond.setExpression(LOGIN_DATE_VALUE);\n \n         SearchCond cond = SearchCond.getNotLeaf(loginDateCond);\n         assertTrue(cond.isValid());"},{"sha":"f6c901610621ce5e278bbbdfbb443b05c9ecf167","filename":"fit/core-reference/pom.xml","status":"modified","additions":58,"deletions":39,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -691,16 +691,14 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>postgres</alias>\n                   <name>postgres:${docker.postgresql.version}</name>\n                   <run>\n                     <env>\n                       <POSTGRES_DB>syncope</POSTGRES_DB>\n                       <POSTGRES_USER>syncope</POSTGRES_USER>\n                       <POSTGRES_PASSWORD>syncope</POSTGRES_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>5432:5432</port>\n-                    </ports>\n                     <wait>\n                       <log>database system is ready to accept connections</log>\n                       <time>30000</time>\n@@ -732,6 +730,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -806,16 +811,14 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>postgres</alias>\n                   <name>postgres:${docker.postgresql.version}</name>\n                   <run>\n                     <env>\n                       <POSTGRES_DB>syncope</POSTGRES_DB>\n                       <POSTGRES_USER>syncope</POSTGRES_USER>\n                       <POSTGRES_PASSWORD>syncope</POSTGRES_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>5432:5432</port>\n-                    </ports>\n                     <wait>\n                       <log>database system is ready to accept connections</log>\n                       <time>30000</time>\n@@ -842,11 +845,18 @@ under the License.\n               </execution>\n             </executions>\n           </plugin>\n-          \n+\n           <plugin>\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -951,6 +961,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>mysql</alias>\n                   <name>mysql/mysql-server:${docker.mysql.version}</name>\n                   <run>\n                     <cmd>--skip-log-bin --server-id=1</cmd>\n@@ -960,9 +971,6 @@ under the License.\n                       <MYSQL_USER>syncope</MYSQL_USER>\n                       <MYSQL_PASSWORD>syncope</MYSQL_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>3306:3306</port>\n-                    </ports>\n                     <wait>\n                       <log>MySQL init process done. Ready for start up.</log>\n                       <time>30000</time>\n@@ -994,22 +1002,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.mysql.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -1084,6 +1083,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>mysql</alias>\n                   <name>mysql/mysql-server:${docker.mysql.version}</name>\n                   <run>\n                     <cmd>--skip-log-bin --server-id=1</cmd>\n@@ -1093,9 +1093,6 @@ under the License.\n                       <MYSQL_USER>syncope</MYSQL_USER>\n                       <MYSQL_PASSWORD>syncope</MYSQL_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>3306:3306</port>\n-                    </ports>\n                     <wait>\n                       <log>MySQL init process done. Ready for start up.</log>\n                       <time>30000</time>\n@@ -1127,6 +1124,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.mysql.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -1184,6 +1188,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>mariadb</alias>\n                   <name>mariadb:${docker.mariadb.version}</name>\n                   <run>\n                     <env>\n@@ -1192,9 +1197,6 @@ under the License.\n                       <MYSQL_USER>syncope</MYSQL_USER>\n                       <MYSQL_PASSWORD>syncope</MYSQL_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>3306:3306</port>\n-                    </ports>\n                     <wait>\n                       <log>MySQL init process done. Ready for start up.</log>\n                       <time>30000</time>\n@@ -1226,6 +1228,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.mariadb.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -1284,6 +1293,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>oracle</alias>\n                   <name>database-enterprise</name>\n                   <build>\n                     <dockerFileDir>${project.basedir}/src/main/resources/oracle</dockerFileDir>\n@@ -1293,9 +1303,6 @@ under the License.\n                       <ORACLE_ALLOW_REMOTE>true</ORACLE_ALLOW_REMOTE>\n                       <ORACLE_ENABLE_XDB>true</ORACLE_ENABLE_XDB>\n                     </env>\n-                    <ports>\n-                      <port>1521:1521</port>\n-                    </ports>\n                     <wait>\n                       <log>Disconnected from Oracle Database 11g Express Edition</log>\n                       <time>30000</time>\n@@ -1334,6 +1341,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.oracle.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -1391,6 +1405,7 @@ under the License.\n             <configuration>\n               <images>\n                 <image>\n+                  <alias>sqlserver</alias>\n                   <name>mcmoe/mssqldocker:latest</name>\n                   <run>\n                     <env>\n@@ -1400,9 +1415,6 @@ under the License.\n                       <MSSQL_USER>syncope</MSSQL_USER>\n                       <MSSQL_PASSWORD>Syncope123</MSSQL_PASSWORD>\n                     </env>\n-                    <ports>\n-                      <port>1433:1433</port>\n-                    </ports>\n                     <wait>\n                       <log>MSSQL CONFIG COMPLETE</log>\n                       <time>30000</time>\n@@ -1434,6 +1446,13 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n+            <configuration>\n+              <container>\n+                <systemProperties>\n+                  <DB_CONTAINER_IP>${docker.container.sqlserver.ip}</DB_CONTAINER_IP>\n+                </systemProperties>\n+              </container>\n+            </configuration>\n           </plugin>\n         </plugins>\n \n@@ -1609,7 +1628,7 @@ under the License.\n               </container>\n               <configuration>\n                 <properties>\n-                  <cargo.jvmargs>-Dspring.profiles.active=wildfly,embedded\n+                  <cargo.jvmargs>-Djava.net.preferIPv4Stack=true -Dspring.profiles.active=wildfly,embedded\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseG1GC -Xmx2048m -Xms1024m</cargo.jvmargs>\n                 </properties>\n               </configuration>"},{"sha":"5b36d417c3159688d98fb6a0c204e179602b3e88","filename":"fit/core-reference/src/main/resources/myjson/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=jdbc:mysql://localhost:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+Master.url=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n Master.schema=\n Master.username=syncope\n Master.password=syncope"},{"sha":"8bac6d24fd3ff80b59626bda5abd207b6f073070","filename":"fit/core-reference/src/main/resources/mysql/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=com.mysql.cj.jdbc.Driver\n-Master.url=jdbc:mysql://localhost:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+Master.url=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n Master.schema=\n Master.username=syncope\n Master.password=syncope"},{"sha":"6267bbd68fcb5e1d834bfef71b63d91f455f1666","filename":"fit/core-reference/src/main/resources/oracle/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=oracle.jdbc.OracleDriver\n-Master.url=jdbc:oracle:thin:@localhost:1521:XE\n+Master.url=jdbc:oracle:thin:@${DB_CONTAINER_IP}:1521:XE\n Master.schema=SYNCOPE\n Master.username=syncope\n Master.password=syncope"},{"sha":"4f42b5619719b8f72348361043e85d1bdac3592a","filename":"fit/core-reference/src/main/resources/pgjsonb/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=org.postgresql.Driver\n-Master.url=jdbc:postgresql://localhost:5432/syncope?stringtype=unspecified\n+Master.url=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope?stringtype=unspecified\n Master.schema=\n Master.username=syncope\n Master.password=syncope"},{"sha":"078d5de66379f9dbde1eebed6161d0ab9d8fae4a","filename":"fit/core-reference/src/main/resources/postgres/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=org.postgresql.Driver\n-Master.url=jdbc:postgresql://localhost:5432/syncope\n+Master.url=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope\n Master.schema=\n Master.username=syncope\n Master.password=syncope"},{"sha":"20a6820ce0a439874bb5430178f758f77c4e3122","filename":"fit/core-reference/src/main/resources/sqlserver/domains/Master.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fdomains%2FMaster.properties?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Master.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver\n-Master.url=jdbc:sqlserver://localhost:1433;databaseName=syncope\n+Master.url=jdbc:sqlserver://${DB_CONTAINER_IP}:1433;databaseName=syncope\n Master.schema=dbo\n Master.username=syncope\n Master.password=Syncope123"},{"sha":"54fb8050f818930d4e0e14f34efcf47cc0f619ea","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/KeymasterITCase.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FKeymasterITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FKeymasterITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FKeymasterITCase.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -25,7 +25,7 @@\n import static org.junit.jupiter.api.Assertions.assertThrows;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n-import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n import java.security.AccessControlException;\n import java.util.ArrayList;\n@@ -218,6 +218,7 @@ public void serviceRun() {\n     public void domainCRUD() throws Exception {\n         List<Domain> initial = domainOps.list();\n         assertNotNull(initial);\n+        assumeTrue(initial.stream().anyMatch(domain -> \"Two\".equals(domain.getKey())));\n \n         // 1. create new domain\n         String key = UUID.randomUUID().toString();\n@@ -295,7 +296,9 @@ public void domainCRUD() throws Exception {\n \n     @Test\n     public void domainCreateMaster() {\n-        assertThrows(KeymasterException.class, () -> domainOps.create(new Domain.Builder(SyncopeConstants.MASTER_DOMAIN).build()));\n+        assertThrows(\n+                KeymasterException.class,\n+                () -> domainOps.create(new Domain.Builder(SyncopeConstants.MASTER_DOMAIN).build()));\n     }\n \n     @Test\n@@ -305,7 +308,9 @@ public void domainCreateDuplicateKey() {\n \n     @Test\n     public void domainUpdateAdminPassword() throws Exception {\n-        assumeFalse(domainOps.list().isEmpty());\n+        List<Domain> initial = domainOps.list();\n+        assertNotNull(initial);\n+        assumeTrue(initial.stream().anyMatch(domain -> \"Two\".equals(domain.getKey())));\n \n         Domain two = domainOps.read(\"Two\");\n         assertNotNull(two);"},{"sha":"27cb60f75ee20b16094c1c4dbb8e9f949ea77d94","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -23,15 +23,17 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n-import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n+import java.util.List;\n import java.util.Locale;\n import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.UserCR;\n@@ -80,7 +82,9 @@ public class MultitenancyITCase extends AbstractITCase {\n \n     @BeforeEach\n     public void multitenancyCheck() {\n-        assumeFalse(domainOps.list().isEmpty());\n+        List<Domain> initial = domainOps.list();\n+        assertNotNull(initial);\n+        assumeTrue(initial.stream().anyMatch(domain -> \"Two\".equals(domain.getKey())));\n \n         clientFactory = new SyncopeClientFactoryBean().setAddress(ADDRESS).setDomain(\"Two\");\n "},{"sha":"8b053bf1cdc0bba79932cdfbd4a0ff365d1a665d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -25,6 +25,7 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n \n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n@@ -97,6 +98,7 @@\n import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n import org.apache.syncope.core.provisioning.java.pushpull.LDAPPasswordPullActions;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.apache.syncope.fit.ElasticsearchDetector;\n import org.apache.syncope.fit.FlowableDetector;\n import org.apache.syncope.fit.core.reference.TestPullActions;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -181,6 +183,8 @@ public void create() {\n \n     @Test\n     public void fromCSV() throws Exception {\n+        assumeFalse(ElasticsearchDetector.isElasticSearchEnabled(syncopeService));\n+\n         removeTestUsers();\n \n         // Attemp to reset CSV content\n@@ -542,8 +546,8 @@ public void reconcileFromScriptedSQL() throws IOException {\n \n             // 2. verify that PrefixMappingItemTransformer was applied during propagation\n             // (location starts with given prefix on external resource)\n-            ConnObjectTO connObjectTO = resourceService.\n-                    readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n+            ConnObjectTO connObjectTO = resourceService.readConnObject(\n+                    RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n             assertFalse(anyObjectTO.getPlainAttr(\"location\").get().getValues().get(0).startsWith(prefix));\n             assertTrue(connObjectTO.getAttr(\"LOCATION\").get().getValues().get(0).startsWith(prefix));\n \n@@ -567,6 +571,14 @@ public void reconcileFromScriptedSQL() throws IOException {\n             // 4. pull\n             execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n \n+            if (ElasticsearchDetector.isElasticSearchEnabled(syncopeService)) {\n+                try {\n+                    Thread.sleep(2000);\n+                } catch (InterruptedException ex) {\n+                    // ignore\n+                }\n+            }\n+\n             // 5. verify that printer was re-created in Syncope (implies that location does not start with given prefix,\n             // hence PrefixItemTransformer was applied during pull)\n             matchingPrinters = anyObjectService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM)."},{"sha":"336b74f0818a922ac3c096c16badecbd0e56aa51","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -34,6 +34,7 @@\n import org.apache.commons.lang3.RandomStringUtils;\n import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n@@ -43,6 +44,7 @@\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.request.AttrPatch;\n+import org.apache.syncope.common.lib.search.UserPartialCondition;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n@@ -81,8 +83,8 @@ public void searchUser() {\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());\n \n-        assertEquals(2, matchingUsers.getResult().stream().filter(user -> \"74cd8ece-715a-44a4-a736-e17b46c4e7e6\".equals(\n-                user.getKey())\n+        assertEquals(2, matchingUsers.getResult().stream().\n+                filter(user -> \"74cd8ece-715a-44a4-a736-e17b46c4e7e6\".equals(user.getKey())\n                 || \"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\".equals(user.getKey())).count());\n     }\n \n@@ -752,6 +754,17 @@ public void issueSYNCOPE1417() {\n \n     @Test\n     public void issueSYNCOPE1419() {\n+        UserTO rossini = userService.read(\"rossini\");\n+        assertNotNull(rossini);\n+\n+        UserUR req = new UserUR();\n+        req.setKey(rossini.getKey());\n+        req.getPlainAttrs().add(new AttrPatch.Builder(\n+                new Attr.Builder(\"loginDate\").value(\"2009-05-26\").build()).build());\n+        rossini = updateUser(req).getEntity();\n+        assertNotNull(rossini);\n+        assertEquals(\"2009-05-26\", rossini.getPlainAttr(\"loginDate\").get().getValues().get(0));\n+\n         PagedResult<UserTO> total = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).page(1).size(1).build());\n "},{"sha":"5ca90bd7624a35b3246a589caff8e081754d32e4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f479709624c1207befa8ea77db0ae2d5de2df29d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=f479709624c1207befa8ea77db0ae2d5de2df29d","patch":"@@ -25,6 +25,7 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n \n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n@@ -81,6 +82,7 @@\n import org.apache.syncope.core.provisioning.java.propagation.LDAPPasswordPropagationActions;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.ElasticsearchDetector;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.junit.jupiter.api.Test;\n@@ -1063,6 +1065,8 @@ public void issueSYNCOPE505LDAP() throws Exception {\n \n     @Test\n     public void issueSYNCOPE391() {\n+        assumeFalse(ElasticsearchDetector.isElasticSearchEnabled(syncopeService));\n+\n         // 1. create user on Syncope with null password\n         UserCR userCR = UserITCase.getUniqueSample(\"syncope391@syncope.apache.org\");\n         userCR.setPassword(null);"}]}