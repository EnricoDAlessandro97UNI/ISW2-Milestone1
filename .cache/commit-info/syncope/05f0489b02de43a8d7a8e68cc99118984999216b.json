{"sha":"05f0489b02de43a8d7a8e68cc99118984999216b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1ZjA0ODliMDJkZTQzYThkN2E4ZTY4Y2M5OTExODk4NDk5OTIxNmI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-18T16:20:21Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-18T16:20:21Z"},"message":"Re-organizing default content loader\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246738 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f4a8764e0ec8b4afd3b3ed804dde46de399d8d0b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f4a8764e0ec8b4afd3b3ed804dde46de399d8d0b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/05f0489b02de43a8d7a8e68cc99118984999216b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05f0489b02de43a8d7a8e68cc99118984999216b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05f0489b02de43a8d7a8e68cc99118984999216b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05f0489b02de43a8d7a8e68cc99118984999216b/comments","author":null,"committer":null,"parents":[{"sha":"753d4cfe6bff6a6bfbec0483d5f8fc89abafb570","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/753d4cfe6bff6a6bfbec0483d5f8fc89abafb570","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/753d4cfe6bff6a6bfbec0483d5f8fc89abafb570"}],"stats":{"total":48,"additions":26,"deletions":22},"files":[{"sha":"0ccf2d9f0d84aff392a619a90c31d795fe40e464","filename":"core/src/main/java/org/syncope/core/persistence/DefaultContentLoader.java","status":"modified","additions":26,"deletions":22,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05f0489b02de43a8d7a8e68cc99118984999216b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05f0489b02de43a8d7a8e68cc99118984999216b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java?ref=05f0489b02de43a8d7a8e68cc99118984999216b","patch":"@@ -67,7 +67,29 @@ public final void contextInitialized(final ServletContextEvent sce) {\n                 (DataSource) springContext.getBean(\"localDataSource\");\n         Connection conn = DataSourceUtils.getConnection(dataSource);\n \n-        // 1. Check wether we are allowed to load default content into the DB\n+        // 1. read persistence.properties and set search mode\n+        String dbSchema = null;\n+        String searchMode = null;\n+        try {\n+            InputStream dbPropsStream = getClass().getResourceAsStream(\n+                    \"/persistence.properties\");\n+            Properties dbProps = new Properties();\n+            dbProps.load(dbPropsStream);\n+            dbSchema = dbProps.getProperty(\"database.schema\");\n+            searchMode = dbProps.getProperty(\"search.mode\");\n+        } catch (Throwable t) {\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Could not find persistence.properties\", t);\n+            } else {\n+                LOG.error(\"Could not find persistence.properties\");\n+            }\n+        }\n+\n+        LOG.debug(\"Setting search mode to \" + searchMode);\n+        UserController.setSearchMode(searchMode);\n+        LOG.debug(\"Search mode set to {}\", UserController.getSearchMode());\n+\n+        // 2. Check wether we are allowed to load default content into the DB\n         Statement statement = null;\n         ResultSet resultSet = null;\n         boolean existingData = false;\n@@ -103,6 +125,7 @@ public final void contextInitialized(final ServletContextEvent sce) {\n \n         LOG.info(\"Empty database found, loading default content\");\n \n+        // 3. Create views\n         LOG.debug(\"Creating views\");\n         try {\n             InputStream viewsStream = getClass().getResourceAsStream(\n@@ -128,6 +151,7 @@ public final void contextInitialized(final ServletContextEvent sce) {\n             LOG.error(\"While creating views\", t);\n         }\n \n+        // 4. Create indexes\n         LOG.debug(\"Creating indexes\");\n         try {\n             InputStream indexesStream = getClass().getResourceAsStream(\n@@ -152,27 +176,7 @@ public final void contextInitialized(final ServletContextEvent sce) {\n             LOG.error(\"While creating indexes\", t);\n         }\n \n-        String dbSchema = null;\n-        String searchMode = null;\n-        try {\n-            InputStream dbPropsStream = getClass().getResourceAsStream(\n-                    \"/persistence.properties\");\n-            Properties dbProps = new Properties();\n-            dbProps.load(dbPropsStream);\n-            dbSchema = dbProps.getProperty(\"database.schema\");\n-            searchMode = dbProps.getProperty(\"search.mode\");\n-        } catch (Throwable t) {\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Could not find persistence.properties\", t);\n-            } else {\n-                LOG.error(\"Could not find persistence.properties\");\n-            }\n-        }\n-\n-        LOG.debug(\"Setting sarch mode to \" + searchMode);\n-        UserController.setSearchMode(searchMode);\n-        LOG.debug(\"Search mode set to {}\", UserController.getSearchMode());\n-\n+        // 5. Load default content\n         try {\n             IDatabaseConnection dbUnitConn = dbSchema == null\n                     ? new DatabaseConnection(conn)"}]}