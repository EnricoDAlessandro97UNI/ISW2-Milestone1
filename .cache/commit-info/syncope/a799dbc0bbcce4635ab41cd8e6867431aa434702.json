{"sha":"a799dbc0bbcce4635ab41cd8e6867431aa434702","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE3OTlkYmMwYmJjY2U0NjM1YWI0MWNkOGU2ODY3NDMxYWE0MzQ3MDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-16T08:38:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-16T08:40:21Z"},"message":"[SYNCOPE-1224] Properly using pagination for bulk delete","tree":{"sha":"b861936a811126b8c4c4b6e6968d67b067eda835","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b861936a811126b8c4c4b6e6968d67b067eda835"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a799dbc0bbcce4635ab41cd8e6867431aa434702","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a799dbc0bbcce4635ab41cd8e6867431aa434702","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a799dbc0bbcce4635ab41cd8e6867431aa434702","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a799dbc0bbcce4635ab41cd8e6867431aa434702/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d641ee2228dd17615f04a6386619d749ef0363d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d641ee2228dd17615f04a6386619d749ef0363d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d641ee2228dd17615f04a6386619d749ef0363d6"}],"stats":{"total":37,"additions":25,"deletions":12},"files":[{"sha":"6efa5447bbacce71c4b22a4ac0b3608aef51b179","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"modified","additions":25,"deletions":12,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a799dbc0bbcce4635ab41cd8e6867431aa434702/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a799dbc0bbcce4635ab41cd8e6867431aa434702/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=a799dbc0bbcce4635ab41cd8e6867431aa434702","patch":"@@ -20,17 +20,21 @@\n \n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.UserService;\n \n public class UserSyncopeOperations {\n \n+    private static final int PAGE_SIZE = 100;\n+\n     private final UserService userService = SyncopeServices.get(UserService.class);\n \n     public boolean auth(final String username, final String password) {\n@@ -72,23 +76,32 @@ public void delete(final String userKey) {\n \n     public Map<String, BulkActionResult.Status> deleteByAttribute(\n             final String realm, final String attributeName, final String attributeValue) {\n-        final List<UserTO> users = userService.search(new AnyQuery.Builder().realm(realm).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue)\n-                        .query()).build()).getResult();\n-        return deleteBulk(users);\n+\n+        return bulkDelete(new AnyQuery.Builder().realm(realm).fiql(\n+                SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue).query()).\n+                build());\n     }\n \n     public Map<String, BulkActionResult.Status> deleteAll(final String realm) {\n-        return deleteBulk(userService.search(new AnyQuery.Builder().realm(realm).details(false).build()).getResult());\n+        return bulkDelete(new AnyQuery.Builder().realm(realm).details(false).build());\n     }\n \n-    private Map<String, BulkActionResult.Status> deleteBulk(final List<UserTO> users) {\n-        final BulkAction bulkAction = new BulkAction();\n+    private Map<String, BulkActionResult.Status> bulkDelete(final AnyQuery query) {\n+        query.setPage(0);\n+        query.setSize(0);\n+        int count = userService.search(query).getTotalCount();\n+\n+        BulkAction bulkAction = new BulkAction();\n         bulkAction.setType(BulkAction.Type.DELETE);\n-        users.forEach(user -> {\n-            bulkAction.getTargets().add(user.getKey());\n-        });\n-        final BulkActionResult bulkResult = userService.bulk(bulkAction).readEntity(BulkActionResult.class);\n-        return bulkResult.getResults();\n+\n+        query.setSize(PAGE_SIZE);\n+        for (int page = 1; page <= (count / PAGE_SIZE) + 1; page++) {\n+            query.setPage(page);\n+\n+            bulkAction.getTargets().addAll(userService.search(query).getResult().stream().\n+                    map(EntityTO::getKey).collect(Collectors.toList()));\n+        }\n+\n+        return userService.bulk(bulkAction).readEntity(BulkActionResult.class).getResults();\n     }\n }"}]}