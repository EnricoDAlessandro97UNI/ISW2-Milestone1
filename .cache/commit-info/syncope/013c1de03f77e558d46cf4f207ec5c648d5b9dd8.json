{"sha":"013c1de03f77e558d46cf4f207ec5c648d5b9dd8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAxM2MxZGUwM2Y3N2U1NThkNDZjZjRmMjA3ZWM1YzY0OGQ1YjlkZDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-09T14:45:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-09T15:30:35Z"},"message":"[SYNCOPE-152] Support for attributes and excludedAttributes for read, list and search operations","tree":{"sha":"0145859b91e422979373a5c5b420c222a6460a28","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0145859b91e422979373a5c5b420c222a6460a28"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/013c1de03f77e558d46cf4f207ec5c648d5b9dd8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/013c1de03f77e558d46cf4f207ec5c648d5b9dd8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/013c1de03f77e558d46cf4f207ec5c648d5b9dd8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6e55cb1150e2a84e9d38755675e8c8b069bacee2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6e55cb1150e2a84e9d38755675e8c8b069bacee2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6e55cb1150e2a84e9d38755675e8c8b069bacee2"}],"stats":{"total":491,"additions":277,"deletions":214},"files":[{"sha":"4bc923a03efe9933dfa1b88b3b7f23999002f76a","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"modified","additions":194,"deletions":130,"changes":324,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -96,7 +96,32 @@ private <E extends Enum<?>> void fill(\n         });\n     }\n \n-    public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n+    private boolean output(\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n+            final String schema) {\n+\n+        return (attributes.isEmpty() || attributes.contains(schema))\n+                && (excludedAttributes.isEmpty() || !excludedAttributes.contains(schema));\n+    }\n+\n+    private <T> T output(\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n+            final String schema,\n+            final T value) {\n+\n+        return output(attributes, excludedAttributes, schema)\n+                ? value\n+                : null;\n+    }\n+\n+    public SCIMUser toSCIMUser(\n+            final UserTO userTO,\n+            final String location,\n+            final List<String> attributes,\n+            final List<String> excludedAttributes) {\n+\n         SCIMConf conf = confManager.get();\n \n         List<String> schemas = new ArrayList<>();\n@@ -115,7 +140,7 @@ public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n                         ? userTO.getCreationDate() : userTO.getLastChangeDate(),\n                         userTO.getETagValue(),\n                         location),\n-                userTO.getUsername(),\n+                output(attributes, excludedAttributes, \"userName\", userTO.getUsername()),\n                 !userTO.isSuspended());\n \n         Map<String, AttrTO> attrs = new HashMap<>();\n@@ -124,7 +149,7 @@ public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n         attrs.putAll(EntityTOUtils.buildAttrMap(userTO.getVirAttrs()));\n \n         if (conf.getUserConf() != null) {\n-            if (conf.getUserConf().getName() != null) {\n+            if (output(attributes, excludedAttributes, \"name\") && conf.getUserConf().getName() != null) {\n                 SCIMUserName name = new SCIMUserName();\n \n                 if (conf.getUserConf().getName().getFamilyName() != null\n@@ -165,199 +190,238 @@ public SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n                 }\n             }\n \n-            if (conf.getUserConf().getDisplayName() != null\n+            if (output(attributes, excludedAttributes, \"displayName\")\n+                    && conf.getUserConf().getDisplayName() != null\n                     && attrs.containsKey(conf.getUserConf().getDisplayName())) {\n \n                 user.setDisplayName(attrs.get(conf.getUserConf().getDisplayName()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getNickName() != null\n+            if (output(attributes, excludedAttributes, \"nickName\")\n+                    && conf.getUserConf().getNickName() != null\n                     && attrs.containsKey(conf.getUserConf().getNickName())) {\n \n                 user.setNickName(attrs.get(conf.getUserConf().getNickName()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getProfileUrl() != null\n+            if (output(attributes, excludedAttributes, \"profileUrl\")\n+                    && conf.getUserConf().getProfileUrl() != null\n                     && attrs.containsKey(conf.getUserConf().getProfileUrl())) {\n \n                 user.setProfileUrl(attrs.get(conf.getUserConf().getProfileUrl()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getTitle() != null\n+            if (output(attributes, excludedAttributes, \"title\")\n+                    && conf.getUserConf().getTitle() != null\n                     && attrs.containsKey(conf.getUserConf().getTitle())) {\n \n                 user.setTitle(attrs.get(conf.getUserConf().getTitle()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getUserType() != null\n+            if (output(attributes, excludedAttributes, \"userType\")\n+                    && conf.getUserConf().getUserType() != null\n                     && attrs.containsKey(conf.getUserConf().getUserType())) {\n \n                 user.setUserType(attrs.get(conf.getUserConf().getUserType()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getPreferredLanguage() != null\n+            if (output(attributes, excludedAttributes, \"preferredLanguage\")\n+                    && conf.getUserConf().getPreferredLanguage() != null\n                     && attrs.containsKey(conf.getUserConf().getPreferredLanguage())) {\n \n                 user.setPreferredLanguage(attrs.get(conf.getUserConf().getPreferredLanguage()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getLocale() != null\n+            if (output(attributes, excludedAttributes, \"locale\")\n+                    && conf.getUserConf().getLocale() != null\n                     && attrs.containsKey(conf.getUserConf().getLocale())) {\n \n                 user.setLocale(attrs.get(conf.getUserConf().getLocale()).getValues().get(0));\n             }\n \n-            if (conf.getUserConf().getTimezone() != null\n+            if (output(attributes, excludedAttributes, \"timezone\")\n+                    && conf.getUserConf().getTimezone() != null\n                     && attrs.containsKey(conf.getUserConf().getTimezone())) {\n \n                 user.setTimezone(attrs.get(conf.getUserConf().getTimezone()).getValues().get(0));\n             }\n \n-            fill(attrs, conf.getUserConf().getEmails(), user.getEmails());\n-            fill(attrs, conf.getUserConf().getPhoneNumbers(), user.getPhoneNumbers());\n-            fill(attrs, conf.getUserConf().getIms(), user.getIms());\n-            fill(attrs, conf.getUserConf().getPhotos(), user.getPhotos());\n-            conf.getUserConf().getAddresses().forEach(addressConf -> {\n-                SCIMUserAddress address = new SCIMUserAddress();\n+            if (output(attributes, excludedAttributes, \"emails\")) {\n+                fill(attrs, conf.getUserConf().getEmails(), user.getEmails());\n+            }\n+            if (output(attributes, excludedAttributes, \"phoneNumbers\")) {\n+                fill(attrs, conf.getUserConf().getPhoneNumbers(), user.getPhoneNumbers());\n+            }\n+            if (output(attributes, excludedAttributes, \"ims\")) {\n+                fill(attrs, conf.getUserConf().getIms(), user.getIms());\n+            }\n+            if (output(attributes, excludedAttributes, \"photos\")) {\n+                fill(attrs, conf.getUserConf().getPhotos(), user.getPhotos());\n+            }\n+            if (output(attributes, excludedAttributes, \"addresses\")) {\n+                conf.getUserConf().getAddresses().forEach(addressConf -> {\n+                    SCIMUserAddress address = new SCIMUserAddress();\n \n-                if (addressConf.getFormatted() != null && attrs.containsKey(addressConf.getFormatted())) {\n-                    address.setFormatted(attrs.get(addressConf.getFormatted()).getValues().get(0));\n-                }\n-                if (addressConf.getStreetAddress() != null && attrs.containsKey(addressConf.getStreetAddress())) {\n-                    address.setStreetAddress(attrs.get(addressConf.getStreetAddress()).getValues().get(0));\n-                }\n-                if (addressConf.getLocality() != null && attrs.containsKey(addressConf.getLocality())) {\n-                    address.setLocality(attrs.get(addressConf.getLocality()).getValues().get(0));\n-                }\n-                if (addressConf.getRegion() != null && attrs.containsKey(addressConf.getRegion())) {\n-                    address.setRegion(attrs.get(addressConf.getRegion()).getValues().get(0));\n-                }\n-                if (addressConf.getCountry() != null && attrs.containsKey(addressConf.getCountry())) {\n-                    address.setCountry(attrs.get(addressConf.getCountry()).getValues().get(0));\n-                }\n-                if (addressConf.getType() != null) {\n-                    address.setType(addressConf.getType().name());\n-                }\n-                if (addressConf.isPrimary()) {\n-                    address.setPrimary(true);\n-                }\n+                    if (addressConf.getFormatted() != null && attrs.containsKey(addressConf.getFormatted())) {\n+                        address.setFormatted(attrs.get(addressConf.getFormatted()).getValues().get(0));\n+                    }\n+                    if (addressConf.getStreetAddress() != null && attrs.containsKey(addressConf.getStreetAddress())) {\n+                        address.setStreetAddress(attrs.get(addressConf.getStreetAddress()).getValues().get(0));\n+                    }\n+                    if (addressConf.getLocality() != null && attrs.containsKey(addressConf.getLocality())) {\n+                        address.setLocality(attrs.get(addressConf.getLocality()).getValues().get(0));\n+                    }\n+                    if (addressConf.getRegion() != null && attrs.containsKey(addressConf.getRegion())) {\n+                        address.setRegion(attrs.get(addressConf.getRegion()).getValues().get(0));\n+                    }\n+                    if (addressConf.getCountry() != null && attrs.containsKey(addressConf.getCountry())) {\n+                        address.setCountry(attrs.get(addressConf.getCountry()).getValues().get(0));\n+                    }\n+                    if (addressConf.getType() != null) {\n+                        address.setType(addressConf.getType().name());\n+                    }\n+                    if (addressConf.isPrimary()) {\n+                        address.setPrimary(true);\n+                    }\n+\n+                    if (!address.isEmpty()) {\n+                        user.getAddresses().add(address);\n+                    }\n+                });\n+            }\n+\n+            if (output(attributes, excludedAttributes, \"x509Certificates\")) {\n+                conf.getUserConf().getX509Certificates().stream().\n+                        filter(certificate -> attrs.containsKey(certificate)).\n+                        forEachOrdered(certificate -> {\n+                            user.getX509Certificates().add(new Value(attrs.get(certificate).getValues().get(0)));\n+                        });\n+            }\n \n-                if (!address.isEmpty()) {\n-                    user.getAddresses().add(address);\n+            if (conf.getEnterpriseUserConf() != null) {\n+                SCIMEnterpriseInfo enterpriseInfo = new SCIMEnterpriseInfo();\n+\n+                if (output(attributes, excludedAttributes, \"employeeNumber\")\n+                        && conf.getEnterpriseUserConf().getEmployeeNumber() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getEmployeeNumber())) {\n+\n+                    enterpriseInfo.setEmployeeNumber(\n+                            attrs.get(conf.getEnterpriseUserConf().getEmployeeNumber()).getValues().get(0));\n                 }\n-            });\n+                if (output(attributes, excludedAttributes, \"costCenter\")\n+                        && conf.getEnterpriseUserConf().getCostCenter() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getCostCenter())) {\n \n-            conf.getUserConf().getX509Certificates().stream().\n-                    filter(certificate -> attrs.containsKey(certificate)).\n-                    forEachOrdered(certificate -> {\n-                        user.getX509Certificates().add(new Value(attrs.get(certificate).getValues().get(0)));\n-                    });\n-        }\n+                    enterpriseInfo.setCostCenter(\n+                            attrs.get(conf.getEnterpriseUserConf().getCostCenter()).getValues().get(0));\n+                }\n+                if (output(attributes, excludedAttributes, \"organization\")\n+                        && conf.getEnterpriseUserConf().getOrganization() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getOrganization())) {\n \n-        if (conf.getEnterpriseUserConf() != null) {\n-            SCIMEnterpriseInfo enterpriseInfo = new SCIMEnterpriseInfo();\n+                    enterpriseInfo.setOrganization(\n+                            attrs.get(conf.getEnterpriseUserConf().getOrganization()).getValues().get(0));\n+                }\n+                if (output(attributes, excludedAttributes, \"division\")\n+                        && conf.getEnterpriseUserConf().getDivision() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getDivision())) {\n \n-            if (conf.getEnterpriseUserConf().getEmployeeNumber() != null\n-                    && attrs.containsKey(conf.getEnterpriseUserConf().getEmployeeNumber())) {\n+                    enterpriseInfo.setDivision(\n+                            attrs.get(conf.getEnterpriseUserConf().getDivision()).getValues().get(0));\n+                }\n+                if (output(attributes, excludedAttributes, \"department\")\n+                        && conf.getEnterpriseUserConf().getDepartment() != null\n+                        && attrs.containsKey(conf.getEnterpriseUserConf().getDepartment())) {\n \n-                enterpriseInfo.setEmployeeNumber(\n-                        attrs.get(conf.getEnterpriseUserConf().getEmployeeNumber()).getValues().get(0));\n-            }\n-            if (conf.getEnterpriseUserConf().getCostCenter() != null\n-                    && attrs.containsKey(conf.getEnterpriseUserConf().getCostCenter())) {\n+                    enterpriseInfo.setDepartment(\n+                            attrs.get(conf.getEnterpriseUserConf().getDepartment()).getValues().get(0));\n+                }\n+                if (output(attributes, excludedAttributes, \"manager\")\n+                        && conf.getEnterpriseUserConf().getManager() != null) {\n \n-                enterpriseInfo.setCostCenter(\n-                        attrs.get(conf.getEnterpriseUserConf().getCostCenter()).getValues().get(0));\n-            }\n-            if (conf.getEnterpriseUserConf().getOrganization() != null\n-                    && attrs.containsKey(conf.getEnterpriseUserConf().getOrganization())) {\n+                    SCIMUserManager manager = new SCIMUserManager();\n \n-                enterpriseInfo.setOrganization(\n-                        attrs.get(conf.getEnterpriseUserConf().getOrganization()).getValues().get(0));\n-            }\n-            if (conf.getEnterpriseUserConf().getDivision() != null\n-                    && attrs.containsKey(conf.getEnterpriseUserConf().getDivision())) {\n+                    if (conf.getEnterpriseUserConf().getManager().getManager() != null\n+                            && attrs.containsKey(conf.getEnterpriseUserConf().getManager().getManager())) {\n \n-                enterpriseInfo.setDivision(\n-                        attrs.get(conf.getEnterpriseUserConf().getDivision()).getValues().get(0));\n-            }\n-            if (conf.getEnterpriseUserConf().getDepartment() != null\n-                    && attrs.containsKey(conf.getEnterpriseUserConf().getDepartment())) {\n+                        try {\n+                            UserTO userManager = userLogic.read(\n+                                    attrs.get(conf.getEnterpriseUserConf().getManager().getManager()).getValues().get(0));\n+                            manager.setValue(userManager.getKey());\n+                            manager.setRef(\n+                                    StringUtils.substringBefore(location, \"/Users\") + \"/Users/\" + userManager.getKey());\n \n-                enterpriseInfo.setDepartment(\n-                        attrs.get(conf.getEnterpriseUserConf().getDepartment()).getValues().get(0));\n-            }\n-            if (conf.getEnterpriseUserConf().getManager() != null) {\n-                SCIMUserManager manager = new SCIMUserManager();\n-\n-                if (conf.getEnterpriseUserConf().getManager().getManager() != null\n-                        && attrs.containsKey(conf.getEnterpriseUserConf().getManager().getManager())) {\n-\n-                    try {\n-                        UserTO userManager = userLogic.read(\n-                                attrs.get(conf.getEnterpriseUserConf().getManager().getManager()).getValues().get(0));\n-                        manager.setValue(userManager.getKey());\n-                        manager.setRef(\n-                                StringUtils.substringBefore(location, \"/Users\") + \"/Users/\" + userManager.getKey());\n-\n-                        if (conf.getEnterpriseUserConf().getManager().getDisplayName() != null) {\n-                            AttrTO displayName = userManager.getPlainAttr(\n-                                    conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n-                            if (displayName == null) {\n-                                displayName = userManager.getDerAttr(\n+                            if (conf.getEnterpriseUserConf().getManager().getDisplayName() != null) {\n+                                AttrTO displayName = userManager.getPlainAttr(\n                                         conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                                if (displayName == null) {\n+                                    displayName = userManager.getDerAttr(\n+                                            conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                                }\n+                                if (displayName == null) {\n+                                    displayName = userManager.getVirAttr(\n+                                            conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n+                                }\n+                                if (displayName != null) {\n+                                    manager.setDisplayName(displayName.getValues().get(0));\n+                                }\n                             }\n-                            if (displayName == null) {\n-                                displayName = userManager.getVirAttr(\n-                                        conf.getEnterpriseUserConf().getManager().getDisplayName()).orElse(null);\n-                            }\n-                            if (displayName != null) {\n-                                manager.setDisplayName(displayName.getValues().get(0));\n-                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not read user {}\",\n+                                    conf.getEnterpriseUserConf().getManager().getManager(), e);\n                         }\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read attribute {}\",\n-                                conf.getEnterpriseUserConf().getManager().getManager(), e);\n+                    }\n+\n+                    if (!manager.isEmpty()) {\n+                        enterpriseInfo.setManager(manager);\n                     }\n                 }\n \n-                if (!manager.isEmpty()) {\n-                    enterpriseInfo.setManager(manager);\n+                if (!enterpriseInfo.isEmpty()) {\n+                    user.setEnterpriseInfo(enterpriseInfo);\n                 }\n             }\n \n-            if (!enterpriseInfo.isEmpty()) {\n-                user.setEnterpriseInfo(enterpriseInfo);\n+            if (output(attributes, excludedAttributes, \"groups\")) {\n+                userTO.getMemberships().forEach(membership -> {\n+                    user.getGroups().add(new Group(\n+                            membership.getGroupKey(),\n+                            StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                            membership.getGroupName(),\n+                            Function.direct));\n+                });\n+                userTO.getDynMemberships().forEach(membership -> {\n+                    user.getGroups().add(new Group(\n+                            membership.getGroupKey(),\n+                            StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                            membership.getGroupName(),\n+                            Function.indirect));\n+                });\n             }\n-        }\n-\n-        userTO.getMemberships().forEach(membership -> {\n-            user.getGroups().add(new Group(\n-                    membership.getGroupKey(),\n-                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n-                    membership.getGroupName(),\n-                    Function.direct));\n-        });\n-        userTO.getDynMemberships().forEach(membership -> {\n-            user.getGroups().add(new Group(\n-                    membership.getGroupKey(),\n-                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n-                    membership.getGroupName(),\n-                    Function.indirect));\n-        });\n \n-        authDataAccessor.getAuthorities(userTO.getUsername()).forEach(authority -> {\n-            user.getEntitlements().add(new Value(authority.getAuthority() + \" on Realm(s) \" + authority.getRealms()));\n-        });\n+            if (output(attributes, excludedAttributes, \"entitlements\")) {\n+                authDataAccessor.getAuthorities(userTO.getUsername()).forEach(authority -> {\n+                    user.getEntitlements().\n+                            add(new Value(authority.getAuthority() + \" on Realm(s) \" + authority.getRealms()));\n+                });\n+            }\n \n-        userTO.getRoles().forEach(role -> {\n-            user.getRoles().add(new Value(role));\n-        });\n+            if (output(attributes, excludedAttributes, \"roles\")) {\n+                userTO.getRoles().forEach(role -> {\n+                    user.getRoles().add(new Value(role));\n+                });\n+            }\n+        }\n \n         return user;\n     }\n \n-    public SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n+    public SCIMGroup toSCIMGroup(\n+            final GroupTO groupTO,\n+            final String location,\n+            final List<String> attributes,\n+            final List<String> excludedAttributes) {\n+\n         SCIMGroup group = new SCIMGroup(\n                 groupTO.getKey(),\n                 new Meta(\n@@ -367,7 +431,7 @@ public SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n                         ? groupTO.getCreationDate() : groupTO.getLastChangeDate(),\n                         groupTO.getETagValue(),\n                         location),\n-                groupTO.getName());\n+                output(attributes, excludedAttributes, \"name\", groupTO.getName()));\n \n         MembershipCond membCond = new MembershipCond();\n         membCond.setGroup(groupTO.getKey());"},{"sha":"cfb48f94a9bc3eb87f8cf943eecb886634544f4a","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -103,7 +103,7 @@ public ServiceProviderConfig serviceProviderConfig(final UriBuilder uriBuilder)\n                                 conf.getETagValue(),\n                                 uriBuilder.build().toASCIIString()),\n                         new ConfigurationOption(true),\n-                        new BulkConfigurationOption(true, conf.getBulkMaxOperations(), conf.getBulkMaxPayloadSize()),\n+                        new BulkConfigurationOption(false, conf.getBulkMaxOperations(), conf.getBulkMaxPayloadSize()),\n                         new FilterConfigurationOption(true, conf.getFilterMaxResults()),\n                         new ConfigurationOption(true),\n                         new ConfigurationOption(true),"},{"sha":"ac7c0a0069ff7533439e71f2e12e3a1f089b7136","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/GroupService.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -21,7 +21,6 @@\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n@@ -33,18 +32,13 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n \n @Path(\"v2/Groups\")\n-public interface GroupService extends SearchService<SCIMGroup> {\n+public interface GroupService extends ReadService<SCIMGroup> {\n \n     @POST\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n     @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n     Response create();\n \n-    @GET\n-    @Path(\"{id}\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    SCIMGroup read(@NotNull @PathParam(\"id\") String id);\n-\n     @PUT\n     @Path(\"{id}\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })"},{"sha":"4762dd3b8a1e6a16bb53f454ceb92377ae0ccf13","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/ReadService.java","status":"renamed","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FReadService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FReadService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FReadService.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -18,11 +18,12 @@\n  */\n package org.apache.syncope.ext.scimv2.api.service;\n \n-import java.util.List;\n+import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n@@ -31,13 +32,20 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n \n-public interface SearchService<R extends SCIMResource> {\n+public interface ReadService<R extends SCIMResource> {\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    R get(@NotNull @PathParam(\"id\") String id,\n+            @QueryParam(\"attributes\") String attributes,\n+            @QueryParam(\"excludedAttributes\") String excludedAttributes);\n \n     @GET\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n     ListResponse<R> search(\n-            @QueryParam(\"attributes\") List<String> attributes,\n-            @QueryParam(\"excludedAttributes\") List<String> excludedAttributes,\n+            @QueryParam(\"attributes\") String attributes,\n+            @QueryParam(\"excludedAttributes\") String excludedAttributes,\n             @QueryParam(\"filter\") String filter,\n             @QueryParam(\"sortBy\") String sortBy,\n             @QueryParam(\"sortOrder\") SortOrder sortOrder,","previous_filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SearchService.java"},{"sha":"06ad1d5c4e735b3add3568992cfa570f75fdea74","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SCIMService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -26,11 +26,10 @@\n import javax.ws.rs.core.Response;\n import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n-import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n \n @Path(\"v2\")\n-public interface SCIMService extends SearchService<SCIMResource> {\n+public interface SCIMService {\n \n     @GET\n     @Path(\"ServiceProviderConfig\")"},{"sha":"febb5e4c575e60503139b12ee71d4f62d8a156ef","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/UserService.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -21,7 +21,6 @@\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n@@ -33,18 +32,13 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n \n @Path(\"v2/Users\")\n-public interface UserService extends SearchService<SCIMUser> {\n+public interface UserService extends ReadService<SCIMUser> {\n \n     @POST\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n     @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n     Response create();\n \n-    @GET\n-    @Path(\"{id}\")\n-    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n-    SCIMUser read(@NotNull @PathParam(\"id\") String id);\n-\n     @PUT\n     @Path(\"{id}\")\n     @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })"},{"sha":"a28209a3fc8a06fb5abb12dd3f3e7c80d12fe859","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractService.java","status":"modified","additions":7,"deletions":31,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractService.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -41,12 +41,10 @@\n import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n-import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.syncope.ext.scimv2.api.service.SearchService;\n \n-abstract class AbstractService<R extends SCIMResource> implements SearchService<R> {\n+abstract class AbstractService<R extends SCIMResource> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractService.class);\n \n@@ -131,11 +129,15 @@ protected ListResponse<R> doSearch(\n             if (anyTO instanceof UserTO) {\n                 resource = binder().toSCIMUser(\n                         (UserTO) anyTO,\n-                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n+                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString(),\n+                        request.getAttributes(),\n+                        request.getExcludedAttributes());\n             } else if (anyTO instanceof GroupTO) {\n                 resource = binder().toSCIMGroup(\n                         (GroupTO) anyTO,\n-                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n+                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString(),\n+                        request.getAttributes(),\n+                        request.getExcludedAttributes());\n             }\n \n             if (resource != null) {\n@@ -146,30 +148,4 @@ protected ListResponse<R> doSearch(\n         return response;\n     }\n \n-    @Override\n-    public ListResponse<R> search(\n-            final List<String> attributes,\n-            final List<String> excludedAttributes,\n-            final String filter,\n-            final String sortBy,\n-            final SortOrder sortOrder,\n-            final Integer startIndex,\n-            final Integer count) {\n-\n-        SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n-        if (attributes != null) {\n-            request.getAttributes().addAll(attributes);\n-        }\n-        if (excludedAttributes != null) {\n-            request.getExcludedAttributes().addAll(excludedAttributes);\n-        }\n-\n-        return doSearch(null, request);\n-    }\n-\n-    @Override\n-    public ListResponse<R> search(final SCIMSearchRequest request) {\n-        return doSearch(null, request);\n-    }\n-\n }"},{"sha":"439d250c37902691c7451c3b97bc0f22b0093dcb","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/GroupServiceImpl.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.ext.scimv2.cxf.service;\n \n-import java.util.List;\n-import java.util.UUID;\n+import java.util.Arrays;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n@@ -32,35 +33,40 @@ public class GroupServiceImpl extends AbstractService<SCIMGroup> implements Grou\n \n     @Override\n     public Response create() {\n-        return Response.\n-                created(uriInfo.getAbsolutePathBuilder().path(UUID.randomUUID().toString()).build()).\n-                build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n-    public SCIMGroup read(final String id) {\n-        return binder().toSCIMGroup(groupLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+    public SCIMGroup get(final String id,\n+            final String attributes,\n+            final String excludedAttributes) {\n+\n+        return binder().toSCIMGroup(\n+                groupLogic().read(id),\n+                uriInfo.getAbsolutePathBuilder().build().toASCIIString(),\n+                Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(attributes, ','))),\n+                Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(excludedAttributes, ','))));\n     }\n \n     @Override\n     public Response replace(final String id) {\n-        return Response.ok().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public Response delete(final String id) {\n-        return Response.noContent().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public Response update(final String id) {\n-        return Response.ok().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public ListResponse<SCIMGroup> search(\n-            final List<String> attributes,\n-            final List<String> excludedAttributes,\n+            final String attributes,\n+            final String excludedAttributes,\n             final String filter,\n             final String sortBy,\n             final SortOrder sortOrder,\n@@ -69,10 +75,12 @@ public ListResponse<SCIMGroup> search(\n \n         SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n         if (attributes != null) {\n-            request.getAttributes().addAll(attributes);\n+            request.getAttributes().addAll(\n+                    Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(attributes, ','))));\n         }\n         if (excludedAttributes != null) {\n-            request.getExcludedAttributes().addAll(excludedAttributes);\n+            request.getExcludedAttributes().addAll(\n+                    Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(excludedAttributes, ','))));\n         }\n \n         return doSearch(Resource.Group, request);"},{"sha":"6a9078f6e4f8c59d9f5fa1c2f90308be04831600","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.ext.scimv2.cxf.service;\n \n-import java.util.List;\n-import java.util.UUID;\n+import java.util.Arrays;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n@@ -32,35 +33,40 @@ public class UserServiceImpl extends AbstractService<SCIMUser> implements UserSe\n \n     @Override\n     public Response create() {\n-        return Response.\n-                created(uriInfo.getAbsolutePathBuilder().path(UUID.randomUUID().toString()).build()).\n-                build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n-    public SCIMUser read(final String id) {\n-        return binder().toSCIMUser(userLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+    public SCIMUser get(final String id,\n+            final String attributes,\n+            final String excludedAttributes) {\n+\n+        return binder().toSCIMUser(\n+                userLogic().read(id),\n+                uriInfo.getAbsolutePathBuilder().build().toASCIIString(),\n+                Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(attributes, ','))),\n+                Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(excludedAttributes, ','))));\n     }\n \n     @Override\n     public Response replace(final String id) {\n-        return Response.ok().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public Response delete(final String id) {\n-        return Response.noContent().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public Response update(final String id) {\n-        return Response.ok().build();\n+        return Response.status(Response.Status.NOT_IMPLEMENTED).build();\n     }\n \n     @Override\n     public ListResponse<SCIMUser> search(\n-            final List<String> attributes,\n-            final List<String> excludedAttributes,\n+            final String attributes,\n+            final String excludedAttributes,\n             final String filter,\n             final String sortBy,\n             final SortOrder sortOrder,\n@@ -69,10 +75,12 @@ public ListResponse<SCIMUser> search(\n \n         SCIMSearchRequest request = new SCIMSearchRequest(filter, sortBy, sortOrder, startIndex, count);\n         if (attributes != null) {\n-            request.getAttributes().addAll(attributes);\n+            request.getAttributes().addAll(\n+                    Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(attributes, ','))));\n         }\n         if (excludedAttributes != null) {\n-            request.getExcludedAttributes().addAll(excludedAttributes);\n+            request.getExcludedAttributes().addAll(\n+                    Arrays.asList(ArrayUtils.nullToEmpty(StringUtils.split(excludedAttributes, ','))));\n         }\n \n         return doSearch(Resource.User, request);"},{"sha":"c44a847d8c0fe3ce732a0d163de917e39e5e9614","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/013c1de03f77e558d46cf4f207ec5c648d5b9dd8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=013c1de03f77e558d46cf4f207ec5c648d5b9dd8","patch":"@@ -46,6 +46,7 @@\n import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n import org.apache.syncope.ext.scimv2.api.data.ResourceType;\n import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMSearchRequest;\n import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n import org.apache.syncope.ext.scimv2.api.data.ServiceProviderConfig;\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n@@ -155,6 +156,20 @@ public void read() throws IOException {\n         assertEquals(\"rossini\", user.getUserName());\n         assertFalse(user.getGroups().isEmpty());\n         assertFalse(user.getRoles().isEmpty());\n+\n+        response = webClient().path(\"Users\").path(\"1417acbe-cbf6-4277-9372-e75e04f97000\").\n+                query(\"attributes\", \"groups\").get();\n+        assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        user = response.readEntity(SCIMUser.class);\n+        assertNotNull(user);\n+        assertEquals(\"1417acbe-cbf6-4277-9372-e75e04f97000\", user.getId());\n+        assertNull(user.getUserName());\n+        assertFalse(user.getGroups().isEmpty());\n+        assertTrue(user.getRoles().isEmpty());\n     }\n \n     @Test\n@@ -227,10 +242,7 @@ public void search() {\n         assertEquals(\"additional\", additional.getDisplayName());\n \n         // eq via POST\n-        String request = \"{\"\n-                + \"     \\\"schemas\\\": [\\\"urn:ietf:params:scim:api:messages:2.0:SearchRequest\\\"],\"\n-                + \"     \\\"filter\\\": \\\"displayName eq \\\\\\\"additional\\\\\\\"\\\"\"\n-                + \"   }\";\n+        SCIMSearchRequest request = new SCIMSearchRequest(\"displayName eq \\\"additional\\\"\", null, null, null, null);\n         response = webClient().path(\"Groups\").path(\"/.search\").post(request);\n         assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());\n         assertEquals("}]}