{"sha":"b67e367e75a698420c256c5bde23570c8ad03442","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI2N2UzNjdlNzVhNjk4NDIwYzI1NmM1YmRlMjM1NzBjOGFkMDM0NDI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-11T11:58:00Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-11T11:58:00Z"},"message":"[SYNCOPE-156] fix wizard browsing","tree":{"sha":"e9eb9b8a673fdfafe5877cb55a483dc1e080d030","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e9eb9b8a673fdfafe5877cb55a483dc1e080d030"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b67e367e75a698420c256c5bde23570c8ad03442","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b67e367e75a698420c256c5bde23570c8ad03442","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b67e367e75a698420c256c5bde23570c8ad03442","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b67e367e75a698420c256c5bde23570c8ad03442/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"697c908444638f6e1f13deb9b1a1a714e552f37a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/697c908444638f6e1f13deb9b1a1a714e552f37a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/697c908444638f6e1f13deb9b1a1a714e552f37a"}],"stats":{"total":395,"additions":271,"deletions":124},"files":[{"sha":"a525e9bb3a45f89ea5fc01682943ae08dad675be","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -83,13 +83,12 @@ public ResourceDetailsPanel(\n                 new PropertyModel<Boolean>(model, \"randomPwdIfNotProvided\"),\n                 false));\n \n-        container.add(new MultiFieldPanel<>(\n-                \"actionsClasses\",\n-                \"actionsClasses\",\n-                new PropertyModel<List<String>>(model, \"propagationActionsClassNames\"),\n-                new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>()).\n-                setChoices(actionClassNames).setNullValid(true).setRequired(true),\n-                false));\n+        container.add(new MultiFieldPanel.Builder<>(\n+                new PropertyModel<List<String>>(model, \"propagationActionsClassNames\")).build(\n+                        \"actionsClasses\",\n+                        \"actionsClasses\",\n+                        new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>())\n+                        .setChoices(actionClassNames).setNullValid(true).setRequired(true)));\n \n         container.add(new AjaxDropDownChoicePanel<>(\n                 \"createTraceLevel\","},{"sha":"361a5985b212cdd4821295b3a26e84255e40fe6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.java","status":"modified","additions":143,"deletions":6,"changes":149,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -18,41 +18,84 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import static org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel.LOG;\n+\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.DateTextField;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.DateTextFieldConfig;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePicker;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePickerConfig;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePickerIconConfig;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconType;\n+import java.io.Serializable;\n+import java.text.DateFormat;\n+import java.text.ParseException;\n+import java.text.ParsePosition;\n+import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.util.convert.IConverter;\n+import org.apache.wicket.util.convert.converter.DateConverter;\n \n public class AjaxDateFieldPanel extends FieldPanel<Date> {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n     private final String datePattern;\n \n-    public AjaxDateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+    public AjaxDateFieldPanel(final String id, final String name, final IModel<Date> model, final String pattern) {\n         super(id, name, model);\n \n-        this.datePattern = datePattern == null ? SyncopeConstants.DEFAULT_DATE_PATTERN : datePattern;\n+        this.datePattern = pattern == null ? SyncopeConstants.DEFAULT_DATE_PATTERN : pattern;\n \n         if (this.datePattern.contains(\"H\")) {\n-            field = new DatetimePicker(\"textField\", new DatetimePickerConfig()\n-                    .withFormat(this.datePattern)\n+            field = new DatetimePicker(\"date\", model, new DatetimePickerConfig()\n+                    .withFormat(this.datePattern.replaceAll(\"'\", \"\"))\n                     .setShowToday(true)\n+                    .useSideBySide(true)\n                     .with(new DatetimePickerIconConfig()\n                             .useDateIcon(FontAwesomeIconType.calendar)\n                             .useTimeIcon(FontAwesomeIconType.clock_o)\n                             .useUpIcon(FontAwesomeIconType.arrow_up)\n                             .useDownIcon(FontAwesomeIconType.arrow_down)\n-                    ));\n+                    )) {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        // T0DO: trying to resolve issue 730.\n+                        @Override\n+                        public <C> IConverter<C> getConverter(final Class<C> type) {\n+                            return (IConverter<C>) new DateConverter() {\n+\n+                                private static final long serialVersionUID = 1L;\n+\n+                                @Override\n+                                public DateFormat getDateFormat(final Locale locale) {\n+                                    return new SimpleDateFormat(\n+                                            datePattern,\n+                                            locale == null ? SyncopeConsoleSession.get().getLocale() : locale) {\n+\n+                                                private static final long serialVersionUID = 1L;\n+\n+                                                @Override\n+                                                public Date parse(final String text, final ParsePosition pos) {\n+                                                    return super.parse(text, pos);\n+                                                }\n+\n+                                            };\n+                                }\n+                            };\n+                        }\n+\n+                    };\n         } else {\n-            field = new DateTextField(\"textField\", new DateTextFieldConfig()\n+            field = new DateTextField(\"date\", model, new DateTextFieldConfig()\n                     .withFormat(this.datePattern)\n                     .highlightToday(true)\n                     .autoClose(true)\n@@ -63,6 +106,100 @@ public AjaxDateFieldPanel(final String id, final String name, final IModel<Date>\n         add(field);\n     }\n \n+    // todo: Evaluate the actual needs to keep this override.\n+    @Override\n+    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        IModel<Date> model = new Model<Date>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+                final Object obj = list == null || list.isEmpty() ? null : list.get(0);\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        // Parse string using datePattern\n+                        try {\n+                            date = formatter.parse(obj.toString());\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                    } else if (obj instanceof Date) {\n+                        // Don't parse anything\n+                        date = (Date) obj;\n+                    } else {\n+                        // consider Long\n+                        date = new Date((Long) obj);\n+                    }\n+                }\n+                return date;\n+            }\n+\n+            @Override\n+            public void setObject(final Date object) {\n+                super.setObject(object);\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+\n+    // todo: Evaluate the actual needs to keep this override.\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Date> setNewModel(final ListItem item) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        IModel<Date> model = new Model<Date>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        // Parse string using datePattern\n+                        try {\n+                            date = formatter.parse(obj.toString());\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                    } else if (obj instanceof Date) {\n+                        // Don't parse anything\n+                        date = (Date) obj;\n+                    } else {\n+                        // consider Long\n+                        date = new Date((Long) obj);\n+                    }\n+                }\n+\n+                return date;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Date object) {\n+                item.setModelObject(object != null ? formatter.format(object) : null);\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+\n     @Override\n     public FieldPanel<Date> clone() {\n         final FieldPanel<Date> panel = new AjaxDateFieldPanel(getId(), name, new Model<Date>(null), datePattern);"},{"sha":"5a44086488f04d8668743f5a1968f38e80e4a4ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -112,23 +112,26 @@ public FieldPanel<T> setNewModel(final IModel<T> model) {\n     }\n \n     /**\n-     * Used by MultiValueSelectorPanel to attach items.\n+     * Used by MultiFieldPanel to attach items (usually strings).\n+     * This method has to be overridden in case of type conversion is required.\n      *\n      * @param item item to attach.\n      * @return updated FieldPanel object.\n+     * @see MultiFieldPanel\n      */\n-    public FieldPanel<T> setNewModel(final ListItem<T> item) {\n-        setNewModel(new IModel<T>() {\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    public FieldPanel<T> setNewModel(final ListItem item) {\n+        return setNewModel(new IModel() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n-            public T getObject() {\n+            public Object getObject() {\n                 return item.getModelObject();\n             }\n \n             @Override\n-            public void setObject(final T object) {\n+            public void setObject(final Object object) {\n                 item.setModelObject(object);\n             }\n \n@@ -137,20 +140,17 @@ public void detach() {\n                 // no detach\n             }\n         });\n-        return this;\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public FieldPanel<T> setNewModel(final List<Serializable> list) {\n-        setNewModel(new Model() {\n+        return setNewModel(new Model() {\n \n             private static final long serialVersionUID = 1088212074765051906L;\n \n             @Override\n             public Serializable getObject() {\n-                return list == null || list.isEmpty()\n-                        ? null\n-                        : list.get(0);\n+                return list == null || list.isEmpty() ? null : list.get(0);\n             }\n \n             @Override\n@@ -162,8 +162,6 @@ public void setObject(final Serializable object) {\n                 }\n             }\n         });\n-\n-        return this;\n     }\n \n     @Override"},{"sha":"c634db96a746c92168e9ef4746d14fe52761c22c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":71,"deletions":14,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -34,30 +34,25 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class MultiFieldPanel<E extends Serializable> extends AbstractFieldPanel<List<E>> {\n+public final class MultiFieldPanel<E extends Serializable> extends AbstractFieldPanel<List<E>> {\n \n     private static final long serialVersionUID = -6322397761456513324L;\n \n     private ListView<E> view;\n \n-    private final FieldPanel<E> panelTemplate;\n+    private final FieldPanel<? extends Serializable> panelTemplate;\n \n     private final boolean eventTemplate;\n \n     private final WebMarkupContainer container;\n \n     private final Form<?> form;\n \n-    public MultiFieldPanel(\n-            final String id, final String name, final IModel<List<E>> model, final FieldPanel<E> panelTemplate) {\n-        this(id, name, model, panelTemplate, false);\n-    }\n-\n-    public MultiFieldPanel(\n+    private MultiFieldPanel(\n             final String id,\n             final String name,\n             final IModel<List<E>> model,\n-            final FieldPanel<E> panelTemplate,\n+            final FieldPanel<? extends Serializable> panelTemplate,\n             final boolean eventTemplate) {\n \n         super(id, name, model);\n@@ -100,7 +95,7 @@ private Fragment getDataFragment(final IModel<List<E>> model, final String label\n             @Override\n             protected void populateItem(final ListItem<E> item) {\n \n-                final FieldPanel<E> fieldPanel = panelTemplate.clone();\n+                final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n \n                 if (eventTemplate) {\n                     fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -117,13 +112,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 fieldPanel.setNewModel(item);\n                 item.add(fieldPanel.hideLabel().setRenderBodyOnly(true));\n \n-//                final AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n                 final AjaxSubmitLink minus = new AjaxSubmitLink(\"drop\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-//                    public void onClick(final AjaxRequestTarget target) {\n                     protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         //Drop current component\n                         model.getObject().remove(item.getModelObject());\n@@ -160,13 +153,11 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n     }\n \n     private Fragment getPlusFragment(final IModel<List<E>> model, final String label) {\n-//        final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n         final AjaxSubmitLink plus = new AjaxSubmitLink(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-//            public void onClick(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 //Add current component\n                 model.getObject().add(null);\n@@ -208,4 +199,70 @@ public AjaxRequestTarget getTarget() {\n             return target;\n         }\n     }\n+\n+    public static class Builder<E extends Serializable> {\n+\n+        private final IModel<List<E>> model;\n+\n+        private boolean plusAlwaysAvailable;\n+\n+        private boolean minusAwaysAvailable;\n+\n+        private boolean multivalue;\n+\n+        private boolean eventTemplate = false;\n+\n+        public Builder(final IModel<List<E>> model) {\n+            this.model = model;\n+        }\n+\n+        /**\n+         * Show plus button icon to ad more elements.\n+         *\n+         * @param plusAlwaysAvailable\n+         * @return\n+         */\n+        public Builder<E> setPlusAlwaysAvailable(final boolean plusAlwaysAvailable) {\n+            this.plusAlwaysAvailable = plusAlwaysAvailable;\n+            return this;\n+        }\n+\n+        /**\n+         * Show minus button icon to remove elements included the latest one in order to empty the list explicitly.\n+         *\n+         * @param minusAwaysAvailable\n+         * @return\n+         */\n+        public Builder<E> setMinusAwaysAvailable(final boolean minusAwaysAvailable) {\n+            this.minusAwaysAvailable = minusAwaysAvailable;\n+            return this;\n+        }\n+\n+        /**\n+         * Set multivalue field.\n+         *\n+         * @param multivalue\n+         * @return\n+         */\n+        public Builder<E> setMultivalue(final boolean multivalue) {\n+            this.multivalue = multivalue;\n+            return this;\n+        }\n+\n+        /**\n+         * Set on_change event in order to send MultiValueSelectorEvent to page.\n+         *\n+         * @param eventTemplate\n+         * @return\n+         * @see MultiValueSelectorEvent\n+         */\n+        public Builder<E> setEventTemplate(final boolean eventTemplate) {\n+            this.eventTemplate = eventTemplate;\n+            return this;\n+        }\n+\n+        public MultiFieldPanel<E> build(final String id, final String name, final FieldPanel<E> panelTemplate) {\n+            return new MultiFieldPanel<>(id, name, model, panelTemplate, eventTemplate);\n+        }\n+    }\n }"},{"sha":"17928e809f2a056741d5b1d60c6773e03c877d1c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -124,11 +124,11 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n         final AbstractFieldPanel<? extends Serializable> fieldPanel;\n         if (isArray) {\n-            final MultiFieldPanel multiFieldPanel = new MultiFieldPanel(\n-                    \"panel\",\n-                    label.getDefaultModelObjectAsString(),\n-                    new PropertyModel<List<String>>(property, \"values\"),\n-                    field, true);\n+            final MultiFieldPanel multiFieldPanel = new MultiFieldPanel.Builder(\n+                    new PropertyModel<List<String>>(property, \"values\")).setEventTemplate(true).build(\n+                            \"panel\",\n+                            label.getDefaultModelObjectAsString(),\n+                            field);\n             item.add(multiFieldPanel);\n             fieldPanel = multiFieldPanel;\n         } else {"},{"sha":"2dc47d8106505945a14c9482a5286e66bbeb85dd","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":17,"deletions":12,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -45,30 +45,30 @@ public AjaxWizardBuilder(final String id, final T defaultItem, final PageReferen\n         this.pageRef = pageRef;\n     }\n \n-    public AjaxWizard<T> build(final int index) {\n-        final AjaxWizard<T> wizard = build(index > 0);\n+    public AjaxWizard<T> build(final int index, final boolean edit) {\n+        final AjaxWizard<T> wizard = build(edit);\n         for (int i = 1; i < index; i++) {\n             wizard.getWizardModel().next();\n         }\n         return wizard;\n     }\n \n     public AjaxWizard<T> build(final boolean edit) {\n-        final T modelObject = getItem();\n-        this.item = null;\n+        // ge the specified item if available\n+        final T modelObject = newModelObject();\n \n         return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), pageRef, edit) {\n \n             private static final long serialVersionUID = 1L;\n \n             @Override\n             protected void onCancelInternal() {\n-                AjaxWizardBuilder.this.onCancelInternal(getItem());\n+                AjaxWizardBuilder.this.onCancelInternal(modelObject);\n             }\n \n             @Override\n             protected void onApplyInternal() {\n-                AjaxWizardBuilder.this.onApplyInternal(getItem());\n+                AjaxWizardBuilder.this.onApplyInternal(modelObject);\n             }\n         };\n     }\n@@ -79,12 +79,18 @@ protected void onApplyInternal() {\n \n     protected abstract void onApplyInternal(T modelObject);\n \n-    protected T getDefaultItem() {\n-        return defaultItem;\n+    protected T getOriginalItem() {\n+        return item;\n     }\n \n-    private T getItem() {\n-        return item == null ? SerializationUtils.clone(defaultItem) : item;\n+    private T newModelObject() {\n+        if (item == null) {\n+            // keep the original item: the which one before the changes performed during wizard browsing\n+            item = SerializationUtils.clone(defaultItem);\n+        }\n+\n+        // instantiate a new model object and return it\n+        return SerializationUtils.clone(item);\n     }\n \n     /**\n@@ -94,8 +100,7 @@ private T getItem() {\n      * @return the current wizard factory instance.\n      */\n     public AjaxWizardBuilder<T> setItem(final T item) {\n-        this.defaultItem = item;\n-        this.item = null;\n+        this.item = item;\n         return this;\n     }\n }"},{"sha":"0719c503c3280ced623f82595e2cef350b6f17f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -60,7 +60,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n             @Override\n             public final boolean isEnabled() {\n-                return !edit && super.isEnabled() && getWizardModel().isNextAvailable();\n+                return super.isEnabled() && getWizardModel().isNextAvailable();\n             }\n         });\n \n@@ -77,7 +77,7 @@ protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n \n             @Override\n             public final boolean isEnabled() {\n-                return !edit && super.isEnabled() && getWizardModel().isPreviousAvailable();\n+                return super.isEnabled() && getWizardModel().isPreviousAvailable();\n             }\n         });\n "},{"sha":"f60dbe77c645f339c0eb804b77c4c4d212f7f68d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -112,12 +112,10 @@ public void onEvent(final IEvent<?> event) {\n             final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n \n             if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n-                if (item != null) {\n-                    newItemPanelBuilder.setItem(item);\n-                }\n+                newItemPanelBuilder.setItem(item);\n \n                 final AjaxWizard<T> wizard = newItemPanelBuilder.build(\n-                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex());\n+                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex(), item != null);\n \n                 if (wizardInModal) {\n                     final IModel<T> model = new CompoundPropertyModel<>(item);"},{"sha":"d49bb89ea2f16ff12de8c3958bf1ab40c3e7eac4","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -74,11 +74,11 @@ protected void onApplyInternal(final T modelObject) {\n         if (modelObject.getKey() == 0) {\n             actual = anyTypeRestClient.create(AnyObjectTO.class.cast(modelObject));\n         } else {\n-            final AnyObjectPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+            final AnyObjectPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), true);\n \n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = anyTypeRestClient.update(getDefaultItem().getETagValue(), patch);\n+                actual = anyTypeRestClient.update(getOriginalItem().getETagValue(), patch);\n             }\n         }\n     }"},{"sha":"7a56b1511047b4ba7344bb1e13d8172ed0e20fbf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -56,11 +56,11 @@ protected void onApplyInternal(final GroupTO modelObject) {\n         if (modelObject.getKey() == 0) {\n             actual = groupRestClient.create(modelObject);\n         } else {\n-            final GroupPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+            final GroupPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), true);\n \n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = groupRestClient.update(getDefaultItem().getETagValue(), patch);\n+                actual = groupRestClient.update(getOriginalItem().getETagValue(), patch);\n             }\n         }\n     }"},{"sha":"c592dad0ecf85a8fbaabc72c5500a07e0c7af75a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":6,"deletions":53,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -112,10 +112,13 @@ protected void populateItem(final ListItem<AttrTO> item) {\n \n                 if (mode == Mode.TEMPLATE || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n                     item.add(panel);\n+                    panel.setNewModel(attributeTO.getValues());\n                 } else {\n-                    item.add(new MultiFieldPanel<String>(\n-                            \"panel\", attributeTO.getSchema(), new PropertyModel<List<String>>(attributeTO, \"values\"),\n-                            panel));\n+                    item.add(new MultiFieldPanel.Builder<String>(\n+                            new PropertyModel<List<String>>(attributeTO, \"values\")).build(\n+                                    \"panel\",\n+                                    attributeTO.getSchema(),\n+                                    panel));\n                 }\n             }\n         }\n@@ -202,43 +205,6 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO, final Form form,\n             case Date:\n                 panel = new AjaxDateFieldPanel(\n                         \"panel\", schemaTO.getKey(), new Model<Date>(), schemaTO.getConversionPattern());\n-//                \n-//                final String dataPattern = schemaTO.getConversionPattern() == null\n-//                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n-//                        : schemaTO.getConversionPattern();\n-//\n-//                if (dataPattern.contains(\"H\")) {\n-//\n-//                    final DatetimePickerConfig conf = new DatetimePickerConfig().withFormat(\n-//                \"dd/MM/yyyy HH:mm:ss\").with(\n-//                            new DatetimePickerIconConfig()\n-//                            .useDateIcon(FontAwesomeIconType.calendar)\n-//                            .useTimeIcon(FontAwesomeIconType.clock_o)\n-//                            .useUpIcon(FontAwesomeIconType.arrow_up)\n-//                            .useDownIcon(FontAwesomeIconType.arrow_down)\n-//                    );\n-//\n-//                    add(new DatetimePicker(\"panel\", conf));\n-////        \n-////                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n-////\n-////                    if (required) {\n-////                        panel.addRequiredLabel();\n-////                        ((DateTimeFieldPanel) panel).setFormValidator(form);\n-////                    }\n-////                    panel.setStyleSheet(\"ui-widget-content ui-corner-all\");\n-//                } else {\n-//                    add(new DateTextField(\"panel\",\n-//                            new DateTextFieldConfig()\n-//                            .autoClose(true)\n-//                            .withLanguage(\"es\")\n-//                            .showTodayButton(DateTextFieldConfig.TodayButton.TRUE)));\n-////                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n-//\n-////                    if (required) {\n-////                        panel.addRequiredLabel();\n-////                    }\n-//                }\n                 break;\n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n@@ -310,7 +276,6 @@ public String getObject(\n         }\n \n         panel.setReadOnly(readOnly);\n-        panel.setNewModel(attributeTO.getValues());\n \n         return panel;\n     }\n@@ -346,16 +311,4 @@ private List<String> getEnumeratedValues(final PlainSchemaTO schemaTO) {\n \n         return res;\n     }\n-\n-//    @Override\n-//    public void onEvent(final IEvent<?> event) {\n-//        if ((event.getPayload() instanceof GroupAttrTemplatesChange)) {\n-//            final GroupAttrTemplatesChange update = (GroupAttrTemplatesChange) event.getPayload();\n-//            if (attrTemplates != null && update.getType() == AttrTemplatesPanel.Type.gPlainAttrTemplates) {\n-//                setSchemas();\n-//                setAttrs();\n-//                update.getTarget().add(this);\n-//            }\n-//        }\n-//    }\n }"},{"sha":"a8a84416b68186fa261526c76344d44018c2f6de","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -59,14 +59,14 @@ protected void onApplyInternal(final UserTO modelObject) {\n         if (modelObject.getKey() == 0) {\n             actual = userRestClient.create(modelObject, storePassword.getObject());\n         } else {\n-            final UserPatch patch = AnyOperations.diff(modelObject, getDefaultItem(), true);\n+            final UserPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), true);\n \n //            if (statusPanel != null) {\n //                patch.setPwdPropRequest(statusPanel.getStatusMod());\n //            }\n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n-                actual = userRestClient.update(getDefaultItem().getETagValue(), patch);\n+                actual = userRestClient.update(getOriginalItem().getETagValue(), patch);\n             }\n         }\n     }"},{"sha":"048cb9a91fa7bcd13785b72918335a34fd4d34b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -125,10 +125,10 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                             final AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n                                     \"panel\", attrTO.getSchema(), new Model<String>(), false);\n \n-                            item.add(new MultiFieldPanel<String>(\n+                            item.add(new MultiFieldPanel.Builder<String>(\n+                                            new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                             \"panel\",\n                                             schema.getKey(),\n-                                            new PropertyModel<List<String>>(attrTO, \"values\"),\n                                             panel).setEnabled(!schema.isReadonly()));\n                         }\n                     };"},{"sha":"1b609e4a0f3d4fc6edf528f073c7dc8c3d39bdff","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b67e367e75a698420c256c5bde23570c8ad03442/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.html?ref=b67e367e75a698420c256c5bde23570c8ad03442","patch":"@@ -27,7 +27,7 @@\n         <span wicket:id=\"externalAction\"/>\n       </wicket:enclosure>\n       <fieldset class=\"input-group\">\n-        <input type=\"text\" class=\"form-control\" wicket:id=\"textField\"/>\n+        <input class=\"form-control\" type=\"datetime\" wicket:id=\"date\"/>\n       </fieldset>\n     </wicket:extend>\n   </body>"}]}