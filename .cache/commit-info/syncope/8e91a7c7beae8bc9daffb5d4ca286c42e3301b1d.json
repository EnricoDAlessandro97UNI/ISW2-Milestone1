{"sha":"8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhlOTFhN2M3YmVhZThiYzlkYWZmYjVkNGNhMjg2YzQyZTMzMDFiMWQ=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-08T17:02:49Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-08T17:02:49Z"},"message":"Fixing some naming about external resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/0_8_X_ASL@1247320 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8eefe3822494476543de6a7153b6afaf9c5fe21e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8eefe3822494476543de6a7153b6afaf9c5fe21e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/comments","author":null,"committer":null,"parents":[{"sha":"9c8fc562b31c6f33fd567526495749e8b2699dd9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c8fc562b31c6f33fd567526495749e8b2699dd9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c8fc562b31c6f33fd567526495749e8b2699dd9"}],"stats":{"total":265,"additions":135,"deletions":130},"files":[{"sha":"7fb21bfc41ce35225f45d051e76df6b3928fe19e","filename":"TODO","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/TODO","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/TODO","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/TODO?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -5,12 +5,13 @@\n =core=\n \n * working 'mvn clean verify'\n-* http://incubator.apache.org/bval/cwiki/index.html\n * postgres-it\n * mysql-it\n * oracle-it\n+* notification test\n * redirect OpenJPA plugin log somewhere\n * verify Clob behavior on PostgreSQL (requires external deploy and restart)\n * 2nd level cache\n * statistics?\n * WARNING: javax.persistence.cache.retrieveMode\" is not a supported query hint. May be you meant \"javax.persistence.lock.timeout\"?\n+* WARN   [pool-2-thread-1] openjpa.Runtime - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name 'syncopePersistenceUnit', root URL [file:/home/ilgrosso/work/syncope-ASL/core/target/cargo/configurations/tomcat7x/webapps/syncope/WEB-INF/classes/]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available."},{"sha":"28c22de7b020e825383ccbf7d5cc6b504b4807a9","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":18,"deletions":23,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -153,40 +153,35 @@ public abstract <T extends AbstractVirAttr> boolean removeVirtualAttribute(\n     public abstract void setVirtualAttributes(\n             List<? extends AbstractVirAttr> virtualAttributes);\n \n-    protected abstract Set<ExternalResource> externalResources();\n+    protected abstract Set<ExternalResource> resources();\n \n-    public boolean addExternalResource(\n-            final ExternalResource externalResource) {\n-\n-        return externalResources().add(externalResource);\n+    public boolean addResource(final ExternalResource resource) {\n+        return resources().add(resource);\n     }\n \n-    public boolean removeExternalResource(\n-            final ExternalResource externalResource) {\n-\n-        return externalResources().remove(externalResource);\n+    public boolean removeResource(final ExternalResource resource) {\n+        return resources().remove(resource);\n     }\n \n-    public Set<ExternalResource> getExternalResources() {\n-        return externalResources();\n+    public Set<ExternalResource> getResources() {\n+        return resources();\n     }\n \n-    public Set<String> getExternalResourceNames() {\n-        Set<String> resourceNames =\n-                new HashSet<String>(externalResources().size());\n-        for (ExternalResource resource : externalResources()) {\n-            resourceNames.add(resource.getName());\n+    public Set<String> getResourceNames() {\n+        Set<ExternalResource> ownResources = getResources();\n+\n+        Set<String> result = new HashSet<String>(ownResources.size());\n+        for (ExternalResource resource : ownResources) {\n+            result.add(resource.getName());\n         }\n \n-        return resourceNames;\n+        return result;\n     }\n \n-    public void setExternalResources(\n-            final Set<ExternalResource> externalResources) {\n-\n-        externalResources().clear();\n-        if (externalResources != null) {\n-            externalResources().addAll(externalResources);\n+    public void setResources(final Set<ExternalResource> resources) {\n+        resources().clear();\n+        if (resources != null) {\n+            resources().addAll(resources);\n         }\n     }\n }"},{"sha":"f916c7992541582deea4a29c797923cb0236ed67","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -75,7 +75,7 @@ protected <T extends AbstractAttributable> List<Object> retrieveValues(\n \n         JexlUtil jexlUtil = context.getBean(JexlUtil.class);\n \n-        for (ExternalResource resource : attributable.getExternalResources()) {\n+        for (ExternalResource resource : attributable.getResources()) {\n             LOG.debug(\"Retrieving attribute mapped on {}\", resource);\n \n             Set<String> attributeNames = new HashSet<String>();"},{"sha":"0a3e7be50513e01ef7d7daf97c73a7542a43e9c9","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -80,13 +80,13 @@ public class ExternalResource extends AbstractBaseBean {\n     /**\n      * Users associated to this resource.\n      */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"externalResources\")\n+    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"resources\")\n     private Set<SyncopeUser> users;\n \n     /**\n      * Roles associated to this resource.\n      */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"externalResources\")\n+    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"resources\")\n     private Set<SyncopeRole> roles;\n \n     /**"},{"sha":"e323ac278d81abd4fcbee30cba231d065f44c922","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -79,7 +79,7 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> externalResources() {\n+    protected Set<ExternalResource> resources() {\n         return Collections.EMPTY_SET;\n     }\n \n@@ -175,27 +175,27 @@ public void setVirtualAttributes(\n     }\n \n     @Override\n-    public boolean addExternalResource(ExternalResource resource) {\n+    public boolean addResource(final ExternalResource resource) {\n         return false;\n     }\n \n     @Override\n-    public boolean removeExternalResource(ExternalResource resource) {\n+    public boolean removeResource(final ExternalResource resource) {\n         return false;\n     }\n \n     @Override\n-    public Set<ExternalResource> getExternalResources() {\n+    public Set<ExternalResource> getResources() {\n         return Collections.EMPTY_SET;\n     }\n \n     @Override\n-    public Set<String> getExternalResourceNames() {\n+    public Set<String> getResourceNames() {\n         return Collections.EMPTY_SET;\n     }\n \n     @Override\n-    public void setExternalResources(Set<ExternalResource> resources) {\n+    public void setResources(final Set<ExternalResource> resources) {\n     }\n \n     @Override"},{"sha":"6e6bb1a34b56daf1eae5e6e90788d3e0f457e480","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -123,9 +123,9 @@ public class SyncopeRole extends AbstractAttributable {\n     @JoinTable(joinColumns =\n     @JoinColumn(name = \"role_id\"),\n     inverseJoinColumns =\n-    @JoinColumn(name = \"externalResource_name\"))\n+    @JoinColumn(name = \"resource_name\"))\n     @Valid\n-    private Set<ExternalResource> externalResources;\n+    private Set<ExternalResource> resources;\n \n     public SyncopeRole() {\n         super();\n@@ -139,7 +139,7 @@ public SyncopeRole() {\n         inheritVirtualAttributes = getBooleanAsInteger(false);\n         inheritPasswordPolicy = getBooleanAsInteger(false);\n         inheritAccountPolicy = getBooleanAsInteger(false);\n-        externalResources = new HashSet<ExternalResource>();\n+        resources = new HashSet<ExternalResource>();\n     }\n \n     @Override\n@@ -148,8 +148,8 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> externalResources() {\n-        return externalResources;\n+    protected Set<ExternalResource> resources() {\n+        return resources;\n     }\n \n     public String getName() {"},{"sha":"abeb8b4d5c6798d127ab6ff5e9cfdbffbb48a144","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":10,"deletions":24,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -173,8 +173,8 @@ public class SyncopeUser extends AbstractAttributable {\n     @JoinTable(joinColumns =\n     @JoinColumn(name = \"user_id\"),\n     inverseJoinColumns =\n-    @JoinColumn(name = \"externalResource_name\"))\n-    private Set<ExternalResource> externalResources;\n+    @JoinColumn(name = \"resource_name\"))\n+    private Set<ExternalResource> resources;\n \n     public SyncopeUser() {\n         super();\n@@ -186,7 +186,7 @@ public SyncopeUser() {\n         passwordHistory = new ArrayList<String>();\n         failedLogins = 0;\n         suspended = getBooleanAsInteger(Boolean.FALSE);\n-        externalResources = new HashSet<ExternalResource>();\n+        resources = new HashSet<ExternalResource>();\n     }\n \n     @Override\n@@ -195,8 +195,8 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> externalResources() {\n-        return externalResources;\n+    protected Set<ExternalResource> resources() {\n+        return resources;\n     }\n \n     public boolean addMembership(final Membership membership) {\n@@ -259,23 +259,11 @@ public Set<Long> getRoleIds() {\n     }\n \n     @Override\n-    public Set<ExternalResource> getExternalResources() {\n+    public Set<ExternalResource> getResources() {\n         Set<ExternalResource> result = new HashSet<ExternalResource>();\n-        result.addAll(super.getExternalResources());\n+        result.addAll(super.getResources());\n         for (SyncopeRole role : getRoles()) {\n-            result.addAll(role.getExternalResources());\n-        }\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public Set<String> getExternalResourceNames() {\n-        Set<ExternalResource> resources = getExternalResources();\n-\n-        Set<String> result = new HashSet<String>(resources.size());\n-        for (ExternalResource resource : resources) {\n-            result.add(resource.getName());\n+            result.addAll(role.getResources());\n         }\n \n         return result;\n@@ -293,10 +281,8 @@ public void removeClearPassword() {\n         clearPassword = null;\n     }\n \n-    public void setPassword(\n-            final String password,\n-            final CipherAlgorithm cipherAlgoritm,\n-            final int historySize) {\n+    public void setPassword(final String password,\n+            final CipherAlgorithm cipherAlgoritm, final int historySize) {\n \n         // clear password\n         clearPassword = password;"},{"sha":"72bf37ec85c82deeef78f575460d879e8b486324","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -157,12 +157,12 @@ public void delete(final String name) {\n         taskDAO.deleteAll(resource, SyncTask.class);\n \n         for (SyncopeUser user : resource.getUsers()) {\n-            user.removeExternalResource(resource);\n+            user.removeResource(resource);\n         }\n         resource.getUsers().clear();\n \n         for (SyncopeRole role : resource.getRoles()) {\n-            role.removeExternalResource(resource);\n+            role.removeResource(resource);\n         }\n         resource.getRoles().clear();\n "},{"sha":"cf95516e5d17a1fee62e08d861a394b279e628bf","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncopeUserValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -135,7 +135,7 @@ private List<PasswordPolicy> getPasswordPolicies(final SyncopeUser user) {\n         }\n \n         // add resource policies\n-        for (ExternalResource resource : user.getExternalResources()) {\n+        for (ExternalResource resource : user.getResources()) {\n             policy = resource.getPasswordPolicy();\n             if (policy != null) {\n                 policies.add(policy);\n@@ -163,7 +163,7 @@ private List<AccountPolicy> getAccountPolicies(final SyncopeUser user) {\n         }\n \n         // add resource policies\n-        for (ExternalResource resource : user.getExternalResources()) {\n+        for (ExternalResource resource : user.getResources()) {\n             policy = resource.getAccountPolicy();\n             if (policy != null) {\n                 policies.add(policy);"},{"sha":"cdce02c270dbfecb99789310ce4b42b2a24423ed","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -276,7 +276,7 @@ public List<PropagationTask> getUpdateTaskIds(\n             localPropByRes.merge(wfResult.getPropByRes());\n         } else {\n             localPropByRes.addAll(PropagationOperation.UPDATE,\n-                    user.getExternalResourceNames());\n+                    user.getResourceNames());\n         }\n         if (syncResourceName != null) {\n             localPropByRes.get(PropagationOperation.CREATE).\n@@ -328,7 +328,7 @@ public List<PropagationTask> getDeleteTaskIds(final Long userId,\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.DELETE,\n-                user.getExternalResourceNames());\n+                user.getResourceNames());\n         if (syncResourceName != null) {\n             propByRes.get(PropagationOperation.DELETE).remove(syncResourceName);\n         }"},{"sha":"880ad4a475d7818d23521012b5e4a3b87e834d99","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -220,7 +220,7 @@ public List<SchemaMappingTO> getRoleResourcesMapping(\n \n         List<SchemaMappingTO> roleMappings = new ArrayList<SchemaMappingTO>();\n \n-        Set<ExternalResource> resources = role.getExternalResources();\n+        Set<ExternalResource> resources = role.getResources();\n \n         List<SchemaMappingTO> resourceMappings;\n         for (ExternalResource resource : resources) {"},{"sha":"0ce49ff47d2e45c5236f820106d651f6a97ea083","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -271,7 +271,7 @@ private SyncopeClientException checkMandatory(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n         LOG.debug(\"Check mandatory constraint among resources {}\",\n-                attributable.getExternalResources());\n+                attributable.getResources());\n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n         List<AbstractSchema> allSchemas =\n@@ -284,7 +284,7 @@ private SyncopeClientException checkMandatory(\n                     schema.getMandatoryCondition(),\n                     attributable.getAttributes())\n                     || evaluateMandatoryCondition(\n-                    attributable.getExternalResources(),\n+                    attributable.getResources(),\n                     attributable.getAttributes(),\n                     schema.getName(),\n                     attributableUtil))) {\n@@ -330,7 +330,7 @@ public PropagationByResource fillVirtual(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.virtualIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -363,7 +363,7 @@ public PropagationByResource fillVirtual(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.virtualIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -416,7 +416,7 @@ protected PropagationByResource fill(\n             if (resource != null) {\n                 propByRes.add(PropagationOperation.DELETE, resource.getName());\n \n-                attributable.removeExternalResource(resource);\n+                attributable.removeResource(resource);\n             }\n         }\n \n@@ -431,7 +431,7 @@ protected PropagationByResource fill(\n             if (resource != null) {\n                 propByRes.add(PropagationOperation.CREATE, resource.getName());\n \n-                attributable.addExternalResource(resource);\n+                attributable.addResource(resource);\n             }\n         }\n \n@@ -478,7 +478,7 @@ protected PropagationByResource fill(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.intMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -514,7 +514,7 @@ protected PropagationByResource fill(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.intMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -610,7 +610,7 @@ protected PropagationByResource fill(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.derivedIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -647,7 +647,7 @@ protected PropagationByResource fill(\n                             && mapping.getIntMappingType()\n                             == attributableUtil.derivedIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getExternalResources().\n+                            && attributable.getResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -791,7 +791,7 @@ protected void fill(final AbstractAttributable attributable,\n             resource = getResource(resourceName);\n \n             if (resource != null) {\n-                attributable.addExternalResource(resource);\n+                attributable.addResource(resource);\n             }\n         }\n "},{"sha":"2411dfa8076ee4662c009ffc3b681a6f909c2215","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -233,7 +233,7 @@ public RoleTO getRoleTO(SyncopeRole role) {\n                 allAttributes,\n                 allDerAttributes,\n                 allVirAttributes,\n-                role.getExternalResources());\n+                role.getResources());\n \n         for (Entitlement entitlement : role.getEntitlements()) {\n             roleTO.addEntitlement(entitlement.getName());"},{"sha":"ac98ec47d877d60d836265a1445b9605a168c15e","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -229,7 +229,7 @@ public PropagationByResource update(final SyncopeUser user,\n         // when requesting to add user to new resources, either directly or\n         // through role subscription, password is mandatory (issue 147)\n         // first, let's take current resources into account\n-        Set<String> currentResources = user.getExternalResourceNames();\n+        Set<String> currentResources = user.getResourceNames();\n \n         // password\n         if (userMod.getPassword() != null) {\n@@ -248,7 +248,7 @@ public PropagationByResource update(final SyncopeUser user,\n             user.setChangePwdDate(new Date());\n \n             propByRes.addAll(PropagationOperation.UPDATE,\n-                    user.getExternalResourceNames());\n+                    user.getResourceNames());\n         }\n \n         // username\n@@ -259,9 +259,9 @@ public PropagationByResource update(final SyncopeUser user,\n \n             user.setUsername(userMod.getUsername());\n             propByRes.addAll(PropagationOperation.UPDATE,\n-                    user.getExternalResourceNames());\n+                    user.getResourceNames());\n \n-            for (ExternalResource resource : user.getExternalResources()) {\n+            for (ExternalResource resource : user.getResources()) {\n                 for (SchemaMapping mapping : resource.getMappings()) {\n                     if (mapping.isAccountid() && mapping.getIntMappingType()\n                             == IntMappingType.Username) {\n@@ -293,7 +293,7 @@ public PropagationByResource update(final SyncopeUser user,\n                         membershipId);\n             } else {\n                 for (ExternalResource resource :\n-                        membership.getSyncopeRole().getExternalResources()) {\n+                        membership.getSyncopeRole().getResources()) {\n \n                     if (!membershipToBeAddedRoleIds.contains(\n                             membership.getSyncopeRole().getId())) {\n@@ -370,7 +370,7 @@ public PropagationByResource update(final SyncopeUser user,\n                     user.addMembership(membership);\n \n                     propByRes.addAll(PropagationOperation.UPDATE,\n-                            role.getExternalResourceNames());\n+                            role.getResourceNames());\n                 }\n \n                 propByRes.merge(fill(membership, membershipMod,\n@@ -380,7 +380,7 @@ public PropagationByResource update(final SyncopeUser user,\n \n         // now, let's see if there are new resource subscriptions without\n         // providing password\n-        Set<String> updatedResources = user.getExternalResourceNames();\n+        Set<String> updatedResources = user.getResourceNames();\n         updatedResources.removeAll(currentResources);\n         if (!updatedResources.isEmpty()\n                 && StringUtils.isBlank(userMod.getPassword())) {\n@@ -407,7 +407,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n                 user.getAttributes(),\n                 user.getDerivedAttributes(),\n                 user.getVirtualAttributes(),\n-                user.getExternalResources());\n+                user.getResources());\n \n         MembershipTO membershipTO;\n         for (Membership membership : user.getMemberships()) {\n@@ -420,12 +420,12 @@ public UserTO getUserTO(final SyncopeUser user) {\n                     membership.getAttributes(),\n                     membership.getDerivedAttributes(),\n                     membership.getVirtualAttributes(),\n-                    membership.getExternalResources());\n+                    membership.getResources());\n \n             userTO.addMembership(membershipTO);\n         }\n \n-        for (ExternalResource resource : user.getExternalResources()) {\n+        for (ExternalResource resource : user.getResources()) {\n             for (PropagationTask task : taskDAO.findAll(resource, user)) {\n                 TaskExec exec = taskExecDAO.findLatestStarted(task);\n                 userTO.addPropagationStatus(resource.getName(),"},{"sha":"6bf2dc49e2163c1b49b7faef1ae7cc3c697264f0","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -222,7 +222,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO,\n         // after form submission - propagation\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.CREATE,\n-                user.getExternalResourceNames());\n+                user.getResourceNames());\n         if (waitingForForm(user)) {\n             runtimeService.setVariable(processInstance.getProcessInstanceId(),\n                     PROP_BY_RESOURCE, propByRes);"},{"sha":"9ac73caa5e0342ba25c5fa1f2a905d4e42ce0efd","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -62,7 +62,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO,\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.CREATE,\n-                user.getExternalResourceNames());\n+                user.getResourceNames());\n         return new WorkflowResult<Map.Entry<Long, Boolean>>(\n                 new DefaultMapEntry(user.getId(), Boolean.TRUE),\n                 propByRes, \"create\");"},{"sha":"34dad5cfb88b96c8b4603aae10ec88df1dd683e4","filename":"core/src/main/resources/entityManagerFactoryContext.xml","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2FentityManagerFactoryContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2FentityManagerFactoryContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FentityManagerFactoryContext.xml?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+       http://www.springframework.org/schema/beans/spring-beans.xsd\">\n+\n+    <bean id=\"entityManagerFactory\"\n+          class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n+        <property name=\"persistenceUnitName\" value=\"syncopePersistenceUnit\"/>\n+        <property name=\"dataSource\" ref=\"dataSource\"/>\n+        <property name=\"jpaVendorAdapter\">\n+            <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n+                <property name=\"showSql\" value=\"false\"/>\n+                <property name=\"generateDdl\" value=\"true\"/>\n+                <property name=\"databasePlatform\" value=\"${jpa.dialect}\"/>\n+            </bean>\n+        </property>\n+        <property name=\"jpaPropertyMap\">\n+            <map>\n+                <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n+                <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n+                \n+                <entry key=\"openjpa.DataCache\" value=\"true(Lru=true)\"/>\n+                <entry key=\"openjpa.QueryCache\" value=\"true(Lru=true)\"/>\n+            </map>\n+        </property>\n+    </bean>\n+\n+</beans>"},{"sha":"48424b522a6e3f2db193558f4b329930fb969faf","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -49,9 +49,9 @@\n     <entry key=\"SyncopeRole_Index_33\">CREATE INDEX SyncopeRole_Index_33 ON SyncopeRole(parent_id)</entry>\n     <entry key=\"SyncopeRole_Entitlement_Index_34\">CREATE INDEX SyncopeRole_Ent_Index_34 ON SyncopeRole_Entitlement(entitlements_name)</entry>\n     <entry key=\"SyncopeRole_Entitlement_Index_35\">CREATE INDEX SyncopeRole_Ent_Index_35 ON SyncopeRole_Entitlement(roles_id)</entry>\n-    <entry key=\"SyncopeRole_ExternalResource_Index_36\">CREATE INDEX SyncopeRole_Ext_Index_36 ON SyncopeRole_ExternalResource(externalResource_name)</entry>\n+    <entry key=\"SyncopeRole_ExternalResource_Index_36\">CREATE INDEX SyncopeRole_Ext_Index_36 ON SyncopeRole_ExternalResource(resource_name)</entry>\n     <entry key=\"SyncopeRole_ExternalResource_Index_37\">CREATE INDEX SyncopeRole_Ext_Index_37 ON SyncopeRole_ExternalResource(role_id)</entry>\n-    <entry key=\"SyncopeUser_ExternalResource_Index_38\">CREATE INDEX SyncopeUser_Ext_Index_38 ON SyncopeUser_ExternalResource(externalResource_name)</entry>\n+    <entry key=\"SyncopeUser_ExternalResource_Index_38\">CREATE INDEX SyncopeUser_Ext_Index_38 ON SyncopeUser_ExternalResource(resource_name)</entry>\n     <entry key=\"SyncopeUser_ExternalResource_Index_39\">CREATE INDEX SyncopeUser_Ext_Index_39 ON SyncopeUser_ExternalResource(user_id)</entry>\n     <entry key=\"SyncopeUser_passwordHistory_Index_40\">CREATE INDEX SyncopeUser_pas_Index_40 ON SyncopeUser_passwordHistory(SyncopeUser_id)</entry>\n     <entry key=\"Task_Index_41\">CREATE INDEX Task_Index_41 ON Task(syncopeUser_id)</entry>"},{"sha":"936b471a6377651244f00f2b1650591012921492","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -59,28 +59,6 @@\n         <property name=\"password\" value=\"${jpa.password}\"/>\n     </bean>\n \n-    <bean id=\"entityManagerFactory\"\n-          class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n-        <property name=\"persistenceUnitName\" value=\"syncopePersistenceUnit\"/>\n-        <property name=\"dataSource\" ref=\"dataSource\"/>\n-        <property name=\"jpaVendorAdapter\">\n-            <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-                <property name=\"showSql\" value=\"false\"/>\n-                <property name=\"generateDdl\" value=\"true\"/>\n-                <property name=\"databasePlatform\" value=\"${jpa.dialect}\"/>\n-            </bean>\n-        </property>\n-        <property name=\"jpaPropertyMap\">\n-            <map>\n-                <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n-                <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n-                \n-                <entry key=\"openjpa.DataCache\" value=\"true(Lru=true)\"/>\n-                <entry key=\"openjpa.QueryCache\" value=\"true(Lru=true)\"/>\n-            </map>\n-        </property>\n-    </bean>\n-\n     <bean id=\"entityManager\" class=\"org.springframework.orm.jpa.support.SharedEntityManagerBean\">\n         <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>"},{"sha":"995d1643028658bc81cb1305369612774bacd0c0","filename":"core/src/main/resources/views.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -68,12 +68,12 @@ WHERE m.syncoperole_id = r.id\n     <entry key=\"user_search_resource\">\n CREATE VIEW user_search_resource AS\n \n-SELECT st.user_id AS user_id, st.externalResource_name AS resource_name\n+SELECT st.user_id AS user_id, st.resource_name AS resource_name\n FROM SyncopeUser_ExternalResource st\n \n UNION ALL\n \n-SELECT m.syncopeuser_id AS user_id, st.externalResource_name AS resource_name\n+SELECT m.syncopeuser_id AS user_id, st.resource_name AS resource_name\n FROM Membership m, SyncopeRole r, SyncopeRole_ExternalResource st\n WHERE m.syncoperole_id = r.id AND st.role_id = r.id\n     </entry>"},{"sha":"fd10e7b8b1ae60ca22e2d068b38632c63a70c68b","filename":"core/src/test/java/org/syncope/core/AbstractTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2FAbstractTest.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -33,6 +33,7 @@\n @ContextConfiguration(locations = {\n     \"classpath:syncopeContext.xml\",\n     \"classpath:persistenceContext.xml\",\n+    \"classpath:entityManagerFactoryContext.xml\",\n     \"classpath:schedulingContext.xml\",\n     \"classpath:workflowContext.xml\"\n })"},{"sha":"851424dde1f733c531a1b6362739c164c37d52b8","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserSearchTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -37,6 +37,7 @@\n @ContextConfiguration(locations = {\n     \"classpath:syncopeContext.xml\",\n     \"classpath:persistenceContext.xml\",\n+    \"classpath:entityManagerFactoryContext.xml\",\n     \"classpath:schedulingContext.xml\",\n     \"classpath:workflowContext.xml\"\n })"},{"sha":"d83724c1494962c6b086a03ffaa6ad8cd34cfa6e","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -201,7 +201,7 @@ public final void save() {\n         assertNotNull(\"user not found\", user);\n \n         actual.addUser(user);\n-        user.addExternalResource(actual);\n+        user.addResource(actual);\n \n         resourceDAO.flush();\n \n@@ -227,8 +227,8 @@ public final void save() {\n         // check user\n         user = userDAO.find(1L);\n         assertNotNull(user);\n-        assertNotNull(user.getExternalResources());\n-        assertTrue(user.getExternalResources().contains(actual));\n+        assertNotNull(user.getResources());\n+        assertTrue(user.getResources().contains(actual));\n     }\n \n     @Test\n@@ -276,7 +276,7 @@ public final void delete() {\n         for (Long id : userIds) {\n             SyncopeUser actualUser = userDAO.find(id);\n             assertNotNull(actualUser);\n-            for (ExternalResource res : actualUser.getExternalResources()) {\n+            for (ExternalResource res : actualUser.getResources()) {\n                 assertFalse(res.getName().equalsIgnoreCase(resource.getName()));\n             }\n         }"},{"sha":"92ad83cd23f07722394eea42edb384861592d999","filename":"core/src/test/notifications/java/org/syncope/core/notification/NotificationTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -59,6 +59,7 @@\n     \"classpath:syncopeContext.xml\",\n     \"classpath:restContext.xml\",\n     \"classpath:persistenceContext.xml\",\n+    \"classpath:entityManagerFactoryContext.xml\",\n     \"classpath:schedulingContext.xml\",\n     \"classpath:workflowContext.xml\"\n })\n@@ -315,4 +316,4 @@ public void notifyByMail() {\n \n         assertTrue(verifyMail(sender, subject));\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"358d69e8f1dfa7288feba6b92123517fa40c4fa2","filename":"core/src/test/resources/content.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=8e91a7c7beae8bc9daffb5d4ca286c42e3301b1d","patch":"@@ -282,12 +282,12 @@\n                       propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                       accountlink=\"&apos;uid=&apos; + username + &apos;,ou=people,o=isp&apos;\"/>\n                       \n-    <SyncopeUser_ExternalResource user_id=\"3\" externalResource_name=\"ws-target-resource-delete\" />\n-    <SyncopeRole_ExternalResource role_id=\"3\" externalResource_name=\"ws-target-resource-list-mappings-1\" />\n-    <SyncopeUser_ExternalResource user_id=\"3\" externalResource_name=\"ws-target-resource-2\" />\n-    <SyncopeRole_ExternalResource role_id=\"8\" externalResource_name=\"ws-target-resource-2\" />\n-    <SyncopeRole_ExternalResource role_id=\"3\" externalResource_name=\"ws-target-resource-list-mappings-2\" />\n-    <SyncopeUser_ExternalResource user_id=\"3\" externalResource_name=\"ws-target-resource-1\" />\n+    <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-delete\" />\n+    <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-1\" />\n+    <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-2\" />\n+    <SyncopeRole_ExternalResource role_id=\"8\" resource_name=\"ws-target-resource-2\" />\n+    <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-2\" />\n+    <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-1\" />\n \n     <SchemaMapping id=\"99\" extAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-1\""}]}