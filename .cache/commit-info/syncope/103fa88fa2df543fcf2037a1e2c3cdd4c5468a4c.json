{"sha":"103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEwM2ZhODhmYTJkZjU0M2ZjZjIwMzdhMWUyYzNjZGQ0YzU0NjhhNGM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-20T15:20:14Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-20T15:20:14Z"},"message":"Creating users on (TMP) OpenAM taking realms and roles into account\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246404 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd7696aa7adca6e06ac9a5370a2af09bc1f3adbc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fd7696aa7adca6e06ac9a5370a2af09bc1f3adbc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/comments","author":null,"committer":null,"parents":[{"sha":"026c0f3834336a5e25ca53ad09081b6f78ccd620","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/026c0f3834336a5e25ca53ad09081b6f78ccd620","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/026c0f3834336a5e25ca53ad09081b6f78ccd620"}],"stats":{"total":57,"additions":53,"deletions":4},"files":[{"sha":"bccd1934b54483d5d6f37a50adad482f94a74b83","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMActivate.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java?ref=103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","patch":"@@ -46,12 +46,14 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n+        String realm = OpenAMUtils.getRealmFromRoles(syncopeUser.getRoles());\n+\n         try {\n             SSOToken adminToken = (SSOToken) AccessController.doPrivileged(\n                     AdminTokenAction.getInstance());\n \n             AMIdentityRepository repo =\n-                    new AMIdentityRepository(adminToken, \"/\");\n+                    new AMIdentityRepository(adminToken, realm);\n \n             IdSearchControl controls = new IdSearchControl();\n             controls.setSearchModifiers(IdSearchOpModifier.OR,\n@@ -73,7 +75,8 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n \n             SSOTokenManager.getInstance().destroyToken(adminToken);\n         } catch (Throwable t) {\n-            log.error(\"While trying to activate the user on OpenAM\", t);\n+            log.error(\"While trying to activate the user on OpenAM, \"\n+                    + \"under realm \" + realm, t);\n         }\n     }\n }"},{"sha":"045c373375547f76c54366d7c1ad655c8197e5c7","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMCreate.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java?ref=103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","patch":"@@ -44,6 +44,8 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n+        String realm = OpenAMUtils.getRealmFromRoles(syncopeUser.getRoles());\n+\n         try {\n             SSOToken adminToken = (SSOToken) AccessController.doPrivileged(\n                     AdminTokenAction.getInstance());\n@@ -62,14 +64,15 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n             map.put(\"inetuserstatus\", Collections.singleton(\"Inactive\"));\n \n             AMIdentityRepository repo =\n-                    new AMIdentityRepository(adminToken, \"/\");\n+                    new AMIdentityRepository(adminToken, realm);\n \n             repo.createIdentity(IdType.USER,\n                     String.valueOf(syncopeUser.getId()), map);\n \n             SSOTokenManager.getInstance().destroyToken(adminToken);\n         } catch (Throwable t) {\n-            log.error(\"While trying to create the user on OpenAM\", t);\n+            log.error(\"While trying to create the user on OpenAM, \"\n+                    + \" under realm \" + realm, t);\n         }\n     }\n }"},{"sha":"aedc877a672040ee2105dbac682d0ee9ec9e89ef","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMUtils.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMUtils.java?ref=103fa88fa2df543fcf2037a1e2c3cdd4c5468a4c","patch":"@@ -0,0 +1,43 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import java.util.Set;\n+import org.syncope.core.persistence.beans.role.SyncopeRole;\n+\n+/**\n+ * TODO: remove ASAP!\n+ */\n+public class OpenAMUtils {\n+\n+    public static String getRealmFromRoles(Set<SyncopeRole> roles) {\n+        String realm = \"/\";\n+\n+        if (roles.size() > 0) {\n+            SyncopeRole role = roles.iterator().next();\n+\n+            while (role.getParent() != null\n+                    && !role.getParent().getName().equals(\"/\")) {\n+\n+                role = role.getParent();\n+            }\n+            if (role.getParent() != null) {\n+                realm = role.getName();\n+            }\n+        }\n+\n+        return realm;\n+    }\n+}"}]}