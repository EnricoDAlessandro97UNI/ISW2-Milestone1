{"sha":"45b7ca129493efc99b0db6be614b0f9e38510e38","node_id":"C_kwDOJfYA1toAKDQ1YjdjYTEyOTQ5M2VmYzk5YjBkYjZiZTYxNGIwZjllMzg1MTBlMzg","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-24T10:41:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-24T10:41:52Z"},"message":"More flexible assertions for SRA IT cases","tree":{"sha":"a92dabaf1372a88fbeac49165e973ac5da424691","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a92dabaf1372a88fbeac49165e973ac5da424691"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/45b7ca129493efc99b0db6be614b0f9e38510e38","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45b7ca129493efc99b0db6be614b0f9e38510e38","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/45b7ca129493efc99b0db6be614b0f9e38510e38","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45b7ca129493efc99b0db6be614b0f9e38510e38/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"df0818aa20e1ac821dd04db0d63348b439a9f5da","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df0818aa20e1ac821dd04db0d63348b439a9f5da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df0818aa20e1ac821dd04db0d63348b439a9f5da"}],"stats":{"total":12,"additions":9,"deletions":3},"files":[{"sha":"0b7beafbff99a98bd5ca2f27e1d572459e578f7c","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45b7ca129493efc99b0db6be614b0f9e38510e38/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45b7ca129493efc99b0db6be614b0f9e38510e38/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=45b7ca129493efc99b0db6be614b0f9e38510e38","patch":"@@ -19,6 +19,9 @@\n package org.apache.syncope.fit.sra;\n \n import static org.awaitility.Awaitility.await;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.oneOf;\n import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n@@ -258,8 +261,7 @@ protected static ObjectNode checkGetResponse(\n \n         ObjectNode headers = (ObjectNode) json.get(\"headers\");\n         assertEquals(MediaType.TEXT_HTML, headers.get(HttpHeaders.ACCEPT).asText());\n-        assertEquals(EN_LANGUAGE, headers.get(HttpHeaders.ACCEPT_LANGUAGE).asText());\n-        assertEquals(\"localhost:\" + PORT, headers.get(\"X-Forwarded-Host\").asText());\n+        assertThat(headers.get(\"X-Forwarded-Host\").asText(), is(oneOf(\"localhost:\" + PORT, \"127.0.0.1:\" + PORT)));\n \n         assertEquals(\n                 StringUtils.substringBefore(originalRequestURI, \"?\"),"},{"sha":"fb27f5ef09e4a8ce459674c10754f0be6b5181a8","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/OIDCSRAITCase.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45b7ca129493efc99b0db6be614b0f9e38510e38/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45b7ca129493efc99b0db6be614b0f9e38510e38/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java?ref=45b7ca129493efc99b0db6be614b0f9e38510e38","patch":"@@ -18,6 +18,10 @@\n  */\n package org.apache.syncope.fit.sra;\n \n+import static org.apache.syncope.fit.sra.AbstractSRAITCase.PORT;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.oneOf;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n@@ -271,7 +275,7 @@ public void rest() throws IOException, ParseException {\n         ObjectNode headers = (ObjectNode) json.get(\"headers\");\n         assertEquals(MediaType.APPLICATION_JSON, headers.get(HttpHeaders.ACCEPT).asText());\n         assertEquals(MediaType.APPLICATION_JSON, headers.get(HttpHeaders.CONTENT_TYPE).asText());\n-        assertEquals(\"localhost:\" + PORT, headers.get(\"X-Forwarded-Host\").asText());\n+        assertThat(headers.get(\"X-Forwarded-Host\").asText(), is(oneOf(\"localhost:\" + PORT, \"127.0.0.1:\" + PORT)));\n \n         assertEquals(client.getBaseURI().toASCIIString().replace(\"/protected\", \"\"), json.get(\"url\").asText());\n     }"}]}