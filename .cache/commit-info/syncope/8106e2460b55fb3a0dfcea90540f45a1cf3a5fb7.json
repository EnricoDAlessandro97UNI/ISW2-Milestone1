{"sha":"8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxMDZlMjQ2MGI1NWZiM2EwZGZjZWE5MDU0MGY0NWExY2YzYTVmYjc=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-06-01T10:15:45Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-06-01T10:15:45Z"},"message":"[SYNCOPE-660] Added console utilities for runtime task management - Minor fixes","tree":{"sha":"212f3b6e7f3943c3953225281ad8b0591f025472","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/212f3b6e7f3943c3953225281ad8b0591f025472"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"790704c08790f8a2536af84ed46290f1596851f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/790704c08790f8a2536af84ed46290f1596851f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/790704c08790f8a2536af84ed46290f1596851f0"}],"stats":{"total":57,"additions":27,"deletions":30},"files":[{"sha":"93150fc88e1782f18aa04687324fb6a7b9f02cbc","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RuntimePanel.java","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRuntimePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRuntimePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRuntimePanel.java?ref=8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","patch":"@@ -23,9 +23,11 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.util.time.Duration;\n \n public class RuntimePanel extends Panel {\n \n@@ -54,14 +56,15 @@ public RuntimePanel(final String componentId, final IModel<?> model, final PageR\n \n     }\n \n-    public final void refresh() {\n+    public final RuntimePanel refresh() {\n         boolean currentStatus = jobRestClient.isJobRunning(jobId);\n         if (currentStatus && !latestStatus) {\n             setRunning();\n         } else if (!currentStatus) {\n             setNotRunning();\n         }\n         latestStatus = currentStatus;\n+        return this;\n     }\n \n     public void setRunning() {\n@@ -102,4 +105,26 @@ public void setTimer(AbstractAjaxTimerBehavior timer) {\n         this.add(this.timer);\n     }\n \n+    public void startPolling(final int seconds) {\n+        AbstractAjaxTimerBehavior timer = new AbstractAjaxTimerBehavior(Duration.seconds(seconds)) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onTimer(AjaxRequestTarget target) {                \n+                target.add(refresh());\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+                attributes.getExtraParameters().put(\"pollingTimeout\", \"true\");\n+            }\n+\n+        };\n+\n+        setTimer(timer);\n+\n+    }\n+\n }"},{"sha":"24e1ef79473cfe5a2c93a61d1b2612a0dd4d58dc","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/JobColumn.java","status":"modified","additions":1,"deletions":29,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java?ref=8106e2460b55fb3a0dfcea90540f45a1cf3a5fb7","patch":"@@ -23,14 +23,10 @@\n import org.apache.syncope.console.pages.panels.RuntimePanel;\n import org.apache.syncope.console.rest.JobRestClient;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.util.time.Duration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -63,32 +59,8 @@ public void populateItem(final Item<ICellPopulator<T>> item, final String compon\n         }\n         if (jobId != null) {\n             panel = new RuntimePanel(componentId, model, pageRef, jobId, jobRestClient);\n-            startPolling(10);\n+            panel.startPolling(10);\n             item.add(panel);\n         }\n     }\n-\n-    public void startPolling(final int seconds) {\n-        AbstractAjaxTimerBehavior timer = new AbstractAjaxTimerBehavior(Duration.seconds(seconds)) {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void onTimer(AjaxRequestTarget target) {\n-                panel.refresh();\n-                target.add(panel);\n-            }\n-\n-            @Override\n-            protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n-                super.updateAjaxAttributes(attributes);\n-                attributes.getExtraParameters().put(\"pollingTimeout\", \"true\");\n-            }\n-\n-        };\n-\n-        panel.setTimer(timer);\n-\n-    }\n-\n }"}]}