{"sha":"bab52cd7b18e1654a70f08d636c9811ad6f57656","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJhYjUyY2Q3YjE4ZTE2NTRhNzBmMDhkNjM2Yzk4MTFhZDZmNTc2NTY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-25T15:28:02Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-25T15:28:02Z"},"message":"Fixes and improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246606 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ac4be9501f448322e19abd84321dec2f262db431","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ac4be9501f448322e19abd84321dec2f262db431"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bab52cd7b18e1654a70f08d636c9811ad6f57656","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bab52cd7b18e1654a70f08d636c9811ad6f57656","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bab52cd7b18e1654a70f08d636c9811ad6f57656","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bab52cd7b18e1654a70f08d636c9811ad6f57656/comments","author":null,"committer":null,"parents":[{"sha":"15b2e91362230914b464d3c68f23588b79ec08df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15b2e91362230914b464d3c68f23588b79ec08df","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/15b2e91362230914b464d3c68f23588b79ec08df"}],"stats":{"total":238,"additions":167,"deletions":71},"files":[{"sha":"fa78e52a055d8c8a41837b7dac48479ddac7445e","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -32,6 +32,8 @@ public interface ResourceDAO extends DAO {\n     List<SchemaMapping> getMappings(String schemaName, SchemaType schemaType,\n             String resourceName);\n \n+    String getSchemaNameForAccountId(String resourceName);\n+\n     void deleteMappings(String schemaName, SchemaType schemaType);\n \n     void delete(String name);"},{"sha":"4428ec50c15a77236d95582b13167b763def7388","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -59,7 +59,7 @@ public TargetResource save(final TargetResource resource) {\n                 accountIds++;\n             }\n         }\n-        if (accountIds > 1) {\n+        if (accountIds == 0 || accountIds > 1) {\n             throw new IllegalArgumentException(\"Found '\" + accountIds\n                     + \"' mappings for account id\");\n         }\n@@ -94,6 +94,18 @@ public List<SchemaMapping> getMappings(final String schemaName,\n         return query.getResultList();\n     }\n \n+    @Override\n+    @Transactional(readOnly = true)\n+    public String getSchemaNameForAccountId(final String resourceName) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT m FROM SchemaMapping m \"\n+                + \"WHERE m.resource.name=:resourceName \"\n+                + \"AND m.accountid = 'T'\");\n+        query.setParameter(\"resourceName\", resourceName);\n+\n+        return ((SchemaMapping) query.getSingleResult()).getSchemaName();\n+    }\n+\n     @Override\n     public void deleteMappings(final String schemaName,\n             final SchemaType schemaType) {"},{"sha":"a03777b8294acc5840ac3e04c2f34a54425ac0c6","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":4,"deletions":19,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -65,11 +65,13 @@ public class PropagationManager {\n      */\n     private static final Logger LOG =\n             LoggerFactory.getLogger(PropagationManager.class);\n+\n     /**\n      * Schema DAO.\n      */\n     @Autowired\n     private SchemaDAO schemaDAO;\n+\n     /**\n      * Task DAO.\n      */\n@@ -196,12 +198,6 @@ private void provision(\n                         prepareAttributes(user, resource);\n                 String accountId =\n                         preparedAttributes.keySet().iterator().next();\n-                Set<Attribute> attributes =\n-                        syncResourceNames.contains(resource.getName())\n-                        ? manipulateSyncAttributes(\n-                        preparedAttributes.values().iterator().next())\n-                        : manipulateAsyncAttributes(\n-                        preparedAttributes.values().iterator().next());\n \n                 task = new Task();\n                 task.setResource(resource);\n@@ -211,7 +207,8 @@ private void provision(\n                         ? PropagationMode.SYNC : PropagationMode.ASYNC);\n                 task.setAccountId(accountId);\n                 task.setOldAccountId(resourceOperations.getOldAccountId());\n-                task.setAttributes(attributes);\n+                task.setAttributes(\n+                        preparedAttributes.values().iterator().next());\n \n                 taskExecution = new TaskExecution();\n                 taskExecution.setTask(task);\n@@ -233,18 +230,6 @@ private void provision(\n         }\n     }\n \n-    protected Set<Attribute> manipulateSyncAttributes(\n-            final Set<Attribute> attributes) {\n-\n-        return attributes;\n-    }\n-\n-    protected Set<Attribute> manipulateAsyncAttributes(\n-            final Set<Attribute> attributes) {\n-\n-        return attributes;\n-    }\n-\n     private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n             TargetResource resource) {\n "},{"sha":"735bce2549d75cca1c2972dee6e1cf8b935e125f","filename":"core/src/main/resources/logback.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -57,7 +57,7 @@\n             <maxHistory>30</maxHistory>\n         </rollingPolicy>\n         <encoder>\n-            <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+            <pattern>%d{HH:mm:ss.SSS} %-5level %msg%n</pattern>\n         </encoder>\n     </appender>\n \n@@ -135,6 +135,11 @@\n         <appender-ref ref=\"rest\"/>\n     </logger>\n \n+    <logger name=\"com.opensymphony.workflow\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"rest\"/>\n+    </logger>\n+\n     <logger name=\"org.hibernate\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"persistence\"/>"},{"sha":"38685ba66ad8c01116084beb0fde83a01eca78c3","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -26,12 +26,14 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector;\n+import org.syncope.types.SchemaType;\n \n @Transactional\n public class ResourceTest extends AbstractTest {\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n+\n     @Autowired\n     private TaskDAO taskDAO;\n \n@@ -72,12 +74,27 @@ public final void findById() {\n         assertTrue(mappingIds.contains(100L));\n     }\n \n+    @Test\n+    public final void getAccountId() {\n+        assertEquals(\"username\",\n+                resourceDAO.getSchemaNameForAccountId(\"ws-target-resource-2\"));\n+    }\n+\n     @Test\n     public final void save()\n             throws ClassNotFoundException {\n         TargetResource resource = new TargetResource();\n         resource.setName(\"ws-target-resource-basic-save\");\n \n+        SchemaMapping accountId = new SchemaMapping();\n+        accountId.setResource(resource);\n+        accountId.setAccountid(true);\n+        accountId.setField(\"username\");\n+        accountId.setSchemaName(\"username\");\n+        accountId.setSchemaType(SchemaType.AccountId);\n+\n+        resource.addMapping(accountId);\n+\n         // save the resource\n         TargetResource actual = resourceDAO.save(resource);\n "},{"sha":"ee3c81112a30b66ad5410c20cb58c502e2edda8f","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -46,14 +46,19 @@ public class ResourceTest extends AbstractTest {\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n+\n     @Autowired\n     private SchemaDAO schemaDAO;\n+\n     @Autowired\n     private ConnectorInstanceDAO connectorInstanceDAO;\n+\n     @Autowired\n     private SyncopeUserDAO syncopeUserDAO;\n+\n     @Autowired\n     private TaskDAO taskDAO;\n+\n     @Autowired\n     private ResourceDataBinder resourceDataBinder;\n \n@@ -132,6 +137,14 @@ public final void save()\n \n             resource.addMapping(mapping);\n         }\n+        SchemaMapping accountId = new SchemaMapping();\n+        accountId.setResource(resource);\n+        accountId.setAccountid(true);\n+        accountId.setField(\"username\");\n+        accountId.setSchemaName(userSchema.getName());\n+        accountId.setSchemaType(SchemaType.AccountId);\n+\n+        resource.addMapping(accountId);\n \n         // specify an user schema\n         SyncopeUser user = syncopeUserDAO.find(1L);\n@@ -172,7 +185,7 @@ public final void save()\n         List<SchemaMapping> schemaMappings = resource.getMappings();\n \n         assertNotNull(schemaMappings);\n-        assertEquals(3, schemaMappings.size());\n+        assertEquals(4, schemaMappings.size());\n     }\n \n     @Test"},{"sha":"bc5a74204ffdb68ea8704ca41dbbb3056560abea","filename":"core/src/test/java/org/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -39,7 +39,7 @@ public void createExistingResource() {\n         resourceTO.setName(resourceName);\n \n         restTemplate.postForObject(BASE_URL + \"resource/create.json\",\n-                                   resourceTO, ResourceTO.class);\n+                resourceTO, ResourceTO.class);\n     }\n \n     @Test\n@@ -62,6 +62,13 @@ public void create() {\n         schemaMappingTO.setSchemaType(SchemaType.RoleSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n+        schemaMappingTO = new SchemaMappingTO();\n+        schemaMappingTO.setField(\"username\");\n+        schemaMappingTO.setSchemaName(\"username\");\n+        schemaMappingTO.setSchemaType(SchemaType.AccountId);\n+        schemaMappingTO.setAccountid(true);\n+        resourceTO.addMapping(schemaMappingTO);\n+\n         ResourceTO actual = restTemplate.postForObject(\n                 BASE_URL + \"resource/create.json\",\n                 resourceTO, ResourceTO.class);\n@@ -86,7 +93,7 @@ public void updateWithException() {\n             resourceTO.setName(\"resourcenotfound\");\n \n             restTemplate.postForObject(BASE_URL + \"resource/update.json\",\n-                                       resourceTO, ResourceTO.class);\n+                    resourceTO, ResourceTO.class);\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n@@ -111,14 +118,20 @@ public void update() {\n         schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n         schemaMappingTOs.add(schemaMappingTO);\n \n-        // Update defining new mapping\n+        // Update defining new mappings\n         for (int i = 4; i < 6; i++) {\n             schemaMappingTO = new SchemaMappingTO();\n             schemaMappingTO.setField(\"test\" + i);\n             schemaMappingTO.setSchemaName(\"username\");\n             schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n             schemaMappingTOs.add(schemaMappingTO);\n         }\n+        schemaMappingTO = new SchemaMappingTO();\n+        schemaMappingTO.setField(\"username\");\n+        schemaMappingTO.setSchemaName(\"username\");\n+        schemaMappingTO.setSchemaType(SchemaType.AccountId);\n+        schemaMappingTO.setAccountid(true);\n+        schemaMappingTOs.add(schemaMappingTO);\n \n         resourceTO.setMappings(schemaMappingTOs);\n \n@@ -134,7 +147,7 @@ public void update() {\n \n         assertNotNull(mappings);\n \n-        assertEquals(3, mappings.size());\n+        assertEquals(4, mappings.size());\n     }\n \n     @Test"},{"sha":"e48357509660a7414732c2c5dc024bddda85ae83","filename":"identityconnectors/bundles/staticws/ws-target-resource/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -203,6 +203,12 @@\n                         <configuration>\n                             <scanIntervalSeconds>0</scanIntervalSeconds>\n                             <daemon>true</daemon>\n+                            <systemProperties>\n+                                <systemProperty>\n+                                    <name>logback.configurationFile</name>\n+                                    <value>file:${project.build.directory}/classes/logback.xml</value>\n+                                </systemProperty>\n+                            </systemProperties>\n                         </configuration>\n                     </execution>\n                     <execution>"},{"sha":"cc4763103901d6a4c70c3cd5a70885c02eda40f1","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/wstarget/ProvisioningImpl.java","status":"modified","additions":76,"deletions":43,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -21,7 +21,9 @@\n import java.sql.Statement;\n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n import javax.jws.WebService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -45,7 +47,8 @@ public class ProvisioningImpl implements Provisioning {\n             LoggerFactory.getLogger(Provisioning.class);\n \n     @Override\n-    public String delete(String accountid) throws ProvisioningException {\n+    public String delete(String accountid)\n+            throws ProvisioningException {\n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Operation request received\");\n         }\n@@ -131,6 +134,14 @@ public String update(String accountid, List<WSAttributeValue> data)\n             return accountid;\n         }\n \n+        List<WSAttribute> schema = schema();\n+        Set<String> schemaNames = new HashSet<String>();\n+        for (WSAttribute attr : schema) {\n+            schemaNames.add(attr.getName());\n+        }\n+        schemaNames.add(\"__NAME__\");\n+        schemaNames.add(\"__PASSWORD__\");\n+\n         Connection conn = null;\n \n         try {\n@@ -141,42 +152,47 @@ public String update(String accountid, List<WSAttributeValue> data)\n \n             StringBuilder set = new StringBuilder();\n             for (WSAttributeValue attr : data) {\n+                if (schemaNames.contains(attr.getName())) {\n+                    if (attr.getValues() == null\n+                            || attr.getValues().isEmpty()) {\n \n-                if (attr.getValues() == null || attr.getValues().isEmpty()) {\n-                    value = null;\n-                } else if (attr.getValues().size() == 1) {\n+                        value = null;\n+                    } else if (attr.getValues().size() == 1) {\n                         value = attr.getValues().get(0).toString();\n                     } else {\n                         value = attr.getValues().toString();\n                     }\n \n-                if (!attr.isKey()\n-                        || !accountid.equals(value)) {\n-                    if (set.length() > 0) {\n-                        set.append(\",\");\n-                    }\n+                    if (!attr.isKey()\n+                            || !accountid.equals(value)) {\n+                        if (set.length() > 0) {\n+                            set.append(\",\");\n+                        }\n \n-                    if (\"__NAME__\".equals(attr.getName())) {\n-                        set.append(\"userId=\");\n-                    } else if (\"__PASSWORD__\".equals(attr.getName())) {\n+                        if (\"__NAME__\".equals(attr.getName())) {\n+                            set.append(\"userId=\");\n+                        } else if (\"__PASSWORD__\".equals(attr.getName())) {\n                             set.append(\"password=\");\n                         } else {\n                             set.append(attr.getName()).append('=');\n                         }\n \n-                    set.append(value == null ? null : \"'\" + value + \"'\");\n+                        set.append(value == null ? null : \"'\" + value + \"'\");\n+                    }\n                 }\n             }\n \n-            String query =\n-                    \"UPDATE user SET \" + set.toString()\n-                    + \" WHERE userId='\" + accountid + \"';\";\n+            if (set.length() > 0) {\n+                String query =\n+                        \"UPDATE user SET \" + set.toString()\n+                        + \" WHERE userId='\" + accountid + \"';\";\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Execute query: \" + query);\n-            }\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Execute query: \" + query);\n+                }\n \n-            statement.executeUpdate(query);\n+                statement.executeUpdate(query);\n+            }\n \n             return accountid;\n         } catch (SQLException ex) {\n@@ -282,6 +298,14 @@ public String create(List<WSAttributeValue> data)\n             LOG.debug(\"Operation request received\");\n         }\n \n+        List<WSAttribute> schema = schema();\n+        Set<String> schemaNames = new HashSet<String>();\n+        for (WSAttribute attr : schema) {\n+            schemaNames.add(attr.getName());\n+        }\n+        schemaNames.add(\"__NAME__\");\n+        schemaNames.add(\"__PASSWORD__\");\n+\n         Connection conn = null;\n         try {\n             conn = connect();\n@@ -294,38 +318,42 @@ public String create(List<WSAttributeValue> data)\n             String value;\n \n             for (WSAttributeValue attr : data) {\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Bind attribute: \" + attr);\n-                }\n+                if (schemaNames.contains(attr.getName())) {\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"Bind attribute: \" + attr);\n+                    }\n+\n+                    if (attr.getValues() == null\n+                            || attr.getValues().isEmpty()) {\n \n-                if (attr.getValues() == null || attr.getValues().isEmpty()) {\n-                    value = null;\n-                } else if (attr.getValues().size() == 1) {\n+                        value = null;\n+                    } else if (attr.getValues().size() == 1) {\n                         value = attr.getValues().get(0).toString();\n                     } else {\n                         value = attr.getValues().toString();\n                     }\n \n-                if (keys.length() > 0) {\n-                    keys.append(\",\");\n-                }\n+                    if (keys.length() > 0) {\n+                        keys.append(\",\");\n+                    }\n \n-                if (\"__NAME__\".equals(attr.getName())) {\n-                    keys.append(\"userId\");\n-                } else if (\"__PASSWORD__\".equals(attr.getName())) {\n+                    if (\"__NAME__\".equals(attr.getName())) {\n+                        keys.append(\"userId\");\n+                    } else if (\"__PASSWORD__\".equals(attr.getName())) {\n                         keys.append(\"password\");\n                     } else {\n                         keys.append(attr.getName());\n                     }\n \n-                if (values.length() > 0) {\n-                    values.append(\",\");\n-                }\n+                    if (values.length() > 0) {\n+                        values.append(\",\");\n+                    }\n \n-                values.append(value == null ? null : \"'\" + value + \"'\");\n+                    values.append(value == null ? null : \"'\" + value + \"'\");\n \n-                if (attr.isKey() && !attr.getValues().isEmpty()) {\n-                    accountid = attr.getValues().get(0).toString();\n+                    if (attr.isKey() && !attr.getValues().isEmpty()) {\n+                        accountid = attr.getValues().get(0).toString();\n+                    }\n                 }\n             }\n \n@@ -357,7 +385,8 @@ public String create(List<WSAttributeValue> data)\n     }\n \n     @Override\n-    public int getLatestChangeNumber() throws ProvisioningException {\n+    public int getLatestChangeNumber()\n+            throws ProvisioningException {\n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Operation request received\");\n         }\n@@ -366,7 +395,8 @@ public int getLatestChangeNumber() throws ProvisioningException {\n     }\n \n     @Override\n-    public List<WSChange> sync() throws ProvisioningException {\n+    public List<WSChange> sync()\n+            throws ProvisioningException {\n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Operation request received\");\n         }\n@@ -375,7 +405,8 @@ public List<WSChange> sync() throws ProvisioningException {\n     }\n \n     @Override\n-    public String resolve(String username) throws ProvisioningException {\n+    public String resolve(String username)\n+            throws ProvisioningException {\n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Operation request received\");\n         }\n@@ -639,7 +670,8 @@ public Boolean isAuthenticationSupported() {\n      * @throws ClassNotFoundException\n      * @throws SQLException\n      */\n-    private Connection connect() throws SQLException {\n+    private Connection connect()\n+            throws SQLException {\n \n         if (DefaultContentLoader.localDataSource == null) {\n             LOG.error(\"Data Source is null\");\n@@ -661,7 +693,8 @@ private Connection connect() throws SQLException {\n      * Close connection to db addressbook\n      * @throws SQLException\n      */\n-    private void close(Connection conn) throws SQLException {\n+    private void close(Connection conn)\n+            throws SQLException {\n         conn.close();\n     }\n }"},{"sha":"b855d8ae207af4451febe6401706df9c8485662c","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/resources/logback.xml","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bab52cd7b18e1654a70f08d636c9811ad6f57656/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=bab52cd7b18e1654a70f08d636c9811ad6f57656","patch":"@@ -30,7 +30,12 @@\n         <appender-ref ref=\"main\"/>\n     </logger>\n \n-    <logger name=\"org.springframework.orm\" additivity=\"false\">\n+    <logger name=\"org.springframework\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n+    <logger name=\"org.dbunit\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"main\"/>\n     </logger>\n@@ -40,8 +45,13 @@\n         <appender-ref ref=\"main\"/>\n     </logger>\n \n+    <logger name=\"ch.qos.logback\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+    \n     <root>\n-        <priority value=\"INFO\"/>\n+        <level value=\"INFO\"/>\n         <appender-ref ref=\"main\"/>\n     </root>\n </configuration>"}]}