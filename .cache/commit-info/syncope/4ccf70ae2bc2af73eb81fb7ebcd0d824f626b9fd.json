{"sha":"4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjY2Y3MGFlMmJjMmFmNzNlYjgxZmI3ZWJjZDBkODI0ZjYyNmI5ZmQ=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-04T11:00:12Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-04T11:00:12Z"},"message":"sonar: use preparedstatements instead of statements & remove NPE degerences\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1333875 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5dad66709e27b5a818e3b42c09e082542f486f6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5dad66709e27b5a818e3b42c09e082542f486f6e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/comments","author":null,"committer":null,"parents":[{"sha":"f4c5098908e5a8cad438d4ee42fcc041274dda9c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4c5098908e5a8cad438d4ee42fcc041274dda9c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4c5098908e5a8cad438d4ee42fcc041274dda9c"}],"stats":{"total":45,"additions":18,"deletions":27},"files":[{"sha":"a49b1a14fea2516b21d65ac8b2fcb09c791b075f","filename":"core/src/main/java/org/apache/syncope/core/init/ContentLoader.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","patch":"@@ -20,9 +20,9 @@\n \n import java.io.InputStream;\n import java.sql.Connection;\n+import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n-import java.sql.Statement;\n import java.util.Properties;\n import javax.sql.DataSource;\n import javax.xml.parsers.SAXParser;\n@@ -60,13 +60,13 @@ public void load() {\n         Connection conn = DataSourceUtils.getConnection(dataSource);\n \n         // 1. Check wether we are allowed to load default content into the DB\n-        Statement statement = null;\n+        PreparedStatement statement = null;\n         ResultSet resultSet = null;\n         boolean existingData = false;\n         try {\n-            statement = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);\n             final String queryContent = \"SELECT * FROM \" + SyncopeConf.class.getSimpleName();\n-            resultSet = statement.executeQuery(queryContent);\n+            statement = conn.prepareStatement(queryContent, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);\n+            resultSet = statement.executeQuery();\n             resultSet.last();\n \n             existingData = resultSet.getRow() > 0;\n@@ -110,9 +110,9 @@ public void load() {\n                 LOG.debug(\"Creating view {}\", views.get(idx).toString());\n \n                 try {\n-                    statement = conn.createStatement();\n                     final String updateViews = views.get(idx).toString().replaceAll(\"\\\\n\", \" \");\n-                    statement.executeUpdate(updateViews);\n+                    statement = conn.prepareStatement(updateViews);\n+                    statement.executeUpdate();\n                     statement.close();\n                 } catch (SQLException e) {\n                     LOG.error(\"Could not create view \", e);\n@@ -135,9 +135,9 @@ public void load() {\n                 LOG.debug(\"Creating index {}\", indexes.get(idx).toString());\n \n                 try {\n-                    statement = conn.createStatement();\n                     final String updateIndexed = indexes.get(idx).toString();\n-                    statement.executeUpdate(updateIndexed);\n+                    statement = conn.prepareStatement(updateIndexed);\n+                    statement.executeUpdate();\n                     statement.close();\n                 } catch (SQLException e) {\n                     LOG.error(\"Could not create index \", e);\n@@ -150,8 +150,8 @@ public void load() {\n         }\n \n         try {\n-            statement = conn.createStatement();\n-            statement.executeUpdate(\"DELETE FROM ACT_GE_PROPERTY\");\n+            statement = conn.prepareStatement(\"DELETE FROM ACT_GE_PROPERTY\");\n+            statement.executeUpdate();\n             statement.close();\n         } catch (SQLException e) {\n             LOG.error(\"Error during ACT_GE_PROPERTY delete rows\", e);"},{"sha":"ca694f142bc26a4a852b545c35406ae58749a8f3","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","patch":"@@ -407,21 +407,13 @@ private Set<String> getWhereClause(final String expression, final String value)\n             public int compare(String t, String t1) {\n                 if (t == null && t1 == null) {\n                     return 0;\n-                }\n-\n-                if (t != null && t1 == null) {\n+                } else if (t != null && t1 == null) {\n                     return -1;\n-                }\n-\n-                if (t == null && t1 != null) {\n+                } else if (t == null && t1 != null) {\n                     return 1;\n-                }\n-\n-                if (t.length() == t1.length()) {\n+                } else if (t.length() == t1.length()) {\n                     return 0;\n-                }\n-\n-                if (t.length() > t1.length()) {\n+                } else if (t.length() > t1.length()) {\n                     return -1;\n                 } else {\n                     return 1;"},{"sha":"c747debb866d0da211159f604c9ae74b7fa98f46","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SyncJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","patch":"@@ -313,7 +313,7 @@ private SyncResult createUser(SyncDelta delta, final boolean dryRun) throws JobE\n                             .getAttributes());\n \n                     if (status != null) {\n-                        enabled = status != null && status.getValue() != null && !status.getValue().isEmpty()\n+                        enabled = status.getValue() != null && !status.getValue().isEmpty()\n                                 ? (Boolean) status.getValue().get(0)\n                                 : null;\n                     }"},{"sha":"b950952ef9e2377d0722bd412622182583d6c76b","filename":"core/src/main/java/org/apache/syncope/core/util/ImportExport.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java?ref=4ccf70ae2bc2af73eb81fb7ebcd0d824f626b9fd","patch":"@@ -28,7 +28,6 @@\n import java.sql.ResultSet;\n import java.sql.ResultSetMetaData;\n import java.sql.SQLException;\n-import java.sql.Statement;\n import java.sql.Timestamp;\n import java.sql.Types;\n import java.text.ParseException;\n@@ -127,12 +126,12 @@ private void setParameters(final String tableName, final Attributes attrs, final\n \n         Connection conn = DataSourceUtils.getConnection(dataSource);\n         ResultSet rs = null;\n-        Statement stmt = null;\n+        PreparedStatement stmt = null;\n \n         try {\n-            stmt = conn.createStatement();\n             final String queryString = \"SELECT * FROM \" + tableName;\n-            rs = stmt.executeQuery(queryString);\n+            stmt = conn.prepareStatement(queryString);\n+            rs = stmt.executeQuery();\n             for (int i = 0; i < rs.getMetaData().getColumnCount(); i++) {\n                 colTypes.put(rs.getMetaData().getColumnName(i + 1).toUpperCase(), rs.getMetaData().getColumnType(i + 1));\n             }"}]}