{"sha":"295f0e95c87f992978841f9fd68627c95fe805a4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI5NWYwZTk1Yzg3Zjk5Mjk3ODg0MWY5ZmQ2ODYyN2M5NWZlODA1YTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-11T15:42:20Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-11T15:42:41Z"},"message":"Remove unused import","tree":{"sha":"b01787b9527809d7bfff905a8c1020df148c3c16","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b01787b9527809d7bfff905a8c1020df148c3c16"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/295f0e95c87f992978841f9fd68627c95fe805a4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/295f0e95c87f992978841f9fd68627c95fe805a4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/295f0e95c87f992978841f9fd68627c95fe805a4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/295f0e95c87f992978841f9fd68627c95fe805a4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"41816c85027bbed8407be1a365a3f2381632811e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/41816c85027bbed8407be1a365a3f2381632811e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/41816c85027bbed8407be1a365a3f2381632811e"}],"stats":{"total":37,"additions":17,"deletions":20},"files":[{"sha":"47a892ad5f8229569df50e0b4d3d3a2b967e634b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":17,"deletions":20,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/295f0e95c87f992978841f9fd68627c95fe805a4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/295f0e95c87f992978841f9fd68627c95fe805a4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=295f0e95c87f992978841f9fd68627c95fe805a4","patch":"@@ -27,7 +27,6 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.ImmutableTriple;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n@@ -72,7 +71,6 @@\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.OperationOptions;\n-import org.identityconnectors.framework.common.objects.ResultsHandler;\n import org.identityconnectors.framework.common.objects.SearchResult;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.identityconnectors.framework.spi.SearchResultsHandler;\n@@ -386,28 +384,27 @@ public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key,\n             options = MappingUtils.buildOperationOptions(mapItems);\n         }\n \n-        final List<ConnObjectTO> connObjects = new ArrayList<>();\n+        List<ConnObjectTO> connObjects = new ArrayList<>();\n+        SearchResult searchResult = connFactory.getConnector(resource).\n+                search(objectClass, null, new SearchResultsHandler() {\n \n-        SearchResult searchResult = connFactory.getConnector(resource).search(\n-                objectClass, null, new SearchResultsHandler() {\n+                    private int count;\n \n-            private int count;\n+                    @Override\n+                    public boolean handle(final ConnectorObject connectorObject) {\n+                        connObjects.add(ConnObjectUtils.getConnObjectTO(connectorObject));\n+                        // safety protection against uncontrolled result size\n+                        count++;\n+                        return count < size;\n+                    }\n \n-            @Override\n-            public boolean handle(final ConnectorObject connectorObject) {\n-                connObjects.add(ConnObjectUtils.getConnObjectTO(connectorObject));\n-                // safety protection against uncontrolled result size\n-                count++;\n-                return count < size;\n-            }\n-\n-            @Override\n-            public void handleResult(final SearchResult sr) {\n-                // do nothing\n-            }\n-        }, size, pagedResultsCookie, orderBy, options);\n+                    @Override\n+                    public void handleResult(final SearchResult sr) {\n+                        // do nothing\n+                    }\n+                }, size, pagedResultsCookie, orderBy, options);\n \n-        return ImmutablePair.of(searchResult, connObjects);\n+        return Pair.of(searchResult, connObjects);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_READ + \"')\")"}]}