{"sha":"959567b4c6b5983827e527d2e46d220c9cd9b23b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk1OTU2N2I0YzZiNTk4MzgyN2U1MjdkMmU0NmQyMjBjOWNkOWIyM2I=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-07-20T09:50:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-07-20T09:50:25Z"},"message":"Remove Curator deprecation warning","tree":{"sha":"4b4c2ec43c786ffa718a828e9b46c86f013ad078","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4b4c2ec43c786ffa718a828e9b46c86f013ad078"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/959567b4c6b5983827e527d2e46d220c9cd9b23b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/959567b4c6b5983827e527d2e46d220c9cd9b23b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/959567b4c6b5983827e527d2e46d220c9cd9b23b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/959567b4c6b5983827e527d2e46d220c9cd9b23b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"92b0b4a79bfcb9ad7691c566a99c8c2a17823d5e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/92b0b4a79bfcb9ad7691c566a99c8c2a17823d5e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/92b0b4a79bfcb9ad7691c566a99c8c2a17823d5e"}],"stats":{"total":28,"additions":15,"deletions":13},"files":[{"sha":"a57b8962608a9b1ada6dd990dbc4ccaae2e03974","filename":"common/keymaster/client-zookeeper/src/main/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperDomainOps.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/959567b4c6b5983827e527d2e46d220c9cd9b23b/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperDomainOps.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/959567b4c6b5983827e527d2e46d220c9cd9b23b/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperDomainOps.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperDomainOps.java?ref=959567b4c6b5983827e527d2e46d220c9cd9b23b","patch":"@@ -25,7 +25,7 @@\n import java.util.Objects;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.curator.framework.CuratorFramework;\n-import org.apache.curator.framework.recipes.cache.TreeCache;\n+import org.apache.curator.framework.recipes.cache.CuratorCache;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.DomainWatcher;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n@@ -61,33 +61,35 @@ public void afterPropertiesSet() throws Exception {\n                 client.create().creatingParentContainersIfNeeded().forPath(buildDomainPath());\n             }\n \n-            new TreeCache(client, buildDomainPath()).start().getListenable().addListener((cf, event) -> {\n-                switch (event.getType()) {\n-                    case NODE_ADDED:\n-                        LOG.debug(\"Domain {} added\", event.getData().getPath());\n+            CuratorCache cache = CuratorCache.build(client, buildDomainPath());\n+            cache.listenable().addListener((type, oldData, newData) -> {\n+                switch (type) {\n+                    case NODE_CREATED:\n+                        LOG.debug(\"Domain {} added\", newData.getPath());\n                         try {\n-                            Domain domain = MAPPER.readValue(event.getData().getData(), Domain.class);\n+                            Domain domain = MAPPER.readValue(newData.getData(), Domain.class);\n \n                             LOG.info(\"Domain {} created\", domain.getKey());\n                             watcher.added(domain);\n                         } catch (IOException e) {\n-                            LOG.debug(\"Could not parse {}\", new String(event.getData().getData()), e);\n+                            LOG.debug(\"Could not parse {}\", new String(newData.getData()), e);\n                         }\n                         break;\n \n-                    case NODE_UPDATED:\n-                        LOG.debug(\"Domain {} update\", event.getData().getPath());\n+                    case NODE_CHANGED:\n+                        LOG.debug(\"Domain {} updated\", newData.getPath());\n                         break;\n \n-                    case NODE_REMOVED:\n-                        LOG.debug(\"Domain {} removed\", event.getData().getPath());\n-                        watcher.removed(StringUtils.substringAfter(event.getData().getPath(), DOMAIN_PATH + '/'));\n+                    case NODE_DELETED:\n+                        LOG.debug(\"Domain {} removed\", newData.getPath());\n+                        watcher.removed(StringUtils.substringAfter(newData.getPath(), DOMAIN_PATH + '/'));\n                         break;\n \n                     default:\n-                        LOG.debug(\"Event {} received\", event);\n+                        LOG.debug(\"Event {} received with data {}\", type, newData);\n                 }\n             });\n+            cache.start();\n         }\n     }\n "}]}