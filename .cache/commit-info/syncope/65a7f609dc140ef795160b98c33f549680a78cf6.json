{"sha":"65a7f609dc140ef795160b98c33f549680a78cf6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY1YTdmNjA5ZGMxNDBlZjc5NTE2MGI5OGMzM2Y1NDk2ODBhNzhjZjY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-25T12:39:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-25T12:39:33Z"},"message":"Update issue 74\n\nImplementation of REST services for approval workflow finished: now it's time to start adapting the console.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247162 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c4efc9a79710593003c66e158675865a5bc88726","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c4efc9a79710593003c66e158675865a5bc88726"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/65a7f609dc140ef795160b98c33f549680a78cf6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65a7f609dc140ef795160b98c33f549680a78cf6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65a7f609dc140ef795160b98c33f549680a78cf6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65a7f609dc140ef795160b98c33f549680a78cf6/comments","author":null,"committer":null,"parents":[{"sha":"b16742e203531b63fc92b968671ec72456aa19b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b16742e203531b63fc92b968671ec72456aa19b6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b16742e203531b63fc92b968671ec72456aa19b6"}],"stats":{"total":1146,"additions":1014,"deletions":132},"files":[{"sha":"bd35f2a805ace52448b7d1a9b86ee4f4f1a8c537","filename":"client/src/main/java/org/syncope/client/to/WorkflowDefinitionTO.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowDefinitionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowDefinitionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowDefinitionTO.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import org.syncope.client.AbstractBaseBean;\n+\n+public class WorkflowDefinitionTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 8803733012885686826L;\n+\n+    private String id;\n+\n+    private String xmlDefinition;\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getXmlDefinition() {\n+        return xmlDefinition;\n+    }\n+\n+    public void setXmlDefinition(String xmlDefinition) {\n+        this.xmlDefinition = xmlDefinition;\n+    }\n+}"},{"sha":"12b973662d15a983c5ac89caf291f82e3c30beb5","filename":"client/src/main/java/org/syncope/client/to/WorkflowFormPropertyTO.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormPropertyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormPropertyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormPropertyTO.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import org.syncope.client.AbstractBaseBean;\n+import org.syncope.types.WorkflowFormPropertyType;\n+\n+public class WorkflowFormPropertyTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = 9139969592634304261L;\n+\n+    private String id;\n+\n+    private String name;\n+\n+    private WorkflowFormPropertyType type;\n+\n+    private String value;\n+\n+    private boolean readable;\n+\n+    private boolean writable;\n+\n+    private boolean required;\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public boolean isReadable() {\n+        return readable;\n+    }\n+\n+    public void setReadable(boolean readable) {\n+        this.readable = readable;\n+    }\n+\n+    public boolean isRequired() {\n+        return required;\n+    }\n+\n+    public void setRequired(boolean required) {\n+        this.required = required;\n+    }\n+\n+    public WorkflowFormPropertyType getType() {\n+        return type;\n+    }\n+\n+    public void setType(WorkflowFormPropertyType type) {\n+        this.type = type;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(String value) {\n+        this.value = value;\n+    }\n+\n+    public boolean isWritable() {\n+        return writable;\n+    }\n+\n+    public void setWritable(boolean writable) {\n+        this.writable = writable;\n+    }\n+}"},{"sha":"2294a82ef0b6fc86c29a83bf3ca486279e189917","filename":"client/src/main/java/org/syncope/client/to/WorkflowFormTO.java","status":"added","additions":147,"deletions":0,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -0,0 +1,147 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.codehaus.jackson.annotate.JsonIgnore;\n+import org.syncope.client.AbstractBaseBean;\n+\n+public class WorkflowFormTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -7044543391316529128L;\n+\n+    private String taskId;\n+\n+    private String key;\n+\n+    private String description;\n+\n+    private Date createTime;\n+\n+    private Date dueDate;\n+\n+    private String assignee;\n+\n+    private String owner;\n+\n+    private List<WorkflowFormPropertyTO> properties;\n+\n+    public WorkflowFormTO() {\n+        properties = new ArrayList<WorkflowFormPropertyTO>();\n+    }\n+\n+    public String getTaskId() {\n+        return taskId;\n+    }\n+\n+    public void setTaskId(String taskId) {\n+        this.taskId = taskId;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(String key) {\n+        this.key = key;\n+    }\n+\n+    public String getAssignee() {\n+        return assignee;\n+    }\n+\n+    public void setAssignee(String assignee) {\n+        this.assignee = assignee;\n+    }\n+\n+    public Date getCreateTime() {\n+        return createTime;\n+    }\n+\n+    public void setCreateTime(Date createTime) {\n+        this.createTime = createTime;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public Date getDueDate() {\n+        return dueDate;\n+    }\n+\n+    public void setDueDate(Date dueDate) {\n+        this.dueDate = dueDate;\n+    }\n+\n+    public String getOwner() {\n+        return owner;\n+    }\n+\n+    public void setOwner(String owner) {\n+        this.owner = owner;\n+    }\n+\n+    public List<WorkflowFormPropertyTO> getProperties() {\n+        return properties;\n+    }\n+\n+    public boolean addProperty(final WorkflowFormPropertyTO property) {\n+        return properties.contains(property)\n+                ? true : properties.add(property);\n+    }\n+\n+    public boolean removeProperty(final WorkflowFormPropertyTO property) {\n+        return properties.remove(property);\n+    }\n+\n+    public void setProperties(final List<WorkflowFormPropertyTO> properties) {\n+        if (properties == null) {\n+            this.properties.clear();\n+        } else {\n+            this.properties = properties;\n+        }\n+    }\n+\n+    @JsonIgnore\n+    public Map<String, WorkflowFormPropertyTO> getPropertiesAsMap() {\n+        Map<String, WorkflowFormPropertyTO> props =\n+                new HashMap<String, WorkflowFormPropertyTO>();\n+        for (WorkflowFormPropertyTO prop : getProperties()) {\n+            props.put(prop.getId(), prop);\n+        }\n+\n+        return props;\n+    }\n+\n+    @JsonIgnore\n+    public Map<String, String> getPropertiesForSubmit() {\n+        Map<String, String> props = new HashMap<String, String>();\n+        for (WorkflowFormPropertyTO prop : getProperties()) {\n+            if (prop.isWritable()) {\n+                props.put(prop.getId(), prop.getValue());\n+            }\n+        }\n+\n+        return props;\n+    }\n+}"},{"sha":"66ea74c414f91570c59df3f68371b1089a45a4b6","filename":"client/src/main/java/org/syncope/types/WorkflowFormPropertyType.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FWorkflowFormPropertyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FWorkflowFormPropertyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FWorkflowFormPropertyType.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -0,0 +1,24 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.types;\n+\n+public enum WorkflowFormPropertyType {\n+\n+    String,\n+    Long,\n+    Enum,\n+    Date,\n+    Boolean\n+\n+}"},{"sha":"dc0625f6d20da8bc102d401d3a04a67619510727","filename":"core/pom.xml","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -157,6 +157,11 @@\n             <artifactId>ehcache-core</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.codehaus.groovy</groupId>\n+            <artifactId>groovy-all</artifactId>\n+        </dependency>\n+            \n         <dependency>\n             <groupId>org.dbunit</groupId>\n             <artifactId>dbunit</artifactId>\n@@ -635,9 +640,8 @@\n         <profile>\n             <id>dev</id>\n             <properties>\n-                <maven.test.skip>false</maven.test.skip>\n                 <waitForCheck>true</waitForCheck>\n-                <sureExcludes>nothingToExclude</sureExcludes>\n+                <sureExcludes>**</sureExcludes>\n             </properties>\n             <dependencies>\n                 <dependency>"},{"sha":"3eb7b919c4ccb7a1ddc9955afa72cc1fdbafc041","filename":"core/src/main/java/org/syncope/core/init/ActivitiWorkflowLoader.java","status":"modified","additions":25,"deletions":14,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -15,39 +15,50 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.List;\n import org.activiti.engine.RepositoryService;\n+import org.activiti.engine.repository.ProcessDefinition;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n \n @Component\n public class ActivitiWorkflowLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(\n             ActivitiWorkflowLoader.class);\n \n-    private static final String WF_DEF_NAME = \"userWorkflow.bpmn20.xml\";\n-\n     @Autowired\n     private RepositoryService repositoryService;\n \n     public void load() {\n-        InputStream wfDefinitionStream = null;\n-        try {\n-            wfDefinitionStream = getClass().getResourceAsStream(\"/\"\n-                    + WF_DEF_NAME);\n+        List<ProcessDefinition> processes = repositoryService.\n+                createProcessDefinitionQuery().processDefinitionKey(\n+                ActivitiUserWorkflowAdapter.WF_PROCESS_ID).list();\n+        LOG.debug(ActivitiUserWorkflowAdapter.WF_PROCESS_ID\n+                + \" Activiti processes in repository: {}\", processes);\n \n-            repositoryService.createDeployment().\n-                    addInputStream(WF_DEF_NAME, wfDefinitionStream).deploy();\n-        } finally {\n+        // Only loads process definition from file if not found in repository\n+        if (processes.isEmpty()) {\n+            InputStream wfDefinitionStream = null;\n             try {\n-                if (wfDefinitionStream != null) {\n-                    wfDefinitionStream.close();\n+                wfDefinitionStream = getClass().getResourceAsStream(\"/\"\n+                        + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE);\n+\n+                repositoryService.createDeployment().addInputStream(\n+                        ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n+                        wfDefinitionStream).deploy();\n+            } finally {\n+                try {\n+                    if (wfDefinitionStream != null) {\n+                        wfDefinitionStream.close();\n+                    }\n+                } catch (IOException e) {\n+                    LOG.error(\"While closing input stream for {}\",\n+                            ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n                 }\n-            } catch (IOException e) {\n-                LOG.error(\"While closing input stream for \"\n-                        + \"user workflow definition\", e);\n             }\n         }\n     }"},{"sha":"7fd92433837fbddab2854a68fe1273a04e3745df","filename":"core/src/main/java/org/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -29,8 +29,6 @@\n public class SpringContextInitializer implements ServletContextAware,\n         BeanFactoryAware, InitializingBean {\n \n-    private static Boolean DONE = false;\n-\n     @Autowired\n     private ConnInstanceLoader connInstanceLoader;\n \n@@ -56,14 +54,6 @@ public void setBeanFactory(final BeanFactory beanFactory)\n     public void afterPropertiesSet()\n             throws Exception {\n \n-        synchronized (SpringContextInitializer.class) {\n-            if (!DONE) {\n-                DONE = true;\n-            } else {\n-                return;\n-            }\n-        }\n-\n         contentLoader.load();\n         connInstanceLoader.load();\n         jobInstanceLoader.load();"},{"sha":"9ef6c373e4a2a5be698d48d3c42d266acfabd82e","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":111,"deletions":21,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -35,12 +35,15 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.web.servlet.ModelAndView;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.search.NodeCond;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.dao.UserSearchDAO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n@@ -100,9 +103,7 @@ public ModelAndView verifyPassword(@PathVariable(\"userId\") Long userId,\n     @PreAuthorize(\"hasRole('TASK_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/count\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public ModelAndView count() {\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n                 EntitlementUtil.getOwnedEntitlementNames());\n@@ -113,9 +114,7 @@ public ModelAndView count() {\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search/count\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -134,9 +133,7 @@ public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> list() {\n         List<SyncopeUser> users = userDAO.findAll(EntitlementUtil.getRoleIds(\n                 EntitlementUtil.getOwnedEntitlementNames()));\n@@ -151,9 +148,7 @@ public List<UserTO> list() {\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list/{page}/{size}\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> list(\n             @PathVariable(\"page\") final int page,\n             @PathVariable(\"size\") final int size) {\n@@ -173,9 +168,7 @@ public List<UserTO> list(\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/read/{userId}\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public UserTO read(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n@@ -187,9 +180,7 @@ public UserTO read(@PathVariable(\"userId\") final Long userId)\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -214,9 +205,7 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/search/{page}/{size}\")\n-    @Transactional(readOnly = true, rollbackFor = {\n-        Throwable.class\n-    })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> search(\n             @RequestBody final NodeCond searchCondition,\n             @PathVariable(\"page\") final int page,\n@@ -387,4 +376,105 @@ public void delete(@PathVariable(\"userId\") final Long userId)\n \n         LOG.debug(\"User successfully deleted: {}\", userId);\n     }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/execute/workflow/{taskId}\")\n+    public UserTO executeWorkflow(@RequestBody final UserTO userTO,\n+            @PathVariable(\"taskId\") final String taskId)\n+            throws WorkflowException, NotFoundException,\n+            UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to execute {} on {}\", taskId, userTO.getId());\n+\n+        Long updatedId = wfAdapter.execute(userTO, taskId);\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updatedId, null, null, null, null, null);\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+\n+        LOG.debug(\"About to return updated user\\n{}\", savedTO);\n+\n+        return savedTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/workflow/definition\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException {\n+\n+        return wfAdapter.getDefinition();\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_DEF_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/workflow/definition\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public void updateDefinition(\n+            @RequestBody final WorkflowDefinitionTO definition)\n+            throws NotFoundException, WorkflowException {\n+\n+        wfAdapter.updateDefinition(definition);\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_FORM_LIST')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/workflow/form/list\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public List<WorkflowFormTO> getForms() {\n+        return wfAdapter.getForms();\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_FORM_READ') and hasRole('USER_READ')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/workflow/form/{userId}\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public WorkflowFormTO getFormForUser(\n+            @PathVariable(\"userId\") final Long userId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        SyncopeUser user = dataBinder.getUserFromId(userId);\n+        return wfAdapter.getForm(user.getWorkflowId());\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_FORM_CLAIM')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/workflow/form/claim/{taskId}\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public WorkflowFormTO claimForm(@PathVariable(\"taskId\") final String taskId)\n+            throws NotFoundException, WorkflowException {\n+\n+        return wfAdapter.claimForm(taskId,\n+                SecurityContextHolder.getContext().\n+                getAuthentication().getName());\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_FORM_SUBMIT')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/workflow/form/submit\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n+            throws NotFoundException, WorkflowException, PropagationException {\n+\n+        LOG.debug(\"About to process form {}\", form);\n+\n+        Long updatedId = wfAdapter.submitForm(form,\n+                SecurityContextHolder.getContext().\n+                getAuthentication().getName());\n+\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n+                updatedId, null, null, null, Boolean.TRUE, null);\n+        propagationManager.execute(tasks);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+\n+        LOG.debug(\"About to return user after form processing\\n{}\", savedTO);\n+\n+        return savedTO;\n+    }\n }"},{"sha":"1954d8e95393c9b677b5593e6e1add41000ef3c5","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -66,6 +66,9 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n     public SyncopeUser getUserFromId(final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n+        if (userId == null)\n+            throw new NotFoundException(\"Null user id\");            \n+        \n         SyncopeUser user = userDAO.find(userId);\n         if (user == null) {\n             throw new NotFoundException(\"User \" + userId);"},{"sha":"05a4102f0f99d36b5bab2865ff8d6a791703ae83","filename":"core/src/main/java/org/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -99,7 +99,6 @@ public Authentication authenticate(final Authentication authentication)\n             }\n \n             user = userDAO.find(username);\n-\n             if (user == null) {\n                 throw new UsernameNotFoundException(\n                         \"Could not find user \" + username);"},{"sha":"d4deda463618baf27785c472bda5bdfb629e88b3","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":303,"deletions":10,"changes":313,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -13,27 +13,49 @@\n  */\n package org.syncope.core.workflow;\n \n+import java.io.BufferedReader;\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.io.StringWriter;\n+import java.io.Writer;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import javassist.NotFoundException;\n+import javax.annotation.Resource;\n import org.activiti.engine.ActivitiException;\n+import org.activiti.engine.FormService;\n import org.activiti.engine.IdentityService;\n+import org.activiti.engine.RepositoryService;\n import org.activiti.engine.RuntimeService;\n import org.activiti.engine.TaskService;\n+import org.activiti.engine.form.FormProperty;\n+import org.activiti.engine.form.FormType;\n+import org.activiti.engine.form.TaskFormData;\n import org.activiti.engine.identity.User;\n+import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.commons.lang.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.client.to.WorkflowFormPropertyTO;\n+import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.rest.controller.UnauthorizedRoleException;\n+import org.syncope.types.WorkflowFormPropertyType;\n \n /**\n  * Activiti (http://www.activiti.org/) based implementation.\n@@ -46,6 +68,12 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     private static final Logger LOG =\n             LoggerFactory.getLogger(ActivitiUserWorkflowAdapter.class);\n \n+    private static final String[] PROPERTY_IGNORE_PROPS = {\"type\"};\n+\n+    public static final String WF_PROCESS_ID = \"userWorkflow\";\n+\n+    public static final String WF_PROCESS_RESOURCE = \"userWorkflow.bpmn20.xml\";\n+\n     public static final String SYNCOPE_USER = \"syncopeUser\";\n \n     public static final String USER_TO = \"userTO\";\n@@ -62,6 +90,9 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     public static final String PROPAGATE_ENABLE = \"propagateEnable\";\n \n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n     @Autowired\n     private RuntimeService runtimeService;\n \n@@ -71,11 +102,15 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     @Autowired\n     private IdentityService identityService;\n \n-    private void setStatus(final String processInstanceId,\n-            final SyncopeUser user) {\n+    @Autowired\n+    private FormService formService;\n \n+    @Autowired\n+    private RepositoryService repositoryService;\n+\n+    private void updateStatus(final SyncopeUser user) {\n         List<Task> tasks = taskService.createTaskQuery().processInstanceId(\n-                processInstanceId).list();\n+                user.getWorkflowId()).list();\n         if (tasks.isEmpty() || tasks.size() > 1) {\n             LOG.warn(\"While setting user status: unexpected task number ({})\",\n                     tasks.size());\n@@ -101,11 +136,11 @@ public Map.Entry<Long, Boolean> create(final UserTO userTO)\n \n         SyncopeUser user = (SyncopeUser) runtimeService.getVariable(\n                 processInstance.getProcessInstanceId(), SYNCOPE_USER);\n-        setStatus(processInstance.getProcessInstanceId(), user);\n+        updateStatus(user);\n         user = userDAO.save(user);\n \n         // create and save Activiti user\n-        User activitiUser = identityService.newUser(user.getId().toString());\n+        User activitiUser = identityService.newUser(user.getUsername());\n         identityService.saveUser(activitiUser);\n \n         Boolean enable = (Boolean) runtimeService.getVariable(\n@@ -149,7 +184,7 @@ protected Long doActivate(final SyncopeUser user, final String token)\n \n         doExecuteAction(user, \"activate\",\n                 Collections.singletonMap(TOKEN, (Object) token));\n-        setStatus(user.getWorkflowId(), user);\n+        updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n         return updated.getId();\n@@ -162,7 +197,7 @@ protected Map.Entry<Long, PropagationByResource> doUpdate(\n \n         doExecuteAction(user, \"update\",\n                 Collections.singletonMap(USER_MOD, (Object) userMod));\n-        setStatus(user.getWorkflowId(), user);\n+        updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n         PropagationByResource propByRes =\n@@ -177,7 +212,7 @@ protected Long doSuspend(final SyncopeUser user)\n             throws WorkflowException {\n \n         doExecuteAction(user, \"suspend\", null);\n-        setStatus(user.getWorkflowId(), user);\n+        updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n         return updated.getId();\n@@ -188,7 +223,7 @@ protected Long doReactivate(final SyncopeUser user)\n             throws WorkflowException {\n \n         doExecuteAction(user, \"reactivate\", null);\n-        setStatus(user.getWorkflowId(), user);\n+        updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n         return updated.getId();\n@@ -201,6 +236,264 @@ protected void doDelete(final SyncopeUser user)\n         doExecuteAction(user, \"delete\", null);\n         userDAO.delete(user);\n \n-        identityService.deleteUser(user.getId().toString());\n+        identityService.deleteUser(user.getUsername());\n+    }\n+\n+    @Override\n+    public Long execute(final UserTO userTO, final String actionId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        SyncopeUser user = dataBinder.getUserFromId(userTO.getId());\n+\n+        final Map<String, Object> variables = new HashMap<String, Object>();\n+        variables.put(USER_TO, userTO);\n+\n+        doExecuteAction(user, actionId, variables);\n+        updateStatus(user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        return updated.getId();\n+    }\n+\n+    @Override\n+    public WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException {\n+\n+        ProcessDefinition procDef;\n+        try {\n+            procDef = repositoryService.createProcessDefinitionQuery().\n+                    processDefinitionKey(\n+                    ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().\n+                    singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        InputStream is = repositoryService.getResourceAsStream(\n+                procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n+\n+        Writer writer = new StringWriter();\n+\n+        char[] buffer = new char[1024];\n+        try {\n+            Reader reader = new BufferedReader(new InputStreamReader(is));\n+            int n;\n+            while ((n = reader.read(buffer)) != -1) {\n+                writer.write(buffer, 0, n);\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"While reading workflow definition {}\",\n+                    procDef.getKey(), e);\n+        } finally {\n+            try {\n+                is.close();\n+            } catch (IOException ioe) {\n+                LOG.error(\"While closing input stream for {}\",\n+                        procDef.getKey(), ioe);\n+            }\n+        }\n+\n+        WorkflowDefinitionTO definitionTO = new WorkflowDefinitionTO();\n+        definitionTO.setId(ActivitiUserWorkflowAdapter.WF_PROCESS_ID);\n+        definitionTO.setXmlDefinition(writer.toString());\n+\n+        return definitionTO;\n+    }\n+\n+    @Override\n+    public void updateDefinition(\n+            final WorkflowDefinitionTO definition)\n+            throws NotFoundException, WorkflowException {\n+\n+        if (!ActivitiUserWorkflowAdapter.WF_PROCESS_ID.equals(\n+                definition.getId())) {\n+\n+            throw new NotFoundException(\"Workflow process id \"\n+                    + definition.getId());\n+        }\n+\n+        try {\n+            repositoryService.createDeployment().addInputStream(\n+                    ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n+                    new ByteArrayInputStream(\n+                    definition.getXmlDefinition().getBytes())).deploy();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+    }\n+\n+    private WorkflowFormPropertyType fromActivitiFormType(\n+            final FormType activitiFormType) {\n+\n+        WorkflowFormPropertyType result = WorkflowFormPropertyType.String;\n+\n+        if (\"string\".equals(activitiFormType.getName())) {\n+            result = WorkflowFormPropertyType.String;\n+        }\n+        if (\"long\".equals(activitiFormType.getName())) {\n+            result = WorkflowFormPropertyType.Long;\n+        }\n+        if (\"enum\".equals(activitiFormType.getName())) {\n+            result = WorkflowFormPropertyType.Enum;\n+        }\n+        if (\"date\".equals(activitiFormType.getName())) {\n+            result = WorkflowFormPropertyType.Date;\n+        }\n+        if (\"boolean\".equals(activitiFormType.getName())) {\n+            result = WorkflowFormPropertyType.Boolean;\n+        }\n+\n+        return result;\n+    }\n+\n+    private WorkflowFormTO getFormTO(final Task task,\n+            final TaskFormData formData) {\n+\n+        WorkflowFormTO formTO = new WorkflowFormTO();\n+        formTO.setTaskId(task.getId());\n+        formTO.setKey(formData.getFormKey());\n+\n+        BeanUtils.copyProperties(task, formTO);\n+\n+        WorkflowFormPropertyTO propertyTO;\n+        for (FormProperty fProp : formData.getFormProperties()) {\n+            propertyTO = new WorkflowFormPropertyTO();\n+            BeanUtils.copyProperties(fProp, propertyTO,\n+                    PROPERTY_IGNORE_PROPS);\n+            propertyTO.setType(fromActivitiFormType(fProp.getType()));\n+\n+            formTO.addProperty(propertyTO);\n+        }\n+\n+        return formTO;\n+    }\n+\n+    @Override\n+    public List<WorkflowFormTO> getForms() {\n+        List<WorkflowFormTO> forms = new ArrayList<WorkflowFormTO>();\n+\n+        TaskFormData formData;\n+        for (Task task : taskService.createTaskQuery().list()) {\n+            try {\n+                formData = formService.getTaskFormData(task.getId());\n+            } catch (ActivitiException e) {\n+                LOG.debug(\"No form found for task {}\", task.getId(), e);\n+                formData = null;\n+            }\n+\n+            if (formData != null && !formData.getFormProperties().isEmpty()) {\n+                forms.add(getFormTO(task, formData));\n+            }\n+        }\n+\n+        return forms;\n+    }\n+\n+    private Map.Entry<Task, TaskFormData> checkTask(final String taskId,\n+            final String userName)\n+            throws NotFoundException {\n+\n+        Task task;\n+        try {\n+            task = taskService.createTaskQuery().taskId(taskId).singleResult();\n+        } catch (ActivitiException e) {\n+            throw new NotFoundException(\"Activiti Task \" + taskId, e);\n+        }\n+\n+        TaskFormData formData;\n+        try {\n+            formData = formService.getTaskFormData(task.getId());\n+        } catch (ActivitiException e) {\n+            throw new NotFoundException(\"Form for Activiti Task \" + taskId, e);\n+        }\n+\n+        if (!adminUser.equals(userName)) {\n+            SyncopeUser user = userDAO.find(userName);\n+            if (user == null) {\n+                throw new NotFoundException(\"Syncope User \" + userName);\n+            }\n+        }\n+\n+        return new DefaultMapEntry(task, formData);\n+    }\n+\n+    @Override\n+    public WorkflowFormTO getForm(final String workflowId)\n+            throws NotFoundException, WorkflowException {\n+\n+        Task task;\n+        try {\n+            task = taskService.createTaskQuery().processInstanceId(workflowId).\n+                    singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        TaskFormData formData;\n+        try {\n+            formData = formService.getTaskFormData(task.getId());\n+        } catch (ActivitiException e) {\n+            LOG.debug(\"No form found for task {}\", task.getId(), e);\n+            formData = null;\n+        }\n+\n+        WorkflowFormTO result = null;\n+        if (formData != null && !formData.getFormProperties().isEmpty()) {\n+            result = getFormTO(task, formData);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId,\n+            final String userName)\n+            throws NotFoundException, WorkflowException {\n+\n+        Map.Entry<Task, TaskFormData> checked = checkTask(taskId, userName);\n+        Task task;\n+        try {\n+            taskService.setOwner(taskId, userName);\n+            task = taskService.createTaskQuery().taskId(taskId).singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        return getFormTO(task, checked.getValue());\n+    }\n+\n+    @Override\n+    public Long submitForm(final WorkflowFormTO form, final String userName)\n+            throws NotFoundException, WorkflowException {\n+\n+        Map.Entry<Task, TaskFormData> checked =\n+                checkTask(form.getTaskId(), userName);\n+\n+        if (!checked.getKey().getOwner().equals(userName)) {\n+            throw new WorkflowException(new RuntimeException(\n+                    \"Task \" + form.getTaskId() + \" assigned to \"\n+                    + checked.getKey().getOwner() + \" but summited by \"\n+                    + userName));\n+        }\n+\n+        try {\n+            formService.submitTaskFormData(form.getTaskId(),\n+                    form.getPropertiesForSubmit());\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        SyncopeUser user = userDAO.findByWorkflowId(\n+                checked.getKey().getProcessInstanceId());\n+        if (user == null) {\n+            throw new NotFoundException(\"User with workflow id \"\n+                    + checked.getKey().getProcessInstanceId());\n+        }\n+\n+        updateStatus(user);\n+        SyncopeUser updated = userDAO.save(user);\n+\n+        return updated.getId();\n     }\n }"},{"sha":"727330c4652a850a8c123f64f7504ba89421b823","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -13,13 +13,19 @@\n  */\n package org.syncope.core.workflow;\n \n+import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n+import javassist.NotFoundException;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n /**\n  * Simple implementation basically not involving any workflow engine.\n@@ -95,4 +101,56 @@ protected void doDelete(final SyncopeUser user)\n \n         userDAO.delete(user);\n     }\n+\n+    @Override\n+    public Long execute(final UserTO userTO, final String actionId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException {\n+\n+        throw new WorkflowException(\n+                new UnsupportedOperationException(\"Not supported.\"));\n+    }\n+\n+    @Override\n+    public WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException {\n+\n+        return new WorkflowDefinitionTO();\n+    }\n+\n+    @Override\n+    public void updateDefinition(WorkflowDefinitionTO definition)\n+            throws NotFoundException, WorkflowException {\n+\n+        throw new WorkflowException(\n+                new UnsupportedOperationException(\"Not supported.\"));\n+    }\n+\n+    @Override\n+    public List<WorkflowFormTO> getForms() {\n+        return Collections.EMPTY_LIST;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO getForm(String workflowId)\n+            throws NotFoundException, WorkflowException {\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(String taskId, String userName)\n+            throws NotFoundException, WorkflowException {\n+\n+        throw new WorkflowException(\n+                new UnsupportedOperationException(\"Not supported.\"));\n+    }\n+\n+    @Override\n+    public Long submitForm(WorkflowFormTO form, String userName)\n+            throws NotFoundException, WorkflowException {\n+\n+        throw new WorkflowException(\n+                new UnsupportedOperationException(\"Not supported.\"));\n+    }\n }"},{"sha":"dc25a7ad0abcdd07a2a248a4ca95ffb86bcd4922","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -13,10 +13,13 @@\n  */\n package org.syncope.core.workflow;\n \n+import java.util.List;\n import java.util.Map;\n import javassist.NotFoundException;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n@@ -36,6 +39,20 @@ public interface UserWorkflowAdapter {\n     Map.Entry<Long, Boolean> create(UserTO userTO)\n             throws UnauthorizedRoleException, WorkflowException;\n \n+    /**\n+     * Execute a task on an user.\n+     *\n+     * @param userTO user to be subject to action\n+     * @param actionId to be verified for activation\n+     * @return user just updated\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws NotFoundException user not found exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    Long execute(UserTO userTO, String actionId)\n+            throws UnauthorizedRoleException, NotFoundException,\n+            WorkflowException;\n+\n     /**\n      * Activate an user.\n      *\n@@ -100,4 +117,65 @@ Long reactivate(Long userId)\n     void delete(Long userId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n+\n+    /**\n+     * Get workflow definition.\n+     *\n+     * @return workflow definition as XML\n+     * @throws WorkflowException workflow exception\n+     */\n+    WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException;\n+\n+    /**\n+     * Update workflow definition.\n+     *\n+     * @param definition definition as XML\n+     * @throws NotFoundException definition not found exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    void updateDefinition(WorkflowDefinitionTO definition)\n+            throws NotFoundException, WorkflowException;\n+\n+    /**\n+     * Get all defined forms for current workflow process instances.\n+     *\n+     * @return list of defined forms \n+     */\n+    List<WorkflowFormTO> getForms();\n+\n+    /**\n+     * Get form for given workflowId (if present).\n+     *\n+     * @param workflowId workflow id\n+     * @return form (if present), otherwise null\n+     * @throws NotFoundException definition not found exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    WorkflowFormTO getForm(String workflowId)\n+            throws NotFoundException, WorkflowException;\n+\n+    /**\n+     * Claim a form for a given user.\n+     *\n+     * @param taskId Workflow task to which the form is associated\n+     * @param userName claiming username\n+     * @return updated form\n+     * @throws NotFoundException not found exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    WorkflowFormTO claimForm(String taskId, String userName)\n+            throws NotFoundException, WorkflowException;\n+\n+    /**\n+     * Submit a form.\n+     *\n+     * @param form to be submitted\n+     * @param userName submitting username\n+     * @return user updated by this form submit\n+     * @throws NotFoundException not found exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    Long submitForm(WorkflowFormTO form, String userName)\n+            throws NotFoundException, WorkflowException;\n }"},{"sha":"97c669c2d4d3e6e4757daf168a9f83be2804ca9f","filename":"core/src/main/resources/content.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -84,5 +84,11 @@\n     <Entitlement name=\"POLICY_READ\"/>\n     <Entitlement name=\"POLICY_UPDATE\"/>\n     <Entitlement name=\"POLICY_DELETE\"/>\n+    <Entitlement name=\"WORKFLOW_DEF_READ\"/>\n+    <Entitlement name=\"WORKFLOW_DEF_UPDATE\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_LIST\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_READ\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_CLAIM\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_SUBMIT\"/>\n \n </dataset>"},{"sha":"e7b412f0b1b3254dc01c12a4d94ef54b7d64a33c","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":43,"deletions":3,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -32,13 +32,39 @@\n       \n         <serviceTask id=\"create\" name=\"Create\" activiti:class=\"org.syncope.core.workflow.activiti.Create\"/>\n \n-        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"activate\"/>\n+        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"createGW\"/>\n+        \n+        <exclusiveGateway id=\"createGW\"/>\n+        <sequenceFlow id=\"create2Activate\" sourceRef=\"createGW\" targetRef=\"activate\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${!syncopeUser.getRoleIds().contains(9)}</conditionExpression>\n+        </sequenceFlow>\n+        <sequenceFlow id=\"create2CreateApproval\" sourceRef=\"createGW\" targetRef=\"createApproval\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${syncopeUser.getRoleIds().contains(9)}</conditionExpression>\n+        </sequenceFlow>\n+        \n+        <userTask id=\"createApproval\" activiti:formKey=\"createApproval\" name=\"Create approval\">\n+            <extensionElements>\n+                <activiti:formProperty id=\"username\" name=\"Username\" type=\"string\" writable=\"false\" expression=\"${syncopeUser.username}\"/>\n+                <activiti:formProperty id=\"approve\" variable=\"approve\" name=\"Approve?\" type=\"boolean\" required=\"true\"/>\n+                <activiti:formProperty id=\"rejectReason\" variable=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\"/>\n+            </extensionElements>\n+        </userTask>\n+\n+        <sequenceFlow id=\"flow3\" sourceRef=\"createApproval\" targetRef=\"createApprovalGW\"/>\n+        \n+        <exclusiveGateway id=\"createApprovalGW\"/>\n+        <sequenceFlow id=\"createApproval2Activate\" sourceRef=\"createApprovalGW\" targetRef=\"activate\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${approve}</conditionExpression>\n+        </sequenceFlow>\n+        <sequenceFlow id=\"createApproval2Reject\" sourceRef=\"createApprovalGW\" targetRef=\"reject\">\n+            <conditionExpression xsi:type=\"tFormalExpression\">${!approve}</conditionExpression>\n+        </sequenceFlow>\n         \n         <!-- Comment the following lines and uncomment the lines below in order\n              to enable opt-in. -->\n         <serviceTask id=\"activate\" name=\"Activate\" activiti:class=\"org.syncope.core.workflow.activiti.AutoActivate\"/>\n \n-        <sequenceFlow id=\"flow3\" sourceRef=\"activate\" targetRef=\"active\"/>\n+        <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"/>\n \n         <!-- Uncomment the following lines and comment the above line in order\n              to enable opt-in.\n@@ -121,11 +147,25 @@\n         <serviceTask id=\"reactivate\" name =\"Reactivate\" activiti:class=\"org.syncope.core.workflow.activiti.Reactivate\"/>\n \n         <sequenceFlow id=\"flow11\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n+        \n+        <!-- Reject an user -->\n+        <scriptTask id=\"reject\" name=\"Reject\" scriptFormat=\"groovy\">\n+            <!-- Do something with rejectReason -->\n+            <script>\n+                def scriptVar = rejectReason\n+            </script>\n+        </scriptTask>\n+        \n+        <sequenceFlow id=\"flow12\" sourceRef=\"reject\" targetRef=\"rejected\"/>\n+\n+        <userTask id=\"rejected\" name=\"Rejected\"/>\n+        \n+        <sequenceFlow id=\"flow13\" sourceRef=\"rejected\" targetRef=\"delete\"/>\n \n         <!-- Delete an user (created, active or suspended) -->\n         <serviceTask id=\"delete\" name=\"Delete\" activiti:class=\"org.syncope.core.workflow.activiti.Delete\"/>\n \n-        <sequenceFlow id=\"flow12\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n+        <sequenceFlow id=\"flow99\" sourceRef=\"delete\" targetRef=\"theEnd\"/>\n \n         <endEvent id=\"theEnd\"/>\n       "},{"sha":"9a645de804ca1f05c5a65f56deb9a0989005bb76","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -17,6 +17,10 @@\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans   \n                            http://www.springframework.org/schema/beans/spring-beans.xsd\">\n     \n+    <bean id=\"adminUser\" class=\"java.lang.String\">\n+        <constructor-arg value=\"${adminUser}\"/>\n+    </bean>\n+    \n     <bean id=\"wfAdapter\" class=\"${wfAdapter}\"/>\n \n     <bean id=\"processEngineConfiguration\" class=\"org.activiti.spring.SpringProcessEngineConfiguration\">"},{"sha":"5c8c523b75b7041796696f3bd22fc9bb285ad232","filename":"core/src/main/webapp/WEB-INF/sun-web.xml","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b16742e203531b63fc92b968671ec72456aa19b6/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsun-web.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b16742e203531b63fc92b968671ec72456aa19b6/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsun-web.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsun-web.xml?ref=b16742e203531b63fc92b968671ec72456aa19b6","patch":"@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE sun-web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Application Server 9.0 Servlet 2.5//EN\" \"http://www.sun.com/software/appserver/dtds/sun-web-app_2_5-0.dtd\">\n-<!--\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<sun-web-app error-url=\"\">\n-  <context-root>/syncope</context-root>\n-  <resource-ref>\n-    <res-ref-name>jdbc/syncopeDataSource</res-ref-name>\n-    <jndi-name>jdbc/syncopeDataSource</jndi-name>\n-  </resource-ref>\n-  <class-loader delegate=\"false\"/>\n-</sun-web-app>"},{"sha":"3b039ae6da21f5e943b13ce28da42ea9238de20b","filename":"core/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -34,7 +34,7 @@\n         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n         <init-param>\n             <param-name>contextConfigLocation</param-name>\n-            <param-value>classpath:*Context.xml</param-value>\n+            <param-value></param-value>\n         </init-param>\n \n         <load-on-startup>1</load-on-startup>\n@@ -84,10 +84,11 @@\n         <location>/syncopeClientError.jsp</location>\n     </error-page>\n     \n-    <resource-ref>\n+    <!-- Uncomment this when using JNDI DataSource -->\n+    <!--<resource-ref>\n         <res-ref-name>jdbc/syncopeDataSource</res-ref-name>\n-        <res-type>javax.sql.XADataSource</res-type>\n+        <res-type>javax.sql.DataSource</res-type>\n         <res-auth>Container</res-auth>\n-    </resource-ref>\n+    </resource-ref>-->\n \n </web-app>"},{"sha":"a7beb99bf57adb99f243ea097b144a4f1673b9d3","filename":"core/src/test/java/org/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -34,9 +34,9 @@ public class EntitlementTest extends AbstractTest {\n     @Test\n     public final void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n-        // 41 real entitlements + 8 role entitlements\n+        // 53 real entitlements + 9 role entitlements\n         assertEquals(\"did not get expected number of entitlements \",\n-                55, list.size());\n+                62, list.size());\n     }\n \n     @Test"},{"sha":"3c5e2f2ed33d4cba570551d231efb2d2dfe41d3f","filename":"core/src/test/java/org/syncope/core/persistence/dao/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -37,7 +37,7 @@ public class RoleTest extends AbstractTest {\n     @Test\n     public final void findAll() {\n         List<SyncopeRole> list = roleDAO.findAll();\n-        assertEquals(\"did not get expected number of roles \", 8, list.size());\n+        assertEquals(\"did not get expected number of roles \", 9, list.size());\n     }\n \n     @Test"},{"sha":"df6b365f47197bd73053b2e108d5b8c3b3fe6648","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -23,6 +23,7 @@\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n@@ -40,6 +41,8 @@\n import org.syncope.client.to.PolicyTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.to.WorkflowFormPropertyTO;\n+import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -614,6 +617,50 @@ public final void createWithRequiredValueMissing() {\n                 SyncopeClientExceptionType.RequiredValuesMissing));\n     }\n \n+    @Test\n+    public final void createWithApproval() {\n+        UserTO userTO = getSampleTO(\"createWithApproval@syncope-idm.org\");\n+\n+        // User with role 9 are defined in workflow as subject to approval\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(9);\n+        userTO.addMembership(membershipTO);\n+\n+        // 1. create user with role 9\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n+                userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getMemberships().size());\n+        assertEquals(9, userTO.getMemberships().get(0).getRoleId());\n+        assertEquals(\"createApproval\", userTO.getStatus());\n+\n+        // 2. request if there is any pending task for user just created\n+        WorkflowFormTO form = restTemplate.getForObject(\n+                BASE_URL + \"user/workflow/form/{userId}\",\n+                WorkflowFormTO.class, userTO.getId());\n+        assertNotNull(form);\n+        assertNotNull(form.getTaskId());\n+        assertNull(form.getOwner());\n+\n+        // 3. claim task for currently authenticated user (admin)\n+        form = restTemplate.getForObject(\n+                BASE_URL + \"user/workflow/form/claim/{taskId}\",\n+                WorkflowFormTO.class, form.getTaskId());\n+        assertNotNull(form);\n+        assertNotNull(form.getTaskId());\n+        assertNotNull(form.getOwner());\n+\n+        // 4. reject user\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertiesAsMap();\n+        props.get(\"approve\").setValue(Boolean.FALSE.toString());\n+        props.get(\"rejectReason\").setValue(\"I don't like him.\");\n+        userTO = restTemplate.postForObject(\n+                BASE_URL + \"user/workflow/form/submit\",\n+                form, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(\"rejected\", userTO.getStatus());\n+    }\n+\n     @Test\n     public final void delete() {\n         try {"},{"sha":"8a7a0038c79abe1177c9bc0a01d30c7614538365","filename":"core/src/test/resources/content.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -43,22 +43,20 @@\n     <SyncopeRole id=\"3\" name=\"citizen\"/>\n     <SyncopeRole id=\"4\" name=\"employee\" parent_id=\"3\"/>\n     <SyncopeRole id=\"5\" name=\"secretary\" parent_id=\"4\"/>\n-\n     <SyncopeRole id=\"6\"\n                  name=\"director\" parent_id=\"4\"\n                  inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n                  inheritPasswordPolicy=\"0\" inheritAccountPolicy=\"0\"\n                  passwordPolicy_id=\"4\"/>\n-\n     <SyncopeRole id=\"7\"\n                  name=\"managingDirector\" parent_id=\"6\"\n                  inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n                  inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\"/>\n-\n     <SyncopeRole id=\"8\"\n                  name=\"otherchild\" parent_id=\"1\"\n                  inheritVirtualAttributes=\"1\"\n                  passwordPolicy_id=\"4\"/>\n+    <SyncopeRole id=\"9\" name=\"roleForWorkflowApproval\" parent_id=\"1\"/>\n \n     <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n     <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n@@ -463,6 +461,12 @@\n     <Entitlement name=\"POLICY_READ\"/>\n     <Entitlement name=\"POLICY_UPDATE\"/>\n     <Entitlement name=\"POLICY_DELETE\"/>\n+    <Entitlement name=\"WORKFLOW_DEF_READ\"/>\n+    <Entitlement name=\"WORKFLOW_DEF_UPDATE\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_LIST\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_READ\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_CLAIM\"/>\n+    <Entitlement name=\"WORKFLOW_FORM_SUBMIT\"/>\n     <Entitlement name=\"ROLE_1\"/>\n     <Entitlement name=\"ROLE_2\"/>\n     <Entitlement name=\"ROLE_3\"/>\n@@ -471,6 +475,7 @@\n     <Entitlement name=\"ROLE_6\"/>\n     <Entitlement name=\"ROLE_7\"/>\n     <Entitlement name=\"ROLE_8\"/>\n+    <Entitlement name=\"ROLE_9\"/>\n \n     <SyncopeRole_Entitlement entitlements_name=\"base\" roles_id=\"1\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"advanced\" roles_id=\"1\"/>"},{"sha":"4caf790b6d7a567e20e47e6551945f10acb84a23","filename":"core/src/test/resources/userWorkflow.bpmn20.xml","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b16742e203531b63fc92b968671ec72456aa19b6/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b16742e203531b63fc92b968671ec72456aa19b6/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FuserWorkflow.bpmn20.xml?ref=b16742e203531b63fc92b968671ec72456aa19b6","patch":"@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<definitions id=\"definitions\"\n-             targetNamespace=\"http://activiti.org/bpmn20\" \n-             xmlns:activiti=\"http://activiti.org/bpmn\"\n-             xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n-             xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\"\n-             xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" \n-             xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n-             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-             xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL \n-                                 http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n-  \n-    <process id=\"userWorkflow\" name=\"User Workflow\">\n-  \n-        <startEvent id=\"theStart\" />\n-    \n-        <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"theEnd\" />\n-      \n-        <endEvent id=\"theEnd\" />\n-      \n-    </process>\n-  \n-</definitions>"},{"sha":"930466085c6fa324cdd29b729f4f7277ec9a4847","filename":"pom.xml","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/65a7f609dc140ef795160b98c33f549680a78cf6/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/65a7f609dc140ef795160b98c33f549680a78cf6/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=65a7f609dc140ef795160b98c33f549680a78cf6","patch":"@@ -89,7 +89,7 @@\n \n         <cxf.version>2.4.2</cxf.version>\n \n-        <activiti.version>5.7</activiti.version>\n+        <activiti.version>5.8</activiti.version>\n \n         <spring.version>3.0.6.RELEASE</spring.version>\n         <jackson.version>1.8.5</jackson.version>\n@@ -101,7 +101,9 @@\n         <hibernate-validator.version>4.2.0.Final</hibernate-validator.version>\n         <ehcache.version>2.4.6</ehcache.version>\n \n-        <wicket.version>1.5.1</wicket.version>\n+        <wicket.version>1.5.2</wicket.version>\n+\n+        <groovy.version>1.8.3</groovy.version>\n \n         <h2.version>1.3.160</h2.version>\n \n@@ -346,6 +348,12 @@\n             </dependency>\n             <!-- /Wicket -->\n \n+            <dependency>\n+                <groupId>org.codehaus.groovy</groupId>\n+                <artifactId>groovy-all</artifactId>\n+                <version>${groovy.version}</version>\n+            </dependency>\n+\n             <dependency>\n                 <groupId>com.h2database</groupId>\n                 <artifactId>h2</artifactId>"}]}