{"sha":"eb780233fed24cad1e02556ddf53ae2557328112","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmViNzgwMjMzZmVkMjRjYWQxZTAyNTU2ZGRmNTNhZTI1NTczMjgxMTI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-15T08:18:02Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-15T08:18:02Z"},"message":"Work done for issue #18: now let's go integration test\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246388 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9f3b55601234054d82a8351fa2d42c8f9de8843f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f3b55601234054d82a8351fa2d42c8f9de8843f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/eb780233fed24cad1e02556ddf53ae2557328112","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb780233fed24cad1e02556ddf53ae2557328112","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb780233fed24cad1e02556ddf53ae2557328112","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb780233fed24cad1e02556ddf53ae2557328112/comments","author":null,"committer":null,"parents":[{"sha":"8870a1fac6527cbabf0ceaf1ae9f84504c317917","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8870a1fac6527cbabf0ceaf1ae9f84504c317917","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8870a1fac6527cbabf0ceaf1ae9f84504c317917"}],"stats":{"total":305,"additions":211,"deletions":94},"files":[{"sha":"371eb3cdb8f4d4e3fb077e1943342b7ed932e356","filename":"core/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -203,11 +203,6 @@\n             <artifactId>spring-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.mortbay.jetty</groupId>\n-            <artifactId>jetty</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.syncope.identityconnectors</groupId>\n             <artifactId>test-common</artifactId>"},{"sha":"7e554607f1afd6464e8da4a04e4529c961cde7e4","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -35,7 +35,7 @@\n import javax.persistence.TemporalType;\n import org.apache.commons.lang.RandomStringUtils;\n import org.bouncycastle.jce.provider.BouncyCastleProvider;\n-import org.syncope.core.persistence.AsymmetricCipher;\n+import org.syncope.core.persistence.security.AsymmetricCipher;\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;"},{"sha":"f4f18b526d3fd3c8e0115e491b7a583635e42d75","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationException.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -0,0 +1,31 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.propagation;\n+\n+public class PropagationException extends Exception {\n+\n+    private String resource;\n+\n+    public PropagationException(String message, String resource,\n+            Throwable cause) {\n+\n+        super(message, cause);\n+        this.resource = resource;\n+    }\n+\n+    public String getResource() {\n+        return resource;\n+    }\n+}"},{"sha":"9695dd0d1e1de5ee39aa036c122a692693f29710","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"renamed","additions":35,"deletions":23,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence;\n+package org.syncope.core.persistence.propagation;\n \n import java.util.Collections;\n import java.util.HashSet;\n@@ -45,8 +45,9 @@ public class PropagationManager {\n      * Exceptions will be ignored.\n      * @param user to be created.\n      * @return a set of provisioned resources.\n+     * @throws PropagationException\n      */\n-    public Set<String> provision(SyncopeUser user) {\n+    public Set<String> provision(SyncopeUser user) throws PropagationException {\n         return provision(user, null, false);\n     }\n \n@@ -59,8 +60,11 @@ public Set<String> provision(SyncopeUser user) {\n      * @param user to be created.\n      * @param synchronous to ask for a synchronous or asynchronous provisioning.\n      * @return a set of provisioned resources.\n+     * @throws PropagationException\n      */\n-    public Set<String> provision(SyncopeUser user, Set<String> synchronous) {\n+    public Set<String> provision(SyncopeUser user, Set<String> synchronous)\n+            throws PropagationException {\n+\n         return provision(user, synchronous, false);\n     }\n \n@@ -69,8 +73,9 @@ public Set<String> provision(SyncopeUser user, Set<String> synchronous) {\n      * Exceptions will be ignored.\n      * @param user to be updated.\n      * @return a set of updated resources.\n+     * @throws PropagationException\n      */\n-    public Set<String> update(SyncopeUser user) {\n+    public Set<String> update(SyncopeUser user) throws PropagationException {\n         return provision(user, null, true);\n     }\n \n@@ -83,8 +88,11 @@ public Set<String> update(SyncopeUser user) {\n      * @param user to be updated.\n      * @param synchronous to ask for a synchronous or asynchronous update.\n      * @return a set of updated resources.\n+     * @throws PropagationException\n      */\n-    public Set<String> update(SyncopeUser user, Set<String> synchronous) {\n+    public Set<String> update(SyncopeUser user, Set<String> synchronous)\n+            throws PropagationException {\n+\n         return provision(user, synchronous, true);\n     }\n \n@@ -94,9 +102,11 @@ public Set<String> update(SyncopeUser user, Set<String> synchronous) {\n      * @param synchronous\n      * @param merge\n      * @return\n+     * @throws PropagationException\n      */\n     private Set<String> provision(\n-            SyncopeUser user, Set<String> synchronous, boolean merge) {\n+            SyncopeUser user, Set<String> synchronous, boolean merge)\n+            throws PropagationException {\n \n         if (synchronous == null) {\n             synchronous = Collections.EMPTY_SET;\n@@ -132,8 +142,8 @@ private Set<String> provision(\n \n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Synchronous provisioning of \" + resources +\n-                    \" with user \" + user.getId());\n+                    \"Synchronous provisioning of \" + resources\n+                    + \" with user \" + user.getId());\n         }\n \n         for (Resource resource : syncResources) {\n@@ -146,20 +156,22 @@ private Set<String> provision(\n \n                 if (log.isErrorEnabled()) {\n                     log.error(\n-                            \"Exception during provision on resource \" +\n-                            resource.getName(), t);\n+                            \"Exception during provision on resource \"\n+                            + resource.getName(), t);\n                 }\n \n-                throw new RuntimeException(t);\n+                throw new PropagationException(\n+                        \"Exception during provision on resource \"\n+                        + resource.getName(), resource.getName(), t);\n             }\n         }\n \n         // asynchronous propagation ...\n-        \n+\n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Asynchronous provisioning of \" + resources +\n-                    \" with user \" + user.getId());\n+                    \"Asynchronous provisioning of \" + resources\n+                    + \" with user \" + user.getId());\n         }\n \n         for (Resource resource : asyncResources) {\n@@ -172,16 +184,16 @@ private Set<String> provision(\n \n                 if (log.isErrorEnabled()) {\n                     log.error(\n-                            \"Exception during provision on resource \" +\n-                            resource.getName(), t);\n+                            \"Exception during provision on resource \"\n+                            + resource.getName(), t);\n                 }\n             }\n         }\n \n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Provisioned \" + provisioned +\n-                    \" with user \" + user.getId());\n+                    \"Provisioned \" + provisioned\n+                    + \" with user \" + user.getId());\n         }\n \n         return provisioned;\n@@ -214,9 +226,9 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n         if (connector == null) {\n             if (log.isErrorEnabled()) {\n \n-                log.error(\"Connector instance bean \" +\n-                        connectorInstance.getId().toString() +\n-                        \" not found\");\n+                log.error(\"Connector instance bean \"\n+                        + connectorInstance.getId().toString()\n+                        + \" not found\");\n \n             }\n \n@@ -267,8 +279,8 @@ private void propagate(SyncopeUser user, Resource resource, boolean merge)\n             if (log.isErrorEnabled()) {\n \n                 log.error(\n-                        \"Error creating user on resource \" +\n-                        resource.getName());\n+                        \"Error creating user on resource \"\n+                        + resource.getName());\n \n             }\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/PropagationManager.java"},{"sha":"5e7928cc70296f632b893d4eae4e06b59d5130af","filename":"core/src/main/java/org/syncope/core/persistence/security/AsymmetricCipher.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fsecurity%2FAsymmetricCipher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fsecurity%2FAsymmetricCipher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fsecurity%2FAsymmetricCipher.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence;\n+package org.syncope.core.persistence.security;\n \n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;","previous_filename":"core/src/main/java/org/syncope/core/persistence/AsymmetricCipher.java"},{"sha":"2011ecd241ade94af7c47fed51c8766a48af7e5f","filename":"core/src/main/java/org/syncope/core/rest/controller/AbstractController.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -24,6 +24,7 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientErrorHandler;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.propagation.PropagationException;\n import org.syncope.types.SyncopeClientExceptionType;\n \n public abstract class AbstractController {\n@@ -97,4 +98,19 @@ protected <T> T throwWorkflowException(WorkflowException we,\n \n         return null;\n     }\n+\n+    protected <T> T throwPropagationException(PropagationException pe,\n+            HttpServletResponse response) throws IOException {\n+\n+        response.setHeader(\n+                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                SyncopeClientExceptionType.Propagation.getHeaderValue());\n+        response.setHeader(\n+                SyncopeClientExceptionType.Propagation.getElementHeaderName(),\n+                pe.getResource());\n+\n+        response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n+\n+        return null;\n+    }\n }"},{"sha":"c1cecef99562bc2de8cece3a3cc729c30ba640a1","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":50,"deletions":2,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -32,20 +32,26 @@\n import org.syncope.client.to.UserTOs;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n+import org.syncope.core.persistence.propagation.PropagationException;\n import org.syncope.core.rest.data.UserDataBinder;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.springframework.http.HttpStatus;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.persistence.dao.SyncopeConfigurationDAO;\n import org.syncope.core.workflow.Constants;\n import org.syncope.core.workflow.SpringHibernateJPAWorkflowStore;\n@@ -66,6 +72,8 @@ public class UserController extends AbstractController {\n     private Workflow userWorkflow;\n     @Autowired(required = false)\n     private SpringHibernateJPAWorkflowStore workflowStore;\n+    @Autowired\n+    private PropagationManager propagationManager;\n \n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n@@ -123,10 +131,23 @@ public UserTO activate(HttpServletResponse response,\n     value = \"/create\")\n     public UserTO create(HttpServletRequest request,\n             HttpServletResponse response,\n-            @RequestBody UserTO userTO) throws IOException {\n+            @RequestBody UserTO userTO,\n+            @RequestParam(value = \"syncRoles\",\n+            required = false) Set<Long> syncRoles,\n+            @RequestParam(value = \"syncResources\",\n+            required = false) Set<String> syncResources)\n+            throws IOException {\n+\n+        if (syncRoles == null) {\n+            syncRoles = Collections.EMPTY_SET;\n+        }\n+        if (syncResources == null) {\n+            syncResources = Collections.EMPTY_SET;\n+        }\n \n         if (log.isDebugEnabled()) {\n-            log.debug(\"create called with parameter \" + userTO);\n+            log.debug(\"create called with parameters \" + userTO\n+                    + \"\\n\" + syncRoles + \"\\n\" + syncResources);\n         }\n \n         WorkflowInitException wie = null;\n@@ -218,6 +239,33 @@ public UserTO create(HttpServletRequest request,\n         }\n         syncopeUser = syncopeUserDAO.save(syncopeUser);\n \n+        // Now that user is created locally, let's propagate\n+        Set<String> synchronous = new HashSet<String>();\n+        for (Resource resource : syncopeUser.getResources()) {\n+            if (syncResources.contains(resource.getName())) {\n+                synchronous.add(resource.getName());\n+            }\n+        }\n+        for (SyncopeRole role : syncopeUser.getRoles()) {\n+            if (syncRoles.contains(role.getId())) {\n+                for (Resource resource : role.getResources()) {\n+                    synchronous.add(resource.getName());\n+                }\n+            }\n+        }\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"About to propagate synchronously on the following \"\n+                    + \"resources \" + synchronous);\n+        }\n+        \n+        try {\n+            propagationManager.provision(syncopeUser, synchronous);\n+        } catch (PropagationException e) {\n+            log.error(\"Propagation exception\", e);\n+\n+            return throwPropagationException(e, response);\n+        }\n+\n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return userDataBinder.getUserTO(syncopeUser);\n     }"},{"sha":"5409553ed64c5d8efa27a61540906255d6980d04","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":24,"deletions":27,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -14,13 +14,12 @@\n  */\n package org.syncope.core.rest.data;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n-import org.apache.commons.lang.ArrayUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n@@ -51,9 +50,6 @@ public class UserDataBinder {\n \n     private static final Logger log = LoggerFactory.getLogger(\n             UserDataBinder.class);\n-    private static final String[] ignoreProperties = {\n-        \"password\", \"passwordKeyPair\", \"attributes\", \"derivedAttributes\",\n-        \"roles\", \"resources\", \"workflowEntryId\"};\n     private SchemaDAO schemaDAO;\n     private AttributeValueDAO attributeValueDAO;\n     private DerivedSchemaDAO derivedSchemaDAO;\n@@ -92,18 +88,14 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         SyncopeClientException invalidDerivedSchemas =\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidDerivedSchemas);\n-        SyncopeClientException invalidRoles = new SyncopeClientException(\n-                SyncopeClientExceptionType.InvalidRoles);\n-        SyncopeClientException invalidResources = new SyncopeClientException(\n-                SyncopeClientExceptionType.InvalidResources);\n \n         SyncopeUser syncopeUser = new SyncopeUser();\n-        BeanUtils.copyProperties(userTO, syncopeUser,\n-                (String[]) ArrayUtils.add(ignoreProperties, \"id\"));\n \n         // 0. password\n         // TODO: check password policies\n-        if (userTO.getPassword() == null || userTO.getPassword().length() == 0) {\n+        if (userTO.getPassword() == null \n+                || userTO.getPassword().length() == 0) {\n+            \n             log.error(\"No password provided\");\n \n             invalidPassword.addElement(\"Null password\");\n@@ -122,7 +114,12 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n \n             // safely ignore invalid schemas from AttributeTO\n             // see http://code.google.com/p/syncope/issues/detail?id=17\n-            if (schema != null) {\n+            if (schema == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Ignoring invalid schema \"\n+                            + attributeTO.getSchema());\n+                }\n+            } else {\n                 attribute = new UserAttribute();\n                 attribute.setSchema(schema);\n                 attribute.setOwner(syncopeUser);\n@@ -166,11 +163,6 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                 if (!attribute.getAttributeValues().isEmpty()) {\n                     syncopeUser.addAttribute(attribute);\n                 }\n-            } else {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Ignoring invalid schema \"\n-                            + attributeTO.getSchema());\n-                }\n             }\n         }\n \n@@ -211,7 +203,9 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             role = syncopeRoleDAO.find(roleId);\n \n             if (role == null) {\n-                invalidRoles.addElement(String.valueOf(roleId));\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Ignoring invalid role \" + roleId);\n+                }\n             } else {\n                 syncopeUser.addRole(role);\n             }\n@@ -223,7 +217,9 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             resource = resourceDAO.find(resourceName);\n \n             if (resource == null) {\n-                invalidResources.addElement(resourceName);\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Ignoring invalid resource \" + resourceName);\n+                }\n             } else {\n                 syncopeUser.addResource(resource);\n             }\n@@ -243,12 +239,6 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         if (!invalidDerivedSchemas.getElements().isEmpty()) {\n             compositeErrorException.addException(invalidDerivedSchemas);\n         }\n-        if (!invalidRoles.getElements().isEmpty()) {\n-            compositeErrorException.addException(invalidRoles);\n-        }\n-        if (!invalidResources.getElements().isEmpty()) {\n-            compositeErrorException.addException(invalidResources);\n-        }\n         if (compositeErrorException.hasExceptions()) {\n             throw compositeErrorException;\n         }\n@@ -258,7 +248,10 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n \n     public UserTO getUserTO(SyncopeUser user) {\n         UserTO userTO = new UserTO();\n-        BeanUtils.copyProperties(user, userTO, ignoreProperties);\n+        userTO.setId(user.getId());\n+        userTO.setCreationTime(user.getCreationTime());\n+        userTO.setToken(user.getToken());\n+        userTO.setTokenExpireTime(user.getTokenExpireTime());\n         userTO.setPassword(user.getPassword());\n \n         AttributeTO attributeTO = null;\n@@ -286,6 +279,10 @@ public UserTO getUserTO(SyncopeUser user) {\n             userTO.addRole(role.getId());\n         }\n \n+        for (Resource resource : user.getResources()) {\n+            userTO.addResource(resource.getName());\n+        }\n+\n         return userTO;\n     }\n }"},{"sha":"f5d055791252faeff3c02445cc58b430be3cf4af","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -83,4 +83,6 @@\n         <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>\n \n+    <bean id=\"propagationManager\"\n+          class=\"org.syncope.core.persistence.propagation.PropagationManager\"/>\n </beans>"},{"sha":"f8967c8fb664dfebcbd0d50b1d965c68ff4bbfe1","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/PropagationManagerTest.java","status":"modified","additions":20,"deletions":12,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -22,7 +22,8 @@\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.PropagationManager;\n+import org.syncope.core.persistence.propagation.PropagationException;\n+import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n@@ -34,9 +35,10 @@ public class PropagationManagerTest extends AbstractTest {\n \n     @Autowired\n     ResourceDAO resourceDAO;\n-\n     @Autowired\n     SyncopeUserDAO syncopeUserDAO;\n+    @Autowired\n+    PropagationManager propagationManager;\n \n     @Test\n     public final void provision() {\n@@ -48,8 +50,12 @@ public final void provision() {\n \n         user.setResources(Collections.singleton(resource));\n \n-        PropagationManager propagationManager = new PropagationManager();\n-        Set<String> provisioned = propagationManager.provision(user);\n+        Set<String> provisioned = null;\n+        try {\n+            provisioned = propagationManager.provision(user);\n+        } catch (PropagationException e) {\n+            log.error(\"While provisioning\", e);\n+        }\n \n         assertNotNull(provisioned);\n     }\n@@ -64,8 +70,12 @@ public final void update() {\n \n         user.setResources(Collections.singleton(resource));\n \n-        PropagationManager propagationManager = new PropagationManager();\n-        Set<String> provisioned = propagationManager.update(user);\n+        Set<String> provisioned = null;\n+        try {\n+            provisioned = propagationManager.update(user);\n+        } catch (PropagationException e) {\n+            log.error(\"While updating\", e);\n+        }\n \n         assertNotNull(provisioned);\n     }\n@@ -80,15 +90,14 @@ public final void provisionWithException() {\n \n         user.setResources(Collections.singleton(resource));\n \n-        RuntimeException re = null;\n+        PropagationException re = null;\n \n         try {\n \n-            PropagationManager propagationManager = new PropagationManager();\n             propagationManager.provision(\n                     user, Collections.singleton(\"ws-target-resource-2\"));\n \n-        } catch (RuntimeException e) {\n+        } catch (PropagationException e) {\n             re = e;\n         }\n \n@@ -105,15 +114,14 @@ public final void updateWithException() {\n \n         user.setResources(Collections.singleton(resource));\n \n-        RuntimeException re = null;\n+        PropagationException re = null;\n \n         try {\n \n-            PropagationManager propagationManager = new PropagationManager();\n             propagationManager.update(\n                     user, Collections.singleton(\"ws-target-resource-2\"));\n \n-        } catch (RuntimeException e) {\n+        } catch (PropagationException e) {\n             re = e;\n         }\n "},{"sha":"13189a5a494b46837e78079db5f8503a6343a9d2","filename":"core/src/test/java/org/syncope/core/test/rest/ConnectorInstanceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -96,7 +96,7 @@ public void create() {\n                     connectorTO, ConnectorInstanceTO.class);\n \n         } catch (HttpStatusCodeException e) {\n-            log.error(\"delete failed\", e);\n+            log.error(\"update failed\", e);\n             t = e;\n         }\n "},{"sha":"3d80ae7590e87d26c686a5a1497581fc42dae7c4","filename":"pom.xml","status":"modified","additions":30,"deletions":22,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb780233fed24cad1e02556ddf53ae2557328112/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb780233fed24cad1e02556ddf53ae2557328112/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=eb780233fed24cad1e02556ddf53ae2557328112","patch":"@@ -342,12 +342,6 @@\n                 <version>${org.springframework.version}</version>\n                 <scope>test</scope>\n             </dependency>\n-            <dependency>\n-                <groupId>org.mortbay.jetty</groupId>\n-                <artifactId>jetty</artifactId>\n-                <version>${jetty.version}</version>\n-                <scope>test</scope>\n-            </dependency>\n             <!-- /TEST -->\n \n         </dependencies>\n@@ -375,22 +369,6 @@\n \n     <build>\n         <defaultGoal>package</defaultGoal>\n-\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-gpg-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>sign-artifacts</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>sign</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-        </plugins>\n         \n         <pluginManagement>\n             <plugins>\n@@ -510,6 +488,36 @@\n         </plugins>\n     </reporting>\n \n+    <profiles>\n+        <profile>\n+            <id>release-sign-artifacts</id>\n+            <activation>\n+                <property>\n+                    <name>performRelease</name>\n+                    <value>true</value>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-gpg-plugin</artifactId>\n+                        <version>1.1</version>\n+                        <executions>\n+                            <execution>\n+                                <id>sign-artifacts</id>\n+                                <phase>verify</phase>\n+                                <goals>\n+                                    <goal>sign</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+\n     <modules>\n         <module>client</module>\n         <module>core</module>"}]}