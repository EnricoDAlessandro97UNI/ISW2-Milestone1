{"sha":"4816f3ebb45670e55a88acb391184e07b2242753","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4MTZmM2ViYjQ1NjcwZTU1YTg4YWNiMzkxMTg0ZTA3YjIyNDI3NTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-14T17:35:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-14T17:35:38Z"},"message":"[SYNCOPE-172] First version with actual working propagation towards ApacheDS\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/DEV_ROLE_PROVISIONING@1409267 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"340b51c2420b51d06cf94593f573123f9704526e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/340b51c2420b51d06cf94593f573123f9704526e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4816f3ebb45670e55a88acb391184e07b2242753","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4816f3ebb45670e55a88acb391184e07b2242753","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4816f3ebb45670e55a88acb391184e07b2242753","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4816f3ebb45670e55a88acb391184e07b2242753/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e0f512ab88ca02d76d57f59d3a2772b8a4991a3b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0f512ab88ca02d76d57f59d3a2772b8a4991a3b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0f512ab88ca02d76d57f59d3a2772b8a4991a3b"}],"stats":{"total":916,"additions":456,"deletions":460},"files":[{"sha":"0b32fe45cd353139e8a1bb2ffab8916aee9889a3","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":37,"deletions":41,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -38,7 +38,6 @@\n import org.apache.directory.server.xdbm.Index;\n import org.apache.directory.shared.ldap.entry.Entry;\n import org.apache.directory.shared.ldap.entry.ServerEntry;\n-import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.schema.SchemaManager;\n import org.apache.directory.shared.ldap.schema.ldif.extractor.SchemaLdifExtractor;\n@@ -58,52 +57,50 @@ public class ApacheDSStartStopListener implements ServletContextListener {\n     private LdapServer server;\n \n     /**\n-     * Initialize the schema manager and add the schema partition to\n-     * directory service.\n+     * Initialize the schema manager and add the schema partition to directory service.\n      *\n      * @throws Exception if the schema LDIF files are not found on the classpath\n      */\n     private void initSchemaPartition(final ServletContext servletContext) throws Exception {\n-\n-        Pattern sharedLdapSchemaManagerPattern = Pattern.compile(\".*apacheds-all-.*\\\\.jar\");\n+        final Pattern sharedLdapSchemaManagerPattern = Pattern.compile(\".*apacheds-all-.*\\\\.jar\");\n         File found = null;\n-        for (File jarFile : new File(servletContext.getRealPath(\"/WEB-INF/lib\")).listFiles()) {\n-\n+        for (final File jarFile : new File(servletContext.getRealPath(\"/WEB-INF/lib\")).listFiles()) {\n             if (sharedLdapSchemaManagerPattern.matcher(jarFile.getAbsolutePath()).matches()) {\n-\n                 found = jarFile;\n             }\n         }\n         if (found == null) {\n             throw new RuntimeException(\"No apache-ds-all JAR found under WEB-INF/lib\");\n         }\n \n-        SchemaPartition schemaPartition = service.getSchemaService().getSchemaPartition();\n+        final SchemaPartition schemaPartition = service.getSchemaService().getSchemaPartition();\n \n         // Init the LdifPartition\n-        LdifPartition ldifPartition = new LdifPartition();\n-        String workingDirectory = service.getWorkingDirectory().getPath();\n+        final LdifPartition ldifPartition = new LdifPartition();\n+        final String workingDirectory = service.getWorkingDirectory().getPath();\n         ldifPartition.setWorkingDirectory(workingDirectory + \"/schema\");\n \n         // Extract the schema on disk (a brand new one) and load the registries\n-        File schemaRepository = new File(workingDirectory, \"schema\");\n-        SchemaLdifExtractor extractor = new JarSchemaLdifExtractor(new File(workingDirectory), found);\n+        final File schemaRepository = new File(workingDirectory, \"schema\");\n+        final SchemaLdifExtractor extractor = new JarSchemaLdifExtractor(new File(workingDirectory), found);\n         extractor.extractOrCopy(true);\n \n         schemaPartition.setWrappedPartition(ldifPartition);\n \n-        SchemaLoader loader = new LdifSchemaLoader(schemaRepository);\n-        SchemaManager schemaManager = new DefaultSchemaManager(loader);\n+        final SchemaLoader loader = new LdifSchemaLoader(schemaRepository);\n+        final SchemaManager schemaManager = new DefaultSchemaManager(loader);\n         service.setSchemaManager(schemaManager);\n \n+        // Enable nis so that posixAccount and posixGroup are available\n+        schemaManager.enable(\"nis\");\n         // We have to load the schema now, otherwise we won't be able\n         // to initialize the Partitions, as we won't be able to parse \n         // and normalize their suffix DN\n         schemaManager.loadAllEnabled();\n \n         schemaPartition.setSchemaManager(schemaManager);\n \n-        List<Throwable> errors = schemaManager.getErrors();\n+        final List<Throwable> errors = schemaManager.getErrors();\n         if (!errors.isEmpty()) {\n             throw new RuntimeException(\"Schema load failed : \" + errors);\n         }\n@@ -118,9 +115,8 @@ private void initSchemaPartition(final ServletContext servletContext) throws Exc\n      * @throws Exception If the partition can't be added\n      */\n     private Partition addPartition(final String partitionId, final String partitionDn) throws Exception {\n-\n         // Create a new partition named 'foo'.\n-        JdbmPartition partition = new JdbmPartition();\n+        final JdbmPartition partition = new JdbmPartition();\n         partition.setId(partitionId);\n         partition.setPartitionDir(new File(service.getWorkingDirectory(), partitionId));\n         partition.setSuffix(partitionDn);\n@@ -137,8 +133,7 @@ private Partition addPartition(final String partitionId, final String partitionD\n      */\n     private void addIndex(final Partition partition, final String... attrs) {\n         // Index some attributes on the apache partition\n-        HashSet<Index<?, ServerEntry, Long>> indexedAttributes = new HashSet<Index<?, ServerEntry, Long>>();\n-\n+        final HashSet<Index<?, ServerEntry, Long>> indexedAttributes = new HashSet<Index<?, ServerEntry, Long>>();\n         for (String attribute : attrs) {\n             indexedAttributes.add(new JdbmIndex<String, ServerEntry>(attribute));\n         }\n@@ -147,14 +142,13 @@ private void addIndex(final Partition partition, final String... attrs) {\n     }\n \n     /**\n-     * Initialize the server. It creates the partition, adds the index, and\n-     * injects the context entries for the created partitions.\n+     * Initialize the server. It creates the partition, adds the index, and injects the context entries for the created\n+     * partitions.\n      *\n      * @param workDir the directory to be used for storing the data\n      * @throws Exception if there were some problems while initializing\n      */\n     private void initDirectoryService(final ServletContext servletContext, final File workDir) throws Exception {\n-\n         // Initialize the LDAP service\n         service = new DefaultDirectoryService();\n         service.setWorkingDirectory(workDir);\n@@ -164,36 +158,38 @@ private void initDirectoryService(final ServletContext servletContext, final Fil\n \n         // then the system partition\n         // this is a MANDATORY partition\n-        Partition systemPartition = addPartition(\"system\", ServerDNConstants.SYSTEM_DN);\n+        final Partition systemPartition = addPartition(\"system\", ServerDNConstants.SYSTEM_DN);\n         service.setSystemPartition(systemPartition);\n \n         // Disable the ChangeLog system\n         service.getChangeLog().setEnabled(false);\n         service.setDenormalizeOpAttrsEnabled(true);\n \n         // Now we can create as many partitions as we need\n-        Partition ispPartition = addPartition(\"isp\", \"o=isp\");\n+        final Partition ispPartition = addPartition(\"isp\", \"o=isp\");\n         addIndex(ispPartition, \"objectClass\", \"ou\", \"uid\");\n \n         // And start the service\n         service.startup();\n \n-        // Inject the foo root entry if it does not already exist\n-        try {\n-            service.getAdminSession().lookup(ispPartition.getSuffixDn());\n-        } catch (LdapException lnnfe) {\n-            DN dnIsp = new DN(\"o=isp\");\n-            ServerEntry rootEntry = service.newEntry(dnIsp);\n-            rootEntry.add(\"objectClass\", \"top\", \"organization\");\n-            rootEntry.add(\"o\", \"isp\");\n-            service.getAdminSession().add(rootEntry);\n-\n-            DN dnPeople = new DN(\"ou=People,o=isp\");\n-            ServerEntry peopleEntry = service.newEntry(dnPeople);\n-            peopleEntry.add(\"objectClass\", \"top\", \"organizationalUnit\");\n-            peopleEntry.add(\"ou\", \"People\");\n-            service.getAdminSession().add(peopleEntry);\n-        }\n+        // Finally, build base DN entries\n+        final DN dnIsp = new DN(\"o=isp\");\n+        final ServerEntry rootEntry = service.newEntry(dnIsp);\n+        rootEntry.add(\"objectClass\", \"top\", \"organization\");\n+        rootEntry.add(\"o\", \"isp\");\n+        service.getAdminSession().add(rootEntry);\n+\n+        final DN dnPeople = new DN(\"ou=People,o=isp\");\n+        final ServerEntry peopleEntry = service.newEntry(dnPeople);\n+        peopleEntry.add(\"objectClass\", \"top\", \"organizationalUnit\");\n+        peopleEntry.add(\"ou\", \"People\");\n+        service.getAdminSession().add(peopleEntry);\n+\n+        final DN dnGroups = new DN(\"ou=Groups,o=isp\");\n+        final ServerEntry groupsEntry = service.newEntry(dnGroups);\n+        groupsEntry.add(\"objectClass\", \"top\", \"organizationalUnit\");\n+        groupsEntry.add(\"ou\", \"Groups\");\n+        service.getAdminSession().add(groupsEntry);\n     }\n \n     /**"},{"sha":"a8ddb3df524df553086c868d5ffecd3c53b6b4bf","filename":"client/src/main/java/org/apache/syncope/client/to/PropagationTaskTO.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.to;\n \n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationOperation;\n \n@@ -39,9 +40,9 @@ public class PropagationTaskTO extends TaskTO {\n \n     private String objectClassName;\n \n-    private long user;\n+    private AttributableType subjectType;\n \n-    private long role;\n+    private Long subjectId;\n \n     public String getAccountId() {\n         return accountId;\n@@ -100,19 +101,19 @@ public void setObjectClassName(String objectClassName) {\n         this.objectClassName = objectClassName;\n     }\n \n-    public long getUser() {\n-        return user;\n+    public AttributableType getSubjectType() {\n+        return subjectType;\n     }\n \n-    public void setUser(long user) {\n-        this.user = user;\n+    public void setSubjectType(AttributableType subjectType) {\n+        this.subjectType = subjectType;\n     }\n \n-    public long getRole() {\n-        return role;\n+    public Long getSubjectId() {\n+        return subjectId;\n     }\n \n-    public void setRole(long role) {\n-        this.role = role;\n+    public void setSubjectId(Long subjectId) {\n+        this.subjectId = subjectId;\n     }\n }"},{"sha":"8105a3084f54541f94aa87bd04fdf0690e700c26","filename":"client/src/main/java/org/apache/syncope/types/IntMappingType.java","status":"modified","additions":29,"deletions":8,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FIntMappingType.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -34,21 +34,24 @@ public enum IntMappingType {\n     UserSchema(AttributableType.USER),\n     UserDerivedSchema(AttributableType.USER),\n     UserVirtualSchema(AttributableType.USER),\n-    SyncopeUserId(AttributableType.USER),\n-    Password(AttributableType.USER),\n+    UserId(AttributableType.USER),\n     Username(AttributableType.USER),\n+    Password(AttributableType.USER),\n     // -------------------------\n     // Role attribute types (the same in RoleMappingType)\n     // -------------------------\n     RoleSchema(AttributableType.ROLE),\n     RoleDerivedSchema(AttributableType.ROLE),\n     RoleVirtualSchema(AttributableType.ROLE),\n+    RoleId(AttributableType.ROLE),\n+    RoleName(AttributableType.ROLE),\n     // -------------------------\n     // Membership attribute types (the same in MembershipMappingType)\n     // -------------------------\n     MembershipSchema(AttributableType.MEMBERSHIP),\n     MembershipDerivedSchema(AttributableType.MEMBERSHIP),\n-    MembershipVirtualSchema(AttributableType.MEMBERSHIP);\n+    MembershipVirtualSchema(AttributableType.MEMBERSHIP),\n+    MembershipId(AttributableType.MEMBERSHIP);\n \n     private AttributableType attributableType;\n \n@@ -105,6 +108,13 @@ public static Set<IntMappingType> getAttributeTypes(final AttributableType attri\n         return res;\n     }\n \n+    public static Set<IntMappingType> getEmbedded() {\n+        return EnumSet.of(\n+                IntMappingType.UserId, IntMappingType.Username, IntMappingType.Password,\n+                IntMappingType.RoleId, IntMappingType.RoleName,\n+                IntMappingType.MembershipId);\n+    }\n+\n     /**\n      * Check if attribute type belongs to the specified attributable type set.\n      *\n@@ -120,19 +130,24 @@ public static boolean contains(final AttributableType attributableType, final St\n                         return true;\n                     }\n                 }\n+                break;\n+\n             case MEMBERSHIP:\n                 for (MembershipMappingType c : MembershipMappingType.values()) {\n                     if (c.name().equals(type)) {\n                         return true;\n                     }\n                 }\n+                break;\n+\n             case USER:\n             default:\n                 for (UserMappingType c : UserMappingType.values()) {\n                     if (c.name().equals(type)) {\n                         return true;\n                     }\n                 }\n+                break;\n         }\n         return false;\n     }\n@@ -145,9 +160,10 @@ private enum UserMappingType {\n         UserSchema,\n         UserDerivedSchema,\n         UserVirtualSchema,\n-        SyncopeUserId,\n-        Password,\n-        Username;\n+        UserId,\n+        Username,\n+        Password;\n+\n     }\n \n     /**\n@@ -157,7 +173,10 @@ private enum RoleMappingType {\n \n         RoleSchema,\n         RoleDerivedSchema,\n-        RoleVirtualSchema;\n+        RoleVirtualSchema,\n+        RoleId,\n+        RoleName;\n+\n     }\n \n     /**\n@@ -167,6 +186,8 @@ private enum MembershipMappingType {\n \n         MembershipSchema,\n         MembershipDerivedSchema,\n-        MembershipVirtualSchema;\n+        MembershipVirtualSchema,\n+        MembershipId;\n+\n     }\n }"},{"sha":"333afa8560b24055bb3a8b73d5fab70e7dc7977a","filename":"client/src/main/java/org/apache/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -56,7 +56,7 @@ public enum SyncopeClientExceptionType {\n     InvalidValues(\"Syncope.InvalidValues\", \"Syncope.InvalidValues.attributeName\"),\n     NotFound(\"Syncope.NotFound\", \"Syncope.NotFound.entity\"),\n     Propagation(\"Syncope.Propagation\", \"Syncope.Propagation.resourceName\"),\n-    RejectedUserCreate(\"Syncope.RejectUserCreate\", \"Syncope.RejectUserCreate.syncopeUserId\"),\n+    RejectedUserCreate(\"Syncope.RejectUserCreate\", \"Syncope.RejectUserCreate.userId\"),\n     RequiredValuesMissing(\"Syncope.RequiredValuesMissing\", \"Syncope.RequiredValuesMissing.attributeName\"),\n     Scheduling(\"Syncope.Scheduling\", \"Syncope.Scheduling.message\"),\n     UnauthorizedRole(\"Syncope.UnauthorizedRole\", \"Syncope.UnauthorizedRole.id\"),"},{"sha":"2a5845cb6cb43f6b1f0cc83b292f894f2a4bf310","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -73,9 +73,9 @@ public List<StatusBean> getRemoteStatuses(final UserTO userTO) {\n \n             switch (accountId != null\n                     ? accountId.getKey()\n-                    : IntMappingType.SyncopeUserId) {\n+                    : IntMappingType.UserId) {\n \n-                case SyncopeUserId:\n+                case UserId:\n                     objectId = String.valueOf(userTO.getId());\n                     break;\n                 case Username:"},{"sha":"aefb3dc11c035f6acb447f67d197cb195b8308b6","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -107,7 +107,7 @@ public NotificationModalPage(final PageReference callPageRef, final ModalWindow\n                 new PropertyModel<IntMappingType>(notificationTO, \"recipientAttrType\"));\n \n         final Set<IntMappingType> toBeFiltered = new HashSet<IntMappingType>();\n-        toBeFiltered.add(IntMappingType.SyncopeUserId);\n+        toBeFiltered.add(IntMappingType.UserId);\n         toBeFiltered.add(IntMappingType.Password);\n \n         recipientAttrType.setChoices(new ArrayList<IntMappingType>("},{"sha":"8859aa58c2b71cc14f97f2c7286ee8548fd1a625","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -512,7 +512,7 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n                     toBeUpdated.setChoices(schemaRestClient.getVirtualSchemaNames(type.getAttributableType()));\n                     break;\n \n-                case SyncopeUserId:\n+                case UserId:\n                 case Password:\n                 case Username:\n                 default:"},{"sha":"9e5a6eb4e52a1cd15ae1cc130155e474d1711d77","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractMappingItem.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractMappingItem.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -106,14 +106,20 @@ public String getIntAttrName() {\n         final String name;\n \n         switch (getIntMappingType()) {\n-            case SyncopeUserId:\n+            case UserId:\n+            case RoleId:\n+            case MembershipId:\n                 name = \"id\";\n                 break;\n \n             case Username:\n                 name = \"username\";\n                 break;\n \n+            case RoleName:\n+                name = \"roleName\";\n+                break;\n+\n             case Password:\n                 name = \"password\";\n                 break;"},{"sha":"fe1922c483872a42fb32779442166fcf43fdb1ca","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":12,"deletions":38,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -25,9 +25,8 @@\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import org.apache.syncope.client.util.XMLSerializer;\n-import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.validation.entity.PropagationTaskCheck;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationOperation;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -71,17 +70,10 @@ public class PropagationTask extends Task {\n \n     private String objectClassName;\n \n-    /**\n-     * User whose data are propagated.\n-     */\n-    @ManyToOne\n-    private SyncopeUser syncopeUser;\n+    @Enumerated(EnumType.STRING)\n+    private AttributableType subjectType;\n \n-    /**\n-     * Role whose data are propagated.\n-     */\n-    @ManyToOne\n-    private SyncopeRole syncopeRole;\n+    private Long subjectId;\n \n     /**\n      * ExternalResource to which the propagation happens.\n@@ -146,37 +138,19 @@ public void setObjectClassName(String objectClassName) {\n         this.objectClassName = objectClassName;\n     }\n \n-    public SyncopeUser getSyncopeUser() {\n-        return syncopeUser;\n-    }\n-\n-    public void setSyncopeUser(SyncopeUser syncopeUser) {\n-        this.syncopeUser = syncopeUser;\n-    }\n-\n-    public SyncopeRole getSyncopeRole() {\n-        return syncopeRole;\n+    public AttributableType getSubjectType() {\n+        return subjectType;\n     }\n \n-    public void setSyncopeRole(SyncopeRole syncopeRole) {\n-        this.syncopeRole = syncopeRole;\n+    public void setSubjectType(AttributableType subjectType) {\n+        this.subjectType = subjectType;\n     }\n \n-    public <T extends AbstractAttributable> void setSubject(T subject) {\n-        if (subject == null) {\n-            setSyncopeUser(null);\n-            setSyncopeRole(null);\n-        } else if (subject instanceof SyncopeUser) {\n-            setSyncopeUser((SyncopeUser) subject);\n-        } else if (subject instanceof SyncopeRole) {\n-            setSyncopeRole((SyncopeRole) subject);\n-        } else {\n-            throw new IllegalArgumentException(\"Subject expected to be either user or role, found '\"\n-                    + subject.getClass().getName() + \"' instead\");\n-        }\n+    public Long getSubjectId() {\n+        return subjectId;\n     }\n \n-    public <T extends AbstractAttributable> T getSubject() {\n-        return syncopeUser == null ? (T) syncopeRole : (T) syncopeUser;\n+    public void setSubjectId(Long subjectId) {\n+        this.subjectId = subjectId;\n     }\n }"},{"sha":"d7f5a9a3dc34f908482b64c4d6934f756dfb0bb8","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/role/RMapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRMapping.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -48,7 +48,7 @@ public class RMapping extends AbstractMapping {\n     /*\n      * Attribute mappings.\n      */\n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"mapping\")\n     private List<RMappingItem> items;\n \n     public RMapping() {"},{"sha":"d0a82dd3bcbb912086c33e74249075edb0552593","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/TaskDAO.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -20,9 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.Task;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface TaskDAO extends DAO {\n@@ -37,10 +35,6 @@ public interface TaskDAO extends DAO {\n \n     <T extends Task> List<T> findAll(int page, int itemsPerPage, Class<T> reference);\n \n-    List<PropagationTask> findAll(ExternalResource resource, SyncopeUser user);\n-\n-    List<PropagationTask> findAll(SyncopeUser user);\n-\n     <T extends Task> int count(Class<T> reference);\n \n     <T extends Task> T save(T task) throws InvalidEntityException;"},{"sha":"5b04ae1c07bd96206a36327346e4c405edb9c230","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n+import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -108,9 +109,7 @@ public ExternalResource save(final ExternalResource resource) {\n     public <T extends AbstractMappingItem> void deleteMapping(final String intAttrName,\n             final IntMappingType intMappingType, final Class<T> reference) {\n \n-        if (intMappingType == IntMappingType.SyncopeUserId || intMappingType == IntMappingType.Password\n-                || intMappingType == IntMappingType.Username) {\n-\n+        if (IntMappingType.getEmbedded().contains(intMappingType)) {\n             return;\n         }\n "},{"sha":"33e6f53a7fb9d9f03ce6df6039c10ee8bbe08c7e","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -41,6 +42,9 @@ public class RoleDAOImpl extends AbstractDAOImpl implements RoleDAO {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n "},{"sha":"e7b9f8f855c34d5290fd9730f1654477268bc607","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -23,11 +23,9 @@\n import javax.persistence.Query;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.NotificationTask;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SchedTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.Task;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n@@ -116,34 +114,6 @@ public <T extends Task> List<T> findAll(final int page, final int itemsPerPage,\n         return query.getResultList();\n     }\n \n-    @Override\n-    public List<PropagationTask> findAll(final SyncopeUser user) {\n-        StringBuilder queryString = buildfindAllQuery(PropagationTask.class);\n-\n-        queryString.append(\"WHERE e.syncopeUser=:user \");\n-        queryString.append(\"ORDER BY e.id DESC\");\n-\n-        final Query query = entityManager.createQuery(queryString.toString());\n-        query.setParameter(\"user\", user);\n-\n-        return query.getResultList();\n-    }\n-\n-    @Override\n-    public List<PropagationTask> findAll(final ExternalResource resource, final SyncopeUser user) {\n-\n-        StringBuilder queryString = buildfindAllQuery(PropagationTask.class);\n-        queryString.append(\"WHERE e.syncopeUser=:user \");\n-        queryString.append(\"AND e.resource=:resource \");\n-        queryString.append(\"ORDER BY e.id DESC\");\n-\n-        final Query query = entityManager.createQuery(queryString.toString());\n-        query.setParameter(\"user\", user);\n-        query.setParameter(\"resource\", resource);\n-\n-        return query.getResultList();\n-    }\n-\n     @Override\n     public <T extends Task> int count(final Class<T> reference) {\n         Query countQuery = entityManager.createNativeQuery(\"SELECT COUNT(id) FROM Task WHERE DTYPE=?1\");"},{"sha":"4789986cee30a88ed43238cf5c9dfc31b0ae2734","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrUniqueValue;\n@@ -362,10 +361,6 @@ public void delete(final SyncopeUser user) {\n         }\n         user.getMemberships().clear();\n \n-        for (PropagationTask task : taskDAO.findAll(user)) {\n-            task.setSyncopeUser(null);\n-        }\n-\n         entityManager.remove(user);\n     }\n "},{"sha":"79fae8f5ddced44b6ce073dff0c3f387da8c6e42","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PropagationTaskValidator.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -58,11 +58,6 @@ public boolean isValid(final PropagationTask task, final ConstraintValidatorCont\n                 }\n             }\n \n-            if (isValid && task.getSyncopeUser() != null && task.getSyncopeRole() != null) {\n-                LOG.error(\"Cannot associate either user and role to this task\");\n-                isValid = false;\n-            }\n-\n             if (!isValid) {\n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidPropagationTask.toString())"},{"sha":"ab0bb77a7a4ab23d69fd75f23a085a95b69d88b1","filename":"core/src/main/java/org/apache/syncope/core/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":171,"deletions":175,"changes":346,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -32,14 +32,12 @@\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n-import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n-import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.rest.data.RoleDataBinder;\n+import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnObjectUtil;\n-import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.TraceLevel;\n@@ -71,26 +69,23 @@ public abstract class AbstractPropagationTaskExecutor implements PropagationTask\n     @Autowired\n     protected ConnInstanceLoader connLoader;\n \n+    /**\n+     * ConnObjectUtil.\n+     */\n     @Autowired\n     protected ConnObjectUtil connObjectUtil;\n \n     /**\n-     * User DAO.\n+     * Task DAO.\n      */\n     @Autowired\n-    protected UserDAO userDAO;\n+    protected TaskDAO taskDAO;\n \n-    /**\n-     * Role DAO.\n-     */\n     @Autowired\n-    protected RoleDAO roleDAO;\n+    protected UserDataBinder userDataBinder;\n \n-    /**\n-     * Task DAO.\n-     */\n     @Autowired\n-    protected TaskDAO taskDAO;\n+    protected RoleDataBinder roleDataBinder;\n \n     @Override\n     public TaskExec execute(final PropagationTask task) {\n@@ -118,6 +113,156 @@ protected PropagationActions getPropagationActions(final ExternalResource resour\n         return result;\n     }\n \n+    protected void createOrUpdate(final PropagationTask task, final ConnectorObject beforeObj,\n+            final ConnectorFacadeProxy connector, final Set<String> propagationAttempted) {\n+\n+        // set of attributes to be propagated\n+        final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n+\n+        if (beforeObj == null) {\n+            // 1. get accountId\n+            final String accountId = task.getAccountId();\n+\n+            // 2. get name\n+            final Name name = (Name) AttributeUtil.find(Name.NAME, attributes);\n+\n+            // 3. check if:\n+            //      * accountId is not blank;\n+            //      * accountId is not equal to Name.\n+            if (StringUtils.isNotBlank(accountId) && (name == null || !accountId.equals(name.getNameValue()))) {\n+                // 3.a retrieve uid\n+                final Uid uid = (Uid) AttributeUtil.find(Uid.NAME, attributes);\n+\n+                // 3.b add Uid if not provided\n+                if (uid == null) {\n+                    attributes.add(AttributeBuilder.build(Uid.NAME, Collections.singleton(accountId)));\n+                }\n+            }\n+\n+            // 4. provision entry\n+            connector.create(task.getPropagationMode(), new ObjectClass(task.getObjectClassName()),\n+                    attributes, null, propagationAttempted);\n+        } else {\n+            // 1. check if rename is really required\n+            final Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n+\n+            LOG.debug(\"Rename required with value {}\", newName);\n+\n+            if (newName != null && newName.equals(beforeObj.getName())\n+                    && !newName.getNameValue().equals(beforeObj.getUid().getUidValue())) {\n+\n+                LOG.debug(\"Remote object name unchanged\");\n+                attributes.remove(newName);\n+            }\n+\n+            // 2. check wether anything is actually needing to be propagated, i.e. if there is attribute\n+            // difference between beforeObj - just read above from the connector - and the values to be propagated\n+            Map<String, Attribute> originalAttrMap = connObjectUtil.toMap(beforeObj.getAttributes());\n+            Map<String, Attribute> updateAttrMap = connObjectUtil.toMap(attributes);\n+\n+            // Only compare attribute from beforeObj that are also being updated\n+            Set<String> skipAttrNames = originalAttrMap.keySet();\n+            skipAttrNames.removeAll(updateAttrMap.keySet());\n+            for (String attrName : new HashSet<String>(skipAttrNames)) {\n+                originalAttrMap.remove(attrName);\n+            }\n+\n+            Set<Attribute> originalAttrs = new HashSet<Attribute>(originalAttrMap.values());\n+\n+            if (originalAttrs.equals(attributes)) {\n+                LOG.debug(\"Don't need to propagate anything: {} is equal to {}\", originalAttrs, attributes);\n+            } else {\n+                LOG.debug(\"Attributes that would be updated {}\", attributes);\n+\n+                Set<Attribute> strictlyModified = new HashSet<Attribute>();\n+                for (Attribute attr : attributes) {\n+                    if (!originalAttrs.contains(attr)) {\n+                        strictlyModified.add(attr);\n+                    }\n+                }\n+\n+                LOG.debug(\"Attributes that will be actually propagated for update {}\", strictlyModified);\n+\n+                connector.update(task.getPropagationMode(), beforeObj.getObjectClass(),\n+                        beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n+            }\n+        }\n+    }\n+\n+    protected AbstractAttributable getSubject(final PropagationTask task) {\n+        AbstractAttributable subject = null;\n+\n+        if (task.getSubjectId() != null) {\n+            switch (task.getSubjectType()) {\n+                case USER:\n+                    try {\n+                        subject = userDataBinder.getUserFromId(task.getSubjectId());\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not read user {}\", task.getSubjectId(), e);\n+                    }\n+                    break;\n+\n+                case ROLE:\n+                    try {\n+                        subject = roleDataBinder.getRoleFromId(task.getSubjectId());\n+                    } catch (Exception e) {\n+                        LOG.error(\"Could not read role {}\", task.getSubjectId(), e);\n+                    }\n+                    break;\n+\n+                case MEMBERSHIP:\n+                default:\n+            }\n+        }\n+\n+        return subject;\n+    }\n+\n+    protected void delete(final PropagationTask task, final ConnectorObject beforeObj,\n+            final ConnectorFacadeProxy connector, final Set<String> propagationAttempted) {\n+\n+        if (beforeObj == null) {\n+            LOG.debug(\"{} not found on external resource: ignoring delete\", task.getAccountId());\n+        } else {\n+            /*\n+             * We must choose here whether to\n+             *  a. actually delete the provided user from the external resource\n+             *  b. just update the provided user data onto the external resource\n+             *\n+             * (a) happens when either there is no user associated with the PropagationTask (this takes\n+             * place when the task is generated via UserController.delete()) or the provided updated\n+             * user hasn't the current resource assigned (when the task is generated via\n+             * UserController.update()).\n+             *\n+             * (b) happens when the provided updated user does have the current resource assigned\n+             * (when the task is generated via UserController.update()): this basically means that\n+             * before such update, this user used to have the current resource assigned by more than\n+             * one mean (for example, two different memberships with the same resource).\n+             */\n+            AbstractAttributable subject = getSubject(task);\n+            if (subject == null || !subject.getResourceNames().contains(task.getResource().getName())) {\n+                LOG.debug(\"Perform deprovisioning on {}\", task.getResource().getName());\n+\n+                connector.delete(\n+                        task.getPropagationMode(),\n+                        beforeObj.getObjectClass(),\n+                        beforeObj.getUid(),\n+                        null,\n+                        propagationAttempted);\n+            } else {\n+                LOG.debug(\"Update remote object on {}\", task.getResource().getName());\n+\n+                connector.update(\n+                        task.getPropagationMode(),\n+                        beforeObj.getObjectClass(),\n+                        beforeObj.getUid(),\n+                        task.getAttributes(),\n+                        null,\n+                        propagationAttempted);\n+            }\n+        }\n+    }\n+\n     @Override\n     public TaskExec execute(final PropagationTask task, final PropagationHandler handler) {\n         final PropagationActions actions = getPropagationActions(task.getResource());\n@@ -140,149 +285,18 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n             connector = connLoader.getConnector(task.getResource());\n \n             // Try to read remote object (user / group) BEFORE any actual operation\n-            beforeObj = getRemoteObject(connector, task, false);\n+            beforeObj = getRemoteObject(task, connector, false);\n \n             actions.before(task, beforeObj);\n \n             switch (task.getPropagationOperation()) {\n                 case CREATE:\n                 case UPDATE:\n-                    // set of attributes to be propagated\n-                    final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n-\n-                    if (beforeObj == null) {\n-                        // 1. get accountId\n-                        final String accountId = task.getAccountId();\n-\n-                        // 2. get name\n-                        final Name name = (Name) AttributeUtil.find(Name.NAME, attributes);\n-\n-                        // 3. check if:\n-                        //      * accountId is not blank;\n-                        //      * accountId is not equal to Name.\n-                        if (StringUtils.isNotBlank(accountId)\n-                                && (name == null || !accountId.equals(name.getNameValue()))) {\n-\n-                            // 3.a retrieve uid\n-                            final Uid uid = (Uid) AttributeUtil.find(Uid.NAME, attributes);\n-\n-                            // 3.b add Uid if not provided\n-                            if (uid == null) {\n-                                attributes.add(AttributeBuilder.build(Uid.NAME, Collections.singleton(accountId)));\n-                            }\n-                        }\n-\n-                        // 4. provision entry\n-                        connector.create(task.getPropagationMode(), new ObjectClass(task.getObjectClassName()),\n-                                attributes, null, propagationAttempted);\n-                    } else {\n-                        // 1. check if rename is really required\n-                        final Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n-\n-                        LOG.debug(\"Rename required with value {}\", newName);\n-\n-                        if (newName != null && newName.equals(beforeObj.getName())\n-                                && !beforeObj.getUid().getUidValue().equals(newName.getNameValue())) {\n-\n-                            LOG.debug(\"Remote object name unchanged\");\n-                            attributes.remove(newName);\n-                        }\n-\n-                        // 2. check wether anything is actually needing to be propagated, i.e. if there is attribute\n-                        // difference between beforeObj - just read above from the connector - and the values to\n-                        // be propagated\n-                        Map<String, Attribute> originalAttrMap = connObjectUtil.toMap(beforeObj.getAttributes());\n-                        Map<String, Attribute> updateAttrMap = connObjectUtil.toMap(attributes);\n-\n-                        // Only compare attribute from beforeObj that are also being updated\n-                        Set<String> skipAttrNames = originalAttrMap.keySet();\n-                        skipAttrNames.removeAll(updateAttrMap.keySet());\n-                        for (String attrName : new HashSet<String>(skipAttrNames)) {\n-                            originalAttrMap.remove(attrName);\n-                        }\n-\n-                        Set<Attribute> originalAttrs = new HashSet<Attribute>(originalAttrMap.values());\n-\n-                        if (originalAttrs.equals(attributes)) {\n-                            LOG.debug(\"Don't need to propagate anything: {} is equal to {}\", originalAttrs, attributes);\n-                        } else {\n-                            LOG.debug(\"Attributes that would be updated {}\", attributes);\n-\n-                            Set<Attribute> strictlyModified = new HashSet<Attribute>();\n-                            for (Attribute attr : attributes) {\n-                                if (!originalAttrs.contains(attr)) {\n-                                    strictlyModified.add(attr);\n-                                }\n-                            }\n-\n-                            LOG.debug(\"Attributes that will be actually propagated for update {}\", strictlyModified);\n-\n-                            connector.update(task.getPropagationMode(), beforeObj.getObjectClass(),\n-                                    beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n-                        }\n-                    }\n+                    createOrUpdate(task, beforeObj, connector, propagationAttempted);\n                     break;\n \n                 case DELETE:\n-                    if (beforeObj == null) {\n-                        LOG.debug(\"{} not found on external resource: ignoring delete\", task.getAccountId());\n-                    } else {\n-                        /*\n-                         * We must choose here whether to\n-                         *  a. actually delete the provided user/role from the external resource\n-                         *  b. just update the provided user/role data onto the external resource\n-                         *\n-                         * (a) happens when either there is no user/role associated with the PropagationTask \n-                         * (this takes place when the task is generated via REST controller's delete()) or the provided\n-                         * updated user/role hasn't the current resource assigned (when the task is generated via\n-                         * REST Controller0s update()).\n-                         *\n-                         * (b) happens when the provided updated user/role does have the current resource assigned\n-                         * (when the task is generated via REST Controller's update()): this basically means that\n-                         * before such update, this user/role used to have the current resource assigned by more than\n-                         * one mean (for example, for users, two different memberships with the same resource).\n-                         */\n-\n-                        AbstractAttributable subject = null;\n-                        if (task.getSyncopeUser() != null) {\n-                            try {\n-                                subject = getSyncopeUser(task.getSyncopeUser().getId());\n-                            } catch (NotFoundException e) {\n-                                LOG.warn(\"Requesting to delete a non-existing user from {}\",\n-                                        task.getResource().getName(), e);\n-                            }\n-                        }\n-                        if (task.getSyncopeRole() != null) {\n-                            try {\n-                                subject = getSyncopeRole(task.getSyncopeRole().getId());\n-                            } catch (NotFoundException e) {\n-                                LOG.warn(\"Requesting to delete a non-existing role from {}\",\n-                                        task.getResource().getName(), e);\n-                            }\n-                        }\n-\n-                        if (subject == null || !subject.getResourceNames().contains(task.getResource().getName())) {\n-                            LOG.debug(\"Perform deprovisioning on {}\", task.getResource().getName());\n-\n-                            connector.delete(\n-                                    task.getPropagationMode(),\n-                                    beforeObj.getObjectClass(),\n-                                    beforeObj.getUid(),\n-                                    null,\n-                                    propagationAttempted);\n-                        } else {\n-                            LOG.debug(\"Update remote object on {}\", task.getResource().getName());\n-\n-                            connector.update(\n-                                    task.getPropagationMode(),\n-                                    beforeObj.getObjectClass(),\n-                                    beforeObj.getUid(),\n-                                    task.getAttributes(),\n-                                    null,\n-                                    propagationAttempted);\n-                        }\n-                    }\n-\n+                    delete(task, beforeObj, connector, propagationAttempted);\n                     break;\n \n                 default:\n@@ -317,7 +331,7 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n         } finally {\n             // Try to read remote object (user / group) AFTER any actual operation\n             if (connector != null) {\n-                afterObj = getRemoteObject(connector, task, true);\n+                afterObj = getRemoteObject(task, connector, true);\n             }\n \n             LOG.debug(\"Update execution for {}\", task);\n@@ -368,28 +382,6 @@ public void execute(final Collection<PropagationTask> tasks) throws PropagationE\n     public abstract void execute(Collection<PropagationTask> tasks, PropagationHandler handler)\n             throws PropagationException;\n \n-    protected SyncopeUser getSyncopeUser(final Long userId)\n-            throws NotFoundException {\n-\n-        SyncopeUser user = userDAO.find(userId);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + userId);\n-        }\n-\n-        return user;\n-    }\n-\n-    protected SyncopeRole getSyncopeRole(final Long roleId)\n-            throws NotFoundException {\n-\n-        SyncopeRole role = roleDAO.find(roleId);\n-        if (role == null) {\n-            throw new NotFoundException(\"Role \" + roleId);\n-        }\n-\n-        return role;\n-    }\n-\n     /**\n      * Check whether an execution has to be stored, for a given task.\n      *\n@@ -434,7 +426,7 @@ protected boolean hasToBeregistered(final PropagationTask task, final TaskExec e\n      * @param latest 'FALSE' to retrieve object using old accountId if not null.\n      * @return remote connector object.\n      */\n-    protected ConnectorObject getRemoteObject(final ConnectorFacadeProxy connector, final PropagationTask task,\n+    protected ConnectorObject getRemoteObject(final PropagationTask task, final ConnectorFacadeProxy connector,\n             final boolean latest) {\n \n         String accountId = latest || task.getOldAccountId() == null\n@@ -443,8 +435,12 @@ protected ConnectorObject getRemoteObject(final ConnectorFacadeProxy connector,\n \n         ConnectorObject obj = null;\n         try {\n-            obj = connector.getObject(task.getPropagationMode(), task.getPropagationOperation(), ObjectClass.ACCOUNT,\n-                    new Uid(accountId), connector.getOperationOptions(task.getResource().getUmapping()));\n+            obj = connector.getObject(task.getPropagationMode(),\n+                    task.getPropagationOperation(),\n+                    new ObjectClass(task.getObjectClassName()),\n+                    new Uid(accountId),\n+                    connector.getOperationOptions(AttributableUtil.getInstance(task.getSubjectType()).\n+                    getMappingItems(task.getResource())));\n         } catch (RuntimeException ignore) {\n             LOG.debug(\"While resolving {}\", accountId, ignore);\n         }"},{"sha":"0dd9636b86243d78a7f18914e678d9e8d2c720ec","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":37,"deletions":42,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -20,10 +20,10 @@\n \n import java.io.File;\n import java.net.URI;\n+import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n@@ -145,9 +145,9 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n \n         // Set all of the ConfigurationProperties needed by the connector.\n         for (ConnConfProperty property : connInstance.getConfiguration()) {\n-            final Object propertyValue = getPropertyValue(property);\n-            if (propertyValue != null) {\n-                properties.setPropertyValue(property.getSchema().getName(), propertyValue);\n+            if (property.getValues() != null && !property.getValues().isEmpty()) {\n+                properties.setPropertyValue(property.getSchema().getName(),\n+                        getPropertyValue(property.getSchema().getType(), property.getValues()));\n             }\n         }\n \n@@ -482,7 +482,7 @@ public ConnInstance getActiveConnInstance() {\n         return activeConnInstance;\n     }\n \n-    public OperationOptions getOperationOptions(final AbstractMapping mapping) {\n+    public OperationOptions getOperationOptions(final Collection<AbstractMappingItem> mapItems) {\n         // -------------------------------------\n         // Ask just for mapped attributes\n         // -------------------------------------\n@@ -493,7 +493,7 @@ public OperationOptions getOperationOptions(final AbstractMapping mapping) {\n         attrsToGet.add(Uid.NAME);\n         attrsToGet.add(OperationalAttributes.ENABLE_NAME);\n \n-        for (AbstractMappingItem item : mapping.getItems()) {\n+        for (AbstractMappingItem item : mapItems) {\n             attrsToGet.add(item.getExtAttrName());\n         }\n \n@@ -503,45 +503,40 @@ public OperationOptions getOperationOptions(final AbstractMapping mapping) {\n         return oob.build();\n     }\n \n-    private Object getPropertyValue(final ConnConfProperty property) {\n+    private Object getPropertyValue(final String propType, final List<Object> values) {\n         Object value = null;\n \n-        final List<Object> values = property.getValues();\n-\n-        if (values != null && !values.isEmpty()) {\n-            try {\n-                final Class propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils.\n-                        getDefaultClassLoader());\n-\n-                if (GuardedString.class.equals(propertySchemaClass)) {\n-                    value = new GuardedString(values.get(0).toString().toCharArray());\n-                } else if (GuardedByteArray.class.equals(propertySchemaClass)) {\n-                    value = new GuardedByteArray((byte[]) values.get(0));\n-                } else if (Character.class.equals(propertySchemaClass) || Character.TYPE.equals(propertySchemaClass)) {\n-                    value = values.get(0) == null || values.get(0).toString().isEmpty()\n-                            ? null : values.get(0).toString().charAt(0);\n-                } else if (Integer.class.equals(propertySchemaClass) || Integer.TYPE.equals(propertySchemaClass)) {\n-                    value = Integer.parseInt(values.get(0).toString());\n-                } else if (Long.class.equals(propertySchemaClass) || Long.TYPE.equals(propertySchemaClass)) {\n-                    value = Long.parseLong(values.get(0).toString());\n-                } else if (Float.class.equals(propertySchemaClass) || Float.TYPE.equals(propertySchemaClass)) {\n-                    value = Float.parseFloat(values.get(0).toString());\n-                } else if (Double.class.equals(propertySchemaClass) || Double.TYPE.equals(propertySchemaClass)) {\n-                    value = Double.parseDouble(values.get(0).toString());\n-                } else if (Boolean.class.equals(propertySchemaClass) || Boolean.TYPE.equals(propertySchemaClass)) {\n-                    value = Boolean.parseBoolean(values.get(0).toString());\n-                } else if (URI.class.equals(propertySchemaClass)) {\n-                    value = URI.create(values.get(0).toString());\n-                } else if (File.class.equals(propertySchemaClass)) {\n-                    value = new File(values.get(0).toString());\n-                } else if (String[].class.equals(propertySchemaClass)) {\n-                    value = values.toArray(new String[]{});\n-                } else {\n-                    value = values.get(0).toString();\n-                }\n-            } catch (Exception e) {\n-                LOG.error(\"Invalid ConnConfProperty specified: {}\", property, e);\n+        try {\n+            final Class propertySchemaClass = ClassUtils.forName(propType, ClassUtils.getDefaultClassLoader());\n+\n+            if (GuardedString.class.equals(propertySchemaClass)) {\n+                value = new GuardedString(values.get(0).toString().toCharArray());\n+            } else if (GuardedByteArray.class.equals(propertySchemaClass)) {\n+                value = new GuardedByteArray((byte[]) values.get(0));\n+            } else if (Character.class.equals(propertySchemaClass) || Character.TYPE.equals(propertySchemaClass)) {\n+                value = values.get(0) == null || values.get(0).toString().isEmpty()\n+                        ? null : values.get(0).toString().charAt(0);\n+            } else if (Integer.class.equals(propertySchemaClass) || Integer.TYPE.equals(propertySchemaClass)) {\n+                value = Integer.parseInt(values.get(0).toString());\n+            } else if (Long.class.equals(propertySchemaClass) || Long.TYPE.equals(propertySchemaClass)) {\n+                value = Long.parseLong(values.get(0).toString());\n+            } else if (Float.class.equals(propertySchemaClass) || Float.TYPE.equals(propertySchemaClass)) {\n+                value = Float.parseFloat(values.get(0).toString());\n+            } else if (Double.class.equals(propertySchemaClass) || Double.TYPE.equals(propertySchemaClass)) {\n+                value = Double.parseDouble(values.get(0).toString());\n+            } else if (Boolean.class.equals(propertySchemaClass) || Boolean.TYPE.equals(propertySchemaClass)) {\n+                value = Boolean.parseBoolean(values.get(0).toString());\n+            } else if (URI.class.equals(propertySchemaClass)) {\n+                value = URI.create(values.get(0).toString());\n+            } else if (File.class.equals(propertySchemaClass)) {\n+                value = new File(values.get(0).toString());\n+            } else if (String[].class.equals(propertySchemaClass)) {\n+                value = values.toArray(new String[]{});\n+            } else {\n+                value = values.get(0) == null ? null : values.get(0).toString();\n             }\n+        } catch (Exception e) {\n+            LOG.error(\"Invalid ConnConfProperty specified: {} {}\", propType, values, e);\n         }\n \n         return value;"},{"sha":"4485994b2ea053dfd0f8c4e6d0f9ba165184a41d","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationByResource.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -158,6 +158,28 @@ public final boolean remove(final PropagationOperation type, final String resour\n         return result;\n     }\n \n+    public boolean contains(final PropagationOperation type, final String resourceName) {\n+        boolean result = false;\n+\n+        switch (type) {\n+            case CREATE:\n+                result = toBeCreated.contains(resourceName);\n+                break;\n+\n+            case UPDATE:\n+                result = toBeUpdated.contains(resourceName);\n+                break;\n+\n+            case DELETE:\n+                result = toBeDeleted.contains(resourceName);\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n     /**\n      * Get resources for a given resource operation type.\n      *"},{"sha":"d46f1581d0da7c8002cf7fcd660c398a9d91a66f","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -100,6 +100,9 @@ public class PropagationManager {\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n+    /**\n+     * ConnObjectUtil.\n+     */\n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n \n@@ -183,7 +186,7 @@ public List<PropagationTask> getRoleCreateTaskIds(final WorkflowResult<Long> wfR\n         if (vAttrs != null && !vAttrs.isEmpty()) {\n             roleDataBinder.fillVirtual(role, vAttrs, AttributableUtil.getInstance(AttributableType.ROLE));\n         }\n-        return getCreateTaskIds(role, null, vAttrs, true, wfResult.getPropByRes(), syncResourceNames);\n+        return getCreateTaskIds(role, null, vAttrs, null, wfResult.getPropByRes(), syncResourceNames);\n     }\n \n     protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attributable,\n@@ -315,7 +318,7 @@ public List<PropagationTask> getRoleUpdateTaskIds(final WorkflowResult<Long> wfR\n             throws NotFoundException, UnauthorizedRoleException {\n \n         SyncopeRole role = roleDataBinder.getRoleFromId(wfResult.getResult());\n-        return getUpdateTaskIds(role, null, true,\n+        return getUpdateTaskIds(role, null, null,\n                 vAttrsToBeRemoved, vAttrsToBeUpdated, wfResult.getPropByRes(), syncResourceNames);\n     }\n \n@@ -564,7 +567,6 @@ private <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> prepa\n \n                         attributes.add(AttributeBuilder.build(preparedAttribute.getValue().getName(), values));\n                     }\n-\n                 }\n             } catch (Exception e) {\n                 LOG.debug(\"Attribute '{}' processing failed\", mapping.getIntAttrName(), e);\n@@ -641,8 +643,9 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n                     PropagationTask task = new PropagationTask();\n                     task.setResource(resource);\n                     task.setObjectClassName(connObjectUtil.fromAttributable(subject).getObjectClassValue());\n+                    task.setSubjectType(AttributableUtil.getInstance(subject).getType());\n                     if (!deleteOnResource) {\n-                        task.setSubject(subject);\n+                        task.setSubjectId(subject.getId());\n                     }\n                     task.setPropagationOperation(operation);\n                     task.setPropagationMode(resource.getPropagationMode());\n@@ -655,7 +658,7 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n \n                     tasks.add(task);\n \n-                    LOG.debug(\"PropagationTasl created: {}\", task);\n+                    LOG.debug(\"PropagationTask created: {}\", task);\n                 }\n             }\n         }"},{"sha":"eef0c37c481bf75718b2e740dc032c71c3643b47","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -217,7 +217,7 @@ public ConnObjectTO getObject(@PathVariable(\"resourceName\") final String resourc\n         final ConnectorFacadeProxy connector = connLoader.getConnector(resource);\n \n         final ConnectorObject connectorObject = connector.getObject(ObjectClass.ACCOUNT, new Uid(objectId),\n-                connector.getOperationOptions(resource.getUmapping()));\n+                connector.getOperationOptions(resource.getUmapping().getItems()));\n \n         if (connectorObject == null) {\n             throw new NotFoundException(\"Object \" + objectId + \" not found on resource \" + resourceName);"},{"sha":"f1d6bacad0a4ca3a08ece4a2d45ec442d04cd7cb","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -272,21 +272,10 @@ private UMappingItem getUMappingItem(final MappingItemTO itemTO, final UMapping\n         }\n \n         if (itemTO.getIntAttrName() == null) {\n-            switch (itemTO.getIntMappingType()) {\n-                case SyncopeUserId:\n-                    itemTO.setIntAttrName(IntMappingType.SyncopeUserId.toString());\n-                    break;\n-\n-                case Password:\n-                    itemTO.setIntAttrName(IntMappingType.Password.toString());\n-                    break;\n-\n-                case Username:\n-                    itemTO.setIntAttrName(IntMappingType.Username.toString());\n-                    break;\n-\n-                default:\n-                    requiredValuesMissing.addElement(\"intAttrName\");\n+            if (IntMappingType.getEmbedded().contains(itemTO.getIntMappingType())) {\n+                itemTO.setIntAttrName(itemTO.getIntMappingType().toString());\n+            } else {\n+                requiredValuesMissing.addElement(\"intAttrName\");\n             }\n         }\n "},{"sha":"e2473329d7d8e51c9b34e71b3ff6965c1f33a247","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.AttributableType;\n+import org.apache.syncope.types.PropagationOperation;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n@@ -162,15 +163,26 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO)\n     public PropagationByResource update(final SyncopeRole role, final RoleMod roleMod)\n             throws SyncopeClientCompositeErrorException {\n \n+        PropagationByResource propByRes = new PropagationByResource();\n+\n         SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n+        Set<String> currentResources = role.getResourceNames();\n+\n         // name\n         SyncopeClientException invalidRoles = new SyncopeClientException(SyncopeClientExceptionType.InvalidRoles);\n         if (roleMod.getName() != null) {\n             SyncopeRole otherRole = roleDAO.find(roleMod.getName(),\n                     role.getParent() == null ? null : role.getParent().getId());\n             if (otherRole == null || role.equals(otherRole)) {\n-                role.setName(roleMod.getName());\n+                if (!roleMod.getName().equals(role.getName())) {\n+                    propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+                    for (String resource : currentResources) {\n+                        propByRes.addOldAccountId(resource, role.getName());\n+                    }\n+\n+                    role.setName(roleMod.getName());\n+                }\n             } else {\n                 LOG.error(\"Another role exists with the same name and the same parent role: \" + otherRole);\n \n@@ -238,7 +250,9 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n         }\n \n         // attributes, derived attributes, virtual attributes and resources\n-        return fill(role, roleMod, AttributableUtil.getInstance(AttributableType.ROLE), scce);\n+        propByRes.merge(fill(role, roleMod, AttributableUtil.getInstance(AttributableType.ROLE), scce));\n+\n+        return propByRes;\n     }\n \n     @Transactional(readOnly = true)"},{"sha":"639b702f414e9f4d6f9130438b0c137bd54cc5c0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -22,7 +22,6 @@\n import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n-import org.apache.syncope.client.to.PropagationTaskTO;\n import org.apache.syncope.client.to.SchedTaskTO;\n import org.apache.syncope.client.to.SyncTaskTO;\n import org.apache.syncope.client.to.TaskExecTO;\n@@ -64,8 +63,7 @@ public class TaskDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(TaskDataBinder.class);\n \n-    private static final String[] IGNORE_TASK_PROPERTIES = {\n-        \"latestExecStatus\", \"executions\", \"resource\", \"user\", \"role\"};\n+    private static final String[] IGNORE_TASK_PROPERTIES = {\"latestExecStatus\", \"executions\", \"resource\",};\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\"id\", \"task\"};\n \n@@ -250,14 +248,6 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n                     throw new ClassCastException(\"taskUtil is type Propagation but task is not PropagationTask: \"\n                             + task.getClass().getName());\n                 }\n-\n-                ((PropagationTaskTO) taskTO).setResource(((PropagationTask) task).getResource().getName());\n-                if (((PropagationTask) task).getSyncopeUser() != null) {\n-                    ((PropagationTaskTO) taskTO).setUser(((PropagationTask) task).getSyncopeUser().getId());\n-                }\n-                if (((PropagationTask) task).getSyncopeRole() != null) {\n-                    ((PropagationTaskTO) taskTO).setRole(((PropagationTask) task).getSyncopeRole().getId());\n-                }\n                 break;\n \n             case SCHED:"},{"sha":"6d03f2a3284d0606223369d5ef8d1bfef397acfa","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -267,7 +267,6 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n \n         // username\n         if (userMod.getUsername() != null && !userMod.getUsername().equals(user.getUsername())) {\n-\n             String oldUsername = user.getUsername();\n \n             user.setUsername(userMod.getUsername());"},{"sha":"e592d6bc6da0720e2da2ff7b26bd347eab1560dc","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -256,10 +256,10 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         try {\n             if (syncTask.isFullReconciliation()) {\n                 connector.getAllObjects(ObjectClass.ACCOUNT, handler,\n-                        connector.getOperationOptions(syncTask.getResource().getUmapping()));\n+                        connector.getOperationOptions(syncTask.getResource().getUmapping().getItems()));\n             } else {\n                 connector.sync(ObjectClass.ACCOUNT, syncTask.getResource().getSyncToken(), handler,\n-                        connector.getOperationOptions(syncTask.getResource().getUmapping()));\n+                        connector.getOperationOptions(syncTask.getResource().getUmapping().getItems()));\n             }\n \n             if (!dryRun && !syncTask.isFullReconciliation()) {"},{"sha":"50745e9fa8c9402cec74497e285aa24bf2c01ab3","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHanlder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -30,8 +30,8 @@\n import org.apache.syncope.client.search.SyncopeUserCond;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.notification.NotificationManager;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n@@ -51,8 +51,8 @@\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n-import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.apache.syncope.types.ConflictResolutionAction;\n import org.apache.syncope.types.SyncPolicySpec;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -212,7 +212,7 @@ private List<Long> findExistingUsers(final SyncDelta delta) {\n                     }\n                     break;\n \n-                case SyncopeUserId:\n+                case UserId:\n                     found = userDAO.find(Long.parseLong(uid));\n                     if (found != null) {\n                         result.add(found.getId());\n@@ -282,7 +282,7 @@ private List<Long> findExistingUsers(final SyncDelta delta) {\n                 }\n \n                 NodeCond nodeCond;\n-                // just Username or SyncopeUserId can be selected to be used\n+                // just Username or UserId can be selected to be used\n                 if (\"id\".equalsIgnoreCase(schema) || \"username\".equalsIgnoreCase(schema)) {\n                     SyncopeUserCond cond = new SyncopeUserCond();\n                     cond.setSchema(schema);"},{"sha":"1388598254a38b7cb3939c12b323ba247ff730f4","filename":"core/src/main/java/org/apache/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -199,7 +199,7 @@ private UserTO getUserTOFromConnObject(final ConnectorObject obj, final SyncTask\n \n             AttributeTO attributeTO;\n             switch (item.getIntMappingType()) {\n-                case SyncopeUserId:\n+                case UserId:\n                     break;\n \n                 case Password:"},{"sha":"760ea7874c404f879e9987dfc758eba24707c4fa","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":17,"deletions":7,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.role.RSchema;\n import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n import org.apache.syncope.core.persistence.beans.user.UDerSchema;\n@@ -110,8 +111,8 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n             case UserSchema:\n             case RoleSchema:\n             case MembershipSchema:\n-                schema = schemaDAO.find(mapping.getIntAttrName(), MappingUtil.getIntMappingTypeClass(mapping.\n-                        getIntMappingType()));\n+                schema = schemaDAO.find(mapping.getIntAttrName(),\n+                        MappingUtil.getIntMappingTypeClass(mapping.getIntMappingType()));\n \n                 for (AbstractAttributable attributable : attributables) {\n                     final AbstractAttr attr = attributable.getAttribute(mapping.getIntAttrName());\n@@ -133,7 +134,6 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n             case UserVirtualSchema:\n             case RoleVirtualSchema:\n             case MembershipVirtualSchema:\n-\n                 for (AbstractAttributable attributable : attributables) {\n                     AbstractVirAttr virAttr = attributable.getVirtualAttribute(mapping.getIntAttrName());\n \n@@ -173,18 +173,20 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n                 }\n                 break;\n \n-            case Username:\n+            case UserId:\n+            case RoleId:\n+            case MembershipId:\n                 for (AbstractAttributable attributable : attributables) {\n                     AbstractAttrValue attrValue = new UAttrValue();\n-                    attrValue.setStringValue(((SyncopeUser) attributable).getUsername());\n+                    attrValue.setStringValue(attributable.getId().toString());\n                     values.add(attrValue);\n                 }\n                 break;\n \n-            case SyncopeUserId:\n+            case Username:\n                 for (AbstractAttributable attributable : attributables) {\n                     AbstractAttrValue attrValue = new UAttrValue();\n-                    attrValue.setStringValue(attributable.getId().toString());\n+                    attrValue.setStringValue(((SyncopeUser) attributable).getUsername());\n                     values.add(attrValue);\n                 }\n                 break;\n@@ -197,6 +199,14 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n                 values.add(attrValue);\n                 break;\n \n+            case RoleName:\n+                for (AbstractAttributable attributable : attributables) {\n+                    attrValue = new UAttrValue();\n+                    attrValue.setStringValue(((SyncopeRole) attributable).getName());\n+                    values.add(attrValue);\n+                }\n+                break;\n+\n             default:\n         }\n "},{"sha":"9db3aeda9b5e5187ac0c0a90b1b1066e8a6e1dd1","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -96,7 +96,7 @@ public void save() {\n         UMappingItem accountId = new UMappingItem();\n         accountId.setExtAttrName(\"username\");\n         accountId.setIntAttrName(\"fullname\");\n-        accountId.setIntMappingType(IntMappingType.SyncopeUserId);\n+        accountId.setIntMappingType(IntMappingType.UserId);\n         mapping.setAccountIdItem(accountId);\n \n         ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();"},{"sha":"31b2a0614b5faabf1a8dbd9aae929c75b11f5986","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.quartz.TestSyncActions;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationOperation;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -69,15 +70,6 @@ public void findAll() {\n \n         List<SyncTask> sylist = taskDAO.findAll(SyncTask.class);\n         assertEquals(4, sylist.size());\n-\n-        ExternalResource resource = resourceDAO.find(\"ws-target-resource-2\");\n-        assertNotNull(resource);\n-\n-        SyncopeUser user = userDAO.find(1L);\n-        assertNotNull(user);\n-\n-        plist = taskDAO.findAll(resource, user);\n-        assertEquals(3, plist.size());\n     }\n \n     @Test\n@@ -90,7 +82,7 @@ public void savePropagationTask() {\n \n         PropagationTask task = new PropagationTask();\n         task.setResource(resource);\n-        task.setSyncopeUser(user);\n+        task.setSubjectType(AttributableType.USER);\n         task.setPropagationMode(PropagationMode.TWO_PHASES);\n         task.setPropagationOperation(PropagationOperation.CREATE);\n         task.setAccountId(\"one@two.com\");"},{"sha":"4264f602985fe60380cd0bffd1d7e8173ffffd42","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -224,7 +224,7 @@ public void save() {\n         UMappingItem accountId = new UMappingItem();\n         accountId.setExtAttrName(\"username\");\n         accountId.setIntAttrName(\"username\");\n-        accountId.setIntMappingType(IntMappingType.SyncopeUserId);\n+        accountId.setIntMappingType(IntMappingType.UserId);\n         mapping.setAccountIdItem(accountId);\n         accountId.setMapping(mapping);\n "},{"sha":"1c70dea0abd0b9aea258d22cc2c4ad43cc0df73e","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.PropagationOperation;\n@@ -77,7 +78,7 @@ public void save() {\n \n         PropagationTask task = new PropagationTask();\n         task.setResource(resource);\n-        task.setSyncopeUser(user);\n+        task.setSubjectType(AttributableType.USER);\n         task.setPropagationMode(PropagationMode.TWO_PHASES);\n         task.setPropagationOperation(PropagationOperation.CREATE);\n         task.setAccountId(\"one@two.com\");"},{"sha":"0d958f8f930aec33de786ce040c2de8046d2f52b","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -68,7 +68,7 @@ public void create() {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n \n@@ -106,7 +106,7 @@ public void createOverridingProps() {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n \n@@ -153,7 +153,7 @@ public void createWithSingleMapping() {\n         MappingTO mapping = new MappingTO();\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n \n@@ -173,7 +173,7 @@ public void createWithInvalidMapping() {\n         MappingTO mapping = new MappingTO();\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n \n@@ -211,7 +211,7 @@ public void createWithoutExtAttr() {\n         MappingTO mapping = new MappingTO();\n \n         MappingItemTO item = new MappingItemTO();\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n \n@@ -297,7 +297,7 @@ public void update() {\n         item = new MappingItemTO();\n         item.setExtAttrName(\"username\");\n         item.setIntAttrName(\"fullname\");\n-        item.setIntMappingType(IntMappingType.SyncopeUserId);\n+        item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n         mapping.setAccountIdItem(item);\n "},{"sha":"67d1414d01c5c9324004cdb4b72d322fe9e98054","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":21,"deletions":7,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import java.util.ArrayList;\n import static org.junit.Assert.*;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import org.apache.http.auth.UsernamePasswordCredentials;\n@@ -77,20 +77,24 @@ public void create() {\n         AttributeTO icon = new AttributeTO();\n         icon.setSchema(\"icon\");\n         icon.addValue(\"anIcon\");\n+        roleTO.addAttribute(icon);\n+\n+        roleTO.addResource(\"resource-ldap\");\n \n         RoleTO actual = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n \n         roleTO.setId(actual.getId());\n-\n         roleTO.setPasswordPolicy(4L);\n-\n+        roleTO.setPropagationTOs(actual.getPropagationTOs());\n         assertEquals(roleTO, actual);\n \n         assertNotNull(actual.getAccountPolicy());\n         assertEquals(6L, (long) actual.getAccountPolicy());\n \n         assertNotNull(actual.getPasswordPolicy());\n         assertEquals(4L, (long) actual.getPasswordPolicy());\n+\n+        assertTrue(actual.getResources().contains(\"resource-ldap\"));\n     }\n \n     @Test\n@@ -101,11 +105,9 @@ public void createWithPasswordPolicy() {\n         roleTO.setPasswordPolicy(4L);\n \n         RoleTO actual = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n-\n         assertNotNull(actual);\n \n         actual = restTemplate.getForObject(BASE_URL + \"role/read/{roleId}.json\", RoleTO.class, actual.getId());\n-\n         assertNotNull(actual);\n         assertNotNull(actual.getPasswordPolicy());\n         assertEquals(4L, (long) actual.getPasswordPolicy());\n@@ -119,10 +121,20 @@ public void delete() {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n \n-        RoleTO deletedRole = restTemplate.getForObject(BASE_URL + \"role/delete/{roleId}\", RoleTO.class, 5);\n+        RoleTO roleTO = new RoleTO();\n+        roleTO.setName(\"toBeDeleted\");\n+        roleTO.setParent(8L);\n+\n+        roleTO.addResource(\"resource-ldap\");\n+\n+        roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n+        assertNotNull(roleTO);\n+        \n+        RoleTO deletedRole = restTemplate.getForObject(BASE_URL + \"role/delete/{roleId}\", RoleTO.class, roleTO.getId());\n         assertNotNull(deletedRole);\n+\n         try {\n-            restTemplate.getForObject(BASE_URL + \"role/read/{roleId}.json\", RoleTO.class, 2);\n+            restTemplate.getForObject(BASE_URL + \"role/read/{roleId}.json\", RoleTO.class, deletedRole.getId());\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n@@ -206,6 +218,8 @@ public void update() {\n         icon.addValue(\"anIcon\");\n         roleTO.addAttribute(icon);\n \n+        roleTO.addResource(\"resource-ldap\");\n+\n         roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n \n         assertEquals(1, roleTO.getAttributes().size());"},{"sha":"97124643214bb6efe4961e43f11d13ff021e4d88","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -435,7 +435,6 @@ public void reconcile() {\n     public void issue196() {\n         TaskExecTO execution = restTemplate.postForObject(\n                 BASE_URL + \"task/execute/{taskId}\", null, TaskExecTO.class, 6);\n-        System.out.println(\"BBBBBBBB\\n\" + execution);\n         assertNotNull(execution);\n         assertEquals(0, execution.getId());\n         assertNotNull(execution.getTask());"},{"sha":"ca1f7198cdd0f7b867eebf34142f58f0e7741a1d","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -1327,8 +1327,7 @@ public void verifyTaskRegistration() {\n             }\n         }\n \n-        // default configuration for ws-target-resource2:\n-        //             no delete executions have to be registered\n+        // default configuration for ws-target-resource2: no delete executions have to be registered\n         // --> no more tasks/executions should be added\n         assertEquals(newMaxId, maxId);\n     }\n@@ -2031,13 +2030,11 @@ public void issueSYNCOPE185() {\n         // 3. try (and fail) to find this user on the external LDAP resource\n         SyncopeClientException sce = null;\n         try {\n-            ConnObjectTO connObjectTO = restTemplate.getForObject(\n-                    BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+            restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n                     ConnObjectTO.class, \"resource-ldap\", userTO.getUsername());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {\n             sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n-\n         }\n         assertNotNull(sce);\n     }"},{"sha":"5017c5ac33a2e42610d0cd99351d8cabfa580199","filename":"core/src/test/resources/content.xml","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -307,7 +307,7 @@ under the License.\n   <ConnInstance id=\"105\" bundleName=\"org.connid.bundles.ldap\" displayName=\"ApacheDS\"\n                 connectorName=\"org.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n-                xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EattributesToSynchronize%3C%2Fname%3E%0A++++++%3CdisplayName%3EAttributes+to+Synchronize%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+names+of+the+attributes+to+synchronize.+This+ignores+updates+from+the+change+log+if+they+do+not+update+any+of+the+named+attributes.+For+example%2C+if+only+%26quot%3Bdepartment%26quot%3B+is+listed%2C+then+only+changes+that+affect+%26quot%3Bdepartment%26quot%3B+will+be+processed.+All+other+updates+are+ignored.+If+blank+%28the+default%29%2C+then+all+changes+are+processed.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ecredentials%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EPassword+for+the+principal.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Esecret%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EsynchronizePasswords%3C%2Fname%3E%0A++++++%3CdisplayName%3EEnable+Password+Synchronization%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EIf+true%2C+the+connector+will+synchronize+passwords.+The+Password+Capture+Plugin+needs+to+be+installed+for+password+synchronization+to+work.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EchangeLogBlockSize%3C%2Fname%3E%0A++++++%3CdisplayName%3EChange+Log+Block+Size%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+number+of+change+log+entries+to+fetch+per+query.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eint%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cint%3E100%3C%2Fint%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EblockSize%3C%2Fname%3E%0A++++++%3CdisplayName%3EBlock+Size%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+maximum+number+of+accounts+that+can+be+in+a+block+when+retrieving+accounts+in+blocks.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eint%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordHashAlgorithm%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Hash+Algorithm%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EIndicates+the+algorithm+that+the+Identity+system+should+use+to+hash+the+password.+Currently+supported+values+are+SSHA%2C+SHA%2C+SSHA1%2C+and+SHA1.+A+blank+value+indicates+that+the+system+will+not+hash+passwords.+This+will+cause+cleartext+passwords+to+be+stored+in+LDAP+unless+the+LDAP+server+performs+the+hash+%28Netscape+Directory+Server+and+iPlanet+Directory+Server+do%29.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EchangeNumberAttribute%3C%2Fname%3E%0A++++++%3CdisplayName%3EChange+Number+Attribute%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+of+the+change+number+attribute+in+the+change+log+entry.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3EchangeNumber%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EmaintainLdapGroupMembership%3C%2Fname%3E%0A++++++%3CdisplayName%3EMaintain+LDAP+Group+Membership%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EWhen+enabled+and+a+user+is+renamed+or+deleted%2C+update+any+LDAP+groups+to+which+the+user+belongs+to+reflect+the+new+name.+Otherwise%2C+the+LDAP+resource+must+maintain+referential+integrity+with+respect+to+group+membership.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EusePagedResultControl%3C%2Fname%3E%0A++++++%3CdisplayName%3EUse+Paged+Result+Control%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EWhen+enabled%2C+the+LDAP+Paged+Results+control+is+preferred+over+the+VLV+control+when+retrieving+accounts.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EuseBlocks%3C%2Fname%3E%0A++++++%3CdisplayName%3EUse+Blocks%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EWhen+performing+operations+on+large+numbers+of+accounts%2C+the+accounts+are+processed+in+blocks+to+reduce+the+amount+of+memory+used+by+the+operation.+Select+this+option+to+process+accounts+in+blocks.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cboolean%3Efalse%3C%2Fboolean%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EuidAttribute%3C%2Fname%3E%0A++++++%3CdisplayName%3EUid+Attribute%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+of+the+LDAP+attribute+which+is+mapped+to+the+Uid+attribute.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Euid%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EobjectClassesToSynchronize%3C%2Fname%3E%0A++++++%3CdisplayName%3EObject+Classes+to+Synchronize%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+object+classes+to+synchronize.+The+change+log+is+for+all+objects%3B+this+filters+updates+to+just+the+listed+object+classes.+You+should+not+list+the+superclasses+of+an+object+class+unless+you+intend+to+synchronize+objects+with+any+of+the+superclass+values.+For+example%2C+if+only+%26quot%3BinetOrgPerson%26quot%3B+objects+should+be+synchronized%2C+but+the+superclasses+of+%26quot%3BinetOrgPerson%26quot%3B+%28%26quot%3Bperson%26quot%3B%2C+%26quot%3Borganizationalperson%26quot%3B+and+%26quot%3Btop%26quot%3B%29+should+be+filtered+out%2C+then+list+only+%26quot%3BinetOrgPerson%26quot%3B+here.+All+objects+in+LDAP+are+subclassed+from+%26quot%3Btop%26quot%3B.+For+this+reason%2C+you+should+never+list+%26quot%3Btop%26quot%3B%2C+otherwise+no+object+would+be+filtered.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Etop%3C%2Fstring%3E%0A++++++%3Cstring%3Eperson%3C%2Fstring%3E%0A++++++%3Cstring%3EorganizationalPerson%3C%2Fstring%3E%0A++++++%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EgroupMemberAttribute%3C%2Fname%3E%0A++++++%3CdisplayName%3EGroup+Member+Attribute%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+of+the+group+attribute+that+will+be+updated+with+the+distinguished+name+of+the+user+when+the+user+is+added+to+the+group.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EaccountUserNameAttributes%3C%2Fname%3E%0A++++++%3CdisplayName%3EAccount+User+Name+Attributes%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EAttribute+or+attributes+which+holds+the+account%26apos%3Bs+user+name.+They+will+be+used+when+authenticating+to+find+the+LDAP+entry+for+the+user+name+to+authenticate.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Euid%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EmodifiersNamesToFilterOut%3C%2Fname%3E%0A++++++%3CdisplayName%3EFilter+Out+Changes+By%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+names+%28DNs%29+of+directory+administrators+to+filter+from+the+changes.+Changes+with+the+attribute+%26quot%3BmodifiersName%26quot%3B+that+match+entries+in+this+list+will+be+filtered+out.+The+standard+value+is+the+administrator+name+used+by+this+adapter%2C+to+prevent+loops.+Entries+should+be+of+the+format+%26quot%3Bcn%3DDirectory+Manager%26quot%3B.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ehost%3C%2Fname%3E%0A++++++%3CdisplayName%3EHost%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+or+IP+address+of+the+host+where+the+LDAP+server+is+running.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Elocalhost%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EbaseContexts%3C%2Fname%3E%0A++++++%3CdisplayName%3EBase+Contexts%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EOne+or+more+starting+points+in+the+LDAP+tree+that+will+be+used+when+searching+the+tree.+Searches+are+performed+when+discovering+users+from+the+LDAP+server+or+when+looking+for+the+groups+of+which+a+user+is+a+member.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EremoveLogEntryObjectClassFromFilter%3C%2Fname%3E%0A++++++%3CdisplayName%3ERemove+Log+Entry+Object+Class+from+Filter%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EIf+this+property+is+set+%28the+default%29%2C+the+filter+used+to+fetch+change+log+entries+does+not+contain+the+%26quot%3BchangeLogEntry%26quot%3B+object+class%2C+expecting+that+there+are+no+entries+of+other+object+types+in+the+change+log.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Essl%3C%2Fname%3E%0A++++++%3CdisplayName%3ESSL%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESelect+the+check+box+to+connect+to+the+LDAP+server+using+SSL.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EbaseContextsToSynchronize%3C%2Fname%3E%0A++++++%3CdisplayName%3EBase+Contexts+to+Synchronize%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EOne+or+more+starting+points+in+the+LDAP+tree+that+will+be+used+to+determine+if+a+change+should+be+synchronized.+The+base+contexts+attribute+will+be+used+to+synchronize+a+change+if+this+property+is+not+set.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EaccountSearchFilter%3C%2Fname%3E%0A++++++%3CdisplayName%3ELDAP+Filter+for+Retrieving+Accounts%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EAn+optional+LDAP+filter+to+control+which+accounts+are+returned+from+the+LDAP+resource.+If+no+filter+is+specified%2C+only+accounts+that+include+all+specified+object+classes+are+returned.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Euid%3D*%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EaccountSynchronizationFilter%3C%2Fname%3E%0A++++++%3CdisplayName%3ELDAP+Filter+for+Accounts+to+Synchronize%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EAn+optional+LDAP+filter+for+the+objects+to+synchronize.+Because+the+change+log+is+for+all+objects%2C+this+filter+updates+only+objects+that+match+the+specified+filter.+If+you+specify+a+filter%2C+an+object+will+be+synchronized+only+if+it+matches+the+filter+and+includes+a+synchronized+object+class.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Efailover%3C%2Fname%3E%0A++++++%3CdisplayName%3EFailover+Servers%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EList+all+servers+that+should+be+used+for+failover+in+case+the+preferred+server+fails.+If+the+preferred+server+fails%2C+JNDI+will+connect+to+the+next+available+server+in+the+list.+List+all+servers+in+the+form+of+%26quot%3Bldap%3A%2F%2Fldap.example.com%3A389%2F%26quot%3B%2C+which+follows+the+standard+LDAP+v3+URLs+described+in+RFC+2255.+Only+the+host+and+port+parts+of+the+URL+are+relevant+in+this+setting.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordAttribute%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Attribute%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+of+the+LDAP+attribute+which+holds+the+password.+When+changing+an+user%26apos%3Bs+password%2C+the+new+password+is+set+to+this+attribute.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Euserpassword%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EvlvSortAttribute%3C%2Fname%3E%0A++++++%3CdisplayName%3EVLV+Sort+Attribute%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESpecify+the+sort+attribute+to+use+for+VLV+indexes+on+the+resource.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3ErespectResourcePasswordPolicyChangeAfterReset%3C%2Fname%3E%0A++++++%3CdisplayName%3ERespect+Resource+Password+Policy+Change-After-Reset%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EWhen+this+resource+is+specified+in+a+Login+Module+%28i.e.%2C+this+resource+is+a+pass-through+authentication+target%29+and+the+resource%26apos%3Bs+password+policy+is+configured+for+change-after-reset%2C+a+user+whose+resource+account+password+has+been+administratively+reset+will+be+required+to+change+that+password+after+successfully+authenticating.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EaccountObjectClasses%3C%2Fname%3E%0A++++++%3CdisplayName%3EAccount+Object+Classes%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+object+class+or+classes+that+will+be+used+when+creating+new+user+objects+in+the+LDAP+tree.+When+entering+more+than+one+object+class%2C+each+entry+should+be+on+its+own+line%3B+do+not+use+commas+or+semi-colons+to+separate+multiple+object+classes.+Some+object+classes+may+require+that+you+specify+all+object+classes+in+the+class+hierarchy.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Etop%3C%2Fstring%3E%0A++++++%3Cstring%3Eperson%3C%2Fstring%3E%0A++++++%3Cstring%3EorganizationalPerson%3C%2Fstring%3E%0A++++++%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EmaintainPosixGroupMembership%3C%2Fname%3E%0A++++++%3CdisplayName%3EMaintain+POSIX+Group+Membership%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EWhen+enabled+and+a+user+is+renamed+or+deleted%2C+update+any+POSIX+groups+to+which+the+user+belongs+to+reflect+the+new+name.+Otherwise%2C+the+LDAP+resource+must+maintain+referential+integrity+with+respect+to+group+membership.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordDecryptionInitializationVector%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Decryption+Initialization+Vector%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+initialization+vector+to+decrypt+passwords+with+when+performing+password+synchronization.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EreadSchema%3C%2Fname%3E%0A++++++%3CdisplayName%3ERead+Schema%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EIf+true%2C+the+connector+will+read+the+schema+from+the+server.+If+false%2C+the+connector+will+provide+a+default+schema+based+on+the+object+classes+in+the+configuration.+This+property+must+be+true+in+order+to+use+extended+object+classes.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eprincipal%3C%2Fname%3E%0A++++++%3CdisplayName%3EPrincipal%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+distinguished+name+with+which+to+authenticate+to+the+LDAP+server.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Euid%3Dadmin%2Cou%3Dsystem%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordDecryptionKey%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Decryption+Key%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+key+to+decrypt+passwords+with+when+performing+password+synchronization.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusManagementClass%3C%2Fname%3E%0A++++++%3CdisplayName%3EStatus+management+class+%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EClass+to+be+used+to+manage+enabled%2Fdisabled+status.+If+no+class+is+specified+then+identity+status+management+wont+be+possible.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Eorg.connid.bundles.ldap.commons.AttributeStatusManagement%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfilterWithOrInsteadOfAnd%3C%2Fname%3E%0A++++++%3CdisplayName%3EFilter+with+Or+Instead+of+And%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ENormally+the+the+filter+used+to+fetch+change+log+entries+is+an+and-based+filter+retrieving+an+interval+of+change+entries.+If+this+property+is+set%2C+the+filter+will+or+together+the+required+change+numbers+instead.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eboolean%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cstring%3Efalse%3C%2Fstring%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eport%3C%2Fname%3E%0A++++++%3CdisplayName%3ETCP+Port%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ETCP%2FIP+port+number+used+to+communicate+with+the+LDAP+server.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Eint%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%3E%0A++++++%3Cint%3E1389%3C%2Fint%3E%0A++++%3C%2Fvalues%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordAttributeToSynchronize%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+Attribute+to+Synchronize%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EThe+name+of+the+password+attribute+to+synchronize+when+performing+password+synchronization.%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++++%3Corder%3E0%3C%2Forder%3E%0A++++++%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalues%2F%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n+                xmlConfiguration=\"%3Cset%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EattributesToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAttributes%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20names%20of%20the%20attributes%20to%20synchronize.%20This%20ignores%20updates%20from%20the%20change%20log%20if%20they%20do%20not%20update%20any%20of%20the%20named%20attributes.%20For%20example%2C%20if%20only%20%26quot%3Bdepartment%26quot%3B%20is%20listed%2C%20then%20only%20changes%20that%20affect%20%26quot%3Bdepartment%26quot%3B%20will%20be%20processed.%20All%20other%20updates%20are%20ignored.%20If%20blank%20(the%20default)%2C%20then%20all%20changes%20are%20processed.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Ecredentials%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EPassword%20for%20the%20principal.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Esecret%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EsynchronizePasswords%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EEnable%20Password%20Synchronization%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20true%2C%20the%20connector%20will%20synchronize%20passwords.%20The%20Password%20Capture%20Plugin%20needs%20to%20be%20installed%20for%20password%20synchronization%20to%20work.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EchangeLogBlockSize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EChange%20Log%20Block%20Size%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20number%20of%20change%20log%20entries%20to%20fetch%20per%20query.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cint%3E100%3C%2Fint%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EblockSize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBlock%20Size%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20maximum%20number%20of%20accounts%20that%20can%20be%20in%20a%20block%20when%20retrieving%20accounts%20in%20blocks.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordHashAlgorithm%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Hash%20Algorithm%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIndicates%20the%20algorithm%20that%20the%20Identity%20system%20should%20use%20to%20hash%20the%20password.%20Currently%20supported%20values%20are%20SSHA%2C%20SHA%2C%20SSHA1%2C%20and%20SHA1.%20A%20blank%20value%20indicates%20that%20the%20system%20will%20not%20hash%20passwords.%20This%20will%20cause%20cleartext%20passwords%20to%20be%20stored%20in%20LDAP%20unless%20the%20LDAP%20server%20performs%20the%20hash%20(Netscape%20Directory%20Server%20and%20iPlanet%20Directory%20Server%20do).%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EchangeNumberAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EChange%20Number%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20change%20number%20attribute%20in%20the%20change%20log%20entry.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EchangeNumber%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmaintainLdapGroupMembership%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EMaintain%20LDAP%20Group%20Membership%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%20and%20a%20user%20is%20renamed%20or%20deleted%2C%20update%20any%20LDAP%20groups%20to%20which%20the%20user%20belongs%20to%20reflect%20the%20new%20name.%20Otherwise%2C%20the%20LDAP%20resource%20must%20maintain%20referential%20integrity%20with%20respect%20to%20group%20membership.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Etrue%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EusePagedResultControl%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUse%20Paged%20Result%20Control%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%2C%20the%20LDAP%20Paged%20Results%20control%20is%20preferred%20over%20the%20VLV%20control%20when%20retrieving%20accounts.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EuseBlocks%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUse%20Blocks%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20performing%20operations%20on%20large%20numbers%20of%20accounts%2C%20the%20accounts%20are%20processed%20in%20blocks%20to%20reduce%20the%20amount%20of%20memory%20used%20by%20the%20operation.%20Select%20this%20option%20to%20process%20accounts%20in%20blocks.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cboolean%3Efalse%3C%2Fboolean%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EuidAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUid%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20LDAP%20attribute%20which%20is%20mapped%20to%20the%20Uid%20attribute.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cnull%2F%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EobjectClassesToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EObject%20Classes%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20object%20classes%20to%20synchronize.%20The%20change%20log%20is%20for%20all%20objects%3B%20this%20filters%20updates%20to%20just%20the%20listed%20object%20classes.%20You%20should%20not%20list%20the%20superclasses%20of%20an%20object%20class%20unless%20you%20intend%20to%20synchronize%20objects%20with%20any%20of%20the%20superclass%20values.%20For%20example%2C%20if%20only%20%26quot%3BinetOrgPerson%26quot%3B%20objects%20should%20be%20synchronized%2C%20but%20the%20superclasses%20of%20%26quot%3BinetOrgPerson%26quot%3B%20(%26quot%3Bperson%26quot%3B%2C%20%26quot%3Borganizationalperson%26quot%3B%20and%20%26quot%3Btop%26quot%3B)%20should%20be%20filtered%20out%2C%20then%20list%20only%20%26quot%3BinetOrgPerson%26quot%3B%20here.%20All%20objects%20in%20LDAP%20are%20subclassed%20from%20%26quot%3Btop%26quot%3B.%20For%20this%20reason%2C%20you%20should%20never%20list%20%26quot%3Btop%26quot%3B%2C%20otherwise%20no%20object%20would%20be%20filtered.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3EgroupOfUniqueNames%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EgroupMemberAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EGroup%20Member%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20group%20attribute%20that%20will%20be%20updated%20with%20the%20distinguished%20name%20of%20the%20user%20when%20the%20user%20is%20added%20to%20the%20group.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountUserNameAttributes%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAccount%20User%20Name%20Attributes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAttribute%20or%20attributes%20which%20holds%20the%20account%26apos%3Bs%20user%20name.%20They%20will%20be%20used%20when%20authenticating%20to%20find%20the%20LDAP%20entry%20for%20the%20user%20name%20to%20authenticate.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EgroupNameAttributes%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EGroup%20Name%20Attributes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAttribute%20or%20attributes%20which%20holds%20the%20group%26apos%3Bs%20name.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Ecn%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmodifiersNamesToFilterOut%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFilter%20Out%20Changes%20By%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20names%20(DNs)%20of%20directory%20administrators%20to%20filter%20from%20the%20changes.%20Changes%20with%20the%20attribute%20%26quot%3BmodifiersName%26quot%3B%20that%20match%20entries%20in%20this%20list%20will%20be%20filtered%20out.%20The%20standard%20value%20is%20the%20administrator%20name%20used%20by%20this%20adapter%2C%20to%20prevent%20loops.%20Entries%20should%20be%20of%20the%20format%20%26quot%3Bcn%3DDirectory%20Manager%26quot%3B.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Ehost%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EHost%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20or%20IP%20address%20of%20the%20host%20where%20the%20LDAP%20server%20is%20running.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Elocalhost%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EbaseContexts%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBase%20Contexts%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EOne%20or%20more%20starting%20points%20in%20the%20LDAP%20tree%20that%20will%20be%20used%20when%20searching%20the%20tree.%20Searches%20are%20performed%20when%20discovering%20users%20from%20the%20LDAP%20server%20or%20when%20looking%20for%20the%20groups%20of%20which%20a%20user%20is%20a%20member.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dgroups%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EremoveLogEntryObjectClassFromFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERemove%20Log%20Entry%20Object%20Class%20from%20Filter%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20this%20property%20is%20set%20(the%20default)%2C%20the%20filter%20used%20to%20fetch%20change%20log%20entries%20does%20not%20contain%20the%20%26quot%3BchangeLogEntry%26quot%3B%20object%20class%2C%20expecting%20that%20there%20are%20no%20entries%20of%20other%20object%20types%20in%20the%20change%20log.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Essl%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ESSL%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ESelect%20the%20check%20box%20to%20connect%20to%20the%20LDAP%20server%20using%20SSL.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EbaseContextsToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBase%20Contexts%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EOne%20or%20more%20starting%20points%20in%20the%20LDAP%20tree%20that%20will%20be%20used%20to%20determine%20if%20a%20change%20should%20be%20synchronized.%20The%20base%20contexts%20attribute%20will%20be%20used%20to%20synchronize%20a%20change%20if%20this%20property%20is%20not%20set.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dgroups%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountSearchFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ELDAP%20Filter%20for%20Retrieving%20Accounts%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAn%20optional%20LDAP%20filter%20to%20control%20which%20accounts%20are%20returned%20from%20the%20LDAP%20resource.%20If%20no%20filter%20is%20specified%2C%20only%20accounts%20that%20include%20all%20specified%20object%20classes%20are%20returned.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3D*%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountSynchronizationFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ELDAP%20Filter%20for%20Accounts%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAn%20optional%20LDAP%20filter%20for%20the%20objects%20to%20synchronize.%20Because%20the%20change%20log%20is%20for%20all%20objects%2C%20this%20filter%20updates%20only%20objects%20that%20match%20the%20specified%20filter.%20If%20you%20specify%20a%20filter%2C%20an%20object%20will%20be%20synchronized%20only%20if%20it%20matches%20the%20filter%20and%20includes%20a%20synchronized%20object%20class.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Efailover%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFailover%20Servers%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EList%20all%20servers%20that%20should%20be%20used%20for%20failover%20in%20case%20the%20preferred%20server%20fails.%20If%20the%20preferred%20server%20fails%2C%20JNDI%20will%20connect%20to%20the%20next%20available%20server%20in%20the%20list.%20List%20all%20servers%20in%20the%20form%20of%20%26quot%3Bldap%3A%2F%2Fldap.example.com%3A389%2F%26quot%3B%2C%20which%20follows%20the%20standard%20LDAP%20v3%20URLs%20described%20in%20RFC%202255.%20Only%20the%20host%20and%20port%20parts%20of%20the%20URL%20are%20relevant%20in%20this%20setting.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20LDAP%20attribute%20which%20holds%20the%20password.%20When%20changing%20an%20user%26apos%3Bs%20password%2C%20the%20new%20password%20is%20set%20to%20this%20attribute.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euserpassword%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EvlvSortAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EVLV%20Sort%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ESpecify%20the%20sort%20attribute%20to%20use%20for%20VLV%20indexes%20on%20the%20resource.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3ErespectResourcePasswordPolicyChangeAfterReset%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERespect%20Resource%20Password%20Policy%20Change-After-Reset%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20this%20resource%20is%20specified%20in%20a%20Login%20Module%20(i.e.%2C%20this%20resource%20is%20a%20pass-through%20authentication%20target)%20and%20the%20resource%26apos%3Bs%20password%20policy%20is%20configured%20for%20change-after-reset%2C%20a%20user%20whose%20resource%20account%20password%20has%20been%20administratively%20reset%20will%20be%20required%20to%20change%20that%20password%20after%20successfully%20authenticating.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountObjectClasses%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAccount%20Object%20Classes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20object%20class%20or%20classes%20that%20will%20be%20used%20when%20creating%20new%20user%20objects%20in%20the%20LDAP%20tree.%20When%20entering%20more%20than%20one%20object%20class%2C%20each%20entry%20should%20be%20on%20its%20own%20line%3B%20do%20not%20use%20commas%20or%20semi-colons%20to%20separate%20multiple%20object%20classes.%20Some%20object%20classes%20may%20require%20that%20you%20specify%20all%20object%20classes%20in%20the%20class%20hierarchy.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmaintainPosixGroupMembership%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EMaintain%20POSIX%20Group%20Membership%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%20and%20a%20user%20is%20renamed%20or%20deleted%2C%20update%20any%20POSIX%20groups%20to%20which%20the%20user%20belongs%20to%20reflect%20the%20new%20name.%20Otherwise%2C%20the%20LDAP%20resource%20must%20maintain%20referential%20integrity%20with%20respect%20to%20group%20membership.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EtruemaintainLdapGroupMembership%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordDecryptionInitializationVector%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Decryption%20Initialization%20Vector%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20initialization%20vector%20to%20decrypt%20passwords%20with%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EreadSchema%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERead%20Schema%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20true%2C%20the%20connector%20will%20read%20the%20schema%20from%20the%20server.%20If%20false%2C%20the%20connector%20will%20provide%20a%20default%20schema%20based%20on%20the%20object%20classes%20in%20the%20configuration.%20This%20property%20must%20be%20true%20in%20order%20to%20use%20extended%20object%20classes.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Eprincipal%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPrincipal%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20distinguished%20name%20with%20which%20to%20authenticate%20to%20the%20LDAP%20server.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3Dadmin%2Cou%3Dsystem%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordDecryptionKey%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Decryption%20Key%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20key%20to%20decrypt%20passwords%20with%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EstatusManagementClass%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EStatus%20management%20class%20%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EClass%20to%20be%20used%20to%20manage%20enabled%2Fdisabled%20status.%20If%20no%20class%20is%20specified%20then%20identity%20status%20management%20wont%20be%20possible.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eorg.connid.bundles.ldap.commons.AttributeStatusManagement%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EfilterWithOrInsteadOfAnd%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFilter%20with%20Or%20Instead%20of%20And%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ENormally%20the%20the%20filter%20used%20to%20fetch%20change%20log%20entries%20is%20an%20and-based%20filter%20retrieving%20an%20interval%20of%20change%20entries.%20If%20this%20property%20is%20set%2C%20the%20filter%20will%20or%20together%20the%20required%20change%20numbers%20instead.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Eport%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ETCP%20Port%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ETCP%2FIP%20port%20number%20used%20to%20communicate%20with%20the%20LDAP%20server.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cint%3E1389%3C%2Fint%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordAttributeToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Attribute%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20password%20attribute%20to%20synchronize%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_UPDATE\"/>\n@@ -402,7 +402,7 @@ under the License.\n \n   <UMapping id=\"15\" resource_name=\"ws-target-resource-1\"/>\n   <UMappingItem id=\"99\" mapping_id=\"15\" extAttrName=\"__NAME__\"\n-                intMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n+                intMappingType=\"UserId\" mandatoryCondition=\"true\"\n                 accountid=\"1\" password=\"0\"/>\n   <UMappingItem id=\"100\" extAttrName=\"email\" mapping_id=\"15\"\n                 intAttrName=\"email\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n@@ -557,7 +557,18 @@ under the License.\n   <UMappingItem id=\"317\" accountid=\"0\" password=\"0\" mapping_id=\"11\"\n                 extAttrName=\"postalAddress\" intAttrName=\"postalAddress\" intMappingType=\"MembershipSchema\"\n                 mandatoryCondition=\"false\"/>\n-\n+  <RMapping id=\"1\" resource_name=\"resource-ldap\"\n+            accountlink=\"&apos;cn=&apos; + name + &apos;,ou=groups,o=isp&apos;\"/>\n+  <RMappingItem id=\"1\" accountid=\"1\" password=\"0\" mapping_id=\"1\"\n+                extAttrName=\"__NAME__\" intAttrName=\"roleName\" intMappingType=\"RoleName\"\n+                mandatoryCondition=\"true\"/>\n+  <!--<RMappingItem id=\"2\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n+                extAttrName=\"owner\" intAttrName=\"roleOwnerDN\" intMappingType=\"RoleDerSchema\"\n+                mandatoryCondition=\"false\"/>-->\n+  <RMappingItem id=\"3\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n+                extAttrName=\"description\" intAttrName=\"title\" intMappingType=\"RoleSchema\"\n+                mandatoryCondition=\"false\"/>\n+      \n   <UMapping id=\"16\" resource_name=\"resource-db-sync\"/>\n   <UMappingItem id=\"321\" accountid=\"0\" mapping_id=\"16\"\n                 extAttrName=\"EMAIL\" intAttrName=\"email\" intMappingType=\"UserSchema\" \n@@ -579,21 +590,21 @@ under the License.\n                 mandatoryCondition=\"false\" password=\"0\"/>\n               \n   <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n+        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n   <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"2\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n+        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"3\" propagationMode=\"TWO_PHASES\" propagationOperation=\"DELETE\"\n-        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n+        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <Task DTYPE=\"SyncTask\" id=\"4\" name=\"CSV Task\" resource_name=\"resource-csv\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n         jobClassName=\"org.apache.syncope.core.sync.SyncJob\"/>\n   <Task DTYPE=\"SchedTask\" id=\"5\" name=\"SampleJob Task\" jobClassName=\"org.apache.syncope.core.quartz.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n-        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" syncopeUser_id=\"1\"\n+        objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n   <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\""},{"sha":"6514059a9cb4a86aa79786409d18d437866392b3","filename":"pom.xml","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4816f3ebb45670e55a88acb391184e07b2242753/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4816f3ebb45670e55a88acb391184e07b2242753/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=4816f3ebb45670e55a88acb391184e07b2242753","patch":"@@ -257,7 +257,7 @@ under the License.\n     <connid.soap.version>1.2.3</connid.soap.version>\n     <connid.db.table.version>2.1.4</connid.db.table.version>\n     <connid.csvdir.version>0.5</connid.csvdir.version>\n-    <connid.ldap.version>1.3.3</connid.ldap.version>\n+    <connid.ldap.version>1.3.4-SNAPSHOT</connid.ldap.version>\n \n     <commons-jexl.version>2.1.1</commons-jexl.version>\n     <commons-lang.version>2.6</commons-lang.version>\n@@ -737,6 +737,15 @@ under the License.\n       <id>activiti</id>\n       <url>https://artifacts.alfresco.com/nexus/content/groups/public/</url>\n     </repository>\n+    \n+    <!-- TMP for SNAPSHOT ConnId LDAP bundle -->\n+    <repository>\n+      <id>sonatype-oss-public</id>\n+      <url>https://oss.sonatype.org/content/groups/public/</url>\n+      <snapshots>\n+        <enabled>true</enabled>\n+      </snapshots>\n+    </repository>\n \n   </repositories>\n \n@@ -887,7 +896,7 @@ under the License.\n         <plugin>\n           <groupId>org.codehaus.cargo</groupId>\n           <artifactId>cargo-maven2-plugin</artifactId>\n-          <version>1.3.0</version>\n+          <version>1.3.1</version>\n           <configuration>\n             <container>\n               <containerId>tomcat7x</containerId>"}]}