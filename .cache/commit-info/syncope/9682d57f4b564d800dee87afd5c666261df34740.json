{"sha":"9682d57f4b564d800dee87afd5c666261df34740","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2ODJkNTdmNGI1NjRkODAwZGVlODdhZmQ1YzY2NjI2MWRmMzQ3NDA=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-26T17:39:22Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-26T17:39:22Z"},"message":"profides the first draft of bulk actions management; still working on refreshes and association/deassociation operations","tree":{"sha":"2cc67b4b80c292cfdbf0f0556b4998ab6f3223c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2cc67b4b80c292cfdbf0f0556b4998ab6f3223c1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9682d57f4b564d800dee87afd5c666261df34740","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9682d57f4b564d800dee87afd5c666261df34740","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9682d57f4b564d800dee87afd5c666261df34740","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9682d57f4b564d800dee87afd5c666261df34740/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2c8815aba5e75212e495e2bfd97aed0ebf7de458","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c8815aba5e75212e495e2bfd97aed0ebf7de458","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2c8815aba5e75212e495e2bfd97aed0ebf7de458"}],"stats":{"total":2702,"additions":1134,"deletions":1568},"files":[{"sha":"9aeb19758b9a34ea0a547637a4049ea4fdcae8c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkActionModal.java","status":"renamed","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -16,20 +16,33 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.pages;\n+package org.apache.syncope.client.console.bulk;\n \n import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n \n-public class AbstractStatusModalPage<T extends Serializable> extends AbstractModalPanel<T> {\n+public class BulkActionModal<T extends Serializable, S> extends AbstractModalPanel<T> {\n \n-    private static final long serialVersionUID = 6633408683036028540L;\n+    private static final long serialVersionUID = 4114026480146090962L;\n+\n+    public BulkActionModal(\n+            final BaseModal<T> modal,\n+            final PageReference pageRef,\n+            final Collection<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Collection<ActionLink.ActionType> actions,\n+            final BaseRestClient bulkActionExecutor,\n+            final String keyFieldName) {\n \n-    public AbstractStatusModalPage(final BaseModal<T> modal, final PageReference pageRef) {\n         super(modal, pageRef);\n-        add(new Fragment(\"pwdMgtFields\", \"emptyFragment\", this));\n+        add(new BulkContent<T, S>(\"content\", modal, pageRef, items, columns, actions, bulkActionExecutor, keyFieldName).\n+                setRenderBodyOnly(true));\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractStatusModalPage.java"},{"sha":"9a3e7d8e62558fa60d456c786045d61062ad3c0b","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"added","additions":242,"deletions":0,"changes":242,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,242 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.bulk;\n+\n+import static org.apache.syncope.client.console.panels.MultilevelPanel.SECOND_LEVEL_ID;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionResultColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n+import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+\n+public class BulkContent<T extends Serializable, S> extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = 4114026480146090963L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(BulkContent.class);\n+\n+    public BulkContent(\n+            final PageReference pageRef,\n+            final Collection<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Collection<ActionLink.ActionType> actions,\n+            final BaseRestClient bulkActionExecutor,\n+            final String keyFieldName) {\n+        this(SECOND_LEVEL_ID, null, pageRef, items, columns, actions, bulkActionExecutor, keyFieldName);\n+    }\n+\n+    public BulkContent(\n+            final String id,\n+            final BaseModal<T> modal,\n+            final PageReference pageRef,\n+            final Collection<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Collection<ActionLink.ActionType> actions,\n+            final BaseRestClient bulkActionExecutor,\n+            final String keyFieldName) {\n+\n+        super(id);\n+\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n+\n+            private static final long serialVersionUID = 5291903859908641954L;\n+\n+            @Override\n+            public Iterator<? extends T> iterator(final long first, final long count) {\n+                return items.iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return items.size();\n+            }\n+\n+            @Override\n+            public IModel<T> model(final T object) {\n+                return new CompoundPropertyModel<>(object);\n+            }\n+        };\n+\n+        container.add(new AjaxFallbackDefaultDataTable<>(\n+                \"selectedObjects\",\n+                columns,\n+                dataProvider,\n+                Integer.MAX_VALUE).setMarkupId(\"selectedObjects\").setVisible(items != null && !items.isEmpty()));\n+\n+        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n+        container.add(actionPanel);\n+\n+        for (ActionLink.ActionType action : actions) {\n+            final ActionType actionToBeAddresed = action;\n+\n+            actionPanel.add(new ActionLink<Serializable>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                    try {\n+                        BulkActionResult res = null;\n+                        try {\n+                            final BulkAction bulkAction = new BulkAction();\n+                            bulkAction.setType(BulkAction.Type.valueOf(actionToBeAddresed.name()));\n+                            for (T item : items) {\n+                                try {\n+                                    bulkAction.getTargets().add(getTargetId(item, keyFieldName).toString());\n+                                } catch (IllegalAccessException | InvocationTargetException e) {\n+                                    LOG.error(\"Error retrieving item id {}\", keyFieldName, e);\n+                                }\n+                            }\n+                            res = BulkActionResult.class.cast(\n+                                    bulkActionExecutor.getClass().getMethod(\"bulkAction\", BulkAction.class).invoke(\n+                                    bulkActionExecutor, bulkAction));\n+                        } catch (IllegalArgumentException biae) {\n+                            if (!(bulkActionExecutor instanceof AbstractAnyRestClient)) {\n+                                throw new IllegalArgumentException(\"Invalid bulk action executor\");\n+                            }\n+\n+                            final AbstractAnyRestClient<?> anyRestClient\n+                                    = AbstractAnyRestClient.class.cast(bulkActionExecutor);\n+\n+                            if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {\n+                                throw new IllegalArgumentException(\"Invalid items\");\n+                            }\n+\n+                            // Group bean information by anyKey\n+                            final Map<Long, List<StatusBean>> beans = new HashMap<>();\n+                            for (T bean : items) {\n+                                final StatusBean sb = StatusBean.class.cast(bean);\n+                                final List<StatusBean> sblist;\n+                                if (beans.containsKey(sb.getAnyKey())) {\n+                                    sblist = beans.get(sb.getAnyKey());\n+                                } else {\n+                                    sblist = new ArrayList<>();\n+                                    beans.put(sb.getAnyKey(), sblist);\n+                                }\n+                                sblist.add(sb);\n+                            }\n+\n+                            for (Map.Entry<Long, List<StatusBean>> entry : beans.entrySet()) {\n+                                final String etag = anyRestClient.read(entry.getKey()).getETagValue();\n+                                try {\n+                                    switch (ResourceDeassociationAction.valueOf(actionToBeAddresed.name())) {\n+                                        case DEPROVISION:\n+                                            res = anyRestClient.deprovision(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        case UNASSIGN:\n+                                            res = anyRestClient.unassign(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        case UNLINK:\n+                                            res = anyRestClient.unlink(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        default:\n+                                            break;\n+                                    }\n+                                } catch (IllegalArgumentException diae) {\n+                                    switch (ResourceAssociationAction.valueOf(actionToBeAddresed.name())) {\n+                                        case ASSIGN:\n+                                            res = anyRestClient.assign(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        case LINK:\n+                                            res = anyRestClient.link(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        case PROVISION:\n+                                            res = anyRestClient.provision(etag, entry.getKey(), entry.getValue());\n+                                            break;\n+                                        default:\n+                                            break;\n+                                    }\n+                                }\n+                            }\n+                        }\n+\n+                        if (modal != null) {\n+                            modal.changeCloseButtonLabel(getString(\"close\", null, \"Close\"), target);\n+\n+                        }\n+\n+                        final List<IColumn<T, S>> newColumnList = new ArrayList<>(columns);\n+                        newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(res, keyFieldName));\n+\n+                        container.addOrReplace(new AjaxFallbackDefaultDataTable<>(\n+                                \"selectedObjects\",\n+                                newColumnList,\n+                                dataProvider,\n+                                Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n+\n+                        actionPanel.setEnabled(false);\n+                        actionPanel.setVisible(false);\n+                        target.add(container);\n+                        target.add(actionPanel);\n+\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n+                    } catch (NoSuchMethodException | SecurityException | IllegalAccessException\n+                            | IllegalArgumentException | InvocationTargetException e) {\n+                        LOG.error(\"Bulk action failure\", e);\n+                        error(getString(Constants.ERROR)\n+                                + \": Operation \" + actionToBeAddresed.getActionId() + \" not supported\");\n+                    }\n+                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                }\n+            }, action, StandardEntitlement.CONFIGURATION_LIST, !items.isEmpty());\n+        }\n+    }\n+\n+    private Object getTargetId(final Object target, final String idFieldName)\n+            throws IllegalAccessException, InvocationTargetException {\n+\n+        return BeanUtils.getPropertyDescriptor(target.getClass(), idFieldName).\n+                getReadMethod().invoke(target, new Object[0]);\n+    }\n+}"},{"sha":"b9823ca846cc3d3d842638d6665dfc643e678d15","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -124,6 +124,8 @@ public final class Constants {\n \n     public static final String PREF_ANY_OBJECT_DER_ATTRS_VIEW = \"anyobject.%s.der.attrs.view\";\n \n+    public static final String CREATED_ICON = \"glyphicon glyphicon-ok-circle\";\n+\n     public static final String SUSPENDED_ICON = \"glyphicon glyphicon-ban-circle\";\n \n     public static final String ACTIVE_ICON = \"glyphicon glyphicon-ok-circle\";"},{"sha":"22e948b773d8f7b864a761070d5cd77d30b52d1a","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -21,19 +21,20 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n \n-public abstract class AbstractStatusBeanProvider extends SortableDataProvider<StatusBean, String> {\n+public abstract class AbstractStatusBeanProvider extends SearchableDataProvider<StatusBean> {\n \n     private static final long serialVersionUID = 4287357360778016173L;\n \n-    private SortableDataProviderComparator<StatusBean> comparator;\n+    private final SortableDataProviderComparator<StatusBean> comparator;\n \n     public AbstractStatusBeanProvider(final String sort) {\n+        super(10);\n         //Default sorting\n         setSort(sort, SortOrder.ASCENDING);\n         comparator = new SortableDataProviderComparator<>(this);"},{"sha":"d2315b0911a057813f0264856ed40f799553e617","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":32,"deletions":69,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -24,20 +24,19 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.ImagePanel;\n+import org.apache.syncope.client.console.panels.LabelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.request.resource.ContextRelativeResource;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -178,105 +177,69 @@ public static StatusPatch buildStatusPatch(final Collection<StatusBean> statuses\n         return statusPatch;\n     }\n \n-    public Image getStatusImage(final String componentId, final Status status) {\n-        final String alt, title, statusName;\n+    public static Panel getStatusImagePanel(final String componentId, final Status status) {\n+        return new LabelPanel(componentId, getStatusImage(\"label\", status));\n+    }\n+\n+    public static Label getStatusImage(final String componentId, final Status status) {\n+        final String alt, title, clazz;\n \n         switch (status) {\n \n             case NOT_YET_SUBMITTED:\n-                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Not yet submitted\";\n+                clazz = Constants.UNDEFINED_ICON;\n                 break;\n \n             case ACTIVE:\n-                statusName = Status.ACTIVE.toString();\n                 alt = \"active icon\";\n                 title = \"Enabled\";\n+                clazz = Constants.ACTIVE_ICON;\n                 break;\n \n             case UNDEFINED:\n-                statusName = Status.UNDEFINED.toString();\n                 alt = \"undefined icon\";\n                 title = \"Undefined status\";\n+                clazz = Constants.UNDEFINED_ICON;\n                 break;\n \n             case OBJECT_NOT_FOUND:\n-                statusName = Status.OBJECT_NOT_FOUND.toString();\n                 alt = \"notfound icon\";\n                 title = \"Not found\";\n+                clazz = Constants.NOT_FOUND_ICON;\n                 break;\n \n-            default:\n-                statusName = Status.SUSPENDED.toString();\n-                alt = \"inactive icon\";\n-                title = \"Disabled\";\n-        }\n-\n-        final Image img = new Image(componentId,\n-                new ContextRelativeResource(IMG_PREFIX + statusName + Constants.PNG_EXT));\n-        img.add(new Behavior() {\n-\n-            private static final long serialVersionUID = 1469628524240283489L;\n-\n-            @Override\n-            public void onComponentTag(final Component component, final ComponentTag tag) {\n-                tag.put(\"alt\", alt);\n-                tag.put(\"title\", title);\n-            }\n-        });\n-\n-        return img;\n-    }\n-\n-    public ImagePanel getStatusImagePanel(final String componentId, final Status status) {\n-        final String alt, title, statusName;\n-\n-        switch (status) {\n-\n-            case NOT_YET_SUBMITTED:\n-                statusName = Status.UNDEFINED.toString();\n-                alt = \"undefined icon\";\n-                title = \"Not yet submitted\";\n-                break;\n-\n-            case ACTIVE:\n-                statusName = Status.ACTIVE.toString();\n-                alt = \"active icon\";\n-                title = \"Enabled\";\n-                break;\n-\n-            case UNDEFINED:\n-                statusName = Status.UNDEFINED.toString();\n-                alt = \"undefined icon\";\n-                title = \"Undefined status\";\n+            case CREATED:\n+                alt = \"created icon\";\n+                title = \"Created\";\n+                clazz = Constants.UNDEFINED_ICON;\n                 break;\n \n-            case OBJECT_NOT_FOUND:\n-                statusName = Status.OBJECT_NOT_FOUND.toString();\n-                alt = \"notfound icon\";\n-                title = \"Not found\";\n+            case SUSPENDED:\n+                alt = \"inactive icon\";\n+                title = \"Disabled\";\n+                clazz = Constants.SUSPENDED_ICON;\n                 break;\n \n             default:\n-                statusName = Status.SUSPENDED.toString();\n-                alt = \"inactive icon\";\n-                title = \"Disabled\";\n+                alt = StringUtils.EMPTY;\n+                title = StringUtils.EMPTY;\n+                clazz = StringUtils.EMPTY;\n+                break;\n         }\n \n-        final ImagePanel imagePanel = new ImagePanel(componentId,\n-                new ContextRelativeResource(IMG_PREFIX + statusName + Constants.PNG_EXT));\n-        imagePanel.add(new Behavior() {\n+        return new Label(componentId, StringUtils.EMPTY) {\n \n-            private static final long serialVersionUID = 1469628524240283489L;\n+            private static final long serialVersionUID = 4755868673082976208L;\n \n             @Override\n-            public void onComponentTag(final Component component, final ComponentTag tag) {\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n                 tag.put(\"alt\", alt);\n                 tag.put(\"title\", title);\n+                tag.put(\"class\", clazz);\n             }\n-        });\n-\n-        return imagePanel;\n+        };\n     }\n }"},{"sha":"d2d22fbe4ade3a07c8928949ba07663c9a7d6caa","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"removed","additions":0,"deletions":174,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,174 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.pages;\n-\n-import java.io.Serializable;\n-import java.lang.reflect.InvocationTargetException;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.common.lib.to.BulkAction;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.springframework.beans.BeanUtils;\n-\n-public class BulkActionModalPage<T extends Serializable, S> extends AbstractModalPanel<T> {\n-\n-    private static final long serialVersionUID = 4114026480146090962L;\n-\n-    private final String pageId = \"Any\";\n-\n-    public BulkActionModalPage(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final Collection<T> items,\n-            final List<IColumn<T, S>> columns,\n-            final Collection<ActionLink.ActionType> actions,\n-            final BaseRestClient bulkActionExecutor,\n-            final String keyFieldName) {\n-\n-        super(modal, pageRef);\n-\n-        final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n-\n-            private static final long serialVersionUID = 5291903859908641954L;\n-\n-            @Override\n-            public Iterator<? extends T> iterator(final long first, final long count) {\n-                return items.iterator();\n-            }\n-\n-            @Override\n-            public long size() {\n-                return items.size();\n-            }\n-\n-            @Override\n-            public IModel<T> model(final T object) {\n-                return new CompoundPropertyModel<>(object);\n-            }\n-        };\n-\n-        add(new AjaxFallbackDefaultDataTable<>(\n-                \"selectedObjects\",\n-                new ArrayList<>(columns.subList(1, columns.size() - 1)),\n-                dataProvider,\n-                Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n-\n-        @SuppressWarnings(\"rawtypes\")\n-        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n-        add(actionPanel);\n-\n-        for (ActionLink.ActionType action : actions) {\n-            final BulkAction bulkAction = new BulkAction();\n-            for (T item : items) {\n-                try {\n-                    bulkAction.getTargets().add(getTargetId(item, keyFieldName).toString());\n-                } catch (IllegalAccessException | InvocationTargetException e) {\n-                    LOG.error(\"Error retrieving item id {}\", keyFieldName, e);\n-                }\n-            }\n-\n-            switch (action) {\n-                case DELETE:\n-                    bulkAction.setType(BulkAction.Type.DELETE);\n-                    break;\n-                case SUSPEND:\n-                    bulkAction.setType(BulkAction.Type.SUSPEND);\n-                    break;\n-                case REACTIVATE:\n-                    bulkAction.setType(BulkAction.Type.REACTIVATE);\n-                    break;\n-                case EXECUTE:\n-                    bulkAction.setType(BulkAction.Type.EXECUTE);\n-                    break;\n-                case DRYRUN:\n-                    bulkAction.setType(BulkAction.Type.DRYRUN);\n-                    break;\n-                default:\n-                    LOG.error(\"Bulk action type not supported\");\n-            }\n-\n-            actionPanel.add(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        final BulkActionResult res = (BulkActionResult) bulkActionExecutor.getClass().\n-                                getMethod(\"bulkAction\", BulkAction.class).invoke(bulkActionExecutor, bulkAction);\n-\n-                        modal.setContent(new BulkActionResultModalPage<>(\n-                                modal, pageRef, items, columns, res, keyFieldName));\n-                        target.add(modal);\n-                    } catch (NoSuchMethodException | SecurityException | IllegalAccessException \n-                            | IllegalArgumentException | InvocationTargetException e) {\n-                        error(getString(Constants.ERROR)\n-                                + \": Operation \" + bulkAction.getType() + \" not supported\");\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                    }\n-\n-                }\n-            }, action, pageId, !items.isEmpty());\n-        }\n-\n-        final Form<Void> form = new Form<>(FORM);\n-        add(form);\n-\n-        final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n-\n-            private static final long serialVersionUID = -958724007591692537L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                modal.close(target);\n-            }\n-\n-        };\n-\n-        cancel.setDefaultFormProcessing(false);\n-        form.add(cancel);\n-    }\n-\n-    private Object getTargetId(final Object target, final String idFieldName)\n-            throws IllegalAccessException, InvocationTargetException {\n-\n-        return BeanUtils.getPropertyDescriptor(target.getClass(), idFieldName).\n-                getReadMethod().invoke(target, new Object[0]);\n-    }\n-}"},{"sha":"aa6a63e33af3fd16f1f775764421681d17ca475c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionResultModalPage.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.pages;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionResultColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-\n-/**\n- * Show user or group status after performing a successful operation.\n- *\n- * @param <E> type of the inner model object\n- */\n-public class BulkActionResultModalPage<E extends Serializable> extends AbstractModalPanel<E> {\n-\n-    private static final long serialVersionUID = 2646115294319713724L;\n-\n-    public <T extends Serializable, S> BulkActionResultModalPage(\n-            final BaseModal<E> modal,\n-            final PageReference pageRef,\n-            final Collection<T> items,\n-            final List<IColumn<T, S>> columns,\n-            final BulkActionResult results,\n-            final String keyFieldName) {\n-\n-        super(modal, pageRef);\n-\n-        final List<IColumn<T, S>> newColumnList = new ArrayList<>(columns.subList(1, columns.size() - 1));\n-        newColumnList.add(newColumnList.size(), new ActionResultColumn<T, S>(results, keyFieldName));\n-\n-        final SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n-\n-            private static final long serialVersionUID = 5291903859908641954L;\n-\n-            @Override\n-            public Iterator<? extends T> iterator(final long first, final long count) {\n-                return items.iterator();\n-            }\n-\n-            @Override\n-            public long size() {\n-                return items.size();\n-            }\n-\n-            @Override\n-            public IModel<T> model(final T object) {\n-                return new CompoundPropertyModel<>(object);\n-            }\n-        };\n-\n-        add(new AjaxFallbackDefaultDataTable<>(\n-                \"selectedObjects\",\n-                newColumnList,\n-                dataProvider,\n-                Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n-\n-        final AjaxLink<Void> close = new IndicatingAjaxLink<Void>(\"close\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                modal.close(target);\n-            }\n-        };\n-\n-        add(close);\n-    }\n-}"},{"sha":"d10ced54d286089cc244979add74f24886226847","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModal.java","status":"removed","additions":0,"deletions":642,"changes":642,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,642 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.pages;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n-import org.apache.syncope.client.console.commons.status.Status;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n-import org.apache.syncope.client.console.panels.ActionDataTablePanel;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.PasswordTextField;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public class StatusModal<T extends Serializable> extends AbstractStatusModalPage<T> {\n-\n-    private static final long serialVersionUID = -9148734710505211261L;\n-\n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n-\n-    private final AnyTO anyTO;\n-\n-    private int rowsPerPage = 10;\n-\n-    private final StatusUtils statusUtils;\n-\n-    private final boolean statusOnly;\n-\n-    // --------------------------------\n-    // password management fields ..\n-    // --------------------------------\n-    private final IndicatingAjaxButton cancel;\n-\n-    private final WebMarkupContainer pwdMgt;\n-\n-    private final Form<?> pwdMgtForm;\n-\n-    private final AjaxCheckBoxPanel changepwd;\n-\n-    private final PasswordTextField password;\n-\n-    private final PasswordTextField confirm;\n-    // --------------------------------\n-\n-    private final ActionDataTablePanel<StatusBean, String> table;\n-\n-    private final List<IColumn<StatusBean, String>> columns;\n-\n-    public StatusModal(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final AnyTO anyTO) {\n-\n-        this(modal, pageRef, anyTO, false);\n-    }\n-\n-    public StatusModal(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final AnyTO anyTO,\n-            final boolean statusOnly) {\n-\n-        super(modal, pageRef);\n-\n-        this.statusOnly = statusOnly;\n-        this.anyTO = anyTO;\n-\n-        statusUtils = new StatusUtils(anyTO instanceof UserTO ? userRestClient : groupRestClient);\n-\n-        add(new Label(\"displayName\", anyTO.getKey() + \" \"\n-                + (anyTO instanceof UserTO ? ((UserTO) anyTO).getUsername() : ((GroupTO) anyTO).getName())));\n-\n-        columns = new ArrayList<>();\n-        columns.add(new AbstractColumn<StatusBean, String>(\n-                new StringResourceModel(\"resourceName\", this, null), \"resourceName\") {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n-\n-                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n-\n-                    private static final long serialVersionUID = 8432079838783825801L;\n-\n-                    @Override\n-                    protected void onComponentTag(final ComponentTag tag) {\n-                        if (model.getObject().isLinked()) {\n-                            super.onComponentTag(tag);\n-                        } else {\n-                            tag.put(\"style\", \"color: #DDDDDD\");\n-                        }\n-                    }\n-                });\n-            }\n-        });\n-\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"connObjectLink\", this, null), \"connObjectLink\", \"connObjectLink\"));\n-\n-        columns.add(new AbstractColumn<StatusBean, String>(\n-                new StringResourceModel(\"status\", this, null)) {\n-\n-            private static final long serialVersionUID = -3503023501954863131L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n-\n-                if (model.getObject().isLinked()) {\n-                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n-                            getStatus()));\n-                } else {\n-                    cellItem.add(new Label(componentId, \"\"));\n-                }\n-            }\n-        });\n-\n-        table = new ActionDataTablePanel<StatusBean, String>(\n-                \"resourceDatatable\",\n-                columns,\n-                (ISortableDataProvider<StatusBean, String>) new AttributableStatusProvider(),\n-                rowsPerPage,\n-                pageRef) {\n-\n-            private static final long serialVersionUID = 6510391461033818316L;\n-\n-            @Override\n-            public boolean isElementEnabled(final StatusBean element) {\n-                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n-            }\n-        };\n-        table.setOutputMarkupId(true);\n-\n-        final String pageId = anyTO instanceof GroupTO ? \"Groups\" : \"Users\";\n-\n-        final Fragment pwdMgtFragment = new Fragment(\"pwdMgtFields\", \"pwdMgtFragment\", this);\n-        addOrReplace(pwdMgtFragment);\n-\n-        pwdMgt = new WebMarkupContainer(\"pwdMgt\");\n-        pwdMgtFragment.add(pwdMgt.setOutputMarkupId(true));\n-\n-        pwdMgtForm = new Form<>(\"pwdMgtForm\");\n-        pwdMgtForm.setVisible(false).setEnabled(false);\n-        pwdMgt.add(pwdMgtForm);\n-\n-        password = new PasswordTextField(\"password\", new Model<String>());\n-        pwdMgtForm.add(password.setRequired(false).setEnabled(false));\n-\n-        confirm = new PasswordTextField(\"confirm\", new Model<String>());\n-        pwdMgtForm.add(confirm.setRequired(false).setEnabled(false));\n-\n-        changepwd = new AjaxCheckBoxPanel(\"changepwd\", \"changepwd\", new Model<>(false));\n-        pwdMgtForm.add(changepwd.setModelObject(false));\n-        pwdMgtForm.add(new Label(\"changePwdLabel\", new ResourceModel(\"changePwdLabel\", \"Password propagation\")));\n-\n-        changepwd.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                password.setEnabled(changepwd.getModelObject());\n-                confirm.setEnabled(changepwd.getModelObject());\n-                target.add(pwdMgt);\n-            }\n-        });\n-\n-        cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n-\n-            private static final long serialVersionUID = -2341391430136818026L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                // ignore\n-                modal.close(target);\n-            }\n-        };\n-\n-        pwdMgtForm.add(cancel);\n-\n-        final IndicatingAjaxButton goon = new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\")) {\n-\n-            private static final long serialVersionUID = -2341391430136818027L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                // none\n-            }\n-        };\n-\n-        pwdMgtForm.add(goon);\n-\n-        if (statusOnly) {\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        userRestClient.reactivate(\n-                                anyTO.getETagValue(),\n-                                anyTO.getKey(),\n-                                new ArrayList<>(table.getModelObject()));\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        modal.close(target);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error enabling resources\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    }\n-                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                }\n-            }, ActionLink.ActionType.REACTIVATE, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        userRestClient.suspend(\n-                                anyTO.getETagValue(),\n-                                anyTO.getKey(),\n-                                new ArrayList<>(table.getModelObject()));\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        modal.close(target);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error disabling resources\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    }\n-                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                }\n-            }, ActionLink.ActionType.SUSPEND, pageId);\n-        } else {\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        if (anyTO instanceof UserTO) {\n-                            userRestClient.unlink(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        } else {\n-                            groupRestClient.unlink(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        modal.close(target);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error unlinking resources\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    }\n-                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                }\n-            }, ActionLink.ActionType.UNLINK, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        if (anyTO instanceof UserTO) {\n-                            userRestClient.link(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        } else {\n-                            groupRestClient.link(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        modal.close(target);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error linking resources\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                    }\n-                }\n-            }, ActionLink.ActionType.LINK, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        BulkActionResult bulkActionResult;\n-                        if (anyTO instanceof UserTO) {\n-                            bulkActionResult = userRestClient.deprovision(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        } else {\n-                            bulkActionResult = groupRestClient.deprovision(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error de-provisioning user\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                    }\n-\n-                }\n-            }, ActionLink.ActionType.DEPROVISION, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-\n-                    if (anyTO instanceof UserTO) {\n-                        StatusModal.this.passwordManagement(\n-                                target, ResourceAssociationAction.PROVISION, table.getModelObject());\n-                    } else {\n-                        try {\n-                            final BulkActionResult bulkActionResult = groupRestClient.provision(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n-                        } catch (Exception e) {\n-                            LOG.error(\"Error provisioning user\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                        }\n-                    }\n-                }\n-            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.PROVISION, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    try {\n-                        final BulkActionResult bulkActionResult;\n-                        if (anyTO instanceof UserTO) {\n-                            bulkActionResult = userRestClient.unassign(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        } else {\n-                            bulkActionResult = groupRestClient.unassign(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-                        }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error unassigning resources\", e);\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                    }\n-                }\n-            }, ActionLink.ActionType.UNASSIGN, pageId);\n-\n-            table.addAction(new ActionLink<Serializable>() {\n-\n-                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                    if (anyTO instanceof UserTO) {\n-                        StatusModal.this.passwordManagement(\n-                                target, ResourceAssociationAction.ASSIGN, table.getModelObject());\n-                    } else {\n-                        try {\n-                            final BulkActionResult bulkActionResult = groupRestClient.assign(\n-                                    anyTO.getETagValue(),\n-                                    anyTO.getKey(),\n-                                    new ArrayList<>(table.getModelObject()));\n-\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            loadBulkActionResultPage(target, table.getModelObject(), bulkActionResult);\n-                        } catch (Exception e) {\n-                            LOG.error(\"Error assigning resources\", e);\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                        }\n-                    }\n-                }\n-            }.feedbackPanelAutomaticReload(!(anyTO instanceof UserTO)), ActionLink.ActionType.ASSIGN, pageId);\n-        }\n-\n-        table.addCancelButton(modal);\n-        add(table);\n-    }\n-\n-    private class AttributableStatusProvider extends AbstractStatusBeanProvider {\n-\n-        private static final long serialVersionUID = 4586969457669796621L;\n-\n-        AttributableStatusProvider() {\n-            super(statusOnly ? \"resourceName\" : \"connObjectLink\");\n-        }\n-\n-        @SuppressWarnings(\"unchecked\")\n-        @Override\n-        public List<StatusBean> getStatusBeans() {\n-            final List<String> resources = new ArrayList<>();\n-            for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n-                resources.add(resourceTO.getKey());\n-            }\n-\n-            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(anyTO);\n-\n-            final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n-\n-            for (ConnObjectWrapper entry : connObjects) {\n-                final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n-                        entry.getResourceName(),\n-                        entry.getConnObjectTO(),\n-                        anyTO instanceof GroupTO);\n-\n-                statusBeans.add(statusBean);\n-                resources.remove(entry.getResourceName());\n-            }\n-\n-            if (statusOnly) {\n-                final StatusBean syncope = new StatusBean(anyTO, \"Syncope\");\n-\n-                syncope.setConnObjectLink(((UserTO) anyTO).getUsername());\n-\n-                Status syncopeStatus = Status.UNDEFINED;\n-                if (((UserTO) anyTO).getStatus() != null) {\n-                    try {\n-                        syncopeStatus = Status.valueOf(((UserTO) anyTO).getStatus().toUpperCase());\n-                    } catch (IllegalArgumentException e) {\n-                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) anyTO).getStatus(), e);\n-                    }\n-                }\n-                syncope.setStatus(syncopeStatus);\n-\n-                statusBeans.add(syncope);\n-            } else {\n-                for (String resource : resources) {\n-                    final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n-                            resource,\n-                            null,\n-                            anyTO instanceof GroupTO);\n-\n-                    statusBean.setLinked(false);\n-                    statusBeans.add(statusBean);\n-                }\n-            }\n-\n-            return statusBeans;\n-        }\n-    }\n-\n-    private void passwordManagement(\n-            final AjaxRequestTarget target,\n-            final ResourceAssociationAction type,\n-            final Collection<StatusBean> selection) {\n-\n-        final IndicatingAjaxButton goon =\n-                new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\")) {\n-\n-            private static final long serialVersionUID = -2341391430136818027L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                try {\n-                    if (StringUtils.isNotBlank(password.getModelObject())\n-                            && !password.getModelObject().equals(confirm.getModelObject())) {\n-                        throw new Exception(getString(\"passwordMismatch\"));\n-                    }\n-\n-                    final BulkActionResult bulkActionResult;\n-                    switch (type) {\n-//                                case ASSIGN:\n-//                                    bulkActionResult = userRestClient.assign(\n-//                                            anyTO.getETagValue(),\n-//                                            anyTO.getKey(),\n-//                                            new ArrayList<>(selection),\n-//                                            changepwd.getModelObject(),\n-//                                            password.getModelObject());\n-//                                    break;\n-//                                case PROVISION:\n-//                                    bulkActionResult = userRestClient.provision(\n-//                                            anyTO.getETagValue(),\n-//                                            anyTO.getKey(),\n-//                                            new ArrayList<>(selection),\n-//                                            changepwd.getModelObject(),\n-//                                            password.getModelObject());\n-//                                    break;\n-                        default:\n-                            bulkActionResult = null;\n-                        // ignore\n-                    }\n-\n-                    if (bulkActionResult != null) {\n-                        loadBulkActionResultPage(target, selection, bulkActionResult);\n-                    } else {\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                        modal.close(target);\n-                    }\n-                } catch (Exception e) {\n-                    LOG.error(\"Error provisioning resources\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                }\n-            }\n-        };\n-\n-        pwdMgtForm.addOrReplace(goon);\n-\n-        table.setVisible(false);\n-        pwdMgtForm.setVisible(true).setEnabled(true);\n-\n-        target.add(table);\n-        target.add(pwdMgt);\n-    }\n-\n-    private void loadBulkActionResultPage(\n-            final AjaxRequestTarget target,\n-            final Collection<StatusBean> selection,\n-            final BulkActionResult bulkActionResult) {\n-        final List<String> resources = new ArrayList<>(selection.size());\n-        for (StatusBean statusBean : selection) {\n-            resources.add(statusBean.getResourceName());\n-        }\n-\n-        final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(Collections.singletonList(anyTO),\n-                resources);\n-\n-        final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size());\n-\n-        for (ConnObjectWrapper entry : connObjects) {\n-            final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n-                    entry.getResourceName(),\n-                    entry.getConnObjectTO(),\n-                    anyTO instanceof GroupTO);\n-\n-            statusBeans.add(statusBean);\n-        }\n-\n-        target.add(modal.setContent(new BulkActionResultModalPage<>(\n-                modal,\n-                pageRef,\n-                statusBeans,\n-                columns,\n-                bulkActionResult,\n-                \"resourceName\")));\n-    }\n-}"},{"sha":"e62a5d8c6002a04017d74d386082cd04aad89f64","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -93,6 +93,8 @@\n      */\n     protected final BasePage page;\n \n+    protected String itemKeyFieldName = \"key\";\n+\n     /**\n      * Create simple unfiltered search result panel.\n      * Use the available builder for powerfull configuration options.\n@@ -200,25 +202,35 @@ private void updateResultTable(final boolean create, final int rows) {\n         final int currentPage = resultTable != null\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n \n-        // reworking on bulkactions please, take care of restClient handle: maybe not useful to keep into\n+        // take care of restClient handle: maybe not useful to keep into\n         AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n                 dataProvider, page.getPageReference()).\n                 setColumns(getColumns()).\n                 setRowsPerPage(rows).\n-                setBulkActions(getBulkActions(), restClient, \"key\").\n+                setBulkActions(getBulkActions(), restClient, itemKeyFieldName).\n                 setContainer(container);\n \n         if (!checkBoxEnabled) {\n             resultTableBuilder.disableCheckBoxes();\n         }\n \n+        resultTableCustomChanges(resultTableBuilder);\n         resultTable = resultTableBuilder.build(\"resultTable\");\n \n         resultTable.setCurrentPage(currentPage);\n         resultTable.setOutputMarkupId(true);\n         container.addOrReplace(resultTable);\n     }\n \n+    /**\n+     * Caled before build. Override it to customize result table.\n+     *\n+     * @param resultTableBuilder result table builder.\n+     */\n+    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<T, String> resultTableBuilder) {\n+\n+    }\n+\n     public AbstractSearchResultPanel<T, W, DP, E> disableCheckBoxes() {\n         this.checkBoxEnabled = false;\n         return this;"},{"sha":"cee894a4c4aa124be80e285ae68d7c9f4ae1e29e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":40,"deletions":18,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -22,12 +22,13 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.panels.AbstractSearchResultPanel.EventDataWrapper;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.pages.BulkActionModalPage;\n+import org.apache.syncope.client.console.bulk.BulkActionModal;\n+import org.apache.syncope.client.console.bulk.BulkContent;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel.EventDataWrapper;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -43,6 +44,7 @@\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.ResourceModel;\n \n public final class AjaxDataTablePanel<T extends Serializable, S> extends DataTablePanel<T, S> {\n \n@@ -70,6 +72,8 @@\n \n         private WebMarkupContainer container;\n \n+        private MultilevelPanel multiLevelPanel;\n+\n         public Builder(final ISortableDataProvider<T, S> provider, final PageReference pageRef) {\n             this.dataProvider = provider;\n             this.pageRef = pageRef;\n@@ -138,27 +142,32 @@ public Builder<T, S> disableCheckBoxes() {\n         private boolean isBulkEnabled() {\n             return checkBoxEnabled && bulkActionExecutor != null && !bulkActions.isEmpty();\n         }\n+\n+        public void setMultiLevelPanel(final MultilevelPanel multiLevelPanel) {\n+            this.multiLevelPanel = multiLevelPanel;\n+        }\n     }\n \n     private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n         super(id);\n \n-        final BaseModal<T> bulkModalWin = new BaseModal<>(\"bulkModal\");\n-        add(bulkModalWin);\n+        final BaseModal<T> bulkModal = new BaseModal<>(\"bulkModal\");\n+        add(bulkModal);\n \n-        bulkModalWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+        bulkModal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487149L;\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n+                bulkModal.show(false);\n+\n                 final EventDataWrapper data = new EventDataWrapper();\n                 data.setTarget(target);\n                 data.setRows(builder.rowsPerPage);\n \n                 send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n-\n-                final BasePage page = (BasePage) builder.pageRef.getPage();\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }\n         });\n \n@@ -195,16 +204,29 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                bulkModalWin.setContent(new BulkActionModalPage<>(\n-                        bulkModalWin,\n-                        builder.pageRef,\n-                        group.getModelObject(),\n-                        builder.columns,\n-                        builder.bulkActions,\n-                        builder.bulkActionExecutor,\n-                        builder.itemKeyField));\n-\n-                bulkModalWin.show(target);\n+                if (builder.multiLevelPanel == null) {\n+                    bulkModal.header(new ResourceModel(\"bulk.action\", \"Bulk action\"));\n+                    bulkModal.changeCloseButtonLabel(getString(\"cancel\", null, \"Cancel\"), target);\n+\n+                    target.add(bulkModal.setContent(new BulkActionModal<>(\n+                            bulkModal,\n+                            builder.pageRef,\n+                            group.getModelObject(),\n+                            builder.columns.subList(1, builder.columns.size() - 1),\n+                            builder.bulkActions,\n+                            builder.bulkActionExecutor,\n+                            builder.itemKeyField)));\n+\n+                    bulkModal.show(true);\n+                } else {\n+                    builder.multiLevelPanel.next(\"bulk.action\", new BulkContent<T, S>(\n+                            builder.pageRef,\n+                            group.getModelObject(),\n+                            builder.columns.subList(1, builder.columns.size() - 1),\n+                            builder.bulkActions,\n+                            builder.bulkActionExecutor,\n+                            builder.itemKeyField), target);\n+                }\n             }\n         }.setEnabled(builder.isBulkEnabled()).setVisible(builder.isBulkEnabled()));\n     }"},{"sha":"4fd9339288dc2719648694e8011ca507f0a7890f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":46,"deletions":21,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AnyObjectDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.status.StatusModal;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -36,8 +37,8 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -46,7 +47,9 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n@@ -113,30 +116,52 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n             public ActionLinksPanel<AnyObjectTO> getActions(final String componentId, final IModel<AnyObjectTO> model) {\n                 final ActionLinksPanel.Builder<AnyObjectTO> panel = ActionLinksPanel.builder(page.getPageReference());\n \n-                panel.add(new ActionLink<AnyObjectTO>() {\n+                panel.\n+                        add(new ActionLink<AnyObjectTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                            private static final long serialVersionUID = -7978723352517770645L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new AnyHandler<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, String.format(\"%s_%s\", type, AnyEntitlement.READ)).add(\n-                        new ActionLink<AnyObjectTO>() {\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                                final IModel<AnyHandler<AnyObjectTO>> formModel\n+                                        = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                                alternativeDefaultModal.setFormModel(formModel);\n \n-                    private static final long serialVersionUID = -7978723352517770645L;\n+                                target.add(alternativeDefaultModal.setContent(new StatusModal<AnyObjectTO>(\n+                                        pageRef, formModel.getObject().getInnerObject(), false)));\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(0L);\n-                        send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n-                    }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<AnyObjectTO>() {\n+                                alternativeDefaultModal.header(new Model<>(\n+                                        getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n+\n+                                alternativeDefaultModal.show(true);\n+                            }\n+                        }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).\n+                        add(new ActionLink<AnyObjectTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                                send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                new AnyHandler<>(new AnyObjectRestClient().read(model.getObject().\n+                                                        getKey())),\n+                                                target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, String.format(\"%s_%s\", type, AnyEntitlement.READ)).\n+                        add(new ActionLink<AnyObjectTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770645L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                                final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n+                                clone.setKey(0L);\n+                                send(AnyObjectSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n+                            }\n+                        }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).\n+                        add(new ActionLink<AnyObjectTO>() {\n \n                             private static final long serialVersionUID = -7978723352517770646L;\n "},{"sha":"1e3c6ee10d1baa52e2f6e070c534a6eaf2dcc09c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -77,6 +77,7 @@ protected AnySearchResultPanel(final String id, final Builder<T> builder) {\n         this.fiql = builder.fiql;\n \n         modal.size(Modal.Size.Large);\n+        alternativeDefaultModal.size(Modal.Size.Large);\n \n         this.pSchemaNames = new ArrayList<>();\n         for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {"},{"sha":"6d116f54e2d8ea9621dc89f9dc260745a13a0d3e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":64,"deletions":39,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.status.StatusModal;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -47,7 +48,9 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n@@ -110,45 +113,67 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n             public ActionLinksPanel<GroupTO> getActions(final String componentId, final IModel<GroupTO> model) {\n                 final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder(page.getPageReference());\n \n-                panel.add(new ActionLink<GroupTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        send(GroupSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new GroupHandler(new GroupRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        final GroupTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(0L);\n-                        send(GroupSearchResultPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new GroupHandler(clone), target));\n-                    }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.GROUP_CREATE).add(new ActionLink<GroupTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                        }\n-                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n+                panel.\n+                        add(new ActionLink<GroupTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770645L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                                final IModel<AnyHandler<GroupTO>> formModel\n+                                        = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                                alternativeDefaultModal.setFormModel(formModel);\n+\n+                                target.add(alternativeDefaultModal.setContent(new StatusModal<GroupTO>(\n+                                        pageRef, formModel.getObject().getInnerObject(), false)));\n+\n+                                alternativeDefaultModal.header(new Model<>(\n+                                        getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n+\n+                                alternativeDefaultModal.show(true);\n+                            }\n+                        }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).\n+                        add(new ActionLink<GroupTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                                send(GroupSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                new GroupHandler(new GroupRestClient().read(model.getObject().\n+                                                        getKey())), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.GROUP_READ).\n+                        add(new ActionLink<GroupTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                                final GroupTO clone = SerializationUtils.clone(model.getObject());\n+                                clone.setKey(0L);\n+                                send(GroupSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.NewItemActionEvent<>(new GroupHandler(clone), target));\n+                            }\n+                        }, ActionLink.ActionType.CLONE, StandardEntitlement.GROUP_CREATE).\n+                        add(new ActionLink<GroupTO>() {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                                try {\n+                                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n \n                 return panel.build(componentId);\n             }"},{"sha":"ff10b8d53e2b3243794326edd128ed6a64267748","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/LabelPanel.java","status":"renamed","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -18,29 +18,15 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.wicket.Component;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.request.resource.ContextRelativeResource;\n \n-public class ImagePanel extends Panel {\n+public class LabelPanel extends Panel {\n \n     private static final long serialVersionUID = 5564818820574092960L;\n \n-    private static final String IMG = \"img\";\n-\n-    private final Image img;\n-\n-    public ImagePanel(final String id, final ContextRelativeResource img) {\n+    public LabelPanel(final String id, final Label label) {\n         super(id);\n-        this.img = new Image(IMG, img);\n-        add(this.img);\n-    }\n-\n-    @Override\n-    public Component add(final Behavior... behaviors) {\n-        this.img.add(behaviors);\n-        return this;\n+        add(label);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImagePanel.java"},{"sha":"a3cfeda69f31c13c4ee9ab9d2fbb81dddf75b54d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MultilevelPanel.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -118,8 +118,11 @@ public static class SecondLevel extends Panel {\n         private static final long serialVersionUID = 5685291231060035528L;\n \n         public SecondLevel() {\n-            super(SECOND_LEVEL_ID);\n+            this(SECOND_LEVEL_ID);\n         }\n \n+        public SecondLevel(final String id) {\n+            super(id);\n+        }\n     }\n }"},{"sha":"f405a5e603cf3d64ac72e6cbecf32e53f524e54f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -80,6 +80,7 @@ protected IModel<?> initModel() {\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public IModel<List<FeedbackMessage>> getModel() {\n         return (IModel<List<FeedbackMessage>>) this.getDefaultModel();\n     }\n@@ -95,6 +96,7 @@ public void setModelObject(final List<FeedbackMessage> object) {\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public List<FeedbackMessage> getModelObject() {\n         return (List<FeedbackMessage>) this.getDefaultModelObject();\n     }"},{"sha":"fc94431a6576c367f854eae78a35f0ecb8442c0d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -27,9 +27,9 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.StatusModal;\n import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.status.StatusModal;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -120,35 +120,36 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(new AnyHandler<>(model.\n-                                getObject()));\n-                        modal.setFormModel(formModel);\n \n-                        target.add(modal.setContent(new StatusModal<>(\n-                                modal, page.getPageReference(), formModel.getObject().getInnerObject())));\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        alternativeDefaultModal.setFormModel(formModel);\n \n-                        modal.header(new Model<>(\n+                        target.add(alternativeDefaultModal.setContent(\n+                                new StatusModal<UserTO>(pageRef, formModel.getObject().getInnerObject(), false)));\n+\n+                        alternativeDefaultModal.header(new Model<>(\n                                 getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n \n-                        modal.show(true);\n+                        alternativeDefaultModal.show(true);\n                     }\n                 }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(new AnyHandler<>(model.\n-                                getObject()));\n-                        modal.setFormModel(formModel);\n+                        final IModel<AnyHandler<UserTO>> formModel\n+                                = new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        alternativeDefaultModal.setFormModel(formModel);\n \n-                        target.add(modal.setContent(new StatusModal<>(\n-                                modal, page.getPageReference(), formModel.getObject().getInnerObject(), true)));\n+                        target.add(alternativeDefaultModal.setContent(\n+                                new StatusModal<UserTO>(pageRef, formModel.getObject().getInnerObject(), true)));\n \n-                        modal.header(new Model<>(\n+                        alternativeDefaultModal.header(new Model<>(\n                                 getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n \n-                        modal.show(true);\n+                        alternativeDefaultModal.show(true);\n                     }\n                 }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n "},{"sha":"b47f6f1c8e1f19b6711c0f6c01f56ffedf367e04","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -70,7 +70,8 @@ public abstract List<T> search(\n \n     protected abstract Class<? extends AnyService<?, ?>> getAnyServiceClass();\n \n-    public void unlink(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult unlink(final String etag, final long key, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n \n@@ -79,13 +80,15 @@ public void unlink(final String etag, final long key, final List<StatusBean> sta\n             deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n             deassociationPatch.getResources().addAll(StatusUtils.buildStatusPatch(statuses).getResources());\n \n-            service.deassociate(deassociationPatch);\n+            result = service.deassociate(deassociationPatch).readEntity(BulkActionResult.class);\n \n             resetClient(getAnyServiceClass());\n         }\n+        return result;\n     }\n \n-    public void link(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult link(final String etag, final long key, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n \n@@ -97,10 +100,11 @@ public void link(final String etag, final long key, final List<StatusBean> statu\n             associationPatch.setOnSyncope(statusPatch.isOnSyncope());\n             associationPatch.getResources().addAll(statusPatch.getResources());\n \n-            service.associate(associationPatch);\n+            result = service.associate(associationPatch).readEntity(BulkActionResult.class);\n \n             resetClient(getAnyServiceClass());\n         }\n+        return result;\n     }\n \n     public BulkActionResult deprovision(final String etag, final long key, final List<StatusBean> statuses) {"},{"sha":"0cf1cfab7550b70739c2c11b4b84bdc76ca8788f","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusModal.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.status;\n+\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class StatusModal<T extends AnyTO> extends Panel implements ModalPanel<AnyHandler<T>> {\n+\n+    private static final long serialVersionUID = 1066124171682570080L;\n+\n+    public StatusModal(\n+            final PageReference pageReference, final T anyTO, final boolean statusOnly) {\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"status\");\n+        add(mlp.setFirstLevel(new StatusSearchResultPanel(mlp, pageReference, anyTO, statusOnly)));\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public AnyHandler<T> getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+}"},{"sha":"47646c15de99137753b1b5f961afe57c83279c40","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusSearchResultPanel.java","status":"added","additions":364,"deletions":0,"changes":364,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,364 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.status;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n+import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.console.commons.status.Status;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.status.StatusSearchResultPanel.AttributableStatusProvider;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class StatusSearchResultPanel\n+        extends AbstractSearchResultPanel<StatusBean, StatusBean, AttributableStatusProvider, BaseRestClient>\n+        implements ModalPanel<StatusBean> {\n+\n+    private static final long serialVersionUID = -9148734710505211261L;\n+\n+    protected final MultilevelPanel multiLevelPanelRef;\n+\n+    private final AnyTO anyTO;\n+\n+    private final boolean statusOnly;\n+\n+    public StatusSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef,\n+            final PageReference pageRef,\n+            final AnyTO anyTO) {\n+\n+        this(multiLevelPanelRef, pageRef, anyTO, false);\n+    }\n+\n+    public StatusSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef,\n+            final PageReference pageRef,\n+            final AnyTO anyTO,\n+            final boolean statusOnly) {\n+\n+        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef);\n+        this.multiLevelPanelRef = multiLevelPanelRef;\n+        this.statusOnly = statusOnly;\n+        this.anyTO = anyTO;\n+        this.itemKeyFieldName = \"anyKey\";\n+\n+        if (anyTO instanceof UserTO) {\n+            this.restClient = new UserRestClient();\n+        } else if (anyTO instanceof GroupTO) {\n+            this.restClient = new GroupRestClient();\n+        } else {\n+            this.restClient = new AnyObjectRestClient();\n+        }\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<StatusBean, String> resultTableBuilder) {\n+        resultTableBuilder.setMultiLevelPanel(multiLevelPanelRef);\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public StatusBean getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    protected List<IColumn<StatusBean, String>> getColumns() {\n+        final List<IColumn<StatusBean, String>> columns = new ArrayList<IColumn<StatusBean, String>>();\n+\n+        columns.add(new AbstractColumn<StatusBean, String>(\n+                new StringResourceModel(\"resourceName\", this, null), \"resourceName\") {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                    private static final long serialVersionUID = 8432079838783825801L;\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        if (model.getObject().isLinked()) {\n+                            super.onComponentTag(tag);\n+                        } else {\n+                            tag.put(\"style\", \"color: #DDDDDD\");\n+                        }\n+                    }\n+                });\n+            }\n+        });\n+\n+        columns.add(new PropertyColumn<StatusBean, String>(\n+                new StringResourceModel(\"connObjectLink\", this, null), \"connObjectLink\", \"connObjectLink\"));\n+\n+        columns.add(new AbstractColumn<StatusBean, String>(new StringResourceModel(\"status\", this, null)) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n+\n+                if (model.getObject().isLinked()) {\n+                    cellItem.add(StatusUtils.getStatusImage(componentId, model.getObject().getStatus()));\n+                } else {\n+                    cellItem.add(new Label(componentId, \"\"));\n+                }\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+        if (statusOnly) {\n+            bulkActions.add(ActionLink.ActionType.SUSPEND);\n+            bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+        } else {\n+            bulkActions.add(ActionLink.ActionType.UNLINK);\n+            bulkActions.add(ActionLink.ActionType.LINK);\n+            bulkActions.add(ActionLink.ActionType.DEPROVISION);\n+            bulkActions.add(ActionLink.ActionType.PROVISION);\n+            bulkActions.add(ActionLink.ActionType.ASSIGN);\n+            bulkActions.add(ActionLink.ActionType.UNASSIGN);\n+\n+        }\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected AttributableStatusProvider dataProvider() {\n+        return new AttributableStatusProvider();\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return StringUtils.EMPTY;\n+    }\n+\n+    public class AttributableStatusProvider extends AbstractStatusBeanProvider {\n+\n+        private static final long serialVersionUID = 4586969457669796621L;\n+\n+        private final StatusUtils statusUtils;\n+\n+        AttributableStatusProvider() {\n+            super(statusOnly ? \"resourceName\" : \"connObjectLink\");\n+            statusUtils = new StatusUtils(anyTO instanceof UserTO ? new UserRestClient() : new GroupRestClient());\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public List<StatusBean> getStatusBeans() {\n+            final List<String> resources = new ArrayList<>();\n+            for (ResourceTO resourceTO : new ResourceRestClient().getAll()) {\n+                resources.add(resourceTO.getKey());\n+            }\n+\n+            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(anyTO);\n+\n+            final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n+\n+            for (ConnObjectWrapper entry : connObjects) {\n+                final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                        entry.getResourceName(),\n+                        entry.getConnObjectTO(),\n+                        anyTO instanceof GroupTO);\n+\n+                statusBeans.add(statusBean);\n+                resources.remove(entry.getResourceName());\n+            }\n+\n+            if (statusOnly) {\n+                final StatusBean syncope = new StatusBean(anyTO, \"Syncope\");\n+\n+                syncope.setConnObjectLink(((UserTO) anyTO).getUsername());\n+\n+                Status syncopeStatus = Status.UNDEFINED;\n+                if (((UserTO) anyTO).getStatus() != null) {\n+                    try {\n+                        syncopeStatus = Status.valueOf(((UserTO) anyTO).getStatus().toUpperCase());\n+                    } catch (IllegalArgumentException e) {\n+                        LOG.warn(\"Unexpected status found: {}\", ((UserTO) anyTO).getStatus(), e);\n+                    }\n+                }\n+                syncope.setStatus(syncopeStatus);\n+\n+                statusBeans.add(syncope);\n+            } else {\n+                for (String resource : resources) {\n+                    final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+                            resource,\n+                            null,\n+                            anyTO instanceof GroupTO);\n+\n+                    statusBean.setLinked(false);\n+                    statusBeans.add(statusBean);\n+                }\n+            }\n+\n+            return statusBeans;\n+        }\n+    }\n+//\n+//    private void passwordManagement(\n+//            final AjaxRequestTarget target,\n+//            final ResourceAssociationAction type,\n+//            final Collection<StatusBean> selection) {\n+//\n+//        final IndicatingAjaxButton goon\n+//                = new IndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\")) {\n+//\n+//            private static final long serialVersionUID = -2341391430136818027L;\n+//\n+//            @Override\n+//            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+//                try {\n+//                    if (StringUtils.isNotBlank(password.getModelObject())\n+//                            && !password.getModelObject().equals(confirm.getModelObject())) {\n+//                        throw new Exception(getString(\"passwordMismatch\"));\n+//                    }\n+//\n+//                    final BulkActionResult bulkActionResult;\n+//                    switch (type) {\n+////                                case ASSIGN:\n+////                                    bulkActionResult = userRestClient.assign(\n+////                                            anyTO.getETagValue(),\n+////                                            anyTO.getKey(),\n+////                                            new ArrayList<>(selection),\n+////                                            changepwd.getModelObject(),\n+////                                            password.getModelObject());\n+////                                    break;\n+////                                case PROVISION:\n+////                                    bulkActionResult = userRestClient.provision(\n+////                                            anyTO.getETagValue(),\n+////                                            anyTO.getKey(),\n+////                                            new ArrayList<>(selection),\n+////                                            changepwd.getModelObject(),\n+////                                            password.getModelObject());\n+////                                    break;\n+//                        default:\n+//                            bulkActionResult = null;\n+//                        // ignore\n+//                    }\n+//\n+//                    if (bulkActionResult != null) {\n+//                        loadBulkActionResultPage(target, selection, bulkActionResult);\n+//                    } else {\n+//                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+//                        modal.close(target);\n+//                    }\n+//                } catch (Exception e) {\n+//                    LOG.error(\"Error provisioning resources\", e);\n+//                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+//                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+//                }\n+//            }\n+//        };\n+//\n+//        pwdMgtForm.addOrReplace(goon);\n+//\n+//        table.setVisible(false);\n+//        pwdMgtForm.setVisible(true).setEnabled(true);\n+//\n+//        target.add(table);\n+//        target.add(pwdMgt);\n+//    }\n+//\n+//    private void loadBulkActionResultPage(\n+//            final AjaxRequestTarget target,\n+//            final Collection<StatusBean> selection,\n+//            final BulkActionResult bulkActionResult) {\n+//        final List<String> resources = new ArrayList<>(selection.size());\n+//        for (StatusBean statusBean : selection) {\n+//            resources.add(statusBean.getResourceName());\n+//        }\n+//\n+//        final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(Collections.singletonList(anyTO),\n+//                resources);\n+//\n+//        final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size());\n+//\n+//        for (ConnObjectWrapper entry : connObjects) {\n+//            final StatusBean statusBean = statusUtils.getStatusBean(anyTO,\n+//                    entry.getResourceName(),\n+//                    entry.getConnObjectTO(),\n+//                    anyTO instanceof GroupTO);\n+//\n+//            statusBeans.add(statusBean);\n+//        }\n+//\n+////        target.add(modal.setContent(new BulkResultModal<>(\n+////                modal,\n+////                pageRef,\n+////                statusBeans,\n+////                columns,\n+////                bulkActionResult,\n+////                \"resourceName\")));\n+//    }\n+}"},{"sha":"576942e7c1667b174eeb7471ef832c58ed72090d","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskSearchResultPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -55,8 +56,9 @@ public abstract class PropagationTaskSearchResultPanel extends TaskSearchResultP\n \n     private final String resource;\n \n-    protected PropagationTaskSearchResultPanel(final String id, final String resource, final PageReference pageRef) {\n-        super(id, pageRef);\n+    protected PropagationTaskSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef, final String resource, final PageReference pageRef) {\n+        super(multiLevelPanelRef, pageRef);\n         this.resource = resource;\n         initResultTable();\n     }\n@@ -154,8 +156,8 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n \n             @Override\n             public ActionLinksPanel<PropagationTaskTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<PropagationTaskTO> panel =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<PropagationTaskTO> panel = ActionLinksPanel.builder(page.\n+                        getPageReference());\n \n                 return panel.add(new ActionLink<PropagationTaskTO>() {\n \n@@ -178,6 +180,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO igno\n     protected Collection<ActionType> getBulkActions() {\n         final List<ActionType> bulkActions = new ArrayList<>();\n         bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.EXECUTE);\n         return bulkActions;\n     }\n "},{"sha":"39201b242e9c9f98c7c2e5ea2fe54c32e47df176","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -35,8 +35,7 @@ public <T extends AnyTO> PropagationTasks(final PageReference pageReference, fin\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(\n-                new PropagationTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(new PropagationTaskSearchResultPanel(mlp, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"ee4a6b31af2095af18621e5a654a511be8d01203","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskSearchResultPanel.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n@@ -44,8 +45,11 @@\n     private final String resource;\n \n     protected ProvisioningTaskSearchResultPanel(\n-            final String id, final Class<T> reference, final String resource, final PageReference pageRef) {\n-        super(id, reference, pageRef);\n+            final MultilevelPanel multiLevelPanelRef,\n+            final Class<T> reference,\n+            final String resource,\n+            final PageReference pageRef) {\n+        super(multiLevelPanelRef, reference, pageRef);\n         this.resource = resource;\n \n         this.schedTaskTO.setResource(resource);"},{"sha":"d47469f4215e88036252da454c41ea35b23267b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskSearchResultPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.tasks;\n \n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n@@ -30,8 +31,9 @@ public abstract class PushTaskSearchResultPanel extends ProvisioningTaskSearchRe\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected PushTaskSearchResultPanel(final String id, final String resource, final PageReference pageRef) {\n-        super(id, PushTaskTO.class, resource, pageRef);\n+    protected PushTaskSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef, final String resource, final PageReference pageRef) {\n+        super(multiLevelPanelRef, PushTaskTO.class, resource, pageRef);\n     }\n \n     @Override"},{"sha":"6b9973809403d13dc6c254de567c3118e4f325b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -37,7 +37,7 @@ public <T extends AnyTO> PushTasks(final PageReference pageReference, final Stri\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new PushTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(new PushTaskSearchResultPanel(mlp, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"5e3d1aa7ecf706b07196a35287560886e6fee483","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -68,8 +69,9 @@\n \n     private final StartAtTogglePanel startAt;\n \n-    protected SchedTaskSearchResultPanel(final String id, final Class<T> reference, final PageReference pageRef) {\n-        super(id, pageRef);\n+    protected SchedTaskSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef, final Class<T> reference, final PageReference pageRef) {\n+        super(multiLevelPanelRef, pageRef);\n         this.reference = reference;\n \n         try {"},{"sha":"4ec3f037467526eeea3b6decac65dc33205acb60","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTasks.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -37,8 +37,7 @@ public <T extends AnyTO> SchedTasks(final PageReference pageReference) {\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new SchedTaskSearchResultPanel<SchedTaskTO>(\n-                MultilevelPanel.FIRST_LEVEL_ID, SchedTaskTO.class, pageReference) {\n+        mlp.setFirstLevel(new SchedTaskSearchResultPanel<SchedTaskTO>(mlp, SchedTaskTO.class, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"a5ad32fb3a3ddc656ef80fa45f9139e18757f52b","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTaskSearchResultPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.tasks;\n \n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n@@ -30,8 +31,9 @@ public abstract class SyncTaskSearchResultPanel extends ProvisioningTaskSearchRe\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected SyncTaskSearchResultPanel(final String id, final String resource, final PageReference pageRef) {\n-        super(id, SyncTaskTO.class, resource, pageRef);\n+    protected SyncTaskSearchResultPanel(\n+            final MultilevelPanel multiLevelPanelRef, final String resource, final PageReference pageRef) {\n+        super(multiLevelPanelRef, SyncTaskTO.class, resource, pageRef);\n     }\n \n     @Override"},{"sha":"907129fa0533b81cc6804a3883f2843e401475cd","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -37,7 +37,7 @@ public <T extends AnyTO> SyncTasks(final PageReference pageReference, final Stri\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new SyncTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(new SyncTaskSearchResultPanel(mlp, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"c1793a03bd0e0671600ba1e90d1f2dacb42e5fd0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskSearchResultPanel.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -22,7 +22,9 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -43,12 +45,20 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected TaskSearchResultPanel(final String id, final PageReference pageRef) {\n-        super(id, pageRef, false);\n+    protected final MultilevelPanel multiLevelPanelRef;\n+\n+    protected TaskSearchResultPanel(final MultilevelPanel multiLevelPanelRef, final PageReference pageRef) {\n+        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false);\n+        this.multiLevelPanelRef = multiLevelPanelRef;\n         restClient = new TaskRestClient();\n         setShowResultPage(false);\n     }\n \n+    @Override\n+    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<T, String> resultTableBuilder) {\n+        resultTableBuilder.setMultiLevelPanel(multiLevelPanelRef);\n+    }\n+\n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         throw new UnsupportedOperationException(\"Not supported yet.\");"},{"sha":"aa83b3e76836ca132087b0fe3c073bcd97460a95","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/buttons/DefaultModalCloseButton.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -28,7 +28,7 @@ public class DefaultModalCloseButton extends ModalCloseButton {\n \n     public DefaultModalCloseButton() {\n         super(new ResourceModel(\"cancel\", \"Cancel\"));\n-\n         add(new AttributeAppender(\"class\", \" pull-left\"));\n+        setOutputMarkupId(true);\n     }\n }"},{"sha":"5fb7aac5e79e882a84078c2e2b8589a1180a960f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -70,6 +70,8 @@\n \n     private final Form<T> form;\n \n+    private DefaultModalCloseButton defaultModalCloseButton;\n+\n     public BaseModal(final String id) {\n         super(id);\n \n@@ -97,7 +99,8 @@ public BaseModal(final String id) {\n         // Note: not adding this would imply adding of WebjarsJavaScriptResourceReference about JQuery draggable\n         add(new Draggable(new DraggableConfig().withHandle(\".modal-header\").withCursor(\"move\")));\n \n-        addButton(new DefaultModalCloseButton());\n+        defaultModalCloseButton = new DefaultModalCloseButton();\n+        addButton(defaultModalCloseButton);\n         setUseKeyboard(true);\n         setFadeIn(true);\n     }\n@@ -132,7 +135,18 @@ public BaseModal<T> setContent(final ModalPanel<T> component) {\n             return setInternalContent(Panel.class.cast(component));\n         }\n         throw new IllegalArgumentException(\"Panel instance is required\");\n+    }\n+\n+    public BaseModal<T> setContent(final ModalPanel<T> component, final AjaxRequestTarget target) {\n+        setContent(component);\n+        target.add(content);\n+        return this;\n+    }\n \n+    public BaseModal<T> changeCloseButtonLabel(final String label, final AjaxRequestTarget target) {\n+        defaultModalCloseButton.getModel().setObject(label);\n+        target.add(defaultModalCloseButton);\n+        return this;\n     }\n \n     private BaseModal<T> setInternalContent(final Panel component) {"},{"sha":"c0e86bd62a5cfa5f736d1d7325c60884548e3c28","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -79,6 +79,11 @@ protected void onConfigure() {\n \n     };\n \n+    /**\n+     * Modal window.\n+     */\n+    protected final BaseModal<T> alternativeDefaultModal = new BaseModal<T>(\"alternativeDefaultModal\");\n+\n     protected WizardMgtPanel(final String id) {\n         this(id, false);\n     }\n@@ -90,6 +95,7 @@ protected WizardMgtPanel(final String id, final boolean wizardInModal) {\n         this.wizardInModal = wizardInModal;\n \n         super.add(modal);\n+        super.add(alternativeDefaultModal);\n \n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n@@ -151,8 +157,8 @@ public void onEvent(final IEvent<?> event) {\n                     container.addOrReplace(initialFragment);\n                 }\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                info(getString(Constants.OPERATION_SUCCEEDED));\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n \n                 if (wizardInModal && showResultPage) {\n                     modal.setContent(new ResultPage<T>("},{"sha":"9322b319e4fd096656b4aae2925ec6ae706259cd","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":1,"deletions":36,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -23,9 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SerializableTransformer;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.commons.status.Status;\n@@ -45,8 +43,6 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n@@ -155,38 +151,7 @@ private void init(\n             @Override\n             protected Component getValueComponent(final String key, final StatusBean bean) {\n                 if (\"status\".equalsIgnoreCase(key)) {\n-                    return new Label(\"field\", StringUtils.EMPTY) {\n-\n-                        private static final long serialVersionUID = 4755868673082976208L;\n-\n-                        @Override\n-                        protected void onComponentTag(final ComponentTag tag) {\n-                            super.onComponentTag(tag);\n-                            if (null != bean.getStatus()) {\n-                                switch (bean.getStatus()) {\n-                                    case OBJECT_NOT_FOUND:\n-                                        tag.put(\"class\", Constants.NOT_FOUND_ICON);\n-                                        break;\n-                                    case UNDEFINED:\n-                                    case CREATED:\n-                                    case NOT_YET_SUBMITTED:\n-                                        tag.put(\"class\", Constants.UNDEFINED_ICON);\n-                                        break;\n-                                    case SUSPENDED:\n-                                        tag.put(\"class\", Constants.SUSPENDED_ICON);\n-                                        break;\n-                                    case ACTIVE:\n-                                        tag.put(\"class\", Constants.ACTIVE_ICON);\n-                                        break;\n-                                    default:\n-                                        break;\n-                                }\n-                            }\n-\n-                            tag.put(\"alt\", \"status icon\");\n-                            tag.put(\"title\", bean.getStatus().toString());\n-                        }\n-                    };\n+                    return StatusUtils.getStatusImagePanel(\"field\", bean.getStatus());\n                 } else {\n                     return super.getValueComponent(key, bean);\n                 }"},{"sha":"3234e4f4eca40d6844f802635693f44da3565b2d","filename":"client/console/src/main/resources/META-INF/resources/css/bulk.css","status":"modified","additions":5,"deletions":46,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fbulk.css?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -40,60 +40,19 @@ div.bulkActionCell{\n \n .pageRowElement{\n   display: inline-table;\n-  width: 95%;\n-}\n-\n-div#selectedObjects{\n-  text-align: center;\n-  margin-top: 10px;\n+  width: 100%;\n }\n \n div#selectedObjects table {\n-  margin: 1em 0;\n   border-collapse: collapse;\n }\n \n div#selectedObjects table td, div#selectedObjects table th {\n   border: 1px solid #eee;\n-  padding: .6em 10px;\n-}\n-\n-div#actionRow{\n-  height: 30px;\n-  overflow: hidden;\n-  text-align: left;\n-  margin-top: 10px;\n-}\n-\n-div#actions{\n-  display: inline-table;\n-  height: 30px;\n-  overflow: hidden;\n-}\n-\n-div#actions div#actionPanel{\n-  display: table-cell;\n-  height: 30px;\n-  overflow: hidden;\n-  cursor: auto;\n-  background: none;\n-  padding: 0px 10px;\n-  vertical-align: middle;\n-}\n-\n-div#actions div#cancelBtmForm{\n-  display: table-cell;\n-  height: 30px;\n-  overflow: hidden;\n-  vertical-align: middle;\n-  padding-left: 3px;\n-}\n-\n-div#actions div#cancelBtmForm form{\n-  padding: 0px;\n-  margin: 0px;\n+  padding: .5em 10px;\n }\n \n-div#actions div#cancelBtmForm form input#cancel{\n-  padding: 0.6em 1em;\n+div#selectedObjects .circular-actions {\n+  padding: 3px;\n+  margin: 10px 0px 5px 0px;\n }"},{"sha":"677025262bf254d7c9d3835ed4301bc645a001ca","filename":"client/console/src/main/resources/META-INF/resources/css/topology.css","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -112,7 +112,7 @@\n div#topology {\n   position: relative; \n   border: 0px; \n-  height: 800px; \n+  height: 780px;\n   overflow: hidden;\n }\n "},{"sha":"a9cd88ea1015f71ca2c0473700deb7d704bc6699","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:extend>\n+      <span wicket:id=\"content\"/>\n+    </wicket:extend>\n+  </body>\n+</html>"},{"sha":"44780b6f4ca3058837cc4502d1f8d67012d641b8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal.properties","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Operazioni di gruppo\n+bulk.action=Bulk action\n+close=Close","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionModalPage_it.properties"},{"sha":"55f9a341f60a86fd51421399d489926a46f933e9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal_it.properties","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=A\\u00E7\\u00E3o Composta\n+bulk.action=Operazioni di gruppo\n+close=Chiudi","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionModalPage_pt_BR.properties"},{"sha":"353e95c971ff74301494de336f7fb93efa188374","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal_pt_BR.properties","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Bulk action\n+bulk.action=A\\u00e7\\u00e3o Composta\n+close=Fechar","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionModalPage.properties"},{"sha":"06ee2fd9254087372fb2510dc87cd69c63bf2216","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkContent.html","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,35 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:head>\n+      <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n+    </wicket:head>\n+    <wicket:panel>\n+      <div wicket:id=\"container\" id=\"selectedObjects\" class=\"dataTable\">\n+        <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n+\n+        <div class=\"circular-actions\">\n+          <span wicket:id=\"actions\">[Actions]</span>\n+        </div>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"0c43c4b072094eda9dc3b23d53fefcc6028af664","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/AbstractStatusModalPage.html","status":"removed","additions":0,"deletions":122,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.html?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,122 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n-    <style>\n-      #dataTableSpan{\n-        display:  block;\n-        clear:  both;\n-        float: none;\n-        margin: 10px;\n-        padding-top: 10px;\n-      }\n-\n-      #dataTableSpan table{\n-        width: 100%;\n-      }\n-\n-      form#pwdMgtForm {\n-        border: 1px solid #AAAAAA;\n-        margin:10px;\n-      }\n-\n-      div#changepwd {\n-        display: inline-row;\n-        margin-top: 5px;\n-      }\n-\n-      div#changepwd div{\n-        display: table-cell;\n-      }\n-\n-      div#changepwd div#label{\n-        padding-left: 5px;\n-        vertical-align: middle;\n-        font-family: Verdana,Arial,sans-serif;\n-      }\n-\n-      div#password {\n-        display: inline-row;\n-        margin: 5px;\n-      }\n-\n-      div#continue {\n-        display: inline-row;\n-        margin: 5px;\n-      }\n-\n-      div#continue div{\n-        display: table-cell;\n-      }\n-\n-      div#cancelBtmForm {\n-        padding-left: 5px;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:extend>\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-      <wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"displayName\"/>\n-    </p>\n-    <span wicket:id=\"resourceDatatable\" id=\"dataTableSpan\">[resources]</span>\n-\n-    <span wicket:id=\"pwdMgtFields\">[password management]</span>\n-\n-    <wicket:fragment wicket:id=\"pwdMgtFragment\">\n-      <div wicket:id=\"pwdMgt\">\n-        <form wicket:id=\"pwdMgtForm\" id=\"pwdMgtForm\">\n-          <div id=\"changepwd\">\n-            <div id=\"value\">\n-              <span wicket:id=\"changepwd\">[changepwd]</span>\n-            </div>\n-            <div id=\"label\">\n-              <label wicket:id=\"changePwdLabel\">[Change password]</label>\n-            </div>\n-          </div>\n-\n-          <div id=\"password\">\n-            <input type=\"password\" wicket:id=\"password\" id=\"password\" size=\"25\"  style=\"width: 180px\" title=\"password\"/>\n-          </div>\n-\n-          <div id=\"password\">\n-            <input type=\"password\" wicket:id=\"confirm\" id=\"confirm\" size=\"25\"  style=\"width: 180px\" title=\"confirm\"/>\n-          </div>\n-\n-          <div id=\"continue\">\n-            <div id=\"continueBtmForm\">\n-              <input type=\"button\" wicket:id=\"continue\" id=\"continue\"\n-                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n-            </div>\n-\n-            <div id=\"cancelBtmForm\">\n-              <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n-                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n-            </div>\n-          </div>\n-        </form>\n-      </div>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"emptyFragment\">\n-    </wicket:fragment>\n-\n-    <wicket:child />\n-  </wicket:extend>\n-</html>"},{"sha":"badba8de035a77983eab6791733c76cb319eb022","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/AbstractStatusModalPage.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage.properties?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Global Status\n-changePwdLabel=Password propagation\n-passwordMismatch=Password mismatch\n-\n-resourceName=Resource\n-connObjectLink=Connector Object Link\n-status=Status"},{"sha":"ddda78cfaee71b2997d928b6f0e4ba67f57c23b3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/AbstractStatusModalPage_it.properties","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_it.properties?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,24 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Stato Globale\n-changePwdLabel=Propagazione password\n-passwordMismatch=Password non corrispondenti\n-\n-resourceName=Risorsa\n-connObjectLink=Connector Object Link\n-status=Stato\n-"},{"sha":"27b8dce81803ace4012a7aa7ba52eb8a01897ad3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/AbstractStatusModalPage_pt_BR.properties","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractStatusModalPage_pt_BR.properties?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,24 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Estatus Global\n-changePwdLabel=Password propagation\n-passwordMismatch=Password mismatch\n-\n-resourceName=Recurso\n-connObjectLink=Connector Object Link\n-status=Estado\n-"},{"sha":"9e5d497e632a1a0a67966bb214d62d3a707378ae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionModalPage.html","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.html?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,45 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n-  </wicket:head>\n-  <wicket:extend>\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-\n-    <div id=\"selectedObjects\">\n-      <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n-\n-      <div id=\"actionRow\" class=\"pageRowElement\">\n-        <div id=\"actions\">\n-          <div id=\"actionPanel\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-            <span wicket:id=\"actions\">[Actions]</span>\n-          </div>\n-\n-          <div id=\"cancelBtmForm\">\n-            <form wicket:id=\"form\">\n-              <input type=\"button\" wicket:id=\"cancel\" id=\"cancel\"\n-                     class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"/>\n-            </form>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  </wicket:extend>\n-</html>"},{"sha":"16dd2565494d614ee4ad405fc6a94bd29a43e348","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionResultModalPage.html","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage.html?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,57 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<wicket:head>\n-  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bulk.css\" media=\"all\"/>\n-</wicket:head>\n-<wicket:extend>\n-  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-\n-<div id=\"selectedObjects\">\n-  <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n-\n-  <div id=\"actionRow\" class=\"pageRowElement\">\n-    <div id=\"actions\">\n-      <div id=\"cancelBtmForm\" style=\"padding: 0px\">\n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"close\">\n-          <wicket:message key=\"close\"/>\n-        </a>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n-</wicket:extend>\n\\ No newline at end of file"},{"sha":"4268c002b024dd50d705b821f327204f711428b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionResultModalPage_it.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_it.properties?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Risultato esecuzion Bulk Action\n-close=Chiudi\n-bulkActionResultLabel=Esito"},{"sha":"00c3a518376217b123fd3c859a2432e8c5521ae1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionResultModalPage_pt_BR.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c8815aba5e75212e495e2bfd97aed0ebf7de458/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionResultModalPage_pt_BR.properties?ref=2c8815aba5e75212e495e2bfd97aed0ebf7de458","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Resultado da A\\u00E7\\u00E3o Composta\n-close=Fechar\n-bulkActionResultLabel=Implantar"},{"sha":"745e35a4324e28d60e93e012865d6ae1ebf7f40e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/LabelPanel.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -18,11 +18,11 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head>\n-    <title>Image  panel</title>\n+    <title>Label  panel</title>\n   </head>\n   <body>\n     <wicket:panel>\n-      <img wicket:id=\"img\" />\n+      <label wicket:id=\"label\" />\n     </wicket:panel>\n   </body>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ImagePanel.html"},{"sha":"1b04b8141de8d57b18b689fb1f9d162e7050053f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <span wicket:id=\"status\">[Status]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"ef1cdf0a7317877fc1978a227d2b68eaf7afabaa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Bulk Action Result\n-close=Close\n-bulkActionResultLabel=Result\n+resourceName=Resource\n+connObjectLink=Remote ID\n+status=Status","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BulkActionResultModalPage.properties"},{"sha":"948b49dc5ea790d411a484109d049ab1afe5549b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resourceName=Risorsa\n+connObjectLink=ID Remoto\n+status=Stato"},{"sha":"ef1cdf0a7317877fc1978a227d2b68eaf7afabaa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resourceName=Resource\n+connObjectLink=Remote ID\n+status=Status"},{"sha":"8829644b1b9f05f0df7e8af04e5cac57f67118b1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -145,11 +145,11 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSuspend\">\n-      <a href=\"#\" wicket:id=\"suspendLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/suspend.png\" alt=\"suspend icon\" title=\"Suspend\"/></a>\n+      <a href=\"#\" wicket:id=\"suspendLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ban-circle\" alt=\"suspend icon\" title=\"Suspend\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReactivate\">\n-      <a href=\"#\" wicket:id=\"reactivateLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/reactivate.png\" alt=\"reactivate icon\" title=\"Reactivate\"/></a>\n+      <a href=\"#\" wicket:id=\"reactivateLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok-sign\" alt=\"reactivate icon\" title=\"Reactivate\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentReload\">\n@@ -161,27 +161,27 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentUnlink\">\n-      <a href=\"#\" wicket:id=\"unlinkLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/unlink-icon.png\" alt=\"Unlink icon\"  title=\"Unlink\"/></a>\n+      <a href=\"#\" wicket:id=\"unlinkLink\" class=\"btn\"><i class=\"fa fa-unlink\" alt=\"Unlink icon\" title=\"Unlink\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentLink\">\n-      <a href=\"#\" wicket:id=\"linkLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/link-icon.png\" alt=\"Link icon\"  title=\"Link\"/></a>\n+      <a href=\"#\" wicket:id=\"linkLink\" class=\"btn\"><i class=\"fa fa-link\" alt=\"Link icon\" title=\"Link\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentUnassign\">\n-      <a href=\"#\" wicket:id=\"unassignLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/unassign-icon.png\" alt=\"Unassign icon\"  title=\"Unassign\"/></a>\n+      <a href=\"#\" wicket:id=\"unassignLink\" class=\"btn\"><i class=\"glyphicon glyphicon-remove\" alt=\"Unassign icon\" title=\"Unassign\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentAssign\">\n-      <a href=\"#\" wicket:id=\"assignLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/assign-icon.png\" alt=\"Assign icon\"  title=\"Assign\"/></a>\n+      <a href=\"#\" wicket:id=\"assignLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok\" alt=\"Assign icon\" title=\"Assign\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDeprovision\">\n-      <a href=\"#\" wicket:id=\"deprovisionLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/deprovision-icon.png\" alt=\"De-provision icon\"  title=\"De-provision\"/></a>\n+      <a href=\"#\" wicket:id=\"deprovisionLink\" class=\"btn\"><i class=\"glyphicon glyphicon-minus\" alt=\"De-provision icon\" title=\"De-provision\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentProvision\">\n-      <a href=\"#\" wicket:id=\"provisionLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/provision-icon.png\" alt=\"Provision icon\"  title=\"Provision\"/></a>\n+      <a href=\"#\" wicket:id=\"provisionLink\" class=\"btn\"><i class=\"glyphicon glyphicon-share-alt\" alt=\"Provision icon\" title=\"Provision\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentZoomIn\">"},{"sha":"64e4a90666ed79e8a70084eab54cd245167cd512","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9682d57f4b564d800dee87afd5c666261df34740/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=9682d57f4b564d800dee87afd5c666261df34740","patch":"@@ -44,6 +44,7 @@\n       </wicket:fragment>\n \n       <div wicket:id=\"modal\" />\n+      <div wicket:id=\"alternativeDefaultModal\" />\n     </wicket:panel>\n   </body>\n </html>"}]}