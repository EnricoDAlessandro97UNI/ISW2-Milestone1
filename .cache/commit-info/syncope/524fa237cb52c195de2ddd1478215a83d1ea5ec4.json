{"sha":"524fa237cb52c195de2ddd1478215a83d1ea5ec4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUyNGZhMjM3Y2I1MmMxOTVkZTJkZGQxNDc4MjE1YTgzZDFlYTVlYzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-06-29T13:01:14Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-06-29T13:01:14Z"},"message":"[SYNCOPE-129] Delegation (#274) (#276)","tree":{"sha":"e33eacc7560066f59ce5969f414d7ed58bd712af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e33eacc7560066f59ce5969f414d7ed58bd712af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/524fa237cb52c195de2ddd1478215a83d1ea5ec4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg2xmaCRBK7hj4Ov3rIwAAd+oIAB6bPsnhx094r79XACFX7GXp\n0/e7JVNZmSLiKZo50nq7v+ec8VRd1/2ag8sQytVkfGR8ltxsWRVFD9pjKpJbfdTF\nYQWN0lKQSj6ru5XecjJ/jO2THnVh3rf25mJ1d7rq2B1sfgEkk1jkV6xSWbXNlH/E\nhqDLH4cHmjKY/SIAn7+zVXrzQxRWlBfFY++snpLBPVWzk/i90mw/ChvHYharnQJE\nm1t9nKAYMePG2S47kMytNi5Sw07Gn3yRew9ukkd1TIeZCX04ZOHOHqnfyU3pk22L\n0223/01imFudbacCiEL5CZLNsIjlsaG22momgnhq0D94TkYgI8Cj6gEqEr0NfwE=\n=0wXC\n-----END PGP SIGNATURE-----\n","payload":"tree e33eacc7560066f59ce5969f414d7ed58bd712af\nparent 19431962a9a00a287000d758cb286e9070d59817\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1624971674 +0200\ncommitter GitHub <noreply@github.com> 1624971674 +0200\n\n[SYNCOPE-129] Delegation (#274) (#276)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/524fa237cb52c195de2ddd1478215a83d1ea5ec4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/524fa237cb52c195de2ddd1478215a83d1ea5ec4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/524fa237cb52c195de2ddd1478215a83d1ea5ec4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"19431962a9a00a287000d758cb286e9070d59817","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/19431962a9a00a287000d758cb286e9070d59817","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/19431962a9a00a287000d758cb286e9070d59817"}],"stats":{"total":3445,"additions":3057,"deletions":388},"files":[{"sha":"ce208f92f6d347cb42a513f2ade5876feae639af","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.panels;\n+package org.apache.syncope.client.console.wizards.any;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n@@ -27,11 +27,11 @@\n import org.apache.syncope.client.console.commons.IdMConstants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.MergeLinkedAccountsResourcesPanel.ResourceSelectionDirectoryPanel.ResourcesDataProvider;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.any.MergeLinkedAccountsWizardModel;\n+import org.apache.syncope.client.console.wizards.any.MergeLinkedAccountsResourcesPanel.ResourceSelectionDirectoryPanel.ResourcesDataProvider;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.IdMEntitlement;","previous_filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel.java"},{"sha":"955ba56aab76aaef6b0803a81fbd698fc68cdc23","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.panels;\n+package org.apache.syncope.client.console.wizards.any;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n@@ -25,11 +25,11 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.panels.MergeLinkedAccountsReviewPanel.LinkedAccountsReviewDirectoryPanel.LinkedAccountsDataProvider;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.any.MergeLinkedAccountsWizardModel;\n+import org.apache.syncope.client.console.wizards.any.MergeLinkedAccountsReviewPanel.LinkedAccountsReviewDirectoryPanel.LinkedAccountsDataProvider;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;","previous_filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel.java"},{"sha":"3f76ad6a7067d5050d1be814b425db045cafc8a8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel.java","status":"renamed","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -16,8 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.panels;\n+package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.ArrayList;\n import org.apache.syncope.client.console.panels.search.AnySelectionDirectoryPanel;\n import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n@@ -26,7 +27,6 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wizards.any.MergeLinkedAccountsWizardModel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -42,9 +42,8 @@\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-import java.util.ArrayList;\n-\n public class MergeLinkedAccountsSearchPanel extends WizardStep {\n+\n     private static final long serialVersionUID = 1221037007528732347L;\n \n     private final WebMarkupContainer ownerContainer;\n@@ -73,14 +72,14 @@ public MergeLinkedAccountsSearchPanel(final MergeLinkedAccountsWizardModel model\n \n         userSearchFragment = new Fragment(\"search\", \"userSearchFragment\", this);\n         userSearchPanel = UserSearchPanel.class.cast(new UserSearchPanel.Builder(\n-            new ListModel<>(new ArrayList<>())).required(false).enableSearch(MergeLinkedAccountsSearchPanel.this).\n-            build(\"usersearch\"));\n+                new ListModel<>(new ArrayList<>())).required(false).enableSearch(MergeLinkedAccountsSearchPanel.this).\n+                build(\"usersearch\"));\n         userSearchFragment.add(userSearchPanel);\n \n         AnyTypeTO anyTypeTO = anyTypeRestClient.read(AnyTypeKind.USER.name());\n         userDirectoryPanel = UserSelectionDirectoryPanel.class.cast(new UserSelectionDirectoryPanel.Builder(\n-            anyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-            build(\"searchResult\"));\n+                anyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                build(\"searchResult\"));\n \n         userSearchFragment.add(userDirectoryPanel);\n         ownerContainer.add(userSearchFragment);\n@@ -91,19 +90,19 @@ public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n             final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n             final String fiql = \"username!~\" + this.wizardModel.getBaseUser().getUsername() + ';'\n-                + SearchUtils.buildFIQL(userSearchPanel.getModel().getObject(),\n-                SyncopeClient.getUserSearchConditionBuilder());\n+                    + SearchUtils.buildFIQL(userSearchPanel.getModel().getObject(),\n+                            SyncopeClient.getUserSearchConditionBuilder());\n             userDirectoryPanel.search(fiql, target);\n         } else if (event.getPayload() instanceof AnySelectionDirectoryPanel.ItemSelection) {\n             AnySelectionDirectoryPanel.ItemSelection payload =\n-                (AnySelectionDirectoryPanel.ItemSelection) event.getPayload();\n+                    (AnySelectionDirectoryPanel.ItemSelection) event.getPayload();\n \n             final AnyTO sel = payload.getSelection();\n             this.wizardModel.setMergingUser(new UserRestClient().read(sel.getKey()));\n \n             String tableId = ((Component) event.getSource()).\n-                get(\"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\").\n-                getMarkupId();\n+                    get(\"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\").\n+                    getMarkupId();\n             String js = \"$('#\" + tableId + \" tr').removeClass('active');\";\n             js += \"$('#\" + tableId + \" td[title=\" + sel.getKey() + \"]').parent().addClass('active');\";\n             payload.getTarget().prependJavaScript(js);","previous_filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel.java"},{"sha":"408e5ea790b2d4a5f75dcdb26e8a8650aa0916be","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsWizardBuilder.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsWizardBuilder.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,9 +28,6 @@\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.MergeLinkedAccountsResourcesPanel;\n-import org.apache.syncope.client.console.panels.MergeLinkedAccountsReviewPanel;\n-import org.apache.syncope.client.console.panels.MergeLinkedAccountsSearchPanel;\n import org.apache.syncope.client.console.panels.UserDirectoryPanel;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;"},{"sha":"c8f3ec909ccc605695ed8ece894852ea49159275","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel.html"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel.properties"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel_fr_CA.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel_fr_CA.properties"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel_it.properties"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel_ja.properties"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel_pt_BR.properties"},{"sha":"ecc7e940616c8a4af400ca9a8a490ce5374e51c7","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsResourcesPanel_ru.properties"},{"sha":"79274859430125117b4aa6d266e8f1f936d2d4e4","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel.html"},{"sha":"3fd6639997155e2e5f687cf90edaa95cc1dd5f85","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel.properties"},{"sha":"c2d89faeafeddf5bfb4f287f5e0d533ddc1f1157","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel_fr_CA.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel_fr_CA.properties"},{"sha":"c2d89faeafeddf5bfb4f287f5e0d533ddc1f1157","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel_it.properties"},{"sha":"c2d89faeafeddf5bfb4f287f5e0d533ddc1f1157","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel_ja.properties"},{"sha":"c2d89faeafeddf5bfb4f287f5e0d533ddc1f1157","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel_pt_BR.properties"},{"sha":"c2d89faeafeddf5bfb4f287f5e0d533ddc1f1157","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsReviewPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsReviewPanel_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsReviewPanel_ru.properties"},{"sha":"82edc1360e18efe0f7bf37b65c7cc90d31d4f309","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel.html"},{"sha":"5d25d9c13023914bbf466899c5e0ebaa8cd180f6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel.properties"},{"sha":"5d25d9c13023914bbf466899c5e0ebaa8cd180f6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel_fr_CA.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel_fr_CA.properties"},{"sha":"9ed65cadb39086649123010e23a91a6e469f7aa2","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel_it.properties"},{"sha":"5d25d9c13023914bbf466899c5e0ebaa8cd180f6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel_ja.properties"},{"sha":"5d25d9c13023914bbf466899c5e0ebaa8cd180f6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel_pt_BR.properties"},{"sha":"5d25d9c13023914bbf466899c5e0ebaa8cd180f6","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsSearchPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsSearchPanel_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","previous_filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/MergeLinkedAccountsSearchPanel_ru.properties"},{"sha":"118822ec0227a4d5102ed9b2871ea9a164db55cd","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardMgtButtonBar.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardMgtButtonBar.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -60,7 +60,7 @@ public MarkupContainer add(final Component... childs) {\n     private void ajaxify(final WizardButton button) {\n         button.add(new AjaxFormSubmitBehavior(\"click\") {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 18163421824742L;\n \n             @Override\n             protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {"},{"sha":"83de4f7212e210004188a28f86f779bfb57cbd1f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -39,7 +39,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.commons.RealmsUtils;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n@@ -113,6 +113,10 @@ public String fallback() {\n \n     protected Map<String, Set<String>> auth;\n \n+    protected List<String> delegations;\n+\n+    protected String delegatedBy;\n+\n     protected Roles roles;\n \n     public static SyncopeConsoleSession get() {\n@@ -259,6 +263,8 @@ public boolean authenticate(final String jwt) {\n     public void cleanup() {\n         client = null;\n         auth = null;\n+        delegations = null;\n+        delegatedBy = null;\n         selfTO = null;\n         services.clear();\n     }\n@@ -343,10 +349,27 @@ public Roles getRoles() {\n         return roles;\n     }\n \n+    public List<String> getDelegations() {\n+        return delegations;\n+    }\n+\n+    public String getDelegatedBy() {\n+        return delegatedBy;\n+    }\n+\n+    public void setDelegatedBy(final String delegatedBy) {\n+        this.delegatedBy = delegatedBy;\n+\n+        this.client.delegatedBy(delegatedBy);\n+\n+        refreshAuth(null);\n+    }\n+\n     public void refreshAuth(final String username) {\n         try {\n-            Pair<Map<String, Set<String>>, UserTO> self = client.self();\n+            Triple<Map<String, Set<String>>, List<String>, UserTO> self = client.self();\n             auth = self.getLeft();\n+            delegations = self.getMiddle();\n             selfTO = self.getRight();\n             roles = null;\n         } catch (ForbiddenException e) {"},{"sha":"ea418f725d55f72b27e5b0d6dcdbc1d1decb5432","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoConstants.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -102,6 +102,8 @@ public final class IdRepoConstants {\n \n     public static final String PREF_TYPE_EXTENSIONS_PAGINATOR_ROWS = \"typeextensions.paginator.rows\";\n \n+    public static final String PREF_DELEGATION_PAGINATOR_ROWS = \"delegation.paginator.rows\";\n+\n     public static final String PREF_TODO_PAGINATOR_ROWS = \"todo.paginator.rows\";\n \n     public static final String PREF_REPORT_PAGINATOR_ROWS = \"report.paginator.rows\";"},{"sha":"ae38a10c905e925f183a328715d078eec31fe34a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -191,7 +191,7 @@ public About(final String id, final IModel<Pair<String, List<SearchClause>>> mod\n             super(id, model);\n             setOutputMarkupId(true);\n \n-            final AjaxDropDownChoicePanel<String> type =\n+            AjaxDropDownChoicePanel<String> type =\n                     new AjaxDropDownChoicePanel<>(\"about\", \"anyType\", new Model<String>() {\n \n                         private static final long serialVersionUID = -2350296434572623272L;\n@@ -211,7 +211,7 @@ public void setObject(final String object) {\n             type.addRequiredLabel();\n             add(type);\n \n-            final ListModel<SearchClause> clauseModel = new ListModel<SearchClause>() {\n+            ListModel<SearchClause> clauseModel = new ListModel<SearchClause>() {\n \n                 private static final long serialVersionUID = 3769540249683319782L;\n \n@@ -224,7 +224,6 @@ public List<SearchClause> getObject() {\n                 public void setObject(final List<SearchClause> object) {\n                     model.getObject().setValue(object);\n                 }\n-\n             };\n \n             WebMarkupContainer searchContainer = new WebMarkupContainer(\"search\");\n@@ -275,7 +274,7 @@ public class Abouts extends WizardStep {\n         public Abouts(final NotificationWrapper modelObject) {\n             setTitleModel(new ResourceModel(\"about\"));\n \n-            final WebMarkupContainer aboutContainer = new WebMarkupContainer(\"about\");\n+            WebMarkupContainer aboutContainer = new WebMarkupContainer(\"about\");\n             aboutContainer.setOutputMarkupId(true);\n             add(aboutContainer);\n "},{"sha":"11a1cadc44afd88f659870a600078fbdcbadec57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":30,"deletions":5,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -29,9 +29,11 @@\n import org.apache.syncope.client.console.annotations.AMPage;\n import org.apache.syncope.client.ui.commons.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.IdMPage;\n+import org.apache.syncope.client.console.panels.DelegationSelectionPanel;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n import org.apache.syncope.client.console.rest.SyncopeRestClient;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n+import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n@@ -63,6 +65,7 @@\n import org.apache.wicket.markup.html.link.Link;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.ContentDisposition;\n@@ -87,7 +90,11 @@ public BasePage(final PageParameters parameters) {\n         add(body);\n \n         // header, footer\n-        body.add(new Label(\"username\", SyncopeConsoleSession.get().getSelfTO().getUsername()));\n+        String username = SyncopeConsoleSession.get().getSelfTO().getUsername();\n+        if (SyncopeConsoleSession.get().getDelegatedBy() != null) {\n+            username += \" (\" + SyncopeConsoleSession.get().getDelegatedBy() + \")\";\n+        }\n+        body.add(new Label(\"username\", username));\n \n         // right sidebar\n         PlatformInfo platformInfo = SyncopeConsoleSession.get().getPlatformInfo();\n@@ -294,10 +301,6 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         liContainer = new WebMarkupContainer(getLIContainerId(\"security\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"security\", Security.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER,\n-                String.format(\"%s,%s\",\n-                        IdRepoEntitlement.ROLE_LIST,\n-                        IdRepoEntitlement.APPLICATION_LIST));\n         liContainer.add(link);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n@@ -327,6 +330,28 @@ public void onClick(final AjaxRequestTarget target) {\n \n         body.add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));\n \n+        WebMarkupContainer delegationsContainer = new WebMarkupContainer(\"delegationsContainer\");\n+        body.add(delegationsContainer.setOutputMarkupPlaceholderTag(true).\n+                setVisible(!SyncopeConsoleSession.get().getDelegations().isEmpty()));\n+        delegationsContainer.add(new Label(\"delegationsHeader\", new ResourceModel(\"delegations\")));\n+        delegationsContainer.add(new ListView<String>(\"delegations\", SyncopeConsoleSession.get().getDelegations()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                item.add(new DelegationSelectionPanel(\"delegation\", item.getModelObject()));\n+            }\n+        });\n+\n+        body.add(new IndicatingOnConfirmAjaxLink<String>(\"endDelegation\", \"confirmDelegation\", true) {\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                SyncopeConsoleSession.get().setDelegatedBy(null);\n+                setResponsePage(Dashboard.class);\n+            }\n+        }.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true).\n+                setVisible(SyncopeConsoleSession.get().getDelegatedBy() != null));\n+\n         @SuppressWarnings(\"unchecked\")\n         Class<? extends WebPage> beforeLogout = (Class<? extends WebPage>) SyncopeConsoleSession.get().\n                 getAttribute(Constants.BEFORE_LOGOUT_PAGE);"},{"sha":"075eac0bbc9340faf098b255350741f34368a197","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Security.java","status":"modified","additions":40,"deletions":15,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -22,12 +22,17 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.panels.ApplicationDirectoryPanel;\n+import org.apache.syncope.client.console.panels.DelegationDirectoryPanel;\n import org.apache.syncope.client.console.panels.DynRealmDirectoryPanel;\n import org.apache.syncope.client.console.panels.RoleDirectoryPanel;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel;\n+import org.apache.syncope.client.console.wizards.DelegationWizardBuilder;\n import org.apache.syncope.client.console.wizards.role.RoleWizardBuilder;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -51,19 +56,37 @@ public Security(final PageParameters parameters) {\n     }\n \n     private List<ITab> buildTabList() {\n-        final List<ITab> tabs = new ArrayList<>();\n+        List<ITab> tabs = new ArrayList<>();\n \n-        tabs.add(new AbstractTab(new ResourceModel(\"roles\")) {\n+        if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.ROLE_LIST)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"roles\")) {\n \n-            private static final long serialVersionUID = -6815067322125799251L;\n+                private static final long serialVersionUID = -6815067322125799251L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new RoleDirectoryPanel.Builder(getPageReference()) {\n+\n+                        private static final long serialVersionUID = -5960765294082359003L;\n+\n+                    }.addNewItemPanelBuilder(\n+                            new RoleWizardBuilder(new RoleTO(), getPageReference()), true).build(panelId);\n+                }\n+            });\n+        }\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"delegations\")) {\n+\n+            private static final long serialVersionUID = 29722178554609L;\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new RoleDirectoryPanel.Builder(getPageReference()) {\n+                return new DelegationDirectoryPanel.Builder(getPageReference()) {\n \n-                    private static final long serialVersionUID = -5960765294082359003L;\n+                    private static final long serialVersionUID = 30231721305047L;\n \n-                }.addNewItemPanelBuilder(new RoleWizardBuilder(new RoleTO(), getPageReference()), true).build(panelId);\n+                }.addNewItemPanelBuilder(\n+                        new DelegationWizardBuilder(new DelegationTO(), getPageReference()), true).build(panelId);\n             }\n         });\n \n@@ -81,19 +104,21 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        tabs.add(new AbstractTab(new ResourceModel(\"applications\")) {\n+        if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.APPLICATION_LIST)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"applications\")) {\n \n-            private static final long serialVersionUID = -6815067322125799251L;\n+                private static final long serialVersionUID = -6815067322125799251L;\n \n-            @Override\n-            public Panel getPanel(final String panelId) {\n-                return new ApplicationDirectoryPanel.Builder(getPageReference()) {\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new ApplicationDirectoryPanel.Builder(getPageReference()) {\n \n-                    private static final long serialVersionUID = -5960765294082359003L;\n+                        private static final long serialVersionUID = -5960765294082359003L;\n \n-                }.build(panelId);\n-            }\n-        });\n+                    }.build(panelId);\n+                }\n+            });\n+        }\n \n         tabs.add(new AbstractTab(new ResourceModel(\"securityQuestions\")) {\n "},{"sha":"01ae391a18b16fc30cf17f34446f94262356ada3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ApplicationDirectoryPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -72,7 +72,6 @@ protected void onConfigure() {\n             super.onConfigure();\n             setFooterVisible(false);\n         }\n-\n     };\n \n     protected ApplicationDirectoryPanel(final String id, final Builder builder) {"},{"sha":"e503bcdccf129dcf0dde80118dd54e2d7a8e447e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DashboardOverviewPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -156,7 +156,7 @@ private static Triple<Integer, String, String> buildTotalAny1OrRoles(final Numbe\n         if (numbers.getAnyType1() == null) {\n             number = numbers.getTotalRoles();\n             label = new ResourceModel(\"roles\").getObject();\n-            icon = \"fa fa-users\";\n+            icon = \"fas fa-users\";\n         } else {\n             number = numbers.getTotalAny1();\n             label = numbers.getAnyType1();"},{"sha":"a900fb0fa8723eead7bc9322e7281711c6aaf14e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DelegationDirectoryPanel.java","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.IdRepoConstants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.DelegationDirectoryPanel.DelegationDataProvider;\n+import org.apache.syncope.client.console.rest.DelegationRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class DelegationDirectoryPanel extends\n+        DirectoryPanel<DelegationTO, DelegationTO, DelegationDataProvider, DelegationRestClient> {\n+\n+    private static final long serialVersionUID = 28300423726398L;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    protected DelegationDirectoryPanel(final String id, final Builder builder) {\n+        super(id, builder);\n+\n+        disableCheckBoxes();\n+        setShowResultPage(true);\n+\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected DelegationDataProvider dataProvider() {\n+        return new DelegationDataProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return IdRepoConstants.PREF_DELEGATION_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    protected List<IColumn<DelegationTO, String>> getColumns() {\n+        List<IColumn<DelegationTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<>(\n+                new ResourceModel(Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n+\n+        columns.add(new AbstractColumn<DelegationTO, String>(new ResourceModel(\"delegating\"), \"delegating\") {\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<DelegationTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DelegationTO> rowModel) {\n+\n+                String delegating = rowModel.getObject().getDelegating();\n+                if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n+                    delegating = userRestClient.read(delegating).getUsername();\n+                } else if (SyncopeConsoleSession.get().getSelfTO().getKey().equals(delegating)) {\n+                    delegating = SyncopeConsoleSession.get().getSelfTO().getUsername();\n+                }\n+\n+                cellItem.add(new Label(componentId, delegating));\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<DelegationTO, String>(new ResourceModel(\"delegated\"), \"delegated\") {\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<DelegationTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<DelegationTO> rowModel) {\n+\n+                String delegated = rowModel.getObject().getDelegated();\n+                if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n+                    delegated = userRestClient.read(delegated).getUsername();\n+                } else if (SyncopeConsoleSession.get().getSelfTO().getKey().equals(delegated)) {\n+                    delegated = SyncopeConsoleSession.get().getSelfTO().getUsername();\n+                }\n+\n+                cellItem.add(new Label(componentId, delegated));\n+            }\n+        });\n+\n+        columns.add(new DatePropertyColumn<>(new StringResourceModel(\"start\", this), \"start\", \"start\"));\n+\n+        columns.add(new DatePropertyColumn<>(new StringResourceModel(\"end\", this), \"end\", \"end\"));\n+\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"roles\"), null, \"roles\"));\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<DelegationTO> getActions(final IModel<DelegationTO> model) {\n+        ActionsPanel<DelegationTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<DelegationTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final DelegationTO ignore) {\n+                send(DelegationDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StringUtils.EMPTY);\n+        panel.add(new ActionLink<DelegationTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final DelegationTO ignore) {\n+                try {\n+                    DelegationRestClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StringUtils.EMPTY, true);\n+\n+        return panel;\n+    }\n+\n+    public abstract static class Builder\n+            extends DirectoryPanel.Builder<DelegationTO, DelegationTO, DelegationRestClient> {\n+\n+        private static final long serialVersionUID = 5530948153889495221L;\n+\n+        public Builder(final PageReference pageRef) {\n+            super(new DelegationRestClient(), pageRef);\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<DelegationTO> newInstance(final String id, final boolean wizardInModal) {\n+            return new DelegationDirectoryPanel(id, this);\n+        }\n+    }\n+\n+    protected static class DelegationDataProvider extends DirectoryDataProvider<DelegationTO> {\n+\n+        private static final long serialVersionUID = 28297380054779L;\n+\n+        private final SortableDataProviderComparator<DelegationTO> comparator;\n+\n+        public DelegationDataProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<DelegationTO> iterator(final long first, final long count) {\n+            List<DelegationTO> result = DelegationRestClient.list();\n+            Collections.sort(result, comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return DelegationRestClient.list().size();\n+        }\n+\n+        @Override\n+        public IModel<DelegationTO> model(final DelegationTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"680d8fe7d0d1ab344ec075dcc83e23ca51d8f311","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DelegationSelectionPanel.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.pages.Dashboard;\n+import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class DelegationSelectionPanel extends Panel {\n+\n+    private static final long serialVersionUID = 5820439948762L;\n+\n+    public DelegationSelectionPanel(final String id, final String delegating) {\n+        super(id);\n+\n+        IndicatingOnConfirmAjaxLink<String> link =\n+                new IndicatingOnConfirmAjaxLink<String>(\"link\", \"confirmDelegation\", true) {\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                SyncopeConsoleSession.get().setDelegatedBy(delegating);\n+                setResponsePage(Dashboard.class);\n+            }\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                if (delegating.equals(SyncopeConsoleSession.get().getDelegatedBy())) {\n+                    tag.append(\"class\", \"disabled\", \" \");\n+                }\n+            }\n+        };\n+        add(link);\n+        link.setOutputMarkupId(true);\n+        link.add(new Label(\"label\", delegating));\n+    }\n+}"},{"sha":"a621bd3367dae944fef6c962beedc9da4677d1f8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -122,7 +122,7 @@ protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n \n     @Override\n     public ActionsPanel<SecurityQuestionTO> getActions(final IModel<SecurityQuestionTO> model) {\n-        final ActionsPanel<SecurityQuestionTO> panel = super.getActions(model);\n+        ActionsPanel<SecurityQuestionTO> panel = super.getActions(model);\n \n         panel.add(new ActionLink<SecurityQuestionTO>() {\n \n@@ -150,7 +150,7 @@ public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ign\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        }, ActionLink.ActionType.DELETE, IdRepoEntitlement.TASK_DELETE, true);\n+        }, ActionLink.ActionType.DELETE, IdRepoEntitlement.SECURITY_QUESTION_DELETE, true);\n \n         return panel;\n     }"},{"sha":"d15188a7f55101dc59b4dae7e91205037c9dff79","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -412,7 +412,7 @@ protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n                 CheckBox checkBox = super.newCheckBox(id, model);\n                 checkBox.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n-                    private static final long serialVersionUID = 1L;\n+                    private static final long serialVersionUID = 18266219802290L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {"},{"sha":"4bab465dd5e6553655070f6d60b1d53be2ee4ca2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/ApplicationRestClient.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApplicationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApplicationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FApplicationRestClient.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -45,5 +45,4 @@ public static void create(final ApplicationTO applicationTO) {\n     public static List<ApplicationTO> list() {\n         return getService(ApplicationService.class).list();\n     }\n-\n }"},{"sha":"a5bb730250958196d922f7036d56d466e7609b11","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/DelegationRestClient.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FDelegationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FDelegationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FDelegationRestClient.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.rest.api.service.DelegationService;\n+\n+public class DelegationRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -381814125643246243L;\n+\n+    public static void delete(final String key) {\n+        getService(DelegationService.class).delete(key);\n+    }\n+\n+    public static DelegationTO read(final String key) {\n+        return getService(DelegationService.class).read(key);\n+    }\n+\n+    public static void update(final DelegationTO applicationTO) {\n+        getService(DelegationService.class).update(applicationTO);\n+    }\n+\n+    public static void create(final DelegationTO applicationTO) {\n+        getService(DelegationService.class).create(applicationTO);\n+    }\n+\n+    public static List<DelegationTO> list() {\n+        return getService(DelegationService.class).list();\n+    }\n+}"},{"sha":"09cf116a72e82cac4aaeba489db0a6641e5904d0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -104,7 +104,6 @@ protected void onAjaxClick(final AjaxRequestTarget target) {\n                     }\n                 };\n             }\n-\n         });\n         addBottomToolbar(new AjaxDataNavigationToolbar(this, container));\n         addBottomToolbar(new NoRecordsToolbar(this));"},{"sha":"861394e2e09d342b27dacdec75d3a629b3693426","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -90,7 +90,7 @@ public BaseModal(final String id) {\n \n         content = new AbstractModalPanel<T>(this, null) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = -6142277554912316095L;\n \n         };\n "},{"sha":"9148f64f1fe6de64bbab1e8082ed869c4335b223","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/DelegationWizardBuilder.java","status":"added","additions":210,"deletions":0,"changes":210,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,210 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.DelegationRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class DelegationWizardBuilder extends BaseAjaxWizardBuilder<DelegationTO> {\n+\n+    private static final long serialVersionUID = 16656970898539L;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    public DelegationWizardBuilder(final DelegationTO defaultItem, final PageReference pageRef) {\n+        super(defaultItem, pageRef);\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final DelegationTO modelObject) {\n+        if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+            DelegationRestClient.create(modelObject);\n+        } else {\n+            DelegationRestClient.update(modelObject);\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final DelegationTO modelObject, final WizardModel wizardModel) {\n+        if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())\n+                && SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_SEARCH)\n+                && SyncopeConsoleSession.get().owns(IdRepoEntitlement.DELEGATION_CREATE)) {\n+\n+            wizardModel.add(new UserSelectionWizardStep(\n+                    new ResourceModel(\"delegating\"), new PropertyModel<>(modelObject, \"delegating\"), pageRef));\n+            wizardModel.add(new UserSelectionWizardStep(\n+                    new ResourceModel(\"delegated\"), new PropertyModel<>(modelObject, \"delegated\"), pageRef));\n+        } else {\n+            wizardModel.add(new Users(modelObject));\n+        }\n+\n+        wizardModel.add(new StartEnd(modelObject));\n+        wizardModel.add(new Roles(modelObject));\n+\n+        return wizardModel;\n+    }\n+\n+    private class Users extends WizardStep {\n+\n+        private static final long serialVersionUID = 33859341441696L;\n+\n+        Users(final DelegationTO modelObject) {\n+            super();\n+\n+            setTitleModel(new ResourceModel(\"users\"));\n+\n+            IModel<String> delegating = new PropertyModel<>(modelObject, \"delegating\");\n+            IModel<String> delegated = new PropertyModel<>(modelObject, \"delegated\");\n+\n+            boolean isNew = getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey());\n+            if (!isNew) {\n+                if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n+                    delegating = Model.of(userRestClient.read(delegating.getObject()).getUsername());\n+                    delegated = Model.of(userRestClient.read(delegated.getObject()).getUsername());\n+                } else {\n+                    if (SyncopeConsoleSession.get().getSelfTO().getKey().equals(delegating.getObject())) {\n+                        delegating = Model.of(SyncopeConsoleSession.get().getSelfTO().getUsername());\n+                    }\n+                    if (SyncopeConsoleSession.get().getSelfTO().getKey().equals(delegated.getObject())) {\n+                        delegated = Model.of(SyncopeConsoleSession.get().getSelfTO().getUsername());\n+                    }\n+                }\n+            }\n+\n+            boolean isSelfOnly = !SyncopeConsoleSession.get().owns(IdRepoEntitlement.DELEGATION_CREATE);\n+            if (isSelfOnly) {\n+                modelObject.setDelegating(SyncopeConsoleSession.get().getSelfTO().getUsername());\n+            }\n+\n+            add(new AjaxTextFieldPanel(\n+                    \"delegating\",\n+                    \"delegating\",\n+                    delegating,\n+                    false).addRequiredLabel().\n+                    setEnabled(isNew && !isSelfOnly));\n+            add(new AjaxTextFieldPanel(\n+                    \"delegated\",\n+                    \"delegated\",\n+                    delegated,\n+                    false).addRequiredLabel().\n+                    setEnabled(isNew));\n+        }\n+    }\n+\n+    private static class StartEnd extends WizardStep {\n+\n+        private static final long serialVersionUID = 16957451737824L;\n+\n+        StartEnd(final DelegationTO modelObject) {\n+            super();\n+\n+            setTitleModel(new ResourceModel(\"validity\"));\n+\n+            add(new AjaxDateTimeFieldPanel(\n+                    \"start\",\n+                    \"start\",\n+                    new PropertyModel<>(modelObject, \"start\"),\n+                    FastDateFormat.getInstance(SyncopeConstants.DEFAULT_DATE_PATTERN)).\n+                    addRequiredLabel());\n+\n+            add(new AjaxDateTimeFieldPanel(\n+                    \"end\",\n+                    \"end\",\n+                    new PropertyModel<>(modelObject, \"end\"),\n+                    FastDateFormat.getInstance(SyncopeConstants.DEFAULT_DATE_PATTERN)));\n+        }\n+    }\n+\n+    private class Roles extends WizardStep implements WizardModel.ICondition {\n+\n+        private static final long serialVersionUID = 16957451737824L;\n+\n+        private final List<String> allRoles = new ArrayList<>();\n+\n+        private final DelegationTO modelObject;\n+\n+        Roles(final DelegationTO modelObject) {\n+            super();\n+            this.modelObject = modelObject;\n+\n+            setTitleModel(new ResourceModel(\"roles\"));\n+\n+            add(new AjaxPalettePanel.Builder<String>().\n+                    withFilter().\n+                    setAllowOrder(true).\n+                    build(\"roles\",\n+                            new PropertyModel<>(modelObject, \"roles\"),\n+                            new AjaxPalettePanel.Builder.Query<String>() {\n+\n+                        private static final long serialVersionUID = 3900199363626636719L;\n+\n+                        @Override\n+                        public List<String> execute(final String filter) {\n+                            if (StringUtils.isEmpty(filter) || \"*\".equals(filter)) {\n+                                return allRoles.size() > Constants.MAX_ROLE_LIST_SIZE\n+                                        ? allRoles.subList(0, Constants.MAX_ROLE_LIST_SIZE)\n+                                        : allRoles;\n+\n+                            }\n+                            return allRoles.stream().\n+                                    filter(role -> StringUtils.containsIgnoreCase(role, filter)).\n+                                    collect(Collectors.toList());\n+                        }\n+                    }).\n+                    hideLabel().\n+                    setOutputMarkupId(true));\n+        }\n+\n+        @Override\n+        public boolean evaluate() {\n+            if (modelObject.getDelegating() != null) {\n+                allRoles.clear();\n+\n+                if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n+                    allRoles.addAll(userRestClient.read(modelObject.getDelegating()).getRoles());\n+                } else if (SyncopeConsoleSession.get().getSelfTO().getKey().equals(modelObject.getDelegating())) {\n+                    allRoles.addAll(SyncopeConsoleSession.get().getSelfTO().getRoles());\n+                }\n+            }\n+            return true;\n+        }\n+    }\n+}"},{"sha":"c33dd8e37ed812a2872c9288541f746c57d857ba","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/UserSelectionWizardStep.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.util.ArrayList;\n+import org.apache.syncope.client.console.panels.search.AnySelectionDirectoryPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.panels.search.UserSelectionDirectoryPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class UserSelectionWizardStep extends WizardStep {\n+\n+    private static final long serialVersionUID = 36221031226727L;\n+\n+    private final IModel<String> model;\n+\n+    private final UserSearchPanel userSearchPanel;\n+\n+    private final UserSelectionDirectoryPanel userDirectoryPanel;\n+\n+    public UserSelectionWizardStep(\n+            final IModel<String> title, final IModel<String> model, final PageReference pageRef) {\n+\n+        super();\n+        setOutputMarkupId(true);\n+\n+        this.model = model;\n+        setTitleModel(title);\n+\n+        userSearchPanel = UserSearchPanel.class.cast(new UserSearchPanel.Builder(\n+                new ListModel<>(new ArrayList<>())).required(false).enableSearch(UserSelectionWizardStep.this).\n+                build(\"usersearch\"));\n+        add(userSearchPanel);\n+\n+        AnyTypeTO anyTypeTO = AnyTypeRestClient.read(AnyTypeKind.USER.name());\n+        userDirectoryPanel = UserSelectionDirectoryPanel.class.cast(new UserSelectionDirectoryPanel.Builder(\n+                AnyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                build(\"searchResult\"));\n+        add(userDirectoryPanel);\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n+            AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n+            String fiql = SearchUtils.buildFIQL(\n+                    userSearchPanel.getModel().getObject(), SyncopeClient.getUserSearchConditionBuilder());\n+            userDirectoryPanel.search(fiql, target);\n+        } else if (event.getPayload() instanceof AnySelectionDirectoryPanel.ItemSelection) {\n+            @SuppressWarnings(\"unchecked\")\n+            AnySelectionDirectoryPanel.ItemSelection<UserTO> payload =\n+                    (AnySelectionDirectoryPanel.ItemSelection<UserTO>) event.getPayload();\n+\n+            UserTO selected = payload.getSelection();\n+            this.model.setObject(selected.getKey());\n+\n+            String tableId = ((Component) event.getSource()).\n+                    get(\"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\").\n+                    getMarkupId();\n+            String js = \"$('#\" + tableId + \" tr').removeClass('active');\";\n+            js += \"$('#\" + tableId + \" td[title=\" + selected.getKey() + \"]').parent().addClass('active');\";\n+            payload.getTarget().prependJavaScript(js);\n+        }\n+    }\n+}"},{"sha":"8de168de384feb0547414c77f42e29035670f9e9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -141,7 +141,7 @@ protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n                 final CheckBox checkBox = super.newCheckBox(id, model);\n                 checkBox.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n-                    private static final long serialVersionUID = 1L;\n+                    private static final long serialVersionUID = 18235445704320L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {"},{"sha":"966af0ddadd96a31a7e1c29a79fa81ed29e1edab","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -79,3 +79,4 @@ keymaster=Keymaster\n domains=Domains\n nomatch=No matches found\n tooLargeFile=File is too large, max upload file size is ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB). \n+confirmDelegation=Do you really want to switch user?"},{"sha":"de288344fb71fa7122d48f1f20dd76dca444ae39","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_fr_CA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -78,3 +78,4 @@ keymaster=Keymaster\n domains=Domaines\n nomatch=Aucune correspondance trouv\\u00e9e\n tooLargeFile=Fichier trop volumineux, la taille maximale autoris\\u00e9e est de $ {maxUploadSizeB} octets ($ {maxUploadSizeMB} Mo).\n+confirmDelegation=Do you really want to switch user?"},{"sha":"59c56dc705c3b830402b42a6006638111231544b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -79,3 +79,4 @@ keymaster=Keymaster\n domains=Domini\n nomatch=Nessun risultato trovato\n tooLargeFile=File troppo grande, la dimensione massima ammessa \\u00e8 ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB). \n+confirmDelegation=Vuoi davvero cambiare utenza?"},{"sha":"ca0e84ecd7c8b1e902232c7312e3cea9e4294881","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -77,3 +77,4 @@ keymaster=\\u30ad\\u30fc\\u30de\\u30b9\\u30bf\\u30fc\n domains=\\u30c9\\u30e1\\u30a4\\u30f3\n nomatch=No matches found\n tooLargeFile=File is too large, max upload file size is ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB). \n+confirmDelegation=Do you really want to switch user?"},{"sha":"142ca0eb03cfb51180c9896c3ac837113e9c0465","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -79,3 +79,4 @@ keymaster=Keymaster\n domains=Dom\\u00ednios\n nomatch=Nenhuma correspond\\u00eancia encontrada\n tooLargeFile=File is too large, max upload file size is ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB). \n+confirmDelegation=Do you really want to switch user?"},{"sha":"9c58582f0229c002941922c9935b587fb0ea85dc","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -78,3 +78,4 @@ keymaster=Keymaster\n domains=Domains\n nomatch=No matches found\n tooLargeFile=File is too large, max upload file size is ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB). \n+confirmDelegation=Do you really want to switch user?"},{"sha":"c27b042d97dc2f620cf6c5d8f8509104809d30a9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -77,8 +77,25 @@\n                   <wicket:message key=\"domain\"/>: <label wicket:id=\"domain\"/>\n                 </div>\n               </li>\n+              <li class=\"user-body\" wicket:id=\"delegationsContainer\">\n+                <div class=\"row\">\n+                  <div class=\"col-xs-12 text-center\">\n+                    <div class=\"box box-primary\">\n+                      <div class=\"box-header\">\n+                        <h3 class=\"box-title\" wicket:id=\"delegationsHeader\"/>\n+                      </div>\n+                    </div>\n+                  </div>\n+                  <div class=\"col-xs-12 text-center\">\n+                    <span wicket:id=\"delegations\">\n+                      <span wicket:id=\"delegation\"/>\n+                    </span>\n+                  </div>\n+                </div>\n+              </li>\n               <!-- Menu Footer-->\n               <li class=\"user-footer\">\n+                <a href=\"#\" class=\"btn btn-default btn-flat float-left\" wicket:id=\"endDelegation\"><wicket:message key=\"endDelegation\"/></a>\n                 <a href=\"#\" class=\"btn btn-default btn-flat float-right\" wicket:id=\"logout\"><wicket:message key=\"logout\"/></a>\n               </li>\n             </ul>"},{"sha":"7b00c5e5386464d377084b1faa5781dd3d2b6359","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,3 +28,5 @@ download=Download\n accessibility=Accessibility\n highContrast=Toggle high contrast mode\n fontSize=Change font size\n+delegations=Delegations\n+endDelegation=End Delegation"},{"sha":"024bd5cc0da4c13c7f08c2153f0f776747987758","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,3 +28,5 @@ download=Scarica\n accessibility=Accessibilit\\u00e0\n highContrast=(Dis)attiva alto contrasto\n fontSize=Dimensione carattere\n+delegations=Deleghe\n+endDelegation=Termina Delega"},{"sha":"39d0b4cc0058ab7691a82a374d8778d456f04a9e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage_ja.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,3 +28,5 @@ download=Download\n accessibility=Accessibility\n highContrast=Toggle high contrast mode\n fontSize=Change font size\n+delegations=Delegations\n+endDelegation=End Delegation"},{"sha":"8d4868066f133c51beb471cadc893ec9e68dc9f4","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,3 +28,5 @@ download=Download\n accessibility=Accessibility\n highContrast=Toggle high contrast mode\n fontSize=Change font size\n+delegations=Delegations\n+endDelegation=End Delegation"},{"sha":"2e1944611b83ed37bd4b63cf2ab6b4f7caa18526","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage_ru.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,3 +28,5 @@ download=Download\n accessibility=Accessibility\n highContrast=Toggle high contrast mode\n fontSize=Change font size\n+delegations=Delegations\n+endDelegation=End Delegation"},{"sha":"3132aad52070af57a5c98768db8be9f5e07f3b21","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Security.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,3 +19,4 @@ dynRealms=Dynamic Realms\n privileges=Privileges\n applications=Applications\n securityQuestions=Security Questions\n+delegations=Delegations"},{"sha":"1a116a3df963146c5f7b3441a9fe5df5a0f3ca95","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Security_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,3 +19,4 @@ dynRealms=Realm dinamici\n privileges=Privilegi\n applications=Applicazioni\n securityQuestions=Domande di sicurezza\n+delegations=Deleghe"},{"sha":"e9892b7f34779c57ac30c2d15a2eaa82f1a9ee45","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Security_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,3 +19,4 @@ dynRealms=\\u52d5\\u7684\\u30ec\\u30eb\\u30e0\n privileges=\\u6a29\\u9650\n applications=\\u30a2\\u30d7\\u30ea\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\n securityQuestions=\\u79d8\\u5bc6\\u306e\\u8cea\\u554f\n+delegations=Delegations"},{"sha":"b0ff8d83f116d953aa3cde8f702b443a03644671","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Security_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,3 +19,4 @@ dynRealms=Realm din\\u00e2micos\n privileges=Privileges\n applications=Applications\n securityQuestions=Perguntas de seguran\\u00e7a\n+delegations=Delegations"},{"sha":"7e98f88ffa99ea39a9190952ad9a53e9310f9410","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Security_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurity_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -20,3 +20,4 @@ dynRealms=Dynamic Realms\n privileges=Privileges\n applications=Applications\n securityQuestions=\\u041a\\u043e\\u043d\\u0442\\u0440\\u043e\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0432\\u043e\\u043f\\u0440\\u043e\\u0441\\u044b\n+delegations=Delegations"},{"sha":"a7d7e6bc8f3e2d82c4737fec039faf902fd8b242","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/pages/BasePage_fr_CA.properties","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FBasePage_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FBasePage_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FBasePage_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -17,8 +17,10 @@\n home=Accueil\n version=Version\n domain=Domaine\n-systemInfo=Information sur le syst�me\n-hostname=Nom d'h�te\n+systemInfo=Information sur le syst\\u00e8me\n+hostname=Nom d'h\\u00f4te\n processors=Processeurs disponibles\n-os=Syst�me d'exploitation\n+os=Syst\\u00e8me d'exploitation\n jvm=JVM\n+delegations=Delegations\n+endDelegation=End Delegation"},{"sha":"92d8be67e7baef266871a9f9ef4ac0d5e4973145","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/pages/Security_fr_CA.properties","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FSecurity_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FSecurity_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2Fpages%2FSecurity_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -14,8 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-add=Cr�er nouveau r�le\n-Domaines dynamiques=Domaines dynamiques\n-privileges=Privil�ges\n+add=Cr\\u00e9er nouveau r\\u00f4le\n+dynRealms=Domaines dynamiques\n+privileges=Privil\\u00e8ges\n applications=Applications\n-securityQuestions=Questions de s�curit�\n+securityQuestions=Questions de s\\u00e9curit\\u00e9\n+delegations=Delegations"},{"sha":"4449fb46485dc4911defb9135006f246dc617e1c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Delegation ${key}\n+any.new=New Delegation\n+delegating=Delegating\n+delegated=Delegated\n+start=Start\n+end=End\n+validity=Validity"},{"sha":"2c80111e65595fa0ad1ec3ec5219dfb0dadca1ff","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel_fr_CA.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Delegation ${key}\n+any.new=New Delegation\n+delegating=Delegating\n+delegated=Delegated\n+start=D\\u00e9but\n+end=Fin\n+validity=Validity"},{"sha":"89de8bf03cdc595b5a563ecb3fd1dde0b9865eb2","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel_it.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica Delega ${key}\n+any.new=Nuova Delega\n+delegating=Delegante\n+delegated=Delegato\n+start=Inizio\n+end=Fine\n+validity=Validit\\u00e0"},{"sha":"4449fb46485dc4911defb9135006f246dc617e1c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel_ja.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Delegation ${key}\n+any.new=New Delegation\n+delegating=Delegating\n+delegated=Delegated\n+start=Start\n+end=End\n+validity=Validity"},{"sha":"4449fb46485dc4911defb9135006f246dc617e1c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel_pt_BR.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Delegation ${key}\n+any.new=New Delegation\n+delegating=Delegating\n+delegated=Delegated\n+start=Start\n+end=End\n+validity=Validity"},{"sha":"2438784c3207b755cc013d0f1a490320b3714dda","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationDirectoryPanel_ru.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+any.edit=Edit Delegation ${key}\n+any.new=New Delegation\n+delegating=Delegating\n+delegated=Delegated\n+start=\\u041d\\u0430\\u0447\\u0430\\u043b\\u043e\n+end=\\u041e\\u043a\\u043e\\u043d\\u0447\\u0430\\u043d\\u0438\\u0435\n+validity=Validity"},{"sha":"09083d7e2a2d543c17f9ab70a7966cabb452df0c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DelegationSelectionPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <a wicket:id=\"link\" class=\"btn btn-app\"><i class=\"fas fa-user\"></i><span wicket:id=\"label\"/></a>\n+  </wicket:panel>\n+</html>"},{"sha":"00a11b95caffdf7fbbfe112e84cfd65c31ab4cc0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/MembersTogglePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -23,7 +23,7 @@\n         <div class=\"input-group\">\n           <span wicket:id=\"type\"/>\n           <div class=\"input-group-append input-group-text\">\n-            <a wicket:id=\"changeit\"><i class=\"fa fa-users\" alt=\"members icon\" title=\"Members\"></i></a>\n+            <a wicket:id=\"changeit\"><i class=\"fas fa-users\" alt=\"members icon\" title=\"Members\"></i></a>\n           </div>\n         </div>\n       </form>"},{"sha":"a4ad3ebebca78799dcbdd2dddbc6173db15826ef","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -14,8 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-start=Start\n-end=End\n+start=Inizio\n+end=Fine\n status=Stato\n executor=Esecutore\n execution.view=Risultato dello stato dell'esecuzione '${key}'"},{"sha":"b655b4183c593a3fb3a46190bac5e5f8cd146fdd","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -109,7 +109,7 @@ view_details.class=fa fa-info-circle\n view_details.title=view details\n view_details.alt=view details icon\n \n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=members\n members.alt=members icon\n \n@@ -137,7 +137,7 @@ password_management.class=fas fa-shield-alt\n password_management.title=manage password\n password_management.alt=manage password icon\n \n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=request password reset\n request_password_reset.alt=password reset icon\n \n@@ -245,11 +245,11 @@ manage_resources.class=fa fa-sitemap\n manage_resources.title=manage resources\n manage_resources.alt=manage resources icon\n \n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=manage users\n manage_users.alt=manage users icon\n \n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=manage groups\n manage_groups.alt=manage groups icon\n \n@@ -269,7 +269,7 @@ zoom_out.class=fa fa-search-minus\n zoom_out.title=zoom-out\n zoom_out.alt=zoom-out icon\n \n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=manage accounts\n manage_accounts.alt=manage accounts icon\n "},{"sha":"5b4c3487607aa66ad60d627d0e9399a5ae187e35","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_fr_CA.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -86,7 +86,7 @@ view_executions.alt=ic\\u00f4ne afficher ex\\u00e9cutions\n view_details.class=fa fa-info-circle\n view_details.title=afficher d\\u00e9tails\n view_details.alt=ic\\u00f4ne afficher d\\u00e9tails\n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=membres\n members.alt=ic\\u00f4ne memnres\n search.class=fas fa-search\n@@ -107,7 +107,7 @@ execute.alt=ic\\u00f4ne ex\\u00e9cuter\n password_management.class=fas fa-shield-alt\n password_management.title=gestion du mot de passe\n password_management.alt=ic\\u00f4ne gestion du mot de passe\n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=demande de r\\u00e9initialisation du mot de passe\n request_password_reset.alt=ic\\u00f4ne r\\u00e9initialisation du mot de passe\n dryrun.class=fas fa-cogs\n@@ -188,10 +188,10 @@ reconciliation_pull.alt=ic\\u00f4ne pull r\\u00e9conciliation\n manage_resources.class=fa fa-sitemap\n manage_resources.title=g\\u00e9rer ressources\n manage_resources.alt=ic\\u00f4ne g\\u00e9rer ressources\n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=g\\u00e9rer utilisateurs\n manage_users.alt=ic\\u00f4ne g\\u00e9rer utilisateurs\n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=g\\u00e9rer groupes\n manage_groups.alt=ic\\u00f4ne g\\u00e9rer groupes\n propagation_tasks.class=fa fa-arrow-right\n@@ -206,7 +206,7 @@ zoom_in.alt=ic\\u00f4ne zoom-in\n zoom_out.class=fa fa-search-minus\n zoom_out.title=zoom-out\n zoom_out.alt=ic\\u00f4ne zoom-out\n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=g\\u00e9rer comptes\n manage_accounts.alt=ic\\u00f4ne g\\u00e9rer groupes\n view_audit_history.title=manage history"},{"sha":"4800f580bb733e93f6d1e5687f26dc6e724983bc","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_it.properties","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -110,7 +110,7 @@ view_details.class=fa fa-info-circle\n view_details.title=vedi dettagli\n view_details.alt=view details icon\n \n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=membri\n members.alt=members icon\n \n@@ -138,7 +138,7 @@ password_management.class=fas fa-shield-alt\n password_management.title=gestione password\n password_management.alt=manage password icon\n \n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=richiedi password reset\n request_password_reset.alt=password reset icon\n \n@@ -151,7 +151,7 @@ claim.title=claim\n claim.alt=claim icon\n \n select.class=fas fa-check\n-select.title=select\n+select.title=seleziona\n select.alt=select icon\n \n close.class=fas fa-sign-out-alt\n@@ -234,11 +234,11 @@ manage_resources.class=fa fa-sitemap\n manage_resources.title=gestisci risorse\n manage_resources.alt=manage resources icon\n \n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=gestisci utenti\n manage_users.alt=manage users icon\n \n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=gestisci gruppi\n manage_groups.alt=manage groups icon\n \n@@ -265,7 +265,7 @@ reconciliation_pull.class=fa fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n \n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=gestisci account\n manage_accounts.alt=manage accounts icon\n "},{"sha":"e0ec802ca079edd29b4e2c80286b946ae2077566","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ja.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -110,7 +110,7 @@ view_details.class=fa fa-info-circle\n view_details.title=\\u8a73\\u7d30\\u3092\\u8868\\u793a\n view_details.alt=\\u8a73\\u7d30\\u3092\\u8868\\u793a\n \n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=\\u30e1\\u30f3\\u30d0\\u30fc\n members.alt=\\u30e1\\u30f3\\u30d0\\u30fc\n \n@@ -138,7 +138,7 @@ password_management.class=fas fa-shield-alt\n password_management.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u7ba1\\u7406\n password_management.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u7ba1\\u7406icon\n \n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8\\u306e\\u8981\\u6c42\n request_password_reset.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8\\u306e\\u8981\\u6c42 icon\n \n@@ -234,11 +234,11 @@ manage_resources.class=fa fa-sitemap\n manage_resources.title=\\u30ea\\u30bd\\u30fc\\u30b9\\u7ba1\\u7406\n manage_resources.alt=\\u30ea\\u30bd\\u30fc\\u30b9\\u7ba1\\u7406\n \n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=\\u30e6\\u30fc\\u30b6\\u2015\\u7ba1\\u7406\n manage_users.alt=\\u30e6\\u30fc\\u30b6\\u2015\\u7ba1\\u7406\n \n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=\\u30b0\\u30eb\\u30fc\\u30d7\\u7ba1\\u7406\n manage_groups.alt=\\u30b0\\u30eb\\u30fc\\u30d7\\u7ba1\\u7406\n \n@@ -266,7 +266,7 @@ reconciliation_pull.class=fa fa-chevron-circle-left\n reconciliation_pull.title=\\u30d7\\u30eb\n reconciliation_pull.alt=\\u7167\\u5408\\u30d7\\u30eb icon\n \n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u3092\\u7ba1\\u7406\\u3059\\u308b\n manage_accounts.alt=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u7ba1\\u7406\\u30a2\\u30a4\\u30b3\\u30f3\n "},{"sha":"6002660d69a5ac17ad697dbd67b6dfaaec60e21b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_pt_BR.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -109,7 +109,7 @@ view_details.class=fa fa-info-circle\n view_details.title=view details\n view_details.alt=view details icon\n \n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=members\n members.alt=members icon\n \n@@ -137,7 +137,7 @@ password_management.class=fas fa-shield-alt\n password_management.title=manage password\n password_management.alt=manage password icon\n \n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=request password reset\n request_password_reset.alt=password reset icon\n \n@@ -245,11 +245,11 @@ manage_resources.class=fa fa-sitemap\n manage_resources.title=manage resources\n manage_resources.alt=manage resources icon\n \n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=manage users\n manage_users.alt=manage users icon\n \n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=manage groups\n manage_groups.alt=manage groups icon\n \n@@ -275,7 +275,7 @@ reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n \n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=manage accounts\n manage_accounts.alt=manage accounts icon\n "},{"sha":"050558b0d390a81a639131ed081d6c96f6428768","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ru.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -110,7 +110,7 @@ view_details.class=fa fa-info-circle\n view_details.title=view details\n view_details.alt=view details icon\n \n-members.class=fa fa-users\n+members.class=fas fa-users\n members.title=members\n members.alt=members icon\n \n@@ -138,7 +138,7 @@ password_management.class=fas fa-shield-alt\n password_management.title=manage password\n password_management.alt=manage password icon\n \n-request_password_reset.class=fa fa-user-secret\n+request_password_reset.class=fas fa-user-secret\n request_password_reset.title=request password reset\n request_password_reset.alt=password reset icon\n \n@@ -234,11 +234,11 @@ manage_resources.class=fa fa-sitemap\n manage_resources.title=manage resources\n manage_resources.alt=manage resources icon\n \n-manage_users.class=fa fa-users\n+manage_users.class=fas fa-users\n manage_users.title=manage users\n manage_users.alt=manage users icon\n \n-manage_groups.class=fa fa-users\n+manage_groups.class=fas fa-users\n manage_groups.title=manage groups\n manage_groups.alt=manage groups icon\n \n@@ -266,7 +266,7 @@ reconciliation_pull.class=fa fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n \n-manage_accounts.class=fa fa-users\n+manage_accounts.class=fas fa-users\n manage_accounts.title=manage accounts\n manage_accounts.alt=manage accounts icon\n "},{"sha":"2926df2a237a7842c74f066cecb5f9d29c255d72","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/DelegationWizardBuilder$Roles.html","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Roles.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Roles.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Roles.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,25 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"roles\"/>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"654eca0ead5987b725c9093c5f1d89e5fddde773","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/DelegationWizardBuilder$StartEnd.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24StartEnd.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24StartEnd.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24StartEnd.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"start\"/>\n+    </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"end\"/>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"8a731d8ed6e72d479ad64f4b2f513d5c6277a12b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/DelegationWizardBuilder$Users.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Users.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Users.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder%24Users.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"delegating\"/>\n+    </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"delegated\"/>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"157d5d84f11d963aa00a419109678abbe74f40ed","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/UserSelectionWizardStep.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FUserSelectionWizardStep.html?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"usersearch\">[USER SEARCH]</span>\n+    <div class=\"searchResult\">\n+      <span wicket:id=\"searchResult\">[USER SEARCH RESULT]</span>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"6e12edb4f2b18a39cab0b51930eb28301a3d5253","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -35,7 +35,7 @@\n import java.util.Properties;\n import java.util.Set;\n import java.util.stream.Stream;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.syncope.client.console.AbstractTest.TestSyncopeWebApplication.SyncopeServiceClient;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n@@ -254,7 +254,7 @@ private UserTO getUserTO() {\n         public SyncopeClientFactoryBean newClientFactory() {\n             SyncopeClient client = mock(SyncopeClient.class);\n \n-            when(client.self()).thenReturn(Pair.of(new HashMap<>(), getUserTO()));\n+            when(client.self()).thenReturn(Triple.of(new HashMap<>(), List.of(), getUserTO()));\n \n             SyncopeService syncopeService = getSyncopeService();\n             when(client.getService(SyncopeService.class)).thenReturn(syncopeService);\n@@ -281,7 +281,7 @@ public SyncopeClientFactoryBean newClientFactory() {\n     @BeforeAll\n     public static void loadProps() throws IOException {\n         PROPS = new Properties();\n-        try ( InputStream is = AbstractTest.class.getResourceAsStream(\"/console.properties\")) {\n+        try (InputStream is = AbstractTest.class.getResourceAsStream(\"/console.properties\")) {\n             PROPS.load(is);\n         }\n     }"},{"sha":"59345bd4edb05fdd60715e7ec3850e8c98c91dfb","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/AnonymousAuthenticationHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FAnonymousAuthenticationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FAnonymousAuthenticationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FAnonymousAuthenticationHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -26,5 +26,4 @@ public class AnonymousAuthenticationHandler extends BasicAuthenticationHandler i\n     public AnonymousAuthenticationHandler(final String username, final String password) {\n         super(username, password);\n     }\n-\n }"},{"sha":"94a1f6aea4abeabf8413be54d8f4279cc1129a33","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/BasicAuthenticationHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FBasicAuthenticationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FBasicAuthenticationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FBasicAuthenticationHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -39,5 +39,4 @@ public String getUsername() {\n     public String getPassword() {\n         return password;\n     }\n-\n }"},{"sha":"5d397e310eb5b7b28df84e333ac2aa7e6ae12475","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":23,"deletions":3,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -30,7 +30,7 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.configuration.jsse.TLSClientParameters;\n import org.apache.cxf.jaxrs.client.Client;\n import org.apache.cxf.jaxrs.client.ClientConfiguration;\n@@ -131,6 +131,7 @@ protected void init(final AuthenticationHandler handler) {\n \n     protected void cleanup() {\n         restClientFactory.getHeaders().remove(HttpHeaders.AUTHORIZATION);\n+        restClientFactory.getHeaders().remove(RESTHeaders.DELEGATED_BY);\n         restClientFactory.setUsername(null);\n         restClientFactory.setPassword(null);\n     }\n@@ -144,6 +145,21 @@ public String getAddress() {\n         return restClientFactory.getAddress();\n     }\n \n+    /**\n+     * Requests to invoke services as delegating user.\n+     *\n+     * @param delegating delegating username\n+     * @return this instance, for fluent usage\n+     */\n+    public SyncopeClient delegatedBy(final String delegating) {\n+        if (delegating == null) {\n+            restClientFactory.getHeaders().remove(RESTHeaders.DELEGATED_BY);\n+        } else {\n+            restClientFactory.getHeaders().put(RESTHeaders.DELEGATED_BY, List.of(delegating));\n+        }\n+        return this;\n+    }\n+\n     /**\n      * Attempts to extend the lifespan of the JWT currently in use.\n      */\n@@ -280,7 +296,7 @@ public <T> T getService(final Class<T> serviceClass) {\n         }\n     }\n \n-    public Pair<Map<String, Set<String>>, UserTO> self() {\n+    public Triple<Map<String, Set<String>>, List<String>, UserTO> self() {\n         // Explicitly disable header value split because it interferes with JSON deserialization below\n         UserSelfService service = getService(UserSelfService.class);\n         WebClient.getConfig(WebClient.client(service)).getRequestContext().put(HEADER_SPLIT_PROPERTY, false);\n@@ -294,11 +310,15 @@ public Pair<Map<String, Set<String>>, UserTO> self() {\n         }\n \n         try {\n-            return Pair.of(\n+            return Triple.of(\n                     OBJECT_MAPPER.readValue(\n                             response.getHeaderString(RESTHeaders.OWNED_ENTITLEMENTS),\n                             new TypeReference<Map<String, Set<String>>>() {\n                     }),\n+                    OBJECT_MAPPER.readValue(\n+                            response.getHeaderString(RESTHeaders.DELEGATIONS),\n+                            new TypeReference<List<String>>() {\n+                    }),\n                     response.readEntity(UserTO.class));\n         } catch (IOException e) {\n             throw new IllegalStateException(e);"},{"sha":"3d567c223410b1714e350f4e35b7fc4bb8a3c57a","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/DelegationTO.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDelegationTO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import io.swagger.v3.oas.annotations.media.Schema;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.ws.rs.PathParam;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+\n+@Schema(allOf = { AbstractStartEndBean.class })\n+public class DelegationTO extends AbstractStartEndBean implements EntityTO {\n+\n+    private static final long serialVersionUID = 18031949556054L;\n+\n+    private String key;\n+\n+    private String delegating;\n+\n+    private String delegated;\n+\n+    private final Set<String> roles = new HashSet<>();\n+\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n+    @Override\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @PathParam(\"key\")\n+    @Override\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public String getDelegating() {\n+        return delegating;\n+    }\n+\n+    public void setDelegating(final String delegating) {\n+        this.delegating = delegating;\n+    }\n+\n+    public String getDelegated() {\n+        return delegated;\n+    }\n+\n+    public void setDelegated(final String delegated) {\n+        this.delegated = delegated;\n+    }\n+\n+    @JacksonXmlElementWrapper(localName = \"roles\")\n+    @JacksonXmlProperty(localName = \"role\")\n+    public Set<String> getRoles() {\n+        return roles;\n+    }\n+\n+    @Schema(accessMode = Schema.AccessMode.READ_WRITE)\n+    @Override\n+    public Date getStart() {\n+        return super.getStart();\n+    }\n+\n+    @Schema(accessMode = Schema.AccessMode.READ_WRITE)\n+    @Override\n+    public Date getEnd() {\n+        return super.getEnd();\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(delegating).\n+                append(delegated).\n+                append(roles).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final DelegationTO other = (DelegationTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(delegating, other.delegating).\n+                append(delegated, other.delegated).\n+                append(roles, other.roles).\n+                build();\n+    }\n+}"},{"sha":"6b46f7038d251e9e42fb2b5936e54eac1c0ae414","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -74,6 +74,10 @@ public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private final List<LinkedAccountTO> linkedAccounts = new ArrayList<>();\n \n+    private final List<String> delegatingDelegations = new ArrayList<>();\n+\n+    private final List<String> delegatedDelegations = new ArrayList<>();\n+\n     @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n     @JsonProperty(\"_class\")\n     @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.to.UserTO\")\n@@ -261,6 +265,20 @@ public List<LinkedAccountTO> getLinkedAccounts() {\n         return linkedAccounts;\n     }\n \n+    @JacksonXmlElementWrapper(localName = \"delegatingDelegations\")\n+    @JacksonXmlProperty(localName = \"delegatingDelegation\")\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n+    public List<String> getDelegatingDelegations() {\n+        return delegatingDelegations;\n+    }\n+\n+    @JacksonXmlElementWrapper(localName = \"getDelegatedDelegations\")\n+    @JacksonXmlProperty(localName = \"getDelegatedDelegation\")\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n+    public List<String> getDelegatedDelegations() {\n+        return delegatedDelegations;\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n@@ -282,6 +300,8 @@ public int hashCode() {\n                 append(memberships).\n                 append(dynMemberships).\n                 append(linkedAccounts).\n+                append(delegatingDelegations).\n+                append(delegatedDelegations).\n                 build();\n     }\n \n@@ -316,6 +336,8 @@ public boolean equals(final Object obj) {\n                 append(memberships, other.memberships).\n                 append(dynMemberships, other.dynMemberships).\n                 append(linkedAccounts, other.linkedAccounts).\n+                append(delegatingDelegations, other.delegatingDelegations).\n+                append(delegatedDelegations, other.delegatedDelegations).\n                 build();\n     }\n }"},{"sha":"b88e4ad01fb6ebd88a2868ef395d541656be59ab","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/IdRepoEntitlement.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -240,6 +240,16 @@ public final class IdRepoEntitlement {\n \n     public static final String IMPLEMENTATION_DELETE = \"IMPLEMENTATION_DELETE\";\n \n+    public static final String DELEGATION_LIST = \"DELEGATION_LIST\";\n+\n+    public static final String DELEGATION_CREATE = \"DELEGATION_CREATE\";\n+\n+    public static final String DELEGATION_READ = \"DELEGATION_READ\";\n+\n+    public static final String DELEGATION_UPDATE = \"DELEGATION_UPDATE\";\n+\n+    public static final String DELEGATION_DELETE = \"DELEGATION_DELETE\";\n+\n     private static final Set<String> VALUES;\n \n     static {"},{"sha":"1164751973628a3977e94cfd2f4c3fc44cec20f6","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/RESTHeaders.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -33,6 +33,10 @@ public final class RESTHeaders {\n \n     public static final String OWNED_ENTITLEMENTS = \"X-Syncope-Entitlements\";\n \n+    public static final String DELEGATED_BY = \"X-Syncope-Delegated-By\";\n+\n+    public static final String DELEGATIONS = \"X-Syncope-Delegations\";\n+\n     public static final String RESOURCE_KEY = \"X-Syncope-Key\";\n \n     public static final String CONNOBJECT_KEY = \"X-Syncope-ConnObject-Key\";"},{"sha":"f9f9402e4b945ea4063f13c89898d16605ccd926","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AuditQuery.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.common.rest.api.beans;\n \n import io.swagger.v3.oas.annotations.Parameter;\n-import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.media.ArraySchema;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n@@ -87,8 +86,7 @@ public Builder result(final AuditElements.Result result) {\n \n     private AuditElements.Result result;\n \n-    @Parameter(name = JAXRSService.PARAM_ENTITY_KEY, in = ParameterIn.QUERY,\n-            description = \"audit entity key to match\", schema =\n+    @Parameter(name = JAXRSService.PARAM_ENTITY_KEY, description = \"audit entity key to match\", schema =\n             @Schema(implementation = String.class, example = \"50592942-73ec-44c4-a377-e859524245e4\"))\n     public String getEntityKey() {\n         return entityKey;"},{"sha":"f1e1854cd0317fade9a1df591d84c1631685b552","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DelegationService.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDelegationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDelegationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDelegationService.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n+import io.swagger.v3.oas.annotations.headers.Header;\n+import io.swagger.v3.oas.annotations.media.Schema;\n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n+import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n+import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n+import io.swagger.v3.oas.annotations.tags.Tag;\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+\n+/**\n+ * REST operations for delegations.\n+ */\n+@Tag(name = \"Delegations\")\n+@SecurityRequirements({\n+    @SecurityRequirement(name = \"BasicAuthentication\"),\n+    @SecurityRequirement(name = \"Bearer\") })\n+@Path(\"delegations\")\n+public interface DelegationService extends JAXRSService {\n+\n+    /**\n+     * Returns a list of all delegations.\n+     *\n+     * @return list of all delegations.\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    List<DelegationTO> list();\n+\n+    /**\n+     * Returns delegation with matching key.\n+     *\n+     * @param key delegation key to be read\n+     * @return delegation with matching key\n+     */\n+    @GET\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    DelegationTO read(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Creates a new delegation.\n+     *\n+     * @param delegationTO delegation to be created\n+     * @return Response object featuring Location header of created delegation\n+     */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"201\",\n+                    description = \"Delegation successfully created\", headers = {\n+                @Header(name = RESTHeaders.RESOURCE_KEY, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"Key value for the entity created\"),\n+                @Header(name = HttpHeaders.LOCATION, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"URL of the entity created\") }))\n+    @POST\n+    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    Response create(@NotNull DelegationTO delegationTO);\n+\n+    /**\n+     * Updates the delegation matching the provided key.\n+     *\n+     * @param delegationTO delegation to be stored\n+     */\n+    @Parameter(name = \"key\", description = \"Delegation's key\", in = ParameterIn.PATH, schema =\n+            @Schema(type = \"string\"))\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n+    @PUT\n+    @Path(\"{key}\")\n+    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    void update(@NotNull DelegationTO delegationTO);\n+\n+    /**\n+     * Deletes the delegation matching the provided key.\n+     *\n+     * @param key delegation key to be deleted\n+     */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n+    @DELETE\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    void delete(@NotNull @PathParam(\"key\") String key);\n+}"},{"sha":"8dc4e5448ada2d36bd387130d2683c4e706a2493","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -58,14 +58,14 @@ public interface UserSelfService extends JAXRSService {\n     /**\n      * Returns the user making the service call.\n      *\n-     * @return calling user data, including own UUID and entitlements\n+     * @return calling user data, including own UUID, entitlements and delegations\n      */\n     @Operation(security = {\n         @SecurityRequirement(name = \"BasicAuthentication\"),\n         @SecurityRequirement(name = \"Bearer\") })\n     @ApiResponses(\n-            @ApiResponse(responseCode = \"200\", description = \"Calling user data, including own UUID and entitlements\",\n-                    content =\n+            @ApiResponse(responseCode = \"200\",\n+                    description = \"Calling user data, including own UUID, entitlements and delegations\", content =\n                     @Content(schema =\n                             @Schema(implementation = UserTO.class)), headers = {\n                 @Header(name = RESTHeaders.RESOURCE_KEY, schema ="},{"sha":"eb558dc8d1a1e7e821ae767e2ab421fd2104f914","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/ApplicationLogic.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FApplicationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FApplicationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FApplicationLogic.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -133,5 +133,4 @@ protected ApplicationTO resolveReference(final Method method, final Object... ar\n \n         throw new UnresolvedReferenceException();\n     }\n-\n }"},{"sha":"bae38b39db3eb94ece7e8d338f1b9aff74eb55e8","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/DelegationLogic.java","status":"added","additions":164,"deletions":0,"changes":164,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDelegationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDelegationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FDelegationLogic.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,164 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+import org.apache.syncope.core.provisioning.api.data.DelegationDataBinder;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Component\n+public class DelegationLogic extends AbstractTransactionalLogic<DelegationTO> {\n+\n+    @Autowired\n+    private DelegationDataBinder binder;\n+\n+    @Autowired\n+    private DelegationDAO delegationDAO;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    private void securityChecks(final String delegating, final String entitlement) {\n+        if (!AuthContextUtils.getAuthorizations().keySet().contains(entitlement)\n+                && (delegating == null || !delegating.equals(userDAO.findKey(AuthContextUtils.getUsername())))) {\n+\n+            throw new DelegatedAdministrationException(\n+                    SyncopeConstants.ROOT_REALM, AnyTypeKind.USER.name(), delegating);\n+        }\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public DelegationTO read(final String key) {\n+        Delegation delegation = delegationDAO.find(key);\n+        if (delegation == null) {\n+            LOG.error(\"Could not find delegation '\" + key + \"'\");\n+            throw new NotFoundException(key);\n+        }\n+\n+        securityChecks(delegation.getDelegating().getKey(), IdRepoEntitlement.DELEGATION_READ);\n+\n+        return binder.getDelegationTO(delegation);\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public List<DelegationTO> list() {\n+        Stream<DelegationTO> delegations = delegationDAO.findAll().stream().map(binder::getDelegationTO);\n+\n+        if (!AuthContextUtils.getAuthorizations().keySet().contains(IdRepoEntitlement.DELEGATION_LIST)) {\n+            String authUserKey = userDAO.findKey(AuthContextUtils.getUsername());\n+            delegations = delegations.filter(delegation -> delegation.getDelegating().equals(authUserKey));\n+        }\n+\n+        return delegations.collect(Collectors.toList());\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public DelegationTO create(final DelegationTO delegationTO) {\n+        if (delegationTO.getDelegating() != null\n+                && !SyncopeConstants.UUID_PATTERN.matcher(delegationTO.getDelegating()).matches()) {\n+\n+            delegationTO.setDelegating(userDAO.findKey(delegationTO.getDelegating()));\n+        }\n+        if (delegationTO.getDelegated() != null\n+                && !SyncopeConstants.UUID_PATTERN.matcher(delegationTO.getDelegated()).matches()) {\n+\n+            delegationTO.setDelegated(userDAO.findKey(delegationTO.getDelegated()));\n+        }\n+\n+        securityChecks(delegationTO.getDelegating(), IdRepoEntitlement.DELEGATION_CREATE);\n+\n+        return binder.getDelegationTO(delegationDAO.save(binder.create(delegationTO)));\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public DelegationTO update(final DelegationTO delegationTO) {\n+        Delegation delegation = delegationDAO.find(delegationTO.getKey());\n+        if (delegation == null) {\n+            LOG.error(\"Could not find delegation '\" + delegationTO.getKey() + \"'\");\n+            throw new NotFoundException(delegationTO.getKey());\n+        }\n+\n+        securityChecks(delegation.getDelegating().getKey(), IdRepoEntitlement.DELEGATION_UPDATE);\n+\n+        return binder.getDelegationTO(delegationDAO.save(binder.update(delegation, delegationTO)));\n+    }\n+\n+    @PreAuthorize(\"isAuthenticated()\")\n+    public DelegationTO delete(final String key) {\n+        Delegation delegation = delegationDAO.find(key);\n+        if (delegation == null) {\n+            LOG.error(\"Could not find delegation '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        securityChecks(delegation.getDelegating().getKey(), IdRepoEntitlement.DELEGATION_DELETE);\n+\n+        DelegationTO deleted = binder.getDelegationTO(delegation);\n+        delegationDAO.delete(key);\n+        return deleted;\n+    }\n+\n+    @Override\n+    protected DelegationTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        String key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n+                } else if (args[i] instanceof DelegationTO) {\n+                    key = ((DelegationTO) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if (key != null) {\n+            try {\n+                return binder.getDelegationTO(delegationDAO.find(key));\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"25e0a8af95ea948b34ab83ff18c265a3931076e6","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/LogicInvocationHandler.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n@@ -34,10 +37,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n \n-import java.lang.reflect.Method;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n @Aspect\n public class LogicInvocationHandler {\n \n@@ -66,9 +65,9 @@ public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n         String event = joinPoint.getSignature().getName();\n \n         boolean notificationsAvailable = notificationManager.notificationsAvailable(\n-            AuditElements.EventCategoryType.LOGIC, category, null, event);\n+                AuditElements.EventCategoryType.LOGIC, category, null, event);\n         boolean auditRequested = auditManager.auditRequested(\n-            AuthContextUtils.getUsername(), AuditElements.EventCategoryType.LOGIC, category, null, event);\n+                AuthContextUtils.getUsername(), AuditElements.EventCategoryType.LOGIC, category, null, event);\n \n         AuditElements.Result condition = null;\n         Object output = null;\n@@ -101,15 +100,15 @@ public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n             if (notificationsAvailable || auditRequested) {\n                 Map<String, Object> jobMap = new HashMap<>();\n                 jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n-                    AuthContextUtils.getUsername(),\n-                    AuditElements.EventCategoryType.LOGIC,\n-                    category,\n-                    null,\n-                    event,\n-                    condition,\n-                    before,\n-                    output,\n-                    input));\n+                        AuthContextUtils.getWho(),\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        category,\n+                        null,\n+                        event,\n+                        condition,\n+                        before,\n+                        output,\n+                        input));\n                 AfterHandlingJob.schedule(scheduler, jobMap);\n             }\n         }"},{"sha":"8ce3ab292e3e5314c0bec43f72d8fa7a6a432789","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -26,6 +26,7 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.BooleanReplacePatchItem;\n@@ -45,6 +46,7 @@\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -82,6 +84,9 @@ public class UserLogic extends AbstractAnyLogic<UserTO, UserCR, UserUR> {\n     @Autowired\n     protected AccessTokenDAO accessTokenDAO;\n \n+    @Autowired\n+    protected DelegationDAO delegationDAO;\n+\n     @Autowired\n     protected ConfParamOps confParamOps;\n \n@@ -96,10 +101,13 @@ public class UserLogic extends AbstractAnyLogic<UserTO, UserCR, UserUR> {\n \n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + IdRepoEntitlement.MUST_CHANGE_PASSWORD + \"'))\")\n     @Transactional(readOnly = true)\n-    public Pair<String, UserTO> selfRead() {\n-        return Pair.of(\n+    public Triple<String, String, UserTO> selfRead() {\n+        UserTO authenticatedUser = binder.getAuthenticatedUserTO();\n+\n+        return Triple.of(\n                 POJOHelper.serialize(AuthContextUtils.getAuthorizations()),\n-                binder.returnUserTO(binder.getAuthenticatedUserTO()));\n+                POJOHelper.serialize(delegationDAO.findValidDelegating(authenticatedUser.getKey())),\n+                binder.returnUserTO(authenticatedUser));\n     }\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.USER_READ + \"')\")"},{"sha":"45709444d7db6fff716f1acb4fff346e969a7f75","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -117,16 +117,15 @@ public OpenAPIConfiguration customize(final OpenAPIConfiguration configuration)\n     @Override\n     protected void addParameters(final List<Parameter> parameters) {\n         Optional<Parameter> domainHeaderParameter = parameters.stream().filter(parameter\n-                -> parameter instanceof HeaderParameter && RESTHeaders.DOMAIN.equals(parameter.getName())).\n-                findFirst();\n+                -> parameter instanceof HeaderParameter && RESTHeaders.DOMAIN.equals(parameter.getName())).findFirst();\n         if (domainHeaderParameter.isEmpty()) {\n             HeaderParameter parameter = new HeaderParameter();\n             parameter.setName(RESTHeaders.DOMAIN);\n             parameter.setRequired(true);\n \n             ExternalDocumentation extDoc = new ExternalDocumentation();\n             extDoc.setDescription(\"Apache Syncope Reference Guide\");\n-            extDoc.setUrl(\"http://syncope.apache.org/docs/2.1/reference-guide.html#domains\");\n+            extDoc.setUrl(\"http://syncope.apache.org/docs/3.0/reference-guide.html#domains\");\n \n             Schema<String> schema = new Schema<>();\n             schema.setDescription(\"Domains are built to facilitate multitenancy.\");\n@@ -137,6 +136,25 @@ protected void addParameters(final List<Parameter> parameters) {\n \n             parameters.add(parameter);\n         }\n+\n+        Optional<Parameter> delegatedByHeaderParameter = parameters.stream().\n+                filter(p -> p instanceof HeaderParameter && RESTHeaders.DELEGATED_BY.equals(p.getName())).findFirst();\n+        if (!delegatedByHeaderParameter.isPresent()) {\n+            HeaderParameter parameter = new HeaderParameter();\n+            parameter.setName(RESTHeaders.DELEGATED_BY);\n+            parameter.setRequired(false);\n+\n+            ExternalDocumentation extDoc = new ExternalDocumentation();\n+            extDoc.setDescription(\"Apache Syncope Reference Guide\");\n+            extDoc.setUrl(\"http://syncope.apache.org/docs/3.0/reference-guide.html#delegation\");\n+\n+            Schema<String> schema = new Schema<>();\n+            schema.setDescription(\"Acton behalf of someone else\");\n+            schema.setExternalDocs(extDoc);\n+            parameter.setSchema(schema);\n+\n+            parameters.add(parameter);\n+        }\n     }\n \n     @Override"},{"sha":"a0354ee6f377f3b1da6ce2222abd383b67caf879","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ApplicationServiceImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FApplicationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FApplicationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FApplicationServiceImpl.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -68,5 +68,4 @@ public void update(final ApplicationTO applicationTO) {\n     public void delete(final String key) {\n         logic.delete(key);\n     }\n-\n }"},{"sha":"d6da13e9055496dcce6e04cd2808bfbcd8f1df3c","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/DelegationServiceImpl.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDelegationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDelegationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDelegationServiceImpl.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import java.net.URI;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.DelegationService;\n+import org.apache.syncope.core.logic.DelegationLogic;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class DelegationServiceImpl extends AbstractServiceImpl implements DelegationService {\n+\n+    @Autowired\n+    private DelegationLogic logic;\n+\n+    @Override\n+    public List<DelegationTO> list() {\n+        return logic.list();\n+    }\n+\n+    @Override\n+    public DelegationTO read(final String key) {\n+        return logic.read(key);\n+    }\n+\n+    @Override\n+    public Response create(final DelegationTO applicationTO) {\n+        DelegationTO created = logic.create(applicationTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n+                build();\n+    }\n+\n+    @Override\n+    public void update(final DelegationTO applicationTO) {\n+        logic.update(applicationTO);\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        logic.delete(key);\n+    }\n+}"},{"sha":"bd4176ac5b857f28a31acc467cdc663248670cc0","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.StatusR;\n@@ -58,10 +58,11 @@ public Response create(final UserCR createReq) {\n \n     @Override\n     public Response read() {\n-        Pair<String, UserTO> self = logic.selfRead();\n+        Triple<String, String, UserTO> self = logic.selfRead();\n         return Response.ok().\n                 header(RESTHeaders.RESOURCE_KEY, self.getRight().getKey()).\n                 header(RESTHeaders.OWNED_ENTITLEMENTS, self.getLeft()).\n+                header(RESTHeaders.DELEGATIONS, self.getMiddle()).\n                 entity(self.getRight()).\n                 build();\n     }\n@@ -74,7 +75,7 @@ public Response update(final UserUR updateReq) {\n \n     @Override\n     public Response update(final UserTO user) {\n-        Pair<String, UserTO> self = logic.selfRead();\n+        Triple<String, String, UserTO> self = logic.selfRead();\n         return update(AnyOperations.diff(user, self.getRight(), false));\n     }\n "},{"sha":"09ac3499b543cd10e73f1bac7b8589179040e016","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DelegationDAO.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDelegationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDelegationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDelegationDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+import org.apache.syncope.core.persistence.api.entity.Role;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+\n+public interface DelegationDAO extends DAO<Delegation> {\n+\n+    Delegation find(String key);\n+\n+    Optional<String> findValidFor(String delegating, String delegated);\n+\n+    List<String> findValidDelegating(String delegated);\n+\n+    List<Delegation> findByDelegating(User user);\n+\n+    List<Delegation> findByDelegated(User user);\n+\n+    List<Delegation> findByRole(Role role);\n+\n+    List<Delegation> findAll();\n+\n+    Delegation save(Delegation delegation);\n+\n+    void delete(String key);\n+}"},{"sha":"0539ef3bf361b14841ef99c9f8bebc9d5468a7f5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/LoggerDAO.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -41,6 +41,14 @@ public interface LoggerDAO extends DAO<Logger> {\n \n     void delete(Logger logger);\n \n+    int countAuditEntries(\n+            String entityKey,\n+            AuditElements.EventCategoryType type,\n+            String category,\n+            String subcategory,\n+            List<String> events,\n+            AuditElements.Result result);\n+\n     List<AuditEntry> findAuditEntries(\n             String entityKey,\n             int page,\n@@ -51,11 +59,4 @@ List<AuditEntry> findAuditEntries(\n             List<String> events,\n             AuditElements.Result result,\n             List<OrderByClause> orderByClauses);\n-\n-    int countAuditEntries(String entityKey,\n-                          AuditElements.EventCategoryType type,\n-                          String category,\n-                          String subcategory,\n-                          List<String> events,\n-                          AuditElements.Result result);\n }"},{"sha":"98302bfc60e676f5e58225fa4e32d12d9fe81213","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -46,6 +46,8 @@ public interface UserDAO extends AnyDAO<User> {\n      */\n     void securityChecks(Set<String> authRealms, String key, String realm, Collection<String> groups);\n \n+    Optional<String> findUsername(String key);\n+\n     Map<String, Integer> countByRealm();\n \n     Map<String, Integer> countByStatus();"},{"sha":"07c34c5d299c30fb71e5f893b30a5dccf331039f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Delegation.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDelegation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDelegation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDelegation.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+import java.util.Date;\n+import java.util.Set;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+\n+public interface Delegation extends Entity {\n+\n+    User getDelegating();\n+\n+    void setDelegating(User delegating);\n+\n+    User getDelegated();\n+\n+    void setDelegated(User delegated);\n+\n+    void setStart(Date start);\n+\n+    Date getStart();\n+\n+    void setEnd(Date end);\n+\n+    Date getEnd();\n+\n+    boolean add(Role role);\n+\n+    Set<? extends Role> getRoles();\n+}"},{"sha":"d22842a374576510c821a7cba81bd2ca49a8b8c7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADelegationDAO.java","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADelegationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADelegationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADelegationDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.dao;\n+\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import javax.persistence.TypedQuery;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+import org.apache.syncope.core.persistence.api.entity.Role;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.persistence.jpa.entity.JPADelegation;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class JPADelegationDAO extends AbstractDAO<Delegation> implements DelegationDAO {\n+\n+    @Override\n+    public Delegation find(final String key) {\n+        return entityManager().find(JPADelegation.class, key);\n+    }\n+\n+    @Override\n+    public Optional<String> findValidFor(final String delegating, final String delegated) {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \"\n+                + \"WHERE e.delegating.id=:delegating AND e.delegated.id=:delegated \"\n+                + \"AND e.start <= :now AND (e.end IS NULL OR e.end >= :now)\", Delegation.class);\n+        query.setParameter(\"delegating\", delegating);\n+        query.setParameter(\"delegated\", delegated);\n+        query.setParameter(\"now\", new Date());\n+        query.setMaxResults(1);\n+\n+        List<Delegation> raw = query.getResultList();\n+        return raw.isEmpty() ? Optional.empty() : Optional.of(raw.get(0).getKey());\n+    }\n+\n+    @Override\n+    public List<String> findValidDelegating(final String delegated) {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \"\n+                + \"WHERE e.delegated.id=:delegated \"\n+                + \"AND e.start <= :now AND (e.end IS NULL OR e.end >= :now)\", Delegation.class);\n+        query.setParameter(\"delegated\", delegated);\n+        query.setParameter(\"now\", new Date());\n+\n+        return query.getResultList().stream().\n+                map(delegation -> delegation.getDelegating().getUsername()).\n+                collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public List<Delegation> findByDelegating(final User user) {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \"\n+                + \"WHERE e.delegating=:user\", Delegation.class);\n+        query.setParameter(\"user\", user);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<Delegation> findByDelegated(final User user) {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \"\n+                + \"WHERE e.delegated=:user\", Delegation.class);\n+        query.setParameter(\"user\", user);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<Delegation> findByRole(final Role role) {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \"\n+                + \"WHERE :role MEMBER OF e.roles\", Delegation.class);\n+        query.setParameter(\"role\", role);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<Delegation> findAll() {\n+        TypedQuery<Delegation> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPADelegation.class.getSimpleName() + \" e \", Delegation.class);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public Delegation save(final Delegation delegation) {\n+        return entityManager().merge(delegation);\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        Delegation delegation = find(key);\n+        if (delegation == null) {\n+            return;\n+        }\n+\n+        entityManager().remove(delegation);\n+    }\n+}"},{"sha":"a2f44dd393dcd5d7a9c088d8d1badd2ac1825f13","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPALoggerDAO.java","status":"modified","additions":17,"deletions":11,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -43,42 +43,45 @@ protected static class MessageCriteriaBuilder {\n \n         protected final StringBuilder query = new StringBuilder();\n \n+        protected String andIfNeeded() {\n+            return query.length() == 0 ? \" \" : \" AND \";\n+        }\n+\n         protected MessageCriteriaBuilder entityKey(final String entityKey) {\n-            if (entityKey == null) {\n-                query.append(\" 1=1\");\n-            } else {\n-                query.append(' ').append(AUDIT_MESSAGE_COLUMN).append(\" LIKE '%key%\").append(entityKey).append(\"%'\");\n+            if (entityKey != null) {\n+                query.append(andIfNeeded()).append(AUDIT_MESSAGE_COLUMN).\n+                        append(\" LIKE '%key%\").append(entityKey).append(\"%'\");\n             }\n             return this;\n         }\n \n         public MessageCriteriaBuilder type(final AuditElements.EventCategoryType type) {\n             if (type != null) {\n-                query.append(\" AND \").append(AUDIT_MESSAGE_COLUMN).\n+                query.append(andIfNeeded()).append(AUDIT_MESSAGE_COLUMN).\n                         append(\" LIKE '%\\\"type\\\":\\\"\").append(type.name()).append(\"\\\"%'\");\n             }\n             return this;\n         }\n \n         public MessageCriteriaBuilder category(final String category) {\n             if (StringUtils.isNotBlank(category)) {\n-                query.append(\" AND \").append(AUDIT_MESSAGE_COLUMN).\n+                query.append(andIfNeeded()).append(AUDIT_MESSAGE_COLUMN).\n                         append(\" LIKE '%\\\"category\\\":\\\"\").append(category).append(\"\\\"%'\");\n             }\n             return this;\n         }\n \n         public MessageCriteriaBuilder subcategory(final String subcategory) {\n             if (StringUtils.isNotBlank(subcategory)) {\n-                query.append(\" AND \").append(AUDIT_MESSAGE_COLUMN).\n+                query.append(andIfNeeded()).append(AUDIT_MESSAGE_COLUMN).\n                         append(\" LIKE '%\\\"subcategory\\\":\\\"\").append(subcategory).append(\"\\\"%'\");\n             }\n             return this;\n         }\n \n         public MessageCriteriaBuilder events(final List<String> events) {\n             if (!events.isEmpty()) {\n-                query.append(\" AND ( \").\n+                query.append(andIfNeeded()).append(\"( \").\n                         append(events.stream().\n                                 map(event -> AUDIT_MESSAGE_COLUMN + \" LIKE '%\\\"event\\\":\\\"\" + event + \"\\\"%'\").\n                                 collect(Collectors.joining(\" OR \"))).\n@@ -89,7 +92,7 @@ public MessageCriteriaBuilder events(final List<String> events) {\n \n         public MessageCriteriaBuilder result(final AuditElements.Result result) {\n             if (result != null) {\n-                query.append(\" AND \").append(AUDIT_MESSAGE_COLUMN).\n+                query.append(andIfNeeded()).append(AUDIT_MESSAGE_COLUMN).\n                         append(\" LIKE '%\\\"result\\\":\\\"\").append(result.name()).append(\"\\\"%' \");\n             }\n             return this;\n@@ -142,13 +145,16 @@ protected MessageCriteriaBuilder messageCriteriaBuilder(final String entityKey)\n     }\n \n     @Override\n-    public int countAuditEntries(final String entityKey,\n+    public int countAuditEntries(\n+            final String entityKey,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final String subcategory,\n             final List<String> events,\n             final AuditElements.Result result) {\n-        String queryString = \"SELECT COUNT(0) FROM \" + AUDIT_TABLE\n+\n+        String queryString = \"SELECT COUNT(0)\"\n+                + \" FROM \" + AUDIT_TABLE\n                 + \" WHERE \" + messageCriteriaBuilder(entityKey).\n                         type(type).\n                         category(category)."},{"sha":"9ebb0eceb3bd69366a13d3d741b0d664ec42d21e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.persistence.api.search.SearchCondConverter;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.Role;\n@@ -55,6 +56,9 @@ public class JPARoleDAO extends AbstractDAO<Role> implements RoleDAO {\n     @Autowired\n     private AnySearchDAO searchDAO;\n \n+    @Autowired\n+    private DelegationDAO delegationDAO;\n+\n     @Autowired\n     private SearchCondVisitor searchCondVisitor;\n \n@@ -136,6 +140,8 @@ public void delete(final Role role) {\n \n         clearDynMembers(role);\n \n+        delegationDAO.findByRole(role).forEach(delegation -> delegation.getRoles().remove(role));\n+\n         entityManager().remove(role);\n     }\n "},{"sha":"e3f86757b9f1c01c78fc1780f32129852a731328","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -44,12 +44,14 @@\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n@@ -95,6 +97,9 @@ public class JPAUserDAO extends AbstractAnyDAO<User> implements UserDAO {\n     @Autowired\n     protected GroupDAO groupDAO;\n \n+    @Autowired\n+    protected DelegationDAO delegationDAO;\n+\n     @Resource(name = \"adminUser\")\n     protected String adminUser;\n \n@@ -118,6 +123,22 @@ public Date findLastChange(final String key) {\n         return findLastChange(key, JPAUser.TABLE);\n     }\n \n+    @Transactional(readOnly = true)\n+    @Override\n+    public Optional<String> findUsername(final String key) {\n+        Query query = entityManager().createNativeQuery(\"SELECT username FROM \" + JPAUser.TABLE + \" WHERE id=?\");\n+        query.setParameter(1, key);\n+\n+        String username = null;\n+        for (Object resultKey : query.getResultList()) {\n+            username = resultKey instanceof Object[]\n+                    ? (String) ((Object[]) resultKey)[0]\n+                    : ((String) resultKey);\n+        }\n+\n+        return Optional.ofNullable(username);\n+    }\n+\n     @Override\n     public int count() {\n         Query query = entityManager().createQuery(\n@@ -456,6 +477,13 @@ public void delete(final User user) {\n         groupDAO.removeDynMemberships(user);\n         dynRealmDAO.removeDynMemberships(user.getKey());\n \n+        Set<String> delegations = delegationDAO.findByDelegating(user).stream().\n+                map(Delegation::getKey).collect(Collectors.toSet());\n+        delegations.forEach(delegationDAO::delete);\n+        delegations = delegationDAO.findByDelegated(user).stream().\n+                map(Delegation::getKey).collect(Collectors.toSet());\n+        delegations.forEach(delegationDAO::delete);\n+\n         AccessToken accessToken = accessTokenDAO.findByOwner(user.getUsername());\n         if (accessToken != null) {\n             accessTokenDAO.delete(accessToken);"},{"sha":"e49325f0d697fbf6d7bc47ea95bcda5e5e8d5742","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPADelegation.java","status":"added","additions":129,"deletions":0,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADelegation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADelegation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPADelegation.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.persistence.Cacheable;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+import javax.persistence.UniqueConstraint;\n+import javax.validation.constraints.NotNull;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+import org.apache.syncope.core.persistence.api.entity.Role;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.DelegationCheck;\n+\n+@Entity\n+@Table(name = JPADelegation.TABLE, uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"delegating_id\", \"delegated_id\" }))\n+@Cacheable\n+@DelegationCheck\n+public class JPADelegation extends AbstractGeneratedKeyEntity implements Delegation {\n+\n+    public static final String TABLE = \"Delegation\";\n+\n+    private static final long serialVersionUID = 17988340419552L;\n+\n+    @ManyToOne(optional = false)\n+    private JPAUser delegating;\n+\n+    @ManyToOne(optional = false)\n+    private JPAUser delegated;\n+\n+    @NotNull\n+    @Temporal(TemporalType.TIMESTAMP)\n+    @Column(name = \"startDate\")\n+    private Date start;\n+\n+    @Temporal(TemporalType.TIMESTAMP)\n+    @Column(name = \"endDate\")\n+    private Date end;\n+\n+    @OneToMany\n+    private Set<JPARole> roles = new HashSet<>();\n+\n+    @Override\n+    public User getDelegating() {\n+        return delegating;\n+    }\n+\n+    @Override\n+    public void setDelegating(final User delegating) {\n+        checkType(delegating, JPAUser.class);\n+        this.delegating = (JPAUser) delegating;\n+    }\n+\n+    @Override\n+    public User getDelegated() {\n+        return delegated;\n+    }\n+\n+    @Override\n+    public void setDelegated(final User delegated) {\n+        checkType(delegated, JPAUser.class);\n+        this.delegated = (JPAUser) delegated;\n+    }\n+\n+    @Override\n+    public Date getStart() {\n+        return start == null\n+                ? null\n+                : new Date(start.getTime());\n+    }\n+\n+    @Override\n+    public void setStart(final Date start) {\n+        this.start = start == null\n+                ? null\n+                : new Date(start.getTime());\n+    }\n+\n+    @Override\n+    public Date getEnd() {\n+        return end == null\n+                ? null\n+                : new Date(end.getTime());\n+    }\n+\n+    @Override\n+    public void setEnd(final Date end) {\n+        this.end = end == null\n+                ? null\n+                : new Date(end.getTime());\n+    }\n+\n+    @Override\n+    public boolean add(final Role role) {\n+        checkType(role, JPARole.class);\n+        return roles.add((JPARole) role);\n+    }\n+\n+    @Override\n+    public Set<? extends Role> getRoles() {\n+        return roles;\n+    }\n+}"},{"sha":"c15bdb2b13c035ce445b54754c3d6ec26f2fcda7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.core.persistence.api.entity.Batch;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.ConnPoolConf;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.DynRealm;\n import org.apache.syncope.core.persistence.api.entity.DynRealmMembership;\n@@ -317,6 +318,8 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPARemediation();\n         } else if (reference.equals(Batch.class)) {\n             result = (E) new JPABatch();\n+        } else if (reference.equals(Delegation.class)) {\n+            result = (E) new JPADelegation();\n         } else if (reference.equals(SRARoute.class)) {\n             result = (E) new JPASRARoute();\n         } else if (reference.equals(AuthModule.class)) {"},{"sha":"ffb8207cad950802c84f6f7d95449ba8aaf035b7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/DelegationCheck.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationCheck.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = DelegationValidator.class)\n+@Documented\n+public @interface DelegationCheck {\n+\n+    String message() default \"{org.apache.syncope.core.persistence.validation.delegation}\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+}"},{"sha":"c90eec33bb1de576abfa124530c6a28ce900c1a6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/DelegationValidator.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FDelegationValidator.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+\n+public class DelegationValidator extends AbstractValidator<DelegationCheck, Delegation> {\n+\n+    @Override\n+    public boolean isValid(final Delegation delegation, final ConstraintValidatorContext context) {\n+        context.disableDefaultConstraintViolation();\n+\n+        boolean isValid = true;\n+\n+        if (delegation.getDelegating().equals(delegation.getDelegated())) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.Standard, \"delegating must be different from delegated\")).\n+                    addPropertyNode(\"delegating\").addConstraintViolation();\n+\n+            isValid = false;\n+        }\n+\n+        if (isValid && delegation.getEnd() != null && !delegation.getEnd().after(delegation.getStart())) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.Standard, \"when end is provided it must to be after start\")).\n+                    addPropertyNode(\"end\").addConstraintViolation();\n+\n+            isValid = false;\n+        }\n+\n+        if (isValid && !delegation.getDelegating().getRoles().containsAll(delegation.getRoles())) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.Standard, \"only Roles assigned to delegating User can be granted\")).\n+                    addPropertyNode(\"roles\").addConstraintViolation();\n+\n+            isValid = false;\n+        }\n+\n+        return isValid;\n+    }\n+}"},{"sha":"52d031319d3923386a8839b3186487a087b02b16","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -624,7 +624,7 @@ public void asGroupOwner() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"poorGroupOwner\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN));\n+        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN, null));\n \n         SecurityContextHolder.getContext().setAuthentication(auth);\n         try {"},{"sha":"4d1b103c662f90cf5e62b405654bb6531a3ff6b2","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -62,7 +62,7 @@ public void findAll() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"admin\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(\"Master\"));\n+        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN, null));\n         SecurityContextHolder.getContext().setAuthentication(auth);\n \n         try {"},{"sha":"0fc1ea812c79ec3f72ba8bbc3b64c4662aecbcad","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMultitenancyTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -67,7 +67,7 @@ public static void setAuthContext() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"admin\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(\"Two\"));\n+        auth.setDetails(new SyncopeAuthenticationDetails(\"Two\", null));\n         SecurityContextHolder.getContext().setAuthentication(auth);\n     }\n "},{"sha":"9d213b797f052b90a12226492f0213b78d2ff507","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -101,7 +101,7 @@ public void findAll() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"admin\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(\"Master\"));\n+        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN, null));\n         SecurityContextHolder.getContext().setAuthentication(auth);\n \n         try {"},{"sha":"6c65f91be6b790cb7629a429e32e583cb0b856bd","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -83,7 +83,7 @@ public static void setAuthContext() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"admin\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(\"Master\"));\n+        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN, null));\n         SecurityContextHolder.getContext().setAuthentication(auth);\n     }\n "},{"sha":"617bbf414f6239fc3353d257a87f1f6d368d43e9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RoleTest.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -25,6 +25,8 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -33,10 +35,12 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n@@ -66,6 +70,9 @@ public class RoleTest extends AbstractTest {\n     @Autowired\n     private AnyTypeClassDAO anyTypeClassDAO;\n \n+    @Autowired\n+    private DelegationDAO delegationDAO;\n+\n     /**\n      * Static copy of {@link org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO} method with same signature:\n      * required for avoiding creating new transaction - good for general use case but bad for the way how\n@@ -202,4 +209,31 @@ public void delete() {\n         assertNotNull(user);\n         assertTrue(user.getRoles().isEmpty());\n     }\n+\n+    @Test\n+    public void deleteCascadeOnDelegations() {\n+        User bellini = userDAO.findByUsername(\"bellini\");\n+        User rossini = userDAO.findByUsername(\"rossini\");\n+\n+        Role reviewer = roleDAO.find(\"User reviewer\");\n+\n+        Delegation delegation = entityFactory.newEntity(Delegation.class);\n+        delegation.setDelegating(bellini);\n+        delegation.setDelegated(rossini);\n+        delegation.setStart(new Date());\n+        delegation.add(reviewer);\n+        delegation = delegationDAO.save(delegation);\n+\n+        entityManager().flush();\n+\n+        delegation = delegationDAO.find(delegation.getKey());\n+\n+        assertEquals(Collections.singletonList(delegation), delegationDAO.findByRole(reviewer));\n+\n+        roleDAO.delete(reviewer.getKey());\n+\n+        entityManager().flush();\n+\n+        assertTrue(delegationDAO.find(delegation.getKey()).getRoles().isEmpty());\n+    }\n }"},{"sha":"c0b1d9bc49bc5c5ab0eed8cc26cf34aebc9a0109","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -25,6 +25,7 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n \n+import java.util.Date;\n import java.util.List;\n import java.util.Objects;\n import java.util.UUID;\n@@ -33,15 +34,19 @@\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.ApplicationDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.user.LAPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.LinkedAccount;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n@@ -85,6 +90,12 @@ public class UserTest extends AbstractTest {\n     @Autowired\n     private ApplicationDAO applicationDAO;\n \n+    @Autowired\n+    private DelegationDAO delegationDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Test\n     public void delete() {\n         List<UMembership> memberships = groupDAO.findUMemberships(groupDAO.findByName(\"managingDirector\"));\n@@ -318,6 +329,34 @@ public void deleteLinkedAccountResourceCascade() {\n         assertNull(entityManager().find(JPALinkedAccount.class, account.getKey()));\n     }\n \n+    @Test\n+    public void deleteCascadeOnDelegations() {\n+        User bellini = userDAO.findByUsername(\"bellini\");\n+        User rossini = userDAO.findByUsername(\"rossini\");\n+\n+        Role reviewer = roleDAO.find(\"User reviewer\");\n+\n+        Delegation delegation = entityFactory.newEntity(Delegation.class);\n+        delegation.setDelegating(bellini);\n+        delegation.setDelegated(rossini);\n+        delegation.setStart(new Date());\n+        delegation.add(reviewer);\n+        delegation = delegationDAO.save(delegation);\n+\n+        entityManager().flush();\n+\n+        delegation = delegationDAO.find(delegation.getKey());\n+\n+        assertEquals(List.of(delegation), delegationDAO.findByDelegating(bellini));\n+        assertEquals(List.of(delegation), delegationDAO.findByDelegated(rossini));\n+\n+        userDAO.delete(rossini.getKey());\n+\n+        entityManager().flush();\n+\n+        assertNull(delegationDAO.find(delegation.getKey()));\n+    }\n+\n     /**\n      * Search by derived attribute.\n      */"},{"sha":"ece45d3a304605cfdc72dc05703e507dbae58014","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/DelegationDataBinder.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FDelegationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FDelegationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FDelegationDataBinder.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.data;\n+\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+\n+public interface DelegationDataBinder {\n+\n+    Delegation create(DelegationTO delegationTO);\n+\n+    Delegation update(Delegation delegation, DelegationTO delegationTO);\n+\n+    DelegationTO getDelegationTO(Delegation delegation);\n+}"},{"sha":"60be552c6bad209f2658e232b27f6e741bdcad07","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DelegationDataBinderImpl.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDelegationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDelegationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDelegationDataBinderImpl.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.data;\n+\n+import java.util.Iterator;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.Role;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.data.DelegationDataBinder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DelegationDataBinderImpl implements DelegationDataBinder {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DelegationDataBinder.class);\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n+    @Autowired\n+    private EntityFactory entityFactory;\n+\n+    @Override\n+    public Delegation create(final DelegationTO delegationTO) {\n+        Delegation delegation = entityFactory.newEntity(Delegation.class);\n+\n+        User delegating = Optional.ofNullable(userDAO.find(delegationTO.getDelegating())).\n+                orElseThrow(() -> new NotFoundException(\"Delegating User \" + delegationTO.getDelegating()));\n+        delegation.setDelegating(delegating);\n+\n+        User delegated = Optional.ofNullable(userDAO.find(delegationTO.getDelegated())).\n+                orElseThrow(() -> new NotFoundException(\"Delegated User \" + delegationTO.getDelegated()));\n+        delegation.setDelegated(delegated);\n+\n+        return update(delegation, delegationTO);\n+    }\n+\n+    @Override\n+    public Delegation update(final Delegation delegation, final DelegationTO delegationTO) {\n+        delegation.setStart(delegationTO.getStart());\n+        delegation.setEnd(delegationTO.getEnd());\n+\n+        // 1. add or update all (valid) roles from TO\n+        delegationTO.getRoles().forEach(roleTO -> {\n+            if (roleTO == null) {\n+                LOG.error(\"Null {}\", RoleTO.class.getSimpleName());\n+            } else {\n+                Role role = roleDAO.find(roleTO);\n+                if (role == null) {\n+                    SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRole);\n+                    sce.getElements().add(\"Role \" + roleTO + \" not found\");\n+                    throw sce;\n+                }\n+\n+                delegation.add(role);\n+            }\n+        });\n+\n+        // 2. remove all roles not contained in the TO\n+        for (Iterator<? extends Role> itor = delegation.getRoles().iterator(); itor.hasNext();) {\n+            Role role = itor.next();\n+            if (!delegationTO.getRoles().stream().anyMatch(roleKey -> roleKey.equals(role.getKey()))) {\n+                itor.remove();\n+            }\n+        }\n+\n+        return delegation;\n+    }\n+\n+    @Override\n+    public DelegationTO getDelegationTO(final Delegation delegation) {\n+        DelegationTO delegationTO = new DelegationTO();\n+\n+        delegationTO.setKey(delegation.getKey());\n+        delegationTO.setDelegating(delegation.getDelegating().getKey());\n+        delegationTO.setDelegated(delegation.getDelegated().getKey());\n+        delegationTO.setStart(delegation.getStart());\n+        delegationTO.setEnd(delegation.getEnd());\n+        delegationTO.getRoles().addAll(delegation.getRoles().stream().map(Role::getKey).collect(Collectors.toSet()));\n+\n+        return delegationTO;\n+    }\n+}"},{"sha":"cf29706f58061719414f963a12618e44f7b61dd1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -57,9 +57,11 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ApplicationDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n@@ -96,6 +98,9 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Autowired\n     private AccessTokenDAO accessTokenDAO;\n \n+    @Autowired\n+    private DelegationDAO delegationDAO;\n+\n     @Autowired\n     private ConfParamOps confParamOps;\n \n@@ -118,7 +123,7 @@ public UserTO returnUserTO(final UserTO userTO) {\n     @Transactional(readOnly = true)\n     @Override\n     public UserTO getAuthenticatedUserTO() {\n-        final UserTO authUserTO;\n+        UserTO authUserTO;\n \n         String authUsername = AuthContextUtils.getUsername();\n         if (anonymousUser.equals(authUsername)) {\n@@ -770,6 +775,12 @@ public UserTO getUserTO(final User user, final boolean details) {\n             // linked accounts\n             userTO.getLinkedAccounts().addAll(\n                     user.getLinkedAccounts().stream().map(this::getLinkedAccountTO).collect(Collectors.toList()));\n+\n+            // delegations\n+            userTO.getDelegatingDelegations().addAll(\n+                    delegationDAO.findByDelegating(user).stream().map(Delegation::getKey).collect(Collectors.toList()));\n+            userTO.getDelegatedDelegations().addAll(\n+                    delegationDAO.findByDelegated(user).stream().map(Delegation::getKey).collect(Collectors.toList()));\n         }\n \n         return userTO;"},{"sha":"df88571543e72678c2b993c2e80215f646bbffe7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -148,7 +148,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         status.set(\"Done\");\n \n         notificationManager.createTasks(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.TASK,\n                 this.getClass().getSimpleName(),\n                 null,\n@@ -158,14 +158,14 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n                 execution);\n \n         auditManager.audit(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.TASK,\n                 task.getClass().getSimpleName(),\n                 null,\n                 null, // searching for before object is too much expensive ...\n                 result,\n                 task,\n-                (Object[]) null);\n+                null);\n     }\n \n     /**"},{"sha":"d2d73a46e3e69b893f79a8b9ae596c568c850c8d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/DefaultNotificationJobDelegate.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -159,7 +159,7 @@ public TaskExec executeSingle(final NotificationTask task, final String executor\n                     }\n \n                     notificationManager.createTasks(\n-                            AuthContextUtils.getUsername(),\n+                            AuthContextUtils.getWho(),\n                             AuditElements.EventCategoryType.TASK,\n                             \"notification\",\n                             null,\n@@ -178,7 +178,7 @@ public TaskExec executeSingle(final NotificationTask task, final String executor\n                     }\n \n                     notificationManager.createTasks(\n-                            AuthContextUtils.getUsername(),\n+                            AuthContextUtils.getWho(),\n                             AuditElements.EventCategoryType.TASK,\n                             \"notification\",\n                             null,\n@@ -250,7 +250,7 @@ private void handleRetries(final TaskExec execution) {\n             notificationManager.setTaskExecuted(execution.getTask().getKey(), false);\n \n             auditManager.audit(\n-                    AuthContextUtils.getUsername(),\n+                    AuthContextUtils.getWho(),\n                     AuditElements.EventCategoryType.TASK,\n                     \"notification\",\n                     null,\n@@ -264,7 +264,7 @@ private void handleRetries(final TaskExec execution) {\n             LOG.error(\"Maximum number of retries reached for task {} - giving up\", execution.getTask());\n \n             auditManager.audit(\n-                    AuthContextUtils.getUsername(),\n+                    AuthContextUtils.getWho(),\n                     AuditElements.EventCategoryType.TASK,\n                     \"notification\",\n                     null,"},{"sha":"048b1e4d3ef0a38e8807e3a5d2a8b84e23bcbaed","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -482,7 +482,7 @@ public TaskExec execute(\n         if (notificationsAvailable || auditRequested) {\n             ExecTO execTO = taskDataBinder.getExecTO(execution);\n             notificationManager.createTasks(\n-                    AuthContextUtils.getUsername(),\n+                    AuthContextUtils.getWho(),\n                     AuditElements.EventCategoryType.PROPAGATION,\n                     anyTypeKind,\n                     task.getResource().getKey(),\n@@ -493,7 +493,7 @@ public TaskExec execute(\n                     taskInfo);\n \n             auditManager.audit(\n-                    AuthContextUtils.getUsername(),\n+                    AuthContextUtils.getWho(),\n                     AuditElements.EventCategoryType.PROPAGATION,\n                     anyTypeKind,\n                     task.getResource().getKey(),"},{"sha":"94cb8afff78540ce65ec2590ee2ff362b36729b5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -923,7 +923,7 @@ protected void end(\n         }\n \n         notificationManager.createTasks(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.PULL,\n                 anyTypeKind.name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n@@ -935,7 +935,7 @@ protected void end(\n                 furtherInput);\n \n         auditManager.audit(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.PULL,\n                 anyTypeKind.name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),"},{"sha":"70e229cf256096411a76623d482c896524da97dc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -478,7 +478,7 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n                 if (notificationsAvailable || auditRequested) {\n                     Map<String, Object> jobMap = new HashMap<>();\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n-                            AuthContextUtils.getUsername(),\n+                            AuthContextUtils.getWho(),\n                             AuditElements.EventCategoryType.PUSH,\n                             any.getType().getKind().name().toLowerCase(),\n                             profile.getTask().getResource().getKey(),"},{"sha":"aa1382b1e0eacd48f3d6581765d40997af805ff0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -734,7 +734,7 @@ private void finalize(\n         }\n \n         notificationManager.createTasks(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.PULL,\n                 SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n@@ -745,7 +745,7 @@ private void finalize(\n                 delta);\n \n         auditManager.audit(\n-                AuthContextUtils.getUsername(),\n+                AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.PULL,\n                 SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                 profile.getTask().getResource().getKey(),"},{"sha":"b89e630f37bb9ad526d4b73997496904c85b7a31","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -427,7 +427,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                 if (notificationsAvailable || auditRequested) {\n                     Map<String, Object> jobMap = new HashMap<>();\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n-                            AuthContextUtils.getUsername(),\n+                            AuthContextUtils.getWho(),\n                             AuditElements.EventCategoryType.PUSH,\n                             SyncopeConstants.REALM_ANYTYPE.toLowerCase(),\n                             profile.getTask().getResource().getKey(),"},{"sha":"68d381b09fbfe2cf9a3056540921ae843ff4faa4","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderTest.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -77,7 +77,7 @@ public static void setAuthContext() {\n         UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n                 new org.springframework.security.core.userdetails.User(\n                         \"admin\", \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(\"Master\"));\n+        auth.setDetails(new SyncopeAuthenticationDetails(SyncopeConstants.MASTER_DOMAIN, null));\n         SecurityContextHolder.getContext().setAuthentication(auth);\n     }\n "},{"sha":"0728f0828b607f33c6ccd3a5ae884305adf1bd11","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java","status":"modified","additions":33,"deletions":23,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,22 +19,22 @@\n package org.apache.syncope.core.spring.security;\n \n import java.util.Collection;\n-import org.apache.syncope.common.lib.types.EntitlementsHolder;\n-\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.concurrent.Callable;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.types.EntitlementsHolder;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n-import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.security.core.userdetails.User;\n \n@@ -59,29 +59,39 @@ public static void updateUsername(final String newUsername) {\n         SecurityContextHolder.getContext().setAuthentication(newAuth);\n     }\n \n-    public static Set<SyncopeGrantedAuthority> getAuthorities() {\n-        SecurityContext ctx = SecurityContextHolder.getContext();\n-        if (ctx != null && ctx.getAuthentication() != null && ctx.getAuthentication().getAuthorities() != null) {\n-            return ctx.getAuthentication().getAuthorities().stream().\n-                    filter(SyncopeGrantedAuthority.class::isInstance).\n-                    map(SyncopeGrantedAuthority.class::cast).\n-                    collect(Collectors.toSet());\n-        }\n+    public static Optional<String> getDelegatedBy() {\n+        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n \n-        return Set.of();\n+        return auth != null && auth.getDetails() instanceof SyncopeAuthenticationDetails\n+                ? Optional.ofNullable(SyncopeAuthenticationDetails.class.cast(auth.getDetails()).getDelegatedBy())\n+                : Optional.empty();\n     }\n \n-    public static Map<String, Set<String>> getAuthorizations() {\n-        SecurityContext ctx = SecurityContextHolder.getContext();\n-        if (ctx != null && ctx.getAuthentication() != null && ctx.getAuthentication().getAuthorities() != null) {\n-            return ctx.getAuthentication().getAuthorities().stream().\n-                    filter(SyncopeGrantedAuthority.class::isInstance).\n-                    map(SyncopeGrantedAuthority.class::cast).\n-                    collect(Collectors.toMap(\n-                            SyncopeGrantedAuthority::getAuthority, SyncopeGrantedAuthority::getRealms));\n-        }\n+    public static String getWho() {\n+        return getUsername() + getDelegatedBy().map(d -> {\n+            String delegatedBy = callAsAdmin(getDomain(),\n+                    () -> ApplicationContextProvider.getApplicationContext().getBean(UserDAO.class).findUsername(d)).\n+                    orElse(d);\n+            return \" [delegated by \" + delegatedBy + \"]\";\n+        }).orElse(StringUtils.EMPTY);\n+    }\n+\n+    public static Set<SyncopeGrantedAuthority> getAuthorities() {\n+        return Optional.ofNullable(SecurityContextHolder.getContext().getAuthentication()).\n+                map(authentication -> authentication.getAuthorities().stream().\n+                filter(SyncopeGrantedAuthority.class::isInstance).\n+                map(SyncopeGrantedAuthority.class::cast).\n+                collect(Collectors.toSet())).\n+                orElse(Set.of());\n+    }\n \n-        return Map.of();\n+    public static Map<String, Set<String>> getAuthorizations() {\n+        return Optional.ofNullable(SecurityContextHolder.getContext().getAuthentication()).\n+                map(authentication -> authentication.getAuthorities().stream().\n+                filter(SyncopeGrantedAuthority.class::isInstance).\n+                map(SyncopeGrantedAuthority.class::cast).\n+                collect(Collectors.toMap(SyncopeGrantedAuthority::getAuthority, SyncopeGrantedAuthority::getRealms))).\n+                orElse(Map.of());\n     }\n \n     public static String getDomain() {\n@@ -125,7 +135,7 @@ public static <T> T callAs(\n                 collect(Collectors.toList());\n         UsernamePasswordAuthenticationToken fakeAuth = new UsernamePasswordAuthenticationToken(\n                 new User(username, FAKE_PASSWORD, authorities), FAKE_PASSWORD, authorities);\n-        fakeAuth.setDetails(new SyncopeAuthenticationDetails(domain));\n+        fakeAuth.setDetails(new SyncopeAuthenticationDetails(domain, getDelegatedBy().orElse(null)));\n \n         return call(domain, fakeAuth, callable);\n     }"},{"sha":"d7bc51e221ad003b74ce9abccd89ef99d0fdc8fc","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":137,"deletions":71,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -31,7 +31,9 @@\n import javax.security.auth.login.AccountNotFoundException;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.BooleanUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -41,25 +43,27 @@\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.utils.RealmUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.search.AttrCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AccessToken;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n+import org.apache.syncope.core.persistence.api.entity.Delegation;\n import org.apache.syncope.core.persistence.api.entity.DynRealm;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n-import org.apache.syncope.core.provisioning.api.utils.RealmUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n@@ -69,6 +73,8 @@\n import org.springframework.security.authentication.AuthenticationCredentialsNotFoundException;\n import org.springframework.security.authentication.DisabledException;\n import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.userdetails.UsernameNotFoundException;\n+import org.springframework.security.web.authentication.session.SessionAuthenticationException;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -87,6 +93,9 @@ public class AuthDataAccessor {\n     protected static final Set<SyncopeGrantedAuthority> ANONYMOUS_AUTHORITIES =\n             Set.of(new SyncopeGrantedAuthority(IdRepoEntitlement.ANONYMOUS));\n \n+    protected static final Set<SyncopeGrantedAuthority> MUST_CHANGE_PASSWORD_AUTHORITIES =\n+            Set.of(new SyncopeGrantedAuthority(IdRepoEntitlement.MUST_CHANGE_PASSWORD));\n+\n     @Resource(name = \"adminUser\")\n     protected String adminUser;\n \n@@ -112,11 +121,14 @@ public class AuthDataAccessor {\n     protected AccessTokenDAO accessTokenDAO;\n \n     @Autowired\n-    private ConfParamOps confParamOps;\n+    protected ConfParamOps confParamOps;\n \n     @Autowired\n     protected RoleDAO roleDAO;\n \n+    @Autowired\n+    protected DelegationDAO delegationDAO;\n+\n     @Autowired\n     protected ConnectorFactory connFactory;\n \n@@ -155,6 +167,20 @@ public JWTSSOProvider getJWTSSOProvider(final String issuer) {\n         return provider;\n     }\n \n+    protected String getDelegationKey(final SyncopeAuthenticationDetails details, final String delegatedKey) {\n+        return Optional.ofNullable(details.getDelegatedBy()).\n+                map(delegatingKey -> SyncopeConstants.UUID_PATTERN.matcher(delegatingKey).matches()\n+                ? delegatingKey\n+                : userDAO.findKey(delegatingKey)).map(delegatingKey -> {\n+\n+            LOG.debug(\"Delegation request: delegating:{}, delegated:{}\", delegatingKey, delegatedKey);\n+\n+            return delegationDAO.findValidFor(delegatingKey, delegatedKey).\n+                    orElseThrow(() -> new SessionAuthenticationException(\n+                    \"Delegation by \" + delegatingKey + \" was requested but none found\"));\n+        }).orElse(null);\n+    }\n+\n     /**\n      * Attempts to authenticate the given credentials against internal storage and pass-through resources (if\n      * configured): the first succeeding causes global success.\n@@ -164,7 +190,7 @@ public JWTSSOProvider getJWTSSOProvider(final String issuer) {\n      * @return {@code null} if no matching user was found, authentication result otherwise\n      */\n     @Transactional(noRollbackFor = DisabledException.class)\n-    public Pair<User, Boolean> authenticate(final String domain, final Authentication authentication) {\n+    public Triple<User, Boolean, String> authenticate(final String domain, final Authentication authentication) {\n         User user = null;\n \n         List<String> authAttrValues = List.of(confParamOps.get(domain,\n@@ -187,6 +213,7 @@ public Pair<User, Boolean> authenticate(final String domain, final Authenticatio\n         }\n \n         Boolean authenticated = null;\n+        String delegationKey = null;\n         if (user != null) {\n             authenticated = false;\n \n@@ -201,8 +228,11 @@ public Pair<User, Boolean> authenticate(final String domain, final Authenticatio\n             }\n \n             boolean userModified = false;\n-            authenticated = AuthDataAccessor.this.authenticate(user, authentication.getCredentials().toString());\n+            authenticated = authenticate(user, authentication.getCredentials().toString());\n             if (authenticated) {\n+                delegationKey = getDelegationKey(\n+                        SyncopeAuthenticationDetails.class.cast(authentication.getDetails()), user.getKey());\n+\n                 if (confParamOps.get(domain, \"log.lastlogindate\", true, Boolean.class)) {\n                     user.setLastLoginDate(new Date());\n                     userModified = true;\n@@ -212,7 +242,6 @@ public Pair<User, Boolean> authenticate(final String domain, final Authenticatio\n                     user.setFailedLogins(0);\n                     userModified = true;\n                 }\n-\n             } else {\n                 user.setFailedLogins(user.getFailedLogins() + 1);\n                 userModified = true;\n@@ -223,7 +252,7 @@ public Pair<User, Boolean> authenticate(final String domain, final Authenticatio\n             }\n         }\n \n-        return Pair.of(user, authenticated);\n+        return Triple.of(user, authenticated, delegationKey);\n     }\n \n     protected boolean authenticate(final User user, final String password) {\n@@ -285,84 +314,114 @@ protected Set<? extends ExternalResource> getPassthroughResources(final User use\n         return result == null ? Set.of() : result;\n     }\n \n-    protected static Set<SyncopeGrantedAuthority> getAdminAuthorities() {\n+    protected Set<SyncopeGrantedAuthority> getAdminAuthorities() {\n         return EntitlementsHolder.getInstance().getValues().stream().\n                 map(entitlement -> new SyncopeGrantedAuthority(entitlement, SyncopeConstants.ROOT_REALM)).\n                 collect(Collectors.toSet());\n     }\n \n-    protected Set<SyncopeGrantedAuthority> getUserAuthorities(final User user) {\n+    protected Set<SyncopeGrantedAuthority> buildAuthorities(final Map<String, Set<String>> entForRealms) {\n         Set<SyncopeGrantedAuthority> authorities = new HashSet<>();\n \n+        entForRealms.forEach((entitlement, realms) -> {\n+            Pair<Set<String>, Set<String>> normalized = RealmUtils.normalize(realms);\n+\n+            SyncopeGrantedAuthority authority = new SyncopeGrantedAuthority(entitlement);\n+            authority.addRealms(normalized.getLeft());\n+            authority.addRealms(normalized.getRight());\n+            authorities.add(authority);\n+        });\n+\n+        return authorities;\n+    }\n+\n+    protected Set<SyncopeGrantedAuthority> getUserAuthorities(final User user) {\n         if (user.isMustChangePassword()) {\n-            authorities.add(new SyncopeGrantedAuthority(IdRepoEntitlement.MUST_CHANGE_PASSWORD));\n-        } else {\n-            Map<String, Set<String>> entForRealms = new HashMap<>();\n-\n-            // Give entitlements as assigned by roles (with static or dynamic realms, where applicable) - assigned\n-            // either statically and dynamically\n-            userDAO.findAllRoles(user).stream().\n-                    filter(role -> !SyncopeConstants.GROUP_OWNER_ROLE.equals(role.getKey())).\n-                    forEach(role -> role.getEntitlements().forEach(entitlement -> {\n-                Set<String> realms = Optional.ofNullable(entForRealms.get(entitlement)).orElseGet(() -> {\n-                    Set<String> r = new HashSet<>();\n-                    entForRealms.put(entitlement, r);\n-                    return r;\n-                });\n+            return MUST_CHANGE_PASSWORD_AUTHORITIES;\n+        }\n \n-                realms.addAll(role.getRealms().stream().map(Realm::getFullPath).collect(Collectors.toSet()));\n-                if (!entitlement.endsWith(\"_CREATE\") && !entitlement.endsWith(\"_DELETE\")) {\n-                    realms.addAll(role.getDynRealms().stream().map(DynRealm::getKey).collect(Collectors.toList()));\n-                }\n-            }));\n+        Map<String, Set<String>> entForRealms = new HashMap<>();\n+\n+        // Give entitlements as assigned by roles (with static or dynamic realms, where applicable) - assigned\n+        // either statically and dynamically\n+        userDAO.findAllRoles(user).stream().\n+                filter(role -> !SyncopeConstants.GROUP_OWNER_ROLE.equals(role.getKey())).\n+                forEach(role -> role.getEntitlements().forEach(entitlement -> {\n+            Set<String> realms = Optional.ofNullable(entForRealms.get(entitlement)).orElseGet(() -> {\n+                Set<String> r = new HashSet<>();\n+                entForRealms.put(entitlement, r);\n+                return r;\n+            });\n \n-            // Give group entitlements for owned groups\n-            groupDAO.findOwnedByUser(user.getKey()).forEach(group -> {\n-                Role groupOwnerRole = roleDAO.find(SyncopeConstants.GROUP_OWNER_ROLE);\n-                if (groupOwnerRole == null) {\n-                    LOG.warn(\"Role {} was not found\", SyncopeConstants.GROUP_OWNER_ROLE);\n-                } else {\n-                    groupOwnerRole.getEntitlements().forEach(entitlement -> {\n-                        Set<String> realms = Optional.ofNullable(entForRealms.get(entitlement)).orElseGet(() -> {\n-                            HashSet<String> r = new HashSet<>();\n-                            entForRealms.put(entitlement, r);\n-                            return r;\n-                        });\n-\n-                        realms.add(RealmUtils.getGroupOwnerRealm(group.getRealm().getFullPath(), group.getKey()));\n+            realms.addAll(role.getRealms().stream().map(Realm::getFullPath).collect(Collectors.toSet()));\n+            if (!entitlement.endsWith(\"_CREATE\") && !entitlement.endsWith(\"_DELETE\")) {\n+                realms.addAll(role.getDynRealms().stream().map(DynRealm::getKey).collect(Collectors.toList()));\n+            }\n+        }));\n+\n+        // Give group entitlements for owned groups\n+        groupDAO.findOwnedByUser(user.getKey()).forEach(group -> {\n+            Role groupOwnerRole = roleDAO.find(SyncopeConstants.GROUP_OWNER_ROLE);\n+            if (groupOwnerRole == null) {\n+                LOG.warn(\"Role {} was not found\", SyncopeConstants.GROUP_OWNER_ROLE);\n+            } else {\n+                groupOwnerRole.getEntitlements().forEach(entitlement -> {\n+                    Set<String> realms = Optional.ofNullable(entForRealms.get(entitlement)).orElseGet(() -> {\n+                        HashSet<String> r = new HashSet<>();\n+                        entForRealms.put(entitlement, r);\n+                        return r;\n                     });\n-                }\n-            });\n \n-            // Finally normalize realms for each given entitlement and generate authorities\n-            entForRealms.forEach((key, value) -> {\n-                Pair<Set<String>, Set<String>> normalized = RealmUtils.normalize(value);\n+                    realms.add(RealmUtils.getGroupOwnerRealm(group.getRealm().getFullPath(), group.getKey()));\n+                });\n+            }\n+        });\n+\n+        return buildAuthorities(entForRealms);\n+    }\n+\n+    protected Set<SyncopeGrantedAuthority> getDelegatedAuthorities(final Delegation delegation) {\n+        Map<String, Set<String>> entForRealms = new HashMap<>();\n \n-                SyncopeGrantedAuthority authority = new SyncopeGrantedAuthority(key);\n-                authority.addRealms(normalized.getLeft());\n-                authority.addRealms(normalized.getRight());\n-                authorities.add(authority);\n+        delegation.getRoles().stream().filter(role -> !SyncopeConstants.GROUP_OWNER_ROLE.equals(role.getKey())).\n+                forEach(role -> role.getEntitlements().forEach(entitlement -> {\n+            Set<String> realms = Optional.ofNullable(entForRealms.get(entitlement)).orElseGet(() -> {\n+                HashSet<String> r = new HashSet<>();\n+                entForRealms.put(entitlement, r);\n+                return r;\n             });\n-        }\n \n-        return authorities;\n+            realms.addAll(role.getRealms().stream().map(Realm::getFullPath).collect(Collectors.toSet()));\n+            if (!entitlement.endsWith(\"_CREATE\") && !entitlement.endsWith(\"_DELETE\")) {\n+                realms.addAll(role.getDynRealms().stream().map(DynRealm::getKey).collect(Collectors.toList()));\n+            }\n+        }));\n+\n+        return buildAuthorities(entForRealms);\n     }\n \n     @Transactional\n-    public Set<SyncopeGrantedAuthority> getAuthorities(final String username) {\n+    public Set<SyncopeGrantedAuthority> getAuthorities(final String username, final String delegationKey) {\n         Set<SyncopeGrantedAuthority> authorities;\n \n         if (anonymousUser.equals(username)) {\n             authorities = ANONYMOUS_AUTHORITIES;\n         } else if (adminUser.equals(username)) {\n             authorities = getAdminAuthorities();\n+        } else if (delegationKey != null) {\n+            Delegation delegation = Optional.ofNullable(delegationDAO.find(delegationKey)).\n+                    orElseThrow(() -> new UsernameNotFoundException(\n+                    \"Could not find delegation \" + delegationKey));\n+\n+            authorities = delegation.getRoles().isEmpty()\n+                    ? getUserAuthorities(delegation.getDelegating())\n+                    : getDelegatedAuthorities(delegation);\n         } else {\n-            User user = userDAO.findByUsername(username);\n-            if (user == null) {\n-                authorities = Set.of();\n-            } else {\n-                authorities = getUserAuthorities(user);\n-            }\n+            User user = Optional.ofNullable(userDAO.findByUsername(username)).\n+                    orElseThrow(() -> new UsernameNotFoundException(\n+                    \"Could not find any user with username \" + username));\n+\n+            authorities = getUserAuthorities(user);\n         }\n \n         return authorities;\n@@ -392,12 +451,19 @@ public Pair<String, Set<SyncopeGrantedAuthority>> authenticate(final JWTAuthenti\n             }\n \n             User user = resolved.getLeft();\n+            String delegationKey = getDelegationKey(authentication.getDetails(), user.getKey());\n             username = user.getUsername();\n-            authorities = resolved.getRight() == null ? Set.of() : resolved.getRight();\n+            authorities = resolved.getRight() == null\n+                    ? Set.of()\n+                    : delegationKey == null\n+                            ? resolved.getRight()\n+                            : getAuthorities(username, delegationKey);\n             LOG.debug(\"JWT {} issued by {} resolved to User {} with authorities {}\",\n                     authentication.getClaims().getJWTID(),\n                     authentication.getClaims().getIssuer(),\n-                    username, authorities);\n+                    username + Optional.ofNullable(delegationKey).\n+                            map(d -> \" [under delegation \" + delegationKey + \"]\").orElse(StringUtils.EMPTY),\n+                    authorities);\n \n             if (BooleanUtils.isTrue(user.isSuspended())) {\n                 throw new DisabledException(\"User \" + username + \" is suspended\");\n@@ -411,7 +477,7 @@ public Pair<String, Set<SyncopeGrantedAuthority>> authenticate(final JWTAuthenti\n \n             if (BooleanUtils.isTrue(user.isMustChangePassword())) {\n                 LOG.debug(\"User {} must change password, resetting authorities\", username);\n-                authorities = Set.of(new SyncopeGrantedAuthority(IdRepoEntitlement.MUST_CHANGE_PASSWORD));\n+                authorities = MUST_CHANGE_PASSWORD_AUTHORITIES;\n             }\n         }\n \n@@ -425,16 +491,16 @@ public void removeExpired(final String tokenKey) {\n \n     @Transactional(readOnly = true)\n     public void audit(\n-            final String who,\n-            final AuditElements.EventCategoryType type,\n-            final String category,\n-            final String subcategory,\n-            final String event,\n+            final String username,\n+            final String delegationKey,\n             final AuditElements.Result result,\n-            final Object before,\n             final Object output,\n             final Object... input) {\n \n-        auditManager.audit(who, type, category, subcategory, event, result, before, output, input);\n+        auditManager.audit(\n+                username + Optional.ofNullable(delegationKey).\n+                        map(d -> \" [under delegation \" + delegationKey + \"]\").orElse(StringUtils.EMPTY),\n+                AuditElements.EventCategoryType.LOGIC, AuditElements.AUTHENTICATION_CATEGORY, null,\n+                AuditElements.LOGIN_EVENT, result, null, output, input);\n     }\n }"},{"sha":"b6d80e7fe7d4f709785e98262ded2b5a2ca8d1f2","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeAuthenticationDetails.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetails.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -33,12 +33,16 @@ public class SyncopeAuthenticationDetails implements Serializable {\n \n     private final String domain;\n \n+    private final String delegatedBy;\n+\n     public SyncopeAuthenticationDetails(final HttpServletRequest request) {\n         this.domain = request.getHeader(RESTHeaders.DOMAIN);\n+        this.delegatedBy = request.getHeader(RESTHeaders.DELEGATED_BY);\n     }\n \n-    public SyncopeAuthenticationDetails(final String domain) {\n+    public SyncopeAuthenticationDetails(final String domain, final String delegatedBy) {\n         this.domain = domain;\n+        this.delegatedBy = delegatedBy;\n     }\n \n     public String getDomain() {\n@@ -47,10 +51,15 @@ public String getDomain() {\n                 : domain;\n     }\n \n+    public String getDelegatedBy() {\n+        return delegatedBy;\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n                 append(domain).\n+                append(delegatedBy).\n                 build();\n     }\n \n@@ -68,13 +77,15 @@ public boolean equals(final Object obj) {\n         final SyncopeAuthenticationDetails other = (SyncopeAuthenticationDetails) obj;\n         return new EqualsBuilder().\n                 append(domain, other.domain).\n+                append(delegatedBy, other.delegatedBy).\n                 build();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this).\n                 append(domain).\n+                append(delegatedBy).\n                 build();\n     }\n }"},{"sha":"5f82832e9e72d7cbf90f54f86305d886656289dc","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeAuthenticationDetailsSource.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetailsSource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetailsSource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeAuthenticationDetailsSource.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -28,5 +28,4 @@\n     public SyncopeAuthenticationDetails buildDetails(final HttpServletRequest context) {\n         return new SyncopeAuthenticationDetails(context);\n     }\n-\n }"},{"sha":"a8728fd134f6f62f2b7b264498b5fe5aff14a071","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":28,"deletions":33,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.core.spring.security;\n \n+import java.util.concurrent.atomic.AtomicReference;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.keymaster.client.api.DomainOps;\n import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -112,15 +112,16 @@ public Authentication authenticate(final Authentication authentication) {\n             }\n         }\n \n-        String[] username = new String[1];\n-        boolean authenticated;\n+        AtomicReference<String> username = new AtomicReference<>();\n+        Boolean authenticated;\n+        AtomicReference<String> delegationKey = new AtomicReference<>();\n \n         if (anonymousUser.equals(authentication.getName())) {\n-            username[0] = anonymousUser;\n+            username.set(anonymousUser);\n             credentialChecker.checkIsDefaultAnonymousKeyInUse();\n             authenticated = authentication.getCredentials().toString().equals(anonymousKey);\n         } else if (adminUser.equals(authentication.getName())) {\n-            username[0] = adminUser;\n+            username.set(adminUser);\n             if (SyncopeConstants.MASTER_DOMAIN.equals(domain.getKey())) {\n                 credentialChecker.checkIsDefaultAdminPasswordInUse();\n                 authenticated = ENCRYPTOR.verify(\n@@ -134,71 +135,65 @@ public Authentication authenticate(final Authentication authentication) {\n                         domain.getAdminPassword());\n             }\n         } else {\n-            Pair<User, Boolean> authResult = AuthContextUtils.callAsAdmin(domain.getKey(),\n+            Triple<User, Boolean, String> authResult = AuthContextUtils.callAsAdmin(domain.getKey(),\n                     () -> dataAccessor.authenticate(domain.getKey(), authentication));\n-            authenticated = BooleanUtils.toBoolean(authResult.getRight());\n-            if (authResult.getLeft() != null && authResult.getRight() != null) {\n-                username[0] = authResult.getLeft().getUsername();\n+            authenticated = authResult.getMiddle();\n+            if (authResult.getLeft() != null && authResult.getMiddle() != null) {\n+                username.set(authResult.getLeft().getUsername());\n \n-                if (!authResult.getRight()) {\n+                if (!authenticated) {\n                     AuthContextUtils.callAsAdmin(domain.getKey(), () -> {\n                         provisioningManager.internalSuspend(\n                                 authResult.getLeft().getKey(), adminUser, \"Failed authentication\");\n                         return null;\n                     });\n                 }\n             }\n+            delegationKey.set(authResult.getRight());\n         }\n-        if (username[0] == null) {\n-            username[0] = authentication.getPrincipal().toString();\n+        if (username.get() == null) {\n+            username.set(authentication.getPrincipal().toString());\n         }\n \n-        return finalizeAuthentication(authenticated, domain.getKey(), username[0], authentication);\n+        return finalizeAuthentication(\n+                authenticated, domain.getKey(), username.get(), delegationKey.get(), authentication);\n     }\n \n     protected Authentication finalizeAuthentication(\n-            final boolean authenticated,\n+            final Boolean authenticated,\n             final String domain,\n             final String username,\n+            final String delegationKey,\n             final Authentication authentication) {\n \n         UsernamePasswordAuthenticationToken token;\n-        if (authenticated) {\n+        if (BooleanUtils.isTrue(authenticated)) {\n             token = AuthContextUtils.callAsAdmin(domain, () -> {\n                 UsernamePasswordAuthenticationToken upat = new UsernamePasswordAuthenticationToken(\n                         username,\n                         null,\n-                        dataAccessor.getAuthorities(username));\n+                        dataAccessor.getAuthorities(username, delegationKey));\n                 upat.setDetails(authentication.getDetails());\n                 dataAccessor.audit(\n                         username,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        AuditElements.AUTHENTICATION_CATEGORY,\n-                        null,\n-                        AuditElements.LOGIN_EVENT,\n+                        delegationKey,\n                         Result.SUCCESS,\n-                        null,\n-                        authenticated,\n+                        true,\n                         authentication,\n-                        \"User \" + username + \" successfully authenticated with entitlements: \" + upat.getAuthorities());\n+                        \"Successfully authenticated, with entitlements: \" + upat.getAuthorities());\n                 return upat;\n             });\n \n-            LOG.debug(\"User {} successfully authenticated, with entitlements {}\",\n-                    username, token.getAuthorities());\n+            LOG.debug(\"User {} successfully authenticated, with entitlements {}\", username, token.getAuthorities());\n         } else {\n             AuthContextUtils.callAsAdmin(domain, () -> {\n                 dataAccessor.audit(\n                         username,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        AuditElements.AUTHENTICATION_CATEGORY,\n-                        null,\n-                        AuditElements.LOGIN_EVENT,\n+                        delegationKey,\n                         Result.FAILURE,\n-                        null,\n-                        authenticated,\n+                        false,\n                         authentication,\n-                        \"User \" + username + \" not authenticated\");\n+                        \"Not authenticated\");\n                 return null;\n             });\n "},{"sha":"1f9ef76c861af60ec7cad76502e0d21e00e67399","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractWorkflowAdapter.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -19,20 +19,24 @@\n package org.apache.syncope.core.workflow.java;\n \n import java.util.Date;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n \n public abstract class AbstractWorkflowAdapter {\n \n     protected void metadata(final Any<?> any, final String username, final String context) {\n+        String who = username\n+                + AuthContextUtils.getDelegatedBy().map(d -> \" [delegated by \" + d + \"]\").orElse(StringUtils.EMPTY);\n         Date now = new Date();\n \n         if (any.getCreationDate() == null) {\n             any.setCreationDate(now);\n-            any.setCreator(username);\n+            any.setCreator(who);\n             any.setCreationContext(context);\n         }\n \n-        any.setLastModifier(username);\n+        any.setLastModifier(who);\n         any.setLastChangeDate(now);\n         any.setLastChangeContext(context);\n     }"},{"sha":"548d2276dfe0fbfb33e08d6b6786eb91c3961ce5","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/OIDCC4UILogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -229,7 +229,7 @@ public OIDCLoginResponse login(final String redirectURI, final String authorizat\n         byte[] authorities = null;\n         try {\n             authorities = ENCRYPTOR.encode(POJOHelper.serialize(\n-                    authDataAccessor.getAuthorities(loginResponse.getUsername())), CipherAlgorithm.AES).\n+                    authDataAccessor.getAuthorities(loginResponse.getUsername(), null)), CipherAlgorithm.AES).\n                     getBytes();\n         } catch (Exception e) {\n             LOG.error(\"Could not fetch authorities\", e);"},{"sha":"a69e0d0fefa2f6cf31337f2f48222809cec33187","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/SAML2SP4UILogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -407,7 +407,7 @@ public SAML2LoginResponse validateLoginResponse(final SAML2Response saml2Respons\n         byte[] authorities = null;\n         try {\n             authorities = ENCRYPTOR.encode(POJOHelper.serialize(\n-                    authDataAccessor.getAuthorities(loginResp.getUsername())), CipherAlgorithm.AES).getBytes();\n+                    authDataAccessor.getAuthorities(loginResp.getUsername(), null)), CipherAlgorithm.AES).getBytes();\n         } catch (Exception e) {\n             LOG.error(\"Could not fetch authorities\", e);\n         }"},{"sha":"55ebc01e52b8a85d1d613757c4152aa426f5f7b7","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMDataBinder.java","status":"modified","additions":19,"deletions":23,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMDataBinder.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -82,9 +82,9 @@ public class SCIMDataBinder {\n     private AuthDataAccessor authDataAccessor;\n \n     private static <E extends Enum<?>> void fill(\n-        final Map<String, Attr> attrs,\n-        final List<SCIMComplexConf<E>> confs,\n-        final List<SCIMComplexValue> values) {\n+            final Map<String, Attr> attrs,\n+            final List<SCIMComplexConf<E>> confs,\n+            final List<SCIMComplexValue> values) {\n \n         confs.forEach(conf -> {\n             SCIMComplexValue value = new SCIMComplexValue();\n@@ -109,19 +109,19 @@ private static <E extends Enum<?>> void fill(\n     }\n \n     private static boolean output(\n-        final List<String> attributes,\n-        final List<String> excludedAttributes,\n-        final String schema) {\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n+            final String schema) {\n \n         return (attributes.isEmpty() || attributes.contains(schema))\n                 && (excludedAttributes.isEmpty() || !excludedAttributes.contains(schema));\n     }\n \n     private static <T> T output(\n-        final List<String> attributes,\n-        final List<String> excludedAttributes,\n-        final String schema,\n-        final T value) {\n+            final List<String> attributes,\n+            final List<String> excludedAttributes,\n+            final String schema,\n+            final T value) {\n \n         return output(attributes, excludedAttributes, schema)\n                 ? value\n@@ -399,7 +399,7 @@ public SCIMUser toSCIMUser(\n             }\n \n             if (output(attributes, excludedAttributes, \"entitlements\")) {\n-                authDataAccessor.getAuthorities(userTO.getUsername()).forEach(authority -> user.getEntitlements().\n+                authDataAccessor.getAuthorities(userTO.getUsername(), null).forEach(authority -> user.getEntitlements().\n                         add(new Value(authority.getAuthority() + \" on Realm(s) \" + authority.getRealms())));\n             }\n \n@@ -412,18 +412,14 @@ public SCIMUser toSCIMUser(\n     }\n \n     private static <E extends Enum<?>> void fill(\n-        final Set<Attr> attrs,\n-        final List<SCIMComplexConf<E>> confs,\n-        final List<SCIMComplexValue> values) {\n-\n-        values.forEach(value -> {\n-            if (value.getType() != null) {\n-                confs.stream().\n-                        filter(object -> value.getType().equals(object.getType().name())).findFirst().\n-                        ifPresent(conf -> attrs.add(\n-                        new Attr.Builder(conf.getValue()).value(value.getValue()).build()));\n-            }\n-        });\n+            final Set<Attr> attrs,\n+            final List<SCIMComplexConf<E>> confs,\n+            final List<SCIMComplexValue> values) {\n+\n+        values.stream().filter(value -> value.getType() != null).forEach(value -> confs.stream().\n+                filter(object -> value.getType().equals(object.getType().name())).findFirst().\n+                ifPresent(conf -> attrs.add(\n+                new Attr.Builder(conf.getValue()).value(value.getValue()).build())));\n     }\n \n     public UserTO toUserTO(final SCIMUser user) {"},{"sha":"68b63db0f5cab18b049937fd850218b1aa7b9b24","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/security/SelfKeymasterUsernamePasswordAuthenticationProvider.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -40,6 +40,7 @@ public Authentication authenticate(final Authentication authentication) {\n                     authentication.getCredentials().toString().equals(keymasterPassword),\n                     SyncopeAuthenticationDetails.class.cast(authentication.getDetails()).getDomain(),\n                     keymasterUsername,\n+                    null,\n                     authentication);\n         }\n "},{"sha":"891cd634144daa1572abd6b8fc911f8274b5bc3d","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/CustomJWTSSOProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -101,7 +101,7 @@ public Pair<User, Set<SyncopeGrantedAuthority>> resolve(final JWTClaimsSet jwtCl\n         List<User> matching = searchDAO.search(SearchCond.getLeaf(userIdCond), AnyTypeKind.USER);\n         if (matching.size() == 1) {\n             User user = matching.get(0);\n-            Set<SyncopeGrantedAuthority> authorities = authDataAccessor.getAuthorities(user.getUsername());\n+            Set<SyncopeGrantedAuthority> authorities = authDataAccessor.getAuthorities(user.getUsername(), null);\n \n             return Pair.of(user, authorities);\n         }"},{"sha":"ef208bcdb50545fdfe50f5be3afd595a840c2bf9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.common.lib.request.AttrPatch;\n import org.apache.syncope.common.lib.request.GroupUR;\n import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.log.AuditEntry;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n import org.apache.syncope.common.lib.request.GroupCR;\n@@ -102,6 +103,7 @@\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.batch.BatchPayloadParser;\n import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n+import org.apache.syncope.common.rest.api.beans.AuditQuery;\n import org.apache.syncope.common.rest.api.service.AnyObjectService;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n@@ -145,6 +147,7 @@\n import org.apache.syncope.common.rest.api.service.SAML2SP4UIService;\n import org.apache.syncope.common.rest.api.service.SAML2SPEntityService;\n import org.apache.syncope.common.rest.api.service.SRARouteService;\n+import org.apache.syncope.common.rest.api.service.DelegationService;\n import org.apache.syncope.common.rest.api.service.UserWorkflowTaskService;\n import org.apache.syncope.common.rest.api.service.wa.ImpersonationService;\n import org.apache.syncope.common.rest.api.service.wa.U2FRegistrationService;\n@@ -312,6 +315,8 @@ public abstract class AbstractITCase {\n \n     protected static RemediationService remediationService;\n \n+    protected static DelegationService delegationService;\n+\n     protected static SRARouteService sraRouteService;\n \n     protected static CamelRouteService camelRouteService;\n@@ -410,6 +415,7 @@ public static void restSetup() {\n         securityQuestionService = adminClient.getService(SecurityQuestionService.class);\n         implementationService = adminClient.getService(ImplementationService.class);\n         remediationService = adminClient.getService(RemediationService.class);\n+        delegationService = adminClient.getService(DelegationService.class);\n         sraRouteService = adminClient.getService(SRARouteService.class);\n         camelRouteService = adminClient.getService(CamelRouteService.class);\n         saml2SP4UIService = adminClient.getService(SAML2SP4UIService.class);\n@@ -876,4 +882,18 @@ protected static AccessPolicyTO buildAccessPolicyTO() {\n \n         return policy;\n     }\n+\n+    protected static List<AuditEntry> query(final AuditQuery query, final int maxWaitSeconds) {\n+        int i = 0;\n+        List<AuditEntry> results = List.of();\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+            results = loggerService.search(query).getResult();\n+            i++;\n+        } while (results.isEmpty() && i < maxWaitSeconds);\n+        return results;\n+    }\n }"},{"sha":"c8c0d2552e99f8c4a378664d69ccab806640ae36","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -39,7 +39,7 @@ public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n         TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n         TESTER.assertRenderedPage(Security.class);\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:4:link\");\n     }\n \n     private static void createSecurityQuestion(final String name) {\n@@ -60,7 +60,7 @@ private static void createSecurityQuestion(final String name) {\n         TESTER.cleanupFeedbackMessages();\n \n         TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:4:link\");\n     }\n \n     @Test"},{"sha":"c7a3a175165bc57fe6f6ff2c5cb4e48a581286c9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"modified","additions":15,"deletions":33,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.fit.core;\n \n-import static org.awaitility.Awaitility.await;\n import static org.junit.jupiter.api.Assertions.fail;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n@@ -29,8 +28,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicReference;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -45,35 +42,22 @@\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.AuditQuery;\n+import org.apache.syncope.core.logic.ConnectorLogic;\n+import org.apache.syncope.core.logic.UserLogic;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.Test;\n \n public class AuditITCase extends AbstractITCase {\n \n-    private static AuditEntry query(final AuditQuery query, final int maxWaitSeconds, final boolean failIfEmpty) {\n+    private static AuditEntry queryWithFailure(final AuditQuery query, final int maxWaitSeconds) {\n         List<AuditEntry> results = query(query, maxWaitSeconds);\n         if (results.isEmpty()) {\n-            if (failIfEmpty) {\n-                fail(\"Timeout when executing query for key \" + query.getEntityKey());\n-            }\n+            fail(\"Timeout when executing query for key \" + query.getEntityKey());\n             return null;\n         }\n         return results.get(0);\n     }\n \n-    private static List<AuditEntry> query(final AuditQuery query, final int maxWaitSeconds) {\n-        AtomicReference<List<AuditEntry>> holder = new AtomicReference<>();\n-        await().atMost(maxWaitSeconds, TimeUnit.SECONDS).pollInterval(1, TimeUnit.SECONDS).until(() -> {\n-            try {\n-                holder.set(loggerService.search(query).getResult());\n-                return !holder.get().isEmpty();\n-            } catch (Exception e) {\n-                return false;\n-            }\n-        });\n-        return holder.get();\n-    }\n-\n     @Test\n     public void userReadAndSearchYieldsNoAudit() {\n         UserTO userTO = createUser(UserITCase.getUniqueSample(\"audit@syncope.org\")).getEntity();\n@@ -102,7 +86,7 @@ public void findByUser() {\n \n         AuditQuery query = new AuditQuery.Builder().entityKey(userTO.getKey()).orderBy(\"event_date desc\").\n                 page(1).size(1).build();\n-        AuditEntry entry = query(query, MAX_WAIT_SECONDS, true);\n+        AuditEntry entry = queryWithFailure(query, MAX_WAIT_SECONDS);\n         assertNotNull(entry);\n         userService.delete(userTO.getKey());\n     }\n@@ -118,11 +102,11 @@ public void findByUserAndOther() {\n                 page(1).\n                 size(1).\n                 type(AuditElements.EventCategoryType.LOGIC).\n-                category(\"UserLogic\").\n+                category(UserLogic.class.getSimpleName()).\n                 event(\"create\").\n                 result(AuditElements.Result.SUCCESS).\n                 build();\n-        AuditEntry entry = query(query, MAX_WAIT_SECONDS, true);\n+        AuditEntry entry = queryWithFailure(query, MAX_WAIT_SECONDS);\n         assertNotNull(entry);\n         userService.delete(userTO.getKey());\n     }\n@@ -134,7 +118,7 @@ public void findByGroup() {\n \n         AuditQuery query = new AuditQuery.Builder().entityKey(groupTO.getKey()).orderBy(\"event_date desc\").\n                 page(1).size(1).build();\n-        AuditEntry entry = query(query, MAX_WAIT_SECONDS, true);\n+        AuditEntry entry = queryWithFailure(query, MAX_WAIT_SECONDS);\n         assertNotNull(entry);\n         groupService.delete(groupTO.getKey());\n     }\n@@ -148,11 +132,9 @@ public void groupReadAndSearchYieldsNoAudit() {\n         List<AuditEntry> entries = query(query, MAX_WAIT_SECONDS);\n         assertEquals(1, entries.size());\n \n-        PagedResult<GroupTO> groups = groupService.search(\n-                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(SyncopeClient.getGroupSearchConditionBuilder().\n-                                is(\"name\").equalTo(groupTO.getName()).query()).\n-                        build());\n+        PagedResult<GroupTO> groups = groupService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(groupTO.getName()).query()).\n+                build());\n         assertNotNull(groups);\n         assertFalse(groups.getResult().isEmpty());\n \n@@ -164,9 +146,9 @@ public void groupReadAndSearchYieldsNoAudit() {\n     public void findByAnyObject() {\n         AnyObjectTO anyObjectTO = createAnyObject(AnyObjectITCase.getSample(\"Italy\")).getEntity();\n         assertNotNull(anyObjectTO.getKey());\n-        AuditQuery query = new AuditQuery.Builder().entityKey(anyObjectTO.getKey()).orderBy(\"event_date desc\").\n-                page(1).size(1).build();\n-        AuditEntry entry = query(query, MAX_WAIT_SECONDS, true);\n+        AuditQuery query = new AuditQuery.Builder().entityKey(anyObjectTO.getKey()).\n+                orderBy(\"event_date desc\").page(1).size(1).build();\n+        AuditEntry entry = queryWithFailure(query, MAX_WAIT_SECONDS);\n         assertNotNull(entry);\n         anyObjectService.delete(anyObjectTO.getKey());\n     }\n@@ -199,7 +181,7 @@ public void findByConnector() throws JsonProcessingException {\n                 entityKey(connectorKey).\n                 orderBy(\"event_date desc\").\n                 type(AuditElements.EventCategoryType.LOGIC).\n-                category(\"ConnectorLogic\").\n+                category(ConnectorLogic.class.getSimpleName()).\n                 event(\"update\").\n                 result(AuditElements.Result.SUCCESS).\n                 build();"},{"sha":"9b652739dbe3929c23082998cfc7a79c6007310e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -26,13 +26,14 @@\n import static org.junit.jupiter.api.Assumptions.assumeTrue;\n \n import java.security.AccessControlException;\n+import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.ws.rs.ForbiddenException;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.BasicAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -101,22 +102,25 @@ public void readEntitlements() {\n         }\n \n         // 2. as anonymous\n-        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self = clientFactory.create(\n                 new AnonymousAuthenticationHandler(ANONYMOUS_UNAME, ANONYMOUS_KEY)).self();\n         assertEquals(1, self.getLeft().size());\n         assertTrue(self.getLeft().keySet().contains(IdRepoEntitlement.ANONYMOUS));\n+        assertEquals(List.of(), self.getMiddle());\n         assertEquals(ANONYMOUS_UNAME, self.getRight().getUsername());\n \n         // 3. as admin\n         self = adminClient.self();\n         assertEquals(syncopeService.platform().getEntitlements().size(), self.getLeft().size());\n         assertFalse(self.getLeft().keySet().contains(IdRepoEntitlement.ANONYMOUS));\n+        assertEquals(List.of(), self.getMiddle());\n         assertEquals(ADMIN_UNAME, self.getRight().getUsername());\n \n         // 4. as user\n         self = clientFactory.create(\"bellini\", ADMIN_PWD).self();\n         assertFalse(self.getLeft().isEmpty());\n         assertFalse(self.getLeft().keySet().contains(IdRepoEntitlement.ANONYMOUS));\n+        assertEquals(List.of(), self.getMiddle());\n         assertEquals(\"bellini\", self.getRight().getUsername());\n     }\n \n@@ -606,10 +610,11 @@ public void issueSYNCOPE434() {\n         assertEquals(\"active\", userTO.getStatus());\n \n         // 4. try to authenticate again: success\n-        Pair<Map<String, Set<String>>, UserTO> self =\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n                 clientFactory.create(userTO.getUsername(), \"password123\").self();\n         assertNotNull(self);\n         assertNotNull(self.getLeft());\n+        assertEquals(List.of(), self.getMiddle());\n         assertNotNull(self.getRight());\n     }\n \n@@ -642,7 +647,7 @@ public void issueSYNCOPE164() throws Exception {\n         assertEquals(Encryptor.getInstance().encode(\"password123\", CipherAlgorithm.SHA1), value.toUpperCase());\n \n         // 5. successfully authenticate with old (on db resource) and new (on internal storage) password values\n-        Pair<Map<String, Set<String>>, UserTO> self =\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n                 clientFactory.create(user.getUsername(), \"password123\").self();\n         assertNotNull(self);\n         self = clientFactory.create(user.getUsername(), \"password234\").self();"},{"sha":"02a65ebac9bc0578cce69ec8f9abfa7e77a80b89","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DelegationITCase.java","status":"added","additions":272,"deletions":0,"changes":272,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -0,0 +1,272 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import java.security.AccessControlException;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.log.AuditEntry;\n+import org.apache.syncope.common.lib.log.LoggerTO;\n+import org.apache.syncope.common.lib.request.UserCR;\n+import org.apache.syncope.common.lib.to.DelegationTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.LoggerLevel;\n+import org.apache.syncope.common.lib.types.LoggerType;\n+import org.apache.syncope.common.rest.api.beans.AnyQuery;\n+import org.apache.syncope.common.rest.api.beans.AuditQuery;\n+import org.apache.syncope.common.rest.api.service.DelegationService;\n+import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.syncope.core.logic.UserLogic;\n+import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.jupiter.api.Test;\n+\n+public class DelegationITCase extends AbstractITCase {\n+\n+    private DelegationTO create(final DelegationService ds, final DelegationTO delegation) {\n+        Response response = ds.create(delegation);\n+        if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n+            Exception ex = clientFactory.getExceptionMapper().fromResponse(response);\n+            if (ex != null) {\n+                throw (RuntimeException) ex;\n+            }\n+        }\n+        return getObject(response.getLocation(), DelegationService.class, DelegationTO.class);\n+    }\n+\n+    @Test\n+    public void crudAsAdmin() {\n+        // 1. create users        \n+        UserCR delegatingCR = UserITCase.getUniqueSample(\"delegating@syncope.apache.org\");\n+        delegatingCR.getRoles().add(\"User reviewer\");\n+        UserTO delegating = createUser(delegatingCR).getEntity();\n+        assertNotNull(delegating.getKey());\n+\n+        UserCR delegatedCR = UserITCase.getUniqueSample(\"delegated@syncope.apache.org\");\n+        UserTO delegated = createUser(delegatedCR).getEntity();\n+        assertNotNull(delegated.getKey());\n+\n+        DelegationTO delegation = new DelegationTO();\n+        delegation.setDelegating(delegating.getKey());\n+        delegation.setDelegated(delegated.getKey());\n+\n+        // no dates set -> FAIL\n+        try {\n+            delegationService.create(delegation);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidEntity, e.getType());\n+        }\n+\n+        delegation.setStart(new Date());\n+        delegation.setEnd(new Date(System.currentTimeMillis() - 1000));\n+\n+        // end before start -> FAIL\n+        try {\n+            delegationService.create(delegation);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidEntity, e.getType());\n+        }\n+\n+        delegation.setEnd(new Date());\n+\n+        // 2. create delegation\n+        delegation = create(delegationService, delegation);\n+        assertNotNull(delegation.getKey());\n+        assertNotNull(delegation.getEnd());\n+\n+        // 3. verify delegation is reported for users\n+        delegating = userService.read(delegating.getKey());\n+        assertEquals(List.of(delegation.getKey()), delegating.getDelegatingDelegations());\n+        assertEquals(List.of(), delegating.getDelegatedDelegations());\n+\n+        delegated = userService.read(delegated.getKey());\n+        assertEquals(List.of(), delegated.getDelegatingDelegations());\n+        assertEquals(List.of(delegation.getKey()), delegated.getDelegatedDelegations());\n+\n+        // 4. update and read delegation\n+        delegation.setEnd(null);\n+        delegationService.update(delegation);\n+\n+        delegation = delegationService.read(delegation.getKey());\n+        assertNull(delegation.getEnd());\n+\n+        // 5. delete delegation\n+        delegationService.delete(delegation.getKey());\n+\n+        try {\n+            delegationService.read(delegation.getKey());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+\n+        // 6. verify delegation is not reported for users\n+        delegating = userService.read(delegating.getKey());\n+        assertEquals(List.of(), delegating.getDelegatingDelegations());\n+        assertEquals(List.of(), delegating.getDelegatedDelegations());\n+\n+        delegated = userService.read(delegated.getKey());\n+        assertEquals(List.of(), delegated.getDelegatingDelegations());\n+        assertEquals(List.of(), delegated.getDelegatedDelegations());\n+    }\n+\n+    @Test\n+    public void crudAsUser() {\n+        // 1. create users        \n+        UserCR delegatingCR = UserITCase.getUniqueSample(\"delegating@syncope.apache.org\");\n+        delegatingCR.getRoles().add(\"User reviewer\");\n+        UserTO delegating = createUser(delegatingCR).getEntity();\n+        assertNotNull(delegating.getKey());\n+\n+        UserCR delegatedCR = UserITCase.getUniqueSample(\"delegated@syncope.apache.org\");\n+        UserTO delegated = createUser(delegatedCR).getEntity();\n+        assertNotNull(delegated.getKey());\n+\n+        DelegationTO delegation = new DelegationTO();\n+        delegation.setDelegating(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\");\n+        delegation.setDelegated(delegated.getKey());\n+        delegation.setStart(new Date());\n+\n+        DelegationService uds = clientFactory.create(delegating.getUsername(), \"password123\").\n+                getService(DelegationService.class);\n+\n+        // delegating user is not requesting user -> FAIL\n+        try {\n+            create(uds, delegation);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.DelegatedAdministration, e.getType());\n+        }\n+\n+        // 2. create delegation\n+        delegation.setDelegating(delegating.getKey());\n+\n+        delegation = create(uds, delegation);\n+        assertNotNull(delegation.getKey());\n+        assertNull(delegation.getEnd());\n+\n+        // 3. update and read delegation\n+        delegation.setEnd(new Date());\n+        uds.update(delegation);\n+\n+        delegation = uds.read(delegation.getKey());\n+        assertNotNull(delegation.getEnd());\n+\n+        // 4. delete delegation\n+        uds.delete(delegation.getKey());\n+\n+        try {\n+            uds.read(delegation.getKey());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void operations() {\n+        // 0. enable audit\n+        AuditLoggerName authLoginSuccess = new AuditLoggerName(\n+                AuditElements.EventCategoryType.LOGIC,\n+                UserLogic.class.getSimpleName(),\n+                null,\n+                \"search\",\n+                AuditElements.Result.SUCCESS);\n+        LoggerTO authLogin = new LoggerTO();\n+        authLogin.setKey(authLoginSuccess.toLoggerName());\n+        authLogin.setLevel(LoggerLevel.DEBUG);\n+        loggerService.update(LoggerType.AUDIT, authLogin);\n+\n+        // 1. bellini delegates rossini\n+        DelegationTO delegation = new DelegationTO();\n+        delegation.setDelegating(\"bellini\");\n+        delegation.setDelegated(\"rossini\");\n+        delegation.setStart(new Date());\n+        delegation = create(delegationService, delegation);\n+        assertNotNull(delegation.getKey());\n+\n+        // 2. search users as bellini\n+        SyncopeClient bellini = clientFactory.create(\"bellini\", \"password\");\n+        int forBellini = bellini.getService(UserService.class).search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).build()).getTotalCount();\n+\n+        SyncopeClient rossini = clientFactory.create(\"rossini\", \"password\");\n+\n+        // 3. search users as rossini\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self = rossini.self();\n+        assertEquals(List.of(\"bellini\"), self.getMiddle());\n+\n+        // 3a. search users as rossini without delegation -> FAIL\n+        try {\n+            rossini.getService(UserService.class).search(\n+                    new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).build());\n+            fail();\n+        } catch (ForbiddenException e) {\n+            assertNotNull(e);\n+        }\n+\n+        // 3b. search users as rossini with delegation -> SUCCESS\n+        int forRossini = rossini.delegatedBy(\"bellini\").getService(UserService.class).search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).build()).getTotalCount();\n+        assertEquals(forBellini, forRossini);\n+\n+        // 4. delete delegation: searching users as rossini does not work, even with delegation\n+        delegationService.delete(delegation.getKey());\n+\n+        try {\n+            rossini.getService(UserService.class).search(\n+                    new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).build());\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n+\n+        // 5. query audit entries\n+        AuditQuery query = new AuditQuery.Builder().\n+                type(authLoginSuccess.getType()).\n+                category(authLoginSuccess.getCategory()).\n+                event(authLoginSuccess.getEvent()).\n+                result(authLoginSuccess.getResult()).\n+                build();\n+        List<AuditEntry> entries = query(query, MAX_WAIT_SECONDS);\n+        assertTrue(entries.stream().anyMatch(entry -> \"rossini [delegated by bellini]\".equals(entry.getWho())));\n+\n+        // 6. disable audit\n+        authLogin.setLevel(LoggerLevel.OFF);\n+        loggerService.update(LoggerType.AUDIT, authLogin);\n+    }\n+}"},{"sha":"741442df14cce46ac8b7b3fc2b19039c5774e900","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/JWTITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -42,12 +42,13 @@\n import java.text.SimpleDateFormat;\n import java.util.Calendar;\n import java.util.Date;\n+import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.UUID;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.RandomStringUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.UserCR;\n@@ -375,7 +376,7 @@ public void thirdPartyToken() throws ParseException, JOSEException {\n \n         SyncopeClient jwtClient = clientFactory.create(signed);\n \n-        Pair<Map<String, Set<String>>, UserTO> self = jwtClient.self();\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self = jwtClient.self();\n         assertFalse(self.getLeft().isEmpty());\n         assertEquals(\"puccini\", self.getRight().getUsername());\n     }"},{"sha":"843fa42dab3f6787664e108a8a9c8554c872cecf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -36,6 +36,7 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Collections;\n import java.util.Date;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Optional;\n@@ -47,7 +48,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -1176,7 +1177,8 @@ public void issueSYNCOPE313DB() throws Exception {\n         assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n         // 5. Test the pulled user\n-        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(user.getUsername(), newCleanPassword).self();\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n+                clientFactory.create(user.getUsername(), newCleanPassword).self();\n         assertNotNull(self);\n \n         // 6. Delete PullTask + user\n@@ -1211,7 +1213,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             user = updateUser(userUR).getEntity();\n \n             // 3. Check that the Syncope user now has the changed password\n-            Pair<Map<String, Set<String>>, UserTO> self =\n+            Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n                     clientFactory.create(user.getUsername(), newCleanPassword).self();\n             assertNotNull(self);\n "},{"sha":"d2f3cca7636711fa095460f1060aaef13401e230","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -41,7 +41,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.RandomStringUtils;\n import org.apache.commons.lang3.time.DateFormatUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.batch.BatchRequest;\n@@ -336,7 +336,7 @@ public void create() {\n \n         // 3. verify password\n         try {\n-            Pair<Map<String, Set<String>>, UserTO> self =\n+            Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n                     clientFactory.create(userTO.getUsername(), \"password123\").self();\n             assertNotNull(self);\n         } catch (AccessControlException e) {"},{"sha":"f104ff0887af0b3400b32c237d788467fa752390","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -38,7 +38,7 @@\n import javax.naming.NamingException;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -1142,7 +1142,7 @@ public void issueSYNCOPE391() {\n         assertEquals(\n                 \"passwordTESTNULL1\",\n                 connObjectTO.getAttr(OperationalAttributes.PASSWORD_NAME).get().getValues().get(0));\n-        Pair<Map<String, Set<String>>, UserTO> self =\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n                 clientFactory.create(userTO.getUsername(), \"passwordTESTNULL1\").self();\n         assertNotNull(self);\n "},{"sha":"040c11da0da99d3f2e0400b4e02f03b1f1c0b85e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -35,7 +35,7 @@\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -198,7 +198,8 @@ public void read() {\n             assertNotNull(e);\n         }\n \n-        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(user.getUsername(), \"password123\").self();\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n+                clientFactory.create(user.getUsername(), \"password123\").self();\n         assertEquals(user.getUsername(), self.getRight().getUsername());\n     }\n \n@@ -209,7 +210,7 @@ public void authenticateByPlainAttribute() {\n         String userId = rossini.getPlainAttr(\"userId\").get().getValues().get(0);\n         assertNotNull(userId);\n \n-        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(userId, ADMIN_PWD).self();\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self = clientFactory.create(userId, ADMIN_PWD).self();\n         assertEquals(rossini.getUsername(), self.getRight().getUsername());\n     }\n \n@@ -454,7 +455,8 @@ public void mustChangePassword() {\n         vivaldiClient.getService(UserSelfService.class).mustChangePassword(\"password123\");\n \n         // 4. verify it worked\n-        Pair<Map<String, Set<String>>, UserTO> self = clientFactory.create(\"vivaldi\", \"password123\").self();\n+        Triple<Map<String, Set<String>>, List<String>, UserTO> self =\n+                clientFactory.create(\"vivaldi\", \"password123\").self();\n         assertFalse(self.getRight().isMustChangePassword());\n     }\n "},{"sha":"216de6c2e1654d0f12763d1c4186a08a9f2f1a5d","filename":"src/main/asciidoc/reference-guide/concepts/roles.adoc","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Froles.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Froles.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Froles.adoc?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -127,3 +127,23 @@ The actual Entitlements are assigned through the predefined `GROUP_OWNER` Role:\n . `GROUP_READ`\n . `GROUP_UPDATE`\n . `GROUP_DELETE`\n+\n+The `GROUP_OWNER` Role can be updated to adjust the set of assigned Entitlements.\n+\n+==== Delegation\n+\n+With Delegation, any user can delegate other users to perform operations on their behalf.\n+\n+In order to set up a Delegation, the following information shall be provided:\n+\n+* delegating User (mandatory) - administrators granted with `DELEGATION_CREATE` Entitlement can create Delegations for\n+all defined Users; otherwise, the only accepted value is the User itself;\n+* delegated User (mandatory) - any User defined, distinct from delegating;\n+* start (mandatory) - initial timestamp from which the Delegation is considered effective;\n+* end (optional) - final timestamp after which the Delegation is not considered effective: when not provided, Delegation\n+will remain valid unless deleted;\n+* roles (optional) - set of Roles granted by delegating to delegated User: only Roles owned by delegating can be\n+granted, when not provided all owned Roles are considered as part of the Delegation.\n+\n+[NOTE]\n+<<Audit>> entries generated when operating under Delegation will report both delegating and delegated users."},{"sha":"8d9600c6fdf161cc361b0840154faa243f307a53","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/restfulservices.adoc","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/524fa237cb52c195de2ddd1478215a83d1ea5ec4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/524fa237cb52c195de2ddd1478215a83d1ea5ec4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc?ref=524fa237cb52c195de2ddd1478215a83d1ea5ec4","patch":"@@ -156,6 +156,11 @@ https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apach\n endif::[]\n and `X-Application-Error-Info` might be optionally populated with more details, if available.\n \n+===== X-Syncope-Delegated-By\n+\n+When requesting an operation under <<delegation,Delegation>>, this header must be provided to indicate the delegating\n+User, either by their username or key.\n+\n ===== X-Syncope-Null-Priority-Async\n \n When set to `true`, this request header instructs the <<propagation,propagation process>> not to wait for completion\n@@ -201,6 +206,11 @@ Groups and Any Objects operations.\n When invoking the REST endpoint `/users/self` in `GET`, the `X-Syncope-Entitlements` response header will list all\n the <<entitlements,entitlements>> owned by the requesting user.\n \n+===== X-Syncope-Delegations\n+\n+When invoking the REST endpoint `/users/self` in `GET`, the `X-Syncope-Delegations` response header will list all\n+delegating users for each <<delegation,Delegation>> for which the requesting user is delegated.\n+\n ===== X-Syncope-Privileges\n \n When invoking the REST endpoint `/users/self` in `GET`, the `X-Syncope-Privileges` response header will list all"}]}