{"sha":"ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNhOGViNGZkYjc1YzM5MWVjYjU5OTg3ZDc2ZDFmZGMwOGJkODJkZWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-20T13:11:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-23T08:38:04Z"},"message":"[SYNCOPE-1517] Initial changes","tree":{"sha":"fb0014834525296dc26b80036a59e9372d06abcf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fb0014834525296dc26b80036a59e9372d06abcf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e"}],"stats":{"total":4785,"additions":1127,"deletions":3658},"files":[{"sha":"abeea09f9aa7ad1a37533033ce79e79d2341606f","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnInstanceHistoryConfDirectoryPanel.java","status":"removed","additions":0,"deletions":230,"changes":230,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnInstanceHistoryConfDirectoryPanel.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,230 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.IdMConstants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ConnInstanceHistoryConfDirectoryPanel.CHConfProvider;\n-import org.apache.syncope.client.console.rest.ConnectorHistoryRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.lib.types.IdMEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-/**\n- * List all connector configuration history instances for the selected connector.\n- */\n-public abstract class ConnInstanceHistoryConfDirectoryPanel extends DirectoryPanel<\n-        ConnInstanceHistoryConfTO, ConnInstanceHistoryConfTO, CHConfProvider, ConnectorHistoryRestClient>\n-        implements ModalPanel {\n-\n-    private static final long serialVersionUID = 4984337552918213290L;\n-\n-    protected final BaseModal<?> baseModal;\n-\n-    private final MultilevelPanel multiLevelPanelRef;\n-\n-    private final String entityKey;\n-\n-    public ConnInstanceHistoryConfDirectoryPanel(\n-            final BaseModal<?> baseModal,\n-            final MultilevelPanel multiLevelPanelRef,\n-            final String entityKey,\n-            final PageReference pageRef) {\n-\n-        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false, false);\n-\n-        this.baseModal = baseModal;\n-        this.multiLevelPanelRef = multiLevelPanelRef;\n-        restClient = new ConnectorHistoryRestClient();\n-        setShowResultPage(false);\n-        disableCheckBoxes();\n-\n-        this.entityKey = entityKey;\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected List<IColumn<ConnInstanceHistoryConfTO, String>> getColumns() {\n-        final List<IColumn<ConnInstanceHistoryConfTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<>(\n-                new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n-\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\n-                \"creator\", this), \"creator\", \"creator\"));\n-\n-        columns.add(new DatePropertyColumn<>(\n-                new StringResourceModel(\"creation\", this), \"creation\", \"creation\"));\n-\n-        return columns;\n-    }\n-\n-    @Override\n-    public ActionsPanel<ConnInstanceHistoryConfTO> getActions(final IModel<ConnInstanceHistoryConfTO> model) {\n-        final ActionsPanel<ConnInstanceHistoryConfTO> panel = super.getActions(model);\n-        final ConnInstanceHistoryConfTO connHistoryConfTO = model.getObject();\n-\n-        // -- view\n-        panel.add(new ActionLink<ConnInstanceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -6745431735457245600L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ConnInstanceHistoryConfTO modelObject) {\n-\n-                ConnInstanceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                viewConfiguration(modelObject, target);\n-                target.add(modal);\n-            }\n-        }, ActionLink.ActionType.VIEW, IdMEntitlement.CONNECTOR_HISTORY_LIST);\n-\n-        // -- restore\n-        panel.add(new ActionLink<ConnInstanceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -6745431735457245600L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ConnInstanceHistoryConfTO modelObject) {\n-                try {\n-                    ConnectorHistoryRestClient.restore(modelObject.getKey());\n-                    ConnInstanceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                    target.add(container);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While restoring {}\", connHistoryConfTO.getKey(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                            ? e.getClass().getName() : e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.RESTORE, IdMEntitlement.CONNECTOR_HISTORY_RESTORE);\n-\n-        // -- delete\n-        panel.add(new ActionLink<ConnInstanceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -6745431735457245600L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ConnInstanceHistoryConfTO modelObject) {\n-                try {\n-                    ConnectorHistoryRestClient.delete(modelObject.getKey());\n-                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                    ConnInstanceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While deleting {}\", connHistoryConfTO.getKey(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                            ? e.getClass().getName() : e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.DELETE, IdMEntitlement.CONNECTOR_HISTORY_DELETE, true);\n-\n-        return panel;\n-    }\n-\n-    @Override\n-    protected Collection<ActionType> getBatches() {\n-        return List.of();\n-    }\n-\n-    @Override\n-    protected String paginatorRowsKey() {\n-        return IdMConstants.PREF_CONNECTOR_HISTORY_CONF_PAGINATOR_ROWS;\n-    }\n-\n-    protected abstract void viewConfiguration(ConnInstanceHistoryConfTO connHistoryTO, AjaxRequestTarget target);\n-\n-    @Override\n-    protected void resultTableCustomChanges(\n-            final AjaxDataTablePanel.Builder<ConnInstanceHistoryConfTO, String> resultTableBuilder) {\n-        resultTableBuilder.setMultiLevelPanel(baseModal, multiLevelPanelRef);\n-    }\n-\n-    @Override\n-    protected CHConfProvider dataProvider() {\n-        return new CHConfProvider(rows);\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n-        if (event.getPayload() instanceof ExitEvent && modal != null) {\n-            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n-            baseModal.show(false);\n-            baseModal.close(target);\n-        }\n-    }\n-\n-    protected class CHConfProvider extends DirectoryDataProvider<ConnInstanceHistoryConfTO> {\n-\n-        private static final long serialVersionUID = -4402560904215049574L;\n-\n-        private final SortableDataProviderComparator<ConnInstanceHistoryConfTO> comparator;\n-\n-        public CHConfProvider(final int paginatorRows) {\n-            super(paginatorRows);\n-\n-            setSort(\"creation\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<ConnInstanceHistoryConfTO> iterator(final long first, final long count) {\n-            final List<ConnInstanceHistoryConfTO> configurations = ConnectorHistoryRestClient.list(entityKey);\n-\n-            configurations.sort(comparator);\n-            return configurations.iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return ConnectorHistoryRestClient.list(entityKey).size();\n-        }\n-\n-        @Override\n-        public IModel<ConnInstanceHistoryConfTO> model(final ConnInstanceHistoryConfTO object) {\n-            return new CompoundPropertyModel<>(object);\n-        }\n-    }\n-}"},{"sha":"d40369e16587041e8df3c17d3871dc22fa475940","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/HistoryConfDetails.java","status":"removed","additions":0,"deletions":245,"changes":245,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,245 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.stream.Collectors;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n-import org.apache.syncope.common.lib.to.AbstractHistoryConf;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class HistoryConfDetails<T extends AbstractHistoryConf> extends MultilevelPanel.SecondLevel {\n-\n-    private static final long serialVersionUID = -7400543686272100483L;\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private final T selectedHistoryConfTO;\n-\n-    private final List<T> availableHistoryConfTOs;\n-\n-    private AbstractModalPanel<String> jsonPanel;\n-\n-    public HistoryConfDetails(final BaseModal<?> baseModal, final T selectedHistoryConfTO,\n-            final PageReference pageRef, final List<T> availableHistoryConfTOs) {\n-        super();\n-\n-        // remove selected conf from list\n-        this.availableHistoryConfTOs = availableHistoryConfTOs.stream().\n-                filter(object -> !object.getKey().equals(selectedHistoryConfTO.getKey())).collect(Collectors.toList());\n-        this.selectedHistoryConfTO = selectedHistoryConfTO;\n-\n-        // add current conf to list\n-        addCurrentInstanceConf();\n-\n-        Form<?> form = initDropdownDiffConfForm();\n-        add(form);\n-        form.setVisible(!availableHistoryConfTOs.isEmpty());\n-\n-        showConfigurationSinglePanel();\n-    }\n-\n-    private void showConfigurationSinglePanel() {\n-        Pair<String, String> info = getJSONInfo(selectedHistoryConfTO);\n-\n-        jsonPanel = new JsonEditorPanel(null, new PropertyModel<String>(info, \"right\"), true, null) {\n-\n-            private static final long serialVersionUID = -8927036362466990179L;\n-\n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target) {\n-                modal.close(target);\n-            }\n-        };\n-        jsonPanel.setOutputMarkupId(true);\n-\n-        addOrReplace(jsonPanel);\n-    }\n-\n-    private void showConfigurationDiffPanel(final List<T> historyConfTOs) {\n-        List<Pair<String, String>> infos = new ArrayList<>();\n-        historyConfTOs.forEach(historyConfTO -> infos.add(getJSONInfo(historyConfTO)));\n-\n-        jsonPanel = new JsonDiffPanel(null, new PropertyModel<String>(infos.get(0), \"value\"),\n-                new PropertyModel<String>(infos.get(1), \"value\"), null) {\n-\n-            private static final long serialVersionUID = -8927036362466990179L;\n-\n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target) {\n-                modal.close(target);\n-            }\n-        };\n-\n-        replace(jsonPanel);\n-    }\n-\n-    private Pair<String, String> getJSONInfo(final T historyConfTO) {\n-        Object conf = null; // selected configuration instance\n-        String key = \"\";\n-        if (historyConfTO instanceof ConnInstanceHistoryConfTO) {\n-            ConnInstanceHistoryConfTO historyConf = ConnInstanceHistoryConfTO.class.cast(historyConfTO);\n-            conf = historyConf.getConnInstanceTO();\n-            key = historyConf.getKey();\n-        } else if (historyConfTO instanceof ResourceHistoryConfTO) {\n-            ResourceHistoryConfTO historyConf = ResourceHistoryConfTO.class.cast(historyConfTO);\n-            conf = historyConf.getResourceTO();\n-            key = historyConf.getKey();\n-        }\n-\n-        String json = \"\";\n-        try {\n-            json = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(conf);\n-        } catch (IOException ex) {\n-            DirectoryPanel.LOG.error(\"Error converting objects to JSON\", ex);\n-        }\n-\n-        return Pair.of(key, json);\n-    }\n-\n-    private <T extends AbstractHistoryConf> Map<String, String> getDropdownNamesMap(final List<T> historyConfTOs) {\n-        Map<String, String> historyConfMap = new LinkedHashMap<>();\n-\n-        String current = null;\n-        for (T historyConf : historyConfTOs) {\n-            if (historyConf.getCreation() == null) {\n-                current = historyConf.getKey();\n-            } else {\n-                historyConfMap.put(historyConf.getKey(), historyConf.getCreator() + \" - \"\n-                        + SyncopeConsoleSession.get().getDateFormat().format(\n-                                historyConf.getCreation()) + \" - \" + historyConf.getKey());\n-            }\n-        }\n-        if (current != null) {\n-            historyConfMap.put(current, getString(\"current\"));\n-        }\n-\n-        return historyConfMap;\n-    }\n-\n-    private Form<?> initDropdownDiffConfForm() {\n-        final Form<T> form = new Form<>(\"form\");\n-        form.setModel(new CompoundPropertyModel<>(selectedHistoryConfTO));\n-        form.setOutputMarkupId(true);\n-\n-        final Map<String, String> namesMap = getDropdownNamesMap(availableHistoryConfTOs);\n-        List<String> keys = new ArrayList<>(namesMap.keySet());\n-\n-        final AjaxDropDownChoicePanel<String> dropdownElem = new AjaxDropDownChoicePanel<>(\n-                \"compareDropdown\",\n-                getString(\"compare\"),\n-                new PropertyModel<>(selectedHistoryConfTO, Constants.KEY_FIELD_NAME),\n-                false);\n-        dropdownElem.setChoices(keys);\n-        dropdownElem.setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-            private static final long serialVersionUID = -6265603675261014912L;\n-\n-            @Override\n-            public Object getDisplayValue(final String value) {\n-                return namesMap.get(value) == null ? value : namesMap.get(value);\n-            }\n-\n-            @Override\n-            public String getIdValue(final String value, final int i) {\n-                return value;\n-            }\n-\n-            @Override\n-            public String getObject(\n-                    final String id, final IModel<? extends List<? extends String>> choices) {\n-                return id;\n-            }\n-        });\n-        dropdownElem.setNullValid(true);\n-        dropdownElem.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                List<T> elemsToCompare = new ArrayList<>();\n-                elemsToCompare.add(selectedHistoryConfTO);\n-\n-                final String selectedKey = dropdownElem.getModelObject();\n-                if (selectedKey != null) {\n-                    if (!selectedKey.isEmpty()) {\n-                        T confToCompare = availableHistoryConfTOs.stream().\n-                                filter(object -> object.getKey().equals(selectedKey)).findAny().orElse(null);\n-                        elemsToCompare.add(confToCompare);\n-                        showConfigurationDiffPanel(elemsToCompare);\n-                    } else {\n-                        showConfigurationSinglePanel();\n-                    }\n-                }\n-                target.add(jsonPanel);\n-            }\n-        });\n-        form.add(dropdownElem);\n-\n-        return form;\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    private void addCurrentInstanceConf() {\n-        T conf = null;\n-\n-        if (selectedHistoryConfTO instanceof ConnInstanceHistoryConfTO) {\n-            ConnInstanceTO current = ConnectorRestClient.read(\n-                    ConnInstanceHistoryConfTO.class.cast(selectedHistoryConfTO).getConnInstanceTO().getKey());\n-            conf = (T) new ConnInstanceHistoryConfTO();\n-            ((ConnInstanceHistoryConfTO) conf).setConnInstanceTO(current);\n-        } else if (selectedHistoryConfTO instanceof ResourceHistoryConfTO) {\n-            ResourceTO current = ResourceRestClient.read(\n-                    ResourceHistoryConfTO.class.cast(selectedHistoryConfTO).getResourceTO().getKey());\n-            conf = (T) new ResourceHistoryConfTO();\n-            ((ResourceHistoryConfTO) conf).setResourceTO(current);\n-        }\n-\n-        if (conf != null) {\n-            conf.setCreator(selectedHistoryConfTO.getCreator());\n-            conf.setKey(\"current\");\n-            availableHistoryConfTOs.add(conf);\n-        }\n-    }\n-}"},{"sha":"bb31ade6eaec96c9cd5315e17e29119bf01d1027","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/HistoryConfList.java","status":"removed","additions":0,"deletions":80,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,80 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.io.Serializable;\n-\n-import org.apache.syncope.client.console.rest.ConnectorHistoryRestClient;\n-import org.apache.syncope.client.console.rest.ResourceHistoryRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public class HistoryConfList<T extends Serializable> extends Panel implements ModalPanel {\n-\n-    private static final long serialVersionUID = 2482507052037665907L;\n-\n-    public <T extends AnyTO> HistoryConfList(\n-            final BaseModal<?> baseModal,\n-            final String entityKey,\n-            final PageReference pageReference,\n-            final EntityTO modelObj) {\n-\n-        super(BaseModal.CONTENT_ID);\n-\n-        final MultilevelPanel mlp = new MultilevelPanel(\"history\");\n-\n-        mlp.setFirstLevel(modelObj instanceof ConnInstanceTO\n-                ? new ConnInstanceHistoryConfDirectoryPanel(baseModal, mlp, entityKey, pageReference) {\n-\n-            private static final long serialVersionUID = 1422189028000709100L;\n-\n-            @Override\n-            protected void viewConfiguration(final ConnInstanceHistoryConfTO historyTO,\n-                    final AjaxRequestTarget target) {\n-                mlp.next(\n-                        new StringResourceModel(\"history.diff.view\", this).getObject(),\n-                        new HistoryConfDetails<>(modal, historyTO, pageReference,\n-                            ConnectorHistoryRestClient.list(entityKey)), target);\n-            }\n-        } : new ResourceHistoryConfDirectoryPanel(baseModal, mlp, entityKey, pageReference) {\n-\n-            private static final long serialVersionUID = 1422189028000709100L;\n-\n-            @Override\n-            protected void viewConfiguration(final ResourceHistoryConfTO historyTO,\n-                    final AjaxRequestTarget target) {\n-                mlp.next(\n-                        new StringResourceModel(\"history.diff.view\", this).getObject(),\n-                        new HistoryConfDetails<>(modal, historyTO, pageReference,\n-                            ResourceHistoryRestClient.list(entityKey)), target);\n-            }\n-        });\n-\n-        add(mlp);\n-    }\n-}"},{"sha":"1dab13c103e203033f795afd596034b44e86f6cd","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.syncope.client.console.panels.DirectoryPanel.LOG;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -55,11 +53,15 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LinkedAccountModalPanel extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = -4603032036433309900L;\n \n+    private static final Logger LOG = LoggerFactory.getLogger(LinkedAccountModalPanel.class);\n+\n     private final LinkedAccountWizardBuilder wizard;\n \n     private final WizardMgtPanel<LinkedAccountTO> list;"},{"sha":"4e6746756c658374d01dd0b797ed4367d7b7105c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ResourceHistoryConfDirectoryPanel.java","status":"removed","additions":0,"deletions":231,"changes":231,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceHistoryConfDirectoryPanel.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,231 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.IdMConstants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ResourceHistoryConfDirectoryPanel.RHConfProvider;\n-import org.apache.syncope.client.console.rest.ResourceHistoryRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.lib.types.IdMEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-/**\n- * List all resource configuration history instances for the selected resource.\n- */\n-public abstract class ResourceHistoryConfDirectoryPanel extends DirectoryPanel<\n-        ResourceHistoryConfTO, ResourceHistoryConfTO, RHConfProvider, ResourceHistoryRestClient>\n-        implements ModalPanel {\n-\n-    private static final long serialVersionUID = 7636531280703026376L;\n-\n-    protected final BaseModal<?> baseModal;\n-\n-    private final MultilevelPanel multiLevelPanelRef;\n-\n-    private final String entityKey;\n-\n-    public ResourceHistoryConfDirectoryPanel(\n-            final BaseModal<?> baseModal,\n-            final MultilevelPanel multiLevelPanelRef,\n-            final String entityKey,\n-            final PageReference pageRef) {\n-\n-        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false, false);\n-\n-        this.baseModal = baseModal;\n-        this.multiLevelPanelRef = multiLevelPanelRef;\n-        restClient = new ResourceHistoryRestClient();\n-        setShowResultPage(false);\n-        disableCheckBoxes();\n-\n-        this.entityKey = entityKey;\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected List<IColumn<ResourceHistoryConfTO, String>> getColumns() {\n-        final List<IColumn<ResourceHistoryConfTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<>(\n-                new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n-\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\n-                \"creator\", this), \"creator\", \"creator\"));\n-\n-        columns.add(new DatePropertyColumn<>(\n-                new StringResourceModel(\"creation\", this), \"creation\", \"creation\"));\n-\n-        return columns;\n-    }\n-\n-    @Override\n-    public ActionsPanel<ResourceHistoryConfTO> getActions(final IModel<ResourceHistoryConfTO> model) {\n-        final ActionsPanel<ResourceHistoryConfTO> panel = super.getActions(model);\n-        final ResourceHistoryConfTO resHistoryConfTO = model.getObject();\n-\n-        // -- view\n-        panel.add(new ActionLink<ResourceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -3369924994540304232L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ResourceHistoryConfTO modelObject) {\n-\n-                ResourceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                viewConfiguration(modelObject, target);\n-                target.add(modal);\n-            }\n-        }, ActionLink.ActionType.VIEW, IdMEntitlement.RESOURCE_HISTORY_LIST);\n-\n-        // -- restore\n-        panel.add(new ActionLink<ResourceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -3369924994540304232L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ResourceHistoryConfTO modelObject) {\n-                try {\n-                    ResourceHistoryRestClient.restore(modelObject.getKey());\n-                    ResourceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                    target.add(container);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While restoring {}\", resHistoryConfTO.getKey(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                            ? e.getClass().getName() : e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.RESTORE, IdMEntitlement.RESOURCE_HISTORY_RESTORE);\n-\n-        // -- delete\n-        panel.add(new ActionLink<ResourceHistoryConfTO>() {\n-\n-            private static final long serialVersionUID = -3369924994540304232L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ResourceHistoryConfTO modelObject) {\n-                try {\n-                    ResourceHistoryRestClient.delete(modelObject.getKey());\n-                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                    ResourceHistoryConfDirectoryPanel.this.getTogglePanel().close(target);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While deleting {}\", resHistoryConfTO.getKey(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                            ? e.getClass().getName() : e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.DELETE, IdMEntitlement.RESOURCE_HISTORY_DELETE, true);\n-\n-        return panel;\n-    }\n-\n-    @Override\n-    protected Collection<ActionType> getBatches() {\n-        return List.of();\n-    }\n-\n-    @Override\n-    protected String paginatorRowsKey() {\n-        return IdMConstants.PREF_RESOURCE_HISTORY_CONF_PAGINATOR_ROWS;\n-    }\n-\n-    protected abstract void viewConfiguration(ResourceHistoryConfTO resHistoryTO, AjaxRequestTarget target);\n-\n-    @Override\n-    protected void resultTableCustomChanges(\n-            final AjaxDataTablePanel.Builder<ResourceHistoryConfTO, String> resultTableBuilder) {\n-        resultTableBuilder.setMultiLevelPanel(baseModal, multiLevelPanelRef);\n-    }\n-\n-    @Override\n-    protected RHConfProvider dataProvider() {\n-        return new RHConfProvider(rows);\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n-        if (event.getPayload() instanceof WizardMgtPanel.ExitEvent && modal != null) {\n-            final AjaxRequestTarget target = WizardMgtPanel.ExitEvent.class.cast(event.getPayload()).getTarget();\n-            baseModal.show(false);\n-            baseModal.close(target);\n-        }\n-    }\n-\n-    protected class RHConfProvider extends DirectoryDataProvider<ResourceHistoryConfTO> {\n-\n-        private static final long serialVersionUID = -5244315453787001412L;\n-\n-        private final SortableDataProviderComparator<ResourceHistoryConfTO> comparator;\n-\n-        public RHConfProvider(final int paginatorRows) {\n-            super(paginatorRows);\n-\n-            setSort(\"creation\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<ResourceHistoryConfTO> iterator(final long first, final long count) {\n-            final List<ResourceHistoryConfTO> configurations = ResourceHistoryRestClient.list(entityKey);\n-\n-            configurations.sort(comparator);\n-            return configurations.iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return ResourceHistoryRestClient.list(entityKey).size();\n-        }\n-\n-        @Override\n-        public IModel<ResourceHistoryConfTO> model(final ResourceHistoryConfTO object) {\n-            return new CompoundPropertyModel<>(object);\n-        }\n-    }\n-}"},{"sha":"d30407c9e146f6d3064e8fdf28bc1a7770a7e65c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/ProvisioningPolicyModalPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -55,6 +55,7 @@\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -154,12 +155,12 @@ public void onSubmit(final AjaxRequestTarget target) {\n                     try {\n                         ImplementationRestClient.update(rule.getImpl());\n                     } catch (Exception e) {\n-                        throw new RuntimeException(e);\n+                        throw new WicketRuntimeException(e);\n                     }\n                 }\n             });\n             PolicyRestClient.updatePolicy(getItem() instanceof PullPolicyTO\n-                ? PolicyType.PULL : PolicyType.PUSH, getItem());\n+                    ? PolicyType.PULL : PolicyType.PUSH, getItem());\n \n             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n             this.modal.close(target);"},{"sha":"5940abd66130b0228afbe5b60fcc34ac54071f17","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorHistoryRestClient.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorHistoryRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorHistoryRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorHistoryRestClient.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.rest;\n-\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n-\n-/**\n- * Console client for invoking Rest Connector configuration history services.\n- */\n-public class ConnectorHistoryRestClient extends BaseRestClient {\n-\n-    private static final long serialVersionUID = -1917949374689773018L;\n-\n-    public static List<ConnInstanceHistoryConfTO> list(final String key) {\n-        List<ConnInstanceHistoryConfTO> connHistoryConfs = List.of();\n-        try {\n-            connHistoryConfs = getService(ConnectorHistoryService.class).list(key);\n-        } catch (Exception e) {\n-            LOG.error(\"While reading connector history configuration instances\", e);\n-        }\n-        return connHistoryConfs;\n-    }\n-\n-    public static void delete(final String key) {\n-        getService(ConnectorHistoryService.class).delete(key);\n-    }\n-\n-    public static void restore(final String key) {\n-        getService(ConnectorHistoryService.class).restore(key);\n-    }\n-}"},{"sha":"04399025ddf275d88e93ad68b7756bf97cc0ec00","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/ResourceHistoryRestClient.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceHistoryRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceHistoryRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceHistoryRestClient.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.rest;\n-\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n-\n-/**\n- * Console client for invoking Rest Resource configuration history services.\n- */\n-public class ResourceHistoryRestClient extends BaseRestClient {\n-\n-    private static final long serialVersionUID = -5722829010510310887L;\n-\n-    public static List<ResourceHistoryConfTO> list(final String key) {\n-        List<ResourceHistoryConfTO> resHistoryConfs = List.of();\n-        try {\n-            resHistoryConfs = getService(ResourceHistoryService.class).list(key);\n-        } catch (Exception e) {\n-            LOG.error(\"While reading resource history configuration instances\", e);\n-        }\n-        return resHistoryConfs;\n-    }\n-\n-    public static void delete(final String key) {\n-        getService(ResourceHistoryService.class).delete(key);\n-    }\n-\n-    public static void restore(final String key) {\n-        getService(ResourceHistoryService.class).restore(key);\n-    }\n-}"},{"sha":"982a648629f4cf5decd95dc19e8cff6765877023","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":64,"deletions":12,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,14 +18,15 @@\n  */\n package org.apache.syncope.client.console.topology;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.text.MessageFormat;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.audit.AuditHistoryModal;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.HistoryConfList;\n import org.apache.syncope.client.console.panels.ConnObjects;\n import org.apache.syncope.client.console.wizards.resources.ConnectorWizardBuilder;\n import org.apache.syncope.client.console.wizards.resources.ResourceWizardBuilder;\n@@ -48,6 +49,7 @@\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.PageReference;\n@@ -70,6 +72,8 @@ public class TopologyTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -2025535531121434056L;\n \n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n     private final WebMarkupContainer container;\n \n     protected final BaseModal<Serializable> propTaskModal;\n@@ -344,11 +348,34 @@ public String getAjaxIndicatorMarkupId() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                String connKey = String.class.cast(node.getKey());\n-                ConnInstanceTO connInstance = ConnectorRestClient.read(connKey);\n-\n-                target.add(historyModal.setContent(\n-                        new HistoryConfList<>(historyModal, connKey, pageRef, connInstance)));\n+                ConnInstanceTO modelObject = ConnectorRestClient.read(node.getKey());\n+\n+                target.add(historyModal.setContent(new AuditHistoryModal<ConnInstanceTO>(\n+                        historyModal,\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"ConnectorLogic\",\n+                        modelObject,\n+                        IdMEntitlement.CONNECTOR_UPDATE,\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -3225348282675513648L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        try {\n+                            ConnInstanceTO updated = MAPPER.readValue(json, ConnInstanceTO.class);\n+                            ConnectorRestClient.update(updated);\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            toggle(target, false);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring connector {}\", node.getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n \n                 historyModal.header(\n                         new Model<>(MessageFormat.format(getString(\"connector.menu.history\"), node.getDisplayName())));\n@@ -362,7 +389,8 @@ public String getAjaxIndicatorMarkupId() {\n             }\n \n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(history, RENDER, IdMEntitlement.CONNECTOR_HISTORY_LIST);\n+        MetaDataRoleAuthorizationStrategy.authorize(history, RENDER,\n+                String.format(\"%s,%s\", IdMEntitlement.CONNECTOR_READ, IdRepoEntitlement.AUDIT_LIST));\n         fragment.add(history);\n \n         return fragment;\n@@ -575,11 +603,34 @@ public String getAjaxIndicatorMarkupId() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                String resourceKey = String.class.cast(node.getKey());\n-                final ResourceTO modelObject = ResourceRestClient.read(String.class.cast(node.getKey()));\n+                ResourceTO modelObject = ResourceRestClient.read(node.getKey());\n \n-                target.add(historyModal.setContent(\n-                        new HistoryConfList<>(historyModal, resourceKey, pageRef, modelObject)));\n+                target.add(historyModal.setContent(new AuditHistoryModal<ResourceTO>(\n+                        historyModal,\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"ResourceLogic\",\n+                        modelObject,\n+                        IdMEntitlement.RESOURCE_UPDATE,\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -3712506022627033811L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        try {\n+                            ResourceTO updated = MAPPER.readValue(json, ResourceTO.class);\n+                            ResourceRestClient.update(updated);\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            toggle(target, false);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring resource {}\", node.getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n \n                 historyModal.header(\n                         new Model<>(MessageFormat.format(getString(\"resource.menu.history\"), node.getDisplayName())));\n@@ -593,7 +644,8 @@ public String getAjaxIndicatorMarkupId() {\n             }\n \n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(history, RENDER, IdMEntitlement.RESOURCE_HISTORY_LIST);\n+        MetaDataRoleAuthorizationStrategy.authorize(history, RENDER,\n+                String.format(\"%s,%s\", IdMEntitlement.RESOURCE_READ, IdRepoEntitlement.AUDIT_LIST));\n         fragment.add(history);\n \n         // [SYNCOPE-1161] - Option to clone a resource"},{"sha":"da899345e018aea1ed53f816e119330cbb997e2f","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails.html","status":"removed","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.html?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,29 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-\n-    <form wicket:id=\"form\">\n-      <span wicket:id=\"compareDropdown\"></span>\n-    </form>\n-\n-    <div wicket:id=\"content\"></div>\n-\n-  </wicket:panel>\n-</html>"},{"sha":"0abe8038142e466c8061abf94a295282031de9b5","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Creation date\n-creator=Creator\n-entityKey=Local ID\n-history.view=History view\n-resource=Resource\n-compare=Compare with\n-current=Current"},{"sha":"bac0d9c2df03d33debf93d0442cd777eecc95e06","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails_it.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_it.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Data di creazione\n-creator=Creatore\n-entityKey=ID locale\n-history.view=Configurazione\n-resource=Risorsa\n-compare=Confronta con\n-current=Corrente"},{"sha":"efe910c7906e3411fd5b837cbebd9f5cc2a54a73","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails_ja.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ja.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=\\u4f5c\\u6210\\u65e5\n-creator=\\u4f5c\\u6210\\u8005\n-entityKey=\\u30ed\\u30fc\\u30ab\\u30eb ID\n-history.view=\\u5c65\\u6b74\\u30d3\\u30e5\\u30fc\n-resource=\\u30ea\\u30bd\\u30fc\\u30b9\n-compare=\\u6bd4\\u8f03...\n-current=\\u73fe\\u5728"},{"sha":"192a559e8313f2cd84bde6350e811d66425f331a","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails_pt_BR.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_pt_BR.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Cria\\u00e7\\u00e3o\n-creator=O Criador\n-entityKey=ID local\n-history.view=Configura\\u00e7\\u00e3o\n-resource=Recurso\n-compare=Compare com\n-current=Atual"},{"sha":"7b17b315c6cbf691a84814d7c4953c0b2ff7b0cb","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails_ru.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_ru.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=\\u0421\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u0435\n-creator=\\u0442\\u0432\\u043e\\u0440\\u0435\\u0446\n-entityKey=\\u041c\\u0435\\u0441\\u0442\\u043d\\u044b\\u0439 \\u0438\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\n-history.view=\\u043a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n-resource=\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441\n-compare=\\u0421\\u0440\\u0430\\u0432\\u043d\\u0438\\u0442\\u044c \\u0441\n-current=\\u0422\\u0435\\u043a\\u0443\\u0449\\u0438\\u0439"},{"sha":"1cae5afad2d0b847ddc39728aa39674d5b2096ab","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList.html","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.html?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span wicket:id=\"history\">[HISTORY]</span>\n-  </wicket:panel>\n-</html>"},{"sha":"5546931954fd92753901ce6ada7f7467a6be58a5","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Creation date\n-creator=Creator\n-entityKey=Local ID\n-history.diff.view=Configuration\n-resource=Resource"},{"sha":"88c8bb300579255e07abcfebc271989db240c58e","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList_it.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_it.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Data di creazione\n-creator=Creatore\n-entityKey=ID locale\n-history.diff.view=Configurazione\n-resource=Risorsa"},{"sha":"991fa5f46093b96859ea8c09f5e7812663b150e8","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList_ja.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ja.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=\\u4f5c\\u6210\\u65e5\n-creator=\\u4f5c\\u6210\\u8005\n-entityKey=\\u30ed\\u30fc\\u30ab\\u30eb ID\n-history.diff.view=\\u8a2d\\u5b9a\n-resource=\\u30ea\\u30bd\\u30fc\\u30b9"},{"sha":"813728de24adf1df15fda298674e5c8c87841f4d","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList_pt_BR.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_pt_BR.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Cria\\u00e7\\u00e3o\n-creator=O Criador\n-entityKey=ID local\n-history.diff.view=Configura\\u00e7\\u00e3o\n-resource=Recurso"},{"sha":"4f278d7f10ff450c2fb60b9eb97bc343915b602e","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList_ru.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_ru.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=\\u0421\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u0435\n-creator=\\u0442\\u0432\\u043e\\u0440\\u0435\\u0446\n-entityKey=\\u041c\\u0435\\u0441\\u0442\\u043d\\u044b\\u0439 \\u0438\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\n-history.diff.view=\\u043a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n-resource=\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441"},{"sha":"33bf551f543a9bc058031445195879f5bc874c77","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -51,6 +51,7 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.Session;\n import org.apache.wicket.ThreadContext;\n+import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n@@ -385,8 +386,7 @@ public void onError(final AjaxRequestTarget target) {\n \n     private Serializable onApply(final AjaxRequestTarget target) throws TimeoutException {\n         try {\n-            Future<Pair<Serializable, Serializable>> executor =\n-                    execute(new ApplyFuture(target));\n+            Future<Pair<Serializable, Serializable>> executor = execute(new ApplyFuture(target));\n \n             Pair<Serializable, Serializable> res =\n                     executor.get(getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n@@ -400,7 +400,7 @@ private Serializable onApply(final AjaxRequestTarget target) throws TimeoutExcep\n             if (e.getCause() instanceof CaptchaNotMatchingException) {\n                 throw (CaptchaNotMatchingException) e.getCause();\n             }\n-            throw new RuntimeException(e);\n+            throw new WicketRuntimeException(e);\n         }\n     }\n "},{"sha":"8d491dfa32d38c9117585e0b6c9ea4e41da64506","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.audit;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.Date;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n+import org.apache.syncope.common.lib.to.AbstractAnnotatedBean;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AuditHistoryDetails<T extends EntityTO> extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = -7400543686272100483L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AuditHistoryDetails.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private static final String KEY_CURRENT = \"current\";\n+\n+    public AuditHistoryDetails(\n+            final MultilevelPanel mlp,\n+            final AuditEntryTO selected,\n+            final T currentEntity,\n+            final String auditRestoreEntitlement,\n+            final PageReference pageRef) {\n+\n+        super();\n+\n+        AuditEntryTO current = new AuditEntryTO();\n+        current.setKey(KEY_CURRENT);\n+        if (currentEntity instanceof AbstractAnnotatedBean) {\n+            current.setWho(((AbstractAnnotatedBean) currentEntity).getCreator());\n+            current.setDate(((AbstractAnnotatedBean) currentEntity).getCreationDate());\n+        } else {\n+            current.setWho(SyncopeConsoleSession.get().getSelfTO().getUsername());\n+            current.setDate(new Date());\n+        }\n+        try {\n+            current.setBefore(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(currentEntity));\n+        } catch (JsonProcessingException e) {\n+            LOG.error(\"While serializing current entity\", e);\n+            throw new WicketRuntimeException(e);\n+        }\n+\n+        add(new Label(\"current\", getString(\"current\")));\n+        add(new Label(\"previous\", getString(\"previous\")));\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<T> reference = (Class<T>) currentEntity.getClass();\n+        add(new JsonDiffPanel(null, toJSON(current, reference), toJSON(selected, reference), null) {\n+\n+            private static final long serialVersionUID = 2087989787864619493L;\n+\n+            @Override\n+            public void onSubmit(final AjaxRequestTarget target) {\n+                modal.close(target);\n+            }\n+        });\n+\n+        AjaxLink<Void> restore = new AjaxLink<Void>(\"restore\") {\n+\n+            private static final long serialVersionUID = -817438685948164787L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    String json = selected.getBefore() == null\n+                            ? MAPPER.readTree(selected.getOutput()).get(\"entity\").toPrettyString()\n+                            : selected.getBefore();\n+                    restore(json, target);\n+\n+                    mlp.prev(target);\n+                } catch (JsonProcessingException e) {\n+                    throw new WicketRuntimeException(e);\n+                }\n+            }\n+        };\n+        MetaDataRoleAuthorizationStrategy.authorize(restore, ENABLE, auditRestoreEntitlement);\n+        add(restore);\n+    }\n+\n+    protected abstract void restore(String json, AjaxRequestTarget target);\n+\n+    private Model<String> toJSON(final AuditEntryTO auditEntry, final Class<T> reference) {\n+        try {\n+            String content = auditEntry.getBefore() == null\n+                    ? MAPPER.readTree(auditEntry.getOutput()).get(\"entity\").toPrettyString()\n+                    : auditEntry.getBefore();\n+\n+            T entity = MAPPER.readValue(content, reference);\n+            if (entity instanceof UserTO) {\n+                UserTO userTO = (UserTO) entity;\n+                userTO.setPassword(null);\n+                userTO.setSecurityAnswer(null);\n+            }\n+\n+            return Model.of(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(entity));\n+        } catch (Exception e) {\n+            LOG.error(\"While (de)serializing entity {}\", auditEntry, e);\n+            throw new WicketRuntimeException(e);\n+        }\n+    }\n+}"},{"sha":"cf12f0d44c35f0ca5a3a020461da7f4390c97b90","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDirectoryPanel.java","status":"modified","additions":65,"deletions":179,"changes":244,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,142 +18,84 @@\n  */\n package org.apache.syncope.client.console.audit;\n \n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.audit.AuditHistoryDirectoryPanel.AuditHistoryProvider;\n import org.apache.syncope.client.console.commons.IdRepoConstants;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AuditHistoryRestClient;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.AnyOperations;\n-import org.apache.syncope.common.lib.request.AnyObjectUR;\n-import org.apache.syncope.common.lib.request.GroupUR;\n-import org.apache.syncope.common.lib.request.UserUR;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AuditEntryTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.ProvisioningResult;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class AuditHistoryDirectoryPanel extends\n-        DirectoryPanel<AuditEntryTO, AuditEntryTO, AuditHistoryProvider, AuditHistoryRestClient>\n+public abstract class AuditHistoryDirectoryPanel<T extends EntityTO> extends DirectoryPanel<\n+        AuditEntryTO, AuditEntryTO, AuditHistoryDirectoryPanel<T>.AuditHistoryProvider, AuditHistoryRestClient>\n         implements ModalPanel {\n \n     private static final long serialVersionUID = -8248734710505211261L;\n \n-    private static final int TOTAL_AUDIT_HISTORY_COMPARISONS = 25;\n+    private static final List<String> EVENTS = Arrays.asList(\"create\", \"update\");\n \n-    protected static final ObjectMapper MAPPER = new ObjectMapper();\n+    private static final SortParam<String> REST_SORT = new SortParam<>(\"event_date\", false);\n \n     private final BaseModal<?> baseModal;\n \n-    private final MultilevelPanel multiLevelPanelRef;\n+    private final MultilevelPanel mlp;\n \n-    private final AnyTO anyTO;\n+    private final AuditElements.EventCategoryType type;\n \n-    private final AnyTypeKind anyTypeKind;\n+    private final String category;\n+\n+    private final T entity;\n+\n+    private final String auditRestoreEntitlement;\n \n     public AuditHistoryDirectoryPanel(\n             final BaseModal<?> baseModal,\n-            final MultilevelPanel multiLevelPanelRef,\n-            final PageReference pageRef,\n-            final AnyTO anyTO) {\n+            final MultilevelPanel mlp,\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n+            final T entity,\n+            final String auditRestoreEntitlement,\n+            final PageReference pageRef) {\n \n         super(MultilevelPanel.FIRST_LEVEL_ID, pageRef);\n         disableCheckBoxes();\n \n         this.baseModal = baseModal;\n-        this.multiLevelPanelRef = multiLevelPanelRef;\n-        this.anyTO = anyTO;\n-        this.anyTypeKind = AnyTypeKind.fromTOClass(anyTO.getClass());\n+        this.mlp = mlp;\n+        this.type = type;\n+        this.category = category;\n+        this.entity = entity;\n+        this.auditRestoreEntitlement = auditRestoreEntitlement;\n+        this.pageRef = pageRef;\n \n         this.restClient = new AuditHistoryRestClient();\n         initResultTable();\n     }\n \n-    /**\n-     * Restore an object based on the audit record.Note that for user objects, the original audit record masks\n-     * the password and the security answer; so we cannot use the audit record to resurrect the entry based on mask\n-     * data.\n-     *\n-     * The method behavior below will reset the audit record such that the current security answer and the password for\n-     * the object are always maintained, and such properties for the user cannot be restored using audit records.\n-     *\n-     * @param json the object from audit\n-     * @param anyTO the any to\n-     * @return the response\n-     * @throws JsonProcessingException if json value cannot be parsed\n-     */\n-    protected ProvisioningResult<? extends AnyTO> restore(final String json, final AnyTO anyTO)\n-            throws JsonProcessingException {\n-\n-        if (anyTO instanceof UserTO) {\n-            UserTO userTO = MAPPER.readValue(json, UserTO.class);\n-            UserUR req = AnyOperations.diff(userTO, anyTO, false);\n-            req.setPassword(null);\n-            req.setSecurityAnswer(null);\n-            return new UserRestClient().update(anyTO.getETagValue(), req);\n-        }\n-        if (anyTO instanceof GroupTO) {\n-            GroupTO groupTO = MAPPER.readValue(json, GroupTO.class);\n-            GroupUR req = AnyOperations.diff(groupTO, anyTO, false);\n-            return new GroupRestClient().update(anyTO.getETagValue(), req);\n-        }\n-        if (anyTO instanceof AnyObjectTO) {\n-            AnyObjectTO anyObjectTO = MAPPER.readValue(json, AnyObjectTO.class);\n-            AnyObjectUR req = AnyOperations.diff(anyObjectTO, anyTO, false);\n-            return new AnyObjectRestClient().update(anyTO.getETagValue(), req);\n-        }\n-        throw new UnsupportedOperationException(\"Restore not supported for \" + anyTO.getClass().getName());\n-    }\n-\n-    private static SortParam<String> getSortParam() {\n-        return new SortParam<>(\"event_date\", false);\n-    }\n-\n-    private static AuditElements.Result getQueryableAuditResult() {\n-        return AuditElements.Result.SUCCESS;\n-    }\n-\n-    private static List<String> getQueryableAuditEvents() {\n-        return Arrays.asList(\"create\", \"update\");\n-    }\n-\n     @Override\n-    protected AuditHistoryDirectoryPanel.AuditHistoryProvider dataProvider() {\n+    protected AuditHistoryDirectoryPanel<T>.AuditHistoryProvider dataProvider() {\n         return new AuditHistoryProvider(rows);\n     }\n \n@@ -164,20 +106,19 @@ protected String paginatorRowsKey() {\n \n     @Override\n     protected List<IColumn<AuditEntryTO, String>> getColumns() {\n-        final List<IColumn<AuditEntryTO, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<>(\n-                new StringResourceModel(\"who\", this), \"who\"));\n-        columns.add(new DatePropertyColumn<>(\n-                new StringResourceModel(\"date\", this), null, \"date\"));\n+        List<IColumn<AuditEntryTO, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<>(new StringResourceModel(\"who\", this), \"who\"));\n+        columns.add(new DatePropertyColumn<>(new StringResourceModel(\"date\", this), null, \"date\"));\n         return columns;\n     }\n \n     @Override\n-    protected void resultTableCustomChanges(\n-            final AjaxDataTablePanel.Builder<AuditEntryTO, String> resultTableBuilder) {\n-        resultTableBuilder.setMultiLevelPanel(baseModal, multiLevelPanelRef);\n+    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<AuditEntryTO, String> resultTableBuilder) {\n+        resultTableBuilder.setMultiLevelPanel(baseModal, mlp);\n     }\n \n+    protected abstract void restore(String json, AjaxRequestTarget target);\n+\n     @Override\n     protected ActionsPanel<AuditEntryTO> getActions(final IModel<AuditEntryTO> model) {\n         final ActionsPanel<AuditEntryTO> panel = super.getActions(model);\n@@ -189,90 +130,34 @@ protected ActionsPanel<AuditEntryTO> getActions(final IModel<AuditEntryTO> model\n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuditEntryTO modelObject) {\n                 AuditHistoryDirectoryPanel.this.getTogglePanel().close(target);\n-                viewAuditHistory(modelObject, target);\n-                target.add(modal);\n-            }\n-        }, ActionLink.ActionType.VIEW, IdRepoEntitlement.AUDIT_READ);\n \n-        final String auditRestoreEntitlement;\n-        switch (this.anyTypeKind) {\n-            case USER:\n-                auditRestoreEntitlement = IdRepoEntitlement.USER_UPDATE;\n-                break;\n-            case GROUP:\n-                auditRestoreEntitlement = IdRepoEntitlement.GROUP_UPDATE;\n-                break;\n-            default:\n-                auditRestoreEntitlement = IdRepoEntitlement.ANYTYPE_UPDATE;\n-                break;\n-        }\n+                mlp.next(\n+                        new StringResourceModel(\"audit.diff.view\", AuditHistoryDirectoryPanel.this).getObject(),\n+                        new AuditHistoryDetails<T>(\n+                                mlp,\n+                                modelObject,\n+                                entity,\n+                                auditRestoreEntitlement,\n+                                pageRef) {\n \n-        panel.add(new ActionLink<AuditEntryTO>() {\n+                    private static final long serialVersionUID = -5311898419151367494L;\n \n-            private static final long serialVersionUID = -6745431735457245600L;\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        AuditHistoryDirectoryPanel.this.restore(json, target);\n+                    }\n+                }, target);\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AuditEntryTO modelObject) {\n-                try {\n-                    AuditHistoryDirectoryPanel.this.getTogglePanel().close(target);\n-\n-                    String json = modelObject.getBefore() == null\n-                            ? MAPPER.readTree(modelObject.getOutput()).get(\"entity\").toPrettyString()\n-                            : modelObject.getBefore();\n-                    ProvisioningResult<? extends AnyTO> result = restore(json, anyTO);\n-                    anyTO.setLastChangeDate(new Date(Long.parseLong(result.getEntity().getETagValue())));\n-\n-                    target.add(container);\n-                } catch (Exception e) {\n-                    LOG.error(\"While restoring {}\", anyTO.getClass().getName(), e);\n-                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                            ? e.getClass().getName() : e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                target.add(modal);\n             }\n-        }, ActionLink.ActionType.RESTORE, auditRestoreEntitlement);\n+        }, ActionLink.ActionType.VIEW, IdRepoEntitlement.AUDIT_READ);\n \n         return panel;\n     }\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBatches() {\n-        return Collections.emptyList();\n-    }\n-\n-    private void viewAuditHistory(final AuditEntryTO auditEntryBean, final AjaxRequestTarget target) {\n-        List<AuditEntryTO> search = AuditHistoryRestClient.search(anyTO.getKey(),\n-                0,\n-                TOTAL_AUDIT_HISTORY_COMPARISONS,\n-                getSortParam(),\n-                getQueryableAuditEvents(),\n-                getQueryableAuditResult());\n-\n-        multiLevelPanelRef.next(\n-                new StringResourceModel(\"audit.diff.view\", this).getObject(),\n-                new HistoryAuditDetails(modal, auditEntryBean,\n-                        getPage().getPageReference(), toAuditEntryTOs(search), anyTO), target);\n-    }\n-\n-    private List<AuditEntryTO> toAuditEntryTOs(final List<AuditEntryTO> search) {\n-        return search\n-                .stream()\n-                .map(entry -> {\n-                    AuditEntryTO bean = new AuditEntryTO();\n-                    bean.setKey(anyTO.getKey());\n-                    bean.setBefore(entry.getBefore());\n-                    bean.setDate(entry.getDate());\n-                    bean.setEvent(entry.getEvent());\n-                    bean.getInputs().addAll(entry.getInputs());\n-                    bean.setLoggerName(entry.getLoggerName());\n-                    bean.setOutput(entry.getOutput());\n-                    bean.setResult(entry.getResult());\n-                    bean.setSubCategory(entry.getSubCategory());\n-                    bean.setThrowable(entry.getThrowable());\n-                    bean.setWho(entry.getWho());\n-                    return bean;\n-                })\n-                .collect(Collectors.toList());\n+        return List.of();\n     }\n \n     protected class AuditHistoryProvider extends DirectoryDataProvider<AuditEntryTO> {\n@@ -281,31 +166,32 @@ protected class AuditHistoryProvider extends DirectoryDataProvider<AuditEntryTO>\n \n         AuditHistoryProvider(final int paginatorRows) {\n             super(paginatorRows);\n+            setSort(\"date\", SortOrder.DESCENDING);\n         }\n \n         @Override\n-        public Iterator<? extends AuditEntryTO> iterator(final long first, final long count) {\n-            return getAuditEntryBeans(first, count).iterator();\n+        public long size() {\n+            return restClient.count(entity.getKey(), type, category, EVENTS, AuditElements.Result.SUCCESS);\n         }\n \n         @Override\n-        public long size() {\n-            return AuditHistoryRestClient.count(anyTO.getKey(), getQueryableAuditEvents(), getQueryableAuditResult());\n+        public Iterator<AuditEntryTO> iterator(final long first, final long count) {\n+            int page = ((int) first / paginatorRows);\n+            return restClient.search(\n+                    entity.getKey(),\n+                    (page < 0 ? 0 : page) + 1,\n+                    paginatorRows,\n+                    type,\n+                    category,\n+                    EVENTS,\n+                    AuditElements.Result.SUCCESS,\n+                    REST_SORT).\n+                    iterator();\n         }\n \n         @Override\n         public IModel<AuditEntryTO> model(final AuditEntryTO auditEntryBean) {\n             return new CompoundPropertyModel<>(auditEntryBean);\n         }\n-\n-        private List<AuditEntryTO> getAuditEntryBeans(final long first, final long count) {\n-            int page = (int) first / paginatorRows;\n-            return AuditHistoryRestClient.search(anyTO.getKey(),\n-                    Math.max(page, 0) + 1,\n-                    Long.valueOf(count).intValue(),\n-                    getSortParam(),\n-                    getQueryableAuditEvents(),\n-                    getQueryableAuditResult());\n-        }\n     }\n }"},{"sha":"5217b0940d49f2f241f2b96785f7ca22fa4ebe2c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryModal.java","status":"modified","additions":26,"deletions":16,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -21,35 +21,45 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n-import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.panel.Panel;\n \n-public class AuditHistoryModal<T extends AnyTO> extends Panel implements ModalPanel {\n+public abstract class AuditHistoryModal<T extends EntityTO> extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = 1066124171682570080L;\n \n-    protected final AuditHistoryDirectoryPanel directoryPanel;\n-\n     public AuditHistoryModal(\n             final BaseModal<?> baseModal,\n-            final PageReference pageReference,\n-            final T entity) {\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n+            final T entity,\n+            final String auditRestoreEntitlement,\n+            final PageReference pageRef) {\n \n         super(BaseModal.CONTENT_ID);\n \n-        final MultilevelPanel mlp = new MultilevelPanel(\"history\");\n+        MultilevelPanel mlp = new MultilevelPanel(\"history\");\n         mlp.setOutputMarkupId(true);\n-        this.directoryPanel = getDirectoryPanel(mlp, baseModal, pageReference, entity);\n-        add(mlp.setFirstLevel(this.directoryPanel));\n-    }\n+        add(mlp.setFirstLevel(new AuditHistoryDirectoryPanel<T>(\n+                baseModal,\n+                mlp,\n+                type,\n+                category,\n+                entity,\n+                auditRestoreEntitlement,\n+                pageRef) {\n \n-    protected AuditHistoryDirectoryPanel getDirectoryPanel(\n-            final MultilevelPanel mlp,\n-            final BaseModal<?> baseModal,\n-            final PageReference pageReference,\n-            final T entity) {\n+            private static final long serialVersionUID = 1952220682903768286L;\n \n-        return new AuditHistoryDirectoryPanel(baseModal, mlp, pageReference, entity);\n+            @Override\n+            protected void restore(final String json, final AjaxRequestTarget target) {\n+                AuditHistoryModal.this.restore(json, target);\n+            }\n+        }));\n     }\n+\n+    protected abstract void restore(String json, AjaxRequestTarget target);\n }"},{"sha":"ee1d4b23d6d95ed3bfcbc65fd978c6fc0159c2d4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/HistoryAuditDetails.java","status":"removed","additions":0,"deletions":232,"changes":232,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,232 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.audit;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.util.ArrayList;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.stream.Collectors;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.JsonDiffPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.AuditEntryTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class HistoryAuditDetails extends MultilevelPanel.SecondLevel {\n-\n-    private static final String KEY_CURRENT = \"current\";\n-\n-    private static final long serialVersionUID = -7400543686272100483L;\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n-    private final AuditEntryTO selected;\n-\n-    private final List<AuditEntryTO> availableTOs;\n-\n-    private AbstractModalPanel<String> jsonPanel;\n-\n-    private final AnyTO currentTO;\n-\n-    public HistoryAuditDetails(\n-            final BaseModal<?> baseModal,\n-            final AuditEntryTO selected,\n-            final PageReference pageRef,\n-            final List<AuditEntryTO> availableTOs,\n-            final AnyTO currentTO) {\n-\n-        super();\n-        this.availableTOs = availableTOs.stream().\n-                filter(object -> !selected.equals(object) && selected.getBefore() != null).\n-                collect(Collectors.toList());\n-        this.selected = selected;\n-        this.currentTO = currentTO;\n-\n-        addCurrentInstanceConf();\n-        Form<?> form = initDropdownDiffConfForm();\n-        add(form);\n-        form.setVisible(!this.availableTOs.isEmpty());\n-\n-        showConfigurationSinglePanel();\n-    }\n-\n-    private void showConfigurationSinglePanel() {\n-        Pair<String, String> info = getJSONInfo(selected);\n-\n-        jsonPanel = new JsonEditorPanel(null, new PropertyModel<>(info, \"right\"), true, null) {\n-\n-            private static final long serialVersionUID = -8927036362466990179L;\n-\n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target) {\n-                modal.close(target);\n-            }\n-        };\n-        jsonPanel.setOutputMarkupId(true);\n-\n-        addOrReplace(jsonPanel);\n-    }\n-\n-    private void showConfigurationDiffPanel(final List<AuditEntryTO> entries) {\n-        List<Pair<String, String>> infos = new ArrayList<>();\n-        entries.forEach(entry -> infos.add(getJSONInfo(entry)));\n-\n-        jsonPanel = new JsonDiffPanel(null, new PropertyModel<>(infos.get(0), \"value\"),\n-                new PropertyModel<>(infos.get(1), \"value\"), null) {\n-\n-            private static final long serialVersionUID = -8927036362466990179L;\n-\n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target) {\n-                modal.close(target);\n-            }\n-        };\n-\n-        replace(jsonPanel);\n-    }\n-\n-    private String getSanitizedTOAsJSON(final AnyTO anyTO) throws Exception {\n-        if (anyTO instanceof UserTO) {\n-            UserTO userTO = (UserTO) anyTO;\n-            userTO.setPassword(null);\n-            userTO.setSecurityAnswer(null);\n-            return MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(userTO);\n-        }\n-        return MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(anyTO);\n-    }\n-\n-    private Pair<String, String> getJSONInfo(final AuditEntryTO auditEntryBean) {\n-        try {\n-            String content = auditEntryBean.getBefore() == null\n-                    ? MAPPER.readTree(auditEntryBean.getOutput()).get(\"entity\").toPrettyString()\n-                    : auditEntryBean.getBefore();\n-\n-            AnyTO anyTO = MAPPER.readValue(content, currentTO.getClass());\n-            String json = getSanitizedTOAsJSON(anyTO);\n-            return Pair.of(auditEntryBean.getKey(), json);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    private static <T extends AuditEntryTO> Map<String, String> getDropdownNamesMap(final List<T> entries) {\n-        Map<String, String> map = new LinkedHashMap<>();\n-        entries.forEach(audit -> {\n-            String value = audit.getWho() + \" - \" + SyncopeConsoleSession.get().getDateFormat().format(audit.getDate());\n-            if (audit.getKey().equalsIgnoreCase(KEY_CURRENT)) {\n-                value += \" - \" + audit.getKey();\n-            }\n-            map.put(audit.getKey(), value);\n-        });\n-        return map;\n-    }\n-\n-    private Form<?> initDropdownDiffConfForm() {\n-        final Form<AuditEntryTO> form = new Form<>(\"form\");\n-        form.setModel(new CompoundPropertyModel<>(selected));\n-        form.setOutputMarkupId(true);\n-\n-        Map<String, String> namesMap = getDropdownNamesMap(availableTOs);\n-        List<String> keys = new ArrayList<>(namesMap.keySet());\n-\n-        final AjaxDropDownChoicePanel<String> dropdownElem = new AjaxDropDownChoicePanel<>(\n-                \"compareDropdown\",\n-                getString(\"compare\"),\n-                new PropertyModel<>(selected, Constants.KEY_FIELD_NAME),\n-                false);\n-        dropdownElem.setChoices(keys);\n-        dropdownElem.setChoiceRenderer(new IChoiceRenderer<String>() {\n-\n-            private static final long serialVersionUID = -6265603675261014912L;\n-\n-            @Override\n-            public Object getDisplayValue(final String value) {\n-                return namesMap.get(value) == null ? value : namesMap.get(value);\n-            }\n-\n-            @Override\n-            public String getIdValue(final String value, final int i) {\n-                return value;\n-            }\n-\n-            @Override\n-            public String getObject(\n-                    final String id, final IModel<? extends List<? extends String>> choices) {\n-                return id;\n-            }\n-        });\n-        dropdownElem.setNullValid(false);\n-        dropdownElem.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                List<AuditEntryTO> elemsToCompare = new ArrayList<>();\n-                elemsToCompare.add(selected);\n-\n-                final String selectedKey = dropdownElem.getModelObject();\n-                if (selectedKey != null) {\n-                    if (!selectedKey.isEmpty()) {\n-                        AuditEntryTO confToCompare = availableTOs.stream().\n-                                filter(object -> object.getKey().equals(selectedKey)).findAny().orElse(null);\n-                        elemsToCompare.add(confToCompare);\n-                        showConfigurationDiffPanel(elemsToCompare);\n-                    } else {\n-                        showConfigurationSinglePanel();\n-                    }\n-                }\n-                target.add(jsonPanel);\n-            }\n-        });\n-        form.add(dropdownElem);\n-\n-        return form;\n-    }\n-\n-    private void addCurrentInstanceConf() {\n-        try {\n-            AuditEntryTO entryBean = new AuditEntryTO();\n-            entryBean.setKey(KEY_CURRENT);\n-            entryBean.setWho(currentTO.getCreator());\n-            entryBean.setDate(currentTO.getCreationDate());\n-            entryBean.setBefore(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(currentTO));\n-            availableTOs.add(entryBean);\n-        } catch (final Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-}"},{"sha":"3324a17b5506d4d061fc28963f0758338508769d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":56,"deletions":30,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -37,17 +37,20 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.request.AnyObjectUR;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n@@ -115,24 +118,6 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), AnyEntitlement.UPDATE.getFor(type))).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<AnyObjectTO>() {\n-\n-            private static final long serialVersionUID = -7978723352517770645L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n-                clone.setKey(null);\n-                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n-            }\n-\n-            @Override\n-            protected boolean statusCondition(final AnyObjectTO modelObject) {\n-                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n-            }\n-        }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).setRealm(realm);\n-\n         if (wizardInModal) {\n             SyncopeWebApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n                     type,\n@@ -142,8 +127,7 @@ protected boolean statusCondition(final AnyObjectTO modelObject) {\n                     getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject()))),\n                     pageRef).forEach(panel::add);\n \n-            panel.add(\n-                    new ActionLink<AnyObjectTO>() {\n+            panel.add(new ActionLink<AnyObjectTO>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -178,22 +162,64 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())));\n-                altDefaultModal.setFormModel(formModel);\n-\n-                target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                model.setObject(restClient.read(model.getObject().getKey()));\n+                target.add(altDefaultModal.setContent(new AuditHistoryModal<AnyObjectTO>(\n                         altDefaultModal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject())));\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"AnyObjectLogic\",\n+                        model.getObject(),\n+                        AnyEntitlement.UPDATE.getFor(type),\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -7440902560249531201L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        AnyObjectTO original = model.getObject();\n+                        try {\n+                            AnyObjectTO updated = MAPPER.readValue(json, AnyObjectTO.class);\n+                            AnyObjectUR updateReq = AnyOperations.diff(updated, original, false);\n+                            ProvisioningResult<AnyObjectTO> result =\n+                                    restClient.update(original.getETagValue(), updateReq);\n+                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring any object {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n \n                 altDefaultModal.header(new StringResourceModel(\"auditHistory.title\", model));\n \n                 altDefaultModal.show(true);\n             }\n-        }, ActionType.VIEW_AUDIT_HISTORY, IdRepoEntitlement.AUDIT_LIST).\n+        }, ActionType.VIEW_AUDIT_HISTORY,\n+                String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), IdRepoEntitlement.AUDIT_LIST)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n+        panel.add(new ActionLink<AnyObjectTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final AnyObjectTO modelObject) {\n+                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n+        }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).setRealm(realm);\n+\n         panel.add(new ActionLink<AnyObjectTO>() {\n \n             private static final long serialVersionUID = -7978723352517770646L;\n@@ -205,7 +231,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n-                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    LOG.error(\"While deleting any object {}\", model.getObject().getKey(), e);\n                     SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                             ? e.getClass().getName() : e.getMessage());\n                 }"},{"sha":"8e2ce8e9f63594583b01f39c9fc97fb1aa9519e5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":109,"deletions":101,"changes":210,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.ui.commons.panels.LabelPanel;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.layout.AnyLayout;\n@@ -33,10 +31,11 @@\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.panels.LabelPanel;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n+import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -69,6 +68,8 @@ public class AnyPanel extends Panel implements ModalPanel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AnyPanel.class);\n \n+    protected static final String DIRECTORY_PANEL_ID = \"searchResult\";\n+\n     @FunctionalInterface\n     public interface DirectoryPanelSupplier {\n \n@@ -80,6 +81,91 @@ Panel supply(\n                 PageReference pageRef);\n     }\n \n+    protected static DirectoryPanelSupplier DEFAULT_DIRECTORYPANEL_SUPPLIER =\n+            (id, anyTypeTO, realmTO, anyLayout, pageRef) -> {\n+\n+                final Panel panel;\n+                String fiql;\n+\n+                final String realm;\n+                final String dynRealm;\n+                if (realmTO.getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n+                    realm = realmTO.getFullPath();\n+                    dynRealm = null;\n+                } else {\n+                    realm = SyncopeConstants.ROOT_REALM;\n+                    dynRealm = realmTO.getKey();\n+                }\n+\n+                switch (anyTypeTO.getKind()) {\n+                    case USER:\n+                        fiql = dynRealm == null\n+                                ? SyncopeClient.getUserSearchConditionBuilder().\n+                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n+                                : SyncopeClient.getUserSearchConditionBuilder().\n+                                        inDynRealms(dynRealm).query();\n+\n+                        UserTO userTO = new UserTO();\n+                        userTO.setRealm(realmTO.getFullPath());\n+                        panel = new UserDirectoryPanel.Builder(\n+                                AnyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                                anyTypeTO.getKey(),\n+                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n+                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n+                                AnyLayoutUtils.newLayoutInfo(\n+                                        userTO, anyTypeTO.getClasses(), anyLayout.getUser(), pageRef)).\n+                                build(id);\n+                        MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n+                                IdRepoEntitlement.USER_SEARCH);\n+                        break;\n+\n+                    case GROUP:\n+                        fiql = dynRealm == null\n+                                ? SyncopeClient.getGroupSearchConditionBuilder().\n+                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n+                                : SyncopeClient.getGroupSearchConditionBuilder().inDynRealms(dynRealm).query();\n+\n+                        GroupTO groupTO = new GroupTO();\n+                        groupTO.setRealm(realmTO.getFullPath());\n+                        panel = new GroupDirectoryPanel.Builder(\n+                                AnyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                                anyTypeTO.getKey(),\n+                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n+                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n+                                AnyLayoutUtils.newLayoutInfo(\n+                                        groupTO, anyTypeTO.getClasses(), anyLayout.getGroup(), pageRef)).\n+                                build(id);\n+                        // list of group is available to all authenticated users\n+                        break;\n+\n+                    case ANY_OBJECT:\n+                        fiql = dynRealm == null\n+                                ? SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).\n+                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n+                                : SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).\n+                                        inDynRealms(dynRealm).query();\n+\n+                        AnyObjectTO anyObjectTO = new AnyObjectTO();\n+                        anyObjectTO.setRealm(realmTO.getFullPath());\n+                        anyObjectTO.setType(anyTypeTO.getKey());\n+                        panel = new AnyObjectDirectoryPanel.Builder(\n+                                AnyTypeClassRestClient.list(anyTypeTO.getClasses()),\n+                                anyTypeTO.getKey(),\n+                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n+                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n+                                AnyLayoutUtils.newLayoutInfo(anyObjectTO, anyTypeTO.getClasses(),\n+                                        anyLayout.getAnyObjects().get(anyTypeTO.getKey()), pageRef)).\n+                                build(id);\n+                        MetaDataRoleAuthorizationStrategy.authorize(\n+                                panel, WebPage.RENDER, AnyEntitlement.SEARCH.getFor(anyTypeTO.getKey()));\n+                        break;\n+\n+                    default:\n+                        panel = new LabelPanel(id, null);\n+                }\n+                return panel;\n+            };\n+\n     protected final AnyTypeTO anyTypeTO;\n \n     protected final RealmTO realmTO;\n@@ -122,18 +208,17 @@ public AnyPanel(\n         // ------------------------\n         final Model<Integer> model = Model.of(-1);\n         final StringResourceModel searchResult = new StringResourceModel(\"search.result\", this, new Model<>(anyTypeTO));\n-        final Accordion accordion = new Accordion(\"accordionPanel\",\n-                Collections.<ITab>singletonList(new AbstractTab(searchResult) {\n+        final Accordion accordion = new Accordion(\"accordionPanel\", List.of(new AbstractTab(searchResult) {\n \n-                    protected static final long serialVersionUID = 1037272333056449377L;\n+            protected static final long serialVersionUID = 1037272333056449377L;\n \n-                    @Override\n-                    public WebMarkupContainer getPanel(final String panelId) {\n-                        searchPanel = getSearchPanel(panelId);\n-                        return searchPanel;\n-                    }\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                searchPanel = getSearchPanel(panelId);\n+                return searchPanel;\n+            }\n \n-                }), model) {\n+        }), model) {\n \n             protected static final long serialVersionUID = -3056452800492734900L;\n \n@@ -159,11 +244,21 @@ public void onClick(final AjaxRequestTarget target) {\n         accordion.setOutputMarkupId(true);\n         add(accordion.setEnabled(enableSearch).setVisible(enableSearch));\n \n-        directoryPanel = directoryPanelSupplier.supply(\"searchResult\", anyTypeTO, realmTO, anyLayout, pageRef);\n+        directoryPanel = createDirectoryPanel(anyTypeTO, realmTO, anyLayout, enableSearch, directoryPanelSupplier);\n         add(directoryPanel);\n         // ------------------------\n     }\n \n+    protected Panel createDirectoryPanel(\n+            final AnyTypeTO anyTypeTO,\n+            final RealmTO realmTO,\n+            final AnyLayout anyLayout,\n+            final boolean enableSearch,\n+            final DirectoryPanelSupplier directoryPanelSupplier) {\n+\n+        return directoryPanelSupplier.supply(DIRECTORY_PANEL_ID, anyTypeTO, realmTO, anyLayout, pageRef);\n+    }\n+\n     @Override\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n@@ -248,94 +343,7 @@ protected AbstractSearchPanel getSearchPanel(final String id) {\n             default:\n                 panel = null;\n         }\n+\n         return panel;\n     }\n-\n-    protected static DirectoryPanelSupplier DEFAULT_DIRECTORYPANEL_SUPPLIER =\n-            (id, anyType, realmTO, anyLayout, pageRef) -> {\n-\n-                AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n-\n-                final Panel panel;\n-                String fiql;\n-\n-                final String realm;\n-                final String dynRealm;\n-                if (realmTO.getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n-                    realm = realmTO.getFullPath();\n-                    dynRealm = null;\n-                } else {\n-                    realm = SyncopeConstants.ROOT_REALM;\n-                    dynRealm = realmTO.getKey();\n-                }\n-\n-                switch (anyType.getKind()) {\n-                    case USER:\n-                        fiql = dynRealm == null\n-                                ? SyncopeClient.getUserSearchConditionBuilder().\n-                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n-                                : SyncopeClient.getUserSearchConditionBuilder().\n-                                        inDynRealms(dynRealm).query();\n-\n-                        UserTO userTO = new UserTO();\n-                        userTO.setRealm(realmTO.getFullPath());\n-                        panel = new UserDirectoryPanel.Builder(\n-                                anyTypeClassRestClient.list(anyType.getClasses()),\n-                                anyType.getKey(),\n-                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n-                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n-                                AnyLayoutUtils.newLayoutInfo(\n-                                        userTO, anyType.getClasses(), anyLayout.getUser(), pageRef)).\n-                                build(id);\n-                        MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n-                                IdRepoEntitlement.USER_SEARCH);\n-                        break;\n-\n-                    case GROUP:\n-                        fiql = dynRealm == null\n-                                ? SyncopeClient.getGroupSearchConditionBuilder().\n-                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n-                                : SyncopeClient.getGroupSearchConditionBuilder().inDynRealms(dynRealm).query();\n-\n-                        GroupTO groupTO = new GroupTO();\n-                        groupTO.setRealm(realmTO.getFullPath());\n-                        panel = new GroupDirectoryPanel.Builder(\n-                                anyTypeClassRestClient.list(anyType.getClasses()),\n-                                anyType.getKey(),\n-                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n-                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n-                                AnyLayoutUtils.newLayoutInfo(\n-                                        groupTO, anyType.getClasses(), anyLayout.getGroup(), pageRef)).\n-                                build(id);\n-                        // list of group is available to all authenticated users\n-                        break;\n-\n-                    case ANY_OBJECT:\n-                        fiql = dynRealm == null\n-                                ? SyncopeClient.getAnyObjectSearchConditionBuilder(anyType.getKey()).\n-                                        is(Constants.KEY_FIELD_NAME).notNullValue().query()\n-                                : SyncopeClient.getAnyObjectSearchConditionBuilder(anyType.getKey()).\n-                                        inDynRealms(dynRealm).query();\n-\n-                        AnyObjectTO anyObjectTO = new AnyObjectTO();\n-                        anyObjectTO.setRealm(realmTO.getFullPath());\n-                        anyObjectTO.setType(anyType.getKey());\n-                        panel = new AnyObjectDirectoryPanel.Builder(\n-                                anyTypeClassRestClient.list(anyType.getClasses()),\n-                                anyType.getKey(),\n-                                pageRef).setRealm(realm).setDynRealm(dynRealm).setFiltered(true).\n-                                setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(\n-                                AnyLayoutUtils.newLayoutInfo(anyObjectTO, anyType.getClasses(),\n-                                        anyLayout.getAnyObjects().get(anyType.getKey()), pageRef)).\n-                                build(id);\n-                        MetaDataRoleAuthorizationStrategy.authorize(\n-                                panel, WebPage.RENDER, AnyEntitlement.SEARCH.getFor(anyType.getKey()));\n-                        break;\n-\n-                    default:\n-                        panel = new LabelPanel(id, null);\n-                }\n-                return panel;\n-            };\n-\n }"},{"sha":"ad4c7e2c5aa2760db0dd0466ece90a93b4d73ec6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,12 +18,12 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.syncope.client.console.PreferenceManager;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n@@ -59,6 +59,8 @@\n \n     protected static final Logger LOG = LoggerFactory.getLogger(DirectoryPanel.class);\n \n+    protected static final ObjectMapper MAPPER = new ObjectMapper();\n+\n     /**\n      * Application preferences.\n      */\n@@ -89,7 +91,7 @@\n     /**\n      * Result table.\n      */\n-    private AjaxDataTablePanel<T, String> resultTable;\n+    protected AjaxDataTablePanel<T, String> resultTable;\n \n     /**\n      * Data provider used to search for entities."},{"sha":"2c9a74be883e95ba5428ed62ddf96f08cf3c32a7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":54,"deletions":26,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -47,14 +47,18 @@\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.request.GroupUR;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.ProvisionAction;\n import org.apache.wicket.PageReference;\n@@ -63,7 +67,6 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n@@ -219,24 +222,6 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.GROUP_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<GroupTO>() {\n-\n-            private static final long serialVersionUID = 6242834621660352855L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                GroupTO clone = SerializationUtils.clone(model.getObject());\n-                clone.setKey(null);\n-                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n-            }\n-\n-            @Override\n-            protected boolean statusCondition(final GroupTO modelObject) {\n-                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n-            }\n-        }, ActionType.CLONE, IdRepoEntitlement.GROUP_CREATE).setRealm(realm);\n-\n         panel.add(new ActionLink<GroupTO>() {\n \n             private static final long serialVersionUID = 6242834621660352855L;\n@@ -350,21 +335,64 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                IModel<GroupWrapper> formModel = new CompoundPropertyModel<>(\n-                        new GroupWrapper(new GroupRestClient().read(model.getObject().getKey())));\n-                target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                model.setObject(restClient.read(model.getObject().getKey()));\n+                target.add(altDefaultModal.setContent(new AuditHistoryModal<GroupTO>(\n                         altDefaultModal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject())));\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"GroupLogic\",\n+                        model.getObject(),\n+                        IdRepoEntitlement.GROUP_UPDATE,\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = -5819724478921691835L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        GroupTO original = model.getObject();\n+                        try {\n+                            GroupTO updated = MAPPER.readValue(json, GroupTO.class);\n+                            GroupUR updateReq = AnyOperations.diff(updated, original, false);\n+                            ProvisioningResult<GroupTO> result = restClient.update(original.getETagValue(), updateReq);\n+                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring group {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n \n                 altDefaultModal.header(new Model<>(\n                         getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n \n                 altDefaultModal.show(true);\n             }\n-        }, ActionType.VIEW_AUDIT_HISTORY, IdRepoEntitlement.AUDIT_LIST).\n+        }, ActionType.VIEW_AUDIT_HISTORY,\n+                String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.AUDIT_LIST)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n+        panel.add(new ActionLink<GroupTO>() {\n+\n+            private static final long serialVersionUID = 6242834621660352855L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                GroupTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final GroupTO modelObject) {\n+                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n+        }, ActionType.CLONE, IdRepoEntitlement.GROUP_CREATE).setRealm(realm);\n+\n         panel.add(new ActionLink<GroupTO>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n@@ -376,7 +404,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n-                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    LOG.error(\"While deleting group {}\", model.getObject().getKey(), e);\n                     SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n                             ? e.getClass().getName() : e.getMessage());\n                 }"},{"sha":"31b543649a30c00b1ce3220c4dc2cc6b495b2225","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":63,"deletions":26,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -41,10 +41,14 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.PageReference;\n@@ -145,33 +149,14 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<UserTO>() {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                UserTO clone = SerializationUtils.clone(model.getObject());\n-                clone.setKey(null);\n-                clone.setUsername(model.getObject().getUsername() + \"_clone\");\n-                send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n-            }\n-\n-            @Override\n-            protected boolean statusCondition(final UserTO modelObject) {\n-                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n-            }\n-        }, ActionType.CLONE, IdRepoEntitlement.USER_CREATE).setRealm(realm);\n-\n         panel.add(new ActionLink<UserTO>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 try {\n-                    UserRestClient.class.cast(restClient).mustChangePassword(\n+                    restClient.mustChangePassword(\n                             model.getObject().getETagValue(),\n                             !model.getObject().isMustChangePassword(),\n                             model.getObject().getKey());\n@@ -280,21 +265,73 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                IModel<UserWrapper> formModel = new CompoundPropertyModel<>(\n-                        new UserWrapper(new UserRestClient().read(model.getObject().getKey())));\n-                target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                model.setObject(restClient.read(model.getObject().getKey()));\n+                target.add(altDefaultModal.setContent(new AuditHistoryModal<UserTO>(\n                         altDefaultModal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject())));\n+                        AuditElements.EventCategoryType.LOGIC,\n+                        \"UserLogic\",\n+                        model.getObject(),\n+                        IdRepoEntitlement.USER_UPDATE,\n+                        pageRef) {\n+\n+                    private static final long serialVersionUID = 959378158400669867L;\n+\n+                    @Override\n+                    protected void restore(final String json, final AjaxRequestTarget target) {\n+                        // The original audit record masks the password and the security\n+                        // answer; so we cannot use the audit record to resurrect the entry based on mask data.\n+                        //\n+                        // The method behavior below will reset the audit record such that the current security\n+                        // answer and the password for the object are always maintained, and such properties for the\n+                        // user cannot be restored using audit records.\n+                        UserTO original = model.getObject();\n+                        try {\n+                            UserTO updated = MAPPER.readValue(json, UserTO.class);\n+                            UserUR updateReq = AnyOperations.diff(updated, original, false);\n+                            updateReq.setPassword(null);\n+                            updateReq.setSecurityAnswer(null);\n+                            ProvisioningResult<UserTO> result = restClient.update(original.getETagValue(), updateReq);\n+                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While restoring user {}\", model.getObject().getKey(), e);\n+                            SyncopeConsoleSession.get().error(\n+                                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }));\n \n                 altDefaultModal.header(new Model<>(\n                         getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n \n                 altDefaultModal.show(true);\n             }\n-        }, ActionType.VIEW_AUDIT_HISTORY, IdRepoEntitlement.AUDIT_LIST).\n+        }, ActionType.VIEW_AUDIT_HISTORY,\n+                String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.AUDIT_LIST)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n+        panel.add(new ActionLink<UserTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                UserTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                clone.setUsername(model.getObject().getUsername() + \"_clone\");\n+                send(UserDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final UserTO modelObject) {\n+                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n+        }, ActionType.CLONE, IdRepoEntitlement.USER_CREATE).setRealm(realm);\n+\n         panel.add(new ActionLink<UserTO>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;"},{"sha":"b5be0bd9df114939785101efb4bb9b8b1ca22d16","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.policies;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -77,8 +76,6 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n     private final BaseModal<T> baseModal;\n \n     private final PolicyType type;"},{"sha":"dda0436153a09d754778433c96cb14541c1c19a0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleWizardBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n@@ -85,12 +86,12 @@ protected Serializable onApplyInternal(final PolicyRuleWrapper modelObject) {\n \n         if (modelObject.getImplementationEngine() == ImplementationEngine.JAVA) {\n             ImplementationTO rule = ImplementationRestClient.read(implementationType,\n-                modelObject.getImplementationKey());\n+                    modelObject.getImplementationKey());\n             try {\n                 rule.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n                 ImplementationRestClient.update(rule);\n             } catch (Exception e) {\n-                throw new RuntimeException(e);\n+                throw new WicketRuntimeException(e);\n             }\n         }\n "},{"sha":"f806afbe8cbd299f248fed09eee50e643ad177ab","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.reports;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -74,8 +73,6 @@ public class ReportletDirectoryPanel extends DirectoryPanel<\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n     private final BaseModal<ReportTO> baseModal;\n \n     private final String report;"},{"sha":"5dd04fdf57932e68c001f6361c55b5f4c664276c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n@@ -66,7 +67,7 @@ protected Serializable onApplyInternal(final ReportletWrapper modelObject) {\n                 reportlet.setBody(MAPPER.writeValueAsString(modelObject.getConf()));\n                 ImplementationRestClient.update(reportlet);\n             } catch (Exception e) {\n-                throw new RuntimeException(e);\n+                throw new WicketRuntimeException(e);\n             }\n         }\n "},{"sha":"8666aa12efdc6b62a519a921cdf7551487ed49b6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AuditHistoryRestClient.java","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditHistoryRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditHistoryRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditHistoryRestClient.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -29,26 +29,41 @@ public class AuditHistoryRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -381814125643246243L;\n \n-    public static List<AuditEntryTO> search(\n+    public List<AuditEntryTO> search(\n             final String key,\n             final int page,\n             final int size,\n-            final SortParam<String> sort,\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n             final List<String> events,\n-            final AuditElements.Result result) {\n+            final AuditElements.Result result,\n+            final SortParam<String> sort) {\n \n         AuditQuery query = new AuditQuery.Builder(key).\n-                page(page).\n                 size(size).\n+                page(page).\n+                type(type).\n+                category(category).\n                 events(events).\n                 result(result).\n                 orderBy(toOrderBy(sort)).\n                 build();\n+\n         return getService(AuditService.class).search(query).getResult();\n     }\n \n-    public static int count(final String key, final List<String> events, final AuditElements.Result result) {\n+    public int count(\n+            final String key,\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n+            final List<String> events,\n+            final AuditElements.Result result) {\n+\n         AuditQuery query = new AuditQuery.Builder(key).\n+                page(1).\n+                size(1).\n+                type(type).\n+                category(category).\n                 events(events).\n                 result(result).\n                 build();"},{"sha":"c717aeb9d596431772c5b02bd68050a20e59c70e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -50,9 +50,15 @@\n \n     private ActionLinksTogglePanel<T> togglePanel;\n \n-    public AjaxFallbackDataTable(final String id, final List<? extends IColumn<T, S>> columns,\n-            final ISortableDataProvider<T, S> dataProvider, final int rowsPerPage, final WebMarkupContainer container) {\n+    public AjaxFallbackDataTable(\n+            final String id,\n+            final List<? extends IColumn<T, S>> columns,\n+            final ISortableDataProvider<T, S> dataProvider,\n+            final int rowsPerPage,\n+            final WebMarkupContainer container) {\n+\n         super(id, columns, dataProvider, rowsPerPage);\n+\n         setOutputMarkupId(true);\n         setVersioned(false);\n \n@@ -67,8 +73,6 @@ protected WebMarkupContainer newSortableHeader(\n                     final String borderId, final S property, final ISortStateLocator<S> locator) {\n                 return new AjaxFallbackOrderByBorder<S>(borderId, property, locator) {\n \n-                    private static final long serialVersionUID = 1L;\n-\n                     @Override\n                     protected void onAjaxClick(final AjaxRequestTarget target) {\n                         if (container != null) {\n@@ -77,7 +81,6 @@ protected void onAjaxClick(final AjaxRequestTarget target) {\n                     }\n                 };\n             }\n-\n         });\n \n         addBottomToolbar(new AjaxFallbackHeadersToolbar<S>(this, dataProvider) {\n@@ -89,8 +92,6 @@ protected WebMarkupContainer newSortableHeader(\n                     final String borderId, final S property, final ISortStateLocator<S> locator) {\n                 return new AjaxFallbackOrderByBorder<S>(borderId, property, locator) {\n \n-                    private static final long serialVersionUID = 1L;\n-\n                     @Override\n                     protected void onAjaxClick(final AjaxRequestTarget target) {\n                         if (container != null) {"},{"sha":"77de5c46267140e8f1d91b3480a64829eb7cc372","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -79,7 +79,6 @@ public enum ActionType {\n         EXPORT_PDF(\"read\"),\n         EXPORT_RTF(\"read\"),\n         EXPORT_XML(\"read\"),\n-        RESTORE(\"import\"),\n         SUSPEND(\"update\"),\n         REACTIVATE(\"update\"),\n         RELOAD(\"import\"),\n@@ -95,9 +94,9 @@ public enum ActionType {\n         RECONCILIATION_PUSH(\"update\"),\n         RECONCILIATION_PULL(\"update\"),\n         MANAGE_RESOURCES(\"update\"),\n+        MANAGE_ACCOUNTS(\"update\"),\n         MANAGE_USERS(\"update\"),\n         MANAGE_GROUPS(\"update\"),\n-        MANAGE_ACCOUNTS(\"update\"),\n         PROPAGATION_TASKS(\"read\"),\n         NOTIFICATION_TASKS(\"read\"),\n         ZOOM_IN(\"zoomin\"),\n@@ -163,3 +162,4 @@ public boolean isIndicatorEnabled() {\n         return true;\n     }\n }\n+"},{"sha":"6b6c06a41fb4553701636f6073e8cd22328c4b23","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -60,6 +60,7 @@ public Action<T> add(\n             final ActionLink<T> link,\n             final ActionLink.ActionType type,\n             final String entitlements) {\n+\n         return add(link, type, entitlements, false);\n     }\n \n@@ -69,7 +70,7 @@ public Action<T> add(\n             final String entitlements,\n             final boolean onConfirm) {\n \n-        final Action<T> action = new Action<>(link, type);\n+        Action<T> action = new Action<>(link, type);\n         action.setEntitlements(entitlements);\n         action.setOnConfirm(onConfirm);\n         actions.add(action);\n@@ -81,8 +82,12 @@ public Action<T> add(final Action<T> action) {\n         return action;\n     }\n \n+    public List<Action<T>> getActions() {\n+        return actions;\n+    }\n+\n     public ActionsPanel<T> clone(final String componentId, final IModel<T> model) {\n-        final ActionsPanel<T> panel = new ActionsPanel<>(componentId, model);\n+        ActionsPanel<T> panel = new ActionsPanel<>(componentId, model);\n         panel.actions.addAll(actions);\n         return panel;\n     }\n@@ -95,10 +100,8 @@ public ActionsPanel<T> clone(final String componentId, final IModel<T> model) {\n      * @return Actions panel.\n      */\n     public ActionsPanel<T> cloneWithLabels(final String componentId, final IModel<T> model) {\n-        final ActionsPanel<T> panel = new ActionsPanel<>(componentId, model);\n-        for (Action<T> action : actions) {\n-            panel.actions.add(action.showLabel());\n-        }\n+        ActionsPanel<T> panel = new ActionsPanel<>(componentId, model);\n+        actions.forEach(action -> panel.actions.add(action.showLabel()));\n         return panel;\n     }\n "},{"sha":"558a76df5af5ad8bb857c09e02f60c2350ab492f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWrapper.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWrapper.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -39,5 +39,4 @@ public AnyObjectWrapper(final AnyObjectTO previousAnyObjectTO, final AnyObjectTO\n     public AnyObjectTO getPreviousAnyObjectTO() {\n         return previousAnyObjectTO;\n     }\n-\n }"},{"sha":"78e44edfffc8589840e7c26f1ec62b8df8256b5f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails.html","status":"renamed","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.html?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -19,9 +19,11 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n \n-    <form wicket:id=\"form\">\n-      <span wicket:id=\"compareDropdown\"></span>\n-    </form>\n+    <div style=\"padding-left: 1%;padding-right: 1%;text-align: center;\">\n+      <div class=\"pull-left\"><strong><span wicket:id=\"current\"/></strong></div>\n+      <a href=\"#\" wicket:id=\"restore\" wicket:message=\"title:restore\"><i class=\"fa fa-history fa-2x\"></i></a>\n+      <div class=\"pull-right\"><strong><span wicket:id=\"previous\"/></strong></div>\n+    </div>\n \n     <div wicket:id=\"content\"></div>\n ","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails.html"},{"sha":"cec89d0704b96b31b8b170cf824f34fb7c3b33b0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-history.view=History view\n-compare=Compare with\n current=Current\n+previous=Previous\n+restore=Restore","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails_ru.properties"},{"sha":"6073f49651ee6efdd35162096a9233021105b18b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_fr_CA.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_fr_CA.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+current=Courant\n+previous=Pr\\u00e9c\\u00e9dent\n+restore=Restaurer"},{"sha":"7af93d885b5b4df2c876bab105418f31b1fc80f5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_it.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+current=Attuale\n+previous=Precedente\n+restore=Ripristina"},{"sha":"cec89d0704b96b31b8b170cf824f34fb7c3b33b0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_ja.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ja.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-history.view=History view\n-compare=Compare with\n current=Current\n+previous=Previous\n+restore=Restore","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails.properties"},{"sha":"cec89d0704b96b31b8b170cf824f34fb7c3b33b0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_pt_BR.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_pt_BR.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-history.view=History view\n-compare=Compare with\n current=Current\n+previous=Previous\n+restore=Restore","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails_pt_BR.properties"},{"sha":"cec89d0704b96b31b8b170cf824f34fb7c3b33b0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryDetails_ru.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails_ru.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -14,6 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-history.view=History view\n-compare=Compare with\n current=Current\n+previous=Previous\n+restore=Restore","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails_ja.properties"},{"sha":"3896fbbe61ba444e5dc3bd7c3840224a96c0f605","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,4 +16,4 @@\n # under the License.\n who=Who\n date=Date\n-audit.diff.view=Configuration\n+audit.diff.view=History view"},{"sha":"c053b7bbfe0db9837f37a7556b348160859c9741","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal_fr_CA.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_fr_CA.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+who=Who\n+date=Date\n+audit.diff.view=Vue historique"},{"sha":"a6f47863a9715712ae5eeff008613c0087bce236","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_it.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,4 +16,4 @@\n # under the License.\n who=Who\n date=Date\n-audit.diff.view=Configuration\n+audit.diff.view=Vista storica"},{"sha":"3896fbbe61ba444e5dc3bd7c3840224a96c0f605","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal_ja.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ja.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,4 +16,4 @@\n # under the License.\n who=Who\n date=Date\n-audit.diff.view=Configuration\n+audit.diff.view=History view"},{"sha":"3896fbbe61ba444e5dc3bd7c3840224a96c0f605","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_pt_BR.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,4 +16,4 @@\n # under the License.\n who=Who\n date=Date\n-audit.diff.view=Configuration\n+audit.diff.view=History view"},{"sha":"3896fbbe61ba444e5dc3bd7c3840224a96c0f605","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/AuditHistoryModal_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryModal_ru.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,4 +16,4 @@\n # under the License.\n who=Who\n date=Date\n-audit.diff.view=Configuration\n+audit.diff.view=History view"},{"sha":"e128bca48e1ab7f636b5708fe3ccdf150b302ec0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/audit/HistoryAuditDetails_it.properties","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FHistoryAuditDetails_it.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,19 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-history.view=Storico vista\n-compare=paragonare con\n-current=presente"},{"sha":"4977063038ef4700b42cb3fd124d739df635ad4b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfDetails_fr_CA.properties","status":"removed","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfDetails_fr_CA.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,23 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Date de cr�ation\n-creator=Cr�� par\n-entityKey=ID local\n-history.view=Afficher historique\n-resource=Ressource\n-compare=Comparer avec\n-current=Actuel"},{"sha":"5a090f63dcc55d04e021ecf245f0fc721f5b120f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/HistoryConfList_fr_CA.properties","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList_fr_CA.properties?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,21 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-creation=Date de cr�ation\n-creator=Cr�� par\n-entityKey=ID local\n-history.diff.view=Configuration\n-resource=Ressource"},{"sha":"b1978298358d9fc2d7fa6c2c6a01f13d369e56bc","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.properties","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -49,7 +49,6 @@ edit.alt=edit icon\n manage_approval.class=fa fa-pencil-square-o\n manage_approval.title=manage\n manage_approval.alt=manage approval icon\n-\n edit_approval.class=glyphicon glyphicon-pencil\n edit_approval.title=edit\n edit_approval.alt=edit approval icon\n@@ -102,10 +101,6 @@ view.class=fa fa-eye\n view.title=view\n view.alt=view icon\n \n-members.class=fa fa-users\n-members.title=members\n-members.alt=members icon\n-\n view_executions.class=fa fa-eye\n view_executions.title=view executions\n view_executions.alt=view executions icon\n@@ -122,6 +117,14 @@ search.class=glyphicon glyphicon-search\n search.title=search\n search.alt=search icon\n \n+view_executions.class=fa fa-eye\n+view_executions.title=executions\n+view_executions.alt=view executions icon\n+\n+view_details.class=fa fa-info-circle\n+view_details.title=details\n+view_details.alt=details icon\n+\n delete.class=glyphicon glyphicon-minus\n delete.title=delete\n delete.alt=delete icon\n@@ -131,8 +134,8 @@ execute.title=execute\n execute.alt=execute icon\n \n password_management.class=fa fa-shield\n-password_management.title=password management\n-password_management.alt=password management icon\n+password_management.title=manage password\n+password_management.alt=manage password icon\n \n request_password_reset.class=fa fa-user-secret\n request_password_reset.title=request password reset\n@@ -182,10 +185,6 @@ export_xml.class=fa fa-file-excel-o\n export_xml.title=export as xml\n export_xml.alt=export as xml icon\n \n-restore.class=fa fa-arrow-circle-down\n-restore.title=restore\n-restore.alt=restore icon\n-\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=suspend\n suspend.alt=suspend icon\n@@ -279,5 +278,5 @@ workflow_modeler.title=workflow modeler\n workflow_modeler.alt=workflow modeler icon\n \n view_audit_history.class=fa fa-history\n-view_audit_history.title=history management\n-view_audit_history.alt=history management icon\n+view_audit_history.title=manage history\n+view_audit_history.alt=manage history icon"},{"sha":"f2a3581809fe09927240f5ffb63f9407935cc321","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_fr_CA.properties","status":"modified","additions":98,"deletions":98,"changes":196,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_fr_CA.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,202 +16,202 @@\n # under the License.\n mapping.class=fa fa-exchange\n mapping.title=configuration\n-mapping.alt=ic�ne configuration\n+mapping.alt=ic\\u00f4ne configuration\n mustchangepassword.class=fa fa-lock\n-mustchangepassword.title=case le mot de passe doit �tre chang�\n-mustchangepassword.alt=case ic�ne pour changement de mot de passe\n+mustchangepassword.title=case le mot de passe doit \\u00eatre chang\\u00e9\n+mustchangepassword.alt=case ic\\u00f4ne pour changement de mot de passe\n set_latest_sync_token.class=fa fa-hourglass-start\n-set_latest_sync_token.title=configurer jeton derni�re sync\n-set_latest_sync_token.alt=ic�ne configurer jeton derni�re sync\n+set_latest_sync_token.title=configurer jeton derni\\u00e8re sync\n+set_latest_sync_token.alt=ic\\u00f4ne configurer jeton derni\\u00e8re sync\n remove_sync_token.class=fa fa-hourglass-o\n remove_sync_token.title=retirer jeton sync\n-remove_sync_token.alt=ic�ne retirer jeton sync\n+remove_sync_token.alt=ic\\u00f4ne retirer jeton sync\n clone.class=fa fa-clone\n clone.title=cloner\n-clone.alt=ic�ne cl�ner\n+clone.alt=ic\\u00f4ne cl\\u00f4ner\n create.class=glyphicon glyphicon-plus\n-create.title=cr�er\n-create.alt=ic�ne cr�er\n+create.title=cr\\u00e9er\n+create.alt=ic\\u00f4ne cr\\u00e9er\n template.class=fa fa-list-alt\n-template.title=mod�le\n-template.alt=ic�ne mod�le\n+template.title=mod\\u00e8le\n+template.alt=ic\\u00f4ne mod\\u00e8le\n edit.class=glyphicon glyphicon-pencil\n edit.title=modifier\n-edit.alt=ic�ne modifier\n+edit.alt=ic\\u00f4ne modifier\n manage_approval.class=fa fa-pencil-square-o\n-manage_approval.title=g�rer\n-manage_approval.alt=ic�ne approbation de gestion\n+manage_approval.title=g\\u00e9rer\n+manage_approval.alt=ic\\u00f4ne approbation de gestion\n edit_approval.class=glyphicon glyphicon-pencil\n edit_approval.title=modifier\n-edit_approval.alt=ic�ne approbation de modification\n+edit_approval.alt=ic\\u00f4ne approbation de modification\n type_extensions.class=fa fa-expand\n type_extensions.title=extensions\n-type_extensions.alt=ic�ne extensions\n+type_extensions.alt=ic\\u00f4ne extensions\n fo_edit.class=fa fa-file-code-o\n fo_edit.title=fo\n-fo_edit.alt=ic�ne fo\n+fo_edit.alt=ic\\u00f4ne fo\n fo_manage_approval.class=fa fa-file-code-o\n fo_manage_approval.title=fo\n-fo_manage_approval.alt=ic�ne fo\n+fo_manage_approval.alt=ic\\u00f4ne fo\n fo_edit_approval.class=fa fa-file-code-o\n fo_edit_approval.title=fo\n-fo_edit_approval.alt=ic�ne fo\n+fo_edit_approval.alt=ic\\u00f4ne fo\n html.class=fa fa-file-code-o\n html.title=html\n-html.alt=ic�ne html\n+html.alt=ic\\u00f4ne html\n text.class=fa fa-file-text-o\n text.title=texte\n-text.alt=ic�ne texte\n+text.alt=ic\\u00f4ne texte\n compose.class=fa fa-puzzle-piece\n compose.title=composer\n-compose.alt=ic�ne composer\n+compose.alt=ic\\u00f4ne composer\n layout_edit.class=fa fa-object-ungroup\n layout_edit.title=configuration\n-layout_edit.alt=ic�ne configuration\n+layout_edit.alt=ic\\u00f4ne configuration\n reset.class=fa fa-shield\n-reset.title=r�initialiser\n-reset.alt=ic�ne r�initialiser\n+reset.title=r\\u00e9initialiser\n+reset.alt=ic\\u00f4ne r\\u00e9initialiser\n enable.class=fa fa-toggle-on\n-enable.title=g�rer statut\n-enable.alt=ic�ne activer\n+enable.title=g\\u00e9rer statut\n+enable.alt=ic\\u00f4ne activer\n not_found.class=fa fa-eye-slash\n-not_found.title=non trouv�\n-not_found.alt=ic�ne non trouv�\n+not_found.title=non trouv\\u00e9\n+not_found.alt=ic\\u00f4ne non trouv\\u00e9\n view.class=fa fa-eye\n view.title=afficher\n-view.alt=ic�ne afficher\n+view.alt=ic\\u00f4ne afficher\n view_executions.class=fa fa-eye\n-view_executions.title=afficher ex�citions\n-view_executions.alt=ic�ne afficher ex�cutions\n+view_executions.title=afficher ex\\u00e9citions\n+view_executions.alt=ic\\u00f4ne afficher ex\\u00e9cutions\n view_details.class=fa fa-info-circle\n-view_details.title=afficher d�tails\n-view_details.alt=ic�ne afficher d�tails\n+view_details.title=afficher d\\u00e9tails\n+view_details.alt=ic\\u00f4ne afficher d\\u00e9tails\n members.class=fa fa-users\n members.title=membres\n-members.alt=ic�ne memnres\n+members.alt=ic\\u00f4ne memnres\n search.class=glyphicon glyphicon-search\n search.title=rechercher\n-search.alt=ic�ne recherche\n+search.alt=ic\\u00f4ne recherche\n view_executions.class=fa fa-eye\n-view_executions.title=ex�cutions\n-view_executions.alt=afficher ic�ne ex�cutions\n+view_executions.title=ex\\u00e9cutions\n+view_executions.alt=afficher ic\\u00f4ne ex\\u00e9cutions\n view_details.class=fa fa-info-circle\n-view_details.title=d�tails\n-view_details.alt=ic�ne d�tails\n+view_details.title=d\\u00e9tails\n+view_details.alt=ic\\u00f4ne d\\u00e9tails\n delete.class=glyphicon glyphicon-minus\n delete.title=supprimer\n-delete.alt=ic�ne supprimer\n+delete.alt=ic\\u00f4ne supprimer\n execute.class=fa fa-gear\n-execute.title=ex�cuter\n-execute.alt=ic�ne ex�cuter\n+execute.title=ex\\u00e9cuter\n+execute.alt=ic\\u00f4ne ex\\u00e9cuter\n password_management.class=fa fa-shield\n password_management.title=gestion du mot de passe\n-password_management.alt=ic�ne gestion du mot de passe\n+password_management.alt=ic\\u00f4ne gestion du mot de passe\n request_password_reset.class=fa fa-user-secret\n-request_password_reset.title=demande de r�initialisation du mot de passe\n-request_password_reset.alt=ic�ne r�initialisation du mot de passe\n+request_password_reset.title=demande de r\\u00e9initialisation du mot de passe\n+request_password_reset.alt=ic\\u00f4ne r\\u00e9initialisation du mot de passe\n dryrun.class=fa fa-gears\n-dryrun.title=test � blanc\n-dryrun.alt=ic�ne test � blanc\n+dryrun.title=test \\u00e0 blanc\n+dryrun.alt=ic\\u00f4ne test \\u00e0 blanc\n claim.class=fa fa-ticket\n claim.title=obtenir\n-claim.alt=ic�ne obtenir\n+claim.alt=ic\\u00f4ne obtenir\n unclaim.class=fa fa-undo\n-unclaim.title=c�der\n-unclaim.alt=ic�ne c�der\n+unclaim.title=c\\u00e9der\n+unclaim.alt=ic\\u00f4ne c\\u00e9der\n select.class=glyphicon glyphicon-ok\n-select.title=s�lectionner\n-select.alt=ic�ne s�lectionner\n+select.title=s\\u00e9lectionner\n+select.alt=ic\\u00f4ne s\\u00e9lectionner\n close.class=fa fa-sign-out\n close.title=fermer\n-close.alt=ic�ne fermer\n+close.alt=ic\\u00f4ne fermer\n export.class=fa fa-floppy-o\n export.title=exporter\n-export.alt=ic�ne exporter\n+export.alt=ic\\u00f4ne exporter\n export_csv.class=fa fa-file-text-o\n export_csv.title=exporter en csv\n-export_csv.alt=ic�ne exporter en csv\n+export_csv.alt=ic\\u00f4ne exporter en csv\n export_html.class=fa fa-file-code-o\n export_html.title=exporter en html\n-export_html.alt=ic�ne exporter en html\n+export_html.alt=ic\\u00f4ne exporter en html\n export_pdf.class=fa fa-file-pdf-o\n export_pdf.title=exporter en pdf\n-export_pdf.alt=ic�ne exporter en pdf\n+export_pdf.alt=ic\\u00f4ne exporter en pdf\n export_rtf.class=fa fa-file-word-o\n export_rtf.title=exporter en rtf\n-export_rtf.alt=ic�ne exporter en rtf\n+export_rtf.alt=ic\\u00f4ne exporter en rtf\n export_xml.class=fa fa-file-excel-o\n export_xml.title=exporter en xml\n-export_xml.alt=ic�ne exporter en xml\n-restore.class=fa fa-arrow-circle-down\n-restore.title=restaurer\n-restore.alt=ic�ne restaurer\n+export_xml.alt=ic\\u00f4ne exporter en xml\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=interrompre\n-suspend.alt=ic�ne interrompre\n+suspend.alt=ic\\u00f4ne interrompre\n reactivate.class=glyphicon glyphicon-ok-sign\n-reactivate.title=r�activer\n-reactivate.alt=ic�ne r�activer\n-reload.class=fa fa-r�p�ter\n+reactivate.title=r\\u00e9activer\n+reactivate.alt=ic\\u00f4ne r\\u00e9activer\n+reload.class=fa fa-r\\u00e9p\\u00e9ter\n reload.title=recharger\n-reload.alt=ic�ne recharger\n+reload.alt=ic\\u00f4ne recharger\n change_view.class=fa fa-list\n change_view.title=changer affichage\n-change_view.alt=ic�ne changer affichage\n+change_view.alt=ic\\u00f4ne changer affichage\n unlink.class=fa fa-unlink\n unlink.title=dissocier \n-unlink.alt=ic�ne dissocier\n+unlink.alt=ic\\u00f4ne dissocier\n link.class=fa fa-link\n link.title=lien\n-link.alt=ic�ne lien\n+link.alt=ic\\u00f4ne lien\n unassign.class=glyphicon glyphicon-resize-full\n-unassign.title=d�assigner\n-unassign.alt=ic�ne d�assigner\n+unassign.title=d\\u00e9assigner\n+unassign.alt=ic\\u00f4ne d\\u00e9assigner\n assign.class=glyphicon glyphicon-resize-small\n assign.title=assigner\n-assign.alt=ic�ne assigner\n+assign.alt=ic\\u00f4ne assigner\n deprovision.class=glyphicon glyphicon-fast-backward\n-deprovision.title=d�sattribution\n-deprovision.alt=ic�ne d�sattribution\n+deprovision.title=d\\u00e9sattribution\n+deprovision.alt=ic\\u00f4ne d\\u00e9sattribution\n provision.class=glyphicon glyphicon-fast-forward\n provision.title=provision\n-provision.alt=ic�ne provision\n+provision.alt=ic\\u00f4ne provision\n deprovision_members.class=glyphicon glyphicon-fast-backward\n deprovision_members.title=Retirer des membres\n-deprovision_members.alt=ic�ne retirer des membres\n+deprovision_members.alt=ic\\u00f4ne retirer des membres\n provision_members.class=glyphicon glyphicon-fast-forward\n-provision_members.title=faire adh�rer membres\n-provision_members.alt=ic�ne faire adh�rer membres\n+provision_members.title=faire adh\\u00e9rer membres\n+provision_members.alt=ic\\u00f4ne faire adh\\u00e9rer membres\n reconciliation_push.class=fa fa-chevron-circle-right\n reconciliation_push.title=push\n-reconciliation_push.alt=ic�ne push r�conciliation\n+reconciliation_push.alt=ic\\u00f4ne push r\\u00e9conciliation\n reconciliation_pull.class=fa fa-chevron-circle-left\n reconciliation_pull.title=pull\n-reconciliation_pull.alt=ic�ne pull r�conciliation\n+reconciliation_pull.alt=ic\\u00f4ne pull r\\u00e9conciliation\n manage_resources.class=fa fa-sitemap\n-manage_resources.title=g�rer ressources\n-manage_resources.alt=ic�ne g�rer ressources\n+manage_resources.title=g\\u00e9rer ressources\n+manage_resources.alt=ic\\u00f4ne g\\u00e9rer ressources\n manage_users.class=fa fa-users\n-manage_users.title=g�rer utilisateurs\n-manage_users.alt=ic�ne g�rer utilisateurs\n+manage_users.title=g\\u00e9rer utilisateurs\n+manage_users.alt=ic\\u00f4ne g\\u00e9rer utilisateurs\n manage_groups.class=fa fa-users\n-manage_groups.title=g�rer groupes\n-manage_groups.alt=ic�ne g�rer groupes\n+manage_groups.title=g\\u00e9rer groupes\n+manage_groups.alt=ic\\u00f4ne g\\u00e9rer groupes\n propagation_tasks.class=fa fa-arrow-right\n-propagation_tasks.title=t�ches de propagation\n-propagation_tasks.alt=ic�ne t�ches de propagation\n+propagation_tasks.title=t\\u00e2ches de propagation\n+propagation_tasks.alt=ic\\u00f4ne t\\u00e2ches de propagation\n notification_tasks.class=fa fa-envelope-o\n-notification_tasks.title=t�ches de notification\n-notification_tasks.alt=ic�ne t�ches de notification\n+notification_tasks.title=t\\u00e2ches de notification\n+notification_tasks.alt=ic\\u00f4ne t\\u00e2ches de notification\n zoom_in.class=fa fa-search-plus\n zoom_in.title=zoom-in\n-zoom_in.alt=ic�ne zoom-in\n+zoom_in.alt=ic\\u00f4ne zoom-in\n zoom_out.class=fa fa-search-minus\n zoom_out.title=zoom-out\n-zoom_out.alt=ic�ne zoom-out\n+zoom_out.alt=ic\\u00f4ne zoom-out\n manage_accounts.class=fa fa-users\n-manage_accounts.title=g�rer comptes\n-manage_accounts.alt=ic�ne g�rer groupes\n+manage_accounts.title=g\\u00e9rer comptes\n+manage_accounts.alt=ic\\u00f4ne g\\u00e9rer groupes\n workflow_modeler.class=fa fa-picture-o\n-workflow_modeler.title=mod�lisateur de workflow\n-workflow_modeler.alt=ic�ne mod�lisateur de workflow\n+workflow_modeler.title=mod\\u00e9lisateur de workflow\n+workflow_modeler.alt=ic\\u00f4ne mod\\u00e9lisateur de workflow\n+view_audit_history.title=manage history\n+view_audit_history.class=fa fa-history\n+view_audit_history.alt=manage history icon"},{"sha":"0155d4fc2d0a9e0899f6fc1f0d983460af74356a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_it.properties","status":"modified","additions":16,"deletions":10,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -47,11 +47,11 @@ edit.title=modifica\n edit.alt=edit icon\n \n manage_approval.class=fa fa-pencil-square-o\n-manage_approval.title=manage\n+manage_approval.title=gestisci approvazioni\n manage_approval.alt=manage approval icon\n \n edit_approval.class=glyphicon glyphicon-pencil\n-edit_approval.title=edit\n+edit_approval.title=modifica\n edit_approval.alt=edit approval icon\n \n type_extensions.class=fa fa-expand\n@@ -103,11 +103,11 @@ view.title=vedi\n view.alt=view icon\n \n view_executions.class=fa fa-eye\n-view_executions.title=view executions\n+view_executions.title=vedi esecuzioni\n view_executions.alt=view executions icon\n \n view_details.class=fa fa-info-circle\n-view_details.title=view details\n+view_details.title=vedi dettagli\n view_details.alt=view details icon\n \n members.class=fa fa-users\n@@ -118,6 +118,14 @@ search.class=glyphicon glyphicon-search\n search.title=ricerca\n search.alt=search icon\n \n+view_executions.class=fa fa-eye\n+view_executions.title=esecuzioni\n+view_executions.alt=view executions icon\n+\n+view_details.class=fa fa-info-circle\n+view_details.title=dettagli\n+view_details.alt=details icon\n+\n delete.class=glyphicon glyphicon-minus\n delete.title=elimina\n delete.alt=delete icon\n@@ -128,7 +136,7 @@ execute.alt=execute icon\n \n password_management.class=fa fa-shield\n password_management.title=gestione password\n-password_management.alt=password management icon\n+password_management.alt=manage password icon\n \n request_password_reset.class=fa fa-user-secret\n request_password_reset.title=richiedi password reset\n@@ -174,10 +182,6 @@ export_xml.class=fa fa-file-excel-o\n export_xml.title=export as xml\n export_xml.alt=export as xml icon\n \n-restore.class=fa fa-arrow-circle-down\n-restore.title=restore\n-restore.alt=restore icon\n-\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=sospendi\n suspend.alt=suspend icon\n@@ -256,7 +260,6 @@ zoom_out.alt=zoom-out icon\n workflow_modeler.class=fa fa-picture-o\n workflow_modeler.title=workflow modeler\n workflow_modeler.alt=workflow modeler icon\n-\n reconciliation_push.class=fa fa-chevron-circle-right\n reconciliation_push.title=push\n reconciliation_push.alt=reconciliation push icon\n@@ -272,3 +275,6 @@ manage_accounts.alt=manage accounts icon\n view_audit_history.class=fa fa-history\n view_audit_history.title=storico modifiche\n view_audit_history.alt=storico modifiche icon\n+unclaim.class=fa fa-undo\n+unclaim.alt=unclaim icon\n+unclaim.title=ritira"},{"sha":"4f88ec0aee3fdfdb79882c7ce978f259de991275","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ja.properties","status":"modified","additions":19,"deletions":12,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ja.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -16,11 +16,11 @@\n # under the License.\n mapping.class=fa fa-exchange\n mapping.title=\\u30de\\u30c3\\u30d4\\u30f3\\u30b0\n-mapping.alt=\\u30de\\u30c3\\u30d4\\u30f3\\u30b0 icon\n+mapping.alt=\\u30de\\u30c3\\u30d4\\u30f3\\u30b0\n \n mustchangepassword.class=fa fa-lock\n-mustchangepassword.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u5909\\u66f4\\u304c\\u5fc5\\u8981\\u306e\\u5207\\u308a\\u66ff\\u3048\n-mustchangepassword.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u5909\\u66f4\\u304c\\u5fc5\\u8981\\u306e\\u5207\\u308a\\u66ff\\u3048\n+mustchangepassword.title=toggle must change password\n+mustchangepassword.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u306e\\u5909\\u66f4\\u304c\\u5fc5\\u8981\n \n set_latest_sync_token.class=fa fa-hourglass-start\n set_latest_sync_token.title=\\u6700\\u7d42\\u540c\\u671f\\u30c8\\u30fc\\u30af\\u30f3\\u3092\\u8a2d\\u5b9a\n@@ -114,6 +114,14 @@ members.class=fa fa-users\n members.title=\\u30e1\\u30f3\\u30d0\\u30fc\n members.alt=\\u30e1\\u30f3\\u30d0\\u30fc\n \n+view_executions.class=fa fa-eye\n+view_executions.title=\\u6b7b\\u5211\\u57f7\\u884c\n+view_executions.alt=\\u5b9f\\u884c\\u30a2\\u30a4\\u30b3\\u30f3\\u3092\\u8868\\u793a\n+\n+view_details.class=fa fa-info-circle\n+view_details.title=\\u8a73\\u7d30\n+view_details.alt=\\u8a73\\u7d30\\u30a2\\u30a4\\u30b3\\u30f3\n+\n search.class=glyphicon glyphicon-search\n search.title=\\u691c\\u7d22\n search.alt=\\u691c\\u7d22\n@@ -128,11 +136,11 @@ execute.alt=\\u5b9f\\u884c\n \n password_management.class=fa fa-shield\n password_management.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u7ba1\\u7406\n-password_management.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u7ba1\\u7406 icon\n+password_management.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u7ba1\\u7406icon\n \n request_password_reset.class=fa fa-user-secret\n-request_password_reset.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8\\u3092\\u8981\\u6c42\n-request_password_reset.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8 icon\n+request_password_reset.title=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8\\u306e\\u8981\\u6c42\n+request_password_reset.alt=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30ea\\u30bb\\u30c3\\u30c8\\u306e\\u8981\\u6c42 icon\n \n dryrun.class=fa fa-gears\n dryrun.title=\\u4e88\\u884c\\u6f14\\u7fd2\n@@ -174,10 +182,6 @@ export_xml.class=fa fa-file-excel-o\n export_xml.title=xml \\u3068\\u3057\\u3066\\u30a8\\u30af\\u30b9\\u30dd\\u30fc\\u30c8\n export_xml.alt=xml \\u3068\\u3057\\u3066\\u30a8\\u30af\\u30b9\\u30dd\\u30fc\\u30c8\n \n-restore.class=fa fa-arrow-circle-down\n-restore.title=\\u5fa9\\u5143\n-restore.alt=\\u5fa9\\u5143\n-\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=\\u30b5\\u30b9\\u30da\\u30f3\\u30c9\n suspend.alt=\\u30b5\\u30b9\\u30da\\u30f3\\u30c9\n@@ -271,5 +275,8 @@ manage_accounts.title=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u3092\\u7ba1\\u7406\\u3059\\u30\n manage_accounts.alt=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u7ba1\\u7406\\u30a2\\u30a4\\u30b3\\u30f3\n \n view_audit_history.class=fa fa-history\n-view_audit_history.title=history management\n-view_audit_history.alt=history management icon\n+view_audit_history.title=manage history\n+view_audit_history.alt=manage history icon\n+unclaim.class=fa fa-undo\n+unclaim.alt=unclaim icon\n+unclaim.title=unclaim"},{"sha":"0d2b609b5f0f437d99bc0d227c9edebb82e5f288","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_pt_BR.properties","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -49,7 +49,6 @@ edit.alt=edit icon\n manage_approval.class=fa fa-pencil-square-o\n manage_approval.title=manage\n manage_approval.alt=manage approval icon\n-\n edit_approval.class=glyphicon glyphicon-pencil\n edit_approval.title=edit\n edit_approval.alt=edit approval icon\n@@ -102,10 +101,6 @@ view.class=fa fa-eye\n view.title=view\n view.alt=view icon\n \n-members.class=fa fa-users\n-members.title=members\n-members.alt=members icon\n-\n view_executions.class=fa fa-eye\n view_executions.title=view executions\n view_executions.alt=view executions icon\n@@ -118,6 +113,14 @@ members.class=fa fa-users\n members.title=members\n members.alt=members icon\n \n+view_executions.class=fa fa-eye\n+view_executions.title=execu\\u00e7\\u00f5es\n+view_executions.alt=view executions icon\n+\n+view_details.class=fa fa-info-circle\n+view_details.title=detalhes\n+view_details.alt=details icon\n+\n search.class=glyphicon glyphicon-search\n search.title=search\n search.alt=search icon\n@@ -131,8 +134,8 @@ execute.title=execute\n execute.alt=execute icon\n \n password_management.class=fa fa-shield\n-password_management.title=password management\n-password_management.alt=password management icon\n+password_management.title=manage password\n+password_management.alt=manage password icon\n \n request_password_reset.class=fa fa-user-secret\n request_password_reset.title=request password reset\n@@ -182,10 +185,6 @@ export_xml.class=fa fa-file-excel-o\n export_xml.title=export as xml\n export_xml.alt=export as xml icon\n \n-restore.class=fa fa-arrow-circle-down\n-restore.title=restore\n-restore.alt=restore icon\n-\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=suspend\n suspend.alt=suspend icon\n@@ -269,12 +268,10 @@ zoom_in.alt=zoom-in icon\n zoom_out.class=fa fa-search-minus\n zoom_out.title=zoom-out\n zoom_out.alt=zoom-out icon\n-\n reconciliation_push.class=fa fa-chevron-circle-right\n reconciliation_push.title=push\n reconciliation_push.alt=reconciliation push icon\n-\n-reconciliation_pull.class=fa fa-chevron-circle-left\n+reconciliation_pull.class=fa-chevron-circle-left\n reconciliation_pull.title=pull\n reconciliation_pull.alt=reconciliation pull icon\n \n@@ -283,5 +280,8 @@ manage_accounts.title=manage accounts\n manage_accounts.alt=manage accounts icon\n \n view_audit_history.class=fa fa-history\n-view_audit_history.title=history management\n-view_audit_history.alt=history management icon\n+view_audit_history.title=manage history\n+view_audit_history.alt=manage history icon\n+workflow_modeler.class=fa fa-picture-o\n+workflow_modeler.title=workflow modeler icon\n+workflow_modeler.alt=workflow modeler icon"},{"sha":"146652e59f9678d88ea14f3a7142b86fb9235bf2","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ru.properties","status":"modified","additions":15,"deletions":8,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -114,6 +114,14 @@ members.class=fa fa-users\n members.title=members\n members.alt=members icon\n \n+view_executions.class=fa fa-eye\n+view_executions.title=\\u043a\\u0430\\u0437\\u043d\\u0438\n+view_executions.alt=view executions icon\n+\n+view_details.class=fa fa-info-circle\n+view_details.title=\\u043f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0438\n+view_details.alt=details icon\n+\n search.class=glyphicon glyphicon-search\n search.title=search\n search.alt=search icon\n@@ -127,8 +135,8 @@ execute.title=execute\n execute.alt=execute icon\n \n password_management.class=fa fa-shield\n-password_management.title=password management\n-password_management.alt=password management icon\n+password_management.title=manage password\n+password_management.alt=manage password icon\n \n request_password_reset.class=fa fa-user-secret\n request_password_reset.title=request password reset\n@@ -174,10 +182,6 @@ export_xml.class=fa fa-file-excel-o\n export_xml.title=export as xml\n export_xml.alt=export as xml icon\n \n-restore.class=fa fa-arrow-circle-down\n-restore.title=restore\n-restore.alt=restore icon\n-\n suspend.class=glyphicon glyphicon-ban-circle\n suspend.title=suspend\n suspend.alt=suspend icon\n@@ -270,5 +274,8 @@ manage_accounts.title=manage accounts\n manage_accounts.alt=manage accounts icon\n \n view_audit_history.class=fa fa-history\n-view_audit_history.title=history management\n-view_audit_history.alt=history management icon\n+view_audit_history.title=manage history\n+view_audit_history.alt=manage history icon\n+unclaim.class=fa fa-undo\n+unclaim.alt=unclaim icon\n+unclaim.title=unclaim"},{"sha":"5f5097f63d000db37222a1c54ff2a4662a2fd08b","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractHistoryConf.java","status":"removed","additions":0,"deletions":68,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,68 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import java.util.Date;\n-import java.util.Optional;\n-\n-import javax.ws.rs.PathParam;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"abstractHistoryConf\")\n-@XmlType\n-@XmlSeeAlso({ ConnInstanceHistoryConfTO.class, ResourceHistoryConfTO.class })\n-public abstract class AbstractHistoryConf implements EntityTO {\n-\n-    private static final long serialVersionUID = -8001640160293506651L;\n-\n-    private String key;\n-\n-    private String creator;\n-\n-    private Date creation;\n-\n-    @Override\n-    public String getKey() {\n-        return key;\n-    }\n-\n-    @PathParam(\"key\")\n-    @Override\n-    public void setKey(final String key) {\n-        this.key = key;\n-    }\n-\n-    public String getCreator() {\n-        return creator;\n-    }\n-\n-    public void setCreator(final String creator) {\n-        this.creator = creator;\n-    }\n-\n-    public Date getCreation() {\n-        return Optional.ofNullable(creation).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-\n-    public void setCreation(final Date creation) {\n-        this.creation = Optional.ofNullable(creation).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-}"},{"sha":"efca68dba32b37c8999da0bccaca4957d1625725","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceHistoryConfTO.java","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceHistoryConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceHistoryConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceHistoryConfTO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,39 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"connInstanceHistoryConf\")\n-@XmlType\n-public class ConnInstanceHistoryConfTO extends AbstractHistoryConf {\n-\n-    private static final long serialVersionUID = 8067539341757100479L;\n-\n-    private ConnInstanceTO connInstanceTO;\n-\n-    public ConnInstanceTO getConnInstanceTO() {\n-        return connInstanceTO;\n-    }\n-\n-    public void setConnInstanceTO(final ConnInstanceTO connInstanceTO) {\n-        this.connInstanceTO = connInstanceTO;\n-    }\n-}"},{"sha":"52682996f57062ac2793a9dff402dc2aa72c64e4","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceHistoryConfTO.java","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,39 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.to;\n-\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlRootElement(name = \"resourceHistoryConf\")\n-@XmlType\n-public class ResourceHistoryConfTO extends AbstractHistoryConf {\n-\n-    private static final long serialVersionUID = -7308499697925335157L;\n-\n-    private ResourceTO resourceTO;\n-\n-    public ResourceTO getResourceTO() {\n-        return resourceTO;\n-    }\n-\n-    public void setResourceTO(final ResourceTO resourceTO) {\n-        this.resourceTO = resourceTO;\n-    }\n-}"},{"sha":"db64d1e52ea705fed90f96b025715b761929fa0f","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/types/IdMEntitlement.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdMEntitlement.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -40,12 +40,6 @@ public final class IdMEntitlement {\n \n     public static final String RESOURCE_LIST_CONNOBJECT = \"RESOURCE_LIST_CONNOBJECT\";\n \n-    public static final String RESOURCE_HISTORY_LIST = \"RESOURCE_HISTORY_LIST\";\n-\n-    public static final String RESOURCE_HISTORY_RESTORE = \"RESOURCE_HISTORY_RESTORE\";\n-\n-    public static final String RESOURCE_HISTORY_DELETE = \"RESOURCE_HISTORY_DELETE\";\n-\n     public static final String CONNECTOR_LIST = \"CONNECTOR_LIST\";\n \n     public static final String CONNECTOR_CREATE = \"CONNECTOR_CREATE\";\n@@ -58,12 +52,6 @@ public final class IdMEntitlement {\n \n     public static final String CONNECTOR_RELOAD = \"CONNECTOR_RELOAD\";\n \n-    public static final String CONNECTOR_HISTORY_LIST = \"CONNECTOR_HISTORY_LIST\";\n-\n-    public static final String CONNECTOR_HISTORY_RESTORE = \"CONNECTOR_HISTORY_RESTORE\";\n-\n-    public static final String CONNECTOR_HISTORY_DELETE = \"CONNECTOR_HISTORY_DELETE\";\n-\n     public static final String REMEDIATION_LIST = \"REMEDIATION_LIST\";\n \n     public static final String REMEDIATION_READ = \"REMEDIATION_READ\";"},{"sha":"ec5da410cc201a15eef1d7892d336352fb402dfd","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorHistoryService.java","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,82 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.rest.api.service;\n-\n-import io.swagger.v3.oas.annotations.responses.ApiResponse;\n-import io.swagger.v3.oas.annotations.responses.ApiResponses;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n-import io.swagger.v3.oas.annotations.tags.Tag;\n-import java.util.List;\n-import javax.validation.constraints.NotNull;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-\n-/**\n- * REST operations for connector configuration versioning.\n- */\n-@Tag(name = \"Connectors\")\n-@SecurityRequirements({\n-    @SecurityRequirement(name = \"BasicAuthentication\"),\n-    @SecurityRequirement(name = \"Bearer\") })\n-@Path(\"connectors/history\")\n-public interface ConnectorHistoryService extends JAXRSService {\n-\n-    /**\n-     * Returns a list of all connector configuration history instances for the given connector instance key.\n-     *\n-     * @param connectorKey connector instance key\n-     * @return list of all connector configuration history instances for the given connector instance key\n-     */\n-    @GET\n-    @Path(\"{connectorKey}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<ConnInstanceHistoryConfTO> list(@NotNull @PathParam(\"connectorKey\") String connectorKey);\n-\n-    /**\n-     * Restores the connector configuration history instance matching the provided key.\n-     *\n-     * @param key connector configuration history instance key to be restored\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @POST\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void restore(@NotNull @PathParam(\"key\") String key);\n-\n-    /**\n-     * Deletes the connector configuration history instance matching the provided key.\n-     *\n-     * @param key connector configuration history instance key to be deleted\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @DELETE\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"key\") String key);\n-}"},{"sha":"0f0a2c01a0116aad766614cc13a8d7d7a909bcb0","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceHistoryService.java","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,82 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.rest.api.service;\n-\n-import io.swagger.v3.oas.annotations.responses.ApiResponse;\n-import io.swagger.v3.oas.annotations.responses.ApiResponses;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n-import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n-import io.swagger.v3.oas.annotations.tags.Tag;\n-import java.util.List;\n-import javax.validation.constraints.NotNull;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n-\n-/**\n- * REST operations for resource configuration versioning.\n- */\n-@Tag(name = \"Resources\")\n-@SecurityRequirements({\n-    @SecurityRequirement(name = \"BasicAuthentication\"),\n-    @SecurityRequirement(name = \"Bearer\") })\n-@Path(\"resources/history\")\n-public interface ResourceHistoryService extends JAXRSService {\n-\n-    /**\n-     * Returns a list of all resource configuration history for the given resource key.\n-     *\n-     * @param resourceKey resource key\n-     * @return list of all resource configuration history for the given resource key\n-     */\n-    @GET\n-    @Path(\"{resourceKey}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<ResourceHistoryConfTO> list(@NotNull @PathParam(\"resourceKey\") String resourceKey);\n-\n-    /**\n-     * Restores the resource configuration history matching the provided key.\n-     *\n-     * @param key resource configuration history key to be restored\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @POST\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void restore(@NotNull @PathParam(\"key\") String key);\n-\n-    /**\n-     * Deletes the resource configuration history matching the provided key.\n-     *\n-     * @param key resource configuration history key to be deleted\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n-    @DELETE\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"key\") String key);\n-}"},{"sha":"74acedec7a6e694193a86537cbb8b99531059b11","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ConnectorHistoryLogic.java","status":"removed","additions":0,"deletions":98,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorHistoryLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorHistoryLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorHistoryLogic.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,98 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import java.lang.reflect.Method;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.lib.types.IdMEntitlement;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n-import org.apache.syncope.core.provisioning.api.data.ConnInstanceDataBinder;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Component\n-public class ConnectorHistoryLogic extends AbstractTransactionalLogic<ConnInstanceHistoryConfTO> {\n-\n-    @Autowired\n-    private ConnInstanceHistoryConfDAO connInstanceHistoryConfDAO;\n-\n-    @Autowired\n-    private ConnInstanceDAO connInstanceDAO;\n-\n-    @Autowired\n-    private ConnInstanceDataBinder binder;\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.CONNECTOR_HISTORY_LIST + \"')\")\n-    @Transactional(readOnly = true)\n-    public List<ConnInstanceHistoryConfTO> list(final String key) {\n-        ConnInstance connInstance = connInstanceDAO.find(key);\n-        if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + key + '\\'');\n-        }\n-\n-        return connInstanceHistoryConfDAO.findByEntity(connInstance).stream().\n-                map(binder::getConnInstanceHistoryConfTO).collect(Collectors.toList());\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.CONNECTOR_HISTORY_RESTORE + \"')\")\n-    public void restore(final String key) {\n-        ConnInstanceHistoryConf connInstanceHistoryConf = connInstanceHistoryConfDAO.find(key);\n-        if (connInstanceHistoryConf == null) {\n-            throw new NotFoundException(\"Connector History Conf '\" + key + '\\'');\n-        }\n-\n-        binder.update(connInstanceHistoryConf.getConf());\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.CONNECTOR_HISTORY_DELETE + \"')\")\n-    public void delete(final String key) {\n-        ConnInstanceHistoryConf connInstanceHistoryConf = connInstanceHistoryConfDAO.find(key);\n-        if (connInstanceHistoryConf == null) {\n-            throw new NotFoundException(\"Connector History Conf '\" + key + '\\'');\n-        }\n-\n-        connInstanceHistoryConfDAO.delete(key);\n-    }\n-\n-    @Override\n-    protected ConnInstanceHistoryConfTO resolveReference(final Method method, final Object... args)\n-            throws UnresolvedReferenceException {\n-\n-        if (!\"list\".equals(method.getName())) {\n-            try {\n-                String key = (String) args[0];\n-                return binder.getConnInstanceHistoryConfTO(connInstanceHistoryConfDAO.find(key));\n-            } catch (Throwable ignore) {\n-                LOG.debug(\"Unresolved reference\", ignore);\n-                throw new UnresolvedReferenceException(ignore);\n-            }\n-        }\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-\n-}"},{"sha":"87af15ce64b85c7a53e83f483675a7d5ddc66b1b","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ResourceHistoryLogic.java","status":"removed","additions":0,"deletions":98,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceHistoryLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceHistoryLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceHistoryLogic.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,98 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic;\n-\n-import java.lang.reflect.Method;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.lib.types.IdMEntitlement;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n-import org.apache.syncope.core.provisioning.api.data.ResourceDataBinder;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Component\n-public class ResourceHistoryLogic extends AbstractTransactionalLogic<ResourceHistoryConfTO> {\n-\n-    @Autowired\n-    private ExternalResourceHistoryConfDAO resourceHistoryConfDAO;\n-\n-    @Autowired\n-    private ExternalResourceDAO resourceDAO;\n-\n-    @Autowired\n-    private ResourceDataBinder binder;\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.RESOURCE_HISTORY_LIST + \"')\")\n-    @Transactional(readOnly = true)\n-    public List<ResourceHistoryConfTO> list(final String key) {\n-        ExternalResource resource = resourceDAO.find(key);\n-        if (resource == null) {\n-            throw new NotFoundException(\"Resource '\" + key + '\\'');\n-        }\n-\n-        return resourceHistoryConfDAO.findByEntity(resource).stream().\n-                map(binder::getResourceHistoryConfTO).collect(Collectors.toList());\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.RESOURCE_HISTORY_RESTORE + \"')\")\n-    public void restore(final String key) {\n-        ExternalResourceHistoryConf resourceHistoryConf = resourceHistoryConfDAO.find(key);\n-        if (resourceHistoryConf == null) {\n-            throw new NotFoundException(\"Resource History Conf '\" + key + '\\'');\n-        }\n-\n-        binder.update(resourceHistoryConf.getEntity(), resourceHistoryConf.getConf());\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdMEntitlement.RESOURCE_HISTORY_DELETE + \"')\")\n-    public void delete(final String key) {\n-        ExternalResourceHistoryConf resourceHistoryConf = resourceHistoryConfDAO.find(key);\n-        if (resourceHistoryConf == null) {\n-            throw new NotFoundException(\"Resource History Conf '\" + key + '\\'');\n-        }\n-\n-        resourceHistoryConfDAO.delete(key);\n-    }\n-\n-    @Override\n-    protected ResourceHistoryConfTO resolveReference(final Method method, final Object... args)\n-            throws UnresolvedReferenceException {\n-\n-        if (!\"list\".equals(method.getName())) {\n-            try {\n-                String key = (String) args[0];\n-                return binder.getResourceHistoryConfTO(resourceHistoryConfDAO.find(key));\n-            } catch (Throwable ignore) {\n-                LOG.debug(\"Unresolved reference\", ignore);\n-                throw new UnresolvedReferenceException(ignore);\n-            }\n-        }\n-\n-        throw new UnresolvedReferenceException();\n-    }\n-\n-}"},{"sha":"3424c5ea4fc5d2ea82522146e408c4b1df69642b","filename":"core/idm/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorHistoryServiceImpl.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf.service;\n-\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n-import org.apache.syncope.core.logic.ConnectorHistoryLogic;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class ConnectorHistoryServiceImpl extends AbstractServiceImpl implements ConnectorHistoryService {\n-\n-    @Autowired\n-    private ConnectorHistoryLogic logic;\n-\n-    @Override\n-    public List<ConnInstanceHistoryConfTO> list(final String connectorKey) {\n-        return logic.list(connectorKey);\n-    }\n-\n-    @Override\n-    public void restore(final String key) {\n-        logic.restore(key);\n-    }\n-\n-    @Override\n-    public void delete(final String key) {\n-        logic.delete(key);\n-    }\n-\n-}"},{"sha":"b69b5bee7fb74d3ac3a030b30a223d133e7d86bd","filename":"core/idm/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceHistoryServiceImpl.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf.service;\n-\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n-import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n-import org.apache.syncope.core.logic.ResourceHistoryLogic;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class ResourceHistoryServiceImpl extends AbstractServiceImpl implements ResourceHistoryService {\n-\n-    @Autowired\n-    private ResourceHistoryLogic logic;\n-\n-    @Override\n-    public List<ResourceHistoryConfTO> list(final String resourceKey) {\n-        return logic.list(resourceKey);\n-    }\n-\n-    @Override\n-    public void restore(final String key) {\n-        logic.restore(key);\n-    }\n-\n-    @Override\n-    public void delete(final String key) {\n-        logic.delete(key);\n-    }\n-\n-}"},{"sha":"1caad698fbc3858008fe0dd481e319087f69c48a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConnInstanceHistoryConfDAO.java","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceHistoryConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceHistoryConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceHistoryConfDAO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,36 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.dao;\n-\n-import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n-\n-public interface ConnInstanceHistoryConfDAO extends DAO<ConnInstanceHistoryConf> {\n-\n-    ConnInstanceHistoryConf find(String key);\n-\n-    List<ConnInstanceHistoryConf> findByEntity(ConnInstance entity);\n-\n-    ConnInstanceHistoryConf save(ConnInstanceHistoryConf conf);\n-\n-    void delete(String key);\n-\n-    void deleteByEntity(ConnInstance entity);\n-}"},{"sha":"1c4db5a4bf05dc0bc2260e54593c2c1841262e57","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ExternalResourceHistoryConfDAO.java","status":"removed","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceHistoryConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceHistoryConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceHistoryConfDAO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,36 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.dao;\n-\n-import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n-\n-public interface ExternalResourceHistoryConfDAO extends DAO<ExternalResourceHistoryConf> {\n-\n-    ExternalResourceHistoryConf find(String key);\n-\n-    List<ExternalResourceHistoryConf> findByEntity(ExternalResource entity);\n-\n-    ExternalResourceHistoryConf save(ExternalResourceHistoryConf conf);\n-\n-    void delete(String key);\n-\n-    void deleteByEntity(ExternalResource entity);\n-}"},{"sha":"88a448105680dd954ed87187842abe153a2fdaf0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ConnInstanceHistoryConf.java","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstanceHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstanceHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstanceHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,24 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.entity;\n-\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-\n-public interface ConnInstanceHistoryConf extends HistoryConf<ConnInstance, ConnInstanceTO> {\n-}"},{"sha":"5da50c1c7d2c79e38bfd8c4666f4ad36ff627725","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/HistoryConf.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.entity;\n-\n-import java.util.Date;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-\n-public interface HistoryConf<E extends Entity, T extends EntityTO> extends Entity {\n-\n-    String getCreator();\n-\n-    void setCreator(String creator);\n-\n-    Date getCreation();\n-\n-    void setCreation(Date creation);\n-\n-    E getEntity();\n-\n-    void setEntity(E entity);\n-\n-    T getConf();\n-\n-    void setConf(T conf);\n-}"},{"sha":"0fd8a25c323cb182d9fd33c5737cadf7af8bb84e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResourceHistoryConf.java","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResourceHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResourceHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResourceHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,25 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.api.entity.resource;\n-\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.core.persistence.api.entity.HistoryConf;\n-\n-public interface ExternalResourceHistoryConf extends HistoryConf<ExternalResource, ResourceTO> {\n-}"},{"sha":"9ae7908af28ccd82fc59ff3223bbf77c8b1de9e0","filename":"core/persistence-jpa-json/src/main/resources/domains/MasterContent.xml","status":"modified","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -20,6 +20,69 @@ under the License.\n <dataset>\n   <Realm id=\"ea696a4f-e77a-4ef1-be67-8f8093bc8686\" name=\"/\"/>  \n \n+<<<<<<< HEAD\n+=======\n+  <SyncopeSchema id=\"password.cipher.algorithm\"/>\n+  <PlainSchema id=\"password.cipher.algorithm\" type=\"String\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <!-- notificationjob.cronExpression:\n+  + not existing: NotificationJob runs according to NotificationJob.DEFAULT_CRON_EXP\n+  + provided as empty string: NotificationJob disabled\n+  + provided as non-empty string: NotificationJob runs according to the given value -->\n+  <SyncopeSchema id=\"notificationjob.cronExpression\"/>\n+  <PlainSchema id=\"notificationjob.cronExpression\" type=\"String\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  \n+  <SyncopeSchema id=\"notification.maxRetries\"/>\n+  <PlainSchema id=\"notification.maxRetries\" type=\"Long\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"token.length\"/>\n+  <PlainSchema id=\"token.length\" type=\"Long\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"token.expireTime\"/>\n+  <PlainSchema id=\"token.expireTime\" type=\"Long\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"selfRegistration.allowed\"/>\n+  <PlainSchema id=\"selfRegistration.allowed\" type=\"Boolean\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"passwordReset.allowed\"/>\n+  <PlainSchema id=\"passwordReset.allowed\" type=\"Boolean\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"passwordReset.securityQuestion\"/>\n+  <PlainSchema id=\"passwordReset.securityQuestion\" type=\"Boolean\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"authentication.attributes\"/>\n+  <PlainSchema id=\"authentication.attributes\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <SyncopeSchema id=\"authentication.statuses\"/>\n+  <PlainSchema id=\"authentication.statuses\" type=\"String\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <!-- Save user login date upon successful authentication -->\n+  <SyncopeSchema id=\"log.lastlogindate\"/>\n+  <PlainSchema id=\"log.lastlogindate\" type=\"Boolean\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+\n+  <!-- Return hashed password values when reading users -->\n+  <SyncopeSchema id=\"return.password.value\"/>\n+  <PlainSchema id=\"return.password.value\" type=\"Boolean\"\n+               mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  \n+  <!--  JWT lifetime in minutes -->                   \n+  <SyncopeSchema id=\"jwt.lifetime.minutes\"/>\n+  <PlainSchema id=\"jwt.lifetime.minutes\" type=\"Long\"\n+               mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+    \n+  <SyncopeConf id=\"cd64d66f-6fff-4008-b966-a06b1cc1436d\"\n+               plainAttrs=\"[{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;SSHA256&quot;}],&quot;schema&quot;:&quot;password.cipher.algorithm&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;&quot;}],&quot;schema&quot;:&quot;notificationjob.cronExpression&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:3}],&quot;schema&quot;:&quot;notification.maxRetries&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:256}],&quot;schema&quot;:&quot;token.length&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:60}],&quot;schema&quot;:&quot;token.expireTime&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;selfRegistration.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.allowed&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;passwordReset.securityQuestion&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;username&quot;},{&quot;stringValue&quot;:&quot;email&quot;}],&quot;schema&quot;:&quot;authentication.attributes&quot;},{&quot;values&quot;:[{&quot;stringValue&quot;:&quot;created&quot;},{&quot;stringValue&quot;:&quot;active&quot;}],&quot;schema&quot;:&quot;authentication.statuses&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:true}],&quot;schema&quot;:&quot;log.lastlogindate&quot;},{&quot;values&quot;:[{&quot;booleanValue&quot;:false}],&quot;schema&quot;:&quot;return.password.value&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:120}],&quot;schema&quot;:&quot;jwt.lifetime.minutes&quot;},{&quot;values&quot;:[{&quot;longValue&quot;:10}]}]\"/>\n+\n+>>>>>>> b33cc1415... [SYNCOPE-1517] Initial changes\n   <AnyType id=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass id=\"BaseUser\"/>\n   <AnyType_AnyTypeClass anyType_id=\"USER\" anyTypeClass_id=\"BaseUser\"/>"},{"sha":"7669c7b8135a7a5be543d3c592ffdef9b3ed737e","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -2342,20 +2342,23 @@ $$ }&#10;\n   <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"\n                 predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n \n-  <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ConnectorLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ConnectorLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ResourceLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ResourceLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n \n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n@@ -2365,12 +2368,8 @@ $$ }&#10;\n \n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[own]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provisionMembers]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n@@ -2384,4 +2383,4 @@ $$ }&#10;\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-</dataset>\n+</dataset>\n\\ No newline at end of file"},{"sha":"a733b936b753a806ecd3d682e5fe61e13bbc0aef","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConnInstanceDAO.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -24,7 +24,6 @@\n import javax.persistence.TypedQuery;\n import org.apache.syncope.common.lib.types.IdMEntitlement;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n@@ -41,9 +40,6 @@\n @Repository\n public class JPAConnInstanceDAO extends AbstractDAO<ConnInstance> implements ConnInstanceDAO {\n \n-    @Autowired\n-    private ConnInstanceHistoryConfDAO connInstanceHistoryConfDAO;\n-\n     @Autowired\n     @Lazy\n     private ExternalResourceDAO resourceDAO;\n@@ -120,8 +116,6 @@ public void delete(final String key) {\n                 map(Entity::getKey).collect(Collectors.toList()).\n                 forEach(resource -> resourceDAO.delete(resource));\n \n-        connInstanceHistoryConfDAO.deleteByEntity(connInstance);\n-\n         entityManager().remove(connInstance);\n \n         connRegistry.unregisterConnector(key);"},{"sha":"001d7fb62dc0e42231644bcfa047d7876b07855a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConnInstanceHistoryConfDAO.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceHistoryConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceHistoryConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceHistoryConfDAO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.dao;\n-\n-import java.util.List;\n-import javax.persistence.Query;\n-import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAConnInstanceHistoryConf;\n-import org.springframework.stereotype.Repository;\n-\n-@Repository\n-public class JPAConnInstanceHistoryConfDAO\n-        extends AbstractDAO<ConnInstanceHistoryConf> implements ConnInstanceHistoryConfDAO {\n-\n-    @Override\n-    public ConnInstanceHistoryConf find(final String key) {\n-        return entityManager().find(JPAConnInstanceHistoryConf.class, key);\n-    }\n-\n-    @Override\n-    public List<ConnInstanceHistoryConf> findByEntity(final ConnInstance entity) {\n-        TypedQuery<ConnInstanceHistoryConf> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAConnInstanceHistoryConf.class.getSimpleName()\n-                + \" e WHERE e.entity=:entity ORDER BY e.creation DESC\", ConnInstanceHistoryConf.class);\n-        query.setParameter(\"entity\", entity);\n-        return query.getResultList();\n-    }\n-\n-    @Override\n-    public ConnInstanceHistoryConf save(final ConnInstanceHistoryConf conf) {\n-        return entityManager().merge(conf);\n-    }\n-\n-    @Override\n-    public void delete(final String key) {\n-        ConnInstanceHistoryConf conf = find(key);\n-        if (conf == null) {\n-            return;\n-        }\n-\n-        entityManager().remove(conf);\n-    }\n-\n-    @Override\n-    public void deleteByEntity(final ConnInstance entity) {\n-        Query query = entityManager().createQuery(\n-                \"DELETE FROM \" + JPAConnInstanceHistoryConf.class.getSimpleName() + \" e WHERE e.entity=:entity\");\n-        query.setParameter(\"entity\", entity);\n-        query.executeUpdate();\n-    }\n-\n-}"},{"sha":"a76f49f5f50ce26de68a072e51f004e203db87ad","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAExternalResourceDAO.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n@@ -85,9 +84,6 @@ public class JPAExternalResourceDAO extends AbstractDAO<ExternalResource> implem\n     @Autowired\n     private RealmDAO realmDAO;\n \n-    @Autowired\n-    private ExternalResourceHistoryConfDAO externalResourceHistoryConfDAO;\n-\n     @Override\n     public int count() {\n         Query query = entityManager().createQuery(\n@@ -266,8 +262,6 @@ public void delete(final String name) {\n                 forEach(provision -> virSchemaDAO.findByProvision(provision).\n                 forEach(schema -> virSchemaDAO.delete(schema.getKey())));\n \n-        externalResourceHistoryConfDAO.deleteByEntity(resource);\n-\n         if (resource.getConnector() != null && resource.getConnector().getResources() != null\n                 && !resource.getConnector().getResources().isEmpty()) {\n "},{"sha":"ba43355de5b4068fe8426c521541a39ed81c734e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAExternalResourceHistoryConfDAO.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceHistoryConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceHistoryConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceHistoryConfDAO.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,71 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.dao;\n-\n-import java.util.List;\n-import javax.persistence.Query;\n-import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n-import org.apache.syncope.core.persistence.jpa.entity.resource.JPAExternalResourceHistoryConf;\n-import org.springframework.stereotype.Repository;\n-\n-@Repository\n-public class JPAExternalResourceHistoryConfDAO\n-        extends AbstractDAO<ExternalResourceHistoryConf> implements ExternalResourceHistoryConfDAO {\n-\n-    @Override\n-    public ExternalResourceHistoryConf find(final String key) {\n-        return entityManager().find(JPAExternalResourceHistoryConf.class, key);\n-    }\n-\n-    @Override\n-    public List<ExternalResourceHistoryConf> findByEntity(final ExternalResource entity) {\n-        TypedQuery<ExternalResourceHistoryConf> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAExternalResourceHistoryConf.class.getSimpleName()\n-                + \" e WHERE e.entity=:entity ORDER BY e.creation DESC\", ExternalResourceHistoryConf.class);\n-        query.setParameter(\"entity\", entity);\n-        return query.getResultList();\n-    }\n-\n-    @Override\n-    public ExternalResourceHistoryConf save(final ExternalResourceHistoryConf conf) {\n-        return entityManager().merge(conf);\n-    }\n-\n-    @Override\n-    public void delete(final String key) {\n-        ExternalResourceHistoryConf conf = find(key);\n-        if (conf == null) {\n-            return;\n-        }\n-\n-        entityManager().remove(conf);\n-    }\n-\n-    @Override\n-    public void deleteByEntity(final ExternalResource entity) {\n-        Query query = entityManager().createQuery(\n-                \"DELETE FROM \" + JPAExternalResourceHistoryConf.class.getSimpleName() + \" e WHERE e.entity=:entity\");\n-        query.setParameter(\"entity\", entity);\n-        query.executeUpdate();\n-    }\n-\n-}"},{"sha":"bda3e171da8707e04ead1ebd80816206eefafc16","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractHistoryConf.java","status":"removed","additions":0,"deletions":74,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,74 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import java.util.Date;\n-import java.util.Optional;\n-\n-import javax.persistence.Column;\n-import javax.persistence.Lob;\n-import javax.persistence.MappedSuperclass;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n-import org.apache.syncope.core.persistence.api.entity.HistoryConf;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-\n-@MappedSuperclass\n-public abstract class AbstractHistoryConf<E extends Entity, T extends EntityTO>\n-        extends AbstractGeneratedKeyEntity implements HistoryConf<E, T> {\n-\n-    private static final long serialVersionUID = -7210303753586235180L;\n-\n-    @Column(nullable = false)\n-    private String creator;\n-\n-    @Temporal(TemporalType.TIMESTAMP)\n-    private Date creation;\n-\n-    @Lob\n-    protected String conf;\n-\n-    @Override\n-    public String getCreator() {\n-        return creator;\n-    }\n-\n-    @Override\n-    public void setCreator(final String creator) {\n-        this.creator = creator;\n-    }\n-\n-    @Override\n-    public Date getCreation() {\n-        return Optional.ofNullable(creation).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-\n-    @Override\n-    public void setCreation(final Date creation) {\n-        this.creation = Optional.ofNullable(creation).map(date -> new Date(date.getTime())).orElse(null);\n-    }\n-\n-    @Override\n-    public void setConf(final T conf) {\n-        this.conf = POJOHelper.serialize(conf);\n-    }\n-\n-}"},{"sha":"9001676e3d30f4857221dd08d637b995b5d5c359","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConnInstanceHistoryConf.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstanceHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstanceHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstanceHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity;\n-\n-import javax.persistence.Entity;\n-import javax.persistence.OneToOne;\n-import javax.persistence.Table;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-\n-@Entity\n-@Table(name = JPAConnInstanceHistoryConf.TABLE)\n-public class JPAConnInstanceHistoryConf\n-        extends AbstractHistoryConf<ConnInstance, ConnInstanceTO> implements ConnInstanceHistoryConf {\n-\n-    private static final long serialVersionUID = -4152915369607435186L;\n-\n-    public static final String TABLE = \"ConnInstanceHistoryConf\";\n-\n-    @OneToOne\n-    private JPAConnInstance entity;\n-\n-    @Override\n-    public ConnInstance getEntity() {\n-        return entity;\n-    }\n-\n-    @Override\n-    public void setEntity(final ConnInstance entity) {\n-        checkType(entity, JPAConnInstance.class);\n-        this.entity = (JPAConnInstance) entity;\n-    }\n-\n-    @Override\n-    public ConnInstanceTO getConf() {\n-        return StringUtils.isBlank(conf)\n-                ? null\n-                : POJOHelper.deserialize(conf, ConnInstanceTO.class);\n-    }\n-}"},{"sha":"b2a678634a6f2889e04ca4c23b87f4c94d8fb613","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.core.persistence.api.entity.Application;\n import org.apache.syncope.core.persistence.api.entity.Batch;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n import org.apache.syncope.core.persistence.api.entity.ConnPoolConf;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n@@ -126,10 +125,8 @@\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullCorrelationRuleEntity;\n-import org.apache.syncope.core.persistence.jpa.entity.resource.JPAExternalResourceHistoryConf;\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAOrgUnitItem;\n import org.apache.syncope.core.persistence.api.entity.policy.PullCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.api.entity.policy.PushCorrelationRuleEntity;\n@@ -210,16 +207,12 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPANotification();\n         } else if (reference.equals(ExternalResource.class)) {\n             result = (E) new JPAExternalResource();\n-        } else if (reference.equals(ExternalResourceHistoryConf.class)) {\n-            result = (E) new JPAExternalResourceHistoryConf();\n         } else if (reference.equals(Provision.class)) {\n             result = (E) new JPAProvision();\n         } else if (reference.equals(OrgUnit.class)) {\n             result = (E) new JPAOrgUnit();\n         } else if (reference.equals(ConnInstance.class)) {\n             result = (E) new JPAConnInstance();\n-        } else if (reference.equals(ConnInstanceHistoryConf.class)) {\n-            result = (E) new JPAConnInstanceHistoryConf();\n         } else if (reference.equals(SchemaLabel.class)) {\n             result = (E) new JPASchemaLabel();\n         } else if (reference.equals(PlainSchema.class)) {"},{"sha":"31fa7265de568ab2353c663d2deb44fb574e0f1b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResourceHistoryConf.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResourceHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResourceHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResourceHistoryConf.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.resource;\n-\n-import javax.persistence.Entity;\n-import javax.persistence.OneToOne;\n-import javax.persistence.Table;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractHistoryConf;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n-\n-@Entity\n-@Table(name = JPAExternalResourceHistoryConf.TABLE)\n-public class JPAExternalResourceHistoryConf\n-        extends AbstractHistoryConf<ExternalResource, ResourceTO> implements ExternalResourceHistoryConf {\n-\n-    public static final String TABLE = \"ExternalResourceHistoryConf\";\n-\n-    private static final long serialVersionUID = 4994551965604592529L;\n-\n-    @OneToOne\n-    private JPAExternalResource entity;\n-\n-    @Override\n-    public ExternalResource getEntity() {\n-        return entity;\n-    }\n-\n-    @Override\n-    public void setEntity(final ExternalResource entity) {\n-        checkType(entity, JPAExternalResource.class);\n-        this.entity = (JPAExternalResource) entity;\n-    }\n-\n-    @Override\n-    public ResourceTO getConf() {\n-        return StringUtils.isBlank(conf)\n-                ? null\n-                : POJOHelper.deserialize(conf, ResourceTO.class);\n-    }\n-}"},{"sha":"1377eddc9bb542af5d6b3b28efc771b220e34dad","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ConnInstanceHistoryConfTest.java","status":"removed","additions":0,"deletions":74,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceHistoryConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceHistoryConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceHistoryConfTest.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,74 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.outer;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-\n-import java.util.Date;\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n-import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Transactional(\"Master\")\n-public class ConnInstanceHistoryConfTest extends AbstractTest {\n-\n-    @Autowired\n-    private ConnInstanceDAO connInstanceDAO;\n-\n-    @Autowired\n-    private ConnInstanceHistoryConfDAO connInstanceHistoryConfDAO;\n-\n-    @Test\n-    public void createDelete() {\n-        ConnInstance ldapConnector = connInstanceDAO.find(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\");\n-        assertNotNull(ldapConnector);\n-\n-        ConnInstanceHistoryConf ldapHistory = entityFactory.newEntity(ConnInstanceHistoryConf.class);\n-        ldapHistory.setCreation(new Date());\n-        ldapHistory.setCreator(\"me\");\n-        ldapHistory.setEntity(ldapConnector);\n-        ldapHistory.setConf(new ConnInstanceTO());\n-\n-        ldapHistory = connInstanceHistoryConfDAO.save(ldapHistory);\n-        assertNotNull(ldapHistory.getKey());\n-\n-        entityManager().flush();\n-\n-        List<ConnInstanceHistoryConf> history = connInstanceHistoryConfDAO.findByEntity(ldapConnector);\n-        assertEquals(1, history.size());\n-        assertEquals(ldapHistory, history.get(0));\n-\n-        connInstanceHistoryConfDAO.delete(ldapHistory.getKey());\n-\n-        entityManager().flush();\n-\n-        assertNull(connInstanceHistoryConfDAO.find(ldapHistory.getKey()));\n-        assertTrue(connInstanceHistoryConfDAO.findByEntity(ldapConnector).isEmpty());\n-    }\n-}"},{"sha":"8689dddadcd5d656dafa6370c413bc22dddb17b3","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceHistoryConfTest.java","status":"removed","additions":0,"deletions":74,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceHistoryConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/45ad9ecc793f19a7c3f5fcf6fe956e728966b68e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceHistoryConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceHistoryConfTest.java?ref=45ad9ecc793f19a7c3f5fcf6fe956e728966b68e","patch":"@@ -1,74 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.outer;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-\n-import java.util.Date;\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n-import org.apache.syncope.core.persistence.jpa.AbstractTest;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-@Transactional(\"Master\")\n-public class ResourceHistoryConfTest extends AbstractTest {\n-\n-    @Autowired\n-    private ExternalResourceDAO resourceDAO;\n-\n-    @Autowired\n-    private ExternalResourceHistoryConfDAO resourceHistoryConfDAO;\n-\n-    @Test\n-    public void createDelete() {\n-        ExternalResource ldapResource = resourceDAO.find(\"resource-ldap\");\n-        assertNotNull(ldapResource);\n-\n-        ExternalResourceHistoryConf ldapHistory = entityFactory.newEntity(ExternalResourceHistoryConf.class);\n-        ldapHistory.setCreation(new Date());\n-        ldapHistory.setCreator(\"me\");\n-        ldapHistory.setEntity(ldapResource);\n-        ldapHistory.setConf(new ResourceTO());\n-\n-        ldapHistory = resourceHistoryConfDAO.save(ldapHistory);\n-        assertNotNull(ldapHistory.getKey());\n-\n-        entityManager().flush();\n-\n-        List<ExternalResourceHistoryConf> history = resourceHistoryConfDAO.findByEntity(ldapResource);\n-        assertEquals(1, history.size());\n-        assertEquals(ldapHistory, history.get(0));\n-\n-        resourceHistoryConfDAO.delete(ldapHistory.getKey());\n-\n-        entityManager().flush();\n-\n-        assertNull(resourceHistoryConfDAO.find(ldapHistory.getKey()));\n-        assertTrue(resourceHistoryConfDAO.findByEntity(ldapResource).isEmpty());\n-    }\n-}"},{"sha":"f338a2b8aeb787f36d138bf5ee2dc87b5fcc76f9","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -2428,20 +2428,23 @@ $$ }&#10;\n \n   <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"                predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n \n-  <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ConnectorLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ConnectorLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ResourceLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[ResourceLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n \n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n@@ -2451,12 +2454,8 @@ $$ }&#10;\n \n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[own]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provisionMembers]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n@@ -2470,4 +2469,4 @@ $$ }&#10;\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n   <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[AnyObjectLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n-</dataset>\n+</dataset>\n\\ No newline at end of file"},{"sha":"b4b7c183c85644a5741ff37725ebb16510df67ae","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/ConnInstanceDataBinder.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FConnInstanceDataBinder.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,11 +18,9 @@\n  */\n package org.apache.syncope.core.provisioning.api.data;\n \n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n import org.identityconnectors.framework.api.ConfigurationProperty;\n \n public interface ConnInstanceDataBinder {\n@@ -33,8 +31,5 @@ public interface ConnInstanceDataBinder {\n \n     ConnInstanceTO getConnInstanceTO(ConnInstance connInstance);\n \n-    ConnInstanceHistoryConfTO getConnInstanceHistoryConfTO(ConnInstanceHistoryConf history);\n-\n     ConnInstance update(ConnInstanceTO connInstanceTO);\n-\n }"},{"sha":"c63fbf3f90213ea41e0c648442f3473ab8136012","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/ResourceDataBinder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FResourceDataBinder.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -18,10 +18,8 @@\n  */\n package org.apache.syncope.core.provisioning.api.data;\n \n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n \n public interface ResourceDataBinder {\n \n@@ -30,6 +28,4 @@ public interface ResourceDataBinder {\n     ExternalResource create(ResourceTO resourceTO);\n \n     ExternalResource update(ExternalResource resource, ResourceTO resourceTO);\n-\n-    ResourceHistoryConfTO getResourceHistoryConfTO(ExternalResourceHistoryConf history);\n }"},{"sha":"812b1bff37d5d9f31709b7b3e76641c180a8a1df","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConnInstanceDataBinderImpl.java","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConnInstanceDataBinderImpl.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -21,24 +21,20 @@\n import java.net.URI;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n-import org.apache.syncope.core.persistence.api.dao.ConnInstanceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.ConnInstanceHistoryConf;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n@@ -47,7 +43,6 @@\n import org.identityconnectors.framework.api.ConfigurationProperties;\n import org.identityconnectors.framework.api.ConfigurationProperty;\n import org.identityconnectors.framework.impl.api.ConfigurationPropertyImpl;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.api.ConnectorInfo;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n@@ -61,9 +56,6 @@ public class ConnInstanceDataBinderImpl implements ConnInstanceDataBinder {\n     @Autowired\n     private ConnInstanceDAO connInstanceDAO;\n \n-    @Autowired\n-    private ConnInstanceHistoryConfDAO connInstanceHistoryConfDAO;\n-\n     @Autowired\n     private RealmDAO realmDAO;\n \n@@ -136,29 +128,6 @@ public ConnInstance update(final ConnInstanceTO connInstanceTO) {\n             throw new NotFoundException(\"Connector '\" + connInstanceTO.getKey() + '\\'');\n         }\n \n-        ConnInstanceTO current = getConnInstanceTO(connInstance);\n-        if (!current.equals(connInstanceTO)) {\n-            // 1. save the current configuration, before update\n-            ConnInstanceHistoryConf connInstanceHistoryConf = entityFactory.newEntity(ConnInstanceHistoryConf.class);\n-            connInstanceHistoryConf.setCreator(AuthContextUtils.getUsername());\n-            connInstanceHistoryConf.setCreation(new Date());\n-            connInstanceHistoryConf.setEntity(connInstance);\n-            connInstanceHistoryConf.setConf(current);\n-            connInstanceHistoryConfDAO.save(connInstanceHistoryConf);\n-\n-            // 2. ensure the maximum history size is not exceeded\n-            List<ConnInstanceHistoryConf> history = connInstanceHistoryConfDAO.findByEntity(connInstance);\n-            long maxHistorySize = confParamOps.get(\n-                    AuthContextUtils.getDomain(), \"connector.conf.history.size\", 10L, Long.class);\n-            if (maxHistorySize < history.size()) {\n-                // always remove the last item since history was obtained  by a query with ORDER BY creation DESC\n-                for (int i = 0; i < history.size() - maxHistorySize; i++) {\n-                    connInstanceHistoryConfDAO.delete(history.get(history.size() - 1).getKey());\n-                }\n-            }\n-        }\n-\n-        // 3. actual update\n         connInstance.getCapabilities().clear();\n         connInstance.getCapabilities().addAll(connInstanceTO.getCapabilities());\n \n@@ -291,15 +260,4 @@ public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance) {\n \n         return connInstanceTO;\n     }\n-\n-    @Override\n-    public ConnInstanceHistoryConfTO getConnInstanceHistoryConfTO(final ConnInstanceHistoryConf history) {\n-        ConnInstanceHistoryConfTO historyTO = new ConnInstanceHistoryConfTO();\n-        historyTO.setKey(history.getKey());\n-        historyTO.setCreator(history.getCreator());\n-        historyTO.setCreation(history.getCreation());\n-        historyTO.setConnInstanceTO(history.getConf());\n-\n-        return historyTO;\n-    }\n }"},{"sha":"278f31b29274f263615eb2727d24f7c2157b530a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -20,7 +20,6 @@\n \n import java.text.ParseException;\n import java.util.Collections;\n-import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -37,7 +36,6 @@\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.OrgUnitTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n@@ -54,7 +52,6 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.ExternalResourceHistoryConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n@@ -66,15 +63,13 @@\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.data.ResourceDataBinder;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -101,9 +96,6 @@ public class ResourceDataBinderImpl implements ResourceDataBinder {\n     @Autowired\n     private AnyTypeClassDAO anyTypeClassDAO;\n \n-    @Autowired\n-    private ExternalResourceHistoryConfDAO resourceHistoryConfDAO;\n-\n     @Autowired\n     private ConfParamOps confParamOps;\n \n@@ -126,31 +118,6 @@ public ExternalResource create(final ResourceTO resourceTO) {\n \n     @Override\n     public ExternalResource update(final ExternalResource resource, final ResourceTO resourceTO) {\n-        if (resource.getKey() != null) {\n-            ResourceTO current = getResourceTO(resource);\n-            if (!current.equals(resourceTO)) {\n-                // 1. save the current configuration, before update\n-                ExternalResourceHistoryConf resourceHistoryConf =\n-                        entityFactory.newEntity(ExternalResourceHistoryConf.class);\n-                resourceHistoryConf.setCreator(AuthContextUtils.getUsername());\n-                resourceHistoryConf.setCreation(new Date());\n-                resourceHistoryConf.setEntity(resource);\n-                resourceHistoryConf.setConf(current);\n-                resourceHistoryConfDAO.save(resourceHistoryConf);\n-\n-                // 2. ensure the maximum history size is not exceeded\n-                List<ExternalResourceHistoryConf> history = resourceHistoryConfDAO.findByEntity(resource);\n-                long maxHistorySize = confParamOps.get(\n-                        AuthContextUtils.getDomain(), \"resource.conf.history.size\", 10L, Long.class);\n-                if (maxHistorySize < history.size()) {\n-                    // always remove the last item since history was obtained  by a query with ORDER BY creation DESC\n-                    for (int i = 0; i < history.size() - maxHistorySize; i++) {\n-                        resourceHistoryConfDAO.delete(history.get(history.size() - 1).getKey());\n-                    }\n-                }\n-            }\n-        }\n-\n         resource.setKey(resourceTO.getKey());\n \n         if (resourceTO.getConnector() != null) {\n@@ -719,15 +686,4 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n \n         return resourceTO;\n     }\n-\n-    @Override\n-    public ResourceHistoryConfTO getResourceHistoryConfTO(final ExternalResourceHistoryConf history) {\n-        ResourceHistoryConfTO historyTO = new ResourceHistoryConfTO();\n-        historyTO.setKey(history.getKey());\n-        historyTO.setCreator(history.getCreator());\n-        historyTO.setCreation(history.getCreation());\n-        historyTO.setResourceTO(history.getConf());\n-\n-        return historyTO;\n-    }\n }"},{"sha":"d55090ed2654f625ef7318da32d7a94a92b60758","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -87,7 +87,6 @@\n import org.apache.syncope.common.rest.api.service.ApplicationService;\n import org.apache.syncope.common.rest.api.service.AuditService;\n import org.apache.syncope.common.rest.api.service.CamelRouteService;\n-import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.DynRealmService;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n@@ -105,7 +104,6 @@\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.syncope.common.rest.api.service.RemediationService;\n import org.apache.syncope.common.rest.api.service.ReportTemplateService;\n-import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.common.rest.api.service.SAML2IdPService;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n@@ -201,6 +199,8 @@ public abstract class AbstractITCase {\n \n     protected static final String PRINTER = \"PRINTER\";\n \n+    protected static final int MAX_WAIT_SECONDS = 50;\n+\n     protected static String ANONYMOUS_UNAME;\n \n     protected static String ANONYMOUS_KEY;\n@@ -245,12 +245,8 @@ public abstract class AbstractITCase {\n \n     protected static ResourceService resourceService;\n \n-    protected static ResourceHistoryService resourceHistoryService;\n-\n     protected static ConnectorService connectorService;\n \n-    protected static ConnectorHistoryService connectorHistoryService;\n-\n     protected static LoggerService loggerService;\n \n     protected static ReportTemplateService reportTemplateService;\n@@ -341,9 +337,7 @@ public static void restSetup() {\n         userWorkflowTaskService = adminClient.getService(UserWorkflowTaskService.class);\n         groupService = adminClient.getService(GroupService.class);\n         resourceService = adminClient.getService(ResourceService.class);\n-        resourceHistoryService = adminClient.getService(ResourceHistoryService.class);\n         connectorService = adminClient.getService(ConnectorService.class);\n-        connectorHistoryService = adminClient.getService(ConnectorHistoryService.class);\n         loggerService = adminClient.getService(LoggerService.class);\n         reportTemplateService = adminClient.getService(ReportTemplateService.class);\n         reportService = adminClient.getService(ReportService.class);"},{"sha":"78a6af9cf472ad965d3eb55c6321fe8e21484e32","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -71,9 +71,9 @@ public void clickToClonePrinter() {\n         assertNotNull(component);\n \n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:1:action:action\");\n+                + \"actions:actions:actionRepeater:5:action:action\");\n \n         FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");"},{"sha":"d6c5256629b85a11e332bce29102923e2b0862a2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BatchesITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -80,7 +80,7 @@ public void userResource() {\n         // manage resource\n         UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n-                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n@@ -134,7 +134,7 @@ private static void userStatusBatch(final int index, final String resource) {\n         // enable\n         UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n-                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n@@ -201,7 +201,7 @@ private static void userStatusBatch(final int index, final String resource) {\n         // enable\n         UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n-                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n@@ -265,7 +265,7 @@ public void groupResource() {\n         // manage resource\n         UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n-                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:6:\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n@@ -314,8 +314,8 @@ public void printerResource() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n         UTILITY_UI.getTester().clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n-                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:\"\n+        \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\""},{"sha":"c802f0b12ec5da2b9adfe4c9aefc7ecd7a193e17","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -54,7 +54,7 @@ public void read() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:3:action:action\");\n+                + \"actions:actions:actionRepeater:2:action:action\");\n \n         FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:7:outer:container:content:togglePanelContainer:membersForm\");\n@@ -100,9 +100,9 @@ private static void cloneGroup(final String group) {\n         assertNotNull(component);\n \n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:1:action:action\");\n+                + \"actions:actions:actionRepeater:9:action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\","},{"sha":"d6e3ff035ea9937a1d1963f135715308d2ea8b94","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -780,7 +780,7 @@ public void issueSYNCOPE1030() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n-                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:9:\"\n                 + \"action:action\");\n \n         UTILITY_UI.getTester().assertComponent("},{"sha":"c69d80575f537ba2235b9cb63c35a929d1d81920","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -76,9 +76,9 @@ public void forceChangePassword() {\n         assertNotNull(component);\n \n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:2:action:action\");\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n         UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n@@ -93,9 +93,9 @@ public void clickToCloneUser() {\n         assertNotNull(component);\n \n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:1:action:action\");\n+                + \"actions:actions:actionRepeater:9:action:action\");\n \n         UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n@@ -695,7 +695,7 @@ public void changePassword() {\n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         UTILITY_UI.getTester().clickLink(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:3:action:action\");\n+                + \"actions:actions:actionRepeater:2:action:action\");\n \n         UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n@@ -719,9 +719,9 @@ public void changePassword() {\n         assertNotNull(component);\n \n         UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL \n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n-                + \"actions:actions:actionRepeater:3:action:action\");\n+                + \"actions:actions:actionRepeater:2:action:action\");\n \n         UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");"},{"sha":"bf3b7fce21a9038f0d5dd3ff524540b719c327bf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -173,14 +173,14 @@ protected void execProvisioningTasks(final TaskService taskService, final TaskTy\n         ExecutorService service = Executors.newFixedThreadPool(taskKeys.size());\n         List<Future<ExecTO>> futures = new ArrayList<>();\n \n-        for (String key : taskKeys) {\n+        taskKeys.forEach(key -> {\n             futures.add(service.submit(new ThreadExec(taskService, type, key, maxWaitSeconds, dryRun)));\n             // avoid flooding the test server\n             try {\n                 Thread.sleep(2000);\n             } catch (InterruptedException e) {\n             }\n-        }\n+        });\n \n         for (Future<ExecTO> future : futures) {\n             future.get(100, TimeUnit.SECONDS);"},{"sha":"866eb0b993bc61ec59be4213e78120942e378d35","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"modified","additions":56,"deletions":6,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -22,25 +22,31 @@\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.AuditQuery;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.Test;\n \n public class AuditITCase extends AbstractITCase {\n \n-    private static final int MAX_WAIT_SECONDS = 50;\n-\n     private static AuditEntryTO query(final AuditQuery query, final int maxWaitSeconds, final boolean failIfEmpty) {\n         List<AuditEntryTO> results = query(query, maxWaitSeconds);\n         if (results.isEmpty()) {\n@@ -77,8 +83,8 @@ public void userReadAndSearchYieldsNoAudit() {\n \n         PagedResult<UserTO> usersTOs = userService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(userTO.getUsername()).\n-                                query()).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                                is(\"username\").equalTo(userTO.getUsername()).query()).\n                         build());\n         assertNotNull(usersTOs);\n         assertFalse(usersTOs.getResult().isEmpty());\n@@ -141,8 +147,8 @@ public void groupReadAndSearchYieldsNoAudit() {\n \n         PagedResult<GroupTO> groups = groupService.search(\n                 new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                        fiql(SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(groupTO.getName()).\n-                                query()).\n+                        fiql(SyncopeClient.getGroupSearchConditionBuilder().\n+                                is(\"name\").equalTo(groupTO.getName()).query()).\n                         build());\n         assertNotNull(groups);\n         assertFalse(groups.getResult().isEmpty());\n@@ -181,4 +187,48 @@ public void anyObjectReadAndSearchYieldsNoAudit() {\n         entries = query(query, MAX_WAIT_SECONDS);\n         assertEquals(1, entries.size());\n     }\n+\n+    @Test\n+    public void findByConnector() throws JsonProcessingException {\n+        String connectorKey = \"74141a3b-0762-4720-a4aa-fc3e374ef3ef\";\n+\n+        AuditQuery query = new AuditQuery.Builder(connectorKey).\n+                orderBy(\"event_date desc\").\n+                type(AuditElements.EventCategoryType.LOGIC).\n+                category(\"ConnectorLogic\").\n+                event(\"update\").\n+                result(AuditElements.Result.SUCCESS).\n+                build();\n+        List<AuditEntryTO> entries = query(query, 0);\n+        int pre = entries.size();\n+\n+        ConnInstanceTO ldapConn = connectorService.read(connectorKey, null);\n+        String originalDisplayName = ldapConn.getDisplayName();\n+        Set<ConnectorCapability> originalCapabilities = new HashSet<>(ldapConn.getCapabilities());\n+        ConnConfProperty originalConfProp = SerializationUtils.clone(\n+                ldapConn.getConf(\"maintainPosixGroupMembership\").get());\n+        assertEquals(1, originalConfProp.getValues().size());\n+        assertEquals(\"false\", originalConfProp.getValues().get(0));\n+\n+        ldapConn.setDisplayName(originalDisplayName + \" modified\");\n+        ldapConn.getCapabilities().clear();\n+        ldapConn.getConf(\"maintainPosixGroupMembership\").get().getValues().set(0, \"true\");\n+        connectorService.update(ldapConn);\n+\n+        ldapConn = connectorService.read(connectorKey, null);\n+        assertNotEquals(originalDisplayName, ldapConn.getDisplayName());\n+        assertNotEquals(originalCapabilities, ldapConn.getCapabilities());\n+        assertNotEquals(originalConfProp, ldapConn.getConf(\"maintainPosixGroupMembership\"));\n+\n+        entries = query(query, MAX_WAIT_SECONDS);\n+        assertEquals(pre + 1, entries.size());\n+\n+        ConnInstanceTO restore = MAPPER.readValue(entries.get(0).getBefore(), ConnInstanceTO.class);\n+        connectorService.update(restore);\n+\n+        ldapConn = connectorService.read(connectorKey, null);\n+        assertEquals(originalDisplayName, ldapConn.getDisplayName());\n+        assertEquals(originalCapabilities, ldapConn.getCapabilities());\n+        assertEquals(originalConfProp, ldapConn.getConf(\"maintainPosixGroupMembership\").get());\n+    }\n }"},{"sha":"14f04e02a715d0e9806b10ab62d95aae58087cb2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -529,9 +529,9 @@ public void issueSYNCOPE164() throws Exception {\n         assertNotNull(user);\n \n         // 4. check that the db resource has still the initial password value\n-        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String value = queryForObject(jdbcTemplate, MAX_WAIT_SECONDS,\n+                \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n         assertEquals(Encryptor.getInstance().encode(\"password123\", CipherAlgorithm.SHA1), value.toUpperCase());\n \n         // 5. successfully authenticate with old (on db resource) and new (on internal storage) password values"},{"sha":"1084df7b89d6130676272006c2c5c0d1eba5369d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -20,7 +20,6 @@\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -39,14 +38,12 @@\n import java.util.UUID;\n import java.util.stream.Collectors;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n@@ -476,41 +473,6 @@ public void buildObjectClassInfo() {\n         assertTrue(objectClasses.contains(ObjectClass.GROUP_NAME));\n     }\n \n-    @Test\n-    public void history() {\n-        List<ConnInstanceHistoryConfTO> history = connectorHistoryService.list(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\");\n-        assertNotNull(history);\n-        int pre = history.size();\n-\n-        ConnInstanceTO ldapConn = connectorService.read(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\", null);\n-        String originalDisplayName = ldapConn.getDisplayName();\n-        Set<ConnectorCapability> originalCapabilities = new HashSet<>(ldapConn.getCapabilities());\n-        ConnConfProperty originalConfProp = SerializationUtils.clone(\n-                ldapConn.getConf(\"maintainPosixGroupMembership\").get());\n-        assertEquals(1, originalConfProp.getValues().size());\n-        assertEquals(\"false\", originalConfProp.getValues().get(0));\n-\n-        ldapConn.setDisplayName(originalDisplayName + \" modified\");\n-        ldapConn.getCapabilities().clear();\n-        ldapConn.getConf(\"maintainPosixGroupMembership\").get().getValues().set(0, \"true\");\n-        connectorService.update(ldapConn);\n-\n-        ldapConn = connectorService.read(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\", null);\n-        assertNotEquals(originalDisplayName, ldapConn.getDisplayName());\n-        assertNotEquals(originalCapabilities, ldapConn.getCapabilities());\n-        assertNotEquals(originalConfProp, ldapConn.getConf(\"maintainPosixGroupMembership\"));\n-\n-        history = connectorHistoryService.list(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\");\n-        assertEquals(pre + 1, history.size());\n-\n-        connectorHistoryService.restore(history.get(0).getKey());\n-\n-        ldapConn = connectorService.read(\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\", null);\n-        assertEquals(originalDisplayName, ldapConn.getDisplayName());\n-        assertEquals(originalCapabilities, ldapConn.getCapabilities());\n-        assertEquals(originalConfProp, ldapConn.getConf(\"maintainPosixGroupMembership\").get());\n-    }\n-\n     @Test\n     public void authorizations() {\n         SyncopeClient puccini = clientFactory.create(\"puccini\", ADMIN_PWD);"},{"sha":"4e3d47a836338286cf7ff573455cac47e9948055","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -964,7 +964,6 @@ public void provisionMembers() throws InterruptedException {\n             assertNotNull(exec.getRefKey());\n \n             int i = 0;\n-            int maxit = 50;\n \n             // wait for task exec completion (executions incremented)\n             SchedTaskTO taskTO;\n@@ -976,7 +975,7 @@ public void provisionMembers() throws InterruptedException {\n                 assertNotNull(taskTO);\n                 assertNotNull(taskTO.getExecutions());\n                 i++;\n-            } while (taskTO.getExecutions().isEmpty() && i < maxit);\n+            } while (taskTO.getExecutions().isEmpty() && i < MAX_WAIT_SECONDS);\n             assertFalse(taskTO.getExecutions().isEmpty());\n \n             assertEquals(TaskJob.Status.SUCCESS.name(), taskTO.getExecutions().get(0).getStatus());"},{"sha":"c187fc2c865532e039a30ecfc78550f5619d8b81","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LinkedAccountITCase.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLinkedAccountITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -258,7 +258,8 @@ public void push() {\n             assertNotNull(sendUser);\n \n             // 5. execute PushTask\n-            AbstractTaskITCase.execProvisioningTask(taskService, TaskType.PUSH, sendUser.getKey(), 50, false);\n+            AbstractTaskITCase.execProvisioningTask(\n+                    taskService, TaskType.PUSH, sendUser.getKey(), MAX_WAIT_SECONDS, false);\n \n             TaskTO task = taskService.read(TaskType.PUSH, sendUser.getKey(), true);\n             assertEquals(1, task.getExecutions().size());\n@@ -401,7 +402,8 @@ public void pull() {\n             List<LinkedAccountTO> accounts = userService.read(\"vivaldi\").getLinkedAccounts();\n             assertTrue(accounts.isEmpty());\n \n-            ExecTO exec = AbstractTaskITCase.execProvisioningTask(taskService, TaskType.PULL, pullTaskKey, 50, false);\n+            ExecTO exec = AbstractTaskITCase.execProvisioningTask(\n+                    taskService, TaskType.PULL, pullTaskKey, MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n             assertTrue(exec.getMessage().contains(\"Accounts created\"));\n \n@@ -450,7 +452,8 @@ public void pull() {\n             assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n \n             // 4. execute pull task again and verify linked accounts were pulled\n-            exec = AbstractTaskITCase.execProvisioningTask(taskService, TaskType.PULL, pullTaskKey, 50, false);\n+            exec = AbstractTaskITCase.execProvisioningTask(\n+                    taskService, TaskType.PULL, pullTaskKey, MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n             assertTrue(exec.getMessage().contains(\"Accounts updated\"));\n             assertTrue(exec.getMessage().contains(\"Accounts deleted\"));"},{"sha":"ad99dca2ab0d84bd7f989a0b0430e9752199abc5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MembershipITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -250,7 +250,7 @@ public void pull() {\n             // 2. verify that user was found on resource\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n             String idOnResource = queryForObject(\n-                    jdbcTemplate, 50, \"SELECT id FROM testpull WHERE id=?\", String.class, \"5432\");\n+                    jdbcTemplate, MAX_WAIT_SECONDS, \"SELECT id FROM testpull WHERE id=?\", String.class, \"5432\");\n             assertEquals(\"5432\", idOnResource);\n \n             // 3. unlink user from resource, then remove it\n@@ -272,7 +272,7 @@ public void pull() {\n             assertNotNull(newTask);\n \n             ExecTO execution = AbstractTaskITCase.execProvisioningTask(\n-                    taskService, TaskType.PULL, newTask.getKey(), 50, false);\n+                    taskService, TaskType.PULL, newTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // 5. verify that pulled user has"},{"sha":"9181c1b7dec1d20f8ca15311948f5183b8599674","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -208,7 +208,7 @@ public void createResourceAndPull() {\n \n             // pull\n             ExecTO execution = AbstractTaskITCase.execProvisioningTask(\n-                    adminClient.getService(TaskService.class), TaskType.PULL, task.getKey(), 50, false);\n+                    adminClient.getService(TaskService.class), TaskType.PULL, task.getKey(), MAX_WAIT_SECONDS, false);\n \n             // verify execution status\n             String status = execution.getStatus();"},{"sha":"4405fcc77e35c2de2cbe603ba0ddde0dfbfaca95","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":39,"deletions":33,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -233,7 +233,7 @@ public void fromCSV() throws Exception {\n                     page(1).size(1).build()).getTotalCount();\n             assertNotNull(usersPre);\n \n-            ExecTO exec = execProvisioningTask(taskService, TaskType.PULL, PULL_TASK_KEY, 50, false);\n+            ExecTO exec = execProvisioningTask(taskService, TaskType.PULL, PULL_TASK_KEY, MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n \n             LOG.debug(\"Execution of task {}:\\n{}\", PULL_TASK_KEY, exec);\n@@ -301,7 +301,7 @@ public void fromCSV() throws Exception {\n             Set<String> otherPullTaskKeys = new HashSet<>();\n             otherPullTaskKeys.add(\"feae4e57-15ca-40d9-b973-8b9015efca49\");\n             otherPullTaskKeys.add(\"55d5e74b-497e-4bc0-9156-73abef4b9adc\");\n-            execProvisioningTasks(taskService, TaskType.PULL, otherPullTaskKeys, 50, false);\n+            execProvisioningTasks(taskService, TaskType.PULL, otherPullTaskKeys, MAX_WAIT_SECONDS, false);\n \n             // Matching --> UNLINK\n             assertFalse(userService.read(\"test9\").getResources().contains(RESOURCE_NAME_CSV));\n@@ -313,7 +313,7 @@ public void fromCSV() throws Exception {\n \n     @Test\n     public void dryRun() {\n-        ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, PULL_TASK_KEY, 50, true);\n+        ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, PULL_TASK_KEY, MAX_WAIT_SECONDS, true);\n         assertEquals(\"SUCCESS\", execution.getStatus());\n     }\n \n@@ -323,7 +323,7 @@ public void reconcileFromDB() {\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n         try {\n             ExecTO execution = execProvisioningTask(\n-                    taskService, TaskType.PULL, \"83f7e85d-9774-43fe-adba-ccd856312994\", 50, false);\n+                    taskService, TaskType.PULL, \"83f7e85d-9774-43fe-adba-ccd856312994\", MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             userTO = userService.read(\"testuser1\");\n@@ -336,7 +336,7 @@ public void reconcileFromDB() {\n \n             // re-execute the same PullTask: now user must be active\n             execution = execProvisioningTask(\n-                    taskService, TaskType.PULL, \"83f7e85d-9774-43fe-adba-ccd856312994\", 50, false);\n+                    taskService, TaskType.PULL, \"83f7e85d-9774-43fe-adba-ccd856312994\", MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             userTO = userService.read(\"testuser1\");\n@@ -357,7 +357,7 @@ public void reconcileFromLDAP() {\n \n         // 0. pull\n         ExecTO execution = execProvisioningTask(\n-                taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n+                taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", MAX_WAIT_SECONDS, false);\n \n         // 1. verify execution status\n         assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n@@ -411,11 +411,11 @@ public void reconcileFromLDAP() {\n                 userDn.getValues().get(0), Collections.singletonMap(\"title\", (String) null));\n \n         // SYNCOPE-317\n-        execProvisioningTask(taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", MAX_WAIT_SECONDS, false);\n \n         // 4. verify that LDAP group membership is pulled as Syncope membership\n         int i = 0;\n-        int maxit = 50;\n         PagedResult<UserTO> members;\n         do {\n             try {\n@@ -429,8 +429,8 @@ public void reconcileFromLDAP() {\n             assertNotNull(members);\n \n             i++;\n-        } while (members.getResult().isEmpty() && i < maxit);\n-        if (i == maxit) {\n+        } while (members.getResult().isEmpty() && i < MAX_WAIT_SECONDS);\n+        if (i == MAX_WAIT_SECONDS) {\n             fail(\"Timeout while checking for memberships of \" + groupTO.getName());\n         }\n         assertEquals(1, members.getResult().size());\n@@ -451,10 +451,10 @@ public void reconcileFromLDAP() {\n         updateLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD,\n                 groupDn.getValues().get(0), Map.of(\"uniquemember\", \"uid=admin,ou=system\"));\n \n-        execProvisioningTask(taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", MAX_WAIT_SECONDS, false);\n \n         i = 0;\n-        maxit = 50;\n         do {\n             try {\n                 Thread.sleep(1000);\n@@ -467,8 +467,8 @@ public void reconcileFromLDAP() {\n             assertNotNull(members);\n \n             i++;\n-        } while (!members.getResult().isEmpty() && i < maxit);\n-        if (i == maxit) {\n+        } while (!members.getResult().isEmpty() && i < MAX_WAIT_SECONDS);\n+        if (i == MAX_WAIT_SECONDS) {\n             fail(\"Timeout while checking for memberships of \" + groupTO.getName());\n         }\n         assertEquals(0, members.getResult().size());\n@@ -552,7 +552,7 @@ public void reconcileFromScriptedSQL() throws IOException {\n             assertFalse(pullTask.isPerformDelete());\n \n             // 4. pull\n-            execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n \n             // 5. verify that printer was re-created in Syncope (implies that location does not start with given prefix,\n             // hence PrefixItemTransformer was applied during pull)\n@@ -605,7 +605,7 @@ public void filteredReconciliation() throws IOException {\n             assertEquals(reconFilterBuilder.getKey(), task.getReconFilterBuilder());\n \n             // 3. exec task\n-            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, task.getKey(), 50, false);\n+            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, task.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // 4. verify that only enabled user was pulled\n@@ -687,7 +687,7 @@ public void syncTokenWithErrors() {\n                     + \"(1041, 'syncTokenWithErrors2', 'Surname2', \"\n                     + \"false, 'syncTokenWithErrors1@syncope.apache.org', '2015-05-23 13:53:24.293')\");\n \n-            ExecTO exec = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            ExecTO exec = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n \n             resForTest = resourceService.read(resForTest.getKey());\n@@ -697,7 +697,7 @@ public void syncTokenWithErrors() {\n                     + \"SET email='syncTokenWithErrors2@syncope.apache.org', lastModification='2016-05-23 13:53:24.293' \"\n                     + \"WHERE ID=1041\");\n \n-            exec = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            exec = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n \n             resForTest = resourceService.read(resForTest.getKey());\n@@ -749,7 +749,8 @@ public void remediation() {\n \n         try {\n             // 3. execute the pull task and verify that:\n-            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            ExecTO execution = execProvisioningTask(\n+                    taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // 3a. user was not pulled\n@@ -852,7 +853,8 @@ public void issueSYNCOPE68() {\n             assertFalse(actual.getTemplates().get(AnyTypeKind.USER.name()).getResources().isEmpty());\n             assertFalse(((UserTO) actual.getTemplates().get(AnyTypeKind.USER.name())).getMemberships().isEmpty());\n \n-            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, actual.getKey(), 50, false);\n+            ExecTO execution = execProvisioningTask(\n+                    taskService, TaskType.PULL, actual.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             userTO = userService.read(\"testuser2\");\n@@ -877,7 +879,8 @@ public void issueSYNCOPE230() {\n                 + \"('\" + id + \"', 'issuesyncope230', 'Surname230', false, 'syncope230@syncope.apache.org', NULL)\");\n \n         // 2. execute PullTask for resource-db-pull (table TESTPULL on external H2)\n-        execProvisioningTask(taskService, TaskType.PULL, \"7c2242f4-14af-4ab5-af31-cdae23783655\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PULL, \"7c2242f4-14af-4ab5-af31-cdae23783655\", MAX_WAIT_SECONDS, false);\n \n         // 3. read e-mail address for user created by the PullTask first execution\n         UserTO userTO = userService.read(\"issuesyncope230\");\n@@ -889,7 +892,8 @@ public void issueSYNCOPE230() {\n         jdbcTemplate.execute(\"UPDATE TESTPULL SET email='updatedSYNCOPE230@syncope.apache.org' WHERE id='\" + id + '\\'');\n \n         // 5. re-execute the PullTask\n-        execProvisioningTask(taskService, TaskType.PULL, \"7c2242f4-14af-4ab5-af31-cdae23783655\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PULL, \"7c2242f4-14af-4ab5-af31-cdae23783655\", MAX_WAIT_SECONDS, false);\n \n         // 6. verify that the e-mail was updated\n         userTO = userService.read(\"issuesyncope230\");\n@@ -960,7 +964,7 @@ public void issueSYNCOPE258() throws IOException {\n \n         userService.update(userUR);\n \n-        execProvisioningTask(taskService, TaskType.PULL, task.getKey(), 50, false);\n+        execProvisioningTask(taskService, TaskType.PULL, task.getKey(), MAX_WAIT_SECONDS, false);\n \n         PullTaskTO executed = taskService.read(TaskType.PULL, task.getKey(), true);\n         assertEquals(1, executed.getExecutions().size());\n@@ -986,7 +990,7 @@ public void issueSYNCOPE272() {\n             assertEquals(ExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n \n             ExecTO taskExecTO = execProvisioningTask(\n-                    taskService, TaskType.PULL, \"986867e2-993b-430e-8feb-aa9abb4c1dcd\", 50, false);\n+                    taskService, TaskType.PULL, \"986867e2-993b-430e-8feb-aa9abb4c1dcd\", MAX_WAIT_SECONDS, false);\n \n             assertNotNull(taskExecTO.getStatus());\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(taskExecTO.getStatus()));\n@@ -1030,16 +1034,16 @@ public void issueSYNCOPE307() {\n         taskService.update(TaskType.PULL, task);\n \n         // exec task: one user from CSV will match the user created above and template will be applied\n-        execProvisioningTask(taskService, TaskType.PULL, task.getKey(), 50, false);\n+        execProvisioningTask(taskService, TaskType.PULL, task.getKey(), MAX_WAIT_SECONDS, false);\n \n         // check that template was successfully applied...\n         userTO = userService.read(userTO.getKey());\n         assertEquals(\"virtualvalue\", userTO.getVirAttr(\"virtualdata\").get().getValues().get(0));\n \n         // ...and that propagation to db succeeded\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+        String value = queryForObject(jdbcTemplate,\n+                MAX_WAIT_SECONDS, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virtualvalue\", value);\n     }\n \n@@ -1055,8 +1059,8 @@ public void issueSYNCOPE313DB() throws Exception {\n \n         // 2. Check that the DB resource has the correct password\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        String value = queryForObject(jdbcTemplate,\n+                MAX_WAIT_SECONDS, \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n         assertEquals(Encryptor.getInstance().encode(\"security123\", CipherAlgorithm.SHA1), value.toUpperCase());\n \n         // 3. Update the password in the DB\n@@ -1094,7 +1098,7 @@ public void issueSYNCOPE313DB() throws Exception {\n         assertEquals(actual.getKey(), pullTask.getKey());\n         assertEquals(actual.getJobDelegate(), pullTask.getJobDelegate());\n \n-        ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+        ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n         assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n         // 5. Test the pulled user\n@@ -1179,7 +1183,8 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             pullTask = getObject(taskResponse.getLocation(), TaskService.class, PullTaskTO.class);\n             assertNotNull(pullTask);\n \n-            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            ExecTO execution = execProvisioningTask(\n+                    taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // 7. Test the pulled user\n@@ -1239,7 +1244,8 @@ public void issueSYNCOPE1062() {\n             assertFalse(pullTask.getTemplates().isEmpty());\n \n             // 3. exec the pull task\n-            ExecTO execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            ExecTO execution = execProvisioningTask(\n+                    taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // the user is successfully pulled...\n@@ -1275,7 +1281,7 @@ public void issueSYNCOPE1062() {\n             assertEquals(\"pullFromLDAP2@syncope.apache.org\", connObject.getAttr(\"mail\").get().getValues().get(0));\n \n             // 5. exec the pull task again\n-            execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), 50, false);\n+            execution = execProvisioningTask(taskService, TaskType.PULL, pullTask.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n \n             // the internal is updated..."},{"sha":"5d9c87975086d7ab22b798f4e340efc68a55a2a2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -124,7 +124,8 @@ public void pushMatchingUnmatchingGroups() {\n         assertFalse(groupService.read(\"29f96485-729e-4d31-88a1-6fc60e4677f3\").\n                 getResources().contains(RESOURCE_NAME_LDAP));\n \n-        execProvisioningTask(taskService, TaskType.PUSH, \"fd905ba5-9d56-4f51-83e2-859096a67b75\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PUSH, \"fd905ba5-9d56-4f51-83e2-859096a67b75\", MAX_WAIT_SECONDS, false);\n \n         assertNotNull(resourceService.readConnObject(\n                 RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), \"29f96485-729e-4d31-88a1-6fc60e4677f3\"));\n@@ -149,7 +150,8 @@ public void pushUnmatchingUsers() throws Exception {\n         // ------------------------------------------\n         // Unmatching --> Assign --> dryRuyn\n         // ------------------------------------------\n-        execProvisioningTask(taskService, TaskType.PUSH, \"af558be4-9d2f-4359-bf85-a554e6e90be1\", 50, true);\n+        execProvisioningTask(\n+                taskService, TaskType.PUSH, \"af558be4-9d2f-4359-bf85-a554e6e90be1\", MAX_WAIT_SECONDS, true);\n         assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='vivaldi'\").size());\n         assertFalse(userService.read(\"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\").\n                 getResources().contains(RESOURCE_NAME_TESTDB2));\n@@ -160,7 +162,7 @@ public void pushUnmatchingUsers() throws Exception {\n         pushTaskKeys.add(\"97f327b6-2eff-4d35-85e8-d581baaab855\");\n         pushTaskKeys.add(\"03aa2a04-4881-4573-9117-753f81b04865\");\n         pushTaskKeys.add(\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\");\n-        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, 50, false);\n+        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, MAX_WAIT_SECONDS, false);\n \n         // ------------------------------------------\n         // Unatching --> Ignore\n@@ -211,7 +213,8 @@ public void pushMatchingUser() throws Exception {\n         // ------------------------------------------\n         // Matching --> Deprovision --> dryRuyn\n         // ------------------------------------------\n-        execProvisioningTask(taskService, TaskType.PUSH, \"c46edc3a-a18b-4af2-b707-f4a415507496\", 50, true);\n+        execProvisioningTask(\n+                taskService, TaskType.PUSH, \"c46edc3a-a18b-4af2-b707-f4a415507496\", MAX_WAIT_SECONDS, true);\n         assertTrue(userService.read(\"1417acbe-cbf6-4277-9372-e75e04f97000\").\n                 getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='rossini'\").size());\n@@ -222,7 +225,7 @@ public void pushMatchingUser() throws Exception {\n         pushTaskKeys.add(\"c46edc3a-a18b-4af2-b707-f4a415507496\");\n         pushTaskKeys.add(\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\");\n \n-        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, 50, false);\n+        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, MAX_WAIT_SECONDS, false);\n \n         // ------------------------------------------\n         // Matching --> Deprovision && Ignore\n@@ -245,7 +248,8 @@ public void pushMatchingUser() throws Exception {\n         // ------------------------------------------\n         // Matching --> Link\n         // ------------------------------------------\n-        execProvisioningTask(taskService, TaskType.PUSH, \"51318433-cce4-4f71-8f45-9534b6c9c819\", 50, false);\n+        execProvisioningTask(\n+                taskService, TaskType.PUSH, \"51318433-cce4-4f71-8f45-9534b6c9c819\", MAX_WAIT_SECONDS, false);\n         assertTrue(userService.read(\"74cd8ece-715a-44a4-a736-e17b46c4e7e6\").\n                 getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n@@ -255,7 +259,7 @@ public void pushMatchingUser() throws Exception {\n         pushTaskKeys.add(\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\");\n         pushTaskKeys.add(\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\");\n \n-        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, 50, false);\n+        execProvisioningTasks(taskService, TaskType.PUSH, pushTaskKeys, MAX_WAIT_SECONDS, false);\n \n         // ------------------------------------------\n         // Matching --> Unlink && Update\n@@ -293,7 +297,7 @@ public void pushPolicy() {\n             assertNotNull(sendVivaldi);\n \n             // 3. execute push: vivaldi is found on ldap\n-            execProvisioningTask(taskService, TaskType.PUSH, sendVivaldi.getKey(), 50, false);\n+            execProvisioningTask(taskService, TaskType.PUSH, sendVivaldi.getKey(), MAX_WAIT_SECONDS, false);\n \n             ReconStatus status = reconciliationService.status(\n                     new ReconQuery.Builder(AnyTypeKind.USER.name(), RESOURCE_NAME_LDAP).anyKey(\"vivaldi\").build());\n@@ -311,7 +315,7 @@ public void pushPolicy() {\n \n             // 5. execute push again: propagation task for CREATE will be generated, but that will fail\n             // as task executor is not able any more to identify the entry to UPDATE\n-            execProvisioningTask(taskService, TaskType.PUSH, sendVivaldi.getKey(), 50, false);\n+            execProvisioningTask(taskService, TaskType.PUSH, sendVivaldi.getKey(), MAX_WAIT_SECONDS, false);\n \n             status = reconciliationService.status(\n                     new ReconQuery.Builder(AnyTypeKind.USER.name(), RESOURCE_NAME_LDAP).anyKey(\"vivaldi\").build());\n@@ -342,7 +346,7 @@ public void orgUnit() {\n         PushTaskTO pushTask = getObject(response.getLocation(), TaskService.class, PushTaskTO.class);\n         assertNotNull(pushTask);\n \n-        ExecTO exec = execProvisioningTask(taskService, TaskType.PUSH, pushTask.getKey(), 50, false);\n+        ExecTO exec = execProvisioningTask(taskService, TaskType.PUSH, pushTask.getKey(), MAX_WAIT_SECONDS, false);\n         assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n \n         // 2. check\n@@ -430,7 +434,7 @@ public void issueSYNCOPE598() {\n             assertNotNull(push);\n \n             // execute the new task\n-            ExecTO exec = execProvisioningTask(taskService, TaskType.PUSH, push.getKey(), 50, false);\n+            ExecTO exec = execProvisioningTask(taskService, TaskType.PUSH, push.getKey(), MAX_WAIT_SECONDS, false);\n             assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(exec.getStatus()));\n         } finally {\n             groupService.delete(groupTO.getKey());\n@@ -479,7 +483,7 @@ public void issueSYNCOPE648() {\n         notification = getObject(responseNotification.getLocation(), NotificationService.class, NotificationTO.class);\n         assertNotNull(notification);\n \n-        execProvisioningTask(taskService, TaskType.PUSH, actual.getKey(), 50, false);\n+        execProvisioningTask(taskService, TaskType.PUSH, actual.getKey(), MAX_WAIT_SECONDS, false);\n \n         NotificationTaskTO taskTO = findNotificationTask(notification.getKey(), 50);\n         assertNotNull(taskTO);"},{"sha":"918175c7333a7d29f49a998de5056e4728c9c19d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -72,7 +72,6 @@ protected static String execReport(final String reportKey) {\n         assertNotNull(exec.getExecutor());\n \n         int i = 0;\n-        int maxit = 50;\n \n         // wait for completion (executions incremented)\n         do {\n@@ -87,8 +86,8 @@ protected static String execReport(final String reportKey) {\n             assertNotNull(reportTO.getExecutions());\n \n             i++;\n-        } while (preExecSize == reportTO.getExecutions().size() && i < maxit);\n-        if (i == maxit) {\n+        } while (preExecSize == reportTO.getExecutions().size() && i < MAX_WAIT_SECONDS);\n+        if (i == MAX_WAIT_SECONDS) {\n             fail(\"Timeout when executing report \" + reportKey);\n         }\n         exec = reportTO.getExecutions().get(reportTO.getExecutions().size() - 1);\n@@ -361,7 +360,7 @@ public void issueSYNCOPE43() {\n         ExecTO execution = reportService.execute(new ExecuteQuery.Builder().key(reportTO.getKey()).build());\n         assertNotNull(execution);\n \n-        int maxit = 50;\n+        int maxit = MAX_WAIT_SECONDS;\n         do {\n             try {\n                 Thread.sleep(1000);\n@@ -392,7 +391,7 @@ public void issueSYNCOPE102() throws IOException {\n         }\n \n         // Wait for one execution\n-        int maxit = 50;\n+        int maxit = MAX_WAIT_SECONDS;\n         do {\n             try {\n                 Thread.sleep(1000);"},{"sha":"901b46f6903036d9c2ac58490491434f2d58a841","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -20,7 +20,6 @@\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -32,7 +31,6 @@\n import java.util.Optional;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n@@ -41,7 +39,6 @@\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.OrgUnitTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -509,44 +506,6 @@ public void read() {\n         assertFalse(provision.get().getMapping().getLinkingItems().isEmpty());\n     }\n \n-    @Test\n-    public void history() {\n-        List<ResourceHistoryConfTO> history = resourceHistoryService.list(RESOURCE_NAME_LDAP);\n-        assertNotNull(history);\n-        int pre = history.size();\n-\n-        ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n-        TraceLevel originalTraceLevel = SerializationUtils.clone(ldap.getUpdateTraceLevel());\n-        assertEquals(TraceLevel.ALL, originalTraceLevel);\n-        ProvisionTO originalProvision = SerializationUtils.clone(ldap.getProvision(AnyTypeKind.USER.name()).get());\n-        assertEquals(ObjectClass.ACCOUNT_NAME, originalProvision.getObjectClass());\n-        boolean originalFlag = ldap.isRandomPwdIfNotProvided();\n-        assertTrue(originalFlag);\n-\n-        ldap.setUpdateTraceLevel(TraceLevel.FAILURES);\n-        ldap.getProvision(AnyTypeKind.USER.name()).get().setObjectClass(\"ANOTHER\");\n-        ldap.setRandomPwdIfNotProvided(false);\n-        resourceService.update(ldap);\n-\n-        ldap = resourceService.read(RESOURCE_NAME_LDAP);\n-        assertNotEquals(originalTraceLevel, ldap.getUpdateTraceLevel());\n-        assertNotEquals(\n-                originalProvision.getObjectClass(), ldap.getProvision(AnyTypeKind.USER.name()).get().getObjectClass());\n-        assertNotEquals(originalFlag, ldap.isRandomPwdIfNotProvided());\n-\n-        history = resourceHistoryService.list(RESOURCE_NAME_LDAP);\n-        assertEquals(pre + 1, history.size());\n-\n-        resourceHistoryService.restore(history.get(0).getKey());\n-\n-        ldap = resourceService.read(RESOURCE_NAME_LDAP);\n-        assertEquals(originalTraceLevel, ldap.getUpdateTraceLevel());\n-        assertEquals(\n-                originalProvision.getObjectClass(),\n-                ldap.getProvision(AnyTypeKind.USER.name()).get().getObjectClass());\n-        assertEquals(originalFlag, ldap.isRandomPwdIfNotProvided());\n-    }\n-\n     @Test\n     public void authorizations() {\n         SyncopeClient puccini = clientFactory.create(\"puccini\", ADMIN_PWD);"},{"sha":"3750c0b49320d009d6c8df52f3ff56caf86af259","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SchedTaskITCase.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -106,7 +106,6 @@ public void deferred() {\n         taskService.execute(new ExecuteQuery.Builder().key(task.getKey()).startAt(later).build());\n \n         int i = 0;\n-        int maxit = 50;\n \n         // wait for completion (executions incremented)\n         do {\n@@ -121,7 +120,7 @@ public void deferred() {\n             assertNotNull(task.getExecutions());\n \n             i++;\n-        } while (task.getExecutions().isEmpty() && i < maxit);\n+        } while (task.getExecutions().isEmpty() && i < MAX_WAIT_SECONDS);\n \n         PagedResult<ExecTO> execs =\n                 taskService.listExecutions(new ExecQuery.Builder().key(task.getKey()).build());\n@@ -185,7 +184,7 @@ public void issueSYNCOPE660() {\n \n         taskService.actionJob(task.getKey(), JobAction.START);\n \n-        int i = 0, maxit = 50;\n+        int i = 0;\n \n         do {\n             try {\n@@ -196,7 +195,7 @@ public void issueSYNCOPE660() {\n \n             jobs = taskService.listJobs().stream().filter(JobTO::isRunning).collect(Collectors.toList());\n             i++;\n-        } while (jobs.size() < 1 && i < maxit);\n+        } while (jobs.size() < 1 && i < MAX_WAIT_SECONDS);\n \n         assertEquals(1, jobs.size());\n         assertEquals(task.getKey(), jobs.get(0).getRefKey());\n@@ -214,7 +213,7 @@ public void issueSYNCOPE660() {\n \n             jobs = taskService.listJobs().stream().filter(JobTO::isRunning).collect(Collectors.toList());\n             i++;\n-        } while (jobs.size() >= 1 && i < maxit);\n+        } while (jobs.size() >= 1 && i < MAX_WAIT_SECONDS);\n \n         assertTrue(jobs.isEmpty());\n     }"},{"sha":"91fb3e680362586acc82f18d2c1115d244ec475f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -153,7 +153,7 @@ public void issue213() {\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n         String username = queryForObject(\n-                jdbcTemplate, 50, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+                jdbcTemplate, MAX_WAIT_SECONDS, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n         assertEquals(userTO.getUsername(), username);\n \n         UserUR userUR = new UserUR();"},{"sha":"88dae6866940af2b4aa62db8f9d85325b15aec9b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -316,8 +316,8 @@ public void passwordReset() {\n \n         // verify propagation (including password) on external db\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String pwdOnResource = queryForObject(\n-                jdbcTemplate, 50, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n+        String pwdOnResource = queryForObject(jdbcTemplate,\n+                MAX_WAIT_SECONDS, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n         assertTrue(StringUtils.isNotBlank(pwdOnResource));\n \n         // 2. verify that new user is able to authenticate\n@@ -370,8 +370,8 @@ public void passwordReset() {\n         assertNull(read.getToken());\n \n         // 7. verify that password was changed on external resource\n-        String newPwdOnResource = queryForObject(\n-                jdbcTemplate, 50, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n+        String newPwdOnResource = queryForObject(jdbcTemplate,\n+                MAX_WAIT_SECONDS, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n         assertTrue(StringUtils.isNotBlank(newPwdOnResource));\n         assertNotEquals(pwdOnResource, newPwdOnResource);\n     }\n@@ -605,8 +605,8 @@ public void createWithApproval() {\n         assertEquals(\"active\", userTO.getStatus());\n         assertEquals(Set.of(RESOURCE_NAME_TESTDB), userTO.getResources());\n \n-        String username = queryForObject(\n-                jdbcTemplate, 50, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+        String username = queryForObject(jdbcTemplate,\n+                MAX_WAIT_SECONDS, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n         assertEquals(userTO.getUsername(), username);\n \n         // 6. update user"},{"sha":"05b65c8e785b40a343b3726c4401f80d573f99ea","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -223,14 +223,14 @@ public void virAttrCache() {\n \n         // 3. update virtual attribute directly\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n+        String value = queryForObject(jdbcTemplate, \n+                MAX_WAIT_SECONDS, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache\", value);\n \n         jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", actual.getKey());\n \n-        value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n+        value = queryForObject(jdbcTemplate, \n+                MAX_WAIT_SECONDS, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache2\", value);\n \n         // 4. check for cached attribute value\n@@ -381,13 +381,13 @@ public void issueSYNCOPE442() {\n         // ----------------------------------------\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n         String value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+                jdbcTemplate, MAX_WAIT_SECONDS, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache\", value);\n \n         jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", userTO.getKey());\n \n         value = queryForObject(\n-                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+                jdbcTemplate, MAX_WAIT_SECONDS, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache2\", value);\n         // ----------------------------------------\n "},{"sha":"ecbfe4f40b7feb85c705e8523312ebdd06df502e","filename":"src/main/asciidoc/reference-guide/concepts/externalresources.adoc","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -221,21 +221,6 @@ example, which leverage the `syncope:fullPath2Dn()` custom JEXL function:\n * Groups: `'cn=' + name + syncope:fullPath2Dn(realm, 'ou', ',') + ',o=isp'`\n ====\n \n-[[connectors-resources-history]]\n-[NOTE]\n-.Connector Instances and External Resources Configuration History Management\n-====\n-When either developing an IdM solution or managing a production deployment, it often happens to play with\n-Connector Instances and / or External Resources configuration; sometimes, this results in failures which prevent\n-<<provisioning,provisioning>> to work properly.\n-\n-In such situations it is possible to revert a Connector Instance's and / or External Resource's configuration to a\n-previous working state.\n-\n-The maximum number of configurations to keep, for each Connector Instance and for each External Resource, is set by\n-`connector.conf.history.size` and `resource.conf.history.size`: see <<configuration-parameters, below>> for details.\n-====\n-\n ==== Linked Accounts\n \n Sometimes the information provided by the <<mapping,mapping>> is not enough to define a one-to-one correspondence"},{"sha":"4a4ec6a2c69e8ee60e8babb18012f8aeb175864c","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/configurationparameters.adoc","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fconfigurationparameters.adoc?ref=ca8eb4fdb75c391ecb59987d76d1fdc08bd82deb","patch":"@@ -57,10 +57,6 @@ mechanism to work properly;\n Suspended Users are anyway not allowed to authenticate.\n * `log.lastlogindate` - whether the system updates the `lastLoginDate` field of users upon authentication;\n * `return.password.value` - whether the hashed password value shall be returned when reading users;\n-* `connector.conf.history.size` - how many previous configurations shall be kept for each Connector Instance,\n-for usage with <<connectors-resources-history, connectors and resources configuration history management>>;\n-* `resource.conf.history.size` - how many previous configurations shall be kept for each External Resource,\n-for usage with <<connectors-resources-history, connectors and resources configuration history management>>;\n * `connector.test.timeout` - timeout (in seconds) to check connector connection in <<Admin Console>>;\n `0` to skip any check;\n "}]}