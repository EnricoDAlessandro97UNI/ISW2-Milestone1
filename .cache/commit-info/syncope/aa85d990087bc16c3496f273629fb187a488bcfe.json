{"sha":"aa85d990087bc16c3496f273629fb187a488bcfe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFhODVkOTkwMDg3YmMxNmMzNDk2ZjI3MzYyOWZiMTg3YTQ4OGJjZmU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-07-28T15:54:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-07-28T16:03:02Z"},"message":"[SYNCOPE-1166] Cleaning up the generation of propagation update tasks with mixed resources","tree":{"sha":"f4923127bb9ee6b8cd516d157d4fffdff24f4d31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f4923127bb9ee6b8cd516d157d4fffdff24f4d31"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/aa85d990087bc16c3496f273629fb187a488bcfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa85d990087bc16c3496f273629fb187a488bcfe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa85d990087bc16c3496f273629fb187a488bcfe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa85d990087bc16c3496f273629fb187a488bcfe/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a9cc9e76005a10fc75dec63665951e042aef72bc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9cc9e76005a10fc75dec63665951e042aef72bc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9cc9e76005a10fc75dec63665951e042aef72bc"}],"stats":{"total":163,"additions":75,"deletions":88},"files":[{"sha":"d794e61a736bbc8450d8303a57e8ca0db09c5b4f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -108,7 +108,7 @@ public Pair<String, List<PropagationStatus>> create(\n                 excludedResources);\n         PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n \n-        return new ImmutablePair<>(created.getResult(), null);\n+        return new ImmutablePair<>(created.getResult(), propagationReporter.getStatuses());\n     }\n \n     @Override"},{"sha":"c950a6fcab4d29c9f6ebcffa5f3cc78519cd7874","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -26,7 +26,6 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -94,20 +93,6 @@ abstract class AbstractAnyDataBinder {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractAnyDataBinder.class);\n \n-    protected static class PropByResContains implements Predicate<String> {\n-\n-        private final PropagationByResource propByRes;\n-\n-        PropByResContains(final PropagationByResource propByRes) {\n-            this.propByRes = propByRes;\n-        }\n-\n-        @Override\n-        public boolean evaluate(final String resourceKey) {\n-            return !propByRes.contains(resourceKey);\n-        }\n-    }\n-\n     @Autowired\n     protected SchemaDataBinder schemaDataBinder;\n "},{"sha":"523d16543564eaa5b43b200f7e680ca9043dd304","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":4,"deletions":24,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -25,7 +25,6 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n@@ -131,13 +130,13 @@ public MembershipTO transform(final AMembership membership) {\n \n             // dynamic memberships\n             CollectionUtils.collect(anyObjectDAO.findDynGroups(anyObject.getKey()),\n-                                    new Transformer<Group, MembershipTO>() {\n+                    new Transformer<Group, MembershipTO>() {\n \n                 @Override\n                 public MembershipTO transform(final Group group) {\n                     MembershipTO membershipTO = new MembershipTO.Builder().\n-                        group(group.getKey(), group.getName()).\n-                        build();\n+                            group(group.getKey(), group.getName()).\n+                            build();\n                     return membershipTO;\n \n                 }\n@@ -449,26 +448,7 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n             }\n         }\n \n-        // finally double-check that there are no resources owned (after all changes above) that remain\n-        // not considered for provisioning\n-        anyObject = anyObjectDAO.save(anyObject);\n-        PropByResContains propByResContains = new PropByResContains(propByRes);\n-        Collection<String> prospectResources = anyObjectDAO.findAllResourceKeys(anyObject.getKey());\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(currentResources, prospectResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.DELETE, resourceKey);\n-        }\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(prospectResources, currentResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.CREATE, resourceKey);\n-        }\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(prospectResources, currentResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.UPDATE, resourceKey);\n-        }\n+        anyObjectDAO.save(anyObject);\n \n         // Throw composite exception if there is at least one element set in the composing exceptions\n         if (scce.hasExceptions()) {"},{"sha":"e9369c7cb953aafe5cad9a43a2ca8f8be46afcbe","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":1,"deletions":20,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -551,26 +551,7 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n             }\n         }\n \n-        // finally double-check that there are no resources owned (after all changes above) that remain\n-        // not considered for provisioning\n-        user = userDAO.save(user);\n-        PropByResContains propByResContains = new PropByResContains(propByRes);\n-        Collection<String> prospectResources = userDAO.findAllResourceKeys(user.getKey());\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(currentResources, prospectResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.DELETE, resourceKey);\n-        }\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(prospectResources, currentResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.CREATE, resourceKey);\n-        }\n-        for (String resourceKey : IterableUtils.filteredIterable(\n-                CollectionUtils.intersection(prospectResources, currentResources), propByResContains)) {\n-\n-            propByRes.add(ResourceOperation.UPDATE, resourceKey);\n-        }\n+        userDAO.save(user);\n \n         // Throw composite exception if there is at least one element set in the composing exceptions\n         if (scce.hasExceptions()) {"},{"sha":"6b459d51747e4f5f97827a2a7fe7bf1fe54a237e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":21,"deletions":19,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -199,7 +199,7 @@ public List<PropagationTask> getUserUpdateTasks(\n             final Collection<String> noPropResourceKeys) {\n \n         return getUpdateTasks(\n-                userDAO.authFind(wfResult.getResult().getKey().getKey()),\n+                userDAO.authFind(wfResult.getResult().getLeft().getKey()),\n                 wfResult.getResult().getKey().getPassword() == null\n                 ? null\n                 : wfResult.getResult().getKey().getPassword().getValue(),\n@@ -222,34 +222,36 @@ public List<PropagationTask> getUserUpdateTasks(final WorkflowResult<Pair<UserPa\n         } else {\n             // b. generate the propagation task list in two phases: first the ones containing password,\n             // the the rest (with no password)\n-            PropagationByResource origPropByRes = new PropagationByResource();\n-            origPropByRes.merge(wfResult.getPropByRes());\n+            WorkflowResult<Pair<UserPatch, Boolean>> pwdWFResult = new WorkflowResult<>(\n+                    wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n \n             Set<String> pwdResourceNames = new HashSet<>(userPatch.getPassword().getResources());\n-            Collection<String> currentResourceNames = userDAO.findAllResourceKeys(userPatch.getKey());\n-            pwdResourceNames.retainAll(currentResourceNames);\n-            PropagationByResource pwdPropByRes = new PropagationByResource();\n-            pwdPropByRes.addAll(ResourceOperation.UPDATE, pwdResourceNames);\n-            if (!pwdPropByRes.isEmpty()) {\n-                Set<String> toBeExcluded = new HashSet<>(currentResourceNames);\n-                toBeExcluded.addAll(CollectionUtils.collect(userPatch.getResources(),\n-                        new Transformer<StringPatchItem, String>() {\n+            Collection<String> allResourceNames = userDAO.findAllResourceKeys(userPatch.getKey());\n+            pwdResourceNames.retainAll(allResourceNames);\n+\n+            pwdWFResult.getPropByRes().addAll(ResourceOperation.UPDATE, pwdResourceNames);\n+            if (!pwdWFResult.getPropByRes().isEmpty()) {\n+                Set<String> toBeExcluded = new HashSet<>(allResourceNames);\n+                CollectionUtils.collect(userPatch.getResources(), new Transformer<StringPatchItem, String>() {\n \n                     @Override\n                     public String transform(final StringPatchItem input) {\n                         return input.getValue();\n                     }\n-                }));\n+                }, toBeExcluded);\n                 toBeExcluded.removeAll(pwdResourceNames);\n-                tasks.addAll(getUserUpdateTasks(wfResult, true, toBeExcluded));\n+\n+                tasks.addAll(getUserUpdateTasks(pwdWFResult, true, toBeExcluded));\n             }\n \n-            PropagationByResource nonPwdPropByRes = new PropagationByResource();\n-            nonPwdPropByRes.merge(origPropByRes);\n-            nonPwdPropByRes.removeAll(pwdResourceNames);\n-            nonPwdPropByRes.purge();\n-            if (!nonPwdPropByRes.isEmpty()) {\n-                tasks.addAll(getUserUpdateTasks(wfResult, false, pwdResourceNames));\n+            WorkflowResult<Pair<UserPatch, Boolean>> noPwdWFResult = new WorkflowResult<>(\n+                    wfResult.getResult(), new PropagationByResource(), wfResult.getPerformedTasks());\n+\n+            noPwdWFResult.getPropByRes().merge(wfResult.getPropByRes());\n+            noPwdWFResult.getPropByRes().removeAll(pwdResourceNames);\n+            noPwdWFResult.getPropByRes().purge();\n+            if (!noPwdWFResult.getPropByRes().isEmpty()) {\n+                tasks.addAll(getUserUpdateTasks(noPwdWFResult, false, pwdResourceNames));\n             }\n         }\n "},{"sha":"dcc2e824746b1e69dedea48def19e18db62fe824","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractAnyObjectWorkflowAdapter.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -60,7 +60,12 @@ public WorkflowResult<String> create(final AnyObjectTO anyObjectTO) {\n \n     @Override\n     public WorkflowResult<String> update(final AnyObjectPatch anyObjectPatch) {\n-        return doUpdate(anyObjectDAO.authFind(anyObjectPatch.getKey()), anyObjectPatch);\n+        WorkflowResult<String> result = doUpdate(anyObjectDAO.authFind(anyObjectPatch.getKey()), anyObjectPatch);\n+\n+        // re-read to ensure that requester's administration rights are still valid\n+        anyObjectDAO.authFind(anyObjectPatch.getKey());\n+\n+        return result;\n     }\n \n     protected abstract void doDelete(AnyObject anyObject);"},{"sha":"3f5394b57d213f03790ac830b14bb3382914b124","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractGroupWorkflowAdapter.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -59,7 +59,12 @@ public WorkflowResult<String> create(final GroupTO groupTO) {\n \n     @Override\n     public WorkflowResult<String> update(final GroupPatch groupPatch) {\n-        return doUpdate(groupDAO.authFind(groupPatch.getKey()), groupPatch);\n+        WorkflowResult<String> result = doUpdate(groupDAO.authFind(groupPatch.getKey()), groupPatch);\n+\n+        // re-read to ensure that requester's administration rights are still valid\n+        groupDAO.authFind(groupPatch.getKey());\n+\n+        return result;\n     }\n \n     protected abstract void doDelete(Group group);"},{"sha":"8f3b9c72b9a4d49def373c77f184e1e93a159c7b","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractUserWorkflowAdapter.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -102,7 +102,12 @@ public WorkflowResult<String> activate(final String key, final String token) {\n \n     @Override\n     public WorkflowResult<Pair<UserPatch, Boolean>> update(final UserPatch userPatch) {\n-        return doUpdate(userDAO.authFind(userPatch.getKey()), userPatch);\n+        WorkflowResult<Pair<UserPatch, Boolean>> result = doUpdate(userDAO.authFind(userPatch.getKey()), userPatch);\n+\n+        // re-read to ensure that requester's administration rights are still valid\n+        userDAO.authFind(userPatch.getKey());\n+\n+        return result;\n     }\n \n     protected abstract WorkflowResult<String> doSuspend(User user);"},{"sha":"bd58a36f4a43da099a1dc13b03e68f344a06fd9c","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/ProvisionProducer.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FProvisionProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FProvisionProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FProvisionProducer.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -71,9 +71,7 @@ public StringPatchItem transform(final String resource) {\n             }\n \n             PropagationByResource propByRes = new PropagationByResource();\n-            for (String resource : resources) {\n-                propByRes.add(ResourceOperation.UPDATE, resource);\n-            }\n+            propByRes.addAll(ResourceOperation.UPDATE, resources);\n \n             WorkflowResult<Pair<UserPatch, Boolean>> wfResult = new WorkflowResult<Pair<UserPatch, Boolean>>(\n                     ImmutablePair.of(userPatch, (Boolean) null), propByRes, \"update\");"},{"sha":"3125d261f4d060a64c3c86b877341d488c4b2ea8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.fit.console;\n \n-import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n "},{"sha":"7d745a78cccef43eb40d8419980b6101d7235862","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DynRealmITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -185,8 +185,7 @@ public boolean evaluate(final UserTO object) {\n             userPatch.setKey(userKey);\n             userPatch.getResources().add(new StringPatchItem.Builder().\n                     value(RESOURCE_NAME_LDAP).operation(PatchOperation.DELETE).build());\n-            // this will fail because unassigning resource-ldap would result in removing the user\n-            // from the dynamic realm\n+            // this will fail because unassigning resource-ldap would result in removing the user from the dynamic realm\n             try {\n                 delegatedUserService.update(userPatch);\n                 fail();"},{"sha":"f60c4a619099b0c6e9b6d1e235d4e7143c1a3b35","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/aa85d990087bc16c3496f273629fb187a488bcfe/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=aa85d990087bc16c3496f273629fb187a488bcfe","patch":"@@ -1357,4 +1357,32 @@ public void issueSYNCOPE1099() {\n         assertFalse(created.getPropagationStatuses().isEmpty());\n         assertEquals(RESOURCE_NAME_TESTDB, created.getPropagationStatuses().get(0).getResource());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1166() {\n+        UserTO userTO = UserITCase.getUniqueSampleTO(\"syncope1166@apache.org\");\n+        userTO = createUser(userTO).getEntity();\n+        assertNotNull(userTO);\n+\n+        UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(userTO.getKey());\n+        // resource-ldap has password mapped, resource-db-virattr does not\n+        userPatch.setPassword(new PasswordPatch.Builder().\n+                onSyncope(true).\n+                resource(RESOURCE_NAME_LDAP).\n+                value(\"new2Password\").build());\n+\n+        userPatch.getResources().add(new StringPatchItem.Builder().\n+                operation(PatchOperation.ADD_REPLACE).value(RESOURCE_NAME_LDAP).build());\n+        userPatch.getResources().add(new StringPatchItem.Builder().\n+                operation(PatchOperation.ADD_REPLACE).value(RESOURCE_NAME_DBVIRATTR).build());\n+\n+        ProvisioningResult<UserTO> result = updateUser(userPatch);\n+        assertNotNull(result);\n+        assertEquals(2, result.getPropagationStatuses().size());\n+        assertEquals(RESOURCE_NAME_LDAP, result.getPropagationStatuses().get(0).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n+        assertEquals(RESOURCE_NAME_DBVIRATTR, result.getPropagationStatuses().get(1).getResource());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(1).getStatus());\n+    }\n }"}]}