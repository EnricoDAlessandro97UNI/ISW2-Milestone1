{"sha":"4fdf1c4356b8b527e7482c9983b53c28f85b5501","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRmZGYxYzQzNTZiOGI1MjdlNzQ4MmM5OTgzYjUzYzI4Zjg1YjU1MDE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-04T14:49:34Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-04T14:49:41Z"},"message":"Various small fixes","tree":{"sha":"bfc220410f52959a9d24922513db8894d3a81d53","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bfc220410f52959a9d24922513db8894d3a81d53"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4fdf1c4356b8b527e7482c9983b53c28f85b5501","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fdf1c4356b8b527e7482c9983b53c28f85b5501","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4fdf1c4356b8b527e7482c9983b53c28f85b5501","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fdf1c4356b8b527e7482c9983b53c28f85b5501/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0f51a1ac59fbc736399adefc12b99ee90dde007b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f51a1ac59fbc736399adefc12b99ee90dde007b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f51a1ac59fbc736399adefc12b99ee90dde007b"}],"stats":{"total":111,"additions":66,"deletions":45},"files":[{"sha":"88a69651f91ce48970ad79c8fe891b7b21c4fd36","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":41,"deletions":16,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -24,6 +24,7 @@\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n import java.io.File;\n import java.io.InputStream;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Enumeration;\n@@ -32,7 +33,8 @@\n import java.util.Locale;\n import java.util.Map;\n import java.util.Properties;\n-import javax.ws.rs.core.MediaType;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.ClassUtils;\n@@ -47,8 +49,13 @@\n import org.apache.syncope.client.console.resources.WorkflowDefGETResource;\n import org.apache.syncope.client.console.resources.WorkflowDefPUTResource;\n import org.apache.syncope.client.console.themes.AdminLTE;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.DomainTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.wicket.Page;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n@@ -93,7 +100,17 @@ public static SyncopeConsoleApplication get() {\n \n     private String reconciliationReportKey;\n \n-    private SyncopeClientFactoryBean clientFactory;\n+    private String scheme;\n+\n+    private String host;\n+\n+    private String port;\n+\n+    private String rootPath;\n+\n+    private String useGZIPCompression;\n+\n+    private List<String> domains;\n \n     private Map<String, Class<? extends BasePage>> pageClasses;\n \n@@ -146,21 +163,17 @@ protected void init() {\n         anonymousKey = props.getProperty(\"anonymousKey\");\n         Args.notNull(anonymousKey, \"<anonymousKey>\");\n \n-        String scheme = props.getProperty(\"scheme\");\n+        scheme = props.getProperty(\"scheme\");\n         Args.notNull(scheme, \"<scheme>\");\n-        String host = props.getProperty(\"host\");\n+        host = props.getProperty(\"host\");\n         Args.notNull(host, \"<host>\");\n-        String port = props.getProperty(\"port\");\n+        port = props.getProperty(\"port\");\n         Args.notNull(port, \"<port>\");\n-        String rootPath = props.getProperty(\"rootPath\");\n+        rootPath = props.getProperty(\"rootPath\");\n         Args.notNull(rootPath, \"<rootPath>\");\n-        String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n+        useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n         Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n \n-        clientFactory = new SyncopeClientFactoryBean().\n-                setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath).\n-                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n-\n         // process page properties\n         pageClasses = new HashMap<>();\n         populatePageClasses(props);\n@@ -287,12 +300,24 @@ public String getReconciliationReportKey() {\n         return reconciliationReportKey;\n     }\n \n-    public SyncopeClientFactoryBean getClientFactory() {\n-        return clientFactory;\n+    public SyncopeClientFactoryBean newClientFactory() {\n+        return new SyncopeClientFactoryBean().\n+                setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath).\n+                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n     }\n \n-    public MediaType getMediaType() {\n-        return clientFactory.getContentType().getMediaType();\n+    public List<String> getDomains() {\n+        synchronized (LOG) {\n+            if (domains == null) {\n+                domains = new ArrayList<>();\n+                domains.add(SyncopeConstants.MASTER_DOMAIN);\n+                CollectionUtils.collect(newClientFactory().create(\n+                        new AnonymousAuthenticationHandler(anonymousUser, anonymousKey)).\n+                        getService(DomainService.class).list(),\n+                        EntityTOUtils.<DomainTO>keyTransformer(), domains);\n+                domains = ListUtils.unmodifiableList(domains);\n+            }\n+        }\n+        return domains;\n     }\n-\n }"},{"sha":"5c3c7503cf09e37bcc28baebbe20350e6ba40d0d","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":14,"deletions":24,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -19,18 +19,15 @@\n package org.apache.syncope.client.console;\n \n import java.text.DateFormat;\n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -39,12 +36,9 @@\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.EntityTOUtils;\n-import org.apache.syncope.common.lib.to.DomainTO;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n@@ -72,14 +66,14 @@ public class SyncopeConsoleSession extends AuthenticatedWebSession {\n         THREAD_POOL_FACTORY.setDaemon(true);\n     }\n \n+    private final SyncopeClientFactoryBean clientFactory;\n+\n     private final SyncopeClient anonymousClient;\n \n     private final PlatformInfo platformInfo;\n \n     private final SystemInfo systemInfo;\n \n-    private final List<String> domains;\n-\n     private String domain;\n \n     private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<Class<?>, Object>());\n@@ -101,18 +95,18 @@ public static SyncopeConsoleSession get() {\n     public SyncopeConsoleSession(final Request request) {\n         super(request);\n \n-        anonymousClient = SyncopeConsoleApplication.get().getClientFactory().\n+        clientFactory = SyncopeConsoleApplication.get().newClientFactory();\n+        anonymousClient = clientFactory.\n                 create(new AnonymousAuthenticationHandler(\n                         SyncopeConsoleApplication.get().getAnonymousUser(),\n                         SyncopeConsoleApplication.get().getAnonymousKey()));\n \n         platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n         systemInfo = anonymousClient.getService(SyncopeService.class).system();\n+    }\n \n-        domains = new ArrayList<>();\n-        domains.add(SyncopeConstants.MASTER_DOMAIN);\n-        CollectionUtils.collect(anonymousClient.getService(DomainService.class).list(),\n-                EntityTOUtils.<DomainTO>keyTransformer(), domains);\n+    public MediaType getMediaType() {\n+        return clientFactory.getContentType().getMediaType();\n     }\n \n     public SyncopeClient getAnonymousClient() {\n@@ -131,10 +125,6 @@ public SystemInfo getSystemInfo() {\n         return systemInfo;\n     }\n \n-    public List<String> getDomains() {\n-        return domains;\n-    }\n-\n     public void setDomain(final String domain) {\n         this.domain = domain;\n     }\n@@ -158,7 +148,7 @@ public boolean authenticate(final String username, final String password) {\n         boolean authenticated = false;\n \n         try {\n-            client = SyncopeConsoleApplication.get().getClientFactory().\n+            client = clientFactory.\n                     setDomain(getDomain()).create(username, password);\n \n             afterAuthentication();\n@@ -175,7 +165,7 @@ public boolean authenticate(final String jwt) {\n         boolean authenticated = false;\n \n         try {\n-            client = SyncopeConsoleApplication.get().getClientFactory().\n+            client = clientFactory.\n                     setDomain(getDomain()).create(jwt);\n \n             afterAuthentication();\n@@ -275,15 +265,15 @@ public <T> T getService(final String etag, final Class<T> serviceClass) {\n     public <T> T getService(final MediaType mediaType, final Class<T> serviceClass) {\n         T service;\n \n-        synchronized (SyncopeConsoleApplication.get().getClientFactory()) {\n-            SyncopeClientFactoryBean.ContentType preType = SyncopeConsoleApplication.get().getClientFactory().\n+        synchronized (clientFactory) {\n+            SyncopeClientFactoryBean.ContentType preType = clientFactory.\n                     getContentType();\n \n-            SyncopeConsoleApplication.get().getClientFactory().\n+            clientFactory.\n                     setContentType(SyncopeClientFactoryBean.ContentType.fromString(mediaType.toString()));\n-            service = SyncopeConsoleApplication.get().getClientFactory().create(getJWT()).getService(serviceClass);\n+            service = clientFactory.create(getJWT()).getService(serviceClass);\n \n-            SyncopeConsoleApplication.get().getClientFactory().setContentType(preType);\n+            clientFactory.setContentType(preType);\n         }\n \n         return service;"},{"sha":"4c7364f5a0031e24c432086d40637bee1dfd6186","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -100,7 +100,7 @@ public Login(final PageParameters parameters) {\n         form.add(languageSelect);\n \n         domainSelect = new DomainDropDown(\"domain\");\n-        if (SyncopeConsoleSession.get().getDomains().size() == 1) {\n+        if (SyncopeConsoleApplication.get().getDomains().size() == 1) {\n             domainSelect.setOutputMarkupPlaceholderTag(true);\n         }\n         form.add(domainSelect);\n@@ -219,7 +219,7 @@ private class DomainDropDown extends BootstrapSelect<String> {\n         private static final long serialVersionUID = -7401167913360133325L;\n \n         DomainDropDown(final String id) {\n-            super(id, SyncopeConsoleSession.get().getDomains());\n+            super(id, SyncopeConsoleApplication.get().getDomains());\n \n             setModel(new IModel<String>() {\n "},{"sha":"8b3dce29d69c222e3d821c74e58cbe4ec115851e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/BaseRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FBaseRestClient.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -20,7 +20,6 @@\n \n import java.net.URI;\n import org.apache.cxf.jaxrs.client.WebClient;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n@@ -74,7 +73,7 @@ protected static <E extends JAXRSService, T> T getObject(\n             final E service, final URI location, final Class<T> resultClass) {\n \n         WebClient webClient = WebClient.fromClient(WebClient.client(service));\n-        webClient.accept(SyncopeConsoleApplication.get().getMediaType()).to(location.toASCIIString(), false);\n+        webClient.accept(SyncopeConsoleSession.get().getMediaType()).to(location.toASCIIString(), false);\n         return webClient.\n                 header(RESTHeaders.DOMAIN, SyncopeConsoleSession.get().getDomain()).\n                 header(RESTHeaders.TOKEN, SyncopeConsoleSession.get().getJWT())."},{"sha":"ba2481ef3288f4b6ac0179b3941f616c7a9ecb54","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -56,7 +56,7 @@\n \n public class DefaultUserProvisioningManager implements UserProvisioningManager {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserProvisioningManager.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(UserProvisioningManager.class);\n \n     @Autowired\n     protected UserWorkflowAdapter uwfAdapter;"},{"sha":"36e4188f6577c5c93395075414c70423c42f3f92","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4fdf1c4356b8b527e7482c9983b53c28f85b5501/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4fdf1c4356b8b527e7482c9983b53c28f85b5501/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java?ref=4fdf1c4356b8b527e7482c9983b53c28f85b5501","patch":"@@ -30,6 +30,8 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n@@ -39,6 +41,8 @@\n \n public final class AuthContextUtils {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(AuthContextUtils.class);\n+\n     public interface Executable<T> {\n \n         T exec();\n@@ -112,6 +116,9 @@ public static <T> T execWithAuthContext(final String domainKey, final Executable\n         setFakeAuth(domainKey);\n         try {\n             return executable.exec();\n+        } catch (Throwable t) {\n+            LOG.debug(\"Error during execution with domain {} context\", domainKey, t);\n+            throw t;\n         } finally {\n             SecurityContextHolder.clearContext();\n             SecurityContextHolder.setContext(ctx);"}]}