{"sha":"0b6854ed637c52c9c6ab211b8001a0d204a34d14","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiNjg1NGVkNjM3YzUyYzljNmFiMjExYjgwMDFhMGQyMDRhMzRkMTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-05-31T14:33:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-05-31T14:33:22Z"},"message":"Using userTO.getToken() in activate() - it was ignored\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1344745 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"867205d408c024949562ba2f3175d1e3c4e8f804","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/867205d408c024949562ba2f3175d1e3c4e8f804"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0b6854ed637c52c9c6ab211b8001a0d204a34d14","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b6854ed637c52c9c6ab211b8001a0d204a34d14","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b6854ed637c52c9c6ab211b8001a0d204a34d14","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b6854ed637c52c9c6ab211b8001a0d204a34d14/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a95621b8912f2114b67e3533351bfe7d7868aa6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a95621b8912f2114b67e3533351bfe7d7868aa6e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a95621b8912f2114b67e3533351bfe7d7868aa6e"}],"stats":{"total":73,"additions":34,"deletions":39},"files":[{"sha":"9af5fbc0493eca165a301256e62e8d13b2b28f04","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":34,"deletions":39,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0b6854ed637c52c9c6ab211b8001a0d204a34d14/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0b6854ed637c52c9c6ab211b8001a0d204a34d14/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=0b6854ed637c52c9c6ab211b8001a0d204a34d14","patch":"@@ -26,20 +26,6 @@\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.access.prepost.PreAuthorize;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.stereotype.Controller;\n-import org.springframework.transaction.annotation.Transactional;\n-import org.springframework.web.bind.annotation.PathVariable;\n-import org.springframework.web.bind.annotation.RequestBody;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestMethod;\n-import org.springframework.web.bind.annotation.RequestParam;\n-import org.springframework.web.servlet.ModelAndView;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.MembershipTO;\n@@ -65,6 +51,20 @@\n import org.apache.syncope.types.AuditElements.Result;\n import org.apache.syncope.types.AuditElements.UserSubCategory;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.servlet.ModelAndView;\n \n /**\n  * Note that this controller does not extend AbstractController, hence does not provide any Spring's @Transactional\n@@ -389,7 +389,7 @@ public UserTO activate(@RequestBody final UserTO userTO,\n             throw new NotFoundException(\"User \" + userTO.getId());\n         }\n \n-        return setStatus(user, resourceNames, performLocally, performRemotely, true, \"activate\");\n+        return setStatus(user, userTO.getToken(), resourceNames, performLocally, performRemotely, true, \"activate\");\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -408,7 +408,7 @@ public UserTO suspend(@PathVariable(\"userId\") final Long userId,\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        return setStatus(user, resourceNames, performLocally, performRemotely, false, \"suspend\");\n+        return setStatus(user, null, resourceNames, performLocally, performRemotely, false, \"suspend\");\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -427,27 +427,27 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId,\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        return setStatus(user, resourceNames, performLocally, performRemotely, true, \"reactivate\");\n+        return setStatus(user, null, resourceNames, performLocally, performRemotely, true, \"reactivate\");\n     }\n \n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/delete/{userId}\")\n     public UserTO delete(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n         LOG.debug(\"User delete called with {}\", userId);\n-        \n+\n         return deleteByUserId(userId);\n     }\n-    \n+\n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/deleteByUsername/{username}\")\n     public UserTO delete(@PathVariable final String username)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n         LOG.debug(\"User delete called with {}\", username);\n-        \n+\n         UserTO result = userDataBinder.getUserTO(username);\n         long userId = result.getId();\n-        \n+\n         return deleteByUserId(userId);\n     }\n \n@@ -545,28 +545,23 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n         return savedTO;\n     }\n \n-    private UserTO setStatus(final SyncopeUser user, final Set<String> resourceNames, final boolean performLocally,\n-            final boolean performRemotely, final boolean status, final String performedTask)\n+    private UserTO setStatus(final SyncopeUser user, final String token, final Set<String> resourceNames,\n+            final boolean performLocally, final boolean performRemotely, final boolean status, final String task)\n             throws NotFoundException, WorkflowException, UnauthorizedRoleException, PropagationException {\n \n-        LOG.debug(\"About to suspend \" + user.getId());\n-\n-        List<PropagationTask> tasks = null;\n-        WorkflowResult<Long> updated = null;\n+        LOG.debug(\"About to set status of {}\" + user);\n \n+        WorkflowResult<Long> updated;\n         if (performLocally) {\n-            // perform local changes\n-\n-            if (\"suspend\".equals(performedTask)) {\n+            if (\"suspend\".equals(task)) {\n                 updated = wfAdapter.suspend(user.getId());\n-            } else if (\"reactivate\".equals(performedTask)) {\n+            } else if (\"reactivate\".equals(task)) {\n                 updated = wfAdapter.reactivate(user.getId());\n             } else {\n-                updated = wfAdapter.activate(user.getId(), user.getToken());\n+                updated = wfAdapter.activate(user.getId(), token);\n             }\n         } else {\n-            // do not perform local changes\n-            updated = new WorkflowResult<Long>(user.getId(), null, performedTask);\n+            updated = new WorkflowResult<Long>(user.getId(), null, task);\n         }\n \n         // Resources to exclude from propagation.\n@@ -580,7 +575,7 @@ private UserTO setStatus(final SyncopeUser user, final Set<String> resourceNames\n             resources.addAll(user.getResourceNames());\n         }\n \n-        tasks = propagationManager.getUpdateTaskIds(user, status, resources);\n+        List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(user, status, resources);\n \n         propagationManager.execute(tasks);\n         notificationManager.createTasks(updated);\n@@ -594,9 +589,9 @@ private UserTO setStatus(final SyncopeUser user, final Set<String> resourceNames\n \n         return savedTO;\n     }\n-    \n+\n     private UserTO deleteByUserId(final Long userId)\n-        throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n+            throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this\n         // information could only be available after wfAdapter.delete(), which\n@@ -613,7 +608,7 @@ private UserTO deleteByUserId(final Long userId)\n \n             @Override\n             public void handle(final String resourceName, final PropagationTaskExecStatus executionStatus,\n-                               final ConnectorObject before, final ConnectorObject after) {\n+                    final ConnectorObject before, final ConnectorObject after) {\n \n                 final PropagationTO propagation = new PropagationTO();\n                 propagation.setResourceName(resourceName);\n@@ -634,7 +629,7 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n         wfAdapter.delete(userId);\n \n         auditManager.audit(Category.user, UserSubCategory.delete, Result.success,\n-                           \"Successfully deleted user: \" + userTO.getUsername());\n+                \"Successfully deleted user: \" + userTO.getUsername());\n \n         LOG.debug(\"User successfully deleted: {}\", userId);\n "}]}