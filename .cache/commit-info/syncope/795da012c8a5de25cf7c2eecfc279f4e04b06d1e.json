{"sha":"795da012c8a5de25cf7c2eecfc279f4e04b06d1e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc5NWRhMDEyYzhhNWRlMjVjZjdjMmVlY2ZjMjc5ZjRlMDRiMDZkMWU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-06T15:46:32Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-06T15:46:32Z"},"message":"More bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246429 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d77470d1d478a72df9e010d59b6fc19c926b1986","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d77470d1d478a72df9e010d59b6fc19c926b1986"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/795da012c8a5de25cf7c2eecfc279f4e04b06d1e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/795da012c8a5de25cf7c2eecfc279f4e04b06d1e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/795da012c8a5de25cf7c2eecfc279f4e04b06d1e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/comments","author":null,"committer":null,"parents":[{"sha":"b4c49fba9c79b08e9225a767c879dd6964d93064","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4c49fba9c79b08e9225a767c879dd6964d93064","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4c49fba9c79b08e9225a767c879dd6964d93064"}],"stats":{"total":132,"additions":50,"deletions":82},"files":[{"sha":"4d8ddbdea9ebafea7d9513bd996dfe564ace1e47","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -70,7 +70,7 @@ public class SyncopeUser extends AbstractAttributable {\n     fetch = FetchType.EAGER, mappedBy = \"owner\")\n     private Set<UserDerivedAttribute> derivedAttributes;\n     @Column(nullable = true)\n-    private Long workflowEntryId;\n+    private Long workflowId;\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date creationTime;\n     @Lob\n@@ -198,12 +198,12 @@ public void setDerivedAttributes(\n         this.derivedAttributes = (Set<UserDerivedAttribute>) derivedAttributes;\n     }\n \n-    public Long getWorkflowEntryId() {\n-        return workflowEntryId;\n+    public Long getWorkflowId() {\n+        return workflowId;\n     }\n \n-    public void setWorkflowEntryId(Long workflowEntryId) {\n-        this.workflowEntryId = workflowEntryId;\n+    public void setWorkflowId(Long workflowEntryId) {\n+        this.workflowId = workflowEntryId;\n     }\n \n     public Date getCreationTime() {"},{"sha":"3b03179cc9d4c788cd030f1ce75e67da45502ef8","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -76,13 +76,12 @@ public class UserController extends AbstractController {\n     @Autowired\n     private PropagationManager propagationManager;\n \n-    private Integer findWorkflowAction(Long workflowEntryId,\n-            String actionName) {\n+    private Integer findWorkflowAction(Long workflowId, String actionName) {\n \n         WorkflowDescriptor workflowDescriptor =\n                 userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW);\n \n-        int[] actions = userWorkflow.getAvailableActions(workflowEntryId, null);\n+        int[] actions = userWorkflow.getAvailableActions(workflowId, null);\n \n         Integer actionId = null;\n         for (int i = 0; i < actions.length && actionId == null; i++) {\n@@ -122,14 +121,14 @@ public SyncopeUser doExecuteAction(String actionName, Long userId,\n         }\n         inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n \n-        Integer actionId = findWorkflowAction(syncopeUser.getWorkflowEntryId(),\n+        Integer actionId = findWorkflowAction(syncopeUser.getWorkflowId(),\n                 actionName);\n         if (actionId == null) {\n             throw new NotFoundException(actionName);\n         }\n \n         try {\n-            userWorkflow.doAction(syncopeUser.getWorkflowEntryId(),\n+            userWorkflow.doAction(syncopeUser.getWorkflowId(),\n                     actionId, inputs);\n         } catch (InvalidActionException e) {\n             throw new WorkflowException(e);\n@@ -234,7 +233,7 @@ public WorkflowActionsTO getActions(@PathVariable(\"userId\") Long userId)\n         WorkflowDescriptor workflowDescriptor =\n                 userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW);\n         int[] availableActions = userWorkflow.getAvailableActions(\n-                user.getWorkflowEntryId(), Collections.EMPTY_MAP);\n+                user.getWorkflowId(), Collections.EMPTY_MAP);\n         for (int i = 0; i < availableActions.length; i++) {\n             result.addAction(workflowDescriptor.getAction(\n                     availableActions[i]).getName());\n@@ -282,7 +281,7 @@ public ModelAndView getStatus(@PathVariable(\"userId\") Long userId)\n         }\n \n         List<Step> currentSteps = userWorkflow.getCurrentSteps(\n-                user.getWorkflowEntryId());\n+                user.getWorkflowId());\n         if (currentSteps == null || currentSteps.isEmpty()) {\n             return null;\n         }\n@@ -351,14 +350,17 @@ public UserTO create(HttpServletResponse response,\n             if (workflowStore != null && e.getWorkflowEntryId() != null) {\n                 workflowStore.delete(e.getWorkflowEntryId());\n             }\n+\n+            // Use the found workflow id\n+            workflowId = wie.getWorkflowId();\n         }\n \n         if (wie != null) {\n             switch (wie.getExceptionOperation()) {\n \n                 case OVERWRITE:\n                     Integer resetActionId = findWorkflowAction(\n-                            wie.getWorkflowEntryId(), Constants.ACTION_RESET);\n+                            wie.getWorkflowId(), Constants.ACTION_RESET);\n                     if (resetActionId != null) {\n                         doExecuteAction(Constants.ACTION_RESET,\n                                 wie.getSyncopeUserId(), null);\n@@ -383,7 +385,7 @@ public UserTO create(HttpServletResponse response,\n         }\n \n         SyncopeUser syncopeUser = userDataBinder.createSyncopeUser(userTO);\n-        syncopeUser.setWorkflowEntryId(workflowId);\n+        syncopeUser.setWorkflowId(workflowId);\n         syncopeUser.setCreationTime(new Date());\n         syncopeUser = syncopeUserDAO.save(syncopeUser);\n \n@@ -480,8 +482,8 @@ public void delete(@PathVariable(\"userId\") Long userId)\n \n             throw new NotFoundException(String.valueOf(userId));\n         } else {\n-            if (workflowStore != null && user.getWorkflowEntryId() != null) {\n-                workflowStore.delete(user.getWorkflowEntryId());\n+            if (workflowStore != null && user.getWorkflowId() != null) {\n+                workflowStore.delete(user.getWorkflowId());\n             }\n \n             syncopeUserDAO.delete(userId);"},{"sha":"fbb559720f85fd5970a793fc0688dd53bed11792","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -21,7 +21,9 @@\n import java.util.Set;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.AbstractAttributableMod;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.to.AbstractAttributableTO;\n@@ -52,18 +54,28 @@\n import org.syncope.core.persistence.validation.ValidationException;\n import org.syncope.types.SyncopeClientExceptionType;\n \n+@Transactional(rollbackFor = {Throwable.class})\n class AbstractAttributableDataBinder {\n \n     protected static final Logger log = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n+    @Autowired\n     protected SyncopeRoleDAO syncopeRoleDAO;\n+    @Autowired\n     protected SchemaDAO schemaDAO;\n+    @Autowired\n     protected DerivedSchemaDAO derivedSchemaDAO;\n+    @Autowired\n     protected AttributeDAO attributeDAO;\n+    @Autowired\n     protected DerivedAttributeDAO derivedAttributeDAO;\n+    @Autowired\n     protected AttributeValueDAO attributeValueDAO;\n+    @Autowired\n     protected SyncopeUserDAO syncopeUserDAO;\n+    @Autowired\n     protected ResourceDAO resourceDAO;\n+    @Autowired\n     protected MembershipDAO membershipDAO;\n \n     private <T extends AbstractSchema> AbstractSchema getSchema("},{"sha":"343777dbfcfeb0b52712af8a97c8bc71417ac6c6","filename":"core/src/main/java/org/syncope/core/rest/data/ConfigurationDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -19,7 +19,7 @@\n import org.syncope.core.persistence.beans.SyncopeConfiguration;\n \n @Component\n-public class ConfigurationDataBinder extends AbstractAttributableDataBinder {\n+public class ConfigurationDataBinder {\n \n     public SyncopeConfiguration createSyncopeConfiguration(\n             ConfigurationTO configurationTO) {"},{"sha":"c8930585116c06c5809e73d7040b4ee489cb54c6","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -15,42 +15,19 @@\n package org.syncope.core.rest.data;\n \n import java.util.Collections;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.syncope.core.persistence.dao.AttributeValueDAO;\n-import org.syncope.core.persistence.dao.DerivedSchemaDAO;\n-import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.dao.SchemaDAO;\n-import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n-import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n public class RoleDataBinder extends AbstractAttributableDataBinder {\n \n-    @Autowired\n-    public RoleDataBinder(SyncopeRoleDAO syncopeRoleDAO,\n-            SchemaDAO schemaDAO,\n-            DerivedSchemaDAO derivedSchemaDAO,\n-            AttributeValueDAO attributeValueDAO,\n-            SyncopeUserDAO syncopeUserDAO,\n-            ResourceDAO resourceDAO) {\n-\n-        this.syncopeRoleDAO = syncopeRoleDAO;\n-        this.schemaDAO = schemaDAO;\n-        this.derivedSchemaDAO = derivedSchemaDAO;\n-        this.attributeValueDAO = attributeValueDAO;\n-        this.syncopeUserDAO = syncopeUserDAO;\n-        this.resourceDAO = resourceDAO;\n-    }\n-\n     public SyncopeRole createSyncopeRole(RoleTO roleTO)\n             throws SyncopeClientCompositeErrorException {\n "},{"sha":"531f9638e5af3d35f566b5546a4f8e438a525142","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":5,"deletions":38,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -19,7 +19,6 @@\n import java.util.List;\n import javassist.NotFoundException;\n import javax.persistence.EntityNotFoundException;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n import org.syncope.client.mod.MembershipMod;\n@@ -31,43 +30,12 @@\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.dao.AttributeDAO;\n-import org.syncope.core.persistence.dao.AttributeValueDAO;\n-import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n-import org.syncope.core.persistence.dao.DerivedSchemaDAO;\n-import org.syncope.core.persistence.dao.MembershipDAO;\n-import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.dao.SchemaDAO;\n-import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n-import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n-    @Autowired\n-    public UserDataBinder(SchemaDAO schemaDAO,\n-            AttributeDAO attributeDAO,\n-            AttributeValueDAO attributeValueDAO,\n-            DerivedSchemaDAO derivedSchemaDAO,\n-            DerivedAttributeDAO derivedAttributeDAO,\n-            SyncopeUserDAO syncopeUserDAO,\n-            SyncopeRoleDAO syncopeRoleDAO,\n-            ResourceDAO resourceDAO,\n-            MembershipDAO membershipDAO) {\n-\n-        this.schemaDAO = schemaDAO;\n-        this.attributeDAO = attributeDAO;\n-        this.attributeValueDAO = attributeValueDAO;\n-        this.derivedSchemaDAO = derivedSchemaDAO;\n-        this.derivedSchemaDAO = derivedSchemaDAO;\n-        this.syncopeUserDAO = syncopeUserDAO;\n-        this.syncopeRoleDAO = syncopeRoleDAO;\n-        this.resourceDAO = resourceDAO;\n-        this.membershipDAO = membershipDAO;\n-    }\n-\n     public SyncopeUser createSyncopeUser(UserTO userTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n@@ -122,10 +90,9 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                             + membershipTO.getRole());\n                 }\n             } else {\n-                Membership membership = membershipDAO.find(syncopeUser, role);\n-                if (membership != null) {\n-                    membershipDAO.delete(membership.getId());\n-                }\n+                Membership membership = new Membership();\n+                membership.setSyncopeRole(role);\n+                membership.setSyncopeUser(syncopeUser);\n \n                 membership = (Membership) fill(membership, membershipTO,\n                         AttributableUtil.MEMBERSHIP, scce);\n@@ -193,7 +160,7 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n         String status = null;\n         try {\n             List<Step> currentSteps = userWorkflow.getCurrentSteps(\n-                    user.getWorkflowEntryId());\n+                    user.getWorkflowId());\n \n             if (currentSteps != null && !currentSteps.isEmpty()) {\n                 status = currentSteps.iterator().next().getStatus();\n@@ -202,7 +169,7 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n             }\n         } catch (EntityNotFoundException e) {\n             log.error(\"Could not find workflow entry with id \"\n-                    + user.getWorkflowEntryId());\n+                    + user.getWorkflowId());\n         }\n         userTO.setStatus(status);\n "},{"sha":"d1b67b27d8e12c700f601cd2231afb0fe02907c0","filename":"core/src/main/java/org/syncope/core/workflow/WorkflowInitException.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -24,6 +24,7 @@ public enum ExceptionOperation {\n     };\n     private ExceptionOperation exceptionOperation;\n     private Long syncopeUserId;\n+    private Long workflowId;\n     private Long workflowEntryId;\n \n     public WorkflowInitException() {\n@@ -64,11 +65,20 @@ public void setWorkflowEntryId(Long workflowEntryId) {\n         this.workflowEntryId = workflowEntryId;\n     }\n \n+    public Long getWorkflowId() {\n+        return workflowId;\n+    }\n+\n+    public void setWorkflowId(Long workflowId) {\n+        this.workflowId = workflowId;\n+    }\n+\n     @Override\n     public String toString() {\n         return \"WorkflowInitException{\"\n                 + \"exceptionOperation=\" + exceptionOperation + \",\"\n                 + \"syncopeUserId=\" + syncopeUserId + \",\"\n+                + \"workflowId=\" + workflowId + \",\"\n                 + \"workflowEntry=\" + workflowEntryId + '}';\n     }\n }"},{"sha":"c45c7fc7e9fe775c9683f226157d6f2f8f375abf","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/795da012c8a5de25cf7c2eecfc279f4e04b06d1e/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=795da012c8a5de25cf7c2eecfc279f4e04b06d1e","patch":"@@ -32,10 +32,10 @@\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n                           \n-    <SyncopeUser id=\"1\" password=\"XXX\" workflowEntryId=\"0\"/>\n-    <SyncopeUser id=\"2\" password=\"YYY\" workflowEntryId=\"0\"/>\n-    <SyncopeUser id=\"3\" password=\"ZZZ\" workflowEntryId=\"0\"/>\n-    <SyncopeUser id=\"4\" password=\"PPP\" workflowEntryId=\"0\"/>\n+    <SyncopeUser id=\"1\" password=\"XXX\" workflowId=\"0\"/>\n+    <SyncopeUser id=\"2\" password=\"YYY\" workflowId=\"0\"/>\n+    <SyncopeUser id=\"3\" password=\"ZZZ\" workflowId=\"0\"/>\n+    <SyncopeUser id=\"4\" password=\"PPP\" workflowId=\"0\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>"}]}