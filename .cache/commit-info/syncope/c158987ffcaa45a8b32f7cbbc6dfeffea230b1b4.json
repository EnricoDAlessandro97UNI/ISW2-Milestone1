{"sha":"c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMxNTg5ODdmZmNhYTQ1YThiMzJmN2NiYmM2ZGZlZmZlYTIzMGIxYjQ=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-15T09:57:59Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-15T09:57:59Z"},"message":"Starting new 0.2-SNAPSHOT\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246493 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5dec6cac13c30847927c6c6ef8cca5ce6d858d17","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5dec6cac13c30847927c6c6ef8cca5ce6d858d17"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/comments","author":null,"committer":null,"parents":[{"sha":"9962e9260d995f46ff2d51bf42f5754a0702b258","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9962e9260d995f46ff2d51bf42f5754a0702b258","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9962e9260d995f46ff2d51bf42f5754a0702b258"}],"stats":{"total":295,"additions":185,"deletions":110},"files":[{"sha":"9e41a2c5248177f3f8f8066153e153106bc3997d","filename":"core/pom.xml","status":"modified","additions":14,"deletions":18,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -41,6 +41,8 @@\n         <logfile.persistence>/tmp/syncope-core-persistence.log</logfile.persistence>\n         <logfile.rest>/tmp/syncope-core-rest.log</logfile.rest>\n         <logfile.test>/tmp/syncope-core-test.log</logfile.test>\n+\n+        <bundles.directory>/tmp/bundles</bundles.directory>\n     </properties>\n \n     <dependencies>\n@@ -222,13 +224,6 @@\n             <version>${project.version}</version>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n-            <artifactId>ws-target-resource</artifactId>\n-            <version>${project.version}</version>\n-            <type>war</type>\n-            <scope>test</scope>\n-        </dependency>\n         <!-- /TEST -->\n     </dependencies>\n \n@@ -389,24 +384,25 @@\n \n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-dependency-plugin</artifactId>\n+                <artifactId>maven-resources-plugin</artifactId>\n                 <inherited>true</inherited>\n                 <executions>\n                     <execution>\n                         <id>set-bundles</id>\n                         <phase>pre-integration-test</phase>\n                         <goals>\n-                            <goal>copy</goal>\n+                            <goal>copy-resources</goal>\n                         </goals>\n                         <configuration>\n-                            <artifactItems>\n-                                <artifactItem>\n-                                    <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n-                                    <artifactId>staticwebservice</artifactId>\n-                                    <version>${project.version}</version>\n-                                    <outputDirectory>/tmp/bundles</outputDirectory>\n-                                </artifactItem>\n-                            </artifactItems>\n+                            <outputDirectory>${bundles.directory}</outputDirectory>\n+                            <resources>\n+                                <resource>\n+                                    <directory>${basedir}/../identityconnectors/bundles/staticws/staticwebservice/target</directory>\n+                                    <includes>\n+                                        <include>*.jar</include>\n+                                    </includes>\n+                                </resource>\n+                            </resources>\n                         </configuration>\n                     </execution>\n                 </executions>\n@@ -474,7 +470,7 @@\n                 <configuration>\n                     <stopKey>foo</stopKey>\n                     <stopPort>9999</stopPort>\n-                    <webApp>${settings.localRepository}/org/syncope/identityconnectors/bundles/staticws/ws-target-resource/${project.version}/ws-target-resource-${project.version}.war</webApp>\n+                    <webApp>${basedir}/../identityconnectors/bundles/staticws/ws-target-resource/target/ws-target-resource-${project.version}.war</webApp>\n                     <contextPath>wstarget</contextPath>\n                     <connectors>\n                         <connector implementation=\"org.mortbay.jetty.nio.SelectChannelConnector\">"},{"sha":"4f0b5a0da5b4347afbef8e2d02175334ceb4b533","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -55,9 +55,14 @@\n import org.syncope.types.SchemaType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = {\n+    Throwable.class\n+})\n public abstract class AbstractAttributableDataBinder {\n \n+    /**\n+     * Logger.\n+     */\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n     @Autowired\n@@ -230,25 +235,26 @@ protected ResourceOperations fill(\n             if (schema != null) {\n                 for (SchemaMapping mapping : resourceDAO.getMappings(\n                         schema.getName(),\n-                        SchemaType.byClass(attributableUtil.getSchemaClass()))) {\n+                        SchemaType.byClass(\n+                        attributableUtil.getSchemaClass()))) {\n+\n                     if (mapping.getResource() != null) {\n                         resourceOperations.add(Type.UPDATE,\n                                 mapping.getResource());\n                     }\n                 }\n-            }\n \n-            attribute = attributable.getAttribute(schema.getName());\n-            if (attribute == null) {\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"No attribute found for schema \"\n-                            + schema.getName());\n-                }\n-            } else {\n-                attributable.removeAttribute(attribute);\n+                attribute = attributable.getAttribute(schema.getName());\n+                if (attribute == null) {\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"No attribute found for schema \" + schema);\n+                    }\n+                } else {\n+                    attributable.removeAttribute(attribute);\n \n-                attributeDAO.delete(attribute.getId(),\n-                        attributableUtil.getAttributeClass());\n+                    attributeDAO.delete(attribute.getId(),\n+                            attributableUtil.getAttributeClass());\n+                }\n             }\n         }\n \n@@ -267,7 +273,9 @@ protected ResourceOperations fill(\n             if (schema != null) {\n                 for (SchemaMapping mapping : resourceDAO.getMappings(\n                         schema.getName(),\n-                        SchemaType.byClass(attributableUtil.getSchemaClass()))) {\n+                        SchemaType.byClass(\n+                        attributableUtil.getSchemaClass()))) {\n+\n                     if (mapping.getResource() != null) {\n                         resourceOperations.add(Type.UPDATE,\n                                 mapping.getResource());"},{"sha":"fd99bf8a427dc2d17636f9f85011eaba846da8ca","filename":"core/src/test/java/org/syncope/core/test/persistence/AbstractTest.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FAbstractTest.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -14,12 +14,16 @@\n  */\n package org.syncope.core.test.persistence;\n \n+import static org.junit.Assert.*;\n+\n+import java.io.InputStream;\n import java.sql.Connection;\n import java.sql.DatabaseMetaData;\n import java.sql.ResultSet;\n import java.sql.ResultSetMetaData;\n import java.sql.SQLException;\n import java.sql.Statement;\n+import java.util.Properties;\n import javax.sql.DataSource;\n import org.dbunit.database.DatabaseConfig;\n import org.dbunit.database.DatabaseConnection;\n@@ -43,6 +47,8 @@ public abstract class AbstractTest {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractTest.class);\n+    protected static String bundles_version;\n+    protected static String bundles_directory;\n     @Autowired\n     private DataSource dataSource;\n     @Autowired\n@@ -115,4 +121,21 @@ public void setUpTestDataWithinTransaction() throws Exception {\n             }\n         }\n     }\n+\n+    @Before\n+    public void init() {\n+        Properties props = new java.util.Properties();\n+        try {\n+            InputStream propStream =\n+                    getClass().getResourceAsStream(\n+                    \"/bundles.properties\");\n+            props.load(propStream);\n+            bundles_version = props.getProperty(\"bundles.version\");\n+            bundles_directory = props.getProperty(\"bundles.directory\");\n+        } catch (Throwable t) {\n+            LOG.error(\"Could not load bundles.properties\", t);\n+        }\n+        assertNotNull(bundles_version);\n+        assertNotNull(bundles_directory);\n+    }\n }"},{"sha":"0c4f4d9a7d86d813b795efaa88ad05b7d7849d9f","filename":"core/src/test/java/org/syncope/core/test/persistence/ConnectorInstanceDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FConnectorInstanceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FConnectorInstanceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FConnectorInstanceDAOTest.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -48,7 +48,7 @@ public final void findById() {\n                 connectorInstance.getBundleName());\n \n         assertEquals(\"invalid bundle version\",\n-                \"0.1-SNAPSHOT\", connectorInstance.getVersion());\n+                bundles_version, connectorInstance.getVersion());\n     }\n \n     @Test"},{"sha":"8a3d4facaf3b009ed9be73bb034e2c121d056e43","filename":"core/src/test/java/org/syncope/core/test/persistence/ResourceDAOTest.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -25,6 +25,7 @@\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.dao.ResourceDAO;\n+import org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector;\n \n @Transactional\n public class ResourceDAOTest extends AbstractTest {\n@@ -44,15 +45,15 @@ public final void findById() {\n         assertNotNull(\"connector not found\", connector);\n \n         assertEquals(\"invalid connector name\",\n-                \"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\",\n+                WebServiceConnector.class.getName(),\n                 connector.getConnectorName());\n \n         assertEquals(\"invalid bundle name\",\n                 \"org.syncope.identityconnectors.bundles.staticws\",\n                 connector.getBundleName());\n \n         assertEquals(\"invalid bundle version\",\n-                \"0.1-SNAPSHOT\", connector.getVersion());\n+                bundles_version, connector.getVersion());\n \n         List<SchemaMapping> mappings = resource.getMappings();\n \n@@ -62,8 +63,9 @@ public final void findById() {\n \n         List<Long> mappingIds = new ArrayList<Long>();\n \n-        for (SchemaMapping mapping : mappings)\n+        for (SchemaMapping mapping : mappings) {\n             mappingIds.add(mapping.getId());\n+        }\n \n         assertTrue(mappingIds.contains(100L));\n     }"},{"sha":"681dedea391c1eeca2f292271aa6ce7cd464bf42","filename":"core/src/test/java/org/syncope/core/test/rest/ConnectorInstanceTestITCase.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FConnectorInstanceTestITCase.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -14,10 +14,13 @@\n  */\n package org.syncope.core.test.rest;\n \n+import java.io.InputStream;\n import static org.junit.Assert.*;\n \n import java.util.HashSet;\n+import java.util.Properties;\n import java.util.Set;\n+import org.junit.Before;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.test.annotation.ExpectedException;\n@@ -31,6 +34,26 @@\n \n public class ConnectorInstanceTestITCase extends AbstractTestITCase {\n \n+    protected static String bundles_version;\n+    protected static String bundles_directory;\n+\n+    @Before\n+    public void init() {\n+        Properties props = new java.util.Properties();\n+        try {\n+            InputStream propStream =\n+                    getClass().getResourceAsStream(\n+                    \"/bundles.properties\");\n+            props.load(propStream);\n+            bundles_version = props.getProperty(\"bundles.version\");\n+            bundles_directory = props.getProperty(\"bundles.directory\");\n+        } catch (Throwable t) {\n+            LOG.error(\"Could not load bundles.properties\", t);\n+        }\n+        assertNotNull(bundles_version);\n+        assertNotNull(bundles_directory);\n+    }\n+\n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n@@ -46,7 +69,7 @@ public void create() {\n         ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n \n         // set connector version\n-        connectorTO.setVersion(\"0.1-SNAPSHOT\");\n+        connectorTO.setVersion(bundles_version);\n \n         // set connector name\n         connectorTO.setConnectorName(WebServiceConnector.class.getSimpleName());\n@@ -141,7 +164,7 @@ public void update() {\n         connectorTO.setId(100L);\n \n         // set connector version\n-        connectorTO.setVersion(\"0.1-SNAPSHOT\");\n+        connectorTO.setVersion(bundles_version);\n \n         // set connector name\n         connectorTO.setConnectorName(WebServiceConnector.class.getSimpleName());"},{"sha":"86476f86d9ceec3c57b7ee55266d48d8ec9ad827","filename":"core/src/test/resources/bundles.properties","status":"added","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fresources%2Fbundles.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fresources%2Fbundles.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fbundles.properties?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -0,0 +1,2 @@\n+bundles.version=${project.version}\n+bundles.directory=${bundles.directory}"},{"sha":"24283f51ad4fb0a738fb2c78cbc20004c8b503b1","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -133,7 +133,7 @@\n     <ConnectorInstance id=\"100\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n-                       version=\"0.1-SNAPSHOT\"\n+                       version=\"${project.version}\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A8888%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_CREATE\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_UPDATE\"/>\n@@ -146,7 +146,7 @@\n     <ConnectorInstance id=\"101\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n-                       version=\"0.1-SNAPSHOT\"\n+                       version=\"${project.version}\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A8888%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_CREATE\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_UPDATE\"/>\n@@ -159,7 +159,7 @@\n     <ConnectorInstance id=\"102\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n-                       version=\"0.1-SNAPSHOT\"\n+                       version=\"${project.version}\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A8888%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_CREATE\"/>\n     <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_UPDATE\"/>"},{"sha":"14f881f8aa277f3fc0b1349f9507e11b8027c21e","filename":"identityconnectors/bundles/staticws/staticwebservice/pom.xml","status":"modified","additions":36,"deletions":8,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -117,6 +117,7 @@\n \n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <bundles.directory>/tmp/bundles</bundles.directory>\n     </properties>\n \n     <build>\n@@ -175,19 +176,46 @@\n \n             <!-- Test Plugins -->\n             <plugin>\n-                <groupId>org.codehaus.mojo</groupId>\n-                <artifactId>failsafe-maven-plugin</artifactId>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-resources-plugin</artifactId>\n+                <inherited>true</inherited>\n                 <executions>\n                     <execution>\n+                        <id>set-bundles</id>\n+                        <phase>pre-integration-test</phase>\n                         <goals>\n-                            <goal>integration-test</goal>\n-                            <goal>verify</goal>\n+                            <goal>copy-resources</goal>\n                         </goals>\n+                        <configuration>\n+                            <outputDirectory>${bundles.directory}</outputDirectory>\n+                            <resources>\n+                                <resource>\n+                                    <directory>${basedir}/target</directory>\n+                                    <includes>\n+                                        <include>*.jar</include>\n+                                    </includes>\n+                                </resource>\n+                            </resources>\n+                        </configuration>\n                     </execution>\n                 </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-failsafe-plugin</artifactId>\n+                <inherited>true</inherited>\n                 <configuration>\n+                    <redirectTestOutputToFile>true</redirectTestOutputToFile>\n                     <encoding>utf-8</encoding>\n                 </configuration>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>verify</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n             </plugin>\n \n             <plugin>\n@@ -235,10 +263,10 @@\n         </plugins>\n \n         <testResources>\n-           <testResource>\n-             <directory>src/test/resources</directory>\n-             <filtering>true</filtering>\n-           </testResource>\n+            <testResource>\n+                <directory>src/test/resources</directory>\n+                <filtering>true</filtering>\n+            </testResource>\n         </testResources>\n     </build>\n "},{"sha":"09876a0da0358d0c8bc96b910889367afbbfaacf","filename":"identityconnectors/bundles/staticws/staticwebservice/src/test/java/org/syncope/identityconnectors/bundles/StaticWSTestITCase.java","status":"modified","additions":44,"deletions":47,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2FStaticWSTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2FStaticWSTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2FStaticWSTestITCase.java?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -58,25 +58,18 @@\n \n public class StaticWSTestITCase {\n \n-    private static final Logger log =\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(StaticWSTestITCase.class);\n-\n     final private String ENDPOINT_PREFIX =\n             \"http://localhost:8888/wstarget/services\";\n-\n     final private String SERVICE =\n             \"/provisioning\";\n-\n     final private String bundlename =\n             \"org.syncope.identityconnectors.bundles.staticws\";\n-\n     private String bundleversion = null;\n-\n     final private String bundleclass =\n             WebServiceConnector.class.getName();\n-\n-    final private String BUNDLE_DIRECTORY = \"target\";\n-\n+    private String bundledirectory;\n     private ConnectorFacade connector;\n \n     /**\n@@ -87,19 +80,23 @@ public class StaticWSTestITCase {\n     public void init() {\n \n         Properties props = new java.util.Properties();\n-\ttry {\n-\t\tInputStream propStream = getClass().getResourceAsStream(\"/bundleversion.properties\");\n-\t\tprops.load(propStream);\n-\t\tbundleversion = props.getProperty(\"bundleversion\");\n-        } catch(Throwable t) {\n-\t\tlog.error(\"Could not load bundleversion\", t);\t\n- \t}\n-\tassertNotNull(bundleversion);\n+        try {\n+            InputStream propStream =\n+                    getClass().getResourceAsStream(\n+                    \"/bundle.properties\");\n+            props.load(propStream);\n+            bundleversion = props.getProperty(\"bundleversion\");\n+            bundledirectory = props.getProperty(\"bundledirectory\");\n+        } catch (Throwable t) {\n+            LOG.error(\"Could not load bundles.properties\", t);\n+        }\n+        assertNotNull(bundleversion);\n+        assertNotNull(bundledirectory);\n \n         ConnectorInfoManagerFactory connectorInfoManagerFactory =\n                 ConnectorInfoManagerFactory.getInstance();\n \n-        File bundleDirectory = new File(BUNDLE_DIRECTORY);\n+        File bundleDirectory = new File(bundledirectory);\n \n         APIConfiguration apiConfig = null;\n \n@@ -114,20 +111,20 @@ public void init() {\n                 urls.add(IOUtil.makeURL(bundleDirectory, file));\n             } catch (Exception ignore) {\n                 // ignore exception and don't add bundle\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\n-                            \"\\\"\" +\n-                            bundleDirectory.toString() + \"/\" + file +\n-                            \"\\\"\" +\n-                            \" is not a valid connector bundle.\", ignore);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\n+                            \"\\\"\"\n+                            + bundleDirectory.toString() + \"/\" + file\n+                            + \"\\\"\"\n+                            + \" is not a valid connector bundle.\", ignore);\n                 }\n             }\n         }\n \n         assertFalse(urls.isEmpty());\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"URL: \" + urls.toString());\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"URL: \" + urls.toString());\n         }\n \n         ConnectorInfoManager manager =\n@@ -141,17 +138,17 @@ public void init() {\n \n         assertNotNull(infos);\n \n-        log.debug(\"infos size: \" + infos.size());\n+        LOG.debug(\"infos size: \" + infos.size());\n \n         for (ConnectorInfo i : infos) {\n-            log.debug(\"Name: \" + i.getConnectorDisplayName());\n+            LOG.debug(\"Name: \" + i.getConnectorDisplayName());\n         }\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\n-                    \"\\nBundle name: \" + bundlename +\n-                    \"\\nBundle version: \" + bundleversion +\n-                    \"\\nBundle class: \" + bundleclass);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\n+                    \"\\nBundle name: \" + bundlename\n+                    + \"\\nBundle version: \" + bundleversion\n+                    + \"\\nBundle class: \" + bundleclass);\n         }\n \n         // specify a connector.\n@@ -184,10 +181,10 @@ public void init() {\n         for (String propName : propertyNames) {\n             ConfigurationProperty prop = properties.getProperty(propName);\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\n-                        \"\\nProperty Name: \" + prop.getName() +\n-                        \"\\nProperty Type: \" + prop.getType());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\n+                        \"\\nProperty Name: \" + prop.getName()\n+                        + \"\\nProperty Type: \" + prop.getType());\n             }\n         }\n \n@@ -251,10 +248,10 @@ public void schema() {\n             assertNotNull(attrs);\n \n             for (AttributeInfo attr : attrs) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\n-                            \"\\nAttribute name: \" + attr.getName() +\n-                            \"\\nAttribute type: \" + attr.getType().getName());\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\n+                            \"\\nAttribute name: \" + attr.getName()\n+                            + \"\\nAttribute type: \" + attr.getType().getName());\n                 }\n             }\n         }\n@@ -272,8 +269,8 @@ public void search() {\n             @Override\n             public boolean handle(ConnectorObject obj) {\n \n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Add record \" + obj);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Add record \" + obj);\n                 }\n \n                 results.add(obj);\n@@ -302,11 +299,11 @@ public boolean handle(ConnectorObject obj) {\n          */\n         assertFalse(results.isEmpty());\n \n-        if (log.isDebugEnabled()) {\n+        if (LOG.isDebugEnabled()) {\n             for (ConnectorObject obj : results) {\n-                log.debug(\n-                        \"\\nName: \" + obj.getName() +\n-                        \"\\nUID: \" + obj.getUid());\n+                LOG.debug(\n+                        \"\\nName: \" + obj.getName()\n+                        + \"\\nUID: \" + obj.getUid());\n             }\n         }\n     }"},{"sha":"25b540d20e1f9aa0f4913447d2ba2ad770e10884","filename":"identityconnectors/bundles/staticws/staticwebservice/src/test/resources/bundle.properties","status":"added","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundle.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundle.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundle.properties?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -0,0 +1,2 @@\n+bundleversion=${project.version}\n+bundledirectory=${bundles.directory}"},{"sha":"ace41bcc6fda0132f552f4a450094c6edf029b6f","filename":"identityconnectors/bundles/staticws/staticwebservice/src/test/resources/bundleversion.properties","status":"removed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9962e9260d995f46ff2d51bf42f5754a0702b258/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundleversion.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9962e9260d995f46ff2d51bf42f5754a0702b258/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundleversion.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Ftest%2Fresources%2Fbundleversion.properties?ref=9962e9260d995f46ff2d51bf42f5754a0702b258","patch":"@@ -1 +0,0 @@\n-bundleversion=${project.version}"},{"sha":"d2499ab5d7586a91a181a0acb895d87e5e926356","filename":"pom.xml","status":"modified","additions":8,"deletions":13,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c158987ffcaa45a8b32f7cbbc6dfeffea230b1b4","patch":"@@ -430,11 +430,6 @@\n                     <artifactId>maven-war-plugin</artifactId>\n                     <version>2.1</version>\n                 </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-dependency-plugin</artifactId>\n-                    <version>2.1</version>\n-                </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-failsafe-plugin</artifactId>\n@@ -499,14 +494,14 @@\n                     <minimumTokens>100</minimumTokens>\n                 </configuration>\n             </plugin>\n-\t    <plugin>\n-\t      <groupId>org.apache.maven.plugins</groupId>\n-\t      <artifactId>maven-release-plugin</artifactId>\n-\t      <version>2.0</version>\n-\t      <configuration>\n-\t\t<tagBase>https://syncope.googlecode.com/svn/tags</tagBase>\n-\t      </configuration>\n-\t    </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-release-plugin</artifactId>\n+                <version>2.0</version>\n+                <configuration>\n+                    <tagBase>https://syncope.googlecode.com/svn/tags</tagBase>\n+                </configuration>\n+            </plugin>\n         </plugins>\n     </reporting>\n "}]}