{"sha":"9389e937390ecc37edb25772c1605cf403390dd4","node_id":"C_kwDOJfYA1toAKDkzODllOTM3MzkwZWNjMzdlZGIyNTc3MmMxNjA1Y2Y0MDMzOTBkZDQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-11T16:13:20Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-11T16:13:35Z"},"message":"[SYNCOPE-1721] Supporting more ServiceAccessStrategy classes","tree":{"sha":"fcecaf3733cf6bb9eb068624c3b3a6c91f08568a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fcecaf3733cf6bb9eb068624c3b3a6c91f08568a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9389e937390ecc37edb25772c1605cf403390dd4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9389e937390ecc37edb25772c1605cf403390dd4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9389e937390ecc37edb25772c1605cf403390dd4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9389e937390ecc37edb25772c1605cf403390dd4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"331b27f6a98b767737affabcbe45142d9c1bda6c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/331b27f6a98b767737affabcbe45142d9c1bda6c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/331b27f6a98b767737affabcbe45142d9c1bda6c"}],"stats":{"total":1392,"additions":1040,"deletions":352},"files":[{"sha":"82f09ad40d0d1d188835c9eba4e7549b3b2cbdc8","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/AMConsoleContext.java","status":"renamed","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAMConsoleContext.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -18,8 +18,10 @@\n  */\n package org.apache.syncope.client.console;\n \n+import org.apache.syncope.client.console.commons.AMAccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.AMPolicyTabProvider;\n import org.apache.syncope.client.console.commons.AMRealmPolicyProvider;\n+import org.apache.syncope.client.console.commons.AccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n import org.apache.syncope.client.console.init.AMClassPathScanImplementationContributor;\n@@ -28,7 +30,7 @@\n import org.springframework.context.annotation.Configuration;\n \n @Configuration(proxyBeanMethods = false)\n-public class SyncopeAMConsoleContext {\n+public class AMConsoleContext {\n \n     @Bean\n     public ClassPathScanImplementationContributor amClassPathScanImplementationContributor() {\n@@ -44,4 +46,9 @@ public RealmPolicyProvider realmPolicyProvider() {\n     public PolicyTabProvider amPolicyTabProvider() {\n         return new AMPolicyTabProvider();\n     }\n+\n+    @Bean\n+    public AccessPolicyConfProvider accessPolicyConfProvider() {\n+        return new AMAccessPolicyConfProvider();\n+    }\n }","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/SyncopeAMConsoleContext.java"},{"sha":"78a66df4a05d9b8cf0bb72e13c443cbb8a853944","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMAccessPolicyConfProvider.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMAccessPolicyConfProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMAccessPolicyConfProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMAccessPolicyConfProvider.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n+\n+public class AMAccessPolicyConfProvider implements AccessPolicyConfProvider {\n+\n+    private static final long serialVersionUID = 5657864541765007494L;\n+\n+    @Override\n+    public List<String> get() {\n+        return SyncopeWebApplication.get().getLookup().getClasses(AccessPolicyConf.class).stream().\n+                map(Class::getName).sorted().collect(Collectors.toList());\n+    }\n+}"},{"sha":"dfa9349ac4cf781c2f51b258559cf16ac7412e55","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/init/AMClassPathScanImplementationContributor.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -21,6 +21,9 @@\n import java.util.Optional;\n import org.apache.syncope.common.lib.attr.AttrRepoConf;\n import org.apache.syncope.common.lib.auth.AuthModuleConf;\n+import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n+import org.apache.syncope.common.lib.policy.AttrReleasePolicyConf;\n+import org.apache.syncope.common.lib.policy.AuthPolicyConf;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n \n@@ -30,6 +33,9 @@ public class AMClassPathScanImplementationContributor implements ClassPathScanIm\n     public void extend(final ClassPathScanningCandidateComponentProvider scanner) {\n         scanner.addIncludeFilter(new AssignableTypeFilter(AuthModuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AttrRepoConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AccessPolicyConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AttrReleasePolicyConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AuthPolicyConf.class));\n     }\n \n     @Override\n@@ -40,6 +46,15 @@ public Optional<String> getLabel(final Class<?> clazz) {\n         if (AttrRepoConf.class.isAssignableFrom(clazz)) {\n             return Optional.of(AttrRepoConf.class.getName());\n         }\n+        if (AccessPolicyConf.class.isAssignableFrom(clazz)) {\n+            return Optional.of(AccessPolicyConf.class.getName());\n+        }\n+        if (AttrReleasePolicyConf.class.isAssignableFrom(clazz)) {\n+            return Optional.of(AttrReleasePolicyConf.class.getName());\n+        }\n+        if (AuthPolicyConf.class.isAssignableFrom(clazz)) {\n+            return Optional.of(AuthPolicyConf.class.getName());\n+        }\n         return Optional.empty();\n     }\n }"},{"sha":"b8487037c1f9d48e7f959df760db3ec2dc0e3f9a","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPEntityDirectoryPanel.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -86,16 +86,20 @@ protected List<IColumn<SAML2IdPEntityTO, String>> getColumns() {\n                 Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n         columns.add(new AbstractColumn<>(Model.of(\"URL\")) {\n \n+            private static final long serialVersionUID = -7226955670801277153L;\n+\n             @Override\n             public void populateItem(\n-                final Item<ICellPopulator<SAML2IdPEntityTO>> cellItem,\n-                final String componentId,\n-                final IModel<SAML2IdPEntityTO> rowModel) {\n+                    final Item<ICellPopulator<SAML2IdPEntityTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SAML2IdPEntityTO> rowModel) {\n \n                 cellItem.add(new ExternalLink(\n-                    componentId,\n-                    Model.of(metadataURL),\n-                    Model.of(metadataURL)) {\n+                        componentId,\n+                        Model.of(metadataURL),\n+                        Model.of(metadataURL)) {\n+\n+                    private static final long serialVersionUID = -1919646533527005367L;\n \n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n@@ -125,8 +129,8 @@ protected ActionsPanel<SAML2IdPEntityTO> getActions(final IModel<SAML2IdPEntityT\n             @Override\n             public void onClick(final AjaxRequestTarget target, final SAML2IdPEntityTO ignore) {\n                 send(SAML2IdPEntityDirectoryPanel.this, Broadcast.EXACT,\n-                    new AjaxWizard.EditItemActionEvent<>(\n-                        SAML2IdPEntityRestClient.get(model.getObject().getKey()), target));\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                SAML2IdPEntityRestClient.get(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.SAML2_IDP_ENTITY_SET);\n "},{"sha":"6ac5f77c42bd771d618557298c9134e59e10f695","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SAML2SPEntityDirectoryPanel.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -92,17 +92,21 @@ protected List<IColumn<SAML2SPEntityTO, String>> getColumns() {\n \n         columns.add(new AbstractColumn<>(Model.of(\"URL\")) {\n \n+            private static final long serialVersionUID = -7226955670801277153L;\n+\n             @Override\n             public void populateItem(\n-                final Item<ICellPopulator<SAML2SPEntityTO>> cellItem,\n-                final String componentId,\n-                final IModel<SAML2SPEntityTO> rowModel) {\n+                    final Item<ICellPopulator<SAML2SPEntityTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SAML2SPEntityTO> rowModel) {\n \n                 String metadataURL = waPrefix + \"/sp/\" + rowModel.getObject().getKey() + \"/metadata\";\n                 cellItem.add(new ExternalLink(\n-                    componentId,\n-                    Model.of(metadataURL),\n-                    Model.of(metadataURL)) {\n+                        componentId,\n+                        Model.of(metadataURL),\n+                        Model.of(metadataURL)) {\n+\n+                    private static final long serialVersionUID = -1919646533527005367L;\n \n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n@@ -132,8 +136,8 @@ protected ActionsPanel<SAML2SPEntityTO> getActions(final IModel<SAML2SPEntityTO>\n             @Override\n             public void onClick(final AjaxRequestTarget target, final SAML2SPEntityTO ignore) {\n                 send(SAML2SPEntityDirectoryPanel.this, Broadcast.EXACT,\n-                    new AjaxWizard.EditItemActionEvent<>(\n-                        SAML2SPEntityRestClient.get(model.getObject().getKey()), target));\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                SAML2SPEntityRestClient.get(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.SAML2_SP_ENTITY_SET);\n "},{"sha":"72a9bf6592a683b031f0e6e85e0b10bf240c3c63","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyAttrsDirectoryPanel.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -31,8 +31,8 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n@@ -49,13 +49,13 @@ public class AccessPolicyAttrsDirectoryPanel extends AttrListDirectoryPanel {\n \n     private final IModel<AccessPolicyTO> accessPolicyModel;\n \n-    private final SerializableFunction<AccessPolicyConf, List<Attr>> attrsAccessor;\n+    private final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor;\n \n     public AccessPolicyAttrsDirectoryPanel(\n             final String id,\n             final BaseModal<AccessPolicyTO> wizardModal,\n             final IModel<AccessPolicyTO> model,\n-            final SerializableFunction<AccessPolicyConf, List<Attr>> attrsAccessor,\n+            final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor,\n             final PageReference pageRef) {\n \n         super(id, pageRef, false);\n@@ -86,7 +86,8 @@ protected ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n                 try {\n-                    attrsAccessor.apply(accessPolicyModel.getObject().getConf()).remove(model.getObject());\n+                    attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicyModel.getObject().getConf()).\n+                            remove(model.getObject());\n                     PolicyRestClient.update(PolicyType.ACCESS, accessPolicyModel.getObject());\n \n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n@@ -135,7 +136,7 @@ private AccessPolicyAttrsProvider(final int paginatorRows) {\n \n         @Override\n         protected List<Attr> list() {\n-            return attrsAccessor.apply(accessPolicyModel.getObject().getConf());\n+            return attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicyModel.getObject().getConf());\n         }\n     }\n }"},{"sha":"a9029e9008145d76b34a2d252fa69ee453407ac7","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyAttrsWizardBuilder.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -23,8 +23,8 @@\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wizards.AttrWizardBuilder;\n import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n import org.danekja.java.util.function.serializable.SerializableFunction;\n@@ -35,11 +35,11 @@ public class AccessPolicyAttrsWizardBuilder extends AttrWizardBuilder {\n \n     private final AccessPolicyTO accessPolicy;\n \n-    private final SerializableFunction<AccessPolicyConf, List<Attr>> attrsAccessor;\n+    private final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor;\n \n     public AccessPolicyAttrsWizardBuilder(\n             final AccessPolicyTO accessPolicy,\n-            final SerializableFunction<AccessPolicyConf, List<Attr>> attrsAccessor,\n+            final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor,\n             final Attr attr,\n             final PageReference pageRef) {\n \n@@ -50,8 +50,9 @@ public AccessPolicyAttrsWizardBuilder(\n \n     @Override\n     protected Serializable onApplyInternal(final Attr modelObject) {\n-        attrsAccessor.apply(accessPolicy.getConf()).removeIf(p -> modelObject.getSchema().equals(p.getSchema()));\n-        attrsAccessor.apply(accessPolicy.getConf()).add(modelObject);\n+        attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicy.getConf()).\n+                removeIf(p -> modelObject.getSchema().equals(p.getSchema()));\n+        attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicy.getConf()).add(modelObject);\n \n         PolicyRestClient.update(PolicyType.ACCESS, accessPolicy);\n "},{"sha":"4261ad82366533b6c7ded3d71280ec3d241c2314","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyDirectoryPanel.java","status":"modified","additions":64,"deletions":44,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -21,19 +21,20 @@\n import java.util.List;\n import org.apache.syncope.client.console.panels.ModalDirectoryPanel;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n@@ -56,15 +57,21 @@ public AccessPolicyDirectoryPanel(final String id, final PageReference pageRef)\n \n     @Override\n     protected void addCustomColumnFields(final List<IColumn<AccessPolicyTO, String>> columns) {\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\"order\", this), \"order\", \"order\"));\n-        columns.add(new BooleanPropertyColumn<>(\n-                new StringResourceModel(\"enabled\", this), \"enabled\", \"enabled\"));\n-        columns.add(new BooleanPropertyColumn<>(\n-                new StringResourceModel(\"ssoEnabled\", this), \"ssoEnabled\", \"ssoEnabled\"));\n-        columns.add(new BooleanPropertyColumn<>(\n-                new StringResourceModel(\"requireAllAttributes\", this), \"requireAllAttributes\", \"requireAllAttributes\"));\n-        columns.add(new BooleanPropertyColumn<>(\n-                new StringResourceModel(\"caseInsensitive\", this), \"caseInsensitive\", \"caseInsensitive\"));\n+        columns.add(new AbstractColumn<AccessPolicyTO, String>(new StringResourceModel(\"conf\", this)) {\n+\n+            private static final long serialVersionUID = -7226955670801277153L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<AccessPolicyTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<AccessPolicyTO> rowModel) {\n+\n+                cellItem.add(new Label(componentId, rowModel.getObject().getConf() == null\n+                        ? \"\"\n+                        : rowModel.getObject().getConf().getClass().getName()));\n+            }\n+        });\n     }\n \n     @Override\n@@ -79,42 +86,55 @@ public void onClick(final AjaxRequestTarget target, final AccessPolicyTO ignore)\n                 if (model.getObject().getConf() == null) {\n                     model.getObject().setConf(new DefaultAccessPolicyConf());\n                 }\n-                target.add(ruleCompositionModal.setContent(new ModalDirectoryPanel<>(\n-                        ruleCompositionModal,\n-                        new AccessPolicyAttrsDirectoryPanel(\n-                                \"panel\",\n-                                ruleCompositionModal,\n-                                model,\n-                                AccessPolicyConf::getRequiredAttrs,\n-                                pageRef),\n-                        pageRef)));\n-                ruleCompositionModal.header(new Model<>(getString(\"requiredAttrs.title\", model)));\n-                ruleCompositionModal.show(true);\n+                target.add(policySpecModal.setContent(\n+                        new AccessPolicyModalPanel(policySpecModal, model, pageRef)));\n+                policySpecModal.header(new Model<>(getString(\"accessPolicyConf.title\", model)));\n+                policySpecModal.show(true);\n             }\n-        }, ActionLink.ActionType.TYPE_EXTENSIONS, IdRepoEntitlement.POLICY_UPDATE);\n+        }, ActionLink.ActionType.CHANGE_VIEW, IdRepoEntitlement.POLICY_UPDATE);\n \n-        panel.add(new ActionLink<>() {\n+        if (model.getObject().getConf() instanceof DefaultAccessPolicyConf) {\n+            panel.add(new ActionLink<>() {\n \n-            private static final long serialVersionUID = -3722207913631435501L;\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AccessPolicyTO ignore) {\n-                model.setObject(PolicyRestClient.read(type, model.getObject().getKey()));\n-                if (model.getObject().getConf() == null) {\n-                    model.getObject().setConf(new DefaultAccessPolicyConf());\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final AccessPolicyTO ignore) {\n+                    model.setObject(PolicyRestClient.read(type, model.getObject().getKey()));\n+                    target.add(ruleCompositionModal.setContent(new ModalDirectoryPanel<>(\n+                            ruleCompositionModal,\n+                            new AccessPolicyAttrsDirectoryPanel(\n+                                    \"panel\",\n+                                    ruleCompositionModal,\n+                                    model,\n+                                    DefaultAccessPolicyConf::getRequiredAttrs,\n+                                    pageRef),\n+                            pageRef)));\n+                    ruleCompositionModal.header(new Model<>(getString(\"requiredAttrs.title\", model)));\n+                    ruleCompositionModal.show(true);\n                 }\n-                target.add(ruleCompositionModal.setContent(new ModalDirectoryPanel<>(\n-                        ruleCompositionModal,\n-                        new AccessPolicyAttrsDirectoryPanel(\n-                                \"panel\",\n-                                ruleCompositionModal,\n-                                model,\n-                                AccessPolicyConf::getRejectedAttrs,\n-                                pageRef),\n-                        pageRef)));\n-                ruleCompositionModal.header(new Model<>(getString(\"rejectedAttrs.title\", model)));\n-                ruleCompositionModal.show(true);\n-            }\n-        }, ActionLink.ActionType.CLAIM, IdRepoEntitlement.POLICY_UPDATE);\n+            }, ActionLink.ActionType.TYPE_EXTENSIONS, IdRepoEntitlement.POLICY_UPDATE);\n+\n+            panel.add(new ActionLink<>() {\n+\n+                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final AccessPolicyTO ignore) {\n+                    model.setObject(PolicyRestClient.read(type, model.getObject().getKey()));\n+                    target.add(ruleCompositionModal.setContent(new ModalDirectoryPanel<>(\n+                            ruleCompositionModal,\n+                            new AccessPolicyAttrsDirectoryPanel(\n+                                    \"panel\",\n+                                    ruleCompositionModal,\n+                                    model,\n+                                    DefaultAccessPolicyConf::getRejectedAttrs,\n+                                    pageRef),\n+                            pageRef)));\n+                    ruleCompositionModal.header(new Model<>(getString(\"rejectedAttrs.title\", model)));\n+                    ruleCompositionModal.show(true);\n+                }\n+            }, ActionLink.ActionType.CLAIM, IdRepoEntitlement.POLICY_UPDATE);\n+        }\n     }\n }"},{"sha":"e71d36e90ce43390f78363dd4089c198e55afafc","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyModalPanel.java","status":"added","additions":164,"deletions":0,"changes":164,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,164 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.time.DateFormatUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DateOps;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDateTimeFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n+import org.apache.syncope.common.lib.policy.HttpRequestAccessPolicyConf;\n+import org.apache.syncope.common.lib.policy.RemoteEndpointAccessPolicyConf;\n+import org.apache.syncope.common.lib.policy.TimeBasedAccessPolicyConf;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.validation.validator.UrlValidator;\n+\n+public class AccessPolicyModalPanel extends AbstractModalPanel<AccessPolicyTO> {\n+\n+    private static final long serialVersionUID = -6446551344059681908L;\n+\n+    private final IModel<AccessPolicyTO> model;\n+\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    public AccessPolicyModalPanel(\n+            final BaseModal<AccessPolicyTO> modal,\n+            final IModel<AccessPolicyTO> model,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.model = model;\n+\n+        List<Component> fields = new ArrayList<>();\n+\n+        if (model.getObject().getConf() instanceof DefaultAccessPolicyConf) {\n+            fields.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n+                    \"field\",\n+                    \"order\",\n+                    Integer.class,\n+                    new PropertyModel<>(model.getObject().getConf(), \"order\")));\n+            fields.add(new AjaxCheckBoxPanel(\n+                    \"field\",\n+                    \"enabled\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"enabled\"),\n+                    false));\n+            fields.add(new AjaxCheckBoxPanel(\n+                    \"field\",\n+                    \"ssoEnabled\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"ssoEnabled\"),\n+                    false));\n+            fields.add(new AjaxCheckBoxPanel(\n+                    \"field\",\n+                    \"requireAllAttributes\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"requireAllAttributes\"),\n+                    false));\n+            fields.add(new AjaxCheckBoxPanel(\n+                    \"field\",\n+                    \"caseInsensitive\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"caseInsensitive\"),\n+                    false));\n+            AjaxTextFieldPanel unauthorizedRedirectUrl = new AjaxTextFieldPanel(\n+                    \"field\",\n+                    \"unauthorizedRedirectUrl\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"unauthorizedRedirectUrl\"),\n+                    false);\n+            unauthorizedRedirectUrl.getField().add(new UrlValidator(new String[] { \"http\", \"https\" }));\n+            fields.add(unauthorizedRedirectUrl);\n+        } else if (model.getObject().getConf() instanceof HttpRequestAccessPolicyConf) {\n+            fields.add(new AjaxTextFieldPanel(\"field\", \"ipAddress\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"ipAddress\"), false));\n+            fields.add(new AjaxTextFieldPanel(\"field\", \"userAgent\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"userAgent\"), false));\n+        } else if (model.getObject().getConf() instanceof RemoteEndpointAccessPolicyConf) {\n+            AjaxTextFieldPanel endpointUrl = new AjaxTextFieldPanel(\n+                    \"field\",\n+                    \"endpointUrl\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"endpointUrl\"),\n+                    false);\n+            endpointUrl.getField().add(new UrlValidator(new String[] { \"http\", \"https\" }));\n+            fields.add(endpointUrl.setRequired(true));\n+\n+            FieldPanel panel = new AjaxTextFieldPanel(\n+                    \"panel\",\n+                    \"acceptableResponseCodes\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"acceptableResponseCodes\"));\n+            fields.add(new MultiFieldPanel.Builder<>(\n+                    new PropertyModel<>(model.getObject().getConf(), \"acceptableResponseCodes\")).build(\n+                    \"field\",\n+                    \"acceptableResponseCodes\",\n+                    panel));\n+        } else if (model.getObject().getConf() instanceof TimeBasedAccessPolicyConf) {\n+            fields.add(new AjaxDateTimeFieldPanel(\n+                    \"field\",\n+                    \"start\",\n+                    new DateOps.WrappedDateModel(new PropertyModel<>(model.getObject().getConf(), \"start\")),\n+                    DateFormatUtils.ISO_8601_EXTENDED_DATETIME_TIME_ZONE_FORMAT));\n+            fields.add(new AjaxDateTimeFieldPanel(\n+                    \"field\",\n+                    \"end\",\n+                    new DateOps.WrappedDateModel(new PropertyModel<>(model.getObject().getConf(), \"end\")),\n+                    DateFormatUtils.ISO_8601_EXTENDED_DATETIME_TIME_ZONE_FORMAT));\n+            fields.add(new AjaxTextFieldPanel(\"field\", \"zoneId\",\n+                    new PropertyModel<>(model.getObject().getConf(), \"zoneId\"), false));\n+        }\n+\n+        add(new ListView<>(\"fields\", fields) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Component> item) {\n+                item.add(item.getModelObject());\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target) {\n+        try {\n+            PolicyRestClient.update(PolicyType.ACCESS, model.getObject());\n+\n+            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While updating Access Policy {}\", model.getObject().getKey(), e);\n+            SyncopeConsoleSession.get().onException(e);\n+        }\n+        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+}"},{"sha":"fd02a70995e12131ff1fe23f0d3a256495c76643","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AttrReleasePolicyModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -47,7 +47,7 @@\n \n public class AttrReleasePolicyModalPanel extends AbstractModalPanel<AttrReleasePolicyTO> {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 2668291404983623500L;\n \n     private final IModel<List<String>> allAttrRepos = new LoadableDetachableModel<>() {\n "},{"sha":"b1fcbd9eac424eef6abfb49ef3255119e7485f8a","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.html?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"fields\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"field\"/>\n+      </div>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"a3d82caf881fa9e8200c2de3600f0fb87569cb4d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Order\n+ssoEnabled=SSO Enabled\n+enabled=Enabled\n+requireAllAttributes=Require All Attributes\n+caseInsensitive=Case Insensitive\n+ipAddress=IP Address\n+userAgent=User Agent\n+endpointUrl=Endpoint URL\n+start=Start\n+end=End\n+zoneId=Zone Id"},{"sha":"a3d82caf881fa9e8200c2de3600f0fb87569cb4d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel_fr.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_fr.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_fr.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_fr.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Order\n+ssoEnabled=SSO Enabled\n+enabled=Enabled\n+requireAllAttributes=Require All Attributes\n+caseInsensitive=Case Insensitive\n+ipAddress=IP Address\n+userAgent=User Agent\n+endpointUrl=Endpoint URL\n+start=Start\n+end=End\n+zoneId=Zone Id"},{"sha":"e5acdd4de161e342ea474ebed87ee6c73a30abb6","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel_it.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_it.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Ordinamento\n+ssoEnabled=SSO Abilitato\n+enabled=Abilitata\n+requireAllAttributes=Richiedi Tutti gli Attributi\n+caseInsensitive=Case Insensitive\n+ipAddress=Indirizzo IP\n+userAgent=User Agent\n+endpointUrl=URL Endpoint\n+start=Inizio\n+end=Fine\n+zoneId=Zone Id"},{"sha":"a3d82caf881fa9e8200c2de3600f0fb87569cb4d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel_ja.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ja.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Order\n+ssoEnabled=SSO Enabled\n+enabled=Enabled\n+requireAllAttributes=Require All Attributes\n+caseInsensitive=Case Insensitive\n+ipAddress=IP Address\n+userAgent=User Agent\n+endpointUrl=Endpoint URL\n+start=Start\n+end=End\n+zoneId=Zone Id"},{"sha":"a3d82caf881fa9e8200c2de3600f0fb87569cb4d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel_pt_BR.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_pt_BR.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Order\n+ssoEnabled=SSO Enabled\n+enabled=Enabled\n+requireAllAttributes=Require All Attributes\n+caseInsensitive=Case Insensitive\n+ipAddress=IP Address\n+userAgent=User Agent\n+endpointUrl=Endpoint URL\n+start=Start\n+end=End\n+zoneId=Zone Id"},{"sha":"a3d82caf881fa9e8200c2de3600f0fb87569cb4d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AccessPolicyModalPanel_ru.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel_ru.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+order=Order\n+ssoEnabled=SSO Enabled\n+enabled=Enabled\n+requireAllAttributes=Require All Attributes\n+caseInsensitive=Case Insensitive\n+ipAddress=IP Address\n+userAgent=User Agent\n+endpointUrl=Endpoint URL\n+start=Start\n+end=End\n+zoneId=Zone Id"},{"sha":"553bb14ea030bfc702260827f7e38c3c4a420062","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/IdMConsoleContext.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdMConsoleContext.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -40,7 +40,7 @@\n import org.springframework.context.annotation.Configuration;\n \n @Configuration(proxyBeanMethods = false)\n-public class SyncopeIdMConsoleContext {\n+public class IdMConsoleContext {\n \n     @Bean\n     public ClassPathScanImplementationContributor idmClassPathScanImplementationContributor() {","previous_filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/SyncopeIdMConsoleContext.java"},{"sha":"61f24eb15ed10d92668989a448d6a8b5e5648cd0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/IdRepoConsoleContext.java","status":"renamed","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdRepoConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdRepoConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FIdRepoConsoleContext.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -18,10 +18,12 @@\n  */\n package org.apache.syncope.client.console;\n \n+import org.apache.syncope.client.console.commons.AccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n@@ -46,7 +48,7 @@\n import org.springframework.context.annotation.Configuration;\n \n @Configuration(proxyBeanMethods = false)\n-public class ConsoleContext {\n+public class IdRepoConsoleContext {\n \n     @ConditionalOnMissingBean\n     @Bean\n@@ -125,4 +127,10 @@ public RealmPolicyProvider realmPolicyProvider() {\n     public PolicyTabProvider idRepoPolicyTabProvider() {\n         return new IdRepoPolicyTabProvider();\n     }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AccessPolicyConfProvider accessPolicyConfProvider() {\n+        return new IdRepoAccessPolicyConfProvider();\n+    }\n }","previous_filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/ConsoleContext.java"},{"sha":"141e017a08ce07b96784f73669157db3987c1527","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -21,6 +21,7 @@\n import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n import java.util.Map;\n import org.apache.syncope.client.console.actuate.SyncopeConsoleInfoContributor;\n+import org.apache.syncope.client.console.commons.AccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n@@ -77,6 +78,7 @@ public SyncopeWebApplication syncopeWebApplication(\n             final StatusProvider statusProvider,\n             final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n             final ImplementationInfoProvider implementationInfoProvider,\n+            final AccessPolicyConfProvider accessPolicyConfProvider,\n             final ApplicationContext ctx) {\n \n         return new SyncopeWebApplication(\n@@ -88,7 +90,9 @@ public SyncopeWebApplication syncopeWebApplication(\n                 anyDirectoryPanelAdditionalActionLinksProvider,\n                 anyWizardBuilderAdditionalSteps, statusProvider,\n                 virSchemaDetailsPanelProvider,\n-                implementationInfoProvider, ctx);\n+                implementationInfoProvider,\n+                accessPolicyConfProvider,\n+                ctx);\n     }\n \n     @ConditionalOnMissingBean"},{"sha":"3a4f55e061a358d6c8307792c57baa9ceb5def2f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -26,6 +26,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.AccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n@@ -101,6 +102,8 @@ public static SyncopeWebApplication get() {\n \n     protected final ImplementationInfoProvider implementationInfoProvider;\n \n+    protected final AccessPolicyConfProvider accessPolicyConfProvider;\n+\n     protected final ApplicationContext ctx;\n \n     public SyncopeWebApplication(\n@@ -114,6 +117,7 @@ public SyncopeWebApplication(\n             final StatusProvider statusProvider,\n             final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n             final ImplementationInfoProvider implementationInfoProvider,\n+            final AccessPolicyConfProvider accessPolicyConfProvider,\n             final ApplicationContext ctx) {\n \n         this.props = props;\n@@ -126,6 +130,7 @@ public SyncopeWebApplication(\n         this.statusProvider = statusProvider;\n         this.virSchemaDetailsPanelProvider = virSchemaDetailsPanelProvider;\n         this.implementationInfoProvider = implementationInfoProvider;\n+        this.accessPolicyConfProvider = accessPolicyConfProvider;\n         this.ctx = ctx;\n     }\n \n@@ -349,4 +354,8 @@ public List<UserFormFinalizer> getFormFinalizers(final AjaxWizard.Mode mode) {\n \n         return finalizers;\n     }\n+\n+    public AccessPolicyConfProvider getAccessPolicyConfProvider() {\n+        return accessPolicyConfProvider;\n+    }\n }"},{"sha":"d8aca69cca5ee8bc28851a82d4e8bfcf43f35167","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AccessPolicyConfProvider.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAccessPolicyConfProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAccessPolicyConfProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAccessPolicyConfProvider.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+@FunctionalInterface\n+public interface AccessPolicyConfProvider extends Serializable {\n+\n+    List<String> get();\n+}"},{"sha":"b3dcd2b40eccad526700f89ac382a71bb3508616","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoAccessPolicyConfProvider.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAccessPolicyConfProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAccessPolicyConfProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoAccessPolicyConfProvider.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.List;\n+\n+public class IdRepoAccessPolicyConfProvider implements AccessPolicyConfProvider {\n+\n+    private static final long serialVersionUID = 3002474783308961295L;\n+\n+    @Override\n+    public List<String> get() {\n+        return List.of();\n+    }\n+}"},{"sha":"bc7bfc0efe56a6d4e0bf0845be3b573e191fac42","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -115,8 +115,10 @@ protected static String getBasePackage() {\n \n     private final ConsoleProperties props;\n \n-    public ClassPathScanImplementationLookup(final Collection<ClassPathScanImplementationContributor> contributors,\n-                                             final ConsoleProperties props) {\n+    public ClassPathScanImplementationLookup(\n+            final Collection<ClassPathScanImplementationContributor> contributors,\n+            final ConsoleProperties props) {\n+\n         this.contributors = contributors;\n         this.props = props;\n     }"},{"sha":"82dff84e4fb5468c0bea2b466ea5c9000bbedc15","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":30,"deletions":40,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.policies;\n \n import java.io.Serializable;\n-import java.net.URI;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -57,7 +56,6 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n-import org.apache.wicket.validation.validator.UrlValidator;\n \n public class PolicyModalPanelBuilder<T extends PolicyTO> extends AbstractModalPanelBuilder<T> {\n \n@@ -132,6 +130,16 @@ protected List<String> load() {\n             }\n         };\n \n+        private final LoadableDetachableModel<List<String>> accessPolicyConfClasses = new LoadableDetachableModel<>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return SyncopeWebApplication.get().getAccessPolicyConfProvider().get();\n+            }\n+        };\n+\n         Profile(final T policyTO, final BaseModal<T> modal, final PageReference pageRef) {\n             super(modal, pageRef);\n             modal.setFormModel(policyTO);\n@@ -256,59 +264,41 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     break;\n \n                 case ACCESS:\n-                    fields.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n-                            \"field\",\n-                            \"order\",\n-                            Integer.class,\n-                            new PropertyModel<>(policyTO, \"order\")));\n-                    fields.add(new AjaxCheckBoxPanel(\n-                            \"field\",\n-                            \"enabled\",\n-                            new PropertyModel<>(policyTO, \"enabled\"),\n-                            false));\n-                    fields.add(new AjaxCheckBoxPanel(\n-                            \"field\",\n-                            \"ssoEnabled\",\n-                            new PropertyModel<>(policyTO, \"ssoEnabled\"),\n-                            false));\n-                    fields.add(new AjaxCheckBoxPanel(\n-                            \"field\",\n-                            \"requireAllAttributes\",\n-                            new PropertyModel<>(policyTO, \"requireAllAttributes\"),\n-                            false));\n-                    fields.add(new AjaxCheckBoxPanel(\n-                            \"field\",\n-                            \"caseInsensitive\",\n-                            new PropertyModel<>(policyTO, \"caseInsensitive\"),\n-                            false));\n-                    AjaxTextFieldPanel unauthorizedRedirectUrl = new AjaxTextFieldPanel(\n+                    fields.add(new AjaxDropDownChoicePanel<>(\n                             \"field\",\n-                            \"unauthorizedRedirectUrl\",\n+                            \"conf\",\n                             new IModel<>() {\n \n-                        private static final long serialVersionUID = 1015030402166681242L;\n+                        private static final long serialVersionUID = -6515946495655944432L;\n \n                         @Override\n-                        public String getObject() {\n-                            return Optional.ofNullable(\n-                                    (URI) PropertyResolver.getValue(\"unauthorizedRedirectUrl\", policyTO)).\n-                                    map(URI::toASCIIString).orElse(null);\n+                        public Serializable getObject() {\n+                            return Optional.ofNullable(PropertyResolver.getValue(\"conf\", policyTO)).\n+                                    map(obj -> obj.getClass().getName()).\n+                                    orElse(null);\n                         }\n \n                         @Override\n-                        public void setObject(final String object) {\n+                        public void setObject(final Serializable object) {\n+                            Object conf = Optional.ofNullable(object).map(o -> {\n+                                try {\n+                                    return Class.forName(object.toString()).getDeclaredConstructor().newInstance();\n+                                } catch (Exception e) {\n+                                    LOG.error(\"Could not instantiate {}\", object, e);\n+                                    return null;\n+                                }\n+                            }).orElse(null);\n+\n                             PropertyResolverConverter prc = new PropertyResolverConverter(\n                                     Application.get().getConverterLocator(),\n                                     SyncopeConsoleSession.get().getLocale());\n                             PropertyResolver.setValue(\n-                                    \"unauthorizedRedirectUrl\",\n+                                    \"conf\",\n                                     policyTO,\n-                                    Optional.ofNullable(object).map(URI::create).orElse(null),\n+                                    Optional.ofNullable(conf).orElse(null),\n                                     prc);\n                         }\n-                    }, false);\n-                    unauthorizedRedirectUrl.getField().add(new UrlValidator(new String[] { \"http\", \"https\" }));\n-                    fields.add(unauthorizedRedirectUrl);\n+                    }).setChoices(accessPolicyConfClasses).setRequired(true));\n                     break;\n \n                 case ATTR_RELEASE:"},{"sha":"7ebfcf603db0109c2b13106cc17865ce471e7bdd","filename":"client/idrepo/console/src/main/resources/META-INF/spring.factories","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -16,4 +16,4 @@\n # under the License.\n \n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n-  org.apache.syncope.client.console.ConsoleContext\n+  org.apache.syncope.client.console.IdRepoConsoleContext"},{"sha":"d3ba8cea8d2bc94f12a550aaec3faefa68dae284","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -30,7 +30,6 @@ any.cancel=Cancel ${name}\n compose.title=rules\n conflictResolutionAction=Conflict Resolution Action\n enabled=Enabled\n-ssoEnabled=SSO Enabled\n change_view.title=configuration\n change_view.class=fa fa-expand\n requiredAttrs.title=Required Attributes\n@@ -46,12 +45,12 @@ attrReleasePolicyConf.title=Attribute Release Configuration\n authPolicyConf.title=Authentication Configuration\n tryAll=Try All\n authModules=Authentication Modules\n-requireAllAttributes=Require All Attributes\n-caseInsensitive=Case Insensitive\n order=Order\n rejectedAttrs.title=Rejected Attributes\n unauthorizedRedirectUrl=Unauthorized Redirect URL\n maxAttempts=Max Attempts\n backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configuration\n+accessPolicyConf.title=Access Policy Configuration"},{"sha":"ef600f1ff2a6e3f87a7eb876bb5cd364593ce2a3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_fr_CA.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -30,7 +30,6 @@ any.cancel=Annuler ${name}\n compose.title=r\\u00e8glements \n conflictResolutionAction=Action de r\\u00e9solution des conflits\n enabled=Enabled\n-ssoEnabled=SSO Enabled\n change_view.title=configuration\n change_view.class=fa fa-expand\n requiredAttrs.title=Required Attributes\n@@ -46,12 +45,12 @@ attrReleasePolicyConf.title=Attribute Release Configuration\n authPolicyConf.title=Authentication Configuration\n tryAll=Try All\n authModules=Authentication Modules\n-requireAllAttributes=Require All Attributes\n-caseInsensitive=Case Insensitive\n order=Order\n rejectedAttrs.title=Rejected Attributes\n unauthorizedRedirectUrl=Unauthorized Redirect URL\n maxAttempts=Max Attempts\n backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configuration\n+accessPolicyConf.title=Access Policy Configuration"},{"sha":"a7d05a668de091b91e954e76a61a78e048fa3c0a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -30,7 +30,6 @@ any.cancel=Annulla ${name}\n compose.title=regole\n conflictResolutionAction=Azione di Risoluzione Conflitti\n enabled=Abilitata\n-ssoEnabled=SSO Abilitato\n change_view.title=configurazione\n change_view.class=fa fa-expand\n requiredAttrs.title=Attributi Richiesti\n@@ -46,12 +45,12 @@ attrReleasePolicyConf.title=Configurazione Rilascio Attributi\n authPolicyConf.title=Configurazione Autenticazione\n tryAll=Prova Tutti\n authModules=Moduli di Authenticazione\n-requireAllAttributes=Attributi Obbligatori\n-caseInsensitive=Case Insensitive\n order=Ordinamento\n rejectedAttrs.title=Attributi Rifiutati\n unauthorizedRedirectUrl=URL di Ridirezione Per Mancata Autorizzazione\n maxAttempts=Tentativi Massimi\n backOffStrategy=Strategia di BackOff\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configurazione\n+accessPolicyConf.title=Configurazione Accesso"},{"sha":"2a5e1ad609f710fe639cfb568cc1f274d2fca5f3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ja.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -30,7 +30,6 @@ any.cancel=${name} \\u3092\\u30ad\\u30e3\\u30f3\\u30bb\\u30eb\n compose.title=\\u30eb\\u30fc\\u30eb\n conflictResolutionAction=\\u7af6\\u5408\\u89e3\\u6c7a\\u30a2\\u30af\\u30b7\\u30e7\\u30f3\n enabled=Enabled\n-ssoEnabled=SSO Enabled\n change_view.title=configuration\n change_view.class=fa fa-expand\n requiredAttrs.title=Required Attributes\n@@ -46,12 +45,12 @@ attrReleasePolicyConf.title=Attribute Release Configuration\n authPolicyConf.title=Authentication Configuration\n tryAll=Try All\n authModules=Authentication Modules\n-requireAllAttributes=Require All Attributes\n-caseInsensitive=Case Insensitive\n order=Order\n rejectedAttrs.title=Rejected Attributes\n unauthorizedRedirectUrl=Unauthorized Redirect URL\n maxAttempts=Max Attempts\n backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configuration\n+accessPolicyConf.title=Access Policy Configuration"},{"sha":"3cfc47de41f46ce5e053c6e62ecb863ebab8c948","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -30,7 +30,6 @@ any.cancel=Cancel ${name}\n compose.title=rules\n conflictResolutionAction=Conflict Resolution Action\n enabled=Enabled\n-ssoEnabled=SSO Enabled\n change_view.title=configuration\n change_view.class=fa fa-expand\n requiredAttrs.title=Required Attributes\n@@ -46,12 +45,12 @@ attrReleasePolicyConf.title=Attribute Release Configuration\n authPolicyConf.title=Authentication Configuration\n tryAll=Try All\n authModules=Authentication Modules\n-requireAllAttributes=Require All Attributes\n-caseInsensitive=Case Insensitive\n order=Order\n rejectedAttrs.title=Rejected Attributes\n unauthorizedRedirectUrl=Unauthorized Redirect URL\n maxAttempts=Max Attempts\n backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configuration\n+accessPolicyConf.title=Access Policy Configuration"},{"sha":"9bc0f705f628988943cf57c5549bff3eae35f0ea","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -31,7 +31,6 @@ any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${name}\n compose.title=rules\n conflictResolutionAction=Conflict Resolution Action\n enabled=Enabled\n-ssoEnabled=SSO Enabled\n change_view.title=configuration\n change_view.class=fa fa-expand\n requiredAttrs.title=Required Attributes\n@@ -47,12 +46,12 @@ attrReleasePolicyConf.title=Attribute Release Configuration\n authPolicyConf.title=Authentication Configuration\n tryAll=Try All\n authModules=Authentication Modules\n-requireAllAttributes=Require All Attributes\n-caseInsensitive=Case Insensitive\n order=Order\n rejectedAttrs.title=Rejected Attributes\n unauthorizedRedirectUrl=Unauthorized Redirect URL\n maxAttempts=Max Attempts\n backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n+conf=Configuration\n+accessPolicyConf.title=Access Policy Configuration"},{"sha":"8b61bb519084f6f6d250e9015ac63dfecfaec54f","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -35,10 +35,12 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.cxf.jaxrs.client.Client;\n+import org.apache.syncope.client.console.commons.AccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.IdRepoAccessPolicyConfProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyDirectoryPanelAdditionalActionsProvider;\n import org.apache.syncope.client.console.commons.IdRepoAnyWizardBuilderAdditionalSteps;\n@@ -194,6 +196,11 @@ public ImplementationInfoProvider implementationInfoProvider() {\n         public PolicyTabProvider policyTabProvider() {\n             return new IdRepoPolicyTabProvider();\n         }\n+\n+        @Bean\n+        public AccessPolicyConfProvider accessPolicyConfProvider() {\n+            return new IdRepoAccessPolicyConfProvider();\n+        }\n     }\n \n     public static class TestSyncopeWebApplication extends SyncopeWebApplication {\n@@ -209,11 +216,12 @@ public TestSyncopeWebApplication(\n                 final StatusProvider statusProvider,\n                 final VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider,\n                 final ImplementationInfoProvider implementationInfoProvider,\n+                final AccessPolicyConfProvider accessPolicyConfProvider,\n                 final ApplicationContext ctx) {\n \n             super(props, lookup, serviceOps, resourceProvider, anyDirectoryPanelAdditionalActionsProvider,\n                     anyDirectoryPanelAdditionalActionLinksProvider, anyWizardBuilderAdditionalSteps, statusProvider,\n-                    virSchemaDetailsPanelProvider, implementationInfoProvider, ctx);\n+                    virSchemaDetailsPanelProvider, implementationInfoProvider, accessPolicyConfProvider, ctx);\n         }\n \n         public interface SyncopeServiceClient extends SyncopeService, Client {"},{"sha":"8801e4c2e2b9d5f7dd6c00daddd8424b8a47c246","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AccessPolicyConf.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyConf.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -19,14 +19,8 @@\n package org.apache.syncope.common.lib.policy;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import java.util.List;\n-import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.BaseBean;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n public interface AccessPolicyConf extends BaseBean {\n-\n-    List<Attr> getRequiredAttrs();\n-\n-    List<Attr> getRejectedAttrs();\n }"},{"sha":"733b4e92a1d15c43988ddde9f1df6e83574a7710","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AccessPolicyTO.java","status":"modified","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -22,25 +22,12 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n-import java.net.URI;\n \n @Schema(allOf = { PolicyTO.class })\n public class AccessPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -6711411162433533300L;\n \n-    private int order;\n-\n-    private boolean enabled = true;\n-\n-    private boolean ssoEnabled = true;\n-\n-    private boolean requireAllAttributes = true;\n-\n-    private boolean caseInsensitive;\n-\n-    private URI unauthorizedRedirectUrl;\n-\n     private AccessPolicyConf conf;\n \n     @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n@@ -52,54 +39,6 @@ public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n-    public int getOrder() {\n-        return order;\n-    }\n-\n-    public void setOrder(final int order) {\n-        this.order = order;\n-    }\n-\n-    public boolean isEnabled() {\n-        return enabled;\n-    }\n-\n-    public void setEnabled(final boolean enabled) {\n-        this.enabled = enabled;\n-    }\n-\n-    public boolean isSsoEnabled() {\n-        return this.ssoEnabled;\n-    }\n-\n-    public void setSsoEnabled(final boolean ssoEnabled) {\n-        this.ssoEnabled = ssoEnabled;\n-    }\n-\n-    public boolean isRequireAllAttributes() {\n-        return requireAllAttributes;\n-    }\n-\n-    public void setRequireAllAttributes(final boolean requireAllAttributes) {\n-        this.requireAllAttributes = requireAllAttributes;\n-    }\n-\n-    public boolean isCaseInsensitive() {\n-        return caseInsensitive;\n-    }\n-\n-    public void setCaseInsensitive(final boolean caseInsensitive) {\n-        this.caseInsensitive = caseInsensitive;\n-    }\n-\n-    public URI getUnauthorizedRedirectUrl() {\n-        return unauthorizedRedirectUrl;\n-    }\n-\n-    public void setUnauthorizedRedirectUrl(final URI unauthorizedRedirectUrl) {\n-        this.unauthorizedRedirectUrl = unauthorizedRedirectUrl;\n-    }\n-\n     public AccessPolicyConf getConf() {\n         return conf;\n     }"},{"sha":"6e04eb8495dea08dbc42596562e2cb3f37e3de6a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccessPolicyConf.java","status":"modified","additions":61,"deletions":2,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccessPolicyConf.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.lib.Attr;\n@@ -28,20 +29,78 @@ public class DefaultAccessPolicyConf implements AccessPolicyConf {\n \n     private static final long serialVersionUID = 1153200197344709778L;\n \n+    private int order;\n+\n+    private boolean enabled = true;\n+\n+    private boolean ssoEnabled = true;\n+\n+    private boolean requireAllAttributes = true;\n+\n+    private boolean caseInsensitive;\n+\n+    private URI unauthorizedRedirectUrl;\n+\n     private final List<Attr> requiredAttrs = new ArrayList<>();\n \n     private final List<Attr> rejectedAttrs = new ArrayList<>();\n \n+    public int getOrder() {\n+        return order;\n+    }\n+\n+    public void setOrder(final int order) {\n+        this.order = order;\n+    }\n+\n+    public boolean isEnabled() {\n+        return enabled;\n+    }\n+\n+    public void setEnabled(final boolean enabled) {\n+        this.enabled = enabled;\n+    }\n+\n+    public boolean isSsoEnabled() {\n+        return this.ssoEnabled;\n+    }\n+\n+    public void setSsoEnabled(final boolean ssoEnabled) {\n+        this.ssoEnabled = ssoEnabled;\n+    }\n+\n+    public boolean isRequireAllAttributes() {\n+        return requireAllAttributes;\n+    }\n+\n+    public void setRequireAllAttributes(final boolean requireAllAttributes) {\n+        this.requireAllAttributes = requireAllAttributes;\n+    }\n+\n+    public boolean isCaseInsensitive() {\n+        return caseInsensitive;\n+    }\n+\n+    public void setCaseInsensitive(final boolean caseInsensitive) {\n+        this.caseInsensitive = caseInsensitive;\n+    }\n+\n+    public URI getUnauthorizedRedirectUrl() {\n+        return unauthorizedRedirectUrl;\n+    }\n+\n+    public void setUnauthorizedRedirectUrl(final URI unauthorizedRedirectUrl) {\n+        this.unauthorizedRedirectUrl = unauthorizedRedirectUrl;\n+    }\n+\n     @JacksonXmlElementWrapper(localName = \"requiredAttrs\")\n     @JacksonXmlProperty(localName = \"requiredAttr\")\n-    @Override\n     public List<Attr> getRequiredAttrs() {\n         return requiredAttrs;\n     }\n \n     @JacksonXmlElementWrapper(localName = \"rejectedAttrs\")\n     @JacksonXmlProperty(localName = \"rejectedAttr\")\n-    @Override\n     public List<Attr> getRejectedAttrs() {\n         return rejectedAttrs;\n     }"},{"sha":"9192f9a3d9ea5c5b8e4d7b6d734163d486a108e7","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/HttpRequestAccessPolicyConf.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHttpRequestAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHttpRequestAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FHttpRequestAccessPolicyConf.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+public class HttpRequestAccessPolicyConf implements AccessPolicyConf {\n+\n+    private static final long serialVersionUID = 4511220098152435547L;\n+\n+    private String ipAddress;\n+\n+    private String userAgent;\n+\n+    public String getIpAddress() {\n+        return ipAddress;\n+    }\n+\n+    public void setIpAddress(final String ipAddress) {\n+        this.ipAddress = ipAddress;\n+    }\n+\n+    public String getUserAgent() {\n+        return userAgent;\n+    }\n+\n+    public void setUserAgent(final String userAgent) {\n+        this.userAgent = userAgent;\n+    }\n+}"},{"sha":"c63959faef464b4a4a61e7d99567e0a66512f111","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/RemoteEndpointAccessPolicyConf.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRemoteEndpointAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRemoteEndpointAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FRemoteEndpointAccessPolicyConf.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class RemoteEndpointAccessPolicyConf implements AccessPolicyConf {\n+\n+    private static final long serialVersionUID = -1573476136969750601L;\n+\n+    private String endpointUrl;\n+\n+    private final List<String> acceptableResponseCodes = new ArrayList<>();\n+\n+    public String getEndpointUrl() {\n+        return endpointUrl;\n+    }\n+\n+    public void setEndpointUrl(final String endpointUrl) {\n+        this.endpointUrl = endpointUrl;\n+    }\n+\n+    @JacksonXmlElementWrapper(localName = \"acceptableResponseCodes\")\n+    @JacksonXmlProperty(localName = \"acceptableResponseCode\")\n+    public List<String> getAcceptableResponseCodes() {\n+        return acceptableResponseCodes;\n+    }\n+}"},{"sha":"002327339cd7b4c399377f8eff17f8ce4e33cfed","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/TimeBasedAccessPolicyConf.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTimeBasedAccessPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTimeBasedAccessPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTimeBasedAccessPolicyConf.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import java.time.ZoneOffset;\n+import org.apache.syncope.common.lib.to.AbstractStartEndBean;\n+\n+public class TimeBasedAccessPolicyConf extends AbstractStartEndBean implements AccessPolicyConf {\n+\n+    private static final long serialVersionUID = 9092023809646651011L;\n+\n+    private String zoneId = ZoneOffset.UTC.getId();\n+\n+    public String getZoneId() {\n+        return zoneId;\n+    }\n+\n+    public void setZoneId(final String zoneId) {\n+        this.zoneId = zoneId;\n+    }\n+}"},{"sha":"ee0a2e81ceb6a32a58e39d59f081dfe5b01af7a4","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/SerializationTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -36,11 +36,11 @@ public abstract class SerializationTest {\n     public void accessPolicyConf() throws IOException {\n         AccessPolicyTO policy = new AccessPolicyTO();\n         policy.setName(\"Test Access policy\");\n-        policy.setOrder(11);\n-        policy.setEnabled(true);\n-        policy.setUnauthorizedRedirectUrl(URI.create(\"https://syncope.apache.org\"));\n \n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n+        conf.setOrder(11);\n+        conf.setEnabled(true);\n+        conf.setUnauthorizedRedirectUrl(URI.create(\"https://syncope.apache.org\"));\n         conf.getRequiredAttrs().add(new Attr.Builder(\"cn\").values(\"admin\", \"Admin\", \"TheAdmin\").build());\n         conf.getRejectedAttrs().add(new Attr.Builder(\"uid\").values(\"plain\").build());\n         policy.setConf(conf);"},{"sha":"1509722f4c82b45c3b8cd03e1157169f1f6285f2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/policy/AccessPolicy.java","status":"modified","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAccessPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAccessPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAccessPolicy.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -18,35 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.policy;\n \n-import java.net.URI;\n import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n \n public interface AccessPolicy extends Policy {\n \n-    int getOrder();\n-\n-    void setOrder(int order);\n-\n-    boolean isEnabled();\n-\n-    void setEnabled(boolean enabled);\n-\n-    boolean isSsoEnabled();\n-\n-    void setSsoEnabled(boolean ssoEnabled);\n-\n-    boolean isRequireAllAttributes();\n-\n-    void setRequireAllAttributes(boolean requireAllAttributes);\n-\n-    boolean isCaseInsensitive();\n-\n-    void setCaseInsensitive(boolean caseInsensitive);\n-\n-    URI getUnauthorizedRedirectUrl();\n-\n-    void setUnauthorizedRedirectUrl(URI unauthorizedRedirectUrl);\n-\n     AccessPolicyConf getConf();\n \n     void setConf(AccessPolicyConf conf);"},{"sha":"d752c340cb12ca6f5d47a48b22fe54341b7fe997","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -53,7 +53,8 @@ under the License.\n               jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n \n   <!-- Access policies -->\n-  <AccessPolicy aporder=\"0\" ssoEnabled=\"1\" name=\"MyDefaultAccessPolicyConf\" caseInsensitive=\"1\" id=\"419935c7-deb3-40b3-8a9a-683037e523a2\" enabled=\"1\" requireAllAttributes=\"1\"/>\n+  <AccessPolicy name=\"DefaultAccessPolicy\" id=\"419935c7-deb3-40b3-8a9a-683037e523a2\"\n+                jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"order\":0,\"ssoEnabled\":true,\"caseInsensitive\":true,\"enabled\":true,\"requireAllAttributes\":true}'/>\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy arporder=\"0\" name=\"DenyAttrReleasePolicy\" id=\"219935c7-deb3-40b3-8a9a-683037e523a2\""},{"sha":"eb7056adb8303d2091351a2cd3f26426cd5cadfe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAAccessPolicy.java","status":"modified","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccessPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccessPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccessPolicy.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.policy;\n \n-import java.net.URI;\n import java.util.Optional;\n-import javax.persistence.Basic;\n import javax.persistence.Entity;\n import javax.persistence.Lob;\n import javax.persistence.Table;\n-import org.apache.commons.lang3.BooleanUtils;\n import org.apache.syncope.common.lib.policy.AccessPolicyConf;\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n@@ -37,88 +34,9 @@ public class JPAAccessPolicy extends AbstractPolicy implements AccessPolicy {\n \n     public static final String TABLE = \"AccessPolicy\";\n \n-    @Basic\n-    private Integer aporder = 0;\n-\n-    @Basic\n-    private Boolean enabled = true;\n-\n-    @Basic\n-    private Boolean ssoEnabled = true;\n-\n-    @Basic\n-    private Boolean requireAllAttributes = true;\n-\n-    @Basic\n-    private Boolean caseInsensitive;\n-\n-    private String unauthorizedRedirectUrl;\n-\n     @Lob\n     private String jsonConf;\n \n-    @Override\n-    public int getOrder() {\n-        return Optional.ofNullable(aporder).orElse(0);\n-    }\n-\n-    @Override\n-    public void setOrder(final int order) {\n-        this.aporder = order;\n-    }\n-\n-    @Override\n-    public boolean isEnabled() {\n-        return BooleanUtils.isNotFalse(enabled);\n-    }\n-\n-    @Override\n-    public void setEnabled(final boolean enabled) {\n-        this.enabled = enabled;\n-    }\n-\n-    @Override\n-    public boolean isSsoEnabled() {\n-        return BooleanUtils.isNotFalse(ssoEnabled);\n-    }\n-\n-    @Override\n-    public void setSsoEnabled(final boolean ssoEnabled) {\n-        this.ssoEnabled = ssoEnabled;\n-    }\n-\n-    @Override\n-    public boolean isRequireAllAttributes() {\n-        return BooleanUtils.isNotFalse(requireAllAttributes);\n-    }\n-\n-    @Override\n-    public void setRequireAllAttributes(final boolean requireAllAttributes) {\n-        this.requireAllAttributes = requireAllAttributes;\n-    }\n-\n-    @Override\n-    public boolean isCaseInsensitive() {\n-        return BooleanUtils.isNotFalse(caseInsensitive);\n-    }\n-\n-    @Override\n-    public void setCaseInsensitive(final boolean caseInsensitive) {\n-        this.caseInsensitive = caseInsensitive;\n-    }\n-\n-    @Override\n-    public URI getUnauthorizedRedirectUrl() {\n-        return Optional.ofNullable(unauthorizedRedirectUrl).\n-                map(URI::create).orElse(null);\n-    }\n-\n-    @Override\n-    public void setUnauthorizedRedirectUrl(final URI unauthorizedRedirectUrl) {\n-        this.unauthorizedRedirectUrl = Optional.ofNullable(unauthorizedRedirectUrl).\n-                map(URI::toASCIIString).orElse(null);\n-    }\n-\n     @Override\n     public AccessPolicyConf getConf() {\n         return Optional.ofNullable(jsonConf).map(c -> POJOHelper.deserialize(c, AccessPolicyConf.class)).orElse(null);"},{"sha":"d07ea3e6768903eff93a51b6604ed2040379a3ae","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AbstractClientAppTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -53,10 +53,10 @@ protected AttrReleasePolicy buildAndSaveAttrRelPolicy() {\n     protected AccessPolicy buildAndSaveAccessPolicy() {\n         AccessPolicy accessPolicy = entityFactory.newEntity(AccessPolicy.class);\n         accessPolicy.setName(\"AccessPolicyTest\");\n-        accessPolicy.setEnabled(true);\n-        accessPolicy.setSsoEnabled(false);\n \n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n+        conf.setEnabled(true);\n+        conf.setSsoEnabled(false);\n         conf.getRequiredAttrs().add(new Attr.Builder(\"attribute1\").values(\"value1\", \"value2\").build());\n         accessPolicy.setConf(conf);\n "},{"sha":"21ff82ca72dcb8272f9f14b239ca76e1c72a0377","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -53,7 +53,8 @@ under the License.\n               jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf\",\"authModules\":[\"LdapAuthenticationTest\"]}'/>\n \n   <!-- Access policies -->\n-  <AccessPolicy aporder=\"0\" ssoEnabled=\"1\" name=\"MyDefaultAccessPolicyConf\" caseInsensitive=\"1\" id=\"419935c7-deb3-40b3-8a9a-683037e523a2\" enabled=\"1\" requireAllAttributes=\"1\"/>\n+  <AccessPolicy name=\"DefaultAccessPolicy\" id=\"419935c7-deb3-40b3-8a9a-683037e523a2\"\n+                jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf\",\"order\":0,\"ssoEnabled\":true,\"caseInsensitive\":true,\"enabled\":true,\"requireAllAttributes\":true}'/>\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy arporder=\"0\" name=\"DenyAttrReleasePolicy\" id=\"219935c7-deb3-40b3-8a9a-683037e523a2\""},{"sha":"c137355c222c2407da08a84db73cf602adb9bdc0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":0,"deletions":13,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -239,12 +239,6 @@ protected <T extends Policy> T getPolicy(final T policy, final PolicyTO policyTO\n             AccessPolicyTO accessPolicyTO = AccessPolicyTO.class.cast(policyTO);\n \n             accessPolicy.setName(accessPolicyTO.getKey());\n-            accessPolicy.setOrder(accessPolicyTO.getOrder());\n-            accessPolicy.setEnabled(accessPolicyTO.isEnabled());\n-            accessPolicy.setSsoEnabled(accessPolicyTO.isSsoEnabled());\n-            accessPolicy.setRequireAllAttributes(accessPolicyTO.isRequireAllAttributes());\n-            accessPolicy.setCaseInsensitive(accessPolicyTO.isCaseInsensitive());\n-            accessPolicy.setUnauthorizedRedirectUrl(accessPolicyTO.getUnauthorizedRedirectUrl());\n             accessPolicy.setConf(accessPolicyTO.getConf());\n         } else if (policyTO instanceof AttrReleasePolicyTO) {\n             if (result == null) {\n@@ -339,16 +333,9 @@ public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n \n             authPolicyTO.setConf(((AuthPolicy) policy).getConf());\n         } else if (policy instanceof AccessPolicy) {\n-            AccessPolicy accessPolicy = AccessPolicy.class.cast(policy);\n             AccessPolicyTO accessPolicyTO = new AccessPolicyTO();\n             policyTO = (T) accessPolicyTO;\n \n-            accessPolicyTO.setOrder(accessPolicy.getOrder());\n-            accessPolicyTO.setEnabled(accessPolicy.isEnabled());\n-            accessPolicyTO.setSsoEnabled(accessPolicy.isSsoEnabled());\n-            accessPolicyTO.setRequireAllAttributes(accessPolicy.isRequireAllAttributes());\n-            accessPolicyTO.setCaseInsensitive(accessPolicy.isCaseInsensitive());\n-            accessPolicyTO.setUnauthorizedRedirectUrl(accessPolicy.getUnauthorizedRedirectUrl());\n             accessPolicyTO.setConf(((AccessPolicy) policy).getConf());\n         } else if (policy instanceof AttrReleasePolicy) {\n             AttrReleasePolicy attrReleasePolicy = AttrReleasePolicy.class.cast(policy);"},{"sha":"59dda15f927ded7be72f0fb82294fdc4b63114ea","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -952,9 +952,9 @@ protected static AttrReleasePolicyTO buildAttrReleasePolicyTO() {\n     protected static AccessPolicyTO buildAccessPolicyTO() {\n         AccessPolicyTO policy = new AccessPolicyTO();\n         policy.setName(\"Test Access policy\");\n-        policy.setEnabled(true);\n \n         DefaultAccessPolicyConf conf = new DefaultAccessPolicyConf();\n+        conf.setEnabled(true);\n         conf.getRequiredAttrs().add(new Attr.Builder(\"cn\").values(\"admin\", \"Admin\", \"TheAdmin\").build());\n         policy.setConf(conf);\n "},{"sha":"1f5828b66d208d5137493fef4b8a7be020500d00","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -31,8 +31,8 @@\n import java.util.Properties;\n import java.util.Set;\n import org.apache.syncope.client.console.ConsoleProperties;\n-import org.apache.syncope.client.console.SyncopeAMConsoleContext;\n-import org.apache.syncope.client.console.SyncopeIdMConsoleContext;\n+import org.apache.syncope.client.console.AMConsoleContext;\n+import org.apache.syncope.client.console.IdMConsoleContext;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n@@ -135,8 +135,8 @@ public static void setUp() {\n \n         ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n         ctx.register(SyncopeWebApplication.class);\n-        ctx.register(SyncopeAMConsoleContext.class);\n-        ctx.register(SyncopeIdMConsoleContext.class);\n+        ctx.register(AMConsoleContext.class);\n+        ctx.register(IdMConsoleContext.class);\n \n         String springActiveProfiles = null;\n         try (InputStream propStream = AbstractConsoleITCase.class.getResourceAsStream(\"/test.properties\")) {"},{"sha":"742d55816e629f76cceed1d4ae0cee2e7efce257","filename":"src/main/asciidoc/reference-guide/concepts/policies.adoc","status":"modified","additions":47,"deletions":6,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -268,14 +268,55 @@ a `JAVA` `PASSWORD_RULE` <<implementations,implementation>> for the\n [[policies-access]]\n ==== Access\n \n-Access policies provide fine-grained control over the authorization rules to apply to\n+Access policies provide fine-grained control over the access rules to apply to\n <<client-applications,client applications>>.\n \n-An access policy describes whether the client application is allowed to use WA, allowed to participate in\n-single sign-on authentication, etc. Additionally, it may be configured to require a certain set of principal attributes\n-that must exist before access can be granted to the client application. This behavior allows one to configure various\n-attributes in terms of access roles for the application and define rules that would be enacted and validated when an\n-authentication request from the application arrives.\n+The following access policy configurations are available by default:\n+\n+[cols=\"1,2\"]\n+|===\n+\n+|\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccessPolicyConf.java[DefaultAccessPolicyConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/3_0_X/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccessPolicyConf.java[DefaultAccessPolicyConf^]\n+endif::[]\n+| It describes whether the client application is allowed to use WA, allowed to participate in single sign-on\n+authentication, etc; additionally, it may be configured to require a certain set of principal attributes that must exist\n+before access can be granted.\n+\n+| \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/HttpRequestAccessPolicyConf.java[HttpRequestAccessPolicyConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/3_0_X/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/HttpRequestAccessPolicyConf.java[HttpRequestAccessPolicyConf^]\n+endif::[]\n+| Make access decisions based on HTTP request properties as client IP address and user-agent.\n+\n+| \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/RemoteEndpointAccessPolicyConf.java[RemoteEndpointAccessPolicyConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/3_0_X/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/RemoteEndpointAccessPolicyConf.java[RemoteEndpointAccessPolicyConf^]\n+endif::[]\n+| Delegate access decisions to a remote endpoint by receiving the authenticated principal as url parameter of a `GET`\n+request; the response code that the endpoint returns is then compared against the policy setting and if a match is\n+found, access is granted.\n+\n+| \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/TimeBasedAccessPolicyConf.java[TimeBasedAccessPolicyConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/3_0_X/common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/TimeBasedAccessPolicyConf.java[TimeBasedAccessPolicyConf^]\n+endif::[]\n+| Access is only allowed within the configured timeframe.\n+\n+|===\n \n [NOTE]\n Access Policy instances are dynamically translated into"},{"sha":"237cb11b90846f0ee5275378fe7bc121b0551959","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/DefaultAccessMapper.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAccessMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAccessMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAccessMapper.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -29,21 +29,23 @@ public class DefaultAccessMapper implements AccessMapper {\n \n     @Override\n     public RegisteredServiceAccessStrategy build(final AccessPolicyTO policy) {\n+        DefaultAccessPolicyConf conf = (DefaultAccessPolicyConf) policy.getConf();\n+\n         DefaultRegisteredServiceAccessStrategy accessStrategy =\n-                new DefaultRegisteredServiceAccessStrategy(policy.isEnabled(), policy.isSsoEnabled());\n+                new DefaultRegisteredServiceAccessStrategy(conf.isEnabled(), conf.isSsoEnabled());\n \n-        accessStrategy.setOrder(policy.getOrder());\n+        accessStrategy.setOrder(conf.getOrder());\n \n-        accessStrategy.setRequireAllAttributes(policy.isRequireAllAttributes());\n+        accessStrategy.setRequireAllAttributes(conf.isRequireAllAttributes());\n \n-        accessStrategy.setCaseInsensitive(policy.isCaseInsensitive());\n+        accessStrategy.setCaseInsensitive(conf.isCaseInsensitive());\n \n-        accessStrategy.setUnauthorizedRedirectUrl(policy.getUnauthorizedRedirectUrl());\n+        accessStrategy.setUnauthorizedRedirectUrl(conf.getUnauthorizedRedirectUrl());\n \n-        policy.getConf().getRequiredAttrs().forEach(\n+        conf.getRequiredAttrs().forEach(\n                 attr -> accessStrategy.getRequiredAttributes().put(attr.getSchema(), new HashSet<>(attr.getValues())));\n \n-        policy.getConf().getRejectedAttrs().forEach(\n+        conf.getRejectedAttrs().forEach(\n                 attr -> accessStrategy.getRejectedAttributes().put(attr.getSchema(), new HashSet<>(attr.getValues())));\n \n         return accessStrategy;"},{"sha":"ea034f1586110c23c04aa9bea47a9e7b61f776d1","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/HttpRequestAccessMapper.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FHttpRequestAccessMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FHttpRequestAccessMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FHttpRequestAccessMapper.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.HttpRequestAccessPolicyConf;\n+import org.apereo.cas.services.HttpRequestRegisteredServiceAccessStrategy;\n+import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n+\n+@AccessMapFor(accessPolicyConfClass = HttpRequestAccessPolicyConf.class)\n+public class HttpRequestAccessMapper implements AccessMapper {\n+\n+    @Override\n+    public RegisteredServiceAccessStrategy build(final AccessPolicyTO policy) {\n+        HttpRequestAccessPolicyConf conf = (HttpRequestAccessPolicyConf) policy.getConf();\n+\n+        HttpRequestRegisteredServiceAccessStrategy accessStrategy = new HttpRequestRegisteredServiceAccessStrategy();\n+\n+        Optional.ofNullable(conf.getIpAddress()).ifPresent(accessStrategy::setIpAddress);\n+        Optional.ofNullable(conf.getUserAgent()).ifPresent(accessStrategy::setUserAgent);\n+\n+        return accessStrategy;\n+    }\n+}"},{"sha":"595a593039cd56bc0306fcac2db7a45542ee259d","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/RemoteEndpointAccessMapper.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRemoteEndpointAccessMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRemoteEndpointAccessMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRemoteEndpointAccessMapper.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.RemoteEndpointAccessPolicyConf;\n+import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n+import org.apereo.cas.services.RemoteEndpointServiceAccessStrategy;\n+\n+@AccessMapFor(accessPolicyConfClass = RemoteEndpointAccessPolicyConf.class)\n+public class RemoteEndpointAccessMapper implements AccessMapper {\n+\n+    @Override\n+    public RegisteredServiceAccessStrategy build(final AccessPolicyTO policy) {\n+        RemoteEndpointAccessPolicyConf conf = (RemoteEndpointAccessPolicyConf) policy.getConf();\n+\n+        RemoteEndpointServiceAccessStrategy accessStrategy = new RemoteEndpointServiceAccessStrategy();\n+\n+        Optional.ofNullable(conf.getEndpointUrl()).ifPresent(accessStrategy::setEndpointUrl);\n+\n+        accessStrategy.setAcceptableResponseCodes(String.join(\",\", conf.getAcceptableResponseCodes()));\n+\n+        return accessStrategy;\n+    }\n+}"},{"sha":"f4cd0f2e34619ada906da9f8227c91236d55c2aa","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/TimeBasedAccessMapper.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTimeBasedAccessMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTimeBasedAccessMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTimeBasedAccessMapper.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.time.format.DateTimeFormatter;\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.policy.TimeBasedAccessPolicyConf;\n+import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n+import org.apereo.cas.services.TimeBasedRegisteredServiceAccessStrategy;\n+\n+@AccessMapFor(accessPolicyConfClass = TimeBasedAccessPolicyConf.class)\n+public class TimeBasedAccessMapper implements AccessMapper {\n+\n+    @Override\n+    public RegisteredServiceAccessStrategy build(final AccessPolicyTO policy) {\n+        TimeBasedAccessPolicyConf conf = (TimeBasedAccessPolicyConf) policy.getConf();\n+\n+        TimeBasedRegisteredServiceAccessStrategy accessStrategy = new TimeBasedRegisteredServiceAccessStrategy();\n+\n+        Optional.ofNullable(conf.getStart()).\n+                map(DateTimeFormatter.ISO_OFFSET_DATE_TIME::format).ifPresent(accessStrategy::setStartingDateTime);\n+        Optional.ofNullable(conf.getEnd()).\n+                map(DateTimeFormatter.ISO_OFFSET_DATE_TIME::format).ifPresent(accessStrategy::setEndingDateTime);\n+\n+        Optional.ofNullable(conf.getZoneId()).ifPresent(accessStrategy::setZoneId);\n+\n+        return accessStrategy;\n+    }\n+}"},{"sha":"f133f5253b36f67d4bcabf998812dff8008cbe49","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/WAServiceRegistryTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9389e937390ecc37edb25772c1605cf403390dd4/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java?ref=9389e937390ecc37edb25772c1605cf403390dd4","patch":"@@ -112,8 +112,8 @@ private static void addPolicies(\n         }\n \n         AccessPolicyTO accessPolicy = new AccessPolicyTO();\n-        accessPolicy.setEnabled(true);\n         DefaultAccessPolicyConf accessPolicyConf = new DefaultAccessPolicyConf();\n+        accessPolicyConf.setEnabled(true);\n         accessPolicyConf.getRequiredAttrs().add(new Attr.Builder(\"cn\").values(\"admin\", \"Admin\", \"TheAdmin\").build());\n         accessPolicy.setConf(accessPolicyConf);\n         waClientApp.setAccessPolicy(accessPolicy);"}]}