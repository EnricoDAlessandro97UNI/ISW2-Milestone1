{"sha":"794416c94798a2bc83c9e34a52698b7e4a9ef2bf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc5NDQxNmM5NDc5OGEyYmM4M2M5ZTM0YTUyNjk4YjdlNGE5ZWYyYmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-10T13:34:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-10T13:34:33Z"},"message":"[SYNCOPE-1369] Docs","tree":{"sha":"c0dfb86a46a687e8e76f1011e835ca0a19288156","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c0dfb86a46a687e8e76f1011e835ca0a19288156"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/794416c94798a2bc83c9e34a52698b7e4a9ef2bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/794416c94798a2bc83c9e34a52698b7e4a9ef2bf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/794416c94798a2bc83c9e34a52698b7e4a9ef2bf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/794416c94798a2bc83c9e34a52698b7e4a9ef2bf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"543996c76d436ae219728633951b969b2ebf0958","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/543996c76d436ae219728633951b969b2ebf0958","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/543996c76d436ae219728633951b969b2ebf0958"}],"stats":{"total":92,"additions":87,"deletions":5},"files":[{"sha":"b5e2e1f8d7ed26f40dbcae7f7e3193c493afbb38","filename":"src/main/asciidoc/reference-guide/concepts/workflow.adoc","status":"modified","additions":87,"deletions":5,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/794416c94798a2bc83c9e34a52698b7e4a9ef2bf/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fworkflow.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/794416c94798a2bc83c9e34a52698b7e4a9ef2bf/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fworkflow.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fworkflow.adoc?ref=794416c94798a2bc83c9e34a52698b7e4a9ef2bf","patch":"@@ -147,10 +147,9 @@ for http://www.flowable.org/docs/userguide/index.html#forms[Flowable forms^].\n The following conditions must be met, for an User `U` to act as administrator for approval:\n \n . `U` must own the following <<entitlements,entitlements>>, for all the required realms:\n-.. `WORKFLOW_FORM_CLAIM`\n-.. `WORKFLOW_FORM_LIST`\n-.. `WORKFLOW_FORM_READ`\n-.. `WORKFLOW_FORM_SUBMIT`\n+.. `USER_REQUEST_FORM_CLAIM`\n+.. `USER_REQUEST_FORM_LIST`\n+.. `USER_REQUEST_FORM_SUBMIT`\n .. `USER_READ`\n . The BPMN `userTask` must either indicate `U` among `candidateUsers` or at least one of the groups assigned to `U`\n among `candidateGroups`, as required by\n@@ -172,7 +171,7 @@ http://www.flowable.org/docs/userguide/index.html#flowableModelerApp[Flowable Mo\n           flowable:candidateGroups=\"managingDirector\" flowable:formKey=\"createApproval\"> // <1>\n   <extensionElements>\n     <flowable:formProperty id=\"username\" name=\"Username\" type=\"string\"\n-                           expression=\"${user.username}\" writable=\"false\"/> // <2>\n+                           expression=\"${userTO.username}\" writable=\"false\"/> // <2>\n     <flowable:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\"\n                            variable=\"approve\" required=\"true\"/> // <3>\n     <flowable:formProperty id=\"rejectReason\" name=\"Reason for rejecting\" type=\"string\"\n@@ -196,3 +195,86 @@ the following flow (the actual operations on the admin console for the sample ab\n . administrator A claims the approval and is then allowed to manage it\n . administrator A reviews the updated user, with ongoing modification applied (no actual modification performed yet)\n . administrator A can approve or reject such modification\n+\n+===== Request Management\n+\n+Request management is a key-feature of Identity Governance and allows to define and manage, in a structured way,\n+whatever process intended to update identity attributes, memberships and relationships. +\n+Request examples are \"assign mobile phone\", \"grant groups on AD\" or \"consent access to application\".\n+\n+Users can initiate whichever request among the ones defined; once initiated, such requests will follow their own path,\n+which might also include one or more <<approval,approval>> steps.\n+\n+[[sample-user-request]]\n+.Assigning printer to user\n+====\n+The BPMN process below shows how to define an user request in XML; the same operation can be performed via the\n+http://www.flowable.org/docs/userguide/index.html#flowableModelerApp[Flowable Modeler^].\n+\n+In this user request definition:\n+\n+. user selects one of printers defined in the system, for self-assignment\n+. administrator approves user's selection\n+. a <<memberships-relationships,relationship>> between user and printer is established\n+\n+[source,xml]\n+----\n+<process id=\"assignPrinterRequest\" name=\"Assign printer\" isExecutable=\"true\">\n+  <startEvent id=\"startevent1\" name=\"Start\"/>\n+  <endEvent id=\"endevent1\" name=\"End\"/>\n+  <sequenceFlow id=\"flow1\" sourceRef=\"startevent1\" targetRef=\"selectPrinter\"/>\n+  <userTask id=\"selectPrinter\" name=\"Select printer\" flowable:formKey=\"selectPrinter\"\n+            flowable:assignee=\"${wfExecutor}\"> // <1>\n+    <extensionElements>\n+      <flowable:formProperty id=\"printer\" name=\"Printer\"\n+                             variable=\"printer\" type=\"dropdown\" required=\"true\"> // <2>\n+        <flowable:value id=\"dropdownValueProvider\" name=\"printersValueProvider\"/>\n+      </flowable:formProperty>\n+      <flowable:formProperty id=\"printMode\" name=\"Preferred print mode?\" type=\"enum\">\n+        <flowable:value id=\"bw\" name=\"Black / White\"/>\n+        <flowable:value id=\"color\" name=\"Color\"/>\n+      </flowable:formProperty>\n+    </extensionElements>\n+  </userTask>\n+  <userTask id=\"approvePrinter\" name=\"Approve printer\" flowable:formKey=\"approvePrinter\"> // <3>\n+    <extensionElements>\n+      <flowable:formProperty id=\"username\" name=\"Username\" type=\"string\" \n+                             expression=\"${userTO.username}\" writable=\"false\"/>\n+      <flowable:formProperty id=\"printer\" name=\"Selected printer\" type=\"string\" \n+                             expression=\"${printer}\" writable=\"false\"/>\n+      <flowable:formProperty id=\"approve\" name=\"Approve?\" type=\"boolean\"\n+                             variable=\"approve\" required=\"true\"/>\n+    </extensionElements>\n+  </userTask>\n+  <sequenceFlow id=\"sid-D7047714-8E57-46B8-B6D4-4844DE330329\"\n+                sourceRef=\"selectPrinter\" targetRef=\"approvePrinter\"/>\n+  <serviceTask id=\"createARelationship\" name=\"Create ARelationship\"\n+               flowable:delegateExpression=\"${createARelationship}\"/> // <4>\n+  <sequenceFlow id=\"sid-33880AE7-35C6-4A39-8E5B-12D8BA53F042\"\n+                sourceRef=\"approvePrinter\" targetRef=\"createARelationship\"/>\n+  <sequenceFlow id=\"sid-831E1896-EDF9-4F7D-AA42-E86CC1F8C5D3\"\n+                sourceRef=\"createARelationship\" targetRef=\"endevent1\"/>\n+</process>\n+----\n+<1> the first form defined is self-assigned to the user which has started this request\n+<2> the `dropdown` type is a Syncope extension of the\n+https://www.flowable.org/docs/userguide/index.html#formProperties[form property types supported by Flowable^]\n+and allows to inject a list of elements via the `dropdownValueProvider` value (with name `printersValueProvider` in this\n+sample), which must be a Spring bean implementing the\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/api/DropdownValueProvider.java[DropdownValueProvider^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/2_1_X/ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/api/DropdownValueProvider.java[DropdownValueProvider^]\n+endif::[]\n+interface\n+<3> the second form is a traditional approval form, as seen <<sample-selfreg-approval,above>>\n+<4> this is a\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/FlowableServiceTask.java[FlowableServiceTask^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/2_1_X/ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/task/FlowableServiceTask.java[FlowableServiceTask^]\n+endif::[]\n+implementation which takes care of establishing the relationship\n+===="}]}