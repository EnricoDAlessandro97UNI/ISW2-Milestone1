{"sha":"43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzZmNkMWQ2YWYwZjA1ZTYxOGE0MGNlZThiMGJhNmU1OTc4YTdiMGQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-07T11:31:54Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-07T12:35:32Z"},"message":"Fixing error reporting in case (no more IllegalArgumentException being returned by REST calls)","tree":{"sha":"2b600310f81c22b576036c48d49d0c7b673025e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2b600310f81c22b576036c48d49d0c7b673025e6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0461265f47a61d407397d07fc37ebb6741b396e1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0461265f47a61d407397d07fc37ebb6741b396e1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0461265f47a61d407397d07fc37ebb6741b396e1"}],"stats":{"total":538,"additions":352,"deletions":186},"files":[{"sha":"7807272f01160887fc22dcc90517b99dfef4848c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -63,9 +63,8 @@ public enum ClientExceptionType {\n     InvalidRole(Response.Status.BAD_REQUEST),\n     InvalidUser(Response.Status.BAD_REQUEST),\n     InvalidExternalResource(Response.Status.BAD_REQUEST),\n-    InvalidPropagationTask(Response.Status.BAD_REQUEST),\n-    InvalidSchedTask(Response.Status.BAD_REQUEST),\n     InvalidPullTask(Response.Status.BAD_REQUEST),\n+    InvalidRequest(Response.Status.BAD_REQUEST),\n     InvalidValues(Response.Status.BAD_REQUEST),\n     NotFound(Response.Status.NOT_FOUND),\n     RequiredValuesMissing(Response.Status.BAD_REQUEST),"},{"sha":"dc74d26f45aada60413a40ad00a789b8f99db128","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/TaskQuery.java","status":"modified","additions":8,"deletions":45,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -44,66 +44,29 @@ protected TaskQuery newInstance() {\n         }\n \n         public Builder resource(final String resource) {\n-            switch (getInstance().getType()) {\n-                case PROPAGATION:\n-                case PULL:\n-                case PUSH:\n-                    getInstance().setResource(resource);\n-                    return this;\n-\n-                default:\n-                    throw new IllegalArgumentException(\"resource not allowed for \" + getInstance().getType());\n-            }\n+            getInstance().setResource(resource);\n+            return this;\n         }\n \n         public Builder notification(final String notification) {\n-            switch (getInstance().getType()) {\n-                case NOTIFICATION:\n-                    getInstance().setNotification(notification);\n-                    return this;\n-\n-                default:\n-                    throw new IllegalArgumentException(\"notification not allowed for \" + getInstance().getType());\n-            }\n+            getInstance().setNotification(notification);\n+            return this;\n         }\n \n         public Builder anyTypeKind(final AnyTypeKind anyTypeKind) {\n-            switch (getInstance().getType()) {\n-                case PROPAGATION:\n-                case NOTIFICATION:\n-                    getInstance().setAnyTypeKind(anyTypeKind);\n-                    return this;\n-\n-                default:\n-                    throw new IllegalArgumentException(\"anyTypeKind not allowed for \" + getInstance().getType());\n-            }\n+            getInstance().setAnyTypeKind(anyTypeKind);\n+            return this;\n         }\n \n         public Builder entityKey(final String entityKey) {\n-            switch (getInstance().getType()) {\n-                case PROPAGATION:\n-                case NOTIFICATION:\n-                    getInstance().setEntityKey(entityKey);\n-                    return this;\n-\n-                default:\n-                    throw new IllegalArgumentException(\"entityKey not allowed for \" + getInstance().getType());\n-            }\n+            getInstance().setEntityKey(entityKey);\n+            return this;\n         }\n \n         public Builder details(final boolean details) {\n             getInstance().setDetails(details);\n             return this;\n         }\n-\n-        @Override\n-        public TaskQuery build() {\n-            if (getInstance().type == null) {\n-                throw new IllegalArgumentException(\"type is required\");\n-            }\n-            return super.build();\n-        }\n-\n     }\n \n     private TaskType type;"},{"sha":"72ee64860233b2d8f0aa60b07694b72b6857d47f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AccessTokenService.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -22,11 +22,14 @@\n import io.swagger.annotations.ApiOperation;\n import io.swagger.annotations.Authorization;\n import javax.ws.rs.BeanParam;\n+import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n@@ -49,6 +52,7 @@ public interface AccessTokenService extends JAXRSService {\n         @Authorization(value = \"BasicAuthentication\") })\n     @POST\n     @Path(\"login\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response login();\n \n     /**\n@@ -61,6 +65,7 @@ public interface AccessTokenService extends JAXRSService {\n         @Authorization(value = \"Bearer\") })\n     @POST\n     @Path(\"refresh\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response refresh();\n \n     /**\n@@ -72,6 +77,7 @@ public interface AccessTokenService extends JAXRSService {\n         @Authorization(value = \"Bearer\") })\n     @POST\n     @Path(\"logout\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response logout();\n \n     /**\n@@ -84,6 +90,8 @@ public interface AccessTokenService extends JAXRSService {\n         @Authorization(value = \"BasicAuthentication\")\n         , @Authorization(value = \"Bearer\") })\n     @GET\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     PagedResult<AccessTokenTO> list(@BeanParam AccessTokenQuery query);\n \n     /**\n@@ -97,5 +105,6 @@ public interface AccessTokenService extends JAXRSService {\n         , @Authorization(value = \"Bearer\") })\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@PathParam(\"key\") String key);\n }"},{"sha":"03f466689f8f41db6307abec95f75ac1d9b8ac0c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -128,7 +128,6 @@ Response update(\n     @DELETE\n     @Path(\"{key}/{schemaType}/{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n@@ -144,7 +143,6 @@ Response delete(\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**"},{"sha":"1d8ca1e909bf8ebbaad3144ad9fdb7a67b0f152b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -71,6 +71,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n@@ -82,6 +83,7 @@ public interface AnyTypeClassService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n@@ -92,5 +94,6 @@ public interface AnyTypeClassService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"11ae6467461110e02c94a1ec26a0440f30f91411","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -92,5 +92,6 @@ public interface AnyTypeService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"a338a74fbadd4948bd63d9628beef71dcf53a06e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -80,6 +80,7 @@ public interface ConfigurationService extends JAXRSService {\n     @PUT\n     @Path(\"{schema}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response set(@NotNull AttrTO value);\n \n     /**\n@@ -90,6 +91,6 @@ public interface ConfigurationService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{schema}\")\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"schema\") String schema);\n }"},{"sha":"da4447a8e97fc43fabb8dcd3a71910abddb95610","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorHistoryService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -60,6 +60,7 @@ public interface ConnectorHistoryService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -70,5 +71,6 @@ public interface ConnectorHistoryService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"882ab35f4555ab4d5eaaec33d504d6ba42773d1c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -122,6 +122,7 @@ ConnInstanceTO readByResource(\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -133,6 +134,7 @@ ConnInstanceTO readByResource(\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -143,6 +145,7 @@ ConnInstanceTO readByResource(\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -154,6 +157,7 @@ ConnInstanceTO readByResource(\n     @POST\n     @Path(\"check\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -163,5 +167,6 @@ ConnInstanceTO readByResource(\n      */\n     @POST\n     @Path(\"reload\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response reload();\n }"},{"sha":"b3366365f769d9a2b90cda032b8e80a1b99a0cd6","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -71,6 +71,7 @@ public interface DomainService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull DomainTO domainTO);\n \n     /**\n@@ -82,6 +83,7 @@ public interface DomainService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull DomainTO domainTO);\n \n     /**\n@@ -92,5 +94,6 @@ public interface DomainService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"50114ce3bb283bcf17e633adf95d120551932c66","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DynRealmService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -71,6 +71,7 @@ public interface DynRealmService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull DynRealmTO dynDynRealmTO);\n \n     /**\n@@ -82,6 +83,7 @@ public interface DynRealmService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull DynRealmTO dynDynRealmTO);\n \n     /**\n@@ -92,6 +94,7 @@ public interface DynRealmService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"22412cc667e177d5bd048c030f692a659d78d66d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ExecutableService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -73,6 +73,7 @@ public interface ExecutableService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"executions/{executionKey}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n \n     /**\n@@ -83,7 +84,7 @@ public interface ExecutableService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}/executions\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     BulkActionResult deleteExecutions(@BeanParam BulkExecDeleteQuery query);\n \n     /**"},{"sha":"38f34dbf9ec3fefd488f7100e63b18d216508cfa","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -104,6 +104,7 @@ public interface GroupService extends AnyService<GroupTO> {\n      */\n     @POST\n     @Path(\"{key}/members/{actionType}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     ExecTO bulkMembersAction(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"actionType\") BulkMembersActionType actionType);"},{"sha":"378d118ff4d5c83aac1d9ce13af4fe6cf04e970f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -110,6 +110,7 @@ public interface LoggerService extends JAXRSService {\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n \n     /**\n@@ -121,6 +122,7 @@ public interface LoggerService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{type}/{name}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") String name);\n \n }"},{"sha":"caf254a817b8e78e5a8ec0a65e7280f51b82bd77","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/MailTemplateService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -62,6 +62,7 @@ public interface MailTemplateService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull MailTemplateTO mailTemplateTO);\n \n     /**\n@@ -83,6 +84,7 @@ public interface MailTemplateService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -108,6 +110,7 @@ Response getFormat(\n      */\n     @PUT\n     @Path(\"{key}/{format}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response setFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format,\n@@ -122,6 +125,7 @@ Response setFormat(\n      */\n     @DELETE\n     @Path(\"{key}/{format}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response removeFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format);"},{"sha":"5a4fb818728ec8f73a11da043d6cf768ca076943","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -75,6 +75,7 @@ public interface NotificationService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull NotificationTO notificationTO);\n \n     /**\n@@ -86,6 +87,7 @@ public interface NotificationService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull NotificationTO notificationTO);\n \n     /**\n@@ -96,6 +98,7 @@ public interface NotificationService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -116,5 +119,6 @@ public interface NotificationService extends JAXRSService {\n      */\n     @POST\n     @Path(\"job\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response actionJob(@QueryParam(\"action\") JobAction action);\n }"},{"sha":"a8ca01c919067b5483b7ceba37a40a6e970e697f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -76,6 +76,7 @@ public interface PolicyService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n@@ -87,6 +88,7 @@ public interface PolicyService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n@@ -97,6 +99,7 @@ public interface PolicyService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"75f6621a43f6768da6b731f215567c5ba11f86ce","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -74,6 +74,7 @@ public interface RealmService extends JAXRSService {\n     @POST\n     @Path(\"{parentPath:.*}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull @PathParam(\"parentPath\") String parentPath, @NotNull RealmTO realmTO);\n \n     /**\n@@ -86,6 +87,7 @@ public interface RealmService extends JAXRSService {\n     @PUT\n     @Path(\"{fullPath:.*}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull RealmTO realmTO);\n \n     /**\n@@ -97,5 +99,6 @@ public interface RealmService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{fullPath:.*}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"fullPath\") String fullPath);\n }"},{"sha":"c6ed7bc208dbf9dfd4255e5f28e5eff3dded0000","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -71,6 +71,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**\n@@ -82,6 +83,7 @@ public interface RelationshipTypeService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**\n@@ -92,5 +94,6 @@ public interface RelationshipTypeService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"2d9fa5a994a196a0cf100617e2251a6167892fc5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -73,6 +73,7 @@ public interface ReportService extends ExecutableService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull ReportTO reportTO);\n \n     /**\n@@ -84,6 +85,7 @@ public interface ReportService extends ExecutableService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull ReportTO reportTO);\n \n     /**\n@@ -94,6 +96,7 @@ public interface ReportService extends ExecutableService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**"},{"sha":"3172891957f4a3a9996cd6040da63b960495703a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportTemplateService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -83,6 +83,7 @@ public interface ReportTemplateService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -91,7 +92,6 @@ public interface ReportTemplateService extends JAXRSService {\n      * @param key report template\n      * @param format template format\n      * @return report template with matching key and format, if available\n-     * @return an empty response if operation was successful\n      */\n     @GET\n     @Path(\"{key}/{format}\")"},{"sha":"941252296a98a2d71945f5a74379ce46aff0b864","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceHistoryService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -60,6 +60,7 @@ public interface ResourceHistoryService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -70,5 +71,6 @@ public interface ResourceHistoryService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"af918546705c88fd10b2c702e3c7a8ec423ea7ac","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -110,6 +110,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull ResourceTO resourceTO);\n \n     /**\n@@ -121,6 +122,7 @@ PagedConnObjectTOResult listConnObjects(\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull ResourceTO resourceTO);\n \n     /**\n@@ -133,6 +135,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @POST\n     @Path(\"{key}/{anyTypeKey}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response setLatestSyncToken(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n@@ -146,6 +149,7 @@ Response setLatestSyncToken(\n      */\n     @DELETE\n     @Path(\"{key}/{anyTypeKey}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response removeSyncToken(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n@@ -159,6 +163,7 @@ Response removeSyncToken(\n     @DELETE\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**"},{"sha":"5e55b1eb725d2dae9300f9170154a2a8bc8bbcd1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -72,6 +72,7 @@ public interface RoleService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull RoleTO roleTO);\n \n     /**\n@@ -83,6 +84,7 @@ public interface RoleService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull RoleTO roleTO);\n \n     /**\n@@ -93,6 +95,7 @@ public interface RoleService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -116,6 +119,7 @@ public interface RoleService extends JAXRSService {\n     @PUT\n     @Path(\"{key}/consoleLayout\")\n     @Consumes({ MediaType.APPLICATION_JSON })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n \n     /**\n@@ -126,5 +130,6 @@ public interface RoleService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}/consoleLayout\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"578e40328571d6eb3ed4f9c597f1073584a50d23","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -82,6 +82,7 @@ <T extends AbstractSchemaTO> T read(\n     @POST\n     @Path(\"{type}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n@@ -94,6 +95,7 @@ <T extends AbstractSchemaTO> T read(\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n@@ -105,5 +107,6 @@ <T extends AbstractSchemaTO> T read(\n      */\n     @DELETE\n     @Path(\"{type}/{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"70c408da7746158b6955a269a709695b2751d377","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -71,6 +71,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n@@ -82,6 +83,7 @@ public interface SecurityQuestionService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n@@ -92,6 +94,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**"},{"sha":"1e7bcd2d084b6900656f2da81c0bd2b75c4bda01","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -105,6 +105,7 @@ <T extends AbstractTaskTO> T read(\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**"},{"sha":"ee16aac13d37e3d53d516b7d0a7ace21a915fb21","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -156,6 +156,7 @@ Response create(@NotNull UserTO userTO,\n      */\n     @POST\n     @Path(\"requestPasswordReset\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n \n     /**\n@@ -170,5 +171,6 @@ Response create(@NotNull UserTO userTO,\n      */\n     @POST\n     @Path(\"confirmPasswordReset\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n }"},{"sha":"74febf53c03953e77df7ff3263928829fb864882","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -93,6 +93,7 @@ Response exportDiagram(\n     @PUT\n     @Path(\"{anyType}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response set(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key,\n@@ -107,6 +108,7 @@ Response set(\n      */\n     @DELETE\n     @Path(\"{anyType}/{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key);"},{"sha":"aa71fbd8d09622b5794c6a330160f16ee07d2498","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AccessTokenLogic.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAccessTokenLogic.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -25,8 +25,10 @@\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -70,7 +72,9 @@ private byte[] getAuthorities() {\n     @PreAuthorize(\"isAuthenticated()\")\n     public Pair<String, Date> login() {\n         if (anonymousUser.equals(AuthContextUtils.getUsername())) {\n-            throw new IllegalArgumentException(anonymousUser + \" cannot be granted an access token\");\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n+            sce.getElements().add(anonymousUser + \" cannot be granted an access token\");\n+            throw sce;\n         }\n \n         return binder.create("},{"sha":"95944c9bc15d9074d642f9ef56d287843747702b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeLogic.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -107,17 +107,19 @@ public AnyTypeTO delete(final String key) {\n             throw new NotFoundException(key);\n         }\n \n-        try {\n-            Integer anyObjects = anyObjectDAO.countByType().get(anyType);\n-            if (anyObjects != null && anyObjects > 0) {\n-                LOG.error(\"{} AnyObject instances found for {}, aborting\", anyObjects, anyType);\n+        Integer anyObjects = anyObjectDAO.countByType().get(anyType);\n+        if (anyObjects != null && anyObjects > 0) {\n+            LOG.error(\"{} AnyObject instances found for {}, aborting\", anyObjects, anyType);\n \n-                throw new IllegalArgumentException(\"AnyObject instances found for \" + key);\n-            }\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n+            sce.getElements().add(\"AnyObject instances found for \" + key);\n+            throw sce;\n+        }\n \n+        try {\n             return binder.delete(anyType);\n         } catch (IllegalArgumentException e) {\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n             sce.getElements().add(e.getMessage());\n             throw sce;\n         }"},{"sha":"2a4b3169d46d5edadf7510dfae6ea063271f5b0d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -157,16 +157,26 @@ public <T extends AbstractTaskTO> Pair<Integer, List<T>> list(\n             final List<OrderByClause> orderByClauses,\n             final boolean details) {\n \n-        int count = taskDAO.count(\n-                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey);\n+        try {\n+            if (type == null) {\n+                throw new IllegalArgumentException(\"type is required\");\n+            }\n \n-        List<T> result = taskDAO.findAll(\n-                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey,\n-                page, size, orderByClauses).stream().\n-                <T>map(task -> binder.getTaskTO(task, taskUtilsFactory.getInstance(type), details)).\n-                collect(Collectors.toList());\n+            int count = taskDAO.count(\n+                    type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey);\n \n-        return Pair.of(count, result);\n+            List<T> result = taskDAO.findAll(\n+                    type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey,\n+                    page, size, orderByClauses).stream().\n+                    <T>map(task -> binder.getTaskTO(task, taskUtilsFactory.getInstance(type), details)).\n+                    collect(Collectors.toList());\n+\n+            return Pair.of(count, result);\n+        } catch (IllegalArgumentException e) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")"},{"sha":"53fb4a930d8c8ec57ac2717bf9ce3453101990a7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":48,"deletions":48,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -334,8 +334,8 @@ private Set<String> getWhereClause(final String expression, final String value)\n         List<String> attrValues = split(value, literals);\n \n         if (attrValues.size() != identifiers.size()) {\n-            LOG.error(\"Ambiguous JEXL expression resolution.\");\n-            throw new IllegalArgumentException(\"literals and values have different size\");\n+            LOG.error(\"Ambiguous JEXL expression resolution: literals and values have different size\");\n+            return Collections.emptySet();\n         }\n \n         // clauses to be used with INTERSECTed queries\n@@ -350,53 +350,51 @@ private Set<String> getWhereClause(final String expression, final String value)\n         // Create several clauses: one for eanch identifiers\n         for (int i = 0; i < identifiers.size(); i++) {\n             if (!used.contains(identifiers.get(i))) {\n-\n                 // verify schema existence and get schema type\n                 PlainSchema schema = plainSchemaDAO().find(identifiers.get(i));\n                 if (schema == null) {\n-                    LOG.error(\"Invalid schema id '{}'\", identifiers.get(i));\n-                    throw new IllegalArgumentException(\"Invalid schema id \" + identifiers.get(i));\n-                }\n-\n-                // clear builder\n-                bld.delete(0, bld.length());\n-\n-                bld.append(\"(\");\n-\n-                // set schema name\n-                bld.append(\"s.id = '\").append(identifiers.get(i)).append(\"'\");\n-\n-                bld.append(\" AND \");\n-\n-                bld.append(\"s.id = a.schema_id\").append(\" AND \");\n+                    LOG.error(\"Invalid schema '{}', ignoring\", identifiers.get(i));\n+                } else {\n+                    // clear builder\n+                    bld.delete(0, bld.length());\n+\n+                    bld.append(\"(\");\n+\n+                    // set schema name\n+                    bld.append(\"s.id = '\").append(identifiers.get(i)).append(\"'\");\n+\n+                    bld.append(\" AND \");\n+\n+                    bld.append(\"s.id = a.schema_id\").append(\" AND \");\n+\n+                    bld.append(\"a.id = v.attribute_id\");\n+\n+                    bld.append(\" AND \");\n+\n+                    // use a value clause different for eanch different schema type\n+                    switch (schema.getType()) {\n+                        case Boolean:\n+                            bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append(\"'\");\n+                            break;\n+                        case Long:\n+                            bld.append(\"v.longValue = \").append(attrValues.get(i));\n+                            break;\n+                        case Double:\n+                            bld.append(\"v.doubleValue = \").append(attrValues.get(i));\n+                            break;\n+                        case Date:\n+                            bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n+                            break;\n+                        default:\n+                            bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n+                    }\n \n-                bld.append(\"a.id = v.attribute_id\");\n+                    bld.append(\")\");\n \n-                bld.append(\" AND \");\n+                    used.add(identifiers.get(i));\n \n-                // use a value clause different for eanch different schema type\n-                switch (schema.getType()) {\n-                    case Boolean:\n-                        bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append(\"'\");\n-                        break;\n-                    case Long:\n-                        bld.append(\"v.longValue = \").append(attrValues.get(i));\n-                        break;\n-                    case Double:\n-                        bld.append(\"v.doubleValue = \").append(attrValues.get(i));\n-                        break;\n-                    case Date:\n-                        bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n-                        break;\n-                    default:\n-                        bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n+                    clauses.add(bld.toString());\n                 }\n-\n-                bld.append(\")\");\n-\n-                used.add(identifiers.get(i));\n-\n-                clauses.add(bld.toString());\n             }\n         }\n \n@@ -434,13 +432,15 @@ public List<A> findByDerAttrValue(final String schemaKey, final String value) {\n             }\n         }\n \n-        Query query = entityManager().createNativeQuery(querystring.toString());\n-\n         List<A> result = new ArrayList<>();\n-        for (Object anyKey : query.getResultList()) {\n-            A any = find(anyKey.toString());\n-            if (!result.contains(any)) {\n-                result.add(any);\n+        if (querystring.length() > 0) {\n+            Query query = entityManager().createNativeQuery(querystring.toString());\n+\n+            for (Object anyKey : query.getResultList()) {\n+                A any = find(anyKey.toString());\n+                if (!result.contains(any)) {\n+                    result.add(any);\n+                }\n             }\n         }\n "},{"sha":"fa323943d29d7d03c6f5e957f74a643349070488","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -21,7 +21,7 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n \n import java.util.Date;\n@@ -95,16 +95,12 @@ public void findByDerAttributeValue() {\n \n     @Test\n     public void findByInvalidDerAttrValue() {\n-        assertThrows(IllegalArgumentException.class, () -> {\n-            userDAO.findByDerAttrValue(\"cn\", \"Antonio, Maria, Rossi\");\n-        });\n+        assertTrue(userDAO.findByDerAttrValue(\"cn\", \"Antonio, Maria, Rossi\").isEmpty());\n     }\n \n     @Test\n     public void findByInvalidDerAttrExpression() {\n-        assertThrows(IllegalArgumentException.class, () -> {\n-            userDAO.findByDerAttrValue(\"noschema\", \"Antonio, Maria\");\n-        });\n+        assertTrue(userDAO.findByDerAttrValue(\"noschema\", \"Antonio, Maria\").isEmpty());\n     }\n \n     @Test"},{"sha":"90645b2db1852e8d7a7953ca825b2eaecc8b3fef","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -146,7 +146,7 @@ public Uid authenticate(final String username, final String password, final Oper\n                 if (e.getCause() instanceof RuntimeException) {\n                     throw (RuntimeException) e.getCause();\n                 } else {\n-                    throw new IllegalArgumentException(e.getCause());\n+                    throw new RuntimeException(e.getCause());\n                 }\n             }\n         } else {\n@@ -180,7 +180,7 @@ public Uid create(\n                 if (e.getCause() instanceof RuntimeException) {\n                     throw (RuntimeException) e.getCause();\n                 } else {\n-                    throw new IllegalArgumentException(e.getCause());\n+                    throw new RuntimeException(e.getCause());\n                 }\n             }\n         } else {\n@@ -216,7 +216,7 @@ public Uid update(\n                 if (e.getCause() instanceof RuntimeException) {\n                     throw (RuntimeException) e.getCause();\n                 } else {\n-                    throw new IllegalArgumentException(e.getCause());\n+                    throw new RuntimeException(e.getCause());\n                 }\n             }\n         } else {\n@@ -250,7 +250,7 @@ public void delete(\n                 if (e.getCause() instanceof RuntimeException) {\n                     throw (RuntimeException) e.getCause();\n                 } else {\n-                    throw new IllegalArgumentException(e.getCause());\n+                    throw new RuntimeException(e.getCause());\n                 }\n             }\n         } else {\n@@ -289,7 +289,7 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n                 if (e.getCause() instanceof RuntimeException) {\n                     throw (RuntimeException) e.getCause();\n                 } else {\n-                    throw new IllegalArgumentException(e.getCause());\n+                    throw new RuntimeException(e.getCause());\n                 }\n             }\n         } else {\n@@ -346,7 +346,7 @@ public Set<ObjectClassInfo> getObjectClassInfo() {\n             if (e.getCause() instanceof RuntimeException) {\n                 throw (RuntimeException) e.getCause();\n             } else {\n-                throw new IllegalArgumentException(e.getCause());\n+                throw new RuntimeException(e.getCause());\n             }\n         }\n     }\n@@ -364,7 +364,7 @@ public void validate() {\n             if (e.getCause() instanceof RuntimeException) {\n                 throw (RuntimeException) e.getCause();\n             } else {\n-                throw new IllegalArgumentException(e.getCause());\n+                throw new RuntimeException(e.getCause());\n             }\n         }\n     }\n@@ -382,7 +382,7 @@ public void test() {\n             if (e.getCause() instanceof RuntimeException) {\n                 throw (RuntimeException) e.getCause();\n             } else {\n-                throw new IllegalArgumentException(e.getCause());\n+                throw new RuntimeException(e.getCause());\n             }\n         }\n     }\n@@ -412,7 +412,7 @@ public ConnectorObject getObject(\n             if (e.getCause() instanceof RuntimeException) {\n                 throw (RuntimeException) e.getCause();\n             } else {\n-                throw new IllegalArgumentException(e.getCause());\n+                throw new RuntimeException(e.getCause());\n             }\n         }\n     }"},{"sha":"2b77a61a35c9766b642bd8845252cb4d25d4686f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/IntAttrNameParser.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParser.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import java.text.ParseException;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -88,7 +89,7 @@ private void setFieldOrSchemaName(\n     }\n \n     @Transactional(readOnly = true)\n-    public IntAttrName parse(final String intAttrName, final AnyTypeKind provisionAnyTypeKind) {\n+    public IntAttrName parse(final String intAttrName, final AnyTypeKind provisionAnyTypeKind) throws ParseException {\n         IntAttrName result = new IntAttrName();\n \n         if (intAttrName.indexOf('.') == -1) {\n@@ -113,7 +114,7 @@ public IntAttrName parse(final String intAttrName, final AnyTypeKind provisionAn\n                         result.setMembershipOfGroup(matcher.group(1));\n                         setFieldOrSchemaName(matcher.group(2), result.getAnyTypeKind(), result);\n                     } else {\n-                        throw new IllegalArgumentException(\"Unparsable expression: \" + intAttrName);\n+                        throw new ParseException(\"Unparsable expression: \" + intAttrName, 0);\n                     }\n                 }\n             }"},{"sha":"8685d39994a495ee2ca4124cb63613e4d110126b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":29,"deletions":11,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n@@ -296,8 +297,13 @@ public Pair<String, Set<Attribute>> prepareAttrs(final Realm realm, final OrgUni\n     private Pair<String, Attribute> prepareAttr(\n             final Provision provision, final Item mapItem, final Any<?> any, final String password) {\n \n-        IntAttrName intAttrName =\n-                intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n+        IntAttrName intAttrName;\n+        try {\n+            intAttrName = intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", mapItem.getIntAttrName(), e);\n+            return null;\n+        }\n \n         boolean readOnlyVirSchema = false;\n         Schema schema = null;\n@@ -588,20 +594,27 @@ public List<PlainAttrValue> getIntValues(\n     private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n         Pair<String, Attribute> preparedAttr =\n                 prepareAttr(provision, MappingUtils.getConnObjectKeyItem(provision).get(), any, null);\n-        String connObjectKey = preparedAttr.getKey();\n \n-        return MappingUtils.evaluateNAME(any, provision, connObjectKey).getNameValue();\n+        return preparedAttr == null\n+                ? null\n+                : MappingUtils.evaluateNAME(any, provision, preparedAttr.getKey()).getNameValue();\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n     public Optional<String> getConnObjectKeyValue(final Any<?> any, final Provision provision) {\n         MappingItem mapItem = provision.getMapping().getConnObjectKeyItem().get();\n-        List<PlainAttrValue> values = getIntValues(\n-                provision,\n-                mapItem,\n-                intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind()),\n-                any);\n+        List<PlainAttrValue> values;\n+        try {\n+            values = getIntValues(\n+                    provision,\n+                    mapItem,\n+                    intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind()),\n+                    any);\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", mapItem.getIntAttrName(), e);\n+            values = Collections.emptyList();\n+        }\n         return Optional.ofNullable(values.isEmpty()\n                 ? null\n                 : values.get(0).getValueAsString());\n@@ -627,8 +640,13 @@ public void setIntValues(final Item mapItem, final Attribute attr, final AnyTO a\n         }\n         values = values == null ? Collections.emptyList() : values;\n \n-        IntAttrName intAttrName =\n-                intAttrNameParser.parse(mapItem.getIntAttrName(), anyUtils.getAnyTypeKind());\n+        IntAttrName intAttrName;\n+        try {\n+            intAttrName = intAttrNameParser.parse(mapItem.getIntAttrName(), anyUtils.getAnyTypeKind());\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", mapItem.getIntAttrName(), e);\n+            return;\n+        }\n \n         if (intAttrName.getField() != null) {\n             switch (intAttrName.getField()) {"},{"sha":"1d1bb16288a3184c26a8f5a7bce05162f475c960","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -203,9 +204,13 @@ private List<String> evaluateMandatoryCondition(final Provision provision, final\n         List<String> missingAttrNames = new ArrayList<>();\n \n         MappingUtils.getPropagationItems(provision.getMapping().getItems()).forEach(mapItem -> {\n-            IntAttrName intAttrName = intAttrNameParser.\n-                    parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n-            if (intAttrName.getSchemaType() != null) {\n+            IntAttrName intAttrName = null;\n+            try {\n+                intAttrName = intAttrNameParser.parse(mapItem.getIntAttrName(), provision.getAnyType().getKind());\n+            } catch (ParseException e) {\n+                LOG.error(\"Invalid intAttrName '{}', ignoring\", mapItem.getIntAttrName(), e);\n+            }\n+            if (intAttrName != null && intAttrName.getSchemaType() != null) {\n                 List<PlainAttrValue> values = mappingManager.getIntValues(provision, mapItem, intAttrName, any);\n                 if (values.isEmpty() && JexlUtils.evaluateMandatoryCondition(mapItem.getMandatoryCondition(), any)) {\n                     missingAttrNames.add(mapItem.getIntAttrName());"},{"sha":"a4efbf53890bd9cf8ba2fbdbf46215947e51e4c5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/NotificationDataBinderImpl.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.text.ParseException;\n import java.util.regex.Matcher;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -148,7 +149,13 @@ public void update(final Notification notification, final NotificationTO notific\n                 collect(Collectors.toList()));\n \n         // 3. verify recipientAttrName\n-        intAttrNameParser.parse(notification.getRecipientAttrName(), AnyTypeKind.USER);\n+        try {\n+            intAttrNameParser.parse(notification.getRecipientAttrName(), AnyTypeKind.USER);\n+        } catch (ParseException e) {\n+            SyncopeClientException invalidRequest = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n+            invalidRequest.getElements().add(e.getMessage());\n+            throw invalidRequest;\n+        }\n \n         if (notificationTO.getRecipientsProvider() == null) {\n             notification.setRecipientsProvider(null);"},{"sha":"d877700d2b73ad3f963e5b223b571f3e2bd902bd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -73,7 +73,7 @@ public class RealmDataBinderImpl implements RealmDataBinder {\n \n     private void setTemplates(final RealmTO realmTO, final Realm realm) {\n         // validate JEXL expressions from templates and proceed if fine\n-        templateUtils.check(realmTO.getTemplates(), ClientExceptionType.InvalidPullTask);\n+        templateUtils.check(realmTO.getTemplates(), ClientExceptionType.InvalidRealm);\n         realmTO.getTemplates().entrySet().forEach(entry -> {\n             AnyType type = anyTypeDAO.find(entry.getKey());\n             if (type == null) {"},{"sha":"875f58a6efa4ddcaa8e0726cf08c6d0a33ba11f2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.text.ParseException;\n import java.util.Collections;\n import java.util.Date;\n import java.util.HashSet;\n@@ -407,11 +408,15 @@ private void populateMapping(\n                 requiredValuesMissing.getElements().add(\"intAttrName\");\n                 scce.addException(requiredValuesMissing);\n             } else {\n-                IntAttrName intAttrName = intAttrNameParser.parse(\n-                        itemTO.getIntAttrName(),\n-                        mapping.getProvision().getAnyType().getKind());\n+                IntAttrName intAttrName = null;\n+                try {\n+                    intAttrName = intAttrNameParser.parse(\n+                            itemTO.getIntAttrName(), mapping.getProvision().getAnyType().getKind());\n+                } catch (ParseException e) {\n+                    LOG.error(\"Invalid intAttrName '{}'\", itemTO.getIntAttrName(), e);\n+                }\n \n-                if (intAttrName.getSchemaType() == null && intAttrName.getField() == null) {\n+                if (intAttrName == null || intAttrName.getSchemaType() == null && intAttrName.getField() == null) {\n                     LOG.error(\"'{}' not existing\", itemTO.getIntAttrName());\n                     invalidMapping.getElements().add(\"'\" + itemTO.getIntAttrName() + \"' not existing\");\n                 } else {"},{"sha":"c0825550786611eb743cc6c32a35405b08528e9d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -29,6 +29,7 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n+import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;"},{"sha":"67b97ed73bc6af7b58eb416c1b4136506fa4c225","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.notification;\n \n import java.io.StringWriter;\n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -377,7 +378,13 @@ public List<NotificationTask> createTasks(\n     private String getRecipientEmail(final String recipientAttrName, final User user) {\n         String email = null;\n \n-        IntAttrName intAttrName = intAttrNameParser.parse(recipientAttrName, AnyTypeKind.USER);\n+        IntAttrName intAttrName;\n+        try {\n+            intAttrName = intAttrNameParser.parse(recipientAttrName, AnyTypeKind.USER);\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified as recipient, ignoring\", recipientAttrName, e);\n+            return email;\n+        }\n \n         if (\"username\".equals(intAttrName.getField())) {\n             email = user.getUsername();"},{"sha":"40d34f550ac844a4147da096745fc18da2931962","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -193,9 +194,15 @@ private List<String> findByConnObjectKeyItem(\n \n         List<String> result = new ArrayList<>();\n \n-        IntAttrName intAttrName = intAttrNameParser.parse(\n-                connObjectKeyItem.get().getIntAttrName(),\n-                provision.getAnyType().getKind());\n+        IntAttrName intAttrName;\n+        try {\n+            intAttrName = intAttrNameParser.parse(\n+                    connObjectKeyItem.get().getIntAttrName(),\n+                    provision.getAnyType().getKind());\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", connObjectKeyItem.get().getIntAttrName(), e);\n+            return result;\n+        }\n \n         if (intAttrName.getField() != null) {\n             switch (intAttrName.getField()) {"},{"sha":"beeb7b05c8bef03be98e82c0d599d56e640f6b84","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/IntAttrNameParserTest.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FIntAttrNameParserTest.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -23,6 +23,7 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.fail;\n \n+import java.text.ParseException;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n@@ -37,7 +38,7 @@ public class IntAttrNameParserTest extends AbstractTest {\n     private IntAttrNameParser intAttrNameParser;\n \n     @Test\n-    public void ownFields() {\n+    public void ownFields() throws ParseException {\n         IntAttrName intAttrName = intAttrNameParser.parse(\"key\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n         assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n@@ -78,7 +79,7 @@ public void ownFields() {\n     }\n \n     @Test\n-    public void ownSchema() {\n+    public void ownSchema() throws ParseException {\n         IntAttrName intAttrName = intAttrNameParser.parse(\"email\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n         assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n@@ -111,7 +112,7 @@ public void ownSchema() {\n     }\n \n     @Test\n-    public void enclosingGroup() {\n+    public void enclosingGroup() throws ParseException {\n         IntAttrName intAttrName = intAttrNameParser.parse(\"groups[readers].cn\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n         assertEquals(AnyTypeKind.GROUP, intAttrName.getAnyTypeKind());\n@@ -124,7 +125,7 @@ public void enclosingGroup() {\n     }\n \n     @Test\n-    public void relatedAnyObject() {\n+    public void relatedAnyObject() throws ParseException {\n         IntAttrName intAttrName = intAttrNameParser.parse(\"anyObjects[hp].name\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n         assertEquals(AnyTypeKind.ANY_OBJECT, intAttrName.getAnyTypeKind());\n@@ -137,7 +138,7 @@ public void relatedAnyObject() {\n     }\n \n     @Test\n-    public void membership() {\n+    public void membership() throws ParseException {\n         IntAttrName intAttrName = intAttrNameParser.parse(\"memberships[top].cn\", AnyTypeKind.USER);\n         assertNotNull(intAttrName);\n         assertEquals(AnyTypeKind.USER, intAttrName.getAnyTypeKind());\n@@ -154,7 +155,7 @@ public void invalid() {\n         try {\n             intAttrNameParser.parse(\"memberships.cn\", AnyTypeKind.USER);\n             fail(\"This should not happen\");\n-        } catch (IllegalArgumentException e) {\n+        } catch (ParseException e) {\n             assertNotNull(e);\n         }\n     }"},{"sha":"00a14d1336296460e999a6ec8d86cac9ac4d25bc","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -75,6 +75,7 @@ public interface CamelRouteService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull CamelRouteTO route);\n \n     /**\n@@ -84,6 +85,7 @@ public interface CamelRouteService extends JAXRSService {\n      */\n     @POST\n     @Path(\"restartContext\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response restartContext();\n \n     /**"},{"sha":"bdc5887f1e2c5179693f4766d74b3da5ac5349c1","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.logic.saml2;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -115,8 +116,14 @@ public List<String> findMatchingUser(final String keyValue, final String idpKey)\n             }\n         }\n \n-        IntAttrName intAttrName = intAttrNameParser.parse(\n-                idp.getConnObjectKeyItem().get().getIntAttrName(), AnyTypeKind.USER);\n+        IntAttrName intAttrName;\n+        try {\n+            intAttrName = intAttrNameParser.parse(idp.getConnObjectKeyItem().get().getIntAttrName(), AnyTypeKind.USER);\n+        } catch (ParseException e) {\n+            LOG.error(\"Invalid intAttrName '{}' specified, ignoring\",\n+                    idp.getConnObjectKeyItem().get().getIntAttrName(), e);\n+            return result;\n+        }\n \n         if (intAttrName.getField() != null) {\n             switch (intAttrName.getField()) {\n@@ -200,8 +207,6 @@ private void fill(final String idpKey, final SAML2LoginResponseTO responseTO, fi\n         }\n \n         idp.getItems().forEach(item -> {\n-            IntAttrName intAttrName = intAttrNameParser.parse(item.getIntAttrName(), AnyTypeKind.USER);\n-\n             List<String> values = Collections.emptyList();\n             Optional<AttrTO> samlAttr = responseTO.getAttr(item.getExtAttrName());\n             if (samlAttr.isPresent() && !samlAttr.get().getValues().isEmpty()) {\n@@ -217,7 +222,14 @@ private void fill(final String idpKey, final SAML2LoginResponseTO responseTO, fi\n                 }\n             }\n \n-            if (intAttrName.getField() != null) {\n+            IntAttrName intAttrName = null;\n+            try {\n+                intAttrName = intAttrNameParser.parse(item.getIntAttrName(), AnyTypeKind.USER);\n+            } catch (ParseException e) {\n+                LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", item.getIntAttrName(), e);\n+            }\n+\n+            if (intAttrName != null && intAttrName.getField() != null) {\n                 switch (intAttrName.getField()) {\n                     case \"username\":\n                         if (!values.isEmpty()) {\n@@ -228,7 +240,7 @@ private void fill(final String idpKey, final SAML2LoginResponseTO responseTO, fi\n                     default:\n                         LOG.warn(\"Unsupported: {}\", intAttrName.getField());\n                 }\n-            } else if (intAttrName.getSchemaType() != null) {\n+            } else if (intAttrName != null && intAttrName.getSchemaType() != null) {\n                 switch (intAttrName.getSchemaType()) {\n                     case PLAIN:\n                         Optional<AttrTO> attr = userTO.getPlainAttr(intAttrName.getSchemaName());"},{"sha":"7a15513442e8e0b3cd0bc3c7a90536df3b175c1e","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2IdPDataBinderImpl.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Base64;\n import java.util.stream.Collectors;\n+import java.text.ParseException;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -81,9 +82,10 @@ private void populateItems(\n             final AnyTypeClassTO allowedSchemas) {\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n-        SyncopeClientException invalidMapping = SyncopeClientException.build(ClientExceptionType.InvalidMapping);\n-        SyncopeClientException requiredValuesMissing = SyncopeClientException.build(\n-                ClientExceptionType.RequiredValuesMissing);\n+        SyncopeClientException invalidMapping =\n+                SyncopeClientException.build(ClientExceptionType.InvalidMapping);\n+        SyncopeClientException requiredValuesMissing =\n+                SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n \n         for (ItemTO itemTO : idpTO.getItems()) {\n             if (itemTO == null) {\n@@ -93,9 +95,14 @@ private void populateItems(\n                 requiredValuesMissing.getElements().add(\"intAttrName\");\n                 scce.addException(requiredValuesMissing);\n             } else {\n-                IntAttrName intAttrName = intAttrNameParser.parse(itemTO.getIntAttrName(), AnyTypeKind.USER);\n+                IntAttrName intAttrName = null;\n+                try {\n+                    intAttrName = intAttrNameParser.parse(itemTO.getIntAttrName(), AnyTypeKind.USER);\n+                } catch (ParseException e) {\n+                    LOG.error(\"Invalid intAttrName '{}' specified, ignoring\", itemTO.getIntAttrName(), e);\n+                }\n \n-                if (intAttrName.getSchemaType() == null && intAttrName.getField() == null) {\n+                if (intAttrName == null || intAttrName.getSchemaType() == null && intAttrName.getField() == null) {\n                     LOG.error(\"'{}' not existing\", itemTO.getIntAttrName());\n                     invalidMapping.getElements().add(\"'\" + itemTO.getIntAttrName() + \"' not existing\");\n                 } else {"},{"sha":"a3c9bd5f53cb5de533e2c0f4ec474686ff9bcf68","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2IdPService.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -83,6 +83,7 @@ public interface SAML2IdPService extends JAXRSService {\n      */\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response importFromMetadata(@NotNull InputStream input);\n \n     /**\n@@ -94,6 +95,7 @@ public interface SAML2IdPService extends JAXRSService {\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(@NotNull SAML2IdPTO saml2IdpTO);\n \n     /**\n@@ -104,5 +106,6 @@ public interface SAML2IdPService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response delete(@PathParam(\"key\") String key);\n }"},{"sha":"3a982551d070fea3b4833e3ba20e0300f412489d","filename":"ext/scimv2/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SCIMConfService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -52,9 +52,10 @@ public interface SCIMConfService extends JAXRSService {\n      * Sets SCIM configuration.\n      *\n      * @param conf SCIM configuration\n-     * @return Response.noContent().build();\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response set(@NotNull SCIMConf conf);\n }"},{"sha":"28ae44203eed9de4bcd1183523e5d8dc856eacaf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyTypeITCase.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -125,16 +125,6 @@ public void createInvalidName() {\n         }\n     }\n \n-    @Test\n-    public void deleteInvalid() {\n-        try {\n-            anyTypeService.delete(AnyTypeKind.USER.name());\n-            fail(\"This should not happen\");\n-        } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.InvalidAnyType, e.getType());\n-        }\n-    }\n-\n     @Test\n     public void deleteTypeClass() {\n         AnyTypeClassTO newClass = new AnyTypeClassTO();"},{"sha":"83e01712c2d0ac3d0d8092735cce87f5ab3e1aae","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java","status":"modified","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java?ref=43fcd1d6af0f05e618a40cee8b0ba6e5978a7b0d","patch":"@@ -29,11 +29,17 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n+import org.apache.syncope.common.rest.api.service.AccessTokenService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n@@ -146,4 +152,51 @@ public void headersMultiValue() {\n             assertEquals(2, e.getExceptions().size());\n         }\n     }\n+\n+    @Test\n+    public void invalidRequests() {\n+        try {\n+            taskService.list(new TaskQuery.Builder(TaskType.NOTIFICATION).resource(RESOURCE_NAME_LDAP).build());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRequest, e.getType());\n+        }\n+        try {\n+            taskService.list(new TaskQuery.Builder(TaskType.PULL).anyTypeKind(AnyTypeKind.ANY_OBJECT).build());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRequest, e.getType());\n+        }\n+        try {\n+            taskService.list(new TaskQuery.Builder(TaskType.PULL).\n+                    notification(\"e00945b5-1184-4d43-8e45-4318a8dcdfd4\").build());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRequest, e.getType());\n+        }\n+\n+        try {\n+            anyTypeService.delete(AnyTypeKind.USER.name());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRequest, e.getType());\n+        }\n+\n+        try {\n+            clientFactory.create(ANONYMOUS_UNAME, ANONYMOUS_KEY).getService(AccessTokenService.class).login();\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRequest, e.getType());\n+        }\n+\n+        try {\n+            ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n+            ItemTO mapping = ldap.getProvisions().get(0).getMapping().getItems().get(0);\n+            mapping.setIntAttrName(\"memberships.cn\");\n+            resourceService.update(ldap);\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidMapping, e.getType());\n+        }\n+    }\n }"}]}