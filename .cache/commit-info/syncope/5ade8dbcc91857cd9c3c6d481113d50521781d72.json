{"sha":"5ade8dbcc91857cd9c3c6d481113d50521781d72","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVhZGU4ZGJjYzkxODU3Y2Q5YzNjNmQ0ODExMTNkNTA1MjE3ODFkNzI=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-06T12:00:53Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-06-06T12:00:53Z"},"message":"SYNCOPE-91 #comment added alternative wf path and activation test\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1346839 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"08136502c7b08a464c62af59b800f54d922c8401","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/08136502c7b08a464c62af59b800f54d922c8401"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5ade8dbcc91857cd9c3c6d481113d50521781d72","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ade8dbcc91857cd9c3c6d481113d50521781d72","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ade8dbcc91857cd9c3c6d481113d50521781d72","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ade8dbcc91857cd9c3c6d481113d50521781d72/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"17918d8135c1abb428cad23a622a05c8ae25ec74","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17918d8135c1abb428cad23a622a05c8ae25ec74","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17918d8135c1abb428cad23a622a05c8ae25ec74"}],"stats":{"total":246,"additions":196,"deletions":50},"files":[{"sha":"6de88c7c326a6bcf99fdb5538f5f988259d87185","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":78,"deletions":11,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -112,7 +112,8 @@ public class UserController {\n     @RequestMapping(method = RequestMethod.GET, value = \"/verifyPassword/{username}\")\n     @Transactional(readOnly = true)\n     public ModelAndView verifyPassword(@PathVariable(\"username\") String username,\n-            @RequestParam(\"password\") final String password) throws NotFoundException, UnauthorizedRoleException {\n+            @RequestParam(\"password\") final String password)\n+            throws NotFoundException, UnauthorizedRoleException {\n \n         auditManager.audit(Category.user, UserSubCategory.create, Result.success,\n                 \"Verified password for: \" + username);\n@@ -132,7 +133,8 @@ public ModelAndView count() {\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search/count\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public ModelAndView searchCount(@RequestBody final NodeCond searchCondition) throws InvalidSearchConditionException {\n+    public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n+            throws InvalidSearchConditionException {\n \n         if (!searchCondition.checkValidity()) {\n             LOG.error(\"Invalid search condition: {}\", searchCondition);\n@@ -185,7 +187,8 @@ public List<UserTO> list(@PathVariable(\"page\") final int page, @PathVariable(\"si\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/read/{userId}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public UserTO read(@PathVariable(\"userId\") final Long userId) throws NotFoundException, UnauthorizedRoleException {\n+    public UserTO read(@PathVariable(\"userId\") final Long userId)\n+            throws NotFoundException, UnauthorizedRoleException {\n \n         UserTO result = userDataBinder.getUserTO(userId);\n \n@@ -212,7 +215,8 @@ public UserTO read(@PathVariable final String username)\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public List<UserTO> search(@RequestBody final NodeCond searchCondition) throws InvalidSearchConditionException {\n+    public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n+            throws InvalidSearchConditionException {\n \n         LOG.debug(\"User search called with condition {}\", searchCondition);\n \n@@ -238,7 +242,8 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition) throws I\n     @RequestMapping(method = RequestMethod.POST, value = \"/search/{page}/{size}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> search(@RequestBody final NodeCond searchCondition, @PathVariable(\"page\") final int page,\n-            @PathVariable(\"size\") final int size) throws InvalidSearchConditionException {\n+            @PathVariable(\"size\") final int size)\n+            throws InvalidSearchConditionException {\n \n         LOG.debug(\"User search called with condition {}\", searchCondition);\n \n@@ -374,22 +379,65 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @RequestMapping(method = RequestMethod.POST, value = \"/activate\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/activate/{userId}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public UserTO activate(@RequestBody final UserTO userTO,\n+    public UserTO activate(\n+            @PathVariable(\"userId\") final Long userId,\n+            @RequestParam(required = true) final String token,\n             @RequestParam(required = false) final Set<String> resourceNames,\n             @RequestParam(required = false, defaultValue = \"true\") final Boolean performLocally,\n             @RequestParam(required = false, defaultValue = \"true\") final Boolean performRemotely)\n             throws WorkflowException, NotFoundException, UnauthorizedRoleException, PropagationException {\n \n-        LOG.debug(\"About to activate \" + userTO.getId());\n+        LOG.debug(\"About to activate \" + userId);\n+\n+        SyncopeUser user = userDAO.find(userId);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + userId);\n+        }\n+\n+        return setStatus(user, token, resourceNames, performLocally, performRemotely, true, \"activate\");\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/activateByUsername/{username}\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public UserTO activate(\n+            @PathVariable(\"username\") final String username,\n+            @RequestParam(required = true) final String token,\n+            @RequestParam(required = false) final Set<String> resourceNames,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performLocally,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performRemotely)\n+            throws WorkflowException, NotFoundException, UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to activate \" + username);\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        return setStatus(user, token, resourceNames, performLocally, performRemotely, true, \"activate\");\n+    }\n+\n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/suspendByUsername/{username}\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO suspend(@PathVariable(\"username\") final String username,\n+            @RequestParam(required = false) final Set<String> resourceNames,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performLocally,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performRemotely)\n+            throws NotFoundException, WorkflowException, UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to suspend \" + username);\n+\n+        SyncopeUser user = userDAO.find(username);\n \n-        SyncopeUser user = userDAO.find(userTO.getId());\n         if (user == null) {\n-            throw new NotFoundException(\"User \" + userTO.getId());\n+            throw new NotFoundException(\"User \" + username);\n         }\n \n-        return setStatus(user, userTO.getToken(), resourceNames, performLocally, performRemotely, true, \"activate\");\n+        return setStatus(user, null, resourceNames, performLocally, performRemotely, false, \"suspend\");\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -430,6 +478,25 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId,\n         return setStatus(user, null, resourceNames, performLocally, performRemotely, true, \"reactivate\");\n     }\n \n+    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/reactivateByUsername/{username}\")\n+    @Transactional(rollbackFor = {Throwable.class})\n+    public UserTO reactivate(final @PathVariable(\"username\") String username,\n+            @RequestParam(required = false) final Set<String> resourceNames,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performLocally,\n+            @RequestParam(required = false, defaultValue = \"true\") final Boolean performRemotely)\n+            throws NotFoundException, WorkflowException, UnauthorizedRoleException, PropagationException {\n+\n+        LOG.debug(\"About to reactivate \" + username);\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        return setStatus(user, null, resourceNames, performLocally, performRemotely, true, \"reactivate\");\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/delete/{userId}\")\n     public UserTO delete(@PathVariable(\"userId\") final Long userId)"},{"sha":"c15ed3c08578284fbc025694306a410804789205","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":27,"deletions":29,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -64,9 +64,13 @@ under the License.\n     <sequenceFlow id=\"createApproval2Reject\" sourceRef=\"createApprovalGW\" targetRef=\"reject\">\n       <conditionExpression xsi:type=\"tFormalExpression\">${!approve}</conditionExpression>\n     </sequenceFlow>\n-        \n-    <!-- activate user if suspension is not required -->\n+    \n     <exclusiveGateway id=\"enableGW\"/>\n+    <!-- opt-in required -->\n+    <sequenceFlow id=\"createApprovalGW2OptIn\" sourceRef=\"enableGW\" targetRef=\"generateToken\">\n+      <conditionExpression xsi:type=\"tFormalExpression\">${syncopeUser.getRoleIds().contains(11)}</conditionExpression>\n+    </sequenceFlow>\n+    <!-- activate user if suspension is not required -->\n     <sequenceFlow id=\"createApprovalGW2Activate\" sourceRef=\"enableGW\" targetRef=\"activate\">\n       <conditionExpression xsi:type=\"tFormalExpression\">${enabled==null}</conditionExpression>\n     </sequenceFlow>\n@@ -76,45 +80,39 @@ under the License.\n     <sequenceFlow id=\"createApprovalGW2Suspended\" sourceRef=\"enableGW\" targetRef=\"suspend\">\n       <conditionExpression xsi:type=\"tFormalExpression\">${!enabled}</conditionExpression>\n     </sequenceFlow>\n-        \n-    <!-- Comment the following two lines, uncomment the lines below and change\n-         createApprovalGW2Activate.targetRef to \"generateToken\" in order to enable opt-in. -->\n+    \n     <serviceTask id=\"activate\" name=\"Activate\" activiti:class=\"org.apache.syncope.core.workflow.activiti.AutoActivate\"/>\n     <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"/>\n \n-    <!--<serviceTask id=\"generateToken\" name=\"Generate token\" activiti:class=\"org.apache.syncope.core.workflow.activiti.GenerateToken\"/>\n+    <!-- Double opt-in required -->\n+    <serviceTask id=\"generateToken\" name=\"Generate token\" \n+                 activiti:class=\"org.apache.syncope.core.workflow.activiti.GenerateToken\"/>\n         \n-    <sequenceFlow id=\"flow5\" sourceRef=\"generateToken\" targetRef=\"createdGw\"/>\n+    <sequenceFlow id=\"flow5\" sourceRef=\"generateToken\" targetRef=\"created\"/>\n \n     <userTask id=\"created\" name=\"Created\"/>\n \n-    <sequenceFlow id=\"flow6\" sourceRef=\"created\" targetRef=\"createdGw\"/>\n+    <sequenceFlow id=\"flow6\" sourceRef=\"created\" targetRef=\"optinGW\"/>\n \n-    NOTE: this gateway makes sense when the token to be checked (i.e. the 'token' variable below) is provided as input\n-    from external to this workflow instance (a link provided in an notification e-mail, for example)\n-    <exclusiveGateway id=\"createdGw\"/>\n-    <sequenceFlow id=\"created2Activate\" sourceRef=\"createdGw\" targetRef=\"activate\">\n-      <conditionExpression xsi:type=\"tFormalExpression\">\n-        <![CDATA[${syncopeUser.checkToken(token)}]]>\n-      </conditionExpression>\n+    <exclusiveGateway id=\"optinGW\"/>\n+    <sequenceFlow id=\"created2Activate\" sourceRef=\"optinGW\" targetRef=\"removeToken\">\n+      <conditionExpression xsi:type=\"tFormalExpression\">${syncopeUser.checkToken(token)}</conditionExpression>\n     </sequenceFlow>  \n-    <sequenceFlow id=\"created2Created\" sourceRef=\"createdGw\" targetRef=\"created\">\n-      <conditionExpression xsi:type=\"tFormalExpression\">\n-        <![CDATA[${!syncopeUser.checkToken(token)}]]>\n-      </conditionExpression>\n+    <sequenceFlow id=\"created2Created\" sourceRef=\"optinGW\" targetRef=\"created\">\n+      <conditionExpression xsi:type=\"tFormalExpression\">${!syncopeUser.checkToken(token)}</conditionExpression>\n     </sequenceFlow>\n         \n-    <scriptTask id=\"activate\" name=\"Activate\" scriptFormat=\"juel\">\n+    <scriptTask id=\"removeToken\" name=\"Remove Token and Activate\" scriptFormat=\"groovy\">\n       <script>\n         syncopeUser.removeToken()    \n       </script>\n     </scriptTask>\n \n-    <sequenceFlow id=\"flow62\" sourceRef=\"activate\" targetRef=\"active\"/>-->\n-\n+    <sequenceFlow id=\"flow7\" sourceRef=\"removeToken\" targetRef=\"active\"/>\n+    \n     <userTask id=\"active\" name=\"Active\"/>\n         \n-    <sequenceFlow id=\"flow7\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n+    <sequenceFlow id=\"flow8\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n \n     <exclusiveGateway id=\"activeGw\"/>\n     <sequenceFlow id=\"active2Update\" sourceRef=\"activeGw\" targetRef=\"update\">\n@@ -130,16 +128,16 @@ under the License.\n     <!-- Update an active user -->\n     <serviceTask id=\"update\" name=\"Update\" activiti:class=\"org.apache.syncope.core.workflow.activiti.Update\"/>\n \n-    <sequenceFlow id=\"flow8\" sourceRef=\"update\" targetRef=\"active\"/>\n+    <sequenceFlow id=\"flow9\" sourceRef=\"update\" targetRef=\"active\"/>\n \n     <!-- Suspend an active user -->\n     <serviceTask id=\"suspend\" name=\"Suspend\" activiti:class=\"org.apache.syncope.core.workflow.activiti.Suspend\"/>\n \n-    <sequenceFlow id=\"flow9\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n+    <sequenceFlow id=\"flow10\" sourceRef=\"suspend\" targetRef=\"suspended\"/>\n \n     <userTask id=\"suspended\" name=\"Suspended\"/>\n         \n-    <sequenceFlow id=\"flow10\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n+    <sequenceFlow id=\"flow11\" sourceRef=\"suspended\" targetRef=\"suspendedGw\"/>\n \n     <exclusiveGateway id=\"suspendedGw\"/>\n     <sequenceFlow id=\"suspended2Reactivate\" sourceRef=\"suspendedGw\" targetRef=\"reactivate\">\n@@ -152,7 +150,7 @@ under the License.\n     <!-- Reactivate a suspended user -->\n     <serviceTask id=\"reactivate\" name =\"Reactivate\" activiti:class=\"org.apache.syncope.core.workflow.activiti.Reactivate\"/>\n \n-    <sequenceFlow id=\"flow11\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n+    <sequenceFlow id=\"flow12\" sourceRef=\"reactivate\" targetRef=\"active\"/>\n         \n     <!-- Reject an user -->\n     <scriptTask id=\"reject\" name=\"Reject\" scriptFormat=\"groovy\">\n@@ -162,11 +160,11 @@ under the License.\n       </script>\n     </scriptTask>\n         \n-    <sequenceFlow id=\"flow12\" sourceRef=\"reject\" targetRef=\"rejected\"/>\n+    <sequenceFlow id=\"flow13\" sourceRef=\"reject\" targetRef=\"rejected\"/>\n \n     <userTask id=\"rejected\" name=\"Rejected\"/>\n         \n-    <sequenceFlow id=\"flow13\" sourceRef=\"rejected\" targetRef=\"delete\"/>\n+    <sequenceFlow id=\"flow14\" sourceRef=\"rejected\" targetRef=\"delete\"/>\n \n     <!-- Delete an user (created, active or suspended) -->\n     <serviceTask id=\"delete\" name=\"Delete\" activiti:class=\"org.apache.syncope.core.workflow.activiti.Delete\"/>"},{"sha":"ad19b1bd0da2c9199f870a55ec8d023640f2d550","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -43,7 +43,7 @@ public class EntitlementTest extends AbstractTest {\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         // 69 real entitlements + 9 role entitlements\n-        assertEquals(\"did not get expected number of entitlements \", 79, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 80, list.size());\n     }\n \n     @Test"},{"sha":"523f9b12d93cb32c5280d30b249532aadbcfbbee","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -43,7 +43,7 @@ public class RoleTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<SyncopeRole> list = roleDAO.findAll();\n-        assertEquals(\"did not get expected number of roles \", 10, list.size());\n+        assertEquals(\"did not get expected number of roles \", 11, list.size());\n     }\n \n     @Test"},{"sha":"67d4ad389eb66374800f5e79415916d8f404aaa9","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":83,"deletions":4,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -434,8 +434,8 @@ public void createWithException() {\n     @Test\n     public void create() {\n         // get task list\n-        List<PropagationTaskTO> tasks = Arrays.asList(restTemplate.getForObject(BASE_URL + \"task/propagation/list\",\n-                PropagationTaskTO[].class));\n+        List<PropagationTaskTO> tasks =\n+                Arrays.asList(restTemplate.getForObject(BASE_URL + \"task/propagation/list\", PropagationTaskTO[].class));\n \n         assertNotNull(tasks);\n         assertFalse(tasks.isEmpty());\n@@ -447,8 +447,8 @@ public void create() {\n                 maxId = task.getId();\n             }\n         }\n-        PropagationTaskTO taskTO = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", PropagationTaskTO.class,\n-                maxId);\n+        PropagationTaskTO taskTO =\n+                restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", PropagationTaskTO.class, maxId);\n \n         assertNotNull(taskTO);\n         int maxTaskExecutions = taskTO.getExecutions().size();\n@@ -1264,6 +1264,59 @@ public void verifyTaskRegistration() {\n         assertEquals(newMaxId, maxId);\n     }\n \n+    @Test\n+    public void createActivate() {\n+        UserTO userTO = getSampleTO(\"createActivate@syncope.apache.org\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(11L);\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(userTO);\n+        assertNotNull(userTO.getToken());\n+        assertNotNull(userTO.getTokenExpireTime());\n+\n+        assertEquals(\"created\", userTO.getStatus());\n+\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/activate/{userId}?token=\" + userTO.getToken(), UserTO.class, userTO.getId());\n+\n+        assertNotNull(userTO);\n+        assertNull(userTO.getToken());\n+        assertNull(userTO.getTokenExpireTime());\n+\n+        assertEquals(\"active\", userTO.getStatus());\n+    }\n+\n+    @Test\n+    public void createActivateByUsername() {\n+        UserTO userTO = getSampleTO(\"createActivateByUsername@syncope.apache.org\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(11L);\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(userTO);\n+        assertNotNull(userTO.getToken());\n+        assertNotNull(userTO.getTokenExpireTime());\n+\n+        assertEquals(\"created\", userTO.getStatus());\n+\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/activateByUsername/{username}.json?token=\" + userTO.getToken(),\n+                UserTO.class, userTO.getUsername());\n+\n+        assertNotNull(userTO);\n+        assertNull(userTO.getToken());\n+        assertNull(userTO.getTokenExpireTime());\n+\n+        assertEquals(\"active\", userTO.getStatus());\n+    }\n+\n     @Test\n     public void suspendReactivate() {\n         UserTO userTO = getSampleTO(\"suspendReactivate@syncope.apache.org\");\n@@ -1288,6 +1341,32 @@ public void suspendReactivate() {\n         assertEquals(\"active\", userTO.getStatus());\n     }\n \n+    @Test\n+    public void suspendReactivateByUsername() {\n+        UserTO userTO = getSampleTO(\"suspendReactivateByUsername@syncope.apache.org\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(7L);\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(userTO);\n+        assertEquals(\"active\", userTO.getStatus());\n+\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/suspendByUsername/{username}.json\", UserTO.class, userTO.getUsername());\n+\n+        assertNotNull(userTO);\n+        assertEquals(\"suspended\", userTO.getStatus());\n+\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/reactivateByUsername/{username}.json\", UserTO.class, userTO.getUsername());\n+\n+        assertNotNull(userTO);\n+        assertEquals(\"active\", userTO.getStatus());\n+    }\n+\n     @Test\n     public void suspendReactivateOnResource() {\n         UserTO userTO = getSampleTO(\"suspreactonresource@syncope.apache.org\");"},{"sha":"cc049af61ff5bd7eee7e5e511837f12dcd28caaf","filename":"core/src/test/resources/content.xml","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ade8dbcc91857cd9c3c6d481113d50521781d72/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=5ade8dbcc91857cd9c3c6d481113d50521781d72","patch":"@@ -69,6 +69,7 @@ under the License.\n                name=\"managingConsultant\" parent_id=\"6\"\n                inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n                inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\"/>\n+  <SyncopeRole id=\"11\" name=\"roleForWorkflowOptIn\" parent_id=\"1\"/>\n \n   <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n   <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n@@ -287,10 +288,10 @@ under the License.\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_CREATE\"/>\n   \n   <ConnInstance id=\"106\" displayName=\"H2-test2\"\n-                  bundleName=\"org.connid.bundles.db.table\"\n-                  connectorName=\"org.identityconnectors.databasetable.DatabaseTableConnector\"\n-                  version=\"${connid.db.table.version}\"\n-                  xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Efalse%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ejdbc%3Ah2%3Atcp%3A//localhost%3A9092/testdb%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest2%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C/name%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eorg.h2.Driver%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EcipherAlgorithm%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3EMD5%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EretrievePassword%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%3C/set%3E%0A\"/>\n+                bundleName=\"org.connid.bundles.db.table\"\n+                connectorName=\"org.identityconnectors.databasetable.DatabaseTableConnector\"\n+                version=\"${connid.db.table.version}\"\n+                xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Efalse%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ejdbc%3Ah2%3Atcp%3A//localhost%3A9092/testdb%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest2%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C/name%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eorg.h2.Driver%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EcipherAlgorithm%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3EMD5%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EretrievePassword%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%3C/set%3E%0A\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SYNC\"/>\n     \n@@ -629,6 +630,7 @@ under the License.\n   <Entitlement name=\"ROLE_8\"/>\n   <Entitlement name=\"ROLE_9\"/>\n   <Entitlement name=\"ROLE_10\"/>\n+  <Entitlement name=\"ROLE_11\"/>\n \n   <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"1\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"advanced\" role_id=\"1\"/>"}]}