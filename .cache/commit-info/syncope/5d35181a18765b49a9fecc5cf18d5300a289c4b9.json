{"sha":"5d35181a18765b49a9fecc5cf18d5300a289c4b9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkMzUxODFhMTg3NjViNDlhOWZlY2M1Y2YxOGQ1MzAwYTI4OWM0Yjk=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-21T12:00:58Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-21T12:00:58Z"},"message":"[SYNCOPE-719] Captcha and XSRF checks now are optional","tree":{"sha":"82678846997070ee4d3c26bee3f444202ccd3a29","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/82678846997070ee4d3c26bee3f444202ccd3a29"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5d35181a18765b49a9fecc5cf18d5300a289c4b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d35181a18765b49a9fecc5cf18d5300a289c4b9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d35181a18765b49a9fecc5cf18d5300a289c4b9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d35181a18765b49a9fecc5cf18d5300a289c4b9/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc"}],"stats":{"total":346,"additions":146,"deletions":200},"files":[{"sha":"7917c865c400067b01484fd5ed9fc050864a61b7","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":18,"deletions":12,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -28,7 +28,6 @@\n import java.util.Properties;\n import org.apache.commons.io.FileUtils;\n import org.apache.syncope.client.enduser.resources.CaptchaResource;\n-import org.apache.syncope.client.enduser.resources.CaptchaValidateResource;\n import org.apache.syncope.client.enduser.resources.InfoResource;\n import org.apache.syncope.client.enduser.resources.LoginResource;\n import org.apache.syncope.client.enduser.resources.LogoutResource;\n@@ -78,6 +77,10 @@ public static SyncopeEnduserApplication get() {\n \n     private String anonymousKey;\n \n+    private boolean captchaEnabled;\n+\n+    private boolean xsrfEnabled;\n+\n     private SyncopeClientFactoryBean clientFactory;\n \n     @Override\n@@ -110,6 +113,12 @@ protected void init() {\n         anonymousKey = props.getProperty(\"anonymousKey\");\n         Assert.notNull(anonymousKey, \"<anonymousKey> not set\");\n \n+        captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n+        Assert.notNull(captchaEnabled, \"<captcha> not set\");\n+\n+        xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n+        Assert.notNull(xsrfEnabled, \"<xsrf> not set\");\n+\n         String scheme = props.getProperty(\"scheme\");\n         Assert.notNull(scheme, \"<scheme> not set\");\n         String host = props.getProperty(\"host\");\n@@ -248,17 +257,6 @@ public IResource getResource() {\n             }\n         });\n \n-        // resource to validate current captcha\n-        mountResource(\"/api/captcha/validate\", new ResourceReference(\"captchaValidate\") {\n-\n-            private static final long serialVersionUID = -128426276529456602L;\n-\n-            @Override\n-            public IResource getResource() {\n-                return new CaptchaValidateResource();\n-            }\n-        });\n-\n         mountResource(\"/api/groups\", new ResourceReference(\"groups\") {\n \n             private static final long serialVersionUID = -128426276529456602L;\n@@ -325,4 +323,12 @@ public SyncopeClientFactoryBean getClientFactory() {\n         return clientFactory;\n     }\n \n+    public boolean isCaptchaEnabled() {\n+        return captchaEnabled;\n+    }\n+\n+    public boolean isXsrfEnabled() {\n+        return xsrfEnabled;\n+    }\n+\n }"},{"sha":"d075b279eabcc690aab52c28d5ca111a8d5902b3","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/SyncopeTOAdapter.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FSyncopeTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FSyncopeTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FSyncopeTOAdapter.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.enduser.adapters;\n \n+import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n import org.apache.syncope.client.enduser.model.SyncopeTORequest;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n import org.slf4j.Logger;\n@@ -34,6 +35,7 @@ public SyncopeTORequest toSyncopeTORequest(final SyncopeTO syncopeTO) {\n         syncopeTORequest.setSelfRegAllowed(syncopeTO.isSelfRegAllowed());\n         syncopeTORequest.setPwdResetRequiringSecurityQuestions(syncopeTO.isPwdResetRequiringSecurityQuestions());\n         syncopeTORequest.setVersion(syncopeTO.getVersion());\n+        syncopeTORequest.setCaptchaEnabled(SyncopeEnduserApplication.get().isCaptchaEnabled());\n \n         return syncopeTORequest;\n     }"},{"sha":"d9ce45c672526965912c95a7c0e7e25a4283d074","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/SyncopeTORequest.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSyncopeTORequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSyncopeTORequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FSyncopeTORequest.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -32,6 +32,8 @@ public class SyncopeTORequest implements Serializable {\n \n     private boolean pwdResetRequiringSecurityQuestions;\n \n+    private boolean captchaEnabled;\n+\n     public SyncopeTORequest() {\n     }\n \n@@ -47,6 +49,10 @@ public boolean isPwdResetAllowed() {\n         return pwdResetAllowed;\n     }\n \n+    public boolean isCaptchaEnabled() {\n+        return captchaEnabled;\n+    }\n+\n     public boolean isPwdResetRequiringSecurityQuestions() {\n         return pwdResetRequiringSecurityQuestions;\n     }\n@@ -67,4 +73,8 @@ public void setPwdResetRequiringSecurityQuestions(final boolean pwdResetRequirin\n         this.pwdResetRequiringSecurityQuestions = pwdResetRequiringSecurityQuestions;\n     }\n \n+    public void setCaptchaEnabled(final boolean captchaEnabled) {\n+        this.captchaEnabled = captchaEnabled;\n+    }\n+\n }"},{"sha":"375bc21add5863e6191d82437034572e247c2731","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/UserTORequest.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -57,6 +57,8 @@ public class UserTORequest implements Serializable {\n \n     private List<String> auxClasses = new ArrayList<>();\n \n+    private String captcha;\n+\n     public UserTORequest() {\n     }\n \n@@ -156,6 +158,14 @@ public void setAuxClasses(final List<String> auxClasses) {\n         this.auxClasses = auxClasses;\n     }\n \n+    public String getCaptcha() {\n+        return captcha;\n+    }\n+\n+    public void setCaptcha(final String captcha) {\n+        this.captcha = captcha;\n+    }\n+\n     public UserTORequest key(final Long value) {\n         this.key = value;\n         return this;\n@@ -211,6 +221,11 @@ public UserTORequest auxClasses(final List<String> value) {\n         return this;\n     }\n \n+    public UserTORequest captcha(final String value) {\n+        this.captcha = value;\n+        return this;\n+    }\n+\n     @Override\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this);"},{"sha":"fbde3c67a10e66c3ebb5a3db59793d509c897f7f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/AbstractBaseResource.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FAbstractBaseResource.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -20,6 +20,7 @@\n \n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -48,9 +49,26 @@ protected final boolean isSelfRegistrationAllowed() {\n \n     protected final boolean xsrfCheck(final HttpServletRequest request) {\n         final String requestXSRFHeader = request.getHeader(SyncopeEnduserConstants.XSRF_HEADER_NAME);\n-        return StringUtils.isNotBlank(requestXSRFHeader)\n-                && SyncopeEnduserSession.get().getCookieUtils().getCookie(SyncopeEnduserConstants.XSRF_COOKIE).\n-                getValue().equals(requestXSRFHeader);\n+        if (SyncopeEnduserApplication.get().isXsrfEnabled()) {\n+            return StringUtils.isNotBlank(requestXSRFHeader)\n+                    && SyncopeEnduserSession.get().getCookieUtils().getCookie(SyncopeEnduserConstants.XSRF_COOKIE).\n+                    getValue().equals(requestXSRFHeader);\n+        } else {\n+            //if xsfr is disabled, we return always true\n+            return true;\n+        }\n     }\n \n+    protected final boolean captchaCheck(final String enteredCaptcha, final String currentCaptcha) {\n+        if (SyncopeEnduserApplication.get().isCaptchaEnabled()) {\n+            if (StringUtils.isBlank(currentCaptcha) || enteredCaptcha == null) {\n+                return false;\n+            } else {\n+                return enteredCaptcha.equals(currentCaptcha);\n+            }\n+        } else {\n+            //if captcha is disabled, we return always true\n+            return true;\n+        }\n+    }\n }"},{"sha":"e8749b8323195243e952968a05c6e3e23464c148","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/CaptchaValidateResource.java","status":"removed","additions":0,"deletions":91,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaValidateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaValidateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FCaptchaValidateResource.java?ref=1c3ed0b06b9eb658005cb4548f9c338bf42bcdbc","patch":"@@ -1,91 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.resources;\n-\n-import java.io.IOException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n-import org.apache.syncope.client.enduser.model.CaptchaRequest;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n-import org.apache.wicket.request.resource.AbstractResource;\n-import org.apache.wicket.request.resource.IResource;\n-import org.apache.wicket.util.io.IOUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class CaptchaValidateResource extends AbstractBaseResource {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(CaptchaValidateResource.class);\n-\n-    private static final long serialVersionUID = 6453101466981543020L;\n-\n-    @Override\n-    protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n-        LOG.debug(\"Validate captcha request\");\n-\n-        AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n-        try {\n-            HttpServletRequest currentRequest = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n-\n-            if (!xsrfCheck(currentRequest)) {\n-                LOG.error(\"XSRF TOKEN does not match\");\n-                response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n-                return response;\n-            }\n-\n-            final CaptchaRequest enteredCaptcha = POJOHelper.deserialize(IOUtils.toString(currentRequest.\n-                    getInputStream()), CaptchaRequest.class);\n-\n-            final String currentCaptcha = currentRequest.getSession().getAttribute(\n-                    SyncopeEnduserConstants.CAPTCHA_SESSION_KEY) == null\n-                            ? null\n-                            : currentRequest.getSession().getAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).\n-                            toString();\n-\n-            if (StringUtils.isBlank(currentCaptcha) || enteredCaptcha == null) {\n-                LOG.info(\"Could not validate captcha: current session captcha or inserted captcha are empty or null\");\n-                response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n-                        \"ErrorMessage{{ Could not validate captcha: current session captcha or entered captcha are \"\n-                        + \"empty or null }}\");\n-            } else {\n-                LOG.info(\"Is entered captcha equal to current session captcha? {}\", enteredCaptcha.getValue().equals(\n-                        currentCaptcha));\n-\n-                response.setWriteCallback(new WriteCallback() {\n-\n-                    @Override\n-                    public void writeData(final IResource.Attributes attributes) throws IOException {\n-                        attributes.getResponse().\n-                                write(String.valueOf(enteredCaptcha.getValue().equals(currentCaptcha)));\n-                    }\n-                });\n-                response.setStatusCode(Response.Status.OK.getStatusCode());\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"Could not validate captcha\", e);\n-            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder().append(\n-                    \"ErrorMessage{{ Could not validate captcha \")\n-                    .append(e.getMessage()).append(\" }}\").toString());\n-        }\n-        return response;\n-    }\n-}"},{"sha":"57c2836afca14982cc5b1b5efcd7dbbd3a2a4bb8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n import org.apache.syncope.client.enduser.model.UserTORequest;\n@@ -60,9 +61,15 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             }\n \n             String jsonString = request.getReader().readLine();\n-            \n+\n             final UserTORequest userTORequest = POJOHelper.deserialize(jsonString, UserTORequest.class);\n \n+            if (!captchaCheck(userTORequest.getCaptcha(), request.getSession().getAttribute(\n+                    SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).toString())) {\n+                LOG.error(\"Entered captcha is not matching\");\n+                throw new Exception(\"Entered captcha is not matching\");\n+            }\n+\n             if (isSelfRegistrationAllowed() && userTORequest != null) {\n                 LOG.debug(\"Received user self registration request for user: [{}]\", userTORequest.getUsername());\n                 LOG.trace(\"Received user self registration request is: [{}]\", userTORequest);"},{"sha":"28b7fcb93ea0f33c65653a4bc3fe2021521217d8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfPasswordReset.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -22,6 +22,7 @@\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -53,10 +54,19 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n                 return response;\n             }\n+\n             Map<String, String[]> parameters = request.getParameterMap();\n             if (parameters.get(\"username\") == null || parameters.get(\"username\").length == 0) {\n                 throw new Exception(\"A valid username should be provided\");\n             }\n+\n+            if (parameters.get(\"captcha\") == null || parameters.get(\"captcha\").length == 0 || !captchaCheck(parameters.\n+                    get(\"captcha\")[0], request.getSession().getAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).\n+                    toString())) {\n+                LOG.error(\"Entered captcha is not matching\");\n+                throw new Exception(\"Entered captcha is not matching\");\n+            }\n+\n             if (SyncopeEnduserSession.get().getSyncopeTO().isPwdResetRequiringSecurityQuestions()) {\n                 if (parameters.get(\"securityanswer\") == null || parameters.get(\"securityanswer\").length == 0) {\n                     throw new Exception(\"A correct security answer should be provided\");"},{"sha":"25c16dfff2dad9e8f4e4e0a574a6b58fb6d3a24c","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -283,13 +283,15 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $rootScope.pwdResetAllowed = false;\n       $rootScope.version = \"\";\n       $rootScope.pwdResetRequiringSecurityQuestions = false;\n+      $rootScope.captchaEnabled = false;\n       //info settings are initialized every time an user open the login page\n       InfoService.getInfo().then(\n               function (response) {\n                 $rootScope.pwdResetAllowed = response.pwdResetAllowed;\n                 $rootScope.selfRegAllowed = response.selfRegAllowed;\n                 $rootScope.version = response.version;\n                 $rootScope.pwdResetRequiringSecurityQuestions = response.pwdResetRequiringSecurityQuestions;\n+                $rootScope.captchaEnabled = response.captchaEnabled;\n               },\n               function (response) {\n                 console.log(\"Something went wrong while accessing info resource\", response);"},{"sha":"b4b80ba3af4852dda6332efe9a7390fccc9c63f2","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":46,"deletions":74,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -324,63 +324,48 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n     $scope.saveUser = function (user) {\n       console.log(\"Save user: \", user);\n-      // validate captcha and then save user\n-      CaptchaService.validate($scope.captchaInput).then(function (response) {\n-        if (!(response === 'true')) {\n-          $scope.showError(\"Captcha inserted is not valid, please digit the correct captcha\", $scope.notification);\n-          return;\n-        }\n+      // setting captcha value while saving user\n+      user.captcha = $scope.captchaInput.value;\n \n-        if ($scope.createMode) {\n+      if ($scope.createMode) {\n \n-          UserSelfService.create(user).then(function (response) {\n-            console.log(\"Created user: \", response);\n-            $scope.showSuccess(\"User \" + $scope.user.username + \" successfully created\", $scope.notification);\n-            $location.path('/self');\n-          }, function (response) {\n-            console.log(\"Error during user creation: \", response);\n-            var errorMessage;\n-            // parse error response \n-            if (response !== undefined) {\n-              errorMessage = response.split(\"ErrorMessage{{\")[1];\n-              errorMessage = errorMessage.split(\"}}\")[0];\n-            }\n-            $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n-          });\n+        UserSelfService.create(user).then(function (response) {\n+          console.log(\"Created user: \", response);\n+          $scope.showSuccess(\"User \" + $scope.user.username + \" successfully created\", $scope.notification);\n+          $location.path('/self');\n+        }, function (response) {\n+          console.log(\"Error during user creation: \", response);\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n+        });\n \n-        } else {\n-\n-          UserSelfService.update(user).then(function (response) {\n-            console.log(\"Updated user: \", response);\n-            AuthService.logout().then(function (response) {\n-              console.log(\"LOGOUT SUCCESS: \", response);\n-              $location.path('/self');\n-              $scope.showSuccess(\"User \" + $scope.user.username + \" successfully updated\", $scope.notification);\n-            }, function () {\n-              console.log(\"LOGOUT FAILED\");\n-            });\n-          }, function (response) {\n-            console.log(\"Error during user update: \", response);\n-            var errorMessage;\n-            // parse error response \n-            if (response !== undefined) {\n-              errorMessage = response.split(\"ErrorMessage{{\")[1];\n-              errorMessage = errorMessage.split(\"}}\")[0];\n-            }\n-            $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n+      } else {\n+\n+        UserSelfService.update(user).then(function (response) {\n+          console.log(\"Updated user: \", response);\n+          AuthService.logout().then(function (response) {\n+            console.log(\"LOGOUT SUCCESS: \", response);\n+            $location.path('/self');\n+            $scope.showSuccess(\"User \" + $scope.user.username + \" successfully updated\", $scope.notification);\n+          }, function () {\n+            console.log(\"LOGOUT FAILED\");\n           });\n-        }\n-      }, function (response) {\n-        console.log(\"Error during validate captcha \", response);\n-        var errorMessage;\n-        // parse error response \n-        if (response !== undefined) {\n-          errorMessage = response.split(\"ErrorMessage{{\")[1];\n-          errorMessage = errorMessage.split(\"}}\")[0];\n-        }\n-        $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n-        return;\n-      });\n+        }, function (response) {\n+          console.log(\"Error during user update: \", response);\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n+        });\n+      }\n     };\n     $scope.retrieveSecurityQuestion = function (user) {\n       if ($rootScope.pwdResetRequiringSecurityQuestions) {\n@@ -407,34 +392,21 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n     $scope.resetPassword = function (user) {\n       if (user && user.username) {\n         $scope.retrieveSecurityQuestion(user);\n-        CaptchaService.validate($scope.captchaInput).then(function (response) {\n-          if (!(response === 'true')) {\n-            $scope.showError(\"Captcha inserted is not valid, please digit the correct captcha\", $scope.notification);\n-            return;\n-          }\n-          UserSelfService.passwordReset(user).then(function (data) {\n-            $scope.showSuccess(data, $scope.notification);\n-            $location.path('/self');\n-          }, function (response) {\n-            var errorMessage;\n-            // parse error response \n-            if (response !== undefined) {\n-              errorMessage = response.split(\"ErrorMessage{{\")[1];\n-              errorMessage = errorMessage.split(\"}}\")[0];\n-              $scope.showError(\"An error occured during password reset: \" + errorMessage, $scope.notification);\n-              //we need to refresh captcha after a valid request\n-              $scope.$broadcast(\"refreshCaptcha\");\n-            }\n-          });\n+        // setting captcha value while saving user\n+        user.captcha = $scope.captchaInput.value;\n+        UserSelfService.passwordReset(user).then(function (data) {\n+          $scope.showSuccess(data, $scope.notification);\n+          $location.path('/self');\n         }, function (response) {\n           var errorMessage;\n           // parse error response \n           if (response !== undefined) {\n             errorMessage = response.split(\"ErrorMessage{{\")[1];\n             errorMessage = errorMessage.split(\"}}\")[0];\n+            $scope.showError(\"An error occured during password reset: \" + errorMessage, $scope.notification);\n+            //we need to refresh captcha after a valid request\n+            $scope.$broadcast(\"refreshCaptcha\");\n           }\n-          $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n-          return;\n         });\n       } else {\n         $scope.showError(\"You should use a valid and non-empty username\", $scope.notification);"},{"sha":"466d1d846f679e835f223ddcece86e20b63d220d","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/captcha.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fcaptcha.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fcaptcha.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fcaptcha.js?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -25,10 +25,11 @@ angular.module('self')\n             templateUrl: 'views/captcha.html',\n             scope: {\n               input: \"=\",\n+              captchaEnabled : '=enabled'\n             },\n             controller: function ($scope) {\n               $scope.captchaUrl = '';\n-              \n+                            \n               //initialize captcha\n               $scope.refreshCaptcha = function () {\n                 console.log(\"REFRESH CAPTCHA\")"},{"sha":"4bcd20efd3c3d1215b3e72a5a4e37167cbc2e2f2","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/captchaService.js","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FcaptchaService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FcaptchaService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FcaptchaService.js?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -35,18 +35,6 @@ angular.module('self')\n                       });\n             };\n \n-            captchaService.validate = function (captcha) {\n-              return $http\n-                      .post('/syncope-enduser/api/captcha/validate', captcha)\n-                      .then(function (response) {\n-                        return response.data;\n-                      }, function (response) {\n-                        console.log(\"Something went wrong during validation of captcha: , exit with status: \", captcha,\n-                                response.statusText);\n-                        return $q.reject(response.data || response.statusText);\n-                      });\n-            };\n-\n             return captchaService;\n \n           }]);"},{"sha":"cf2c15fd83af76732606fc4bde504a1335b127af","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/captcha.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fcaptcha.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fcaptcha.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fcaptcha.html?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -1,15 +1,15 @@\n-<div>\n+<div ng-show=\"{{captchaEnabled}}\">\n   <nav class=\"navbar\">\n     <div class=\"container-fluid\" style=\"text-align: center\">\n-      <div style=\"text-align:center\">\n+      <div style=\"text-align:center;\">\n         <img id=\"captchaImg\" alt=\"captcha\" ng-src=\"{{captchaUrl}}'\"/>\n-        <div style=\"margin-top: 5%\">\n+        <div style=\"margin-top: 5%; margin-bottom: 10px\">\n           <button id=\"refresh\" type=\"button\" class=\"btn btn-default btn-xs glyphicon glyphicon-refresh\" \n                   ng-click=\"refreshCaptcha()\" title=\"Refresh Captcha\"></button>\n           <a id=\"refresh\" class=\"btn btn-default btn-xs glyphicon glyphicon-question-sign\" title=\"What is?\" \n              href=\"https://it.wikipedia.org/wiki/CAPTCHA\"/>\n         </div>\n-        <input class=\"form-control\" style=\"margin-top: 5%\" type=\"text\" ng-model=\"input.value\"/>\n+        <input class=\"form-control\" style=\"margin:auto; max-width: 260px\" type=\"text\" ng-model=\"input.value\"/>\n       </div>\n       <div>\n         <span class=\"help-block\">Please enter the code displayed within the image.</span>"},{"sha":"c3fa05c0f2a783c8854c9bc48e1d381aeb2e5ea5","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/passwordreset.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fpasswordreset.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fpasswordreset.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fpasswordreset.html?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -60,7 +60,7 @@\n             <div id=\"attribute\" class=\"form-group row\">\n               <!--captcha-->\n               <div class=\"form-group row\">\n-                <captcha input=\"captchaInput\"></captcha>\n+                <captcha input=\"captchaInput\" enabled=\"captchaEnabled\"></captcha>\n               </div>\n               <button id=\"resetpassword\" type=\"submit\" class=\"btn btn-default pull-right\">Submit</button>\n               <div class=\"pull-left\">"},{"sha":"fba87fe6e37961980f5bf6b33a72581ac83fdf06","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-form-finish.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-form-finish.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-form-finish.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-form-finish.html?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -21,7 +21,7 @@\n <div id=\"attribute\" class=\"form-group row\">\n   <!--captcha-->\n   <div class=\"form-group row\">\n-    <captcha input=\"captchaInput\"></captcha>\n+    <captcha input=\"captchaInput\" enabled=\"captchaEnabled\"></captcha>\n   </div>\n   <button id=\"save\" type=\"submit\" class=\"btn btn-default pull-right\">Save</button>\n   <navigation-buttons ng-show=\"createMode\" next=\"none\" previous=\"create.resources\"></navigation-buttons>"},{"sha":"837f1e5cdee2b3bbe18b68be9d65a486a7ced266","filename":"client/enduser/src/main/resources/enduser.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -27,3 +27,6 @@ scheme=http\n host=localhost\n port=8080\n rootPath=/syncope/rest/\n+\n+captcha=true\n+xsrf=true"},{"sha":"e9484b1a0af74fae16dc4c0d8a5c43cd9654bf9a","filename":"fit/enduser-reference/src/main/resources/enduser.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d35181a18765b49a9fecc5cf18d5300a289c4b9/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d35181a18765b49a9fecc5cf18d5300a289c4b9/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=5d35181a18765b49a9fecc5cf18d5300a289c4b9","patch":"@@ -27,3 +27,6 @@ scheme=http\n host=localhost\n port=9080\n rootPath=/syncope/rest/\n+\n+captcha=true\n+xsrf=true"}]}