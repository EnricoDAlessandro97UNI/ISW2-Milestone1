{"sha":"e18903cbe1f3cbbb6a101c55d50c728460765142","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUxODkwM2NiZTFmM2NiYmI2YTEwMWM1NWQ1MGM3Mjg0NjA3NjUxNDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-28T10:24:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-28T10:24:47Z"},"message":"[SYNCOPE-303] Refactoring exception management, also by avoiding composite exceptions whenever possible\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1536304 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a0e0ce4ec4e28dfbf5cd4488a3134da3512d0435","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a0e0ce4ec4e28dfbf5cd4488a3134da3512d0435"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e18903cbe1f3cbbb6a101c55d50c728460765142","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e18903cbe1f3cbbb6a101c55d50c728460765142","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e18903cbe1f3cbbb6a101c55d50c728460765142","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e18903cbe1f3cbbb6a101c55d50c728460765142/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4ac671074064976e0806f2440945ff2a52a1147f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ac671074064976e0806f2440945ff2a52a1147f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ac671074064976e0806f2440945ff2a52a1147f"}],"stats":{"total":1834,"additions":858,"deletions":976},"files":[{"sha":"4c2771ad35ac3d7f80fdafb308116096f9efc35b","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientExceptionMapper.java","status":"modified","additions":28,"deletions":40,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.rest;\r\n \r\n import java.security.AccessControlException;\r\n-import java.util.ArrayList;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n@@ -29,7 +28,8 @@\n import javax.ws.rs.ext.Provider;\r\n import javax.xml.ws.WebServiceException;\r\n import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;\r\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\r\n+import org.apache.syncope.common.SyncopeConstants;\r\n+import org.apache.syncope.common.types.ClientExceptionType;\r\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\r\n import org.apache.syncope.common.validation.SyncopeClientException;\r\n import org.slf4j.Logger;\r\n@@ -48,73 +48,61 @@ public Response toResponse(final Exception exception) {\n \r\n     @Override\r\n     public Exception fromResponse(final Response response) {\r\n-        Exception ex = null;\r\n         final int statusCode = response.getStatus();\r\n+        Exception ex;\r\n \r\n-        // 1. Check for composite exception in HTTP header\r\n-        SyncopeClientCompositeException scce = checkCompositeException(response);\r\n+        // 1. Check for client (possibly composite) exception in HTTP header\r\n+        SyncopeClientCompositeException scce = checkSyncopeClientCompositeException(response);\r\n         if (scce != null) {\r\n-            ex = scce;\r\n-\r\n-            // TODO reduce SCCEE to really composite ones and use normal exception for others\r\n-            // } else if (statusCode == HttpStatus.SC_FORBIDDEN) {\r\n-            // ex = new UnauthorizedRoleException(-1L);\r\n-\r\n-            // 2. Map SC_UNAUTHORIZED\r\n-        } else if (statusCode == Response.Status.UNAUTHORIZED.getStatusCode()) {\r\n+            if (scce.getExceptions().size() == 1) {\r\n+                ex = scce.getExceptions().iterator().next();\r\n+            } else {\r\n+                ex = scce;\r\n+            }\r\n+        } // 2. Map SC_UNAUTHORIZED\r\n+        else if (statusCode == Response.Status.UNAUTHORIZED.getStatusCode()) {\r\n             ex = new AccessControlException(\"Remote unauthorized exception\");\r\n-\r\n-            // 3. Map SC_BAD_REQUEST\r\n-        } else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\r\n+        } // 3. Map SC_BAD_REQUEST\r\n+        else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\r\n             ex = new BadRequestException();\r\n-\r\n-        } else {\r\n-            // 4. All other codes are mapped to runtime exception with HTTP code information\r\n+        } // 4. All other codes are mapped to runtime exception with HTTP code information\r\n+        else {\r\n             ex = new WebServiceException(String.format(\"Remote exception with status code: %s\",\r\n                     Response.Status.fromStatusCode(statusCode).name()));\r\n         }\r\n         LOG.error(\"Exception thrown by REST methods: \" + ex.getMessage(), ex);\r\n         return ex;\r\n     }\r\n \r\n-    private SyncopeClientCompositeException checkCompositeException(final Response response) {\r\n-        final int statusCode = response.getStatus();\r\n-        List<Object> exTypesInHeaders = response.getHeaders().\r\n-                get(SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER);\r\n+    private SyncopeClientCompositeException checkSyncopeClientCompositeException(final Response response) {\r\n+        List<Object> exTypesInHeaders = response.getHeaders().get(SyncopeConstants.REST_EXCEPTION_TYPE_HEADER);\r\n         if (exTypesInHeaders == null) {\r\n-            LOG.debug(\"No \" + SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER + \" provided\");\r\n+            LOG.debug(\"No \" + SyncopeConstants.REST_EXCEPTION_TYPE_HEADER + \" provided\");\r\n             return null;\r\n         }\r\n \r\n-        final SyncopeClientCompositeException compException =\r\n-                new SyncopeClientCompositeException(statusCode);\r\n+        final SyncopeClientCompositeException compException = SyncopeClientException.buildComposite();\r\n \r\n         final Set<String> handledExceptions = new HashSet<String>();\r\n         for (Object exceptionTypeValue : exTypesInHeaders) {\r\n             final String exTypeAsString = (String) exceptionTypeValue;\r\n-            SyncopeClientExceptionType exceptionType = null;\r\n+            ClientExceptionType exceptionType = null;\r\n             try {\r\n-                exceptionType = SyncopeClientExceptionType.getFromHeaderValue(exTypeAsString);\r\n+                exceptionType = ClientExceptionType.fromHeaderValue(exTypeAsString);\r\n             } catch (IllegalArgumentException e) {\r\n-                LOG.error(\"Unexpected value of \" + SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER + \": \"\r\n+                LOG.error(\"Unexpected value of \" + SyncopeConstants.REST_EXCEPTION_TYPE_HEADER + \": \"\r\n                         + exTypeAsString, e);\r\n             }\r\n             if (exceptionType != null) {\r\n                 handledExceptions.add(exTypeAsString);\r\n \r\n-                final SyncopeClientException clientException = new SyncopeClientException();\r\n-                clientException.setType(exceptionType);\r\n+                final SyncopeClientException clientException = SyncopeClientException.build(exceptionType);\r\n+\r\n                 if (response.getHeaders().get(exceptionType.getElementHeaderName()) != null\r\n                         && !response.getHeaders().get(exceptionType.getElementHeaderName()).isEmpty()) {\r\n-                    // TODO update clientException to support list of objects\r\n-                    final List<Object> elObjectList = response.getHeaders().get(exceptionType.getElementHeaderName());\r\n-                    final List<String> elStringList = new ArrayList<String>();\r\n-                    for (Object elementObject : elObjectList) {\r\n-                        if (elementObject instanceof String) {\r\n-                            elStringList.add((String) elementObject);\r\n-                        }\r\n-                    }\r\n-                    clientException.setElements(elStringList);\r\n+\r\n+                    clientException.getElements().addAll(\r\n+                            response.getHeaders().get(exceptionType.getElementHeaderName()));\r\n                 }\r\n                 compException.addException(clientException);\r\n             }\r"},{"sha":"f82a581889ada3e506747653a5467768e9eb7dfb","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -34,15 +34,20 @@ public class SyncopeConstants {\n         \"yyyy-MM-dd'T'HH:mm:ssz\",\r\n         \"yyyy-MM-dd HH:mm:ss\",\r\n         \"yyyy-MM-dd HH:mm:ss.S\", // explicitly added to import date into MySql repository\r\n-        \"yyyy-MM-dd\"};\r\n+        \"yyyy-MM-dd\" };\r\n \r\n     public static final String DEFAULT_DATE_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\r\n \r\n     /**\r\n-     * This constant will be used to identify HTTP header key to look for object ID assigned to an object after its\r\n-     * creation. HTTP Response after PUT operation should contain this key with resource id as its value.\r\n+     * HTTP header key for object ID assigned to an object after its creation;\r\n+     * HTTP Response after PUT operation should contain this key with resource id as its value.\r\n      */\r\n-    public static final String REST_HEADER_ID = \"org.apache.syncope.resource.id\";\r\n+    public static final String REST_RESOURCE_ID_HEADER = \"org.apache.syncope.resource.id\";\r\n+\r\n+    /**\r\n+     * HTTP header key for exception type.\r\n+     */\r\n+    public static final String REST_EXCEPTION_TYPE_HEADER = \"Syncope.ExceptionType\";\r\n \r\n     /**\r\n      * This constant is not defined in javax.ws.rs.core.HttpHeaders.\r"},{"sha":"7b932507cf46e20ad8cc4ac9897fdc202992581f","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -0,0 +1,104 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.types;\r\n+\r\n+import javax.ws.rs.core.Response;\r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+\r\n+public enum ClientExceptionType {\r\n+\r\n+    AssociatedResources(Response.Status.BAD_REQUEST),\r\n+    Composite(Response.Status.BAD_REQUEST),\r\n+    DataIntegrityViolation(Response.Status.BAD_REQUEST),\r\n+    EntityExists(Response.Status.CONFLICT),\r\n+    GenericPersistence(Response.Status.BAD_REQUEST),\r\n+    InvalidLogger(Response.Status.BAD_REQUEST),\r\n+    InvalidConnInstance(Response.Status.BAD_REQUEST),\r\n+    InvalidConnIdConf(Response.Status.BAD_REQUEST),\r\n+    InvalidPasswordPolicy(Response.Status.BAD_REQUEST),\r\n+    InvalidAccountPolicy(Response.Status.BAD_REQUEST),\r\n+    InvalidSyncPolicy(Response.Status.BAD_REQUEST),\r\n+    InvalidSyncopeRole(Response.Status.BAD_REQUEST),\r\n+    InvalidReportExec(Response.Status.BAD_REQUEST),\r\n+    InvalidRoles(Response.Status.BAD_REQUEST),\r\n+    InvalidSchemaDefinition(Response.Status.BAD_REQUEST),\r\n+    InvalidSearchCondition(Response.Status.BAD_REQUEST),\r\n+    InvalidPropagationTaskExecReport(Response.Status.BAD_REQUEST),\r\n+    InvalidUSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidUDerSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidUVirSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidRSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidRDerSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidRVirSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidMSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidMDerSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidMVirSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidSchemaMapping(Response.Status.BAD_REQUEST),\r\n+    InvalidSyncopeConf(Response.Status.BAD_REQUEST),\r\n+    InvalidSyncopeUser(Response.Status.BAD_REQUEST),\r\n+    InvalidExternalResource(Response.Status.BAD_REQUEST),\r\n+    InvalidNotification(Response.Status.BAD_REQUEST),\r\n+    InvalidPropagationTask(Response.Status.BAD_REQUEST),\r\n+    InvalidSchedTask(Response.Status.BAD_REQUEST),\r\n+    InvalidSyncTask(Response.Status.BAD_REQUEST),\r\n+    InvalidValues(Response.Status.BAD_REQUEST),\r\n+    NotFound(Response.Status.NOT_FOUND),\r\n+    RejectedUserCreate(Response.Status.BAD_REQUEST),\r\n+    RequiredValuesMissing(Response.Status.BAD_REQUEST),\r\n+    RoleOwnership(Response.Status.BAD_REQUEST),\r\n+    Scheduling(Response.Status.BAD_REQUEST),\r\n+    UnauthorizedRole(Response.Status.UNAUTHORIZED),\r\n+    Unauthorized(Response.Status.UNAUTHORIZED),\r\n+    Unknown(Response.Status.BAD_REQUEST),\r\n+    Workflow(Response.Status.BAD_REQUEST);\r\n+\r\n+    private final Response.Status responseStatus;\r\n+\r\n+    private ClientExceptionType(final Response.Status responseStatus) {\r\n+        this.responseStatus = responseStatus;\r\n+    }\r\n+\r\n+    public static ClientExceptionType fromHeaderValue(final String exceptionTypeHeaderValue) {\r\n+        ClientExceptionType result = null;\r\n+        for (ClientExceptionType type : values()) {\r\n+            if (exceptionTypeHeaderValue.equals(type.getHeaderValue())) {\r\n+                result = type;\r\n+            }\r\n+        }\r\n+\r\n+        if (result == null) {\r\n+            throw new IllegalArgumentException(\"Unexpected header value: \" + exceptionTypeHeaderValue);\r\n+        }\r\n+\r\n+        return result;\r\n+    }\r\n+\r\n+    public String getHeaderValue() {\r\n+        return name();\r\n+    }\r\n+\r\n+    public String getElementHeaderName() {\r\n+        return getHeaderValue() + \".element\";\r\n+    }\r\n+\r\n+    public Response.Status getResponseStatus() {\r\n+        return responseStatus;\r\n+    }\r\n+\r\n+}\r"},{"sha":"1f1abdfb9aff34e9c46707dd766aab7fd1d51985","filename":"common/src/main/java/org/apache/syncope/common/types/SyncopeClientExceptionType.java","status":"removed","additions":0,"deletions":104,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ac671074064976e0806f2440945ff2a52a1147f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ac671074064976e0806f2440945ff2a52a1147f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeClientExceptionType.java?ref=4ac671074064976e0806f2440945ff2a52a1147f","patch":"@@ -1,104 +0,0 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.syncope.common.types;\r\n-\r\n-import javax.xml.bind.annotation.XmlEnum;\r\n-\r\n-@XmlEnum\r\n-public enum SyncopeClientExceptionType {\r\n-\r\n-    AssociatedResources(\"Syncope.AssociatedResources\", \"Syncope.AssociatedResources.name\"),\r\n-    Deadlock(\"Syncope.Deadlock\", \"\"),\r\n-    DataIntegrityViolation(\"Syncope.DataIntegrityViolation\", \"Syncope.DataIntegrityViolation.name\"),\r\n-    EntityExists(\"Syncope.EntityExists\", \"Syncope.EntityExists.name\"),\r\n-    GenericPersistence(\"Syncope.GenericPersistence\", \"Syncope.GenericPersistence.cause\"),\r\n-    InvalidLogger(\"Syncope.InvalidLogger\", \"Syncope.InvalidLogger.message\"),\r\n-    InvalidConnInstance(\"Syncope.InvalidConnInstance\", \"Syncope.InvalidConnInstance.message\"),\r\n-    InvalidConnIdConf(\"Syncope.InvalidConnIdConf\", \"Syncope.InvalidConnIdConf.message\"),\r\n-    InvalidPasswordPolicy(\"Syncope.InvalidPasswordPolicy\", \"Syncope.InvalidPasswordPolicy.reason\"),\r\n-    InvalidAccountPolicy(\"Syncope.InvalidAccountPolicy\", \"Syncope.InvalidAccountPolicy.reason\"),\r\n-    InvalidSyncPolicy(\"Syncope.InvalidSyncPolicy\", \"Syncope.InvalidSyncPolicy.reason\"),\r\n-    InvalidSyncopeRole(\"Syncope.InvalidSyncopeRole\", \"Syncope.InvalidSyncopeRole.reason\"),\r\n-    InvalidReportExec(\"Syncope.InvalidReportExec\", \"Syncope.InvalidReportExec.reason\"),\r\n-    InvalidRoles(\"Syncope.InvalidRoles\", \"Syncope.InvalidRoles.name\"),\r\n-    InvalidSchemaDefinition(\"Syncope.InvalidSchemaDefinition\", \"\"),\r\n-    InvalidSearchCondition(\"Syncope.InvalidSearchCondition\", \"\"),\r\n-    InvalidPropagationTaskExecReport(\r\n-    \"Syncope.InvalidPropagationTaskExecReport\",\r\n-    \"Syncope.InvalidPropagationTaskExecReport.element\"),\r\n-    InvalidUSchema(\"Syncope.InvalidUSchema\", \"Syncope.InvalidUSchema.name\"),\r\n-    InvalidUDerSchema(\"Syncope.InvalidUDerSchema\", \"Syncope.InvalidUDerSchema.name\"),\r\n-    InvalidUVirSchema(\"Syncope.InvalidUVirSchema\", \"Syncope.InvalidUVirSchema.name\"),\r\n-    InvalidRSchema(\"Syncope.InvalidRSchema\", \"Syncope.InvalidRSchema.name\"),\r\n-    InvalidRDerSchema(\"Syncope.InvalidRDerSchema\", \"Syncope.InvalidRDerSchema.name\"),\r\n-    InvalidRVirSchema(\"Syncope.InvalidRVirSchema\", \"Syncope.InvalidRVirSchema.name\"),\r\n-    InvalidMSchema(\"Syncope.InvalidMSchema\", \"Syncope.InvalidMSchema.name\"),\r\n-    InvalidMDerSchema(\"Syncope.InvalidMDerSchema\", \"Syncope.InvalidMDerSchema.name\"),\r\n-    InvalidMVirSchema(\"Syncope.InvalidMVirSchema\", \"Syncope.InvalidMVirSchema.name\"),\r\n-    InvalidSchemaMapping(\"Syncope.InvalidSchemaMapping\", \"Syncope.InvalidSchemaMapping.name\"),\r\n-    InvalidSyncopeConf(\"Syncope.InvalidSyncopeConf\", \"Syncope.InvalidSyncopeConf.name\"),\r\n-    InvalidSyncopeUser(\"Syncope.InvalidSyncopeUser\", \"Syncope.InvalidSyncopeUser.element\"),\r\n-    InvalidExternalResource(\"Syncope.InvalidExternalResource\", \"Syncope.InvalidExternalResource.element\"),\r\n-    InvalidNotification(\"Syncope.InvalidNotification\", \"Syncope.InvalidNotification.element\"),\r\n-    InvalidPropagationTask(\"Syncope.InvalidPropagationTask\", \"Syncope.InvalidPropagationTask.element\"),\r\n-    InvalidSchedTask(\"Syncope.InvalidSchedTask\", \"Syncope.InvalidSchedTask.element\"),\r\n-    InvalidSyncTask(\"Syncope.InvalidSyncTask\", \"Syncope.InvalidSyncTask.element\"),\r\n-    InvalidValues(\"Syncope.InvalidValues\", \"Syncope.InvalidValues.attributeName\"),\r\n-    NotFound(\"Syncope.NotFound\", \"Syncope.NotFound.entity\"),\r\n-    RejectedUserCreate(\"Syncope.RejectUserCreate\", \"Syncope.RejectUserCreate.userId\"),\r\n-    RequiredValuesMissing(\"Syncope.RequiredValuesMissing\", \"Syncope.RequiredValuesMissing.attributeName\"),\r\n-    RoleOwnership(\"Syncope.RoleOwnership\", \"Syncope.RoleOwnership.role\"),\r\n-    Scheduling(\"Syncope.Scheduling\", \"Syncope.Scheduling.message\"),\r\n-    UnauthorizedRole(\"Syncope.UnauthorizedRole\", \"Syncope.UnauthorizedRole.id\"),\r\n-    Unauthorized(\"Syncope.Unauthorized\", \"Syncope.Unauthorized\"),\r\n-    Unknown(\"Syncope.Unknown\", \"\"),\r\n-    Workflow(\"Syncope.Workflow\", \"Syncope.Workflow.message\");\r\n-\r\n-    private String headerValue;\r\n-\r\n-    private String elementHeaderName;\r\n-\r\n-    private SyncopeClientExceptionType(final String headerValue, final String elementHeaderName) {\r\n-        this.headerValue = headerValue;\r\n-        this.elementHeaderName = elementHeaderName;\r\n-    }\r\n-\r\n-    public static SyncopeClientExceptionType getFromHeaderValue(final String exceptionTypeHeaderValue) {\r\n-        SyncopeClientExceptionType result = null;\r\n-        for (SyncopeClientExceptionType syncopeClientExceptionType : values()) {\r\n-            if (exceptionTypeHeaderValue.equals(syncopeClientExceptionType.getHeaderValue())) {\r\n-                result = syncopeClientExceptionType;\r\n-            }\r\n-        }\r\n-\r\n-        if (result == null) {\r\n-            throw new IllegalArgumentException(\"Unexpected header value: \" + exceptionTypeHeaderValue);\r\n-        }\r\n-\r\n-        return result;\r\n-    }\r\n-\r\n-    public String getElementHeaderName() {\r\n-        return elementHeaderName;\r\n-    }\r\n-\r\n-    public String getHeaderValue() {\r\n-        return headerValue;\r\n-    }\r\n-}\r"},{"sha":"4546fb6a87596dfa2fc0b83abc9897b04e5f629b","filename":"common/src/main/java/org/apache/syncope/common/validation/SyncopeClientCompositeException.java","status":"modified","additions":9,"deletions":22,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeException.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,38 +21,27 @@\n import java.util.HashSet;\r\n import java.util.Iterator;\r\n import java.util.Set;\r\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\r\n+import org.apache.syncope.common.types.ClientExceptionType;\r\n \r\n-public class SyncopeClientCompositeException extends RuntimeException {\r\n+public class SyncopeClientCompositeException extends SyncopeClientException {\r\n \r\n     private static final long serialVersionUID = 7882118041134372129L;\r\n \r\n-    public static final String EXCEPTION_TYPE_HEADER = \"ExceptionType\";\r\n+    private final Set<SyncopeClientException> exceptions = new HashSet<SyncopeClientException>();\r\n \r\n-    private final int statusCode;\r\n-\r\n-    private final Set<SyncopeClientException> exceptions;\r\n-\r\n-    public SyncopeClientCompositeException(final int statusCode) {\r\n-        super();\r\n-\r\n-        this.statusCode = statusCode;\r\n-        exceptions = new HashSet<SyncopeClientException>();\r\n-    }\r\n-\r\n-    public int getStatusCode() {\r\n-        return statusCode;\r\n+    protected SyncopeClientCompositeException() {\r\n+        super(ClientExceptionType.Composite);\r\n     }\r\n \r\n     public boolean hasExceptions() {\r\n         return !exceptions.isEmpty();\r\n     }\r\n \r\n-    public boolean hasException(final SyncopeClientExceptionType exceptionType) {\r\n+    public boolean hasException(final ClientExceptionType exceptionType) {\r\n         return getException(exceptionType) != null;\r\n     }\r\n \r\n-    public SyncopeClientException getException(final SyncopeClientExceptionType exceptionType) {\r\n+    public SyncopeClientException getException(final ClientExceptionType exceptionType) {\r\n         boolean found = false;\r\n         SyncopeClientException syncopeClientException = null;\r\n         for (Iterator<SyncopeClientException> itor = exceptions.iterator(); itor.hasNext() && !found;) {\r\n@@ -74,7 +63,7 @@ public Set<SyncopeClientException> getExceptions() {\n     public boolean addException(final SyncopeClientException exception) {\r\n         if (exception.getType() == null) {\r\n             throw new IllegalArgumentException(exception + \" does not have the right \"\r\n-                    + SyncopeClientExceptionType.class.getName() + \" set\");\r\n+                    + ClientExceptionType.class.getName() + \" set\");\r\n         }\r\n \r\n         return exceptions.add(exception);\r\n@@ -89,9 +78,7 @@ public String getMessage() {\n         while (iter.hasNext()) {\r\n             SyncopeClientException e = iter.next();\r\n             message.append(\"[\");\r\n-            message.append(e.getType());\r\n-            message.append(\" \");\r\n-            message.append(e.getElements());\r\n+            message.append(e.getMessage());\r\n             message.append(\"]\");\r\n             if (iter.hasNext()) {\r\n                 message.append(\", \");\r"},{"sha":"c1858a03fe09510c7a2a36b0e755d498f83ebd49","filename":"common/src/main/java/org/apache/syncope/common/validation/SyncopeClientException.java","status":"modified","additions":48,"deletions":26,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -18,58 +18,80 @@\n  */\r\n package org.apache.syncope.common.validation;\r\n \r\n-import java.util.HashSet;\r\n+import java.util.ArrayList;\r\n import java.util.List;\r\n-import java.util.Set;\r\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\r\n+import org.apache.syncope.common.types.ClientExceptionType;\r\n \r\n-public class SyncopeClientException extends Exception {\r\n+public class SyncopeClientException extends RuntimeException {\r\n \r\n     private static final long serialVersionUID = 3380920886511913475L;\r\n \r\n-    private SyncopeClientExceptionType type;\r\n+    private ClientExceptionType type;\r\n \r\n-    private Set<String> elements;\r\n+    private final List<Object> elements = new ArrayList<Object>();\r\n \r\n-    public SyncopeClientException() {\r\n-        super();\r\n-        elements = new HashSet<String>();\r\n+    public static SyncopeClientException build(final ClientExceptionType type) {\r\n+        if (type == ClientExceptionType.Composite) {\r\n+            throw new IllegalArgumentException(\"Composite exceptions must be obtained via buildComposite()\");\r\n+        }\r\n+        return new SyncopeClientException(type);\r\n+    }\r\n+\r\n+    public static SyncopeClientCompositeException buildComposite() {\r\n+        return new SyncopeClientCompositeException();\r\n     }\r\n \r\n-    public SyncopeClientException(final SyncopeClientExceptionType type) {\r\n-        this();\r\n+    protected SyncopeClientException(final ClientExceptionType type) {\r\n+        super();\r\n         setType(type);\r\n     }\r\n \r\n-    public SyncopeClientExceptionType getType() {\r\n-        return type;\r\n+    public boolean isComposite() {\r\n+        return getType() == ClientExceptionType.Composite;\r\n     }\r\n \r\n-    public final void setType(final SyncopeClientExceptionType type) {\r\n-        this.type = type;\r\n+    public SyncopeClientCompositeException asComposite() {\r\n+        if (!isComposite()) {\r\n+            throw new IllegalArgumentException(\"This is not a composite exception\");\r\n+        }\r\n+\r\n+        return (SyncopeClientCompositeException) this;\r\n     }\r\n \r\n-    public boolean addElement(final String element) {\r\n-        return elements.add(element);\r\n+    public ClientExceptionType getType() {\r\n+        return type;\r\n     }\r\n \r\n-    public boolean removeElement(final String element) {\r\n-        return elements.remove(element);\r\n+    public final void setType(final ClientExceptionType type) {\r\n+        this.type = type;\r\n     }\r\n \r\n-    public Set<String> getElements() {\r\n+    public List<Object> getElements() {\r\n         return elements;\r\n     }\r\n \r\n-    public void setElements(final Set<String> elements) {\r\n-        this.elements = elements;\r\n+    public boolean isEmpty() {\r\n+        return elements.isEmpty();\r\n     }\r\n \r\n-    public void setElements(final List<String> elements) {\r\n-        this.elements.addAll(elements);\r\n+    public int size() {\r\n+        return elements.size();\r\n     }\r\n \r\n-    public boolean isEmpty() {\r\n-        return elements.isEmpty();\r\n+    @Override\r\n+    public String getMessage() {\r\n+        StringBuilder message = new StringBuilder();\r\n+\r\n+        message.append(getType());\r\n+        message.append(\" \");\r\n+        message.append(getElements());\r\n+\r\n+        return message.toString();\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getLocalizedMessage() {\r\n+        return getMessage();\r\n     }\r\n+\r\n }\r"},{"sha":"9b11537093db27b1e182c44086316fcf4116df57","filename":"console/src/main/java/org/apache/syncope/console/SyncopeRequestCycleListener.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,7 +21,7 @@\n import java.security.AccessControlException;\n import javax.ws.rs.BadRequestException;\n import javax.xml.ws.WebServiceException;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.pages.ErrorPage;\n import org.apache.wicket.Page;\n import org.apache.wicket.authorization.UnauthorizedInstantiationException;\n@@ -68,7 +68,7 @@ public IRequestHandler onException(final RequestCycle cycle, final Exception e)\n \n             errorPage = new ErrorPage(errorParameters);\n         } else if (e.getCause() instanceof BadRequestException || e.getCause() instanceof WebServiceException\n-                || e.getCause() instanceof SyncopeClientCompositeException) {\n+                || e.getCause() instanceof SyncopeClientException) {\n \n             errorParameters.add(\"errorMessage\", new StringResourceModel(\"restClientException\", null).getString());\n "},{"sha":"246dbf3ba66e540de693081462652509d678c655","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractSchedTaskModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.common.to.SchedTaskTO;\n import org.apache.syncope.common.to.SyncTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.DateFormatROModel;\n import org.apache.syncope.console.markup.html.CrontabContainer;\n@@ -103,9 +103,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     ((BasePage) pageRef.getPage()).setModalResult(true);\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n+                } catch (SyncopeClientException e) {\n                     LOG.error(\"While creating or updating task\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"2b75e30bcc13f16330f9c40ed4cb798468de805d","filename":"console/src/main/java/org/apache/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -29,7 +29,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.MapChoiceRenderer;\n import org.apache.syncope.console.markup.html.list.AltListView;\n@@ -231,8 +231,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     ((Todo) pageRef.getPage()).setModalResult(true);\n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     LOG.error(\"While submitting form {}\", formTO, e);\n                     target.add(feedbackPanel);\n                 }"},{"sha":"a89661a1c61e849f276bad5a8579d17922753797","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.LoggerLevel;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.HttpResourceStream;\n import org.apache.syncope.console.commons.PreferenceManager;\n@@ -166,8 +166,8 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                 try {\n                     wfRestClient.updateDefinition(workflowDef);\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n-                } catch (SyncopeClientCompositeException scee) {\n-                    error(getString(Constants.ERROR) + \":\" + scee.getMessage());\n+                } catch (SyncopeClientException scee) {\n+                    error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                 }\n                 target.add(feedbackPanel);\n             }\n@@ -266,7 +266,7 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             confRestClient.deleteConfiguration(configurationTO.getKey());\n-                        } catch (SyncopeClientCompositeException e) {\n+                        } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting a conf key\", e);\n                             error(e.getMessage());\n                             return;\n@@ -435,7 +435,7 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             notificationRestClient.deleteNotification(notificationTO.getId());\n-                        } catch (SyncopeClientCompositeException e) {\n+                        } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting a notification\", e);\n                             error(e.getMessage());\n                             return;\n@@ -659,7 +659,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         }\n \n                         info(getString(Constants.OPERATION_SUCCEEDED));\n-                    } catch (SyncopeClientCompositeException e) {\n+                    } catch (SyncopeClientException e) {\n                         info(getString(Constants.OPERATION_ERROR));\n                     }\n "},{"sha":"531cd49e6a333e364211e786b45045b213767447","filename":"console/src/main/java/org/apache/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.console.pages;\n \n import org.apache.syncope.common.to.ConfigurationTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.rest.ConfigurationRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.wicket.PageReference;\n@@ -86,7 +86,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     callerPage.setModalResult(true);\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n+                } catch (SyncopeClientException e) {\n                     if (createFlag) {\n                         error(getString(\"error_insert\"));\n                     } else {"},{"sha":"c93e18dd9067a54bc85fdda5716b68d8077d2a33","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.ConnectorCapability;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.markup.html.list.AltListView;\n import org.apache.syncope.console.rest.ConnectorRestClient;\n@@ -422,8 +422,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     ((Resources) pageRef.getPage()).setModalResult(true);\n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                     ((Resources) pageRef.getPage()).setModalResult(false);\n                     LOG.error(\"While creating or updating connector {}\", conn, e);"},{"sha":"050bca9b20de32114a163292693ed073d2de44a5","filename":"console/src/main/java/org/apache/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.common.AbstractBaseBean;\n import org.apache.syncope.common.to.DerSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -99,8 +99,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                     }\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"4c82a7694bf6b3976157b52ce2d072be3b367303","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.to.EntitlementTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n@@ -204,7 +204,7 @@ private boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {\n             result = SyncopeSession.get().getService(UserRequestService.class).isCreateAllowed();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While seeking if self registration is allowed\", e);\n         }\n "},{"sha":"4ed871d4a918c4a4dc08174a739fd8b41e71f420","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.TraceLevel;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.panels.UserSearchPanel;\n import org.apache.syncope.console.rest.NotificationRestClient;\n@@ -224,8 +224,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     callerPage.setModalResult(true);\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException scee) {\n-                    error(getString(Constants.ERROR) + \":\" + scee.getMessage());\n+                } catch (SyncopeClientException scee) {\n+                    error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"4649b42133106049cc5eabd0f1b5bb1e8f358332","filename":"console/src/main/java/org/apache/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -121,7 +121,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 } catch (Exception e) {\n                     LOG.error(\"While creating policy\", e);\n \n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(getPage().get(Constants.FEEDBACK));\n                 }\n             }"},{"sha":"941041bf4c579b471260f94dec6bc5a4bb6de838","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -127,7 +127,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     bulkAssociationAction(target, BulkAssociationAction.Type.UNLINK, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unlinkink resources\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }\n@@ -143,7 +143,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     bulkAssociationAction(target, BulkAssociationAction.Type.DEPROVISION, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error de-provisioning user\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }\n@@ -159,7 +159,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     bulkAssociationAction(target, BulkAssociationAction.Type.UNASSIGN, table, columns);\n                 } catch (Exception e) {\n                     LOG.error(\"Error unassigning resources\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"bf137acd7cfa15d5afc15da5d0c117232c2b2bf5","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.common.to.ReportTO;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n import org.apache.syncope.common.types.ReportExecStatus;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.DateFormatROModel;\n import org.apache.syncope.console.commons.HttpResourceStream;\n@@ -147,9 +147,9 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                     ((BasePage) callerPageRef.getPage()).setModalResult(true);\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n+                } catch (SyncopeClientException e) {\n                     LOG.error(\"While creating or updating report\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }\n@@ -507,7 +507,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             reportTO.getExecutions().remove(taskExecutionTO);\n \n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n "},{"sha":"8d00504e6e21c61e7ffe4588df8d28fc43723b39","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditLoggerName;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n@@ -173,7 +173,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             reportRestClient.startExecution(reportTO.getId());\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -191,7 +191,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             reportRestClient.delete(reportTO.getId());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(reportContainer);"},{"sha":"b52dfdb9f8b3cf8c7d114ef9b5cc19853bfc9535","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n@@ -320,8 +320,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             resourceRestClient.delete(resourceTO.getName());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException e) {\n-                            error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        } catch (SyncopeClientException e) {\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n \n                             LOG.error(\"While deleting resource \" + resourceTO.getName(), e);\n                         }\n@@ -475,8 +475,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             connectorRestClient.delete(connectorTO.getId());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException e) {\n-                            error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        } catch (SyncopeClientException e) {\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n \n                             LOG.error(\"While deleting connector \" + connectorTO.getId(), e);\n                         }"},{"sha":"8a66a6991362c11e42feaf5323608393abb40b37","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -109,7 +109,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     closeAction(target, form);\n                 } catch (Exception e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"3bf70980125984b382cf05dfeedf3c8f8a6cf280","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -252,8 +252,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     }\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"7a6fda36b3f002b74339893a92e9f8a346c4d6ef","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -135,7 +135,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error enabling resources\", e);\n-                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n@@ -158,7 +158,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error disabling resources\", e);\n-                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n@@ -184,7 +184,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error unlinkink resources\", e);\n-                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n@@ -210,7 +210,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error de-provisioning user\", e);\n-                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n@@ -236,7 +236,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         window.close(target);\n                     } catch (Exception e) {\n                         LOG.error(\"Error unassigning resources\", e);\n-                        error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }"},{"sha":"b6c2095c23fa33d5e0fb0579fb783935d2ca721f","filename":"console/src/main/java/org/apache/syncope/console/pages/TaskModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.common.to.SyncTaskTO;\n import org.apache.syncope.common.to.TaskExecTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n@@ -150,7 +150,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             taskTO.getExecutions().remove(taskExecutionTO);\n \n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n "},{"sha":"b11676e9d15ec5ca7536b6fdb712522554049c5c","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.UserRequestType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.SyncopeSession;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n@@ -144,8 +144,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             approvalRestClient.claimForm(formTO.getTaskId());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scee) {\n-                            error(getString(Constants.ERROR) + \":\" + scee.getMessage());\n+                        } catch (SyncopeClientException scee) {\n+                            error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                         }\n                         target.add(feedbackPanel);\n                         target.add(approvalContainer);\n@@ -259,8 +259,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             userRequestRestClient.claim(model.getObject().getId());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scee) {\n-                            error(getString(Constants.ERROR) + \":\" + scee.getMessage());\n+                        } catch (SyncopeClientException scee) {\n+                            error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                         }\n                         target.add(feedbackPanel);\n                         target.add(userRequestContainer);\n@@ -299,7 +299,7 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             userRequestRestClient.executeDelete(model.getObject().getId());\n-                        } catch (SyncopeClientCompositeException e) {\n+                        } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting an user\", e);\n                             error(e.getMessage());\n                             return;\n@@ -323,7 +323,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             userRequestRestClient.delete(request.getId());\n-                        } catch (SyncopeClientCompositeException e) {\n+                        } catch (SyncopeClientException e) {\n                             LOG.error(\"While deleting an user request\", e);\n                             error(e.getMessage());\n                             return;"},{"sha":"e74a55f1aeb4a25a6449591ca072921037c3eb01","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -194,7 +194,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     closeAction(target, form);\n                 } catch (Exception e) {\n                     LOG.error(\"While creating or updating user\", e);\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"2482aae55e164969d5993d3725a459503df0ade4","filename":"console/src/main/java/org/apache/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.common.AbstractBaseBean;\n import org.apache.syncope.common.to.VirSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -86,8 +86,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                     }\n \n                     window.close(target);\n-                } catch (SyncopeClientCompositeException e) {\n-                    error(getString(Constants.ERROR) + \":\" + e.getMessage());\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                     target.add(feedbackPanel);\n                 }\n             }"},{"sha":"e1aa3aa220dd9f82b16c36b98082628ff4726fdb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.to.NotificationTaskTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.NotificationTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n@@ -131,7 +131,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -149,7 +149,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), NotificationTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);"},{"sha":"4a353704884345310defcbb47cd1d6c6ee30dc98","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.common.to.AbstractPolicyTO;\n import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.types.PolicyType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n@@ -182,7 +182,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             policyRestClient.delete(accountPolicyTO.getId(), accountPolicyTO.getClass());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n \n-                        } catch (SyncopeClientCompositeException e) {\n+                        } catch (SyncopeClientException e) {\n                             error(getString(Constants.OPERATION_ERROR));\n \n                             LOG.error(\"While deleting resource {}({})\", new Object[]{accountPolicyTO.getId(),"},{"sha":"af1481c6f359dbcfe849b6de6ef494adb7d88502","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.to.PropagationTaskTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.PropagationTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n@@ -152,7 +152,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -170,7 +170,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), PropagationTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);"},{"sha":"95156eacd1f662f7622bef0fbf0c74d5c72e0476","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.ResultStatusModalPage;\n import org.apache.syncope.console.pages.RoleModalPage;\n@@ -150,7 +150,7 @@ public Page createPage() {\n                             });\n \n                             editmodal.show(target);\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n                             target.add(feedbackPanel);\n                         }"},{"sha":"086b9bdaeb366e1d235048b9a2d76a76805ee66e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSummaryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -20,7 +20,7 @@\n \n import java.io.Serializable;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n import org.apache.wicket.PageReference;\n@@ -95,7 +95,7 @@ private RoleSummaryPanel(final Builder builder) {\n         } else {\n             try {\n                 this.selectedNode = restClient.read(builder.selectedNodeId);\n-            } catch (SyncopeClientCompositeException e) {\n+            } catch (SyncopeClientException e) {\n                 LOG.error(\"Could not read {}\", builder.selectedNodeId, e);\n                 this.selectedNode = null;\n                 builder.selectedNodeId = null;"},{"sha":"22b248e683de19dd5c1a73559d0d178be4222038","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.to.SchedTaskTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.SchedTaskModalPage;\n import org.apache.syncope.console.pages.Tasks;\n@@ -141,7 +141,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -159,7 +159,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), true);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -177,7 +177,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), SchedTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);"},{"sha":"0fbaac8ec8ca06ef6771e842d304dacea50e52f4","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.to.SyncTaskTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.RoleTemplateModalPage;\n import org.apache.syncope.console.pages.SyncTaskModalPage;\n@@ -185,7 +185,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -203,7 +203,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.startExecution(taskTO.getId(), true);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n \n@@ -221,7 +221,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         try {\n                             restClient.delete(taskTO.getId(), SyncTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.add(container);"},{"sha":"6946a0f99f9f600903f634b61f3156b344dfc9a8","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.DisplayAttributesModalPage;\n import org.apache.syncope.console.pages.EditUserModalPage;\n@@ -227,7 +227,7 @@ public Page createPage() {\n                             });\n \n                             editmodal.show(target);\n-                        } catch (SyncopeClientCompositeException scce) {\n+                        } catch (SyncopeClientException scce) {\n                             error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n                             target.add(feedbackPanel);\n                         }"},{"sha":"d2d0bbe25c1d80d4384d590a4f7cc7ed7cee5b04","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.util.BeanUtils;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.SyncopeSession;\n import org.springframework.stereotype.Component;\n \n@@ -73,7 +73,7 @@ public ConnInstanceTO read(final Long connectorInstanceId) {\n \n         try {\n             connectorTO = getService(ConnectorService.class).read(connectorInstanceId);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a connector\", e);\n         }\n \n@@ -97,7 +97,7 @@ public List<ConnBundleTO> getAllBundles() {\n \n         try {\n             bundles = getService(ConnectorService.class).getBundles(SyncopeSession.get().getLocale().toString());\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting connector bundles\", e);\n         }\n \n@@ -115,7 +115,7 @@ public List<ConnConfProperty> getConnectorProperties(final Long connectorId) {\n \n         try {\n             properties = getService(ConnectorService.class).getConfigurationProperties(connectorId);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting connector configuration properties\", e);\n         }\n "},{"sha":"e97410193e21e9f591596815da8183a84222859f","filename":"console/src/main/java/org/apache/syncope/console/rest/ReportRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.common.types.ReportletConfClasses;\n import org.apache.syncope.common.to.ReportTO;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -37,7 +37,7 @@ public List<String> getReportletConfClasses() {\n         try {\n             ReportletConfClasses reportletConfClasses = getService(ReportService.class).getReportletConfClasses();\n             return reportletConfClasses.getConfClasses();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting available reportlet classes\", e);\n             return new ArrayList<String>();\n         }"},{"sha":"f1877543d7844d7c415f55815643ac2f3c687fad","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -46,7 +46,7 @@ public List<String> getPropagationActionsClasses() {\n         try {\n             Set<PropagationActionClassTO> response = getService(ResourceService.class).getPropagationActionsClasses();\n             actions = CollectionWrapper.unwrapPropagationActionClasses(response);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all propagation actions classes\", e);\n         }\n         return actions;\n@@ -57,7 +57,7 @@ public List<ResourceTO> getAllResources() {\n \n         try {\n             resources = getService(ResourceService.class).list();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading all resources\", e);\n         }\n \n@@ -73,7 +73,7 @@ public ResourceTO read(final String name) {\n \n         try {\n             resourceTO = getService(ResourceService.class).read(name);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a resource\", e);\n         }\n         return resourceTO;"},{"sha":"a655a5b59edce0798cdf60ec9766d9e1f037d28a","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -48,7 +48,7 @@ public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrTy\n \n         try {\n             schemas = getService(SchemaService.class).list(attrType, schemaType);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all schemas for {} and {}\", attrType, schemaType, e);\n         }\n \n@@ -65,7 +65,7 @@ public List<SchemaTO> getSchemas(final AttributableType type) {\n \n         try {\n             schemas = getService(SchemaService.class).list(type, SchemaType.NORMAL);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all schemas\", e);\n         }\n \n@@ -80,7 +80,7 @@ public List<String> getSchemaNames(final AttributableType attrType, final Schema\n             for (AbstractSchemaTO schemaTO : schemas) {\n                 schemaNames.add(schemaTO.getName());\n             }\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user schema names\", e);\n         }\n \n@@ -100,7 +100,7 @@ public List<String> getSchemaNames(final AttributableType type) {\n             for (SchemaTO schemaTO : schemas) {\n                 schemaNames.add(schemaTO.getName());\n             }\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user schema names\", e);\n         }\n \n@@ -118,7 +118,7 @@ public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n \n         try {\n             userDerSchemas = getService(SchemaService.class).list(type, SchemaType.DERIVED);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n \n@@ -139,7 +139,7 @@ public List<String> getDerSchemaNames(final AttributableType type) {\n             for (DerSchemaTO schemaTO : userDerSchemas) {\n                 userDerSchemasNames.add(schemaTO.getName());\n             }\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n@@ -157,7 +157,7 @@ public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n \n         try {\n             userVirSchemas = getService(SchemaService.class).list(type, SchemaType.VIRTUAL);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n \n@@ -178,7 +178,7 @@ public List<String> getVirSchemaNames(final AttributableType type) {\n             for (VirSchemaTO schemaTO : userVirSchemas) {\n                 userVirSchemasNames.add(schemaTO.getName());\n             }\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n@@ -205,7 +205,7 @@ public SchemaTO readSchema(final AttributableType type, final String name) {\n \n         try {\n             schema = getService(SchemaService.class).read(type, SchemaType.NORMAL, name);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a user schema\", e);\n         }\n         return schema;\n@@ -260,7 +260,7 @@ public DerSchemaTO readDerSchema(final AttributableType type, final String name)\n         DerSchemaTO derivedSchemaTO = null;\n         try {\n             derivedSchemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a derived user schema\", e);\n         }\n         return derivedSchemaTO;\n@@ -316,7 +316,7 @@ public List<String> getAllValidatorClasses() {\n             List<ValidatorTO> validators = new ArrayList<ValidatorTO>(getService(ConfigurationService.class)\n                     .getValidators());\n             response = CollectionWrapper.unwrapValidator(validators);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all validators\", e);\n         }\n         return response;"},{"sha":"a86a55015d6cd458f9c6a2e1f21cd5484045f0d8","filename":"console/src/main/java/org/apache/syncope/console/rest/TaskRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.to.AbstractTaskTO;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -53,7 +53,7 @@ public List<String> getJobClasses() {\n \n         try {\n             jobClasses = new ArrayList<JobClassTO>(getService(TaskService.class).getJobClasses());\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all job classes\", e);\n         }\n         return CollectionWrapper.unwrapJobClasses(jobClasses);\n@@ -64,7 +64,7 @@ public List<String> getSyncActionsClasses() {\n \n         try {\n             actions = new ArrayList<SyncActionClassTO>(getService(TaskService.class).getSyncActionsClasses());\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all sync actions classes\", e);\n         }\n         return CollectionWrapper.unwrapSyncActionClasses(actions);"},{"sha":"818e5f58d29e3ebd67bd181816097dfc2dab50b5","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.StatusBean;\n import org.apache.syncope.console.commons.StatusUtils;\n import org.springframework.stereotype.Component;\n@@ -78,7 +78,7 @@ public UserTO read(final Long id) {\n         UserTO userTO = null;\n         try {\n             userTO = getService(UserService.class).read(id);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a user\", e);\n         }\n         return userTO;\n@@ -88,7 +88,7 @@ public UserTO read(final String username) {\n         UserTO userTO = null;\n         try {\n             userTO = getService(UserService.class).read(username);\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"While reading a user\", e);\n         }\n         return userTO;"},{"sha":"fb04901bcd12279530feff509fd482937610d04b","filename":"console/src/main/java/org/apache/syncope/console/rest/WorkflowRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,19 +21,19 @@\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.springframework.stereotype.Component;\n \n @Component\n public class WorkflowRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 5049285686167071017L;\n \n-    public WorkflowDefinitionTO getDefinition() throws SyncopeClientCompositeException {\n+    public WorkflowDefinitionTO getDefinition() throws SyncopeClientException {\n         return getService(WorkflowService.class).getDefinition(AttributableType.USER);\n     }\n \n-    public void updateDefinition(final WorkflowDefinitionTO workflowDef) throws SyncopeClientCompositeException {\n+    public void updateDefinition(final WorkflowDefinitionTO workflowDef) throws SyncopeClientException {\n         getService(WorkflowService.class).updateDefinition(AttributableType.USER, workflowDef);\n     }\n }"},{"sha":"7c2e0e93cbee24b12db78906150bac84be251287","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.console.wicket.markup.html.tree;\n \n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.ResultStatusModalPage;\n@@ -140,7 +140,7 @@ public Page createPage() {\n                         });\n \n                         window.show(target);\n-                    } catch (SyncopeClientCompositeException scce) {\n+                    } catch (SyncopeClientException scce) {\n                         error(getString(Constants.OPERATION_ERROR) + \": \" + scce.getMessage());\n                         target.add(((Roles) pageRef.getPage()).getFeedbackPanel());\n                     }"},{"sha":"853ad9243a63488c38c8913f95c001b4129e4481","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -39,6 +39,8 @@ public interface RoleDAO extends AttributableDAO {\n \n     List<SyncopeRole> findOwned(SyncopeUser owner);\n \n+    List<SyncopeRole> findOwned(SyncopeRole owner);\n+\n     List<SyncopeRole> findByEntitlement(final Entitlement entitlement);\n \n     List<SyncopeRole> findAncestors(SyncopeRole role);"},{"sha":"bbaa665793b381878f560bcb6aa6730ff4419230","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":26,"deletions":10,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -103,8 +103,8 @@ public SyncopeRole find(final Long id) {\n \n     @Override\n     public List<SyncopeRole> find(final String name) {\n-        TypedQuery<SyncopeRole> query =\n-                entityManager.createQuery(\"SELECT e FROM SyncopeRole e WHERE e.name = :name\", SyncopeRole.class);\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e WHERE e.name = :name\",\n+                SyncopeRole.class);\n         query.setParameter(\"name\", name);\n \n         return query.getResultList();\n@@ -163,10 +163,26 @@ public List<SyncopeRole> findOwned(final SyncopeUser owner) {\n         return result;\n     }\n \n+    @Override\n+    public List<SyncopeRole> findOwned(final SyncopeRole owner) {\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(SyncopeRole.class.getSimpleName()).\n+                append(\" e WHERE e.roleOwner=:owner \");\n+\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(queryString.toString(), SyncopeRole.class);\n+        query.setParameter(\"owner\", owner);\n+\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n+        for (SyncopeRole role : query.getResultList()) {\n+            findSameOwnerDescendants(result, role);\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n-        TypedQuery<SyncopeRole> query =\n-                entityManager.createQuery(\"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeRole.class.getSimpleName()\n+                + \" e \"\n                 + \"WHERE :entitlement MEMBER OF e.entitlements\", SyncopeRole.class);\n         query.setParameter(\"entitlement\", entitlement);\n \n@@ -189,8 +205,8 @@ public List<SyncopeRole> findAncestors(final SyncopeRole role) {\n \n     @Override\n     public List<SyncopeRole> findChildren(final SyncopeRole role) {\n-        TypedQuery<SyncopeRole> query =\n-                entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \" + \"r.parent=:role\", SyncopeRole.class);\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \"\n+                + \"r.parent=:role\", SyncopeRole.class);\n         query.setParameter(\"role\", role);\n \n         return query.getResultList();\n@@ -256,8 +272,8 @@ public List<SyncopeRole> findAll() {\n \n     @Override\n     public List<Membership> findMemberships(final SyncopeRole role) {\n-        TypedQuery<Membership> query =\n-                entityManager.createQuery(\"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\"\n+        TypedQuery<Membership> query = entityManager.createQuery(\"SELECT e FROM \" + Membership.class.getSimpleName()\n+                + \" e\"\n                 + \" WHERE e.syncopeRole=:role\", Membership.class);\n         query.setParameter(\"role\", role);\n \n@@ -348,9 +364,9 @@ public SyncopeRole save(final SyncopeRole role) {\n         for (RVirAttr attr : rVirToBeDeleted) {\n             role.removeVirAttr(attr);\n         }\n-        \n+\n         SyncopeRole merged = entityManager.merge(role);\n-        \n+\n         // Now the same process for any exising membership of the role being saved\n         if (role.getId() != null) {\n             for (Long id : unmatched(role.getId(), MAttr.class, MAttrTemplate.class)) {"},{"sha":"f72607db89183d3cd592c340011114fb3d45cb44","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/attrvalue/ParsingValidationException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FParsingValidationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FParsingValidationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FParsingValidationException.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -24,7 +24,7 @@ public class ParsingValidationException extends ValidationException {\n \n     private static final long serialVersionUID = 5669262895008285522L;\n \n-    public ParsingValidationException(String message, Throwable cause) {\n+    public ParsingValidationException(final String message, final Throwable cause) {\n         super(message, cause);\n     }\n }"},{"sha":"66eb274fda8f9642ec1cae31ec81659e8f6a2a10","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationException.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -37,7 +37,6 @@ public class PropagationException extends RuntimeException {\n      * @param stackTrace original stacktrace\n      */\n     public PropagationException(final String resourceName, final String stackTrace) {\n-\n         super(\"Exception during provision on resource \" + resourceName + \"\\n\" + stackTrace);\n \n         this.resourceName = resourceName;"},{"sha":"e31c5feba371370a1c3a45253fc30a4a7f03fa1e","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnectorController.java","status":"modified","additions":22,"deletions":36,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -43,6 +43,7 @@\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n+import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.propagation.Connector;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.rest.data.ConnInstanceDataBinder;\n@@ -85,19 +86,14 @@ public ConnInstanceTO create(final ConnInstanceTO connInstanceTO) {\n             connInstance = connInstanceDAO.save(connInstance);\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.success,\n                     \"Successfully created connector instance: \" + connInstance.getDisplayName());\n-        } catch (Exception e) {\n+        } catch (InvalidEntityException e) {\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.failure,\n                     \"Could not create connector instance: \" + connInstanceTO.getDisplayName(), e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException invalidConnInstance = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidConnInstance);\n-            invalidConnInstance.addElement(e.getMessage());\n-\n-            scce.addException(invalidConnInstance);\n-            throw scce;\n+            SyncopeClientException invalidConnInstance = SyncopeClientException.build(\n+                    ClientExceptionType.InvalidConnInstance);\n+            invalidConnInstance.getElements().add(e.getMessage());\n+            throw invalidConnInstance;\n         }\n \n         return binder.getConnInstanceTO(connInstance);\n@@ -112,19 +108,14 @@ public ConnInstanceTO update(final ConnInstanceTO connInstanceTO) {\n             connInstance = connInstanceDAO.save(connInstance);\n             auditManager.audit(Category.connector, ConnectorSubCategory.update, Result.success,\n                     \"Successfully update connector instance: \" + connInstance.getDisplayName());\n-        } catch (Exception e) {\n+        } catch (InvalidEntityException e) {\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.failure,\n                     \"Could not update connector instance: \" + connInstanceTO.getDisplayName(), e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException invalidConnInstance = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidConnInstance);\n-            invalidConnInstance.addElement(e.getMessage());\n-\n-            scce.addException(invalidConnInstance);\n-            throw scce;\n+            SyncopeClientException invalidConnInstance = SyncopeClientException.build(\n+                    ClientExceptionType.InvalidConnInstance);\n+            invalidConnInstance.getElements().add(e.getMessage());\n+            throw invalidConnInstance;\n         }\n \n         return binder.getConnInstanceTO(connInstance);\n@@ -138,17 +129,12 @@ public ConnInstanceTO delete(final Long connInstanceId) {\n         }\n \n         if (!connInstance.getResources().isEmpty()) {\n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException associatedResources =\n-                    new SyncopeClientException(SyncopeClientExceptionType.AssociatedResources);\n+            SyncopeClientException associatedResources = SyncopeClientException.build(\n+                    ClientExceptionType.AssociatedResources);\n             for (ExternalResource resource : connInstance.getResources()) {\n-                associatedResources.addElement(resource.getName());\n+                associatedResources.getElements().add(resource.getName());\n             }\n-\n-            scce.addException(associatedResources);\n-            throw scce;\n+            throw associatedResources;\n         }\n \n         ConnInstanceTO connToDelete = binder.getConnInstanceTO(connInstance);\n@@ -228,8 +214,8 @@ public List<ConnBundleTO> getBundles(final String lang) {\n                 for (String propName : properties.getPropertyNames()) {\n                     ConnConfPropSchema connConfPropSchema = new ConnConfPropSchema();\n \n-                    ConfigurationPropertyImpl configurationProperty =\n-                            (ConfigurationPropertyImpl) properties.getProperty(propName);\n+                    ConfigurationPropertyImpl configurationProperty = (ConfigurationPropertyImpl) properties.\n+                            getProperty(propName);\n \n                     connConfPropSchema.setName(configurationProperty.getName());\n                     connConfPropSchema.setDisplayName(configurationProperty.getDisplayName(propName));\n@@ -269,8 +255,8 @@ public List<String> getSchemaNames(final ConnInstanceTO connInstanceTO, final bo\n         // We cannot use Spring bean because this method could be used during resource definition or modification:\n         // bean couldn't exist or couldn't be updated.\n         // This is the reason why we should take a \"not mature\" connector facade proxy to ask for schema names.\n-        final List<String> result =\n-                new ArrayList<String>(connFactory.createConnector(connInstance, conf).getSchemaNames(includeSpecial));\n+        final List<String> result = new ArrayList<String>(connFactory.createConnector(connInstance, conf).\n+                getSchemaNames(includeSpecial));\n \n         auditManager.audit(Category.connector, ConnectorSubCategory.getSchemaNames, Result.success,\n                 \"Successfully listed \" + (includeSpecial ? \"all \" : \"\") + \"schema names (\" + result.size() + \") \"\n@@ -329,8 +315,8 @@ public List<ConnConfProperty> getConfigurationProperties(final Long connInstance\n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n     @Transactional(readOnly = true)\n     public boolean check(final ConnInstanceTO connInstanceTO) {\n-        final Connector connector =\n-                connFactory.createConnector(binder.getConnInstance(connInstanceTO), connInstanceTO.getConfiguration());\n+        final Connector connector = connFactory.createConnector(binder.getConnInstance(connInstanceTO), connInstanceTO.\n+                getConfiguration());\n \n         boolean result;\n         try {"},{"sha":"557cfdf593f2e04a078ac735a88dcfe5c74e93cc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":10,"deletions":23,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.types.AuditElements.LoggerSubCategory;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditLoggerName;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.types.LoggerType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n@@ -93,13 +93,10 @@ public List<AuditLoggerName> listAudits() {\n     }\n \n     private void throwInvalidLogger(final LoggerType type) {\n-        SyncopeClientCompositeException sccee = \n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidLogger);\n+        sce.getElements().add(\"Expected \" + type.name());\n \n-        SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n-        sce.addElement(\"Expected \" + type.name());\n-\n-        throw sccee;\n+        throw sce;\n     }\n \n     private LoggerTO setLevel(final String name, final Level level, final LoggerType expectedType) {\n@@ -147,14 +144,9 @@ public void enableAudit(final AuditLoggerName auditLoggerName) {\n         try {\n             setLevel(auditLoggerName.toLoggerName(), Level.DEBUG, LoggerType.AUDIT);\n         } catch (IllegalArgumentException e) {\n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n-            sce.addElement(e.getMessage());\n-            sccee.addException(sce);\n-\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidLogger);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n     }\n \n@@ -197,14 +189,9 @@ public void disableAudit(final AuditLoggerName auditLoggerName) {\n         } catch (NotFoundException e) {\n             LOG.debug(\"Ignoring disable of non existing logger {}\", auditLoggerName.toLoggerName());\n         } catch (IllegalArgumentException e) {\n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n-            sce.addElement(e.getMessage());\n-            sccee.addException(sce);\n-\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidLogger);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n     }\n }"},{"sha":"0478e53007de3eabc3171ff9021b8a0ceb144723","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ReportController.java","status":"modified","additions":13,"deletions":25,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -45,7 +45,7 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n import org.apache.syncope.common.types.ReportExecStatus;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -100,12 +100,9 @@ public ReportTO create(final ReportTO reportTO) {\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for report \" + report.getId(), e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-            sce.addElement(e.getMessage());\n-            scce.addException(sce);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n \n         auditManager.audit(Category.report, ReportSubCategory.create, Result.success,\n@@ -131,12 +128,9 @@ public ReportTO update(final ReportTO reportTO) {\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for report \" + report.getId(), e);\n \n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-            sce.addElement(e.getMessage());\n-            sccee.addException(sce);\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n \n         auditManager.audit(Category.report, ReportSubCategory.update, Result.success,\n@@ -294,14 +288,11 @@ public ReportExec getAndCheckReportExec(final Long executionId) {\n             throw new NotFoundException(\"Report execution \" + executionId);\n         }\n         if (!ReportExecStatus.SUCCESS.name().equals(reportExec.getStatus()) || reportExec.getExecResult() == null) {\n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidReportExec);\n-            sce.addElement(reportExec.getExecResult() == null\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidReportExec);\n+            sce.getElements().add(reportExec.getExecResult() == null\n                     ? \"No report data produced\"\n                     : \"Report did not run successfully\");\n-            sccee.addException(sce);\n-            throw sccee;\n+            throw sce;\n         }\n         return reportExec;\n     }\n@@ -331,12 +322,9 @@ public ReportExecTO execute(final Long reportId) {\n             auditManager.audit(Category.report, ReportSubCategory.execute, Result.failure,\n                     \"Could not start execution for report: \" + report.getId(), e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-            sce.addElement(e.getMessage());\n-            scce.addException(sce);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n \n         result = new ReportExecTO();"},{"sha":"2de2d0fbdb88d5d1c9036fe088f2973eaccc5d9c","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -37,7 +37,7 @@\n import org.apache.syncope.common.types.AuditElements.ResourceSubCategory;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.MappingPurpose;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -112,12 +112,9 @@ public ResourceTO create(final ResourceTO resourceTO) {\n         LOG.debug(\"Resource creation: {}\", resourceTO);\n \n         if (StringUtils.isBlank(resourceTO.getName())) {\n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.RequiredValuesMissing);\n-            sce.addElement(\"Resource name\");\n-            sccee.addException(sce);\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(\"Resource name\");\n+            throw sce;\n         }\n \n         if (resourceDAO.find(resourceTO.getName()) != null) {\n@@ -357,12 +354,9 @@ private BulkActionRes bulkAssociationActionDelegate(\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving {} method\", methodName, e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Unknown);\n-            sce.addElement(\"Operation execution failed\");\n-            scce.addException(sce);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+            sce.getElements().add(\"Operation execution failed\");\n+            throw sce;\n         }\n     }\n }"},{"sha":"0368f94b2ddaad8ccdcb67496cb87006c70074f4","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":33,"deletions":16,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import java.util.Set;\n import javax.annotation.Resource;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -33,6 +34,9 @@\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.RoleSubCategory;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -189,15 +193,15 @@ public List<RoleTO> children(final Long roleId) {\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<RoleTO> search(final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n         return search(searchCondition, -1, -1);\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<RoleTO> search(final NodeCond searchCondition, final int page, final int size)\n             throws InvalidSearchConditionException {\n \n@@ -224,7 +228,7 @@ public List<RoleTO> search(final NodeCond searchCondition, final int page, final\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public int searchCount(final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n \n@@ -270,14 +274,13 @@ public RoleTO create(final RoleTO roleTO) {\n         /*\n          * Actual operations: workflow, propagation\n          */\n-\n         WorkflowResult<Long> created = rwfAdapter.create(actual);\n \n         EntitlementUtil.extendAuthContext(created.getResult());\n \n         List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, actual.getVirAttrs());\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -310,13 +313,12 @@ public RoleTO update(final RoleMod roleMod) {\n         /*\n          * Actual operations: workflow, propagation\n          */\n-\n         WorkflowResult<Long> updated = rwfAdapter.update(actual);\n \n         List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n                 actual.getVirAttrsToRemove(), actual.getVirAttrsToUpdate());\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -338,6 +340,21 @@ public RoleTO update(final RoleMod roleMod) {\n     public RoleTO delete(final Long roleId) {\n         LOG.debug(\"Role delete called for {}\", roleId);\n \n+        List<SyncopeRole> ownedRoles = roleDAO.findOwned(binder.getRoleFromId(roleId));\n+        if (!ownedRoles.isEmpty()) {\n+            List<String> owned = new ArrayList<String>(ownedRoles.size());\n+            for (SyncopeRole role : ownedRoles) {\n+                owned.add(role.getId() + \" \" + role.getName());\n+            }\n+\n+            auditManager.audit(Category.role, AuditElements.UserSubCategory.delete, Result.failure,\n+                    \"Could not delete role: \" + roleId + \" because of role(s) ownership \" + owned);\n+\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RoleOwnership);\n+            sce.getElements().addAll(owned);\n+            throw sce;\n+        }\n+\n         // Generate propagation tasks for deleting users from role resources, if they are on those resources only\n         // because of the reason being deleted (see SYNCOPE-357)\n         List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n@@ -351,8 +368,8 @@ public RoleTO delete(final Long roleId) {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setId(roleId);\n \n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {\n@@ -372,7 +389,7 @@ public RoleTO delete(final Long roleId) {\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to unlink role({}) and resources {}\", roleId, resources);\n \n@@ -394,7 +411,7 @@ public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to unassign role({}) and resources {}\", roleId, resources);\n \n@@ -406,7 +423,7 @@ public RoleTO unassign(final Long roleId, final Collection<String> resources) {\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public RoleTO deprovision(final Long roleId, final Collection<String> resources) {\n         LOG.debug(\"About to deprovision role({}) from resources {}\", roleId, resources);\n \n@@ -416,8 +433,8 @@ public RoleTO deprovision(final Long roleId, final Collection<String> resources)\n         noPropResourceName.removeAll(resources);\n \n         final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, noPropResourceName);\n-        PropagationReporter propagationReporter =\n-                ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n+                PropagationReporter.class);\n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n         } catch (PropagationException e) {"},{"sha":"4468153bbd39a0fa468f7b3a66c6c6f64b0dc8ed","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -94,12 +94,9 @@ public <T extends AbstractSchemaTO> T create(final AttributableType attrType, fi\n             final T schemaTO) {\n \n         if (StringUtils.isBlank(schemaTO.getName())) {\n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.RequiredValuesMissing);\n-            sce.addElement(\"Schema name\");\n-            sccee.addException(sce);\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(\"Schema name\");\n+            throw sce;\n         }\n \n         final AttributableUtil attrUtil = AttributableUtil.getInstance(attrType);"},{"sha":"d9cd936feb5b0b26767853813c9b810714c3846a","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":17,"deletions":33,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,6 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Set;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.SchedTaskTO;\n@@ -34,7 +33,7 @@\n import org.apache.syncope.common.types.AuditElements.TaskSubCategory;\n import org.apache.syncope.common.types.PropagationMode;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -106,12 +105,9 @@ public <T extends SchedTaskTO> T createSchedTask(final T taskTO) {\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for task \" + task.getId(), e);\n \n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-            sce.addElement(e.getMessage());\n-            scce.addException(sce);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n \n         auditManager.audit(Category.task, TaskSubCategory.create, Result.success,\n@@ -136,9 +132,6 @@ public <T extends SchedTaskTO> T updateSched(final SchedTaskTO taskTO) {\n \n         TaskUtil taskUtil = TaskUtil.getInstance(task);\n \n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n         binder.updateSchedTask(task, taskTO, taskUtil);\n         task = taskDAO.save(task);\n \n@@ -147,10 +140,9 @@ public <T extends SchedTaskTO> T updateSched(final SchedTaskTO taskTO) {\n         } catch (Exception e) {\n             LOG.error(\"While registering quartz job for task \" + task.getId(), e);\n \n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-            sce.addElement(e.getMessage());\n-            scce.addException(sce);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n         }\n \n         auditManager.audit(Category.task, TaskSubCategory.update, Result.success,\n@@ -285,12 +277,9 @@ public TaskExecTO execute(final Long taskId, final boolean dryRun) {\n                     auditManager.audit(Category.task, TaskSubCategory.execute, Result.failure,\n                             \"Could not start execution for task: \" + task.getId() + \"/\" + taskUtil, e);\n \n-                    SyncopeClientCompositeException scce =\n-                            new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-                    SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.Scheduling);\n-                    sce.addElement(e.getMessage());\n-                    scce.addException(sce);\n-                    throw scce;\n+                    SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Scheduling);\n+                    sce.getElements().add(e.getMessage());\n+                    throw sce;\n                 }\n \n                 result = new TaskExecTO();\n@@ -317,17 +306,17 @@ public TaskExecTO report(final Long executionId, final PropagationTaskExecStatus\n             throw new NotFoundException(\"Task execution \" + executionId);\n         }\n \n-        SyncopeClientException sce = new SyncopeClientException(\n-                SyncopeClientExceptionType.InvalidPropagationTaskExecReport);\n+        SyncopeClientException sce = SyncopeClientException.build(\n+                ClientExceptionType.InvalidPropagationTaskExecReport);\n \n         TaskUtil taskUtil = TaskUtil.getInstance(exec.getTask());\n         if (TaskType.PROPAGATION == taskUtil.getType()) {\n             PropagationTask task = (PropagationTask) exec.getTask();\n             if (task.getPropagationMode() != PropagationMode.TWO_PHASES) {\n-                sce.addElement(\"Propagation mode: \" + task.getPropagationMode());\n+                sce.getElements().add(\"Propagation mode: \" + task.getPropagationMode());\n             }\n         } else {\n-            sce.addElement(\"Task type: \" + taskUtil);\n+            sce.getElements().add(\"Task type: \" + taskUtil);\n         }\n \n         switch (status) {\n@@ -338,21 +327,16 @@ public TaskExecTO report(final Long executionId, final PropagationTaskExecStatus\n             case CREATED:\n             case SUBMITTED:\n             case UNSUBMITTED:\n-                sce.addElement(\"Execution status to be set: \" + status);\n+                sce.getElements().add(\"Execution status to be set: \" + status);\n                 break;\n \n             default:\n         }\n \n         if (!sce.isEmpty()) {\n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            scce.addException(sce);\n-\n             auditManager.audit(Category.task, TaskSubCategory.report, Result.failure,\n-                    \"Could not reported execution status: \" + exec.getId() + \"/\" + taskUtil, scce);\n-\n-            throw scce;\n+                    \"Could not reported execution status: \" + exec.getId() + \"/\" + taskUtil, sce);\n+            throw sce;\n         }\n \n         exec.setStatus(status.toString());"},{"sha":"5844ac195e0d7d45433442e2cf92d484a03cade2","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -25,7 +25,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n@@ -40,7 +39,7 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.UserSubCategory;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -530,6 +529,8 @@ protected WorkflowResult<Long> setStatusOnWfAdapter(final SyncopeUser user, fina\n     }\n \n     protected UserTO doDelete(final Long userId) {\n+        LOG.debug(\"User delete called for {}\", userId);\n+\n         List<SyncopeRole> ownedRoles = roleDAO.findOwned(binder.getUserFromId(userId));\n         if (!ownedRoles.isEmpty()) {\n             List<String> owned = new ArrayList<String>(ownedRoles.size());\n@@ -540,14 +541,9 @@ protected UserTO doDelete(final Long userId) {\n             auditManager.audit(Category.user, UserSubCategory.delete, Result.failure,\n                     \"Could not delete user: \" + userId + \" because of role(s) ownership \" + owned);\n \n-            SyncopeClientCompositeException sccee =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.RoleOwnership);\n-            sce.setElements(owned);\n-            sccee.addException(sce);\n-\n-            throw sccee;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RoleOwnership);\n+            sce.getElements().addAll(owned);\n+            throw sce;\n         }\n \n         // Note here that we can only notify about \"delete\", not any other"},{"sha":"e59d4865da554b00ec97f6893f97d634ca6b6821","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserRequestController.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,15 +22,14 @@\n import java.util.Date;\n import java.util.List;\n import javax.persistence.RollbackException;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.UserRequestSubCategory;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n@@ -263,10 +262,7 @@ public UserTO execute(final UserRequestTO request, final UserTO reviewed, final\n         if (StringUtils.isBlank(request.getOwner())\n                 || !request.getOwner().equalsIgnoreCase(EntitlementUtil.getAuthenticatedUsername())) {\n \n-            final SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.UNAUTHORIZED.getStatusCode());\n-            scce.addException(new SyncopeClientException(SyncopeClientExceptionType.Unauthorized));\n-            throw scce;\n+            throw SyncopeClientException.build(ClientExceptionType.Unauthorized);\n         }\n \n         final UserTO res;"},{"sha":"1d525a6e095d4c38109b196d3eaf94c5f323587f","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":11,"deletions":12,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -25,7 +25,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n-import javax.validation.ValidationException;\n import org.apache.commons.jexl2.JexlContext;\n import org.apache.commons.jexl2.MapContext;\n import org.apache.commons.lang3.StringUtils;\n@@ -37,7 +36,7 @@\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n@@ -84,6 +83,7 @@\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.VirAttrDAO;\n import org.apache.syncope.core.persistence.dao.VirSchemaDAO;\n+import org.apache.syncope.core.persistence.validation.attrvalue.InvalidAttrValueException;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.JexlUtil;\n@@ -230,11 +230,10 @@ protected void fillAttribute(final List<String> values, final AttributableUtil a\n             } else {\n                 try {\n                     attr.addValue(value, attributableUtil);\n-                } catch (ValidationException e) {\n+                } catch (InvalidAttrValueException e) {\n                     LOG.error(\"Invalid value for attribute \" + schema.getName() + \": \" + value, e);\n \n-                    invalidValues.addElement(schema.getName() + \": \" + value\n-                            + \" - \" + e.getMessage());\n+                    invalidValues.getElements().add(schema.getName() + \": \" + value + \" - \" + e.getMessage());\n                 }\n             }\n         }\n@@ -284,8 +283,8 @@ private boolean evaluateMandatoryCondition(final AttributableUtil attrUtil,\n     private SyncopeClientException checkMandatory(final AttributableUtil attrUtil,\n             final AbstractAttributable attributable) {\n \n-        SyncopeClientException reqValMissing = new SyncopeClientException(\n-                SyncopeClientExceptionType.RequiredValuesMissing);\n+        SyncopeClientException reqValMissing = SyncopeClientException.build(\n+                ClientExceptionType.RequiredValuesMissing);\n \n         LOG.debug(\"Check mandatory constraint among resources {}\", attributable.getResources());\n \n@@ -314,7 +313,7 @@ private SyncopeClientException checkMandatory(final AttributableUtil attrUtil,\n \n                 LOG.error(\"Mandatory schema \" + schema.getName() + \" not provided with values\");\n \n-                reqValMissing.addElement(schema.getName());\n+                reqValMissing.getElements().add(schema.getName());\n             }\n         }\n \n@@ -340,7 +339,7 @@ && evaluateMandatoryCondition(attrUtil, attributable, derSchema.getName(),\n \n                 LOG.error(\"Mandatory derived schema \" + derSchema.getName() + \" does not evaluate to any value\");\n \n-                reqValMissing.addElement(derSchema.getName());\n+                reqValMissing.getElements().add(derSchema.getName());\n             }\n         }\n \n@@ -367,7 +366,7 @@ && evaluateMandatoryCondition(attrUtil, attributable, virSchema.getName(),\n \n                 LOG.error(\"Mandatory virtual schema \" + virSchema.getName() + \" not provided with values\");\n \n-                reqValMissing.addElement(virSchema.getName());\n+                reqValMissing.getElements().add(virSchema.getName());\n             }\n         }\n \n@@ -524,7 +523,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n \n         PropagationByResource propByRes = new PropagationByResource();\n \n-        SyncopeClientException invalidValues = new SyncopeClientException(SyncopeClientExceptionType.InvalidValues);\n+        SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n \n         // 1. resources to be removed\n         for (String resourceToBeRemoved : attributableMod.getResourcesToRemove()) {\n@@ -783,7 +782,7 @@ protected void fill(final AbstractAttributable attributable, final AbstractAttri\n             final AttributableUtil attributableUtil, final SyncopeClientCompositeException scce) {\n \n         // 1. attributes\n-        SyncopeClientException invalidValues = new SyncopeClientException(SyncopeClientExceptionType.InvalidValues);\n+        SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n \n         // Only consider attributeTO with values\n         for (AttributeTO attributeTO : attributableTO.getAttrs()) {"},{"sha":"ab9ecfb38df40efe5bf2421d13bc300d55c59d81","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":13,"deletions":35,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,13 +21,11 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.BeanUtils;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n@@ -80,30 +78,26 @@ public Set<ConnConfProperty> mergeConnConfProperties(final Set<ConnConfProperty>\n     }\n \n     public ConnInstance getConnInstance(final ConnInstanceTO connInstanceTO) {\n-        SyncopeClientCompositeException scee =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-        SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n-                SyncopeClientExceptionType.RequiredValuesMissing);\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n \n         if (connInstanceTO.getLocation() == null) {\n-            requiredValuesMissing.addElement(\"location\");\n+            sce.getElements().add(\"location\");\n         }\n \n         if (connInstanceTO.getBundleName() == null) {\n-            requiredValuesMissing.addElement(\"bundlename\");\n+            sce.getElements().add(\"bundlename\");\n         }\n \n         if (connInstanceTO.getVersion() == null) {\n-            requiredValuesMissing.addElement(\"bundleversion\");\n+            sce.getElements().add(\"bundleversion\");\n         }\n \n         if (connInstanceTO.getConnectorName() == null) {\n-            requiredValuesMissing.addElement(\"connectorname\");\n+            sce.getElements().add(\"connectorname\");\n         }\n \n         if (connInstanceTO.getConfiguration() == null || connInstanceTO.getConfiguration().isEmpty()) {\n-            requiredValuesMissing.addElement(\"configuration\");\n+            sce.getElements().add(\"configuration\");\n         }\n \n         ConnInstance connInstance = new ConnInstance();\n@@ -114,28 +108,18 @@ public ConnInstance getConnInstance(final ConnInstanceTO connInstanceTO) {\n         }\n \n         // Throw composite exception if there is at least one element set\n-        // in the composing exceptions\n-\n-        if (!requiredValuesMissing.isEmpty()) {\n-            scee.addException(requiredValuesMissing);\n-        }\n-\n-        if (scee.hasExceptions()) {\n-            throw scee;\n+        if (!sce.isEmpty()) {\n+            throw sce;\n         }\n \n         return connInstance;\n     }\n \n     public ConnInstance updateConnInstance(final long connInstanceId, final ConnInstanceTO connInstanceTO) {\n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-        SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n-                SyncopeClientExceptionType.RequiredValuesMissing);\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n \n         if (connInstanceId == 0) {\n-            requiredValuesMissing.addElement(\"connector id\");\n+            sce.getElements().add(\"connector id\");\n         }\n \n         ConnInstance connInstance = connInstanceDAO.find(connInstanceId);\n@@ -170,14 +154,8 @@ public ConnInstance updateConnInstance(final long connInstanceId, final ConnInst\n \n         connInstance.setCapabilities(connInstanceTO.getCapabilities());\n \n-        if (!requiredValuesMissing.isEmpty()) {\n-            scce.addException(requiredValuesMissing);\n-        }\n-\n-        // Throw composite exception if there is at least one element set\n-        // in the composing exceptions\n-        if (scce.hasExceptions()) {\n-            throw scce;\n+        if (!sce.isEmpty()) {\n+            throw sce;\n         }\n \n         return connInstance;"},{"sha":"53c2c9300e3da5aa4f263a8d4c2038c7ddcd6def","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -25,14 +25,13 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.to.MappingItemTO;\n import org.apache.syncope.common.to.MappingTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -184,17 +183,16 @@ private AbstractMappingItem getMappingItem(final MappingItemTO itemTO, final Abs\n             return null;\n         }\n \n-        SyncopeClientCompositeException scce = \n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n-                SyncopeClientExceptionType.RequiredValuesMissing);\n+        SyncopeClientException requiredValuesMissing = SyncopeClientException.build(\n+                ClientExceptionType.RequiredValuesMissing);\n \n         if (itemTO.getIntAttrName() == null) {\n             if (IntMappingType.getEmbedded().contains(itemTO.getIntMappingType())) {\n                 itemTO.setIntAttrName(itemTO.getIntMappingType().toString());\n             } else {\n-                requiredValuesMissing.addElement(\"intAttrName\");\n+                requiredValuesMissing.getElements().add(\"intAttrName\");\n             }\n         }\n \n@@ -208,10 +206,10 @@ private AbstractMappingItem getMappingItem(final MappingItemTO itemTO, final Abs\n         if (!jexlUtil.isExpressionValid(itemTO.getMandatoryCondition() == null\n                 ? \"false\" : itemTO.getMandatoryCondition())) {\n \n-            SyncopeClientException invalidMandatoryCondition = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidValues);\n+            SyncopeClientException invalidMandatoryCondition = SyncopeClientException.build(\n+                    ClientExceptionType.InvalidValues);\n \n-            invalidMandatoryCondition.addElement(itemTO.getMandatoryCondition());\n+            invalidMandatoryCondition.getElements().add(itemTO.getMandatoryCondition());\n \n             scce.addException(invalidMandatoryCondition);\n         }"},{"sha":"5e181057fe31c267e9df352f3262ed47a08f9071","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":9,"deletions":12,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,12 +22,11 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -159,15 +158,14 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n         role.setInheritPasswordPolicy(roleTO.isInheritPasswordPolicy());\n         role.setInheritAccountPolicy(roleTO.isInheritAccountPolicy());\n \n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         // name and parent\n-        SyncopeClientException invalidRoles = new SyncopeClientException(SyncopeClientExceptionType.InvalidRoles);\n+        SyncopeClientException invalidRoles = SyncopeClientException.build(ClientExceptionType.InvalidRoles);\n         if (roleTO.getName() == null) {\n             LOG.error(\"No name specified for this role\");\n \n-            invalidRoles.addElement(\"No name specified for this role\");\n+            invalidRoles.getElements().add(\"No name specified for this role\");\n         } else {\n             role.setName(roleTO.getName());\n         }\n@@ -177,7 +175,7 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n             if (parentRole == null) {\n                 LOG.error(\"Could not find role with id \" + roleTO.getParent());\n \n-                invalidRoles.addElement(String.valueOf(roleTO.getParent()));\n+                invalidRoles.getElements().add(String.valueOf(roleTO.getParent()));\n                 scce.addException(invalidRoles);\n             } else {\n                 role.setParent(parentRole);\n@@ -189,7 +187,7 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n         if (otherRole != null) {\n             LOG.error(\"Another role exists with the same name \" + \"and the same parent role: \" + otherRole);\n \n-            invalidRoles.addElement(roleTO.getName());\n+            invalidRoles.getElements().add(roleTO.getName());\n         }\n \n         // attribute templates\n@@ -245,13 +243,12 @@ public SyncopeRole create(final SyncopeRole role, final RoleTO roleTO) {\n     public PropagationByResource update(final SyncopeRole role, final RoleMod roleMod) {\n         PropagationByResource propByRes = new PropagationByResource();\n \n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         Set<String> currentResources = role.getResourceNames();\n \n         // name\n-        SyncopeClientException invalidRoles = new SyncopeClientException(SyncopeClientExceptionType.InvalidRoles);\n+        SyncopeClientException invalidRoles = SyncopeClientException.build(ClientExceptionType.InvalidRoles);\n         if (roleMod.getName() != null) {\n             SyncopeRole otherRole = roleDAO.find(roleMod.getName(),\n                     role.getParent() == null ? null : role.getParent().getId());\n@@ -267,7 +264,7 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n             } else {\n                 LOG.error(\"Another role exists with the same name and the same parent role: \" + otherRole);\n \n-                invalidRoles.addElement(roleMod.getName());\n+                invalidRoles.getElements().add(roleMod.getName());\n                 scce.addException(invalidRoles);\n             }\n         }"},{"sha":"11e7103b65ad4811bf8b4fef650313505db678eb","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":15,"deletions":24,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -19,12 +19,11 @@\n package org.apache.syncope.core.rest.data;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.DerSchemaTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.VirSchemaTO;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -50,15 +49,9 @@ public class SchemaDataBinder {\n     // --------------- NORMAL -----------------\n     private <T extends AbstractNormalSchema> void fill(final T schema, final SchemaTO schemaTO) {\n         if (!jexlUtil.isExpressionValid(schemaTO.getMandatoryCondition())) {\n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-\n-            SyncopeClientException invalidMandatoryCondition = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidValues);\n-            invalidMandatoryCondition.addElement(schemaTO.getMandatoryCondition());\n-\n-            scce.addException(invalidMandatoryCondition);\n-            throw scce;\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n+            sce.getElements().add(schemaTO.getMandatoryCondition());\n+            throw sce;\n         }\n \n         BeanUtils.copyProperties(schemaTO, schema);\n@@ -71,22 +64,21 @@ public <T extends AbstractNormalSchema> void create(final SchemaTO schemaTO, fin\n     public <T extends AbstractNormalSchema> void update(final SchemaTO schemaTO, final T schema,\n             final AttributableUtil attributableUtil) {\n \n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         List<AbstractAttr> attrs = schemaDAO.findAttrs(schema, attributableUtil.attrClass());\n         if (!attrs.isEmpty()) {\n             if (schema.getType() != schemaTO.getType()) {\n-                SyncopeClientException e = new SyncopeClientException(SyncopeClientExceptionType.valueOf(\"Invalid\"\n+                SyncopeClientException e = SyncopeClientException.build(ClientExceptionType.valueOf(\"Invalid\"\n                         + schema.getClass().getSimpleName()));\n-                e.addElement(\"Cannot change type since \" + schema.getName() + \" has attributes\");\n+                e.getElements().add(\"Cannot change type since \" + schema.getName() + \" has attributes\");\n \n                 scce.addException(e);\n             }\n             if (schema.isUniqueConstraint() != schemaTO.isUniqueConstraint()) {\n-                SyncopeClientException e = new SyncopeClientException(SyncopeClientExceptionType.valueOf(\"Invalid\"\n+                SyncopeClientException e = SyncopeClientException.build(ClientExceptionType.valueOf(\"Invalid\"\n                         + schema.getClass().getSimpleName()));\n-                e.addElement(\"Cannot alter unique contraint since \" + schema.getName() + \" has attributes\");\n+                e.getElements().add(\"Cannot alter unique contraint since \" + schema.getName() + \" has attributes\");\n \n                 scce.addException(e);\n             }\n@@ -108,19 +100,18 @@ public <T extends AbstractNormalSchema> SchemaTO getSchemaTO(final T schema, fin\n \n     // --------------- DERIVED -----------------\n     private <T extends AbstractDerSchema> T populate(final T derSchema, final DerSchemaTO derSchemaTO) {\n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         if (StringUtils.isBlank(derSchemaTO.getExpression())) {\n             SyncopeClientException requiredValuesMissing =\n-                    new SyncopeClientException(SyncopeClientExceptionType.RequiredValuesMissing);\n-            requiredValuesMissing.addElement(\"expression\");\n+                    SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            requiredValuesMissing.getElements().add(\"expression\");\n \n             scce.addException(requiredValuesMissing);\n         } else if (!jexlUtil.isExpressionValid(derSchemaTO.getExpression())) {\n-            SyncopeClientException invalidMandatoryCondition = new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidValues);\n-            invalidMandatoryCondition.addElement(derSchemaTO.getExpression());\n+            SyncopeClientException invalidMandatoryCondition = SyncopeClientException.build(\n+                    ClientExceptionType.InvalidValues);\n+            invalidMandatoryCondition.getElements().add(derSchemaTO.getExpression());\n \n             scce.addException(invalidMandatoryCondition);\n         }"},{"sha":"1a492a11c71780b569f4d1a165c1abc3376ac37b","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":8,"deletions":13,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.PropagationTaskTO;\n@@ -30,10 +29,9 @@\n import org.apache.syncope.common.to.TaskExecTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.BeanUtils;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.init.JobInstanceLoader;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n@@ -85,28 +83,28 @@ public class TaskDataBinder {\n     private void checkJexl(final AbstractAttributableTO attributableTO, final SyncopeClientException sce) {\n         for (AttributeTO attrTO : attributableTO.getAttrs()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n-                sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n+                sce.getElements().add(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n         for (AttributeTO attrTO : attributableTO.getVirAttrs()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n-                sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n+                sce.getElements().add(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n     }\n \n     private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n-        SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidSyncTask);\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidSyncTask);\n \n         // 1. validate JEXL expressions in user and role templates\n         if (taskTO.getUserTemplate() != null) {\n             UserTO template = taskTO.getUserTemplate();\n \n             if (StringUtils.isNotBlank(template.getUsername()) && !jexlUtil.isExpressionValid(template.getUsername())) {\n-                sce.addElement(\"Invalid JEXL: \" + template.getUsername());\n+                sce.getElements().add(\"Invalid JEXL: \" + template.getUsername());\n             }\n             if (StringUtils.isNotBlank(template.getPassword()) && !jexlUtil.isExpressionValid(template.getPassword())) {\n-                sce.addElement(\"Invalid JEXL: \" + template.getPassword());\n+                sce.getElements().add(\"Invalid JEXL: \" + template.getPassword());\n             }\n \n             checkJexl(template, sce);\n@@ -119,16 +117,13 @@ private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n             RoleTO template = taskTO.getRoleTemplate();\n \n             if (StringUtils.isNotBlank(template.getName()) && !jexlUtil.isExpressionValid(template.getName())) {\n-                sce.addElement(\"Invalid JEXL: \" + template.getName());\n+                sce.getElements().add(\"Invalid JEXL: \" + template.getName());\n             }\n \n             checkJexl(template, sce);\n         }\n         if (!sce.isEmpty()) {\n-            SyncopeClientCompositeException scce =\n-                    new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n-            scce.addException(sce);\n-            throw scce;\n+            throw sce;\n         }\n \n         // 2. all JEXL expressions are valid: accept user and role templates"},{"sha":"b9b90989fd0fac3beba00054b946cfcfe075034e","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -22,7 +22,6 @@\n import java.util.HashSet;\n import java.util.Set;\n import javax.annotation.Resource;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n@@ -33,7 +32,7 @@\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.PasswordPolicySpec;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n@@ -181,17 +180,16 @@ private void setPassword(final SyncopeUser user, final String password,\n             user.setPassword(password, getPredefinedCipherAlgoritm(), passwordHistorySize);\n         } catch (NotFoundException e) {\n             final SyncopeClientException invalidCiperAlgorithm =\n-                    new SyncopeClientException(SyncopeClientExceptionType.NotFound);\n-            invalidCiperAlgorithm.addElement(e.getMessage());\n+                    SyncopeClientException.build(ClientExceptionType.NotFound);\n+            invalidCiperAlgorithm.getElements().add(e.getMessage());\n             scce.addException(invalidCiperAlgorithm);\n \n             throw scce;\n         }\n     }\n \n     public void create(final SyncopeUser user, final UserTO userTO) {\n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         // memberships\n         SyncopeRole role;\n@@ -246,8 +244,7 @@ public void create(final SyncopeUser user, final UserTO userTO) {\n     public PropagationByResource update(final SyncopeUser user, final UserMod userMod) {\n         PropagationByResource propByRes = new PropagationByResource();\n \n-        SyncopeClientCompositeException scce =\n-                new SyncopeClientCompositeException(Response.Status.BAD_REQUEST.getStatusCode());\n+        SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n         Set<String> currentResources = user.getResourceNames();\n "},{"sha":"945f2a17dd23fc0549da3eea8a6c56df25acf8b3","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":51,"deletions":32,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,13 +30,15 @@\n import javax.ws.rs.ext.ExceptionMapper;\r\n import javax.ws.rs.ext.Provider;\r\n import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;\r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.InvalidSearchConditionException;\r\n import org.apache.syncope.common.types.EntityViolationType;\r\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\r\n+import org.apache.syncope.common.types.ClientExceptionType;\r\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\r\n import org.apache.syncope.common.validation.SyncopeClientException;\r\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\r\n import org.apache.syncope.core.persistence.dao.NotFoundException;\r\n+import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\r\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\r\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\r\n import org.apache.syncope.core.workflow.WorkflowException;\r\n@@ -59,8 +61,11 @@ public class RestServiceExceptionMapper implements ExceptionMapper<Exception>, R\n     public Response toResponse(final Exception ex) {\r\n         LOG.error(\"Exception thrown by REST method: \" + ex.getMessage(), ex);\r\n \r\n-        if (ex instanceof SyncopeClientCompositeException) {\r\n-            return getCompositeExceptionResponse((SyncopeClientCompositeException) ex);\r\n+        if (ex instanceof SyncopeClientException) {\r\n+            SyncopeClientException sce = (SyncopeClientException) ex;\r\n+            return (sce.isComposite()\r\n+                    ? getSyncopeClientCompositeExceptionResponse(sce.asComposite())\r\n+                    : getSyncopeClientExceptionResponse(sce));\r\n         }\r\n \r\n         if (ex instanceof AccessDeniedException) {\r\n@@ -70,20 +75,20 @@ public Response toResponse(final Exception ex) {\n         }\r\n \r\n         if (ex instanceof UnauthorizedRoleException) {\r\n-            return buildResponse(Response.status(Response.Status.FORBIDDEN),\r\n-                    SyncopeClientExceptionType.UnauthorizedRole,\r\n+            return buildResponse(Response.status(Response.Status.UNAUTHORIZED),\r\n+                    ClientExceptionType.UnauthorizedRole,\r\n                     getExMessage(ex));\r\n         }\r\n \r\n         if (ex instanceof EntityExistsException) {\r\n             return buildResponse(Response.status(Response.Status.CONFLICT),\r\n-                    SyncopeClientExceptionType.EntityExists,\r\n+                    ClientExceptionType.EntityExists,\r\n                     getExMessage(ex));\r\n         }\r\n \r\n         if (ex instanceof DataIntegrityViolationException) {\r\n             return buildResponse(Response.status(Response.Status.CONFLICT),\r\n-                    SyncopeClientExceptionType.DataIntegrityViolation,\r\n+                    ClientExceptionType.DataIntegrityViolation,\r\n                     getExMessage(ex));\r\n         }\r\n \r\n@@ -104,7 +109,7 @@ public Response toResponse(final Exception ex) {\n \r\n         // Rest is interpreted as InternalServerError\r\n         return Response.status(Response.Status.INTERNAL_SERVER_ERROR).\r\n-                header(SyncopeClientExceptionType.Unknown.getElementHeaderName(), getExMessage(ex)).\r\n+                header(ClientExceptionType.Unknown.getElementHeaderName(), getExMessage(ex)).\r\n                 build();\r\n     }\r\n \r\n@@ -114,14 +119,30 @@ public Exception fromResponse(final Response r) {\n                 \"Call of fromResponse() method is not expected in RestServiceExceptionMapper\");\r\n     }\r\n \r\n-    private Response getCompositeExceptionResponse(final SyncopeClientCompositeException ex) {\r\n-        ResponseBuilder responseBuilder = Response.status(ex.getStatusCode());\r\n+    private Response getSyncopeClientExceptionResponse(final SyncopeClientException ex) {\r\n+        ResponseBuilder responseBuilder = Response.status(ex.getType().getResponseStatus());\r\n+        responseBuilder.header(\r\n+                SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, ex.getType().getHeaderValue());\r\n+\r\n+        for (Object element : ex.getElements()) {\r\n+            responseBuilder.header(ex.getType().getElementHeaderName(), element);\r\n+        }\r\n+\r\n+        return responseBuilder.build();\r\n+    }\r\n+\r\n+    private Response getSyncopeClientCompositeExceptionResponse(final SyncopeClientCompositeException ex) {\r\n+        if (ex.getExceptions().size() == 1) {\r\n+            return getSyncopeClientExceptionResponse(ex.getExceptions().iterator().next());\r\n+        }\r\n+\r\n+        ResponseBuilder responseBuilder = Response.status(Response.Status.BAD_REQUEST);\r\n         for (SyncopeClientException sce : ex.getExceptions()) {\r\n             responseBuilder.header(\r\n-                    SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER, sce.getType().getHeaderValue());\r\n+                    SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, sce.getType().getHeaderValue());\r\n \r\n-            for (String attributeName : sce.getElements()) {\r\n-                responseBuilder.header(sce.getType().getElementHeaderName(), attributeName);\r\n+            for (Object element : sce.getElements()) {\r\n+                responseBuilder.header(sce.getType().getElementHeaderName(), element);\r\n             }\r\n         }\r\n         return responseBuilder.build();\r\n@@ -130,16 +151,13 @@ private Response getCompositeExceptionResponse(final SyncopeClientCompositeExcep\n     private Response processNotFoundExceptions(final Exception ex) {\r\n         ResponseBuilder responseBuilder = Response.status(Response.Status.NOT_FOUND);\r\n \r\n-        if (ex instanceof javax.ws.rs.NotFoundException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.NotFound, getExMessage(ex));\r\n-\r\n-        } else if (ex instanceof NotFoundException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.NotFound, getExMessage(ex));\r\n-\r\n+        if (ex instanceof javax.ws.rs.NotFoundException || ex instanceof NotFoundException) {\r\n+            return buildResponse(responseBuilder, ClientExceptionType.NotFound, getExMessage(ex));\r\n         } else if (ex instanceof MissingConfKeyException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.NotFound, getMessage(ex,\r\n-                    ((MissingConfKeyException) ex).getConfKey()));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.NotFound,\r\n+                    getMessage(ex, ((MissingConfKeyException) ex).getConfKey()));\r\n         }\r\n+\r\n         return null;\r\n     }\r\n \r\n@@ -158,10 +176,9 @@ private Response processInvalidEntityExceptions(final Exception ex) {\n         if (iee != null) {\r\n             ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);\r\n \r\n-            SyncopeClientExceptionType exType =\r\n-                    SyncopeClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\r\n+            ClientExceptionType exType = ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\r\n \r\n-            builder.header(SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER, exType.getHeaderValue());\r\n+            builder.header(SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, exType.getHeaderValue());\r\n \r\n             for (Map.Entry<Class<?>, Set<EntityViolationType>> violation : iee.getViolations().entrySet()) {\r\n                 for (EntityViolationType violationType : violation.getValue()) {\r\n@@ -186,28 +203,30 @@ private Response processBadRequestExceptions(final Exception ex) {\n                 return ((BadRequestException) ex).getResponse();\r\n             }\r\n         } else if (ex instanceof WorkflowException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.Workflow, getExMessage(ex));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.Workflow, getExMessage(ex));\r\n         } else if (ex instanceof InvalidSearchConditionException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.InvalidSearchCondition, getExMessage(ex));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.InvalidSearchCondition, getExMessage(ex));\r\n         } else if (ex instanceof PersistenceException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.GenericPersistence, getExMessage(ex));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.GenericPersistence, getExMessage(ex));\r\n         } else if (ex instanceof org.apache.ibatis.exceptions.PersistenceException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.Workflow, getMessage(ex,\r\n+            return buildResponse(responseBuilder, ClientExceptionType.Workflow, getMessage(ex,\r\n                     \"Currently unavailable. Please try later.\"));\r\n         } else if (ex instanceof JpaSystemException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.DataIntegrityViolation, getExMessage(ex));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.DataIntegrityViolation, getExMessage(ex));\r\n         } else if (ex instanceof ConfigurationException) {\r\n-            return buildResponse(responseBuilder, SyncopeClientExceptionType.InvalidConnIdConf, getExMessage(ex));\r\n+            return buildResponse(responseBuilder, ClientExceptionType.InvalidConnIdConf, getExMessage(ex));\r\n+        } else if (ex instanceof ParsingValidationException) {\r\n+            return buildResponse(responseBuilder, ClientExceptionType.InvalidValues, getExMessage(ex));\r\n         }\r\n \r\n         return null;\r\n     }\r\n \r\n-    private Response buildResponse(final ResponseBuilder responseBuilder, final SyncopeClientExceptionType hType,\r\n+    private Response buildResponse(final ResponseBuilder responseBuilder, final ClientExceptionType hType,\r\n             final String msg) {\r\n \r\n         return responseBuilder.header(\r\n-                SyncopeClientCompositeException.EXCEPTION_TYPE_HEADER, hType.getHeaderValue()).\r\n+                SyncopeConstants.REST_EXCEPTION_TYPE_HEADER, hType.getHeaderValue()).\r\n                 header(hType.getElementHeaderName(), msg).\r\n                 build();\r\n     }\r"},{"sha":"e9386bbef8feb578349f309c49d7b5fefc3f98de","filename":"core/src/main/java/org/apache/syncope/core/services/ConfigurationServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -50,7 +50,7 @@ public Response create(final ConfigurationTO configurationTO) {\n         ConfigurationTO created = controller.create(configurationTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\r\n         return Response.created(location).\r\n-                header(SyncopeConstants.REST_HEADER_ID, created.getKey()).\r\n+                header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getKey()).\r\n                 build();\r\n     }\r\n \r"},{"sha":"16448074d9bea423121aaa320ea838b2a3fa2515","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -45,7 +45,7 @@ public class ConnectorServiceImpl extends AbstractServiceImpl implements Connect\n     public Response create(final ConnInstanceTO connInstanceTO) {\r\n         ConnInstanceTO connInstance = controller.create(connInstanceTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(connInstance.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, connInstance.getId()).build();\r\n+        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, connInstance.getId()).build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"fce0ee339cbc85453d34474d5d1e0c6fb201188d","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -41,7 +41,7 @@ public Response create(final NotificationTO notificationTO) {\n         NotificationTO createdNotificationTO = controller.create(notificationTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdNotificationTO.getId())).build();\n         return Response.created(location)\n-                .header(SyncopeConstants.REST_HEADER_ID, createdNotificationTO.getId())\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdNotificationTO.getId())\n                 .build();\n     }\n "},{"sha":"9427ae082c7e84b841e58dcfc0ab66d273d70908","filename":"core/src/main/java/org/apache/syncope/core/services/PolicyServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -46,7 +46,7 @@ public class PolicyServiceImpl extends AbstractServiceImpl implements PolicyServ\n     public <T extends AbstractPolicyTO> Response create(final T policyTO) {\r\n         AbstractPolicyTO policy = policyController.create(policyTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(policy.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, policy.getId()).build();\r\n+        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, policy.getId()).build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"1ab5b047a1e65dfa421a59286fb9e5714e8f8980","filename":"core/src/main/java/org/apache/syncope/core/services/ReportServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FReportServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -50,7 +50,7 @@ public Response create(final ReportTO reportTO) {\n         ReportTO createdReportTO = controller.create(reportTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdReportTO.getId())).build();\n         return Response.created(location)\n-                .header(SyncopeConstants.REST_HEADER_ID, createdReportTO.getId())\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdReportTO.getId())\n                 .build();\n     }\n "},{"sha":"306a4aa87e80e37dcd1463db973daf2ac4223e9c","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -49,7 +49,7 @@ public Response create(final ResourceTO resourceTO) {\n         ResourceTO resource = controller.create(resourceTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(resource.getName()).build();\r\n         return Response.created(location)\r\n-                .header(SyncopeConstants.REST_HEADER_ID, resource.getName())\r\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, resource.getName())\r\n                 .build();\r\n     }\r\n \r"},{"sha":"1ec063b695efdd5f16af4c096a8dc7e37599581b","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -56,7 +56,7 @@ public Response create(final RoleTO roleTO) {\n         RoleTO created = controller.create(roleTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\r\n         return Response.created(location)\r\n-                .header(SyncopeConstants.REST_HEADER_ID, created.getId())\r\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getId())\r\n                 .entity(created)\r\n                 .build();\r\n     }\r"},{"sha":"2324adf36a4e8db4ac8e3c4c708e1ec302c581fd","filename":"core/src/main/java/org/apache/syncope/core/services/SchemaServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FSchemaServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -46,7 +46,7 @@ public <T extends AbstractSchemaTO> Response create(final AttributableType attrT\n \r\n         URI location = uriInfo.getAbsolutePathBuilder().path(response.getName()).build();\r\n         return Response.created(location)\r\n-                .header(SyncopeConstants.REST_HEADER_ID, response.getName())\r\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, response.getName())\r\n                 .build();\r\n     }\r\n \r"},{"sha":"be5d97152d159295dc32d6497c267cbb6ef65e05","filename":"core/src/main/java/org/apache/syncope/core/services/TaskServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -62,7 +62,7 @@ public <T extends SchedTaskTO> Response create(final T taskTO) {\n         }\r\n \r\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(createdTask.getId())).build();\r\n-        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, createdTask.getId()).build();\r\n+        return Response.created(location).header(SyncopeConstants.REST_RESOURCE_ID_HEADER, createdTask.getId()).build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"99637b3a1dde3bba3ad5b7ba72b15e8ef44736b0","filename":"core/src/main/java/org/apache/syncope/core/services/UserRequestServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserRequestServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -70,7 +70,7 @@ public Response create(final UserRequestTO userRequestTO) {\n \n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(outUserRequestTO.getId())).build();\n         return Response.created(location)\n-                .header(SyncopeConstants.REST_HEADER_ID, outUserRequestTO.getId())\n+                .header(SyncopeConstants.REST_RESOURCE_ID_HEADER, outUserRequestTO.getId())\n                 .build();\n     }\n "},{"sha":"81965a8a10a885855ab9cfd52d946b7f655206f7","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -72,7 +72,7 @@ public Response create(final UserTO userTO) {\n         UserTO created = controller.create(userTO);\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getId())).build();\n         return Response.created(location).\n-                header(SyncopeConstants.REST_HEADER_ID, created.getId()).\n+                header(SyncopeConstants.REST_RESOURCE_ID_HEADER, created.getId()).\n                 entity(created)\n                 .build();\n     }"},{"sha":"6501fb4c3f99ab2d050183bd4c187989125fd8a4","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":27,"deletions":34,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -46,8 +46,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -110,8 +109,8 @@ public void testUserSchemaAuthorization() {\n         assertNotNull(schemaTO);\n \n         // 4. read the schema created above (as user) - success\n-        SchemaService schemaService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(SchemaService.class);\n+        SchemaService schemaService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(\n+                SchemaService.class);\n \n         schemaTO = schemaService2.read(AttributableType.USER, SchemaType.NORMAL, schemaName);\n         assertNotNull(schemaTO);\n@@ -120,9 +119,9 @@ public void testUserSchemaAuthorization() {\n         try {\n             schemaService2.update(AttributableType.ROLE, SchemaType.NORMAL, schemaName, schemaTO);\n             fail(\"Schemaupdate as user schould not work\");\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             assertNotNull(e);\n-            assertEquals(HttpStatus.SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getType().getResponseStatus().getStatusCode());\n         } catch (AccessControlException e) {\n             // CXF Service will throw this exception\n             assertNotNull(e);\n@@ -146,23 +145,23 @@ public void testUserRead() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(userTO.getUsername(), \"password123\").\n+                getService(UserService.class);\n \n         UserTO readUserTO = userService2.read(1L);\n         assertNotNull(readUserTO);\n \n-        UserService userService3 =\n-                clientFactory.create(\"verdi\", ADMIN_PWD).getService(UserService.class);\n+        UserService userService3 = clientFactory.create(\"verdi\", ADMIN_PWD).getService(UserService.class);\n \n         SyncopeClientException exception = null;\n         try {\n             userService3.read(1L);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n+        } catch (SyncopeClientException e) {\n+            exception = e;\n         }\n         assertNotNull(exception);\n+        assertEquals(ClientExceptionType.UnauthorizedRole, exception.getType());\n     }\n \n     @Test\n@@ -180,8 +179,8 @@ public void testUserSearch() throws InvalidSearchConditionException {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        UserService userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(userTO.getUsername(), \"password123\").\n+                getService(UserService.class);\n \n         AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         isNullCond.setSchema(\"loginDate\");\n@@ -196,8 +195,7 @@ public void testUserSearch() throws InvalidSearchConditionException {\n         }\n         assertTrue(userIds.contains(1L));\n \n-        UserService userService3 =\n-                clientFactory.create(\"verdi\", \"password\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(\"verdi\", \"password\").getService(UserService.class);\n \n         matchedUsers = userService3.search(searchCondition);\n \n@@ -227,20 +225,19 @@ public void checkFailedLogins() {\n         assertNotNull(userTO);\n         long userId = userTO.getId();\n \n-        UserService userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(\n+                UserService.class);\n         assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-        UserService userService3 =\n-                clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n \n         assertEquals(2, getFailedLogins(userService, userId));\n \n-        UserService userService4 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService4 = clientFactory.create(userTO.getUsername(), \"password123\").getService(\n+                UserService.class);\n         assertEquals(0, getFailedLogins(userService4, userId));\n     }\n \n@@ -260,22 +257,20 @@ public void checkUserSuspension() {\n         long userId = userTO.getId();\n         assertNotNull(userTO);\n \n-        UserService userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(\n+                UserService.class);\n         assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-        UserService userService3 =\n-                clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n \n         assertEquals(3, getFailedLogins(userService, userId));\n \n         // last authentication before suspension\n-        userService3 =\n-                clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n+        userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n         assertReadFails(userService3, userId);\n \n         userTO = userService.read(userTO.getId());\n@@ -286,16 +281,14 @@ public void checkUserSuspension() {\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         // Access with correct credentials should fail as user is suspended\n-        userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        userService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n         assertReadFails(userService2, userId);\n \n         userTO = userService.reactivate(userTO.getId());\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        userService2 =\n-                clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n+        userService2 = clientFactory.create(userTO.getUsername(), \"password123\").getService(UserService.class);\n         assertEquals(0, getFailedLogins(userService2, userId));\n     }\n \n@@ -329,8 +322,8 @@ public void issueSYNCOPE48() {\n         role1Admin = createUser(role1Admin);\n         assertNotNull(role1Admin);\n \n-        UserService userService2 =\n-                clientFactory.create(role1Admin.getUsername(), \"password\").getService(UserService.class);\n+        UserService userService2 = clientFactory.create(role1Admin.getUsername(), \"password\").getService(\n+                UserService.class);\n \n         // User with role 1, created by user with child role created above\n         UserTO role1User = UserTestITCase.getUniqueSampleTO(\"syncope48user@apache.org\");"},{"sha":"ab7f3f6450f2bb8b0d6d5c9128f27388a6b39a24","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -38,8 +38,7 @@\n import org.apache.syncope.common.services.ConfigurationService;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.types.EntityViolationType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -57,33 +56,33 @@ public void create() {\n         Response response = configurationService.create(configurationTO);\n         assertNotNull(response);\n         assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n-        ConfigurationTO newConfigurationTO =\n-                adminClient.getObject(response.getLocation(), ConfigurationService.class, ConfigurationTO.class);\n+        ConfigurationTO newConfigurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n+                ConfigurationTO.class);\n         assertEquals(configurationTO, newConfigurationTO);\n     }\n \n     @Test\n     public void delete() throws UnsupportedEncodingException {\n         try {\n             configurationService.delete(\"nonExistent\");\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n \n         ConfigurationTO tokenLengthTO = configurationService.read(\"token.length\");\n \n         configurationService.delete(\"token.length\");\n         try {\n             configurationService.read(\"token.length\");\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n \n         Response response = configurationService.create(tokenLengthTO);\n         assertNotNull(response);\n         assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n-        ConfigurationTO newConfigurationTO =\n-                adminClient.getObject(response.getLocation(), ConfigurationService.class, ConfigurationTO.class);\n+        ConfigurationTO newConfigurationTO = adminClient.getObject(response.getLocation(), ConfigurationService.class,\n+                ConfigurationTO.class);\n         assertEquals(tokenLengthTO, newConfigurationTO);\n     }\n \n@@ -143,12 +142,12 @@ public void issueSYNCOPE418() {\n         try {\n             configurationService.create(configurationTO);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidSyncopeConf);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSyncopeConf, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertNotNull(e.getElements());\n+            assertEquals(1, e.getElements().size());\n+            assertTrue(e.getElements().iterator().next().toString().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n }"},{"sha":"4e6651e7ef86554404664227cf9028cb309c9fbe","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -51,7 +51,7 @@\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.ConnectorCapability;\n import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.identityconnectors.common.security.GuardedString;\n import org.junit.BeforeClass;\n@@ -85,7 +85,7 @@ public static void setUpConnIdBundles() throws IOException {\n         assertNotNull(connidDbTableVersion);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithException() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n@@ -149,8 +149,8 @@ public void create() {\n             throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n         }\n \n-        ConnInstanceTO actual =\n-                adminClient.getObject(response.getLocation(), ConnectorService.class, ConnInstanceTO.class);\n+        ConnInstanceTO actual = adminClient.getObject(response.getLocation(), ConnectorService.class,\n+                ConnInstanceTO.class);\n         assertNotNull(actual);\n \n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n@@ -170,7 +170,7 @@ public void create() {\n         try {\n             connectorService.update(connectorTO.getId(), connectorTO);\n             actual = connectorService.read(connectorTO.getId());\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"update failed\", e);\n             t = e;\n         }\n@@ -182,7 +182,7 @@ public void create() {\n         // check also for the deletion of the created object\n         try {\n             connectorService.delete(actual.getId());\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n             LOG.error(\"delete failed\", e);\n             t = e;\n         }\n@@ -192,8 +192,8 @@ public void create() {\n         // check the non existence\n         try {\n             connectorService.read(actual.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -341,8 +341,8 @@ public void issueSYNCOPE10() {\n     public void deleteWithException() {\n         try {\n             connectorService.delete(0L);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -697,13 +697,13 @@ public void bulkAction() {\n         try {\n             connectorService.read(Long.valueOf(iter.next()));\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n         }\n \n         try {\n             connectorService.read(Long.valueOf(iter.next()));\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n         }\n     }\n }"},{"sha":"a7bd65d89f9ce6e16ed3427755cc8573bb0b80ac","filename":"core/src/test/java/org/apache/syncope/core/rest/DerivedSchemaTestITCase.java","status":"modified","additions":13,"deletions":18,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -31,8 +31,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -78,18 +77,16 @@ public void delete() {\n \n         schemaService.delete(AttributableType.ROLE, SchemaType.DERIVED, schema.getName());\n \n-        Throwable t = null;\n         try {\n             schemaService.read(AttributableType.ROLE, SchemaType.DERIVED, \"rderiveddata\");\n-        } catch (SyncopeClientCompositeException e) {\n-            t = e;\n-            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         } finally {\n             // Recreate schema to make test re-runnable\n             schema = createSchema(AttributableType.ROLE, SchemaType.DERIVED, schema);\n             assertNotNull(schema);\n         }\n-        assertNotNull(t);\n     }\n \n     @Test\n@@ -123,18 +120,18 @@ public void issueSYNCOPE323() {\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.DERIVED, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_CONFLICT, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.EntityExists));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n         actual.setName(null);\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.DERIVED, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }\n \n@@ -147,12 +144,10 @@ public void issueSYNCOPE418() {\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.DERIVED, schema);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidRDerSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRDerSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().toString().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n }"},{"sha":"c807dba2977e51e36c2403541e334465c44f42d8","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":34,"deletions":37,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -21,7 +21,6 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n import static org.junit.Assert.fail;\n \n import java.util.List;\n@@ -34,9 +33,8 @@\n import org.apache.syncope.common.services.NotificationService;\n import org.apache.syncope.common.to.NotificationTO;\n import org.apache.syncope.common.types.IntMappingType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.TraceLevel;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -45,6 +43,31 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class NotificationTestITCase extends AbstractTest {\n \n+    private NotificationTO buildNotificationTO() {\n+        NotificationTO notificationTO = new NotificationTO();\n+        notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n+        notificationTO.getEvents().add(\"create\");\n+\n+        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond1.setSchema(\"fullname\");\n+        fullnameLeafCond1.setExpression(\"%o%\");\n+        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond2.setSchema(\"fullname\");\n+        fullnameLeafCond2.setExpression(\"%i%\");\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1),\n+                NodeCond.getLeafCond(fullnameLeafCond2));\n+\n+        notificationTO.setAbout(about);\n+\n+        notificationTO.setRecipientAttrName(\"email\");\n+        notificationTO.setRecipientAttrType(IntMappingType.UserSchema);\n+\n+        notificationTO.setSender(\"syncope@syncope.apache.org\");\n+        notificationTO.setSubject(\"Test notification\");\n+        notificationTO.setTemplate(\"test\");\n+        return notificationTO;\n+    }\n+\n     @Test\n     public void read() {\n         NotificationTO notificationTO = notificationService.read(100L);\n@@ -71,8 +94,8 @@ public void create() {\n         notificationTO.setRecipients(recipients);\n \n         Response response = notificationService.create(notificationTO);\n-        NotificationTO actual =\n-                adminClient.getObject(response.getLocation(), NotificationService.class, NotificationTO.class);\n+        NotificationTO actual = adminClient.getObject(response.getLocation(), NotificationService.class,\n+                NotificationTO.class);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n@@ -91,10 +114,9 @@ public void update() {\n         try {\n             notificationService.update(notificationTO.getId(), notificationTO);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidNotification, e.getType());\n         }\n-        assertNotNull(exception);\n \n         MembershipCond membCond = new MembershipCond();\n         membCond.setRoleId(7L);\n@@ -120,8 +142,8 @@ public void delete() {\n         try {\n             notificationService.read(notification.getId());\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n \n@@ -135,38 +157,13 @@ public void issueSYNCOPE83() {\n         try {\n             Response response = notificationService.create(notificationTO);\n             actual = adminClient.getObject(response.getLocation(), NotificationService.class, NotificationTO.class);\n-        } catch (SyncopeClientCompositeException e) {\n-            exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidNotification, e.getType());\n         }\n-        assertNull(exception);\n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n         notificationTO.setId(actual.getId());\n         assertEquals(actual, notificationTO);\n     }\n \n-    private NotificationTO buildNotificationTO() {\n-        NotificationTO notificationTO = new NotificationTO();\n-        notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n-        notificationTO.getEvents().add(\"create\");\n-\n-        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond1.setSchema(\"fullname\");\n-        fullnameLeafCond1.setExpression(\"%o%\");\n-        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond2.setSchema(\"fullname\");\n-        fullnameLeafCond2.setExpression(\"%i%\");\n-        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1),\n-                NodeCond.getLeafCond(fullnameLeafCond2));\n-\n-        notificationTO.setAbout(about);\n-\n-        notificationTO.setRecipientAttrName(\"email\");\n-        notificationTO.setRecipientAttrType(IntMappingType.UserSchema);\n-\n-        notificationTO.setSender(\"syncope@syncope.apache.org\");\n-        notificationTO.setSubject(\"Test notification\");\n-        notificationTO.setTemplate(\"test\");\n-        return notificationTO;\n-    }\n }"},{"sha":"8e4b9fd1ae901df015c704bd9957f1b1a5d8072d","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -30,8 +30,8 @@\n import org.apache.syncope.common.types.PasswordPolicySpec;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -81,8 +81,8 @@ public void createWithException() {\n         try {\n             createPolicy(policy);\n             fail();\n-        } catch (SyncopeClientCompositeException sccee) {\n-            assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidPasswordPolicy));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidPasswordPolicy, e.getType());\n         }\n     }\n \n@@ -94,8 +94,8 @@ public void createMissingDescription() {\n         try {\n             createPolicy(policy);\n             fail();\n-        } catch (SyncopeClientCompositeException sccee) {\n-            assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidSyncPolicy));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSyncPolicy, e.getType());\n         }\n     }\n \n@@ -150,14 +150,12 @@ public void delete() {\n \n         policyService.delete(policyTO.getId());\n \n-        Throwable t = null;\n         try {\n             policyService.read(policyTO.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            t = e;\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertNotNull(e);\n         }\n-\n-        assertNotNull(t);\n     }\n \n     @Test"},{"sha":"59118e4f15cdcf3c28a0800406879a7537ae061d","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.common.to.ReportTO;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n import org.apache.syncope.common.types.ReportExecStatus;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -141,8 +141,8 @@ public void delete() {\n         try {\n             reportService.read(report.getId());\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n "},{"sha":"b1ec61c2f37120df7627d5b95068a7d38b27e426","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":22,"deletions":29,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -46,8 +46,7 @@\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -230,17 +229,13 @@ public void createWithInvalidMapping() {\n         try {\n             createResource(resourceTO);\n             fail(\"Create should not have worked\");\n-        } catch (SyncopeClientCompositeException e) {\n-            SyncopeClientException requiredValueMissing = e\n-                    .getException(SyncopeClientExceptionType.RequiredValuesMissing);\n-            assertNotNull(requiredValueMissing);\n-            assertNotNull(requiredValueMissing.getElements());\n-            assertEquals(1, requiredValueMissing.getElements().size());\n-            assertEquals(\"intAttrName\", requiredValueMissing.getElements().iterator().next());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n+            assertEquals(\"intAttrName\", e.getElements().iterator().next());\n         }\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithoutExtAttr() {\n         String resourceName = \"ws-target-resource-create-wrong\";\n         ResourceTO resourceTO = new ResourceTO();\n@@ -303,8 +298,8 @@ public void updateWithException() {\n             resourceTO.setName(\"resourcenotfound\");\n \n             resourceService.update(resourceTO.getName(), resourceTO);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -359,8 +354,8 @@ public void update() {\n     public void deleteWithException() {\n         try {\n             resourceService.delete(\"resourcenotfound\");\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -392,8 +387,8 @@ public void delete() {\n \n         try {\n             resourceService.read(resourceName);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -432,18 +427,18 @@ public void issueSYNCOPE323() {\n         try {\n             createResource(actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_CONFLICT, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.EntityExists));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n         actual.setName(null);\n         try {\n             createResource(actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }\n \n@@ -466,13 +461,13 @@ public void bulkAction() {\n         try {\n             resourceService.read(\"forBulk1\");\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n         }\n \n         try {\n             resourceService.read(\"forBulk2\");\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n+        } catch (SyncopeClientException e) {\n         }\n     }\n \n@@ -528,12 +523,10 @@ public void issueSYNCOPE418() {\n             resourceService.create(\n                     buildResourceTO(\"http://schemas.examples.org/security/authorization/organizationUnit\"));\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidExternalResource);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidExternalResource, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().toString().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n "},{"sha":"7b29fa83f16773118fd3dfa32cc3ef9beec1d831","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":16,"deletions":22,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -38,8 +38,7 @@\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -86,8 +85,8 @@ public void createWithException() {\n         try {\n             createRole(roleService, newRoleTO);\n             fail();\n-        } catch (SyncopeClientCompositeException sccee) {\n-            assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidSyncopeRole));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSyncopeRole, e.getType());\n         }\n     }\n \n@@ -139,8 +138,8 @@ public void createWithPasswordPolicy() {\n     public void delete() {\n         try {\n             roleService.delete(0L);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n \n         RoleTO roleTO = new RoleTO();\n@@ -157,8 +156,8 @@ public void delete() {\n \n         try {\n             roleService.read(deletedRole.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -197,17 +196,14 @@ public void selfRead() {\n         assertTrue(userTO.getMembershipMap().containsKey(1L));\n         assertFalse(userTO.getMembershipMap().containsKey(3L));\n \n-        RoleService roleService2 =\n-                clientFactory.create(\"rossini\", ADMIN_PWD).getService(RoleService.class);\n+        RoleService roleService2 = clientFactory.create(\"rossini\", ADMIN_PWD).getService(RoleService.class);\n \n-        SyncopeClientException exception = null;\n         try {\n             roleService2.selfRead(3L);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.UnauthorizedRole, e.getType());\n         }\n-        assertNotNull(exception);\n \n         RoleTO roleTO = roleService2.selfRead(1L);\n         assertNotNull(roleTO);\n@@ -310,21 +306,19 @@ public void updateAsRoleOwner() {\n         roleMod.setName(\"Managing Director\");\n \n         // 3. try to update as verdi, not owner of role 7 - fail\n-        RoleService roleService2 =\n-                clientFactory.create(\"verdi\", ADMIN_PWD).getService(RoleService.class);\n+        RoleService roleService2 = clientFactory.create(\"verdi\", ADMIN_PWD).getService(RoleService.class);\n \n         try {\n             roleService2.update(roleMod.getId(), roleMod);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_FORBIDDEN, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getType().getResponseStatus().getStatusCode());\n         } catch (AccessControlException e) {\n             assertNotNull(e);\n         }\n \n         // 4. update as puccini, owner of role 7 because owner of role 6 with inheritance - success\n-        RoleService roleService3 =\n-                clientFactory.create(\"puccini\", ADMIN_PWD).getService(RoleService.class);\n+        RoleService roleService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(RoleService.class);\n \n         roleTO = roleService3.update(roleMod.getId(), roleMod);\n         assertEquals(\"Managing Director\", roleTO.getName());\n@@ -496,8 +490,8 @@ public void createWithMandatorySchemaNotTemplate() {\n         try {\n             roleService.update(roleMod.getId(), roleMod);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n \n         // 4. also add an actual attribute for badge - it will work        "},{"sha":"cb22d0a5dbc65f250ffacc121de42b4f4ab014a3","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":31,"deletions":41,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -38,9 +38,8 @@\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.AttributableOperations;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -77,12 +76,11 @@ public void createWithNotPermittedName() {\n         try {\n             createSchema(AttributableType.USER, SchemaType.NORMAL, schemaTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidUSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidUSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().toString().\n+                    contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n \n@@ -95,13 +93,11 @@ public void createREnumWithoutEnumeration() {\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, schemaTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidRSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next()\n-                    .contains(EntityViolationType.InvalidSchemaEnum.name()));\n+            assertTrue(e.getElements().iterator().next().toString().\n+                    contains(EntityViolationType.InvalidSchemaEnum.name()));\n         }\n     }\n \n@@ -114,13 +110,11 @@ public void createUEnumWithoutEnumeration() {\n         try {\n             createSchema(AttributableType.USER, SchemaType.NORMAL, schemaTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidUSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidUSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next()\n-                    .contains(EntityViolationType.InvalidSchemaEnum.name()));\n+            assertTrue(e.getElements().iterator().next().toString().\n+                    contains(EntityViolationType.InvalidSchemaEnum.name()));\n         }\n     }\n \n@@ -134,8 +128,8 @@ public void delete() {\n         SchemaTO firstname = null;\n         try {\n             firstname = schemaService.read(AttributableType.USER, SchemaType.NORMAL, schemaTO.getName());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n         assertNull(firstname);\n     }\n@@ -174,9 +168,8 @@ public void update() {\n         try {\n             schemaService.update(AttributableType.ROLE, SchemaType.NORMAL, schemaTO.getName(), updatedTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidRSchema);\n-            assertNotNull(sce);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRSchema, e.getType());\n         }\n     }\n \n@@ -199,9 +192,8 @@ public void issue258() {\n         try {\n             schemaService.update(AttributableType.USER, SchemaType.NORMAL, schemaTO.getName(), schemaTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidUSchema);\n-            assertNotNull(sce);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidUSchema, e.getType());\n         }\n     }\n \n@@ -246,9 +238,8 @@ public void issue260() {\n         try {\n             schemaService.update(AttributableType.USER, SchemaType.NORMAL, schemaTO.getName(), schemaTO);\n             fail(\"This should not be reacheable\");\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidUSchema);\n-            assertNotNull(sce);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidUSchema, e.getType());\n         }\n     }\n \n@@ -260,18 +251,18 @@ public void issueSYNCOPE323() {\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_CONFLICT, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.EntityExists));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n         actual.setName(null);\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }\n \n@@ -283,12 +274,11 @@ public void issueSYNCOPE418() {\n         try {\n             createSchema(AttributableType.ROLE, SchemaType.NORMAL, schema);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidRSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().toString().\n+                    contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n "},{"sha":"e964d10548fefb505c80f4c069fb303c0897cc75","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -58,7 +58,7 @@\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n@@ -201,8 +201,8 @@ public void readExecution() {\n     public void deal() {\n         try {\n             taskService.delete(0L);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n         TaskExecTO exec = taskService.execute(1L, false);\n         assertEquals(PropagationTaskExecStatus.SUBMITTED.name(), exec.getStatus());\n@@ -218,8 +218,8 @@ public void deal() {\n         taskService.delete(1L);\n         try {\n             taskService.readExecution(exec.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n "},{"sha":"f5802435710f26ed2cb301db817626acca7dbaf7","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -41,9 +41,10 @@\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.UserRequestTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.UserRequestType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n+import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -81,8 +82,8 @@ public void create() throws InvalidSearchConditionException {\n         try {\n             createUserRequest(anonymousUserRequestService, new UserRequestTO(userTO));\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.UnauthorizedRole, e.getType());\n         }\n \n         // 3. set create request allowed\n@@ -128,8 +129,8 @@ public void update() {\n         try {\n             createUserRequest(userRequestService, new UserRequestTO(userMod));\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.UnauthorizedRole, e.getType());\n         }\n \n         // 3. auth as user just created\n@@ -140,8 +141,8 @@ public void update() {\n         try {\n             createUserRequest(userRequestService2, new UserRequestTO(userMod));\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertNotNull(scce.getException(SyncopeClientExceptionType.InvalidSyncopeUser));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSyncopeUser, e.getType());\n         }\n \n         // 5. now request user update works\n@@ -186,8 +187,8 @@ public void delete() {\n         try {\n             createUserRequest(userRequestService, new UserRequestTO(userTO.getId()));\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.UnauthorizedRole));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.UnauthorizedRole, e.getType());\n         }\n \n         // 3. auth as user just created\n@@ -208,8 +209,8 @@ public void delete() {\n         try {\n             userService.read(userTO.getId());\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -333,7 +334,7 @@ public void execute() {\n         assertEquals(3, userRequestService.listByUsername(userTO.getUsername()).size());\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void executeNoClaim() {\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"reqnoclaim@syncope.apache.org\");\n "},{"sha":"663f8edad28f0f12c4bd0e91de9a470e617c1345","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":53,"deletions":64,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -69,10 +69,9 @@\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.util.AttributableOperations;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n@@ -147,8 +146,8 @@ public void selfRead() {\n         try {\n             userService2.read(1L);\n             fail();\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_FORBIDDEN, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getType().getResponseStatus().getStatusCode());\n         } catch (AccessControlException e) {\n             // Will be thrown by cxf service\n             assertNotNull(e);\n@@ -235,13 +234,12 @@ public void issue186() {\n         userMod.setPassword(\"newPassword\");\n         userMod.getResourcesToAdd().add(\"ws-target-resource-2\");\n \n-        SyncopeClientException sce = null;\n         try {\n             userTO = userService.update(userMod.getId(), userMod);\n-        } catch (SyncopeClientCompositeException scce) {\n-            sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n-        assertNotNull(sce);\n \n         // 3. update assigning a resource NOT forcing mandatory constraints\n         // AND primary: must fail with PropagationException\n@@ -260,13 +258,12 @@ public void issue186() {\n         userMod.setPassword(\"newPassword\");\n         userMod.getResourcesToAdd().add(\"resource-db\");\n \n-        sce = null;\n         try {\n             userTO = userService.update(userMod.getId(), userMod);\n-        } catch (SyncopeClientCompositeException scce) {\n-            sce = scce.getException(SyncopeClientExceptionType.InvalidSyncopeUser);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidSyncopeUser, e.getType());\n         }\n-        assertNotNull(sce);\n     }\n \n     @Test\n@@ -284,13 +281,12 @@ public void testEnforceMandatoryCondition() {\n         assertNotNull(type);\n         userTO.getAttrs().remove(type);\n \n-        SyncopeClientException sce = null;\n         try {\n             userTO = createUser(userTO);\n-        } catch (SyncopeClientCompositeException scce) {\n-            sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n-        assertNotNull(sce);\n \n         userTO.getAttrs().add(type);\n         userTO = createUser(userTO);\n@@ -312,13 +308,12 @@ public void testEnforceMandatoryConditionOnDerived() {\n         userTO.getResources().add(resourceTO.getName());\n         userTO.setPassword(\"newPassword\");\n \n-        SyncopeClientException sce = null;\n         try {\n             userTO = createUser(userTO);\n-        } catch (SyncopeClientCompositeException scce) {\n-            sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n-        assertNotNull(sce);\n \n         userTO.getDerAttrs().add(attributeTO(\"csvuserid\", null));\n \n@@ -337,14 +332,14 @@ public void createUserWithDbPropagation() {\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithInvalidPassword() {\n         UserTO userTO = getSampleTO(\"invalidpasswd@syncope.apache.org\");\n         userTO.setPassword(\"pass\");\n         createUser(userTO);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithInvalidUsername() {\n         UserTO userTO = getSampleTO(\"invalidusername@syncope.apache.org\");\n         userTO.setUsername(\"us\");\n@@ -357,7 +352,7 @@ public void createWithInvalidUsername() {\n         createUser(userTO);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithInvalidPasswordByRes() {\n         UserTO userTO = getSampleTO(\"invalidPwdByRes@passwd.com\");\n \n@@ -369,7 +364,7 @@ public void createWithInvalidPasswordByRes() {\n         createUser(userTO);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithInvalidPasswordByRole() {\n         UserTO userTO = getSampleTO(\"invalidPwdByRole@passwd.com\");\n \n@@ -384,7 +379,7 @@ public void createWithInvalidPasswordByRole() {\n         createUser(userTO);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void createWithException() {\n         UserTO newUserTO = new UserTO();\n         newUserTO.getAttrs().add(attributeTO(\"userId\", \"userId@nowhere.org\"));\n@@ -493,13 +488,12 @@ public void create() {\n         userIdAttr.getValues().clear();\n         userIdAttr.getValues().add(\"a.b@c.com\");\n \n-        SyncopeClientException sce = null;\n         try {\n             createUser(userTO);\n-        } catch (SyncopeClientCompositeException e) {\n-            sce = e.getException(SyncopeClientExceptionType.DataIntegrityViolation);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.DataIntegrityViolation, e.getType());\n         }\n-        assertNotNull(sce);\n     }\n \n     private AttributeTO getManadatoryAttrByName(List<AttributeTO> attributes, String attrName) {\n@@ -522,30 +516,26 @@ public void createWithRequiredValueMissing() {\n         membershipTO.setRoleId(8L);\n         userTO.getMemberships().add(membershipTO);\n \n-        SyncopeClientCompositeException ex = null;\n+        // 1. create user without type (mandatory by UserSchema)\n         try {\n-            // 1. create user without type (mandatory by UserSchema)\n             createUser(userTO);\n-        } catch (SyncopeClientCompositeException e) {\n-            ex = e;\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n-        assertNotNull(ex);\n-        assertNotNull(ex.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n \n         userTO.getAttrs().add(attributeTO(\"type\", \"F\"));\n \n         AttributeTO surname = getManadatoryAttrByName(userTO.getAttrs(), \"surname\");\n         userTO.getAttrs().remove(surname);\n \n         // 2. create user without surname (mandatory when type == 'F')\n-        ex = null;\n         try {\n             createUser(userTO);\n-        } catch (SyncopeClientCompositeException e) {\n-            ex = e;\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n-        assertNotNull(ex);\n-        assertNotNull(ex.getException(SyncopeClientExceptionType.RequiredValuesMissing));\n     }\n \n     @Test\n@@ -582,8 +572,8 @@ public void createWithReject() {\n         try {\n             userService2.claimForm(form.getTaskId());\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertNotNull(scce.getException(SyncopeClientExceptionType.Workflow));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.Workflow, e.getType());\n         }\n \n         // 4. claim task from bellini, in role 7\n@@ -697,8 +687,8 @@ public void createWithApproval() {\n     public void delete() {\n         try {\n             userService.delete(0L);\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n \n         UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n@@ -722,8 +712,8 @@ public void delete() {\n \n         try {\n             userService.delete(userTO.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -750,8 +740,8 @@ public void deleteByUsername() {\n \n         try {\n             userService.read(userTO.getId());\n-        } catch (SyncopeClientCompositeException e) {\n-            assertEquals(HttpStatus.SC_NOT_FOUND, e.getStatusCode());\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_NOT_FOUND, e.getType().getResponseStatus().getStatusCode());\n         }\n     }\n \n@@ -831,7 +821,7 @@ public void updateWithouPassword() {\n         assertFalse(userTO.getDerAttrMap().containsKey(\"cn\"));\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void updateInvalidPassword() {\n         UserTO userTO = getSampleTO(\"updateinvalid@password.com\");\n \n@@ -842,10 +832,10 @@ public void updateInvalidPassword() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"pass\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userService.update(userMod.getId(), userMod);\n     }\n \n-    @Test(expected = SyncopeClientCompositeException.class)\n+    @Test(expected = SyncopeClientException.class)\n     public void updateSamePassword() {\n         UserTO userTO = getSampleTO(\"updatesame@password.com\");\n \n@@ -856,7 +846,7 @@ public void updateSamePassword() {\n         userMod.setId(userTO.getId());\n         userMod.setPassword(\"password123\");\n \n-        userTO = userService.update(userMod.getId(), userMod);\n+        userService.update(userMod.getId(), userMod);\n     }\n \n     @Test\n@@ -1374,8 +1364,8 @@ public void issue288() {\n         try {\n             createUser(userTO);\n             fail();\n-        } catch (SyncopeClientCompositeException sccee) {\n-            assertNotNull(sccee.getException(SyncopeClientExceptionType.InvalidValues));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidValues, e.getType());\n         }\n     }\n \n@@ -1542,8 +1532,8 @@ public void issueSYNCOPE108() {\n         try {\n             readConnectorObject(RESOURCE_NAME_CSV, actual.getId());\n             fail(\"Read should not succeeed\");\n-        } catch (SyncopeClientCompositeException e) {\n-            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n \n@@ -1634,9 +1624,8 @@ public void issueSYNCOPE185() {\n         try {\n             readConnectorObject(RESOURCE_NAME_LDAP, userTO.getId());\n             fail(\"This entry should not be present on this resource\");\n-        } catch (SyncopeClientCompositeException sccee) {\n-            SyncopeClientException sce = sccee.getException(SyncopeClientExceptionType.NotFound);\n-            assertNotNull(sce);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n \n@@ -1659,9 +1648,9 @@ public void issueSYNCOPE51() {\n         try {\n             createUser(userTO);\n             fail(\"Create user should not succeed\");\n-        } catch (SyncopeClientCompositeException e) {\n-            assertTrue(e.getException(SyncopeClientExceptionType.NotFound).getElements().iterator().next()\n-                    .contains(\"MD5\"));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+            assertTrue(e.getElements().iterator().next().toString().contains(\"MD5\"));\n         }\n \n         configurationService.update(defaultConfigurationTO.getKey(), defaultConfigurationTO);\n@@ -2199,8 +2188,8 @@ public void issueSYNCOPE357() {\n         try {\n             resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.USER, userTO.getId());\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertNotNull(scce.getException(SyncopeClientExceptionType.NotFound));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n "},{"sha":"3bcc4f907d02a695ae92f52a81b4871c550683a7","filename":"core/src/test/java/org/apache/syncope/core/rest/VirtualSchemaTestITCase.java","status":"modified","additions":13,"deletions":18,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e18903cbe1f3cbbb6a101c55d50c728460765142/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java?ref=e18903cbe1f3cbbb6a101c55d50c728460765142","patch":"@@ -31,8 +31,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.SchemaType;\n-import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -76,14 +75,12 @@ public void delete() {\n \n         schemaService.delete(AttributableType.ROLE, SchemaType.VIRTUAL, schema.getName());\n \n-        Throwable t = null;\n         try {\n             schemaService.read(AttributableType.ROLE, SchemaType.VIRTUAL, \"rvirtualdata\");\n-        } catch (SyncopeClientCompositeException e) {\n-            t = e;\n-            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n-        assertNotNull(t);\n     }\n \n     @Test\n@@ -94,18 +91,18 @@ public void issueSYNCOPE323() {\n         try {\n             createSchema(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_CONFLICT, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.EntityExists));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_CONFLICT, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.EntityExists, e.getType());\n         }\n \n         actual.setName(null);\n         try {\n             createSchema(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL, actual);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            assertEquals(HttpStatus.SC_BAD_REQUEST, scce.getStatusCode());\n-            assertTrue(scce.hasException(SyncopeClientExceptionType.RequiredValuesMissing));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(HttpStatus.SC_BAD_REQUEST, e.getType().getResponseStatus().getStatusCode());\n+            assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n     }\n \n@@ -117,12 +114,10 @@ public void issueSYNCOPE418() {\n         try {\n             createSchema(AttributableType.MEMBERSHIP, SchemaType.VIRTUAL, schema);\n             fail();\n-        } catch (SyncopeClientCompositeException scce) {\n-            SyncopeClientException sce = scce.getException(SyncopeClientExceptionType.InvalidMVirSchema);\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidMVirSchema, e.getType());\n \n-            assertNotNull(sce.getElements());\n-            assertEquals(1, sce.getElements().size());\n-            assertTrue(sce.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().toString().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n }"}]}