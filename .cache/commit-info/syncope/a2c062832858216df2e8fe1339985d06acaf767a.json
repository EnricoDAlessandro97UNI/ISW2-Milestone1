{"sha":"a2c062832858216df2e8fe1339985d06acaf767a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyYzA2MjgzMjg1ODIxNmRmMmU4ZmUxMzM5OTg1ZDA2YWNhZjc2N2E=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-15T08:57:56Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-15T08:57:56Z"},"message":"bug-fix resource creation\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246389 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cedacefb0c39b019004545162336ed1fcc2f3702","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cedacefb0c39b019004545162336ed1fcc2f3702"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a2c062832858216df2e8fe1339985d06acaf767a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2c062832858216df2e8fe1339985d06acaf767a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2c062832858216df2e8fe1339985d06acaf767a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2c062832858216df2e8fe1339985d06acaf767a/comments","author":null,"committer":null,"parents":[{"sha":"eb780233fed24cad1e02556ddf53ae2557328112","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb780233fed24cad1e02556ddf53ae2557328112","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb780233fed24cad1e02556ddf53ae2557328112"}],"stats":{"total":67,"additions":50,"deletions":17},"files":[{"sha":"6d2300b4995ddd876f0f7af6dcd73b186befba1f","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -22,9 +22,9 @@ public enum SyncopeClientExceptionType {\n     InvalidPassword(\n     \"Syncope.InvalidPassword\",\n     \"Syncope.InvalidPassword.reason\"),\n-    InvalidSchemaUpdate(\n-    \"Syncope.InvalidSchemaUpdate\",\n-    \"\"),\n+    InvalidUpdate(\n+    \"Syncope.InvalidUpdate\",\n+    \"Syncope.InvalidUpdate.name\"),\n     InvalidUniques(\n     \"Syncope.InvalidUniques\",\n     \"Syncope.InvalidUniques.attributeName\"),\n@@ -40,15 +40,15 @@ public enum SyncopeClientExceptionType {\n     RequiredValuesMissing(\n     \"Syncope.RequiredValuesMissing\",\n     \"Syncope.RequiredValuesMissing.attributeName\"),\n-    UserInvalidValues(\n-    \"Syncope.InvalidValues\",\n-    \"Syncope.InvalidValues.attributeName\"),\n     Propagation(\n     \"Syncope.Propagation\",\n     \"Syncope.Propagation.resourceName\"),\n     RequiredValueMissing(\n     \"Syncope.RequiredValuesMissing\",\n     \"Syncope.RequiredValuesMissing.attributeName\"),\n+    AlreadyExists(\n+    \"Syncope.AlreadyExists\",\n+    \"Syncope.AlreadyExists.name\"),\n     Unknown(\n     \"Syncope.Unknown\",\n     \"\"),"},{"sha":"4a16a35443986283bb92eb8b182cd9b8fe442e9b","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RoleSchema.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -36,7 +36,7 @@ public class RoleSchema extends AbstractSchema {\n     /**\n      * All the mappings of the attribute schema.\n      */\n-    @OneToMany(cascade = CascadeType.ALL,\n+    @OneToMany(cascade = CascadeType.MERGE,\n     fetch = FetchType.EAGER, mappedBy = \"roleSchema\")\n     private Set<SchemaMapping> mappings;\n "},{"sha":"e85871ff88356d50c26c732b6a388fc3c454238e","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UserSchema.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -38,7 +38,7 @@ public class UserSchema extends AbstractSchema {\n     /**\n      * All the mappings of the attribute schema.\n      */\n-    @OneToMany(cascade = CascadeType.ALL,\n+    @OneToMany(cascade = CascadeType.MERGE,\n     fetch = FetchType.EAGER, mappedBy = \"userSchema\")\n     private Set<SchemaMapping> mappings;\n "},{"sha":"2093754b835d8ee06528b65c8279a983e5790a3e","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":18,"deletions":4,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -73,9 +73,6 @@ public ResourceTO create(HttpServletResponse response,\n             log.debug(\"Creation request received\");\n         }\n \n-        ResourceDataBinder binder =\n-                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n-\n         if (resourceTO == null) {\n             if (log.isErrorEnabled()) {\n                 log.error(\"Missing resource.\");\n@@ -84,15 +81,32 @@ public ResourceTO create(HttpServletResponse response,\n             return throwNotFoundException(\"Resource not found\", response);\n         }\n \n+        ResourceDataBinder binder =\n+                new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n+\n         Resource actual = null;\n \n         try {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Verify that resource dosn't exist\");\n+            }\n+\n+            Resource resource = null;\n+\n+            if (resourceDAO.find(resourceTO.getName()) != null) {\n+                SyncopeClientException ex = new SyncopeClientException(\n+                        SyncopeClientExceptionType.AlreadyExists);\n+\n+                ex.addElement(resourceTO.getName());\n+\n+                throw ex;\n+            }\n \n             if (log.isDebugEnabled()) {\n                 log.debug(\"Resource data binder ..\");\n             }\n \n-            Resource resource = binder.getResource(resourceTO);\n+            resource = binder.getResource(resourceTO);\n \n             if (log.isInfoEnabled()) {\n                 log.info(\"Create resource \" + resource.getName());"},{"sha":"a05c32d108e11786cac148fae2dd025934d8de7c","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -200,7 +200,7 @@ public SchemaMapping getSchemaMapping(\n         RoleSchema roleSchema = null;\n         if (mapping.getRoleSchema() != null) {\n             roleSchema = schemaDAO.find(\n-                    mapping.getUserSchema(), RoleSchema.class);\n+                    mapping.getRoleSchema(), RoleSchema.class);\n         }\n \n         // at least one schema must be provided"},{"sha":"bf1d783b210ad1aafd3532e3660d31662d78e2d6","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -123,8 +123,13 @@ public <T extends AbstractSchema, K extends AbstractDerivedSchema> T updateSchem\n                 SyncopeClientCompositeErrorException sccee =\n                         new SyncopeClientCompositeErrorException(\n                         HttpStatus.BAD_REQUEST);\n-                sccee.addException(new SyncopeClientException(\n-                        SyncopeClientExceptionType.InvalidSchemaUpdate));\n+\n+                SyncopeClientException ex = new SyncopeClientException(\n+                        SyncopeClientExceptionType.InvalidUpdate);\n+\n+                ex.addElement(schema.getName());\n+                sccee.addException(ex);\n+                \n                 throw sccee;\n             }\n "},{"sha":"dc66915bd3756931d217707292169d6749eb54d2","filename":"core/src/test/java/org/syncope/core/test/rest/ResourceTestITCase.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FResourceTestITCase.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -19,18 +19,32 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n+import org.springframework.test.annotation.ExpectedException;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.ResourceTOs;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.to.SchemaMappingTOs;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.core.persistence.dao.SchemaDAO;\n \n public class ResourceTestITCase extends AbstractTestITCase {\n \n     @Autowired\n     SchemaDAO schemaDAO;\n \n+    @Test\n+    @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n+    public void createExistingResource() {\n+        final String resourceName = \"ws-target-resource-1\";\n+        ResourceTO resourceTO = new ResourceTO();\n+\n+        resourceTO.setName(resourceName);\n+\n+        restTemplate.postForObject(BASE_URL + \"resource/create.json\",\n+                resourceTO, ResourceTO.class);\n+    }\n+\n     @Test\n     public void create() {\n         final String resourceName = \"ws-target-resource-create\";\n@@ -85,7 +99,7 @@ public void updateWithException() {\n         }\n     }\n \n-    //@Test\n+    @Test\n     public void update() {\n         final String resourceName = \"ws-target-resource-update\";\n         ResourceTO resourceTO = new ResourceTO();"},{"sha":"7f757bb4a830652a0dc99d21b30a06027957e109","filename":"core/src/test/java/org/syncope/core/test/rest/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2c062832858216df2e8fe1339985d06acaf767a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FSchemaTestITCase.java?ref=a2c062832858216df2e8fe1339985d06acaf767a","patch":"@@ -82,7 +82,7 @@ public void update() {\n                     + \"schema/role/update\", updatedTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             syncopeClientException = e.getException(\n-                    SyncopeClientExceptionType.InvalidSchemaUpdate);\n+                    SyncopeClientExceptionType.InvalidUpdate);\n         }\n         assertNotNull(syncopeClientException);\n     }"}]}