{"sha":"cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNiNjJmYmNjMWYxZDkzZDJmYTA4OWU5YjVkY2ExNjE5YTU4ODQ2MjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-03-25T09:30:45Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-03-25T09:30:45Z"},"message":"[SYNCOPE-1545]  Adding WA > Auth Modules (#249)","tree":{"sha":"cdd1cba30a1908f277aaedcad2b22263e49f05c6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cdd1cba30a1908f277aaedcad2b22263e49f05c6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgXFhFCRBK7hj4Ov3rIwAAdHIIAEHZ2K7nLYyopsPn8o9xYWXX\nvipYMIMiTCCMAhdvc3ql0i1smGYELhA4QjdPoR5CZsU2jQnmyd+aClqxWw8ZQiq+\n3xyLgf82pQnBRy76U44AdhDF+uUiDNkP4MFoK0OIUio/JHiNiwsP31OWu7unbYJ1\nJ36hyivo1BJYy45ftauBGWAfa9redK2O5aeolx8ykemT7qThD5Y3kgzLIv3hiX2a\nK2lapQc5p+DhECX96pBj6G9wD7P8kSxikQEwFMPlN05VG3o+4oA6QFQOXvXpsxeI\nPNDsTWzQw2PnHhaKKf8KkNcoAElHvhTS96caNNlLWS50ugs2VDSsoTaN8yquHc8=\n=uYuh\n-----END PGP SIGNATURE-----\n","payload":"tree cdd1cba30a1908f277aaedcad2b22263e49f05c6\nparent 77e396f7a48f3f27fd2e16974979c676a4a59110\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1616664645 +0100\ncommitter GitHub <noreply@github.com> 1616664645 +0100\n\n[SYNCOPE-1545]  Adding WA > Auth Modules (#249)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"77e396f7a48f3f27fd2e16974979c676a4a59110","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/77e396f7a48f3f27fd2e16974979c676a4a59110","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/77e396f7a48f3f27fd2e16974979c676a4a59110"}],"stats":{"total":4167,"additions":3473,"deletions":694},"files":[{"sha":"1315eef0e05c4bc2e4578b530c62f05dd7d75834","filename":"archetype/pom.xml","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -325,6 +325,8 @@ under the License.\n         <includes>\n           <include>application.properties</include>\n           <include>cas-theme-default.properties</include>\n+          <include>wa.properties</include>\n+          <include>log4j2.xml</include>\n         </includes>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n       </resource>\n@@ -333,14 +335,6 @@ under the License.\n         <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/main/resources</targetPath>\n         <includes>\n           <include>application-embedded.properties</include>\n-          <include>log4j2.xml</include>\n-        </includes>\n-      </resource>\n-      <resource>\n-        <directory>../fit/wa-reference/src/main/resources</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/wa/src/test/resources</targetPath>\n-        <includes>\n-          <include>wa.properties</include>\n           <include>keymaster.properties</include>\n         </includes>\n       </resource>"},{"sha":"b3882fe1d32d55c4dae4a85d568127512176aeb4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/SyncopeAMConsoleContext.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.commons.AMPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.AMRealmPolicyProvider;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n+import org.apache.syncope.client.console.init.AMClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class SyncopeAMConsoleContext {\n+\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        AMClassPathScanImplementationLookup lookup = new AMClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n+    }\n+\n+    @Bean\n+    public RealmPolicyProvider realmPolicyProvider() {\n+        return new AMRealmPolicyProvider();\n+    }\n+\n+    @Bean\n+    public PolicyTabProvider amPolicyTabProvider() {\n+        return new AMPolicyTabProvider();\n+    }\n+}"},{"sha":"57f3e2e56ed0d8fef3d695e011e06a4a1c3d249e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMConstants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,6 +22,10 @@ public final class AMConstants {\n \n     public static final String PREF_GATEWAYROUTE_PAGINATOR_ROWS = \"gatewayroute.paginator.rows\";\n \n+    public static final String PREF_WACONFIG_PAGINATOR_ROWS = \"waconfig.paginator.rows\";\n+\n+    public static final String PREF_AUTHMODULE_PAGINATOR_ROWS = \"authmodule.paginator.rows\";\n+\n     private AMConstants() {\n         // private constructor for static utility class\n     }"},{"sha":"488548123ae1f118d0beae3e4e15a4dacf5993fc","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMPolicyTabProvider.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.policies.AccessPolicyDirectoryPanel;\n+import org.apache.syncope.client.console.policies.AttrReleasePolicyDirectoryPanel;\n+import org.apache.syncope.client.console.policies.AuthPolicyDirectoryPanel;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class AMPolicyTabProvider implements PolicyTabProvider {\n+\n+    private static final long serialVersionUID = 2822554006571803418L;\n+\n+    @Override\n+    public int getOrder() {\n+        return 200;\n+    }\n+\n+    @Override\n+    public List<ITab> buildTabList(final PageReference pageRef) {\n+        List<ITab> tabs = new ArrayList<>();\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"policy.access\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AccessPolicyDirectoryPanel(panelId, pageRef);\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"policy.attrRelease\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AttrReleasePolicyDirectoryPanel(panelId, pageRef);\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"policy.auth\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AuthPolicyDirectoryPanel(panelId, pageRef);\n+            }\n+        });\n+\n+        return tabs;\n+    }\n+}"},{"sha":"5590dfcf510f87278b8539fd099b4bbdc6832f89","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMRealmPolicyProvider.java","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.policy.PolicyTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class AMRealmPolicyProvider extends IdRepoRealmPolicyProvider {\n+\n+    private static final long serialVersionUID = 1671878489700L;\n+\n+    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.getPolicies(PolicyType.ACCESS).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n+        }\n+    };\n+\n+    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<Map<String, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.getPolicies(PolicyType.ATTR_RELEASE).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n+        }\n+    };\n+\n+    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.getPolicies(PolicyType.AUTH).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n+        }\n+    };\n+\n+    @Override\n+    public void add(final RealmTO realmTO, final RepeatingView view) {\n+        super.add(realmTO, view);\n+\n+        AjaxDropDownChoicePanel<String> accessPolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"accessPolicy\", \"accessPolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"accessPolicy\"),\n+                false);\n+        accessPolicy.setChoiceRenderer(new PolicyRenderer(accessPolicies));\n+        accessPolicy.setChoices(new ArrayList<>(accessPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) accessPolicy.getField()).setNullValid(true);\n+        view.add(accessPolicy);\n+\n+        AjaxDropDownChoicePanel<String> attrReleasePolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"attrReleasePolicy\", \"attrReleasePolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"attrReleasePolicy\"),\n+                false);\n+        attrReleasePolicy.setChoiceRenderer(new PolicyRenderer(attrReleasePolicies));\n+        attrReleasePolicy.setChoices(new ArrayList<>(attrReleasePolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) attrReleasePolicy.getField()).setNullValid(true);\n+        view.add(attrReleasePolicy);\n+\n+        AjaxDropDownChoicePanel<String> authPolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"authPolicy\", \"authPolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"authPolicy\"),\n+                false);\n+        authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies));\n+        authPolicy.setChoices(new ArrayList<>(authPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) authPolicy.getField()).setNullValid(true);\n+        view.add(authPolicy);\n+    }\n+}"},{"sha":"c10a799dcd90148b4204e5e811d80ab3ad45f1ed","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/init/AMClassPathScanImplementationLookup.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationLookup.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import org.apache.syncope.common.lib.auth.AuthModuleConf;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AssignableTypeFilter;\n+\n+public class AMClassPathScanImplementationLookup extends ClassPathScanImplementationLookup {\n+\n+    @Override\n+    protected ClassPathScanningCandidateComponentProvider scanner() {\n+        ClassPathScanningCandidateComponentProvider scanner = super.scanner();\n+\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AuthModuleConf.class));\n+\n+        return scanner;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    protected void additional(final Class<?> clazz) {\n+        if (AuthModuleConf.class.isAssignableFrom(clazz)) {\n+            addClass(AuthModuleConf.class.getName(), clazz);\n+        }\n+    }\n+}"},{"sha":"a82339eefc49a7c7e035ff945f9e47e965142daf","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/SRA.java","status":"modified","additions":44,"deletions":8,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,26 +22,59 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.annotations.AMPage;\n import org.apache.syncope.client.console.panels.SRARouteDirectoryPanel;\n+import org.apache.syncope.client.console.rest.SRARouteRestClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-@AMPage(label = \"SRA\", icon = \"fas fa-share-alt\", listEntitlement = \"\", priority = 0)\n+@AMPage(label = \"SRA\", icon = \"fas fa-share-alt\", listEntitlement = \"\", priority = 100)\n public class SRA extends BasePage {\n \n     private static final long serialVersionUID = 9200112197134882164L;\n \n+    @SpringBean\n+    private ServiceOps serviceOps;\n+\n     public SRA(final PageParameters parameters) {\n         super(parameters);\n \n         body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+        body.setOutputMarkupId(true);\n+\n+        AjaxLink<?> push = new AjaxLink<>(\"push\") {\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    SRARouteRestClient.push();\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(body);\n+                } catch (Exception e) {\n+                    LOG.error(\"While pushing to SRA\", e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n+            }\n+        };\n+        push.setEnabled(!serviceOps.list(NetworkService.Type.SRA).isEmpty()\n+                && SyncopeConsoleSession.get().owns(AMEntitlement.SRA_ROUTE_PUSH, SyncopeConstants.ROOT_REALM));\n+        body.add(push);\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n@@ -64,15 +97,18 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        tabs.add(new AbstractTab(new ResourceModel(\"metrics\")) {\n+        List<NetworkService> instances = serviceOps.list(NetworkService.Type.SRA);\n+        if (!instances.isEmpty()) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"metrics\")) {\n \n-            private static final long serialVersionUID = 5211692813425391144L;\n+                private static final long serialVersionUID = 5211692813425391144L;\n \n-            @Override\n-            public Panel getPanel(final String panelId) {\n-                return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n-            }\n-        });\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(instances.get(0).getAddress()));\n+                }\n+            });\n+        }\n \n         return tabs;\n     }"},{"sha":"b43b716e4a813030ef627fdf47f8fd7cd95a82a4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"added","additions":174,"deletions":0,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,174 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.annotations.AMPage;\n+import org.apache.syncope.client.console.panels.AuthModuleDirectoryPanel;\n+import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel;\n+import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+@AMPage(label = \"WA\", icon = \"fas fa-id-card\", listEntitlement = \"\", priority = 200)\n+public class WA extends BasePage {\n+\n+    private static final long serialVersionUID = 9200112197134882164L;\n+\n+    @SpringBean\n+    private ServiceOps serviceOps;\n+\n+    public WA(final PageParameters parameters) {\n+        super(parameters);\n+\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+        body.setOutputMarkupId(true);\n+\n+        AjaxLink<?> push = new AjaxLink<>(\"push\") {\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    WAConfigRestClient.push();\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(body);\n+                } catch (Exception e) {\n+                    LOG.error(\"While pushing to WA\", e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n+            }\n+        };\n+        push.setEnabled(!serviceOps.list(NetworkService.Type.WA).isEmpty()\n+                && SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_PUSH, SyncopeConstants.ROOT_REALM));\n+        body.add(push);\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n+        content.add(tabbedPanel);\n+\n+        body.add(content);\n+    }\n+\n+    private List<ITab> buildTabList() {\n+        List<ITab> tabs = new ArrayList<>(0);\n+\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_MODULE_LIST, SyncopeConstants.ROOT_REALM)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"authModules\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AuthModuleDirectoryPanel(panelId, getPageReference());\n+                }\n+            });\n+        }\n+\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.CLIENTAPP_LIST, SyncopeConstants.ROOT_REALM)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"clientApps\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n+                }\n+            });\n+        }\n+\n+        tabs.add(new AbstractTab(Model.of(\"SAML 2.0 IdP\")) {\n+\n+            private static final long serialVersionUID = 5211692813425391144L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(Model.of(\"OIDC 1.0 Provider\")) {\n+\n+            private static final long serialVersionUID = 5211692813425391144L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n+            }\n+        });\n+\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.WA_CONFIG_LIST, SyncopeConstants.ROOT_REALM)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"config\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new WAConfigDirectoryPanel(panelId, getPageReference());\n+                }\n+            });\n+        }\n+\n+        if (SyncopeConsoleSession.get().owns(AMEntitlement.AUTH_PROFILE_LIST, SyncopeConstants.ROOT_REALM)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"authProfiles\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n+                }\n+            });\n+        }\n+\n+        List<NetworkService> instances = serviceOps.list(NetworkService.Type.WA);\n+        if (!instances.isEmpty()) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"sessions\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(instances.get(0).getAddress()));\n+                }\n+            });\n+        }\n+\n+        return tabs;\n+    }\n+}"},{"sha":"ea5683e6b083a9647563795762098975994efd3e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel.java","status":"added","additions":184,"deletions":0,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.AMConstants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AuthModuleDirectoryPanel.AuthModuleProvider;\n+import org.apache.syncope.client.console.rest.AuthModuleRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wizards.AuthModuleWizardBuilder;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+\n+public class AuthModuleDirectoryPanel\n+        extends DirectoryPanel<AuthModuleTO, AuthModuleTO, AuthModuleProvider, AuthModuleRestClient> {\n+\n+    @SpringBean\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    public AuthModuleDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, pageRef);\n+\n+        disableCheckBoxes();\n+\n+        this.addNewItemPanelBuilder(new AuthModuleWizardBuilder(lookup, new AuthModuleTO(), pageRef), true);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, AMEntitlement.AUTH_MODULE_CREATE);\n+\n+        modal.size(Modal.Size.Extra_large);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected AuthModuleProvider dataProvider() {\n+        return new AuthModuleProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return AMConstants.PREF_AUTHMODULE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    protected List<IColumn<AuthModuleTO, String>> getColumns() {\n+        final List<IColumn<AuthModuleTO, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<>(\n+                new StringResourceModel(Constants.KEY_FIELD_NAME, this),\n+                Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<AuthModuleTO, String>(new ResourceModel(\"type\"), \"conf\") {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<AuthModuleTO>> item,\n+                    final String componentId,\n+                    final IModel<AuthModuleTO> rowModel) {\n+\n+                item.add(new Label(componentId, rowModel.getObject().getConf() == null\n+                        ? StringUtils.EMPTY\n+                        : StringUtils.substringBefore(\n+                                rowModel.getObject().getConf().getClass().getSimpleName(), \"AuthModuleConf\")));\n+            }\n+        });\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<AuthModuleTO> getActions(final IModel<AuthModuleTO> model) {\n+        ActionsPanel<AuthModuleTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<AuthModuleTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthModuleTO ignore) {\n+                send(AuthModuleDirectoryPanel.this, Broadcast.EXACT, new AjaxWizard.EditItemActionEvent<>(\n+                        AuthModuleRestClient.read(model.getObject().getKey()), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, AMEntitlement.AUTH_MODULE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthModuleTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthModuleTO ignore) {\n+                try {\n+                    AuthModuleRestClient.delete(model.getObject().getKey());\n+\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.AUTH_MODULE_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    protected static final class AuthModuleProvider extends DirectoryDataProvider<AuthModuleTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<AuthModuleTO> comparator;\n+\n+        private AuthModuleProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(Constants.KEY_FIELD_NAME, SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<AuthModuleTO> iterator(final long first, final long count) {\n+            List<AuthModuleTO> result = AuthModuleRestClient.list();\n+            result.sort(comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return AuthModuleRestClient.list().size();\n+        }\n+\n+        @Override\n+        public IModel<AuthModuleTO> model(final AuthModuleTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"183c0f448425ead6c1234dd0bfd0103f6f57b458","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARouteDirectoryPanel.java","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -40,10 +40,8 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.SRARouteTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n-import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -73,28 +71,6 @@ public SRARouteDirectoryPanel(final String id, final PageReference pageRef) {\n \n         addNewItemPanelBuilder(new SRARouteWizardBuilder(new SRARouteTO(), pageRef), true);\n         initResultTable();\n-\n-        utilityAjaxLink = new AjaxLink<SRARouteTO>(\"utility\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                try {\n-                    SRARouteRestClient.push();\n-                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                } catch (Exception e) {\n-                    LOG.error(\"While pushing to SRA\", e);\n-                    SyncopeConsoleSession.get().onException(e);\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        };\n-        initialFragment.addOrReplace(utilityAjaxLink);\n-        utilityAjaxLink.add(utilityIcon);\n-        utilityIcon.add(new AttributeModifier(\"class\", \"fa fa-fast-forward\"));\n-        enableUtilityButton();\n     }\n \n     @Override"},{"sha":"7bbe3368501beb52daa4674b1e3a9ba9897ecf24","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel.java","status":"added","additions":197,"deletions":0,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,197 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.AMConstants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel.WAConfigProvider;\n+import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class WAConfigDirectoryPanel\n+        extends DirectoryPanel<Attr, Attr, WAConfigProvider, WAConfigRestClient> {\n+\n+    private static final long serialVersionUID = 1538796157345L;\n+\n+    public WAConfigDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, new Builder<Attr, Attr, WAConfigRestClient>(new WAConfigRestClient(), pageRef) {\n+\n+            private static final long serialVersionUID = 8769126634538601689L;\n+\n+            @Override\n+            protected WizardMgtPanel<Attr> newInstance(final String id, final boolean wizardInModal) {\n+                throw new UnsupportedOperationException();\n+            }\n+        });\n+\n+        itemKeyFieldName = \"schema\";\n+        disableCheckBoxes();\n+\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<Attr>(new Attr(), pageRef) {\n+\n+            private static final long serialVersionUID = 1995192603527154740L;\n+\n+            @Override\n+            public WizardModalPanel<Attr> build(final String id, final int index, final AjaxWizard.Mode mode) {\n+                return new WAConfigModalPanel(modal, newModelObject(), mode, pageRef);\n+            }\n+        }, true);\n+\n+        modal.size(Modal.Size.Default);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected WAConfigProvider dataProvider() {\n+        return new WAConfigProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return AMConstants.PREF_WACONFIG_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    protected List<IColumn<Attr, String>> getColumns() {\n+        final List<IColumn<Attr, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n+        columns.add(new PropertyColumn<Attr, String>(new ResourceModel(\"values\"), \"values\") {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<Attr>> item,\n+                    final String componentId,\n+                    final IModel<Attr> rowModel) {\n+\n+                if (rowModel.getObject().getValues().toString().length() > 96) {\n+                    item.add(new Label(componentId, getString(\"tooLong\")).\n+                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n+                } else {\n+                    super.populateItem(item, componentId, rowModel);\n+                }\n+            }\n+        });\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n+        ActionsPanel<Attr> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<Attr>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n+                target.add(modal);\n+                modal.header(new StringResourceModel(\"any.edit\"));\n+                modal.setContent(new WAConfigModalPanel(modal, model.getObject(), AjaxWizard.Mode.EDIT, pageRef));\n+                modal.show(true);\n+            }\n+        }, ActionLink.ActionType.EDIT, AMEntitlement.WA_CONFIG_SET);\n+\n+        panel.add(new ActionLink<Attr>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n+                try {\n+                    WAConfigRestClient.delete(model.getObject().getSchema());\n+\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getSchema(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.WA_CONFIG_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    protected static final class WAConfigProvider extends DirectoryDataProvider<Attr> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<Attr> comparator;\n+\n+        private WAConfigProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"schema\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<Attr> iterator(final long first, final long count) {\n+            List<Attr> result = WAConfigRestClient.list();\n+            result.sort(comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return WAConfigRestClient.list().size();\n+        }\n+\n+        @Override\n+        public IModel<Attr> model(final Attr object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"e95f3c9295bedbb617c75b28947c7adf4b240b9b","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAConfigModalPanel.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+public class WAConfigModalPanel extends AbstractModalPanel<Attr> {\n+\n+    private static final long serialVersionUID = 1690738212977L;\n+\n+    private static ConfParam toConfParam(final Attr attr) {\n+        ConfParam param = new ConfParam();\n+        param.setSchema(attr.getSchema());\n+        param.getValues().addAll(attr.getValues());\n+        return param;\n+    }\n+\n+    private static Attr toAttr(final ConfParam confParam) {\n+        Attr attr = new Attr.Builder(confParam.getSchema()).build();\n+        attr.getValues().addAll(\n+                confParam.getValues().stream().map(Serializable::toString).collect(Collectors.toList()));\n+        return attr;\n+    }\n+\n+    private final ParametersWizardPanel.ParametersForm form;\n+\n+    public WAConfigModalPanel(\n+            final BaseModal<Attr> modal,\n+            final Attr attr,\n+            final AjaxWizard.Mode mode,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+\n+        PlainSchemaTO schema = new PlainSchemaTO();\n+        schema.setType(AttrSchemaType.String);\n+        schema.setMandatoryCondition(\"true\");\n+        schema.setMultivalue(false);\n+\n+        form = new ParametersWizardPanel.ParametersForm(schema, toConfParam(attr));\n+\n+        add(new ParametersWizardPanel(form, null, pageRef) {\n+\n+            @Override\n+            protected WizardModel buildModelSteps(final ParametersForm modelObject, final WizardModel wizardModel) {\n+                wizardModel.add(new ParametersWizardAttrStep(mode, modelObject));\n+                return wizardModel;\n+            }\n+\n+            @Override\n+            protected Serializable onApplyInternal(final ParametersWizardPanel.ParametersForm modelObject) {\n+                modelObject.getParam().setMultivalue(modelObject.getSchema().isMultivalue());\n+                try {\n+                    WAConfigRestClient.set(toAttr(modelObject.getParam()));\n+                } catch (Exception e) {\n+                    LOG.error(\"While setting {}\", modelObject.getParam(), e);\n+                    throw e;\n+                }\n+                return modelObject.getParam();\n+            }\n+        }.build(\"waConfigWizardPanel\", mode));\n+    }\n+\n+    @Override\n+    public final Attr getItem() {\n+        return toAttr(form.getParam());\n+    }\n+}"},{"sha":"59ced0041dd9a0c374de5fb8d796bd7589d61c66","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyDirectoryPanel.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+\n+public class AccessPolicyDirectoryPanel extends PolicyDirectoryPanel<AccessPolicyTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    public AccessPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, PolicyType.ACCESS, pageRef);\n+\n+        AccessPolicyTO defaultItem = new AccessPolicyTO();\n+\n+        this.addNewItemPanelBuilder(\n+                new PolicyModalPanelBuilder<>(PolicyType.ACCESS, defaultItem, modal, pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, IdRepoEntitlement.POLICY_CREATE);\n+\n+        initResultTable();\n+    }\n+}"},{"sha":"9ab9f92bf77b1bd9d75135b676fd6375625404d9","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AttrReleasePolicyDirectoryPanel.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+\n+public class AttrReleasePolicyDirectoryPanel extends PolicyDirectoryPanel<AttrReleasePolicyTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    public AttrReleasePolicyDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, PolicyType.ATTR_RELEASE, pageRef);\n+\n+        AttrReleasePolicyTO defaultItem = new AttrReleasePolicyTO();\n+\n+        this.addNewItemPanelBuilder(\n+                new PolicyModalPanelBuilder<>(PolicyType.ATTR_RELEASE, defaultItem, modal, pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, IdRepoEntitlement.POLICY_CREATE);\n+\n+        initResultTable();\n+    }\n+}"},{"sha":"be8b36a06dbcabfe21fdb1acb6e2fbd71d7c46b3","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AuthPolicyDirectoryPanel.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+\n+public class AuthPolicyDirectoryPanel extends PolicyDirectoryPanel<AuthPolicyTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    public AuthPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, PolicyType.AUTH, pageRef);\n+\n+        AuthPolicyTO defaultItem = new AuthPolicyTO();\n+\n+        this.addNewItemPanelBuilder(\n+                new PolicyModalPanelBuilder<>(PolicyType.AUTH, defaultItem, modal, pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, IdRepoEntitlement.POLICY_CREATE);\n+\n+        initResultTable();\n+    }\n+}"},{"sha":"29cdcb189954bbd6a3cc66bda2bc35463b91df9b","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/AuthModuleRestClient.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthModuleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthModuleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthModuleRestClient.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n+import org.apache.syncope.common.rest.api.service.AuthModuleService;\n+\n+public class AuthModuleRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -7379778542101161274L;\n+\n+    public static List<AuthModuleTO> list() {\n+        return getService(AuthModuleService.class).list();\n+    }\n+\n+    public static void create(final AuthModuleTO authModuleTO) {\n+        getService(AuthModuleService.class).create(authModuleTO);\n+    }\n+\n+    public static AuthModuleTO read(final String key) {\n+        return getService(AuthModuleService.class).read(key);\n+    }\n+\n+    public static void update(final AuthModuleTO authModuleTO) {\n+        getService(AuthModuleService.class).update(authModuleTO);\n+    }\n+\n+    public static void delete(final String key) {\n+        getService(AuthModuleService.class).delete(key);\n+    }\n+}"},{"sha":"8b683eaf7887a1d2d262908ee9f34ed985850eb7","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WAConfigRestClient.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWAConfigRestClient.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.rest.api.service.wa.WAConfigService;\n+\n+public class WAConfigRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -7379778542101161274L;\n+\n+    public static List<Attr> list() {\n+        return getService(WAConfigService.class).list();\n+    }\n+\n+    public static void set(final Attr value) {\n+        getService(WAConfigService.class).set(value);\n+    }\n+\n+    public static void delete(final String schema) {\n+        getService(WAConfigService.class).delete(schema);\n+    }\n+\n+    public static void push() {\n+        getService(WAConfigService.class).pushToWA();\n+    }\n+}"},{"sha":"b71bc2ee7409d4bd935411eb5c59b26a00a8473e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder.java","status":"added","additions":152,"deletions":0,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.panels.BeanPanel;\n+import org.apache.syncope.client.console.rest.AuthModuleRestClient;\n+import org.apache.syncope.client.console.wizards.mapping.AuthModuleMappingPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.auth.AuthModuleConf;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.springframework.util.ClassUtils;\n+\n+public class AuthModuleWizardBuilder extends BaseAjaxWizardBuilder<AuthModuleTO> {\n+\n+    private final LoadableDetachableModel<List<String>> authModuleConfs;\n+\n+    public AuthModuleWizardBuilder(\n+            final ClassPathScanImplementationLookup lookup,\n+            final AuthModuleTO defaultItem,\n+            final PageReference pageRef) {\n+\n+        super(defaultItem, pageRef);\n+\n+        authModuleConfs = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return lookup.getClasses(AuthModuleConf.class).stream().\n+                        map(Class::getName).sorted().collect(Collectors.toList());\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final AuthModuleTO modelObject) {\n+        if (mode == AjaxWizard.Mode.CREATE) {\n+            AuthModuleRestClient.create(modelObject);\n+        } else {\n+            AuthModuleRestClient.update(modelObject);\n+        }\n+        return modelObject;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final AuthModuleTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Profile(modelObject, authModuleConfs));\n+        wizardModel.add(new Configuration(modelObject));\n+        wizardModel.add(new Mapping(modelObject));\n+        return wizardModel;\n+    }\n+\n+    public static class Profile extends WizardStep {\n+\n+        private static final long serialVersionUID = -3043839139187792810L;\n+\n+        Profile(final AuthModuleTO authModule, final LoadableDetachableModel<List<String>> authModuleConfs) {\n+            boolean isNew = authModule.getConf() == null;\n+\n+            AjaxTextFieldPanel key = new AjaxTextFieldPanel(\n+                    Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME,\n+                    new PropertyModel<>(authModule, Constants.KEY_FIELD_NAME));\n+            key.addRequiredLabel();\n+            key.setEnabled(isNew);\n+            add(key);\n+\n+            AjaxTextFieldPanel description = new AjaxTextFieldPanel(\n+                    \"description\", getString(\"description\"), new PropertyModel<>(authModule, \"description\"));\n+            add(description);\n+\n+            AjaxDropDownChoicePanel<String> conf = new AjaxDropDownChoicePanel<>(\"conf\", getString(\"type\"), isNew\n+                    ? Model.of()\n+                    : Model.of(authModule.getConf().getClass().getName()));\n+            conf.setChoices(authModuleConfs.getObject());\n+            conf.addRequiredLabel();\n+            conf.setNullValid(false);\n+            conf.setEnabled(isNew);\n+            conf.add(new AjaxEventBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -7133385027739964990L;\n+\n+                @SuppressWarnings(\"unchecked\")\n+                @Override\n+                protected void onEvent(final AjaxRequestTarget target) {\n+                    try {\n+                        Class<? extends AuthModuleConf> authModuleConfClass =\n+                                (Class<? extends AuthModuleConf>) ClassUtils.resolveClassName(\n+                                        conf.getModelObject(), ClassUtils.getDefaultClassLoader());\n+\n+                        authModule.setConf(authModuleConfClass.getConstructor().newInstance());\n+                    } catch (Exception e) {\n+                        LOG.error(\"During deserialization\", e);\n+                    }\n+                }\n+            });\n+            add(conf);\n+        }\n+    }\n+\n+    public static class Configuration extends WizardStep {\n+\n+        private static final long serialVersionUID = -785981096328637758L;\n+\n+        Configuration(final AuthModuleTO authModule) {\n+            add(new BeanPanel<>(\"bean\", new PropertyModel<>(authModule, \"conf\")).setRenderBodyOnly(true));\n+        }\n+    }\n+\n+    private static final class Mapping extends WizardStep {\n+\n+        private static final long serialVersionUID = 3454904947720856253L;\n+\n+        Mapping(final AuthModuleTO authModule) {\n+            setTitleModel(Model.of(\"Mapping\"));\n+            setSummaryModel(Model.of(StringUtils.EMPTY));\n+            add(new AuthModuleMappingPanel(\"mapping\", authModule));\n+        }\n+    }\n+}"},{"sha":"0e1af8cf1deaa439a57c6aaa1a00768fa2c9a78b","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/AuthModuleMappingPanel.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.mapping;\n+\n+import java.util.List;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AuthModuleTO;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class AuthModuleMappingPanel extends AbstractMappingPanel {\n+\n+    public AuthModuleMappingPanel(final String id, final AuthModuleTO authModule) {\n+        super(id,\n+                null,\n+                null,\n+                new ListModel<>(authModule.getItems()),\n+                true,\n+                MappingPurpose.NONE);\n+\n+        setOutputMarkupId(true);\n+    }\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+        intAttrNameInfo.setVisible(false);\n+    }\n+\n+    @Override\n+    protected boolean hidePurpose() {\n+        return true;\n+    }\n+\n+    @Override\n+    protected boolean hideMandatory() {\n+        return true;\n+    }\n+\n+    @Override\n+    protected boolean hideConnObjectKey() {\n+        return true;\n+    }\n+\n+    @Override\n+    protected IModel<List<String>> getExtAttrNames() {\n+        return Model.ofList(List.of());\n+    }\n+\n+    @Override\n+    protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n+        // nothing to do\n+    }\n+}"},{"sha":"ce74d3256817eff925cc3874bb6378d921e61dd4","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,7 +22,9 @@\n       <div class=\"container-fluid\">\n         <div class=\"row mb-2\">\n           <div class=\"col-sm-6\">\n-            <h1>&nbsp;</h1>\n+            <button class=\"btn btn-success\" wicket:id=\"push\">\n+              <span class=\"fa fa-fast-forward\"></span> <wicket:message key=\"push\"/>\n+            </button>\n           </div>\n           <div class=\"col-sm-6\">\n             <ol class=\"breadcrumb float-sm-right\">"},{"sha":"bfb4155ab02893bddbca6ca57c2bbe214651a353","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,3 +28,4 @@ logout=Logout\n csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n+push=Push"},{"sha":"bfb4155ab02893bddbca6ca57c2bbe214651a353","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_fr_CA.properties","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,31 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+sra=SRA\n+routes=Routes\n+metrics=Metrics\n+order=Order\n+target=Target\n+type=Type\n+any.new=New gateway route\n+any.edit=Edit ${name}\n+predicates=Predicates\n+filters=Filters\n+logout=Logout\n+csrf=CSRF\n+error=Error URI\n+postLogout=Post-logout URI\n+push=Push"},{"sha":"ebb61e692a2e831c643396bc98cd1f9a5f3dd52e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,3 +28,4 @@ logout=Logout\n csrf=CSRF\n error=URI di errore\n postLogout=URI di post-logout\n+push=Applica"},{"sha":"fd47c1e3979ea01f9a73fb8a6649273c8fc3b7bd","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,3 +28,4 @@ logout=Logout\n csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n+push=Push"},{"sha":"bfb4155ab02893bddbca6ca57c2bbe214651a353","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,3 +28,4 @@ logout=Logout\n csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n+push=Push"},{"sha":"bfb4155ab02893bddbca6ca57c2bbe214651a353","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,3 +28,4 @@ logout=Logout\n csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n+push=Push"},{"sha":"a0f621f461e7a9be1c87198421cd95f5e03d733c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA.html","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,49 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <section class=\"content-header\">\n+      <div class=\"container-fluid\">\n+        <div class=\"row mb-2\">\n+          <div class=\"col-sm-6\">\n+            <button class=\"btn btn-success\" wicket:id=\"push\">\n+              <span class=\"fa fa-fast-forward\"></span> <wicket:message key=\"push\"/>\n+            </button>\n+          </div>\n+          <div class=\"col-sm-6\">\n+            <ol class=\"breadcrumb float-sm-right\">\n+              <li class=\"breadcrumb-item\">\n+                <a wicket:id=\"dashboardBr\"><i class=\"fa fa-tachometer-alt\"></i> <wicket:message key=\"dashboard\"></wicket:message></a>\n+              </li>\n+              <li class=\"breadcrumb-item active\"><wicket:message key=\"wa\"/></li>\n+            </ol>\n+          </div>\n+        </div>\n+      </div><!-- /.container-fluid -->\n+    </section>\n+\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"container-fluid\">\n+        <div class=\"card card-outline\">\n+          <div class=\"card-body\" wicket:id=\"tabbedPanel\"/>\n+        </div>\n+      </div>\n+    </section>\n+  </wicket:extend>\n+</html>"},{"sha":"4b5a308dc71779d6ac38628ad85bbb18c6c9e132","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Authentication Modules\n+clientApps=Client Applications\n+config=Parameters\n+sessions=Sessions\n+authProfiles=Profiles\n+push=Push"},{"sha":"4b5a308dc71779d6ac38628ad85bbb18c6c9e132","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_fr_CA.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Authentication Modules\n+clientApps=Client Applications\n+config=Parameters\n+sessions=Sessions\n+authProfiles=Profiles\n+push=Push"},{"sha":"e27e0cdae8ab03bf7c6e6ef172c27db07463f452","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_it.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Moduli di Autenticazione\n+clientApps=Applicazioni Client\n+config=Parametri\n+sessions=Sessioni\n+authProfiles=Profili\n+push=Applica"},{"sha":"4b5a308dc71779d6ac38628ad85bbb18c6c9e132","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_ja.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Authentication Modules\n+clientApps=Client Applications\n+config=Parameters\n+sessions=Sessions\n+authProfiles=Profiles\n+push=Push"},{"sha":"4b5a308dc71779d6ac38628ad85bbb18c6c9e132","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_pt_BR.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Authentication Modules\n+clientApps=Client Applications\n+config=Parameters\n+sessions=Sessions\n+authProfiles=Profiles\n+push=Push"},{"sha":"4b5a308dc71779d6ac38628ad85bbb18c6c9e132","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/WA_ru.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+wa=WA\n+authModules=Authentication Modules\n+clientApps=Client Applications\n+config=Parameters\n+sessions=Sessions\n+authProfiles=Profiles\n+push=Push"},{"sha":"9b5b243ec9396fc7ac8d463b15c7ed46f40eb725","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Parameter ${key}\n+any.new=New Auth Module\n+any.edit=Edit Auth Module\n+description=Description\n+type=Type"},{"sha":"d7674d0be490ad9767524cc670ee8ae35134fb47","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel_fr_CA.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifier param\\u00e8tre ${key}\n+any.new=New Auth Module\n+any.edit=Edit Auth Module\n+description=Description\n+type=Type"},{"sha":"117bd0513590bc944bb2cccf894252257fe4df6e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica parametro ${key}\n+any.new=Nuovo Modulo di Autenticazione\n+any.edit=Aggiorna Modulo di Autenticazione\n+description=Descrizione\n+type=Tipo"},{"sha":"d8622d89592783bbcbd8749c396162fb3d0a1a74","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel_ja.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc ${key} \\u3092\\u7de8\\u96c6\n+any.new=New Auth Module\n+any.edit=Edit Auth Module\n+description=Description\n+type=Type"},{"sha":"3ba374239784c29fbb2b3aff2d0ffd415de25005","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Editar par\\u00e2metro\n+any.new=New Auth Module\n+any.edit=Edit Auth Module\n+description=Description\n+type=Type"},{"sha":"3fcebae1af7cdb7acf0ae5eb0ecfb749c3d3d8a1","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel_ru.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080 ${key}\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440 ${key}\n+# any.new=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n+any.new=New Auth Module\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n+any.edit=Edit Auth Module\n+description=Description\n+type=Type"},{"sha":"b4dd675f7a863469113dabcac74517a48d870104","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Parameter ${key}\n+any.new=New Parameter\n+values=Values\n+readonly=Readonly\n+any.edit=Edit parameter\n+tooLong=Value too long to be displayed"},{"sha":"788dbfd4f998ec86a641b4acad2f1604a636369d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_fr_CA.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifier param\\u00e8tre ${key}\n+any.new=Nouveau param\\u00e8tre\n+values=Valeurs\n+readonly=Lecture seulement\n+any.edit=Modifier param\\u00e8tre\n+tooLong=Value too long to be displayed"},{"sha":"2c0a04f2f69484f856d5497eb808e5ca45f20952","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_it.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica parametro ${key}\n+any.new=Nuovo parametro\n+values=Valori\n+readonly=Readonly\n+any.edit=Aggiorna parametro\n+tooLong=Valore troppo lungo per essere mostrato"},{"sha":"5b0c3400112902f26ecaa99620021215cff3a7a2","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_ja.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc ${key} \\u3092\\u7de8\\u96c6\n+any.new=\\u65b0\\u3057\\u3044\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc\n+values=\\u5024\n+readonly=\\u8aad\\u307f\\u53d6\\u308a\\u5c02\\u7528\n+any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc\\u3092\\u7de8\\u96c6\n+tooLong=\\u5024\\u304c\\u9577\\u3059\\u304e\\u3066\\u8868\\u793a\\u3067\\u304d\\u307e\\u305b\\u3093"},{"sha":"017cf2ac00618b59b7519759225e601fb055ce0f","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_pt_BR.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Editar par\\u00e2metro\n+any.new=Novo par\\u00e2metro\n+values=Valores\n+readonly=Somente Leitura\n+any.edit=Editar par\\u00e2metro\n+tooLong=Value too long to be displayed"},{"sha":"d5509959b10d81520981cc517bdba8249bcd547e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_ru.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080 ${key}\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440 ${key}\n+# any.new=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n+any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\n+# values=\\u00d0\\u0097\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n+values=\\u0417\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f\n+# readonly=\\u00d0\\u00a2\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00ba\\u00d0\\u00be \\u00d1\\u0087\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n+readonly=\\u0422\\u043e\\u043b\\u044c\\u043a\\u043e \\u0447\\u0442\\u0435\\u043d\\u0438\\u0435\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\n+tooLong=Value too long to be displayed"},{"sha":"83d370f29def0dc4e57beb7a4e825bbee390775f","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigModalPanel.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigModalPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,6 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <div wicket:id=\"parametersDetailsPanel\">[parametersDetailsPanel]</div>\n+    <div wicket:id=\"waConfigWizardPanel\">[waConfigWizardPanel]</div>\n   </wicket:extend>\n </html>","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersEditModalPanel.html"},{"sha":"7772c93b7b0f9ede0879d65b1ee4014cc4497248","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"bean\"/>\n+  </wicket:panel>\n+</html>"},{"sha":"8d2c500e11a13f53b300065f3db11c8571704970","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Plain Attributes\n+derAttrs=Derived Attributes\n+virAttrs=Virtual Attributes\n+features=Features\n+matchingCond=Matching Condition\n+userMatchingCond=User Matching Condition\n+groupMatchingCond=Group Matching Condition\n+anyObjectMatchingCond=AnyObject Matching Condition"},{"sha":"e791574a14ebec8502e9420193bd93c4fd5522f6","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration_fr_CA.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Attributs simples\n+derAttrs=Attributs d�riv�s\n+virAttrs=Attributs virtuels\n+features=Caract�ristiques\n+matchingCond=Condition d'appariement\n+userMatchingCond=Condition d'appariement des utilisateurs\n+groupMatchingCond=Condition d'appariement de groupe\n+anyObjectMatchingCond=Condition d'appariement de n'importe quel objet"},{"sha":"6688f852c27c506f95f30149b2a587ea9ffbeb9c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Attributi\n+derAttrs=Attributi Derivati\n+virAttrs=Attributi Virtuali\n+features=Features\n+matchingCond=Condizione di matching\n+userMatchingCond=Condizione di matching utente\n+groupMatchingCond=Condizione di matching gruppo\n+anyObjectMatchingCond=Condizione di matching any"},{"sha":"ba85e50448b85bfccb4416344e187140bc748c09","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration_ja.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=\\u30d7\\u30ec\\u30fc\\u30f3\\u5c5e\\u6027\n+derAttrs=\\u6d3e\\u751f\\u5c5e\\u6027\n+virAttrs=\\u4eee\\u60f3\\u5c5e\\u6027\n+features=\\u6a5f\\u80fd\n+matchingCond=\\u4e00\\u81f4\\u6761\\u4ef6\n+userMatchingCond=\\u30e6\\u30fc\\u30b6\\u2015\\u4e00\\u81f4\\u6761\\u4ef6\n+groupMatchingCond=\\u30b0\\u30eb\\u30fc\\u30d7\\u4e00\\u81f4\\u6761\\u4ef6\n+anyObjectMatchingCond=\\u4efb\\u610f\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u4e00\\u81f4\\u6761\\u4ef6"},{"sha":"8d2c500e11a13f53b300065f3db11c8571704970","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Plain Attributes\n+derAttrs=Derived Attributes\n+virAttrs=Virtual Attributes\n+features=Features\n+matchingCond=Matching Condition\n+userMatchingCond=User Matching Condition\n+groupMatchingCond=Group Matching Condition\n+anyObjectMatchingCond=AnyObject Matching Condition"},{"sha":"721b3e531a1f1e7ce8644b54a57743af67fb9260","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Configuration_ru.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Configuration_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+plainAttrs=\\u041f\\u0440\\u043e\\u0441\\u0442\\u044b\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+derAttrs=\\u041f\\u0440\\u043e\\u0438\\u0437\\u0432\\u043e\\u0434\\u043d\\u044b\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+virAttrs=\\u0412\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n+features=\\u0421\\u0432\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430\n+matchingCond=\\u041a\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0439 \\u0441\\u043e\\u043e\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u044f\n+userMatchingCond=\\u041a\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0439 \\u0441\\u043e\\u043e\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u044f \\u041f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n+groupMatchingCond=\\u041a\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0439 \\u0441\\u043e\\u043e\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u044f \\u0413\\u0440\\u0443\\u043f\\u043f\n+anyObjectMatchingCond=\\u041a\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0439 \\u0441\\u043e\\u043e\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u044f \\u041e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432"},{"sha":"272967359aa94f8a421f0a17eae93a9a382cad6c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Mapping.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Mapping.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"mapping\"/>\n+  </wicket:panel>\n+</html>"},{"sha":"beba307fed372a7c36b85490bd6bad04e1532686","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile.html","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,25 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\"><span wicket:id=\"key\">[key]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"description\">[description]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"conf\">[conf]</span></div>\n+  </wicket:panel>\n+</html>"},{"sha":"18cf102c4241910b4f09a4ad27d2268c4a9d64e8","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+description=Description\n+configuration=Configuration\n+type=Type"},{"sha":"18cf102c4241910b4f09a4ad27d2268c4a9d64e8","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile_fr_CA.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+description=Description\n+configuration=Configuration\n+type=Type"},{"sha":"98514ae0b53030474011b72c5b80eb1a24941dde","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+description=Descrizione\n+configuration=Configurazione\n+type=Tipo"},{"sha":"82b26f285a0136775147fd7b4a2f7e74cef804ab","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile_ja.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+description=Description\n+configuration=\\u8a2d\\u5b9a\n+type=Type"},{"sha":"18cf102c4241910b4f09a4ad27d2268c4a9d64e8","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+description=Description\n+configuration=Configuration\n+type=Type"},{"sha":"9b168647f250c1fa0c9de5cf6df86d68020d5343","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder$Profile_ru.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder%24Profile_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+description=Description\n+configuration=\\u041a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n+type=Type"},{"sha":"d2b58b4c75bd3718f53c876e5b3ed8f848b3ec78","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/SyncopeIdMConsoleContext.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -76,7 +76,7 @@ public ImplementationInfoProvider implementationInfoProvider() {\n     }\n \n     @Bean\n-    public PolicyTabProvider policyTabProvider() {\n+    public PolicyTabProvider idmPolicyTabProvider() {\n         return new IdMPolicyTabProvider();\n     }\n }"},{"sha":"cc63b83dba0acd289277535a1087e489f92a93ff","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMPolicyTabProvider.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.policies.PullPolicyDirectoryPanel;\n import org.apache.syncope.client.console.policies.PushPolicyDirectoryPanel;\n@@ -27,13 +28,18 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class IdMPolicyTabProvider extends IdRepoPolicyTabProvider {\n+public class IdMPolicyTabProvider implements PolicyTabProvider {\n \n     private static final long serialVersionUID = 2822554006571803418L;\n \n+    @Override\n+    public int getOrder() {\n+        return 300;\n+    }\n+\n     @Override\n     public List<ITab> buildTabList(final PageReference pageRef) {\n-        List<ITab> tabs = super.buildTabList(pageRef);\n+        List<ITab> tabs = new ArrayList<>();\n \n         tabs.add(new AbstractTab(new ResourceModel(\"policy.pull\")) {\n "},{"sha":"793b322a3aa12740d1d6f0a0755eead886cb0b84","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/search/ConnObjectSearchPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels.search;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n@@ -85,7 +84,7 @@ protected void populate() {\n \n             @Override\n             protected List<SearchClause.Type> load() {\n-                return Collections.singletonList(SearchClause.Type.ATTRIBUTE);\n+                return List.of(SearchClause.Type.ATTRIBUTE);\n             }\n         };\n \n@@ -95,7 +94,7 @@ protected List<SearchClause.Type> load() {\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n-                return Collections.emptyMap();\n+                return Map.of();\n             }\n         };\n "},{"sha":"63219d7b8ac4749fc4bcf0d52863d3225489486f","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -43,7 +43,7 @@ public class PullPolicyDirectoryPanel extends PolicyDirectoryPanel<PullPolicyTO>\n     public PullPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, PolicyType.PULL, pageRef);\n \n-        final PullPolicyTO defaultItem = new PullPolicyTO();\n+        PullPolicyTO defaultItem = new PullPolicyTO();\n \n         this.addNewItemPanelBuilder(\n                 new PolicyModalPanelBuilder<>(PolicyType.PULL, defaultItem, modal, pageRef), true);"},{"sha":"adcd73b7e76b0b3600e34e5a9a794e487ad3f754","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/PushPolicyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -43,7 +43,7 @@ public class PushPolicyDirectoryPanel extends PolicyDirectoryPanel<PushPolicyTO>\n     public PushPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, PolicyType.PUSH, pageRef);\n \n-        final PushPolicyTO defaultItem = new PushPolicyTO();\n+        PushPolicyTO defaultItem = new PushPolicyTO();\n \n         this.addNewItemPanelBuilder(\n                 new PolicyModalPanelBuilder<>(PolicyType.PUSH, defaultItem, modal, pageRef), true);"},{"sha":"9b882b5688ddc49241b9cd325da6b4149ed23145","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -84,7 +84,6 @@ public ResourceMappingPanel(\n                 jexlTransformers,\n                 new ListModel<ItemTO>(provision.getItems()),\n                 resourceTO.getConnector() != null,\n-                false,\n                 MappingPurpose.BOTH);\n \n         setOutputMarkupId(true);"},{"sha":"583c5700d6ce791e58ebf9998e4db6a59467d47c","filename":"client/idrepo/common-ui/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fpom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -58,6 +58,10 @@ under the License.\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-auth-roles</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.wicketstuff</groupId>\n+      <artifactId>wicketstuff-editable-grid</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n       <artifactId>wicket-native-websocket-javax</artifactId>"},{"sha":"8bd45be7ae05f42d95d13fedebc6a499e7bfab54","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGrid.java","status":"added","additions":271,"deletions":0,"changes":271,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.tuple.MutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IFormSubmitter;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.wicketstuff.egrid.column.EditableGridActionsColumn;\n+import org.wicketstuff.egrid.column.EditableGridActionsPanel;\n+import org.wicketstuff.egrid.component.EditableDataTable;\n+import org.wicketstuff.egrid.model.GridOperationData;\n+import org.wicketstuff.egrid.model.OperationType;\n+import org.wicketstuff.egrid.provider.IEditableDataProvider;\n+import org.wicketstuff.egrid.toolbar.EditableGridHeadersToolbar;\n+import org.wicketstuff.egrid.toolbar.EditableGridNavigationToolbar;\n+\n+public class AjaxGrid<K, V, S> extends Panel {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    protected static class NonValidatingForm<T> extends Form<T> {\n+\n+        protected static final long serialVersionUID = 1L;\n+\n+        public NonValidatingForm(final String id) {\n+            super(id);\n+        }\n+\n+        @Override\n+        public void process(final IFormSubmitter submittingComponent) {\n+            delegateSubmit(submittingComponent);\n+        }\n+    }\n+\n+    protected EditableDataTable<Pair<K, V>, S> dataTable;\n+\n+    public AjaxGrid(\n+            final String id,\n+            final List<? extends IColumn<Pair<K, V>, S>> columns,\n+            final IEditableDataProvider<Pair<K, V>, S> dataProvider,\n+            final long rowsPerPage) {\n+\n+        super(id);\n+\n+        List<IColumn<Pair<K, V>, S>> newCols = new ArrayList<>();\n+        newCols.addAll(columns);\n+        newCols.add(new AjaxGridActionsColumn<>(new Model<>(\"Actions\")));\n+\n+        dataTable = new EditableDataTable<Pair<K, V>, S>(\"dataTable\", newCols, dataProvider, rowsPerPage, null) {\n+\n+            protected static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target) {\n+                AjaxGrid.this.onError(target);\n+            }\n+\n+            @Override\n+            protected Item<Pair<K, V>> newRowItem(final String id, final int index, final IModel<Pair<K, V>> model) {\n+                return super.newRowItem(id, index, model);\n+            }\n+        };\n+\n+        dataTable.setOutputMarkupId(true);\n+\n+        dataTable.addTopToolbar(new EditableGridNavigationToolbar(dataTable));\n+        if (displayHeader()) {\n+            dataTable.addTopToolbar(new EditableGridHeadersToolbar<>(dataTable, dataProvider));\n+        }\n+        if (displayAdd()) {\n+            dataTable.addBottomToolbar(newAddBottomToolbar(dataTable, dataProvider));\n+        }\n+\n+        Form<Pair<K, V>> form = new NonValidatingForm<>(\"form\");\n+        form.setOutputMarkupId(true);\n+        form.add(dataTable);\n+        add(form);\n+    }\n+\n+    public AjaxGrid<K, V, S> setTableBodyCss(final String cssStyle) {\n+        dataTable.setTableBodyCss(cssStyle);\n+        return this;\n+    }\n+\n+    public AjaxGrid<K, V, S> setTableCss(final String cssStyle) {\n+        dataTable.add(AttributeModifier.replace(\"class\", cssStyle));\n+        return this;\n+    }\n+\n+    protected EditableDataTable.RowItem<Pair<K, V>> newRowItem(\n+            final String id, final int index, final IModel<Pair<K, V>> model) {\n+\n+        return new EditableDataTable.RowItem<>(id, index, model);\n+    }\n+\n+    protected AjaxGridBottomToolbar<Pair<K, V>, S> newAddBottomToolbar(\n+            final EditableDataTable<Pair<K, V>, S> dataTable,\n+            final IEditableDataProvider<Pair<K, V>, S> dataProvider) {\n+\n+        return new AjaxGridBottomToolbar<Pair<K, V>, S>(dataTable) {\n+\n+            protected static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected Pair<K, V> newRowInstance() {\n+                return new MutablePair<>();\n+            }\n+\n+            @Override\n+            protected void onAdd(final AjaxRequestTarget target, final Pair<K, V> newRow) {\n+                dataProvider.add(newRow);\n+                target.add(dataTable);\n+                AjaxGrid.this.onAdd(target, newRow);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target) {\n+                super.onError(target);\n+                AjaxGrid.this.onError(target);\n+            }\n+        };\n+    }\n+\n+    protected boolean allowDelete(final Item<Pair<K, V>> rowItem) {\n+        return true;\n+    }\n+\n+    protected boolean displayHeader() {\n+        return true;\n+    }\n+\n+    protected boolean displayAdd() {\n+        return true;\n+    }\n+\n+    protected void onCancel(final AjaxRequestTarget target) {\n+    }\n+\n+    protected void onDelete(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+    }\n+\n+    protected void onSave(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+    }\n+\n+    protected void onError(final AjaxRequestTarget target) {\n+    }\n+\n+    protected void onAdd(final AjaxRequestTarget target, final Pair<K, V> newRow) {\n+    }\n+\n+    protected class AjaxGridActionsColumn<P, S> extends EditableGridActionsColumn<Pair<K, V>, S> {\n+\n+        protected static final long serialVersionUID = 1L;\n+\n+        public AjaxGridActionsColumn(final IModel<String> displayModel) {\n+            super(displayModel);\n+        }\n+\n+        @Override\n+        public void populateItem(\n+                final Item<ICellPopulator<Pair<K, V>>> item,\n+                final String componentId,\n+                final IModel<Pair<K, V>> rowModel) {\n+\n+            item.add(new AjaxGridActionsPanel<>(componentId, item));\n+        }\n+\n+        @Override\n+        protected void onError(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+            AjaxGrid.this.onError(target);\n+        }\n+\n+        @Override\n+        protected void onSave(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+            AjaxGrid.this.onSave(target, rowModel);\n+        }\n+\n+        @Override\n+        protected void onDelete(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+            AjaxGrid.this.onDelete(target, rowModel);\n+        }\n+\n+        @Override\n+        protected void onCancel(final AjaxRequestTarget target) {\n+            AjaxGrid.this.onCancel(target);\n+        }\n+\n+        @Override\n+        protected boolean allowDelete(final Item<Pair<K, V>> rowItem) {\n+            return AjaxGrid.this.allowDelete(rowItem);\n+        }\n+    }\n+\n+    protected class AjaxGridActionsPanel<T> extends EditableGridActionsPanel<Pair<K, V>> {\n+\n+        private final Item<Pair<K, V>> rowItem;\n+\n+        @SuppressWarnings(\"unchecked\")\n+        public AjaxGridActionsPanel(final String id, final Item<ICellPopulator<Pair<K, V>>> item) {\n+            super(id, item);\n+\n+            rowItem = item.findParent(Item.class);\n+            addOrReplace(new AjaxLink<String>(\"delete\") {\n+\n+                @SuppressWarnings(\"unchecked\")\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    EditableDataTable eventTarget = rowItem.findParent(EditableDataTable.class);\n+                    send(getPage(), Broadcast.BREADTH, new GridOperationData<>(\n+                            OperationType.DELETE, (T) rowItem.getDefaultModelObject(), eventTarget));\n+                    target.add(eventTarget);\n+                    onDelete(target);\n+                }\n+\n+                @Override\n+                public boolean isVisible() {\n+                    return AjaxGridActionsPanel.this.allowDelete(rowItem);\n+                }\n+            });\n+        }\n+\n+        @Override\n+        protected void onSave(final AjaxRequestTarget target) {\n+            AjaxGrid.this.onSave(target, rowItem.getModel());\n+        }\n+\n+        @Override\n+        protected void onError(final AjaxRequestTarget target) {\n+            AjaxGrid.this.onError(target);\n+        }\n+\n+        @Override\n+        protected void onCancel(final AjaxRequestTarget target) {\n+            AjaxGrid.this.onCancel(target);\n+        }\n+\n+        @Override\n+        protected void onDelete(final AjaxRequestTarget target) {\n+            AjaxGrid.this.onDelete(target, rowItem.getModel());\n+        }\n+    }\n+}"},{"sha":"1e701fa3645c499e978e2d3fa3b502e424050b47","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridBottomToolbar.java","status":"added","additions":146,"deletions":0,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.form.IFormVisitorParticipant;\n+import org.apache.wicket.markup.html.list.Loop;\n+import org.apache.wicket.markup.html.list.LoopItem;\n+import org.apache.wicket.model.PropertyModel;\n+import org.wicketstuff.egrid.column.AbstractEditablePropertyColumn;\n+import org.wicketstuff.egrid.column.EditableCellPanel;\n+import org.wicketstuff.egrid.component.EditableDataTable;\n+import org.wicketstuff.egrid.component.EditableGridSubmitLink;\n+import org.wicketstuff.egrid.toolbar.AbstractEditableGridToolbar;\n+\n+public abstract class AjaxGridBottomToolbar<T, S> extends AbstractEditableGridToolbar {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    protected static final String CELL_ID = \"cell\";\n+\n+    protected static final String CELLS_ID = \"cells\";\n+\n+    protected T newRow = null;\n+\n+    public AjaxGridBottomToolbar(final EditableDataTable<?, ?> table) {\n+        super(table);\n+\n+        newRow = newRowInstance();\n+\n+        MarkupContainer td = new WebMarkupContainer(\"td\");\n+        td.add(new AttributeModifier(\"colspan\", table.getColumns().size() - 1));\n+        AddToolBarForm addToolBarForm = new AddToolBarForm(\"addToolbarForm\");\n+        td.add(addToolBarForm);\n+        add(td);\n+        add(newAddButton(addToolBarForm));\n+    }\n+\n+    protected abstract T newRowInstance();\n+\n+    protected abstract void onAdd(AjaxRequestTarget target, T newRow);\n+\n+    protected void onError(final AjaxRequestTarget target) {\n+    }\n+\n+    protected class AddToolBarForm extends Form<T> implements IFormVisitorParticipant {\n+\n+        protected static final long serialVersionUID = 1L;\n+\n+        public AddToolBarForm(final String id) {\n+            super(id);\n+            add(newEditorComponents());\n+        }\n+\n+        @Override\n+        public boolean processChildren() {\n+            return Optional.ofNullable(getRootForm().findSubmitter()).\n+                    map(submitter -> submitter.getForm() == this).\n+                    orElse(false);\n+        }\n+    }\n+\n+    protected Component newAddButton(final WebMarkupContainer encapsulatingContainer) {\n+        return new EditableGridSubmitLink(\"add\", encapsulatingContainer) {\n+\n+            protected static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onSuccess(final AjaxRequestTarget target) {\n+                onAdd(target, newRow);\n+                newRow = newRowInstance();\n+                target.add(getTable());\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target) {\n+                AjaxGridBottomToolbar.this.onError(target);\n+            }\n+        };\n+    }\n+\n+    protected Loop newEditorComponents() {\n+        List<AbstractEditablePropertyColumn<T, S>> columns = getEditableColumns();\n+        return new Loop(CELLS_ID, columns.size()) {\n+\n+            protected static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final LoopItem item) {\n+                addEditorComponent(item, getEditorColumn(columns, item.getIndex()));\n+            }\n+        };\n+    }\n+\n+    protected void addEditorComponent(final LoopItem item, final AbstractEditablePropertyColumn<T, S> toolBarCell) {\n+        item.add(newCell(toolBarCell));\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    protected List<AbstractEditablePropertyColumn<T, S>> getEditableColumns() {\n+        List<AbstractEditablePropertyColumn<T, S>> columns = new ArrayList<>();\n+        getTable().getColumns().stream().\n+                filter(AbstractEditablePropertyColumn.class::isInstance).\n+                map(AbstractEditablePropertyColumn.class::cast).\n+                forEach(columns::add);\n+        return columns;\n+    }\n+\n+    protected Component newCell(final AbstractEditablePropertyColumn<T, S> editableGridColumn) {\n+        EditableCellPanel panel = editableGridColumn.getEditableCellPanel(CELL_ID);\n+        FormComponent<?> editorComponent = panel.getEditableComponent();\n+        editorComponent.setDefaultModel(new PropertyModel<T>(newRow, editableGridColumn.getPropertyExpression()));\n+        return panel;\n+    }\n+\n+    protected AbstractEditablePropertyColumn<T, S> getEditorColumn(\n+            final List<AbstractEditablePropertyColumn<T, S>> editorColumn, final int index) {\n+\n+        return editorColumn.get(index);\n+    }\n+}"},{"sha":"9b12d10cdd278e6b390907ee375b1325b0755ef4","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridFieldPanel.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.tuple.MutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.wicketstuff.egrid.column.AbstractEditablePropertyColumn;\n+import org.wicketstuff.egrid.column.RequiredEditableTextFieldColumn;\n+import org.wicketstuff.egrid.provider.EditableListDataProvider;\n+\n+public class AjaxGridFieldPanel<K, V, S> extends Panel {\n+\n+    public AjaxGridFieldPanel(final String id, final String name, final IModel<Map<K, V>> model) {\n+        super(id, model);\n+\n+        add(new Label(AbstractFieldPanel.LABEL, new ResourceModel(name, name)));\n+\n+        add(new AjaxGrid<K, V, S>(\n+                \"grid\",\n+                getColumns(),\n+                new EditableListDataProvider<Pair<K, V>, S>(model.getObject().entrySet().stream().\n+                        map(entry -> MutablePair.of(entry.getKey(), entry.getValue())).\n+                        collect(Collectors.toList())), 10) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected boolean displayHeader() {\n+                return false;\n+            }\n+\n+            @Override\n+            protected void onAdd(final AjaxRequestTarget target, final Pair<K, V> newRow) {\n+                model.getObject().put(newRow.getLeft(), newRow.getRight());\n+            }\n+\n+            @Override\n+            protected void onDelete(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+                model.getObject().remove(rowModel.getObject().getLeft());\n+            }\n+\n+            @Override\n+            protected void onSave(final AjaxRequestTarget target, final IModel<Pair<K, V>> rowModel) {\n+                model.getObject().put(rowModel.getObject().getLeft(), rowModel.getObject().getRight());\n+            }\n+        });\n+    }\n+\n+    public AjaxGridFieldPanel hideLabel() {\n+        Component label = get(AbstractFieldPanel.LABEL);\n+        if (label != null) {\n+            label.setVisible(false);\n+        }\n+\n+        return this;\n+    }\n+\n+    private List<AbstractEditablePropertyColumn<Pair<K, V>, S>> getColumns() {\n+        List<AbstractEditablePropertyColumn<Pair<K, V>, S>> columns = new ArrayList<>();\n+        columns.add(new RequiredEditableTextFieldColumn<>(Model.of(), \"left\"));\n+        columns.add(new RequiredEditableTextFieldColumn<>(Model.of(), \"right\"));\n+        return columns;\n+    }\n+}"},{"sha":"59837203e3a3f5479777b9e19080e42d231ee0d5","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/FieldPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -24,7 +24,6 @@\n import java.io.Serializable;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.Attributable;\n@@ -71,7 +70,7 @@ public FieldPanel<T> setTitle(final String title, final boolean html) {\n         this.title = title;\n         field.add(new PopoverBehavior(\n                 Model.<String>of(),\n-            Optional.ofNullable(title).map(Model::of).orElseGet(Model::<String>of),\n+                Optional.ofNullable(title).map(Model::of).orElseGet(Model::<String>of),\n                 new PopoverConfig().withHtml(html).withHoverTrigger().withPlacement(\n                         index.getObject() != null && index.getObject() == 0\n                         ? TooltipConfig.Placement.bottom"},{"sha":"9f02c7bdf3bedc2e6f332a20102901427577fe7c","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.html","status":"modified","additions":11,"deletions":16,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -17,20 +17,15 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title>Ajax checkbox panel</title>\n-  </head>\n-  <body>\n-    <wicket:extend>\n-      <div class=\"checkbox\">\n-        <label style=\"width:100%\">\n-          <input type=\"checkbox\" wicket:id=\"checkboxField\" />\n-          <wicket:enclosure child=\"field-label\">\n-            <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n-            <span wicket:id=\"externalAction\"/>\n-          </wicket:enclosure>\n-        </label>\n-      </div>\n-    </wicket:extend>\n-  </body>\n+  <wicket:extend>\n+    <div class=\"checkbox\">\n+      <label style=\"width:100%\">\n+        <input type=\"checkbox\" wicket:id=\"checkboxField\" />\n+        <wicket:enclosure child=\"field-label\">\n+          <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+          <span wicket:id=\"externalAction\"/>\n+        </wicket:enclosure>\n+      </label>\n+    </div>\n+  </wicket:extend>\n </html>"},{"sha":"b8f41a25dfcb1157ca836182526bfb7156373b1a","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGrid$AjaxGridActionsPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid%24AjaxGridActionsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid%24AjaxGridActionsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid%24AjaxGridActionsPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <a wicket:id=\"edit\" href=\"#\"><i class=\"far fa-edit\"></i></a>\n+    <a wicket:id=\"save\" href=\"#\"><i class=\"far fa-save\"></i></a>\n+    <a wicket:id=\"cancel\" href=\"#\"><i class=\"far fa-window-close\"></i></a>\n+    <a wicket:id=\"delete\" href=\"#\"><i class=\"far fa-minus-square\"></i></a>\n+  </wicket:panel>\n+</html>"},{"sha":"2225cea03619934db85a854cc409091ca72a7bfc","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGrid.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,23 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <form wicket:id=\"form\">\n+      <table wicket:id=\"dataTable\"></table>\n+    </form>\n+  </wicket:panel>\n+</html>"},{"sha":"c8f37e3887cfc37143f279ae1f7767df780610d5","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridBottomToolbar.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridBottomToolbar.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,32 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <tr>\n+      <td wicket:id=\"td\" colspan=\"3\">\n+        <form wicket:id =\"addToolbarForm\">\n+          <span wicket:id=\"cells\">\n+            <span wicket:id=\"cell\">[cell data]</span>\n+          </span>\t\t\t\t\t\t\t\t\n+        </form>\t\n+      </td>\n+      <td>\t\t\t\t\t\t\t\n+        <a wicket:id=\"add\" href=\"#\"><i class=\"far fa-plus-square\"></i></a> \n+      </td>\n+    </tr>\n+  </wicket:panel>\n+</html>"},{"sha":"5df1f0225e0dd329da92c600915e41a32c26b3cb","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridFieldPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,24 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <wicket:enclosure child=\"field-label\">\n+      <label wicket:id=\"field-label\">[LABEL]</label>\n+    </wicket:enclosure>\n+    <div wicket:id=\"grid\"></div>\n+  </wicket:panel>\n+</html>"},{"sha":"30329ae917620f010f311491f3d79efa6b84ac0f","filename":"client/idrepo/common-ui/src/main/resources/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPasswordFieldPanel.html","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -17,16 +17,11 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title>Ajaxt password field panel</title>\n-  </head>\n-  <body>\n-    <wicket:extend>\n-      <wicket:enclosure child=\"field-label\">\n-        <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n-        <span wicket:id=\"externalAction\"/>\n-      </wicket:enclosure>\n-      <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n-    </wicket:extend>\n-  </body>\n+  <wicket:extend>\n+    <wicket:enclosure child=\"field-label\">\n+      <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+      <span wicket:id=\"externalAction\"/>\n+    </wicket:enclosure>\n+    <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n+  </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"456973c1cf3e055819262826c691dab768845671","filename":"client/idrepo/console/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -260,6 +260,7 @@ under the License.\n             <configuration>\n               <jvmArguments>\n                 -Dwicket.core.settings.general.configuration-type=development\n+                -XX:HotswapAgent=fatjar\n                 -Xdebug -Xrunjdwp:transport=dt_socket,address=8003,server=y,suspend=n\n               </jvmArguments>\n               <profiles>"},{"sha":"469116c96976a4744aa34d9e13e043a6941976a8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -29,11 +29,13 @@\n import org.apache.syncope.client.console.commons.IdRepoExternalResourceProvider;\n import org.apache.syncope.client.console.commons.IdRepoImplementationInfoProvider;\n import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.IdRepoRealmPolicyProvider;\n import org.apache.syncope.client.console.commons.IdRepoStatusProvider;\n import org.apache.syncope.client.console.commons.IdRepoVirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n+import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n@@ -152,9 +154,14 @@ public ImplementationInfoProvider implementationInfoProvider() {\n         return new IdRepoImplementationInfoProvider();\n     }\n \n-    @ConditionalOnMissingBean(name = \"policyTabProvider\")\n+    @ConditionalOnMissingBean(name = \"realmPolicyProvider\")\n     @Bean\n-    public PolicyTabProvider policyTabProvider() {\n+    public RealmPolicyProvider realmPolicyProvider() {\n+        return new IdRepoRealmPolicyProvider();\n+    }\n+\n+    @Bean\n+    public PolicyTabProvider idRepoPolicyTabProvider() {\n         return new IdRepoPolicyTabProvider();\n     }\n }"},{"sha":"7e1ca1b745635012f8d0378a24818e5f2bb17eda","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -24,6 +24,7 @@\n import de.agilecoders.wicket.core.settings.BootstrapSettings;\n import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.HashMap;\n@@ -77,6 +78,7 @@\n import org.apache.wicket.request.cycle.IRequestCycleListener;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -140,7 +142,7 @@ public static SyncopeWebApplication get() {\n     private ImplementationInfoProvider implementationInfoProvider;\n \n     @Autowired\n-    private PolicyTabProvider policyTabProvider;\n+    private ApplicationContext ctx;\n \n     private Map<String, Class<? extends BasePage>> pageClasses;\n \n@@ -249,7 +251,7 @@ protected void init() {\n \n         getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n \n-        lookup.getPageClasses().\n+        lookup.getIdRepoPageClasses().\n                 forEach(cls -> MetaDataRoleAuthorizationStrategy.authorize(cls, Constants.ROLE_AUTHENTICATED));\n \n         getMarkupSettings().setStripWicketTags(true);\n@@ -319,7 +321,7 @@ public void onEndRequest(final RequestCycle cycle) {\n         }\n         Args.notNull(reconciliationReportKey, \"<reconciliationReportKey>\");\n \n-        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n+        for (Class<? extends AbstractResource> resource : lookup.getClasses(AbstractResource.class)) {\n             Resource annotation = resource.getAnnotation(Resource.class);\n             try {\n                 AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n@@ -436,7 +438,7 @@ public ImplementationInfoProvider getImplementationInfoProvider() {\n         return implementationInfoProvider;\n     }\n \n-    public PolicyTabProvider getPolicyTabProvider() {\n-        return policyTabProvider;\n+    public Collection<PolicyTabProvider> getPolicyTabProviders() {\n+        return ctx.getBeansOfType(PolicyTabProvider.class).values();\n     }\n }"},{"sha":"ebfdf655ec1158f7fe837eb9c73e4c9a9826ee2e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoPolicyTabProvider.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -32,6 +32,11 @@ public class IdRepoPolicyTabProvider implements PolicyTabProvider {\n \n     private static final long serialVersionUID = 5017230231088263303L;\n \n+    @Override\n+    public int getOrder() {\n+        return 100;\n+    }\n+\n     @Override\n     public List<ITab> buildTabList(final PageReference pageRef) {\n         List<ITab> tabs = new ArrayList<>();"},{"sha":"7a9abbb431d176981dcb5725b23561e52d5564f2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoRealmPolicyProvider.java","status":"added","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.policy.PolicyTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class IdRepoRealmPolicyProvider implements RealmPolicyProvider {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.getPolicies(PolicyType.ACCOUNT).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n+        }\n+    };\n+\n+    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.getPolicies(PolicyType.PASSWORD).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n+        }\n+    };\n+\n+    @Override\n+    public void add(final RealmTO realmTO, final RepeatingView view) {\n+        AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"accountPolicy\"),\n+                false);\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n+        accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n+        view.add(accountPolicy);\n+\n+        AjaxDropDownChoicePanel<String> passwordPolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"passwordPolicy\"),\n+                false);\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n+        passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n+        ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n+        view.add(passwordPolicy);\n+    }\n+}"},{"sha":"56a2dc7772de677ede3946ceb757a33ffa733cfc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PolicyTabProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,9 +22,9 @@\n import java.util.List;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.springframework.core.Ordered;\n \n-@FunctionalInterface\n-public interface PolicyTabProvider extends Serializable {\n+public interface PolicyTabProvider extends Serializable, Ordered {\n \n     List<ITab> buildTabList(PageReference pageRef);\n }"},{"sha":"0a7eeb084fc94651c3278818372d30ecd5fcca80","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/RealmPolicyProvider.java","status":"renamed","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRealmPolicyProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -16,12 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib.auth;\n+package org.apache.syncope.client.console.commons;\n \n-import org.apache.syncope.common.lib.BaseBean;\n+import java.io.Serializable;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n \n-public abstract class AbstractAuthModuleConf implements BaseBean, AuthModuleConf {\n-\n-    private static final long serialVersionUID = 4153200197344709778L;\n+public interface RealmPolicyProvider extends Serializable {\n \n+    void add(RealmTO realmTO, RepeatingView view);\n }","previous_filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/AbstractAuthModuleConf.java"},{"sha":"cc2c2e16827e023131cb23ecac8dd48976a724dc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":92,"deletions":118,"changes":210,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -30,6 +30,7 @@\n import java.util.Map;\n import java.util.Objects;\n import java.util.Set;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.console.annotations.AMPage;\n import org.apache.syncope.client.ui.commons.annotations.ExtPage;\n@@ -38,7 +39,6 @@\n import org.apache.syncope.client.ui.commons.annotations.ExtWidget;\n import org.apache.syncope.client.console.annotations.IdMPage;\n import org.apache.syncope.client.ui.commons.annotations.Resource;\n-import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n@@ -58,19 +58,13 @@\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.util.ClassUtils;\n-import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.ImplementationInfoProvider;\n-import org.apache.syncope.client.console.commons.PolicyTabProvider;\n-import org.apache.syncope.client.console.commons.StatusProvider;\n-import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n-import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n import org.apache.syncope.client.console.wizards.any.UserFormFinalizer;\n import org.apache.syncope.client.console.annotations.UserFormFinalize;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n \n public class ClassPathScanImplementationLookup {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ClassPathScanImplementationLookup.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ClassPathScanImplementationLookup.class);\n \n     private static final String DEFAULT_BASE_PACKAGE = \"org.apache.syncope\";\n \n@@ -101,24 +95,14 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n         });\n     }\n \n-    private List<Class<? extends BasePage>> pages;\n+    private Map<String, List<Class<?>>> classes;\n \n-    private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n-\n-    private List<Class<? extends UserFormFinalizer>> userFormFinalizers;\n+    private List<Class<? extends BasePage>> idRepoPages;\n \n     private List<Class<? extends BasePage>> idmPages;\n \n     private List<Class<? extends BasePage>> amPages;\n \n-    private List<Class<? extends BaseExtPage>> extPages;\n-\n-    private List<Class<? extends BaseExtWidget>> extWidgets;\n-\n-    private List<Class<? extends ExtAlertWidget<?>>> extAlertWidgets;\n-\n-    private List<Class<? extends BaseSSOLoginFormPanel>> ssoLoginFormPanels;\n-\n     private Map<String, Class<? extends ReportletConf>> reportletConfs;\n \n     private Map<String, Class<? extends AccountRuleConf>> accountRuleConfs;\n@@ -129,8 +113,6 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n \n     private Map<String, Class<? extends PushCorrelationRuleConf>> pushCorrelationRuleConfs;\n \n-    private List<Class<? extends AbstractResource>> resources;\n-\n     /**\n      * This method can be overridden by subclasses to customize classpath scan.\n      *\n@@ -140,25 +122,9 @@ protected static String getBasePackage() {\n         return DEFAULT_BASE_PACKAGE;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    public void load() {\n-        pages = new ArrayList<>();\n-        previewers = new ArrayList<>();\n-        userFormFinalizers = new ArrayList<>();\n-        idmPages = new ArrayList<>();\n-        amPages = new ArrayList<>();\n-        extPages = new ArrayList<>();\n-        extWidgets = new ArrayList<>();\n-        extAlertWidgets = new ArrayList<>();\n-        ssoLoginFormPanels = new ArrayList<>();\n-        reportletConfs = new HashMap<>();\n-        accountRuleConfs = new HashMap<>();\n-        passwordRuleConfs = new HashMap<>();\n-        pullCorrelationRuleConfs = new HashMap<>();\n-        pushCorrelationRuleConfs = new HashMap<>();\n-        resources = new ArrayList<>();\n-\n+    protected ClassPathScanningCandidateComponentProvider scanner() {\n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n+\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(UserFormFinalizer.class));\n@@ -172,54 +138,75 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PushCorrelationRuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractResource.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(ExternalResourceProvider.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(AnyWizardBuilderAdditionalSteps.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(StatusProvider.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(VirSchemaDetailsPanelProvider.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(AnyDirectoryPanelAdditionalActionLinksProvider.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(ImplementationInfoProvider.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(PolicyTabProvider.class));\n-\n-        scanner.findCandidateComponents(getBasePackage()).forEach(bd -> {\n+\n+        return scanner;\n+    }\n+\n+    protected void addClass(final String category, final Class<?> clazz) {\n+        List<Class<?>> clazzes = classes.get(category);\n+        if (clazzes == null) {\n+            clazzes = new ArrayList<>();\n+            classes.put(category, clazzes);\n+        }\n+        clazzes.add(clazz);\n+    }\n+\n+    protected void additional(final Class<?> clazz) {\n+        // nothing to do\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public void load() {\n+        classes = new HashMap<>();\n+        idRepoPages = new ArrayList<>();\n+        idmPages = new ArrayList<>();\n+        amPages = new ArrayList<>();\n+        reportletConfs = new HashMap<>();\n+        accountRuleConfs = new HashMap<>();\n+        passwordRuleConfs = new HashMap<>();\n+        pullCorrelationRuleConfs = new HashMap<>();\n+        pushCorrelationRuleConfs = new HashMap<>();\n+\n+        scanner().findCandidateComponents(getBasePackage()).forEach(bd -> {\n             try {\n                 Class<?> clazz = ClassUtils.resolveClassName(\n                         Objects.requireNonNull(bd.getBeanClassName()), ClassUtils.getDefaultClassLoader());\n                 if (!Modifier.isAbstract(clazz.getModifiers())) {\n                     if (BaseExtPage.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(ExtPage.class)) {\n-                            extPages.add((Class<? extends BaseExtPage>) clazz);\n+                            addClass(BaseExtPage.class.getName(), clazz);\n                         } else {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n                                     ExtPage.class.getName(), clazz.getName());\n                         }\n                     } else if (BaseExtWidget.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(ExtWidget.class)) {\n-                            extWidgets.add((Class<? extends BaseExtWidget>) clazz);\n+                            addClass(BaseExtWidget.class.getName(), clazz);\n                         } else {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n                                     ExtWidget.class.getName(), clazz.getName());\n                         }\n                     } else if (ExtAlertWidget.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(ExtWidget.class)) {\n-                            extAlertWidgets.add((Class<? extends ExtAlertWidget<?>>) clazz);\n+                            addClass(ExtAlertWidget.class.getName(), clazz);\n                         } else {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n-                                    ExtWidget.class.getName(), clazz.getName());\n+                                    ExtAlertWidget.class.getName(), clazz.getName());\n                         }\n                     } else if (BasePage.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(IdMPage.class)) {\n                             idmPages.add((Class<? extends BasePage>) clazz);\n                         } else if (clazz.isAnnotationPresent(AMPage.class)) {\n                             amPages.add((Class<? extends BasePage>) clazz);\n                         } else {\n-                            pages.add((Class<? extends BasePage>) clazz);\n+                            idRepoPages.add((Class<? extends BasePage>) clazz);\n                         }\n                     } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n-                        previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                        addClass(AbstractBinaryPreviewer.class.getName(), clazz);\n                     } else if (UserFormFinalizer.class.isAssignableFrom(clazz)) {\n-                        userFormFinalizers.add((Class<? extends UserFormFinalizer>) clazz);\n+                        addClass(UserFormFinalizer.class.getName(), clazz);\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n-                        ssoLoginFormPanels.add((Class<? extends BaseSSOLoginFormPanel>) clazz);\n+                        addClass(BaseSSOLoginFormPanel.class.getName(), clazz);\n                     } else if (ReportletConf.class.isAssignableFrom(clazz)) {\n                         reportletConfs.put(clazz.getName(), (Class<? extends ReportletConf>) clazz);\n                     } else if (AccountRuleConf.class.isAssignableFrom(clazz)) {\n@@ -232,91 +219,60 @@ public void load() {\n                         pushCorrelationRuleConfs.put(clazz.getName(), (Class<? extends PushCorrelationRuleConf>) clazz);\n                     } else if (AbstractResource.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(Resource.class)) {\n-                            resources.add((Class<? extends AbstractResource>) clazz);\n+                            addClass(AbstractResource.class.getName(), clazz);\n                         } else {\n                             LOG.error(\"Could not find annotation {} in {}, ignoring\",\n                                     Resource.class.getName(), clazz.getName());\n                         }\n+                    } else {\n+                        additional(clazz);\n                     }\n                 }\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }\n         });\n-        pages = Collections.unmodifiableList(pages);\n \n-        previewers = Collections.unmodifiableList(previewers);\n-        userFormFinalizers = Collections.unmodifiableList(userFormFinalizers);\n+        idRepoPages = Collections.unmodifiableList(idRepoPages);\n \n         idmPages.sort(Comparator.comparing(o -> o.getAnnotation(IdMPage.class).priority()));\n         idmPages = Collections.unmodifiableList(idmPages);\n \n         amPages.sort(Comparator.comparing(o -> o.getAnnotation(AMPage.class).priority()));\n         amPages = Collections.unmodifiableList(amPages);\n \n-        extPages.sort(Comparator.comparing(o -> o.getAnnotation(ExtPage.class).priority()));\n-        extPages = Collections.unmodifiableList(extPages);\n+        if (classes.containsKey(BaseExtPage.class.getName())) {\n+            classes.get(BaseExtPage.class.getName()).\n+                    sort(Comparator.comparing(o -> o.getAnnotation(ExtPage.class).priority()));\n+        }\n \n-        extWidgets.sort(Comparator.comparing(o -> o.getAnnotation(ExtWidget.class).priority()));\n-        extWidgets = Collections.unmodifiableList(extWidgets);\n+        if (classes.containsKey(BaseExtWidget.class.getName())) {\n+            classes.get(BaseExtWidget.class.getName()).\n+                    sort(Comparator.comparing(o -> o.getAnnotation(ExtWidget.class).priority()));\n+        }\n \n-        extAlertWidgets.sort(Comparator.comparing(o -> o.getAnnotation(ExtWidget.class).priority()));\n-        extAlertWidgets = Collections.unmodifiableList(extAlertWidgets);\n+        if (classes.containsKey(ExtAlertWidget.class.getName())) {\n+            classes.get(ExtAlertWidget.class.getName()).\n+                    sort(Comparator.comparing(o -> o.getAnnotation(ExtWidget.class).priority()));\n+        }\n \n-        ssoLoginFormPanels = Collections.unmodifiableList(ssoLoginFormPanels);\n+        classes.forEach((category, clazzes) -> LOG.debug(\"{} found: {}\", category, clazzes));\n \n         reportletConfs = Collections.unmodifiableMap(reportletConfs);\n         accountRuleConfs = Collections.unmodifiableMap(accountRuleConfs);\n         passwordRuleConfs = Collections.unmodifiableMap(passwordRuleConfs);\n         pullCorrelationRuleConfs = Collections.unmodifiableMap(pullCorrelationRuleConfs);\n         pushCorrelationRuleConfs = Collections.unmodifiableMap(pushCorrelationRuleConfs);\n \n-        resources = Collections.unmodifiableList(resources);\n-\n-        LOG.debug(\"Binary previewers found: {}\", previewers);\n-        LOG.debug(\"User Form finalizers found {}\", userFormFinalizers);\n-        LOG.debug(\"Extension pages found: {}\", extPages);\n-        LOG.debug(\"Extension widgets found: {}\", extWidgets);\n-        LOG.debug(\"Extension alert widgets found: {}\", extAlertWidgets);\n-        LOG.debug(\"SSO Login pages found: {}\", ssoLoginFormPanels);\n         LOG.debug(\"Reportlet configurations found: {}\", reportletConfs);\n         LOG.debug(\"Account Rule configurations found: {}\", accountRuleConfs);\n         LOG.debug(\"Password Rule configurations found: {}\", passwordRuleConfs);\n         LOG.debug(\"Pull Correlation Rule configurations found: {}\", pullCorrelationRuleConfs);\n         LOG.debug(\"Push Correlation Rule configurations found: {}\", pushCorrelationRuleConfs);\n-        LOG.debug(\"Wicket Resources found: {}\", resources);\n     }\n \n-    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n-        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n-        Class<? extends AbstractBinaryPreviewer> previewer = null;\n-        for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n-            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n-            if (candidate.isAnnotationPresent(BinaryPreview.class)\n-                    && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n-                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n-                previewer = candidate;\n-            }\n-        }\n-        return previewer;\n-    }\n-\n-    public List<Class<? extends UserFormFinalizer>> getUserFormFinalizerClasses(final AjaxWizard.Mode mode) {\n-        List<Class<? extends UserFormFinalizer>> classes = new ArrayList<>();\n-\n-        userFormFinalizers.forEach(candidate -> {\n-            if (candidate.isAnnotationPresent(UserFormFinalize.class)\n-                    && candidate.getAnnotation(UserFormFinalize.class).mode() == mode) {\n-\n-                classes.add(candidate);\n-            }\n-        });\n-\n-        return classes;\n-    }\n-\n-    public List<Class<? extends BasePage>> getPageClasses() {\n-        return pages;\n+    public List<Class<? extends BasePage>> getIdRepoPageClasses() {\n+        return idRepoPages;\n     }\n \n     public List<Class<? extends BasePage>> getIdMPageClasses() {\n@@ -327,20 +283,42 @@ public List<Class<? extends BasePage>> getAMPageClasses() {\n         return amPages;\n     }\n \n-    public List<Class<? extends BaseExtPage>> getExtPageClasses() {\n-        return extPages;\n+    @SuppressWarnings(\"unchecked\")\n+    public <T> List<Class<? extends T>> getClasses(final Class<T> reference) {\n+        return classes.getOrDefault(reference.getName(), List.of()).stream().\n+                map(clazz -> (Class<? extends T>) clazz).\n+                collect(Collectors.toList());\n     }\n \n-    public List<Class<? extends BaseExtWidget>> getExtWidgetClasses() {\n-        return extWidgets;\n+    public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n+        LOG.debug(\"Searching for previewer class for MIME type: {}\", mimeType);\n+\n+        Class<? extends AbstractBinaryPreviewer> previewer = null;\n+        for (Class<? extends AbstractBinaryPreviewer> candidate : getClasses(AbstractBinaryPreviewer.class)) {\n+            LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n+            if (candidate.isAnnotationPresent(BinaryPreview.class)\n+                    && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n+                LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n+                previewer = candidate;\n+            }\n+        }\n+        return previewer;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public List<Class<? extends ExtAlertWidget<?>>> getExtAlertWidgetClasses() {\n-        return extAlertWidgets;\n+        return classes.getOrDefault(ExtAlertWidget.class.getName(), List.of()).stream().\n+                map(clazz -> (Class<? extends ExtAlertWidget<?>>) clazz).\n+                collect(Collectors.toList());\n     }\n \n-    public List<Class<? extends BaseSSOLoginFormPanel>> getSSOLoginFormPanels() {\n-        return ssoLoginFormPanels;\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Class<? extends UserFormFinalizer>> getUserFormFinalizerClasses(final AjaxWizard.Mode mode) {\n+        return classes.getOrDefault(UserFormFinalizer.class.getName(), List.of()).stream().\n+                filter(candidate -> candidate.isAnnotationPresent(UserFormFinalize.class)\n+                && candidate.getAnnotation(UserFormFinalize.class).mode() == mode).\n+                map(clazz -> (Class<? extends UserFormFinalizer>) clazz).\n+                collect(Collectors.toList());\n     }\n \n     public Map<String, Class<? extends ReportletConf>> getReportletConfs() {\n@@ -362,8 +340,4 @@ public Map<String, Class<? extends PullCorrelationRuleConf>> getPullCorrelationR\n     public Map<String, Class<? extends PushCorrelationRuleConf>> getPushCorrelationRuleConfs() {\n         return pushCorrelationRuleConfs;\n     }\n-\n-    public List<Class<? extends AbstractResource>> getResources() {\n-        return resources;\n-    }\n }"},{"sha":"999630cb313313bbea82cc27c56cf60414c3d17c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -468,7 +468,7 @@ protected void populateItem(final ListItem<Class<? extends ExtAlertWidget<?>>> i\n         };\n         body.add(extAlertWidgets);\n \n-        List<Class<? extends BaseExtPage>> extPageClasses = lookup.getExtPageClasses();\n+        List<Class<? extends BaseExtPage>> extPageClasses = lookup.getClasses(BaseExtPage.class);\n \n         WebMarkupContainer extensionsLI = new WebMarkupContainer(getLIContainerId(\"extensions\"));\n         extensionsLI.setOutputMarkupPlaceholderTag(true);"},{"sha":"fdd169102728a70b25ad68ae814c0df34de82302","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Dashboard.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -79,7 +79,7 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        List<Class<? extends BaseExtWidget>> extWidgetClasses = lookup.getExtWidgetClasses();\n+        List<Class<? extends BaseExtWidget>> extWidgetClasses = lookup.getClasses(BaseExtWidget.class);\n         if (!extWidgetClasses.isEmpty()) {\n             tabs.add(new AbstractTab(new ResourceModel(\"extensions\")) {\n "},{"sha":"0a664ad11f086dc6cc653360e75abe6c68f80a9c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.ui.commons.BaseLogin;\n import org.apache.syncope.client.ui.commons.BaseSession;\n+import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authentication.IAuthenticationStrategy;\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n@@ -53,7 +54,7 @@ protected BaseSession getBaseSession() {\n     @Override\n     protected List<Panel> getSSOLoginFormPanels() {\n         List<Panel> ssoLoginFormPanels = new ArrayList<>();\n-        lookup.getSSOLoginFormPanels().forEach(ssoLoginFormPanel -> {\n+        lookup.getClasses(BaseSSOLoginFormPanel.class).forEach(ssoLoginFormPanel -> {\n             try {\n                 ssoLoginFormPanels.add(ssoLoginFormPanel.getConstructor(String.class, BaseSession.class).newInstance(\n                         \"ssoLogin\", SyncopeConsoleSession.get()));"},{"sha":"083a41e384e66e1303ea5e9eda3b047fbb26135b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Policies.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -19,8 +19,13 @@\n package org.apache.syncope.client.console.pages;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n@@ -36,8 +41,14 @@ public Policies(final PageParameters parameters) {\n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.setOutputMarkupId(true);\n         content.setMarkupId(\"policies\");\n-        content.add(new AjaxBootstrapTabbedPanel<>(\n-                \"tabbedPanel\", SyncopeWebApplication.get().getPolicyTabProvider().buildTabList(getPageReference())));\n+\n+        List<ITab> tabs = SyncopeWebApplication.get().getPolicyTabProviders().stream().\n+                sorted(Comparator.comparing(PolicyTabProvider::getOrder)).\n+                map(p -> p.buildTabList(getPageReference())).\n+                flatMap(List::stream).\n+                collect(Collectors.toList());\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", tabs));\n+\n         body.add(content);\n     }\n }"},{"sha":"a7707acfd232f582a9c0491c217d4fec43f36d28","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxGridFieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.report.SearchCondition;\n@@ -177,9 +178,7 @@ protected void populateItem(final ListItem<String> item) {\n                     }\n \n                     if (listItemType.equals(String.class) && schemaAnnot != null) {\n-                        SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-                        final List<SchemaTO> choices = new ArrayList<>();\n+                        List<SchemaTO> choices = new ArrayList<>();\n \n                         for (SchemaType type : schemaAnnot.type()) {\n                             switch (type) {\n@@ -219,6 +218,9 @@ protected void populateItem(final ListItem<String> item) {\n                                 fieldName,\n                                 buildSinglePanel(bean.getObject(), field.getType(), fieldName, \"panel\")).hideLabel();\n                     }\n+                } else if (Map.class.equals(field.getType())) {\n+                    panel = new AjaxGridFieldPanel(\n+                            \"value\", fieldName, new PropertyModel<>(bean, fieldName)).hideLabel();\n                 } else {\n                     panel = buildSinglePanel(bean.getObject(), field.getType(), fieldName, \"value\").hideLabel();\n                 }\n@@ -229,11 +231,13 @@ protected void populateItem(final ListItem<String> item) {\n         }.setReuseItems(true).setOutputMarkupId(true));\n     }\n \n-    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+    @SuppressWarnings(\"unchecked\")\n     private static FieldPanel buildSinglePanel(\n-        final Serializable bean, final Class<?> type, final String fieldName, final String id) {\n-        FieldPanel result = null;\n-        PropertyModel model = new PropertyModel(bean, fieldName);\n+            final Serializable bean, final Class<?> type, final String fieldName, final String id) {\n+\n+        PropertyModel model = new PropertyModel<>(bean, fieldName);\n+\n+        FieldPanel result;\n         if (ClassUtils.isAssignable(Boolean.class, type)) {\n             result = new AjaxCheckBoxPanel(id, fieldName, model);\n         } else if (ClassUtils.isAssignable(Number.class, type)) {\n@@ -243,12 +247,9 @@ private static FieldPanel buildSinglePanel(\n             result = new AjaxDateTimeFieldPanel(id, fieldName, model,\n                     FastDateFormat.getInstance(SyncopeConstants.DEFAULT_DATE_PATTERN));\n         } else if (type.isEnum()) {\n-            result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(\n-                    List.of(type.getEnumConstants()));\n-        }\n-\n-        // treat as String if nothing matched above\n-        if (result == null) {\n+            result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(List.of(type.getEnumConstants()));\n+        } else {\n+            // treat as String if nothing matched above\n             result = new AjaxTextFieldPanel(id, fieldName, model);\n         }\n "},{"sha":"9b5930ef16255b8e70c550bcf4ee8858b0745837","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ConfParam.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConfParam.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -79,4 +79,13 @@ public boolean isMultivalue() {\n     public boolean isInstance(final Class<?> clazz) {\n         return !values.isEmpty() && clazz.isInstance(values.get(0));\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"ConfParam{\"\n+                + \"schema=\" + schema\n+                + \", values=\" + values\n+                + \", multivalue=\" + multivalue\n+                + '}';\n+    }\n }"},{"sha":"9c1c0523a2f7a4cc4086d2a67f9566ca9c1d89a0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DynRealmModalPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -38,7 +37,6 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -90,7 +88,7 @@ protected List<AnyTypeTO> load() {\n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n-                item.add(new Accordion(\"dynMembershipCond\", Collections.<ITab>singletonList(\n+                item.add(new Accordion(\"dynMembershipCond\", List.of(\n                         new AbstractTab(Model.of(key + \" Dynamic Condition\")) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;"},{"sha":"92220e3da529974f627eacceff1cf0b969e5b636","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,6 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -82,9 +81,7 @@ protected WizardMgtPanel<ConfParam> newInstance(final String id, final boolean w\n             private static final long serialVersionUID = 1995192603527154740L;\n \n             @Override\n-            public WizardModalPanel<ConfParam> build(\n-                    final String id, final int index, final AjaxWizard.Mode mode) {\n-\n+            public WizardModalPanel<ConfParam> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 return new ParametersModalPanel(modal, newModelObject(), confParamOps, mode, pageRef);\n             }\n         }, true);\n@@ -108,7 +105,7 @@ protected String paginatorRowsKey() {\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBatches() {\n-        return Collections.<ActionLink.ActionType>singletonList(ActionLink.ActionType.DELETE);\n+        return List.of();\n     }\n \n     @Override\n@@ -147,7 +144,6 @@ public ActionsPanel<ConfParam> getActions(final IModel<ConfParam> model) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final ConfParam ignore) {\n                 target.add(modal);\n-                // modal.addSubmitButton();\n                 modal.header(new StringResourceModel(\"any.edit\"));\n                 modal.setContent(new ParametersModalPanel(\n                         modal, model.getObject(), confParamOps, AjaxWizard.Mode.EDIT, pageRef));"},{"sha":"56986f417a42a85a5fbfb4c95aba2262e939e661","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardAttrStep.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n@@ -48,7 +49,10 @@ public class ParametersWizardAttrStep extends WizardStep {\n \n     private final AjaxTextFieldPanel schema;\n \n-    public ParametersWizardAttrStep(final ParametersWizardPanel.ParametersForm modelObject) {\n+    public ParametersWizardAttrStep(\n+            final AjaxWizard.Mode mode,\n+            final ParametersWizardPanel.ParametersForm modelObject) {\n+\n         this.setOutputMarkupId(true);\n \n         WebMarkupContainer content = new WebMarkupContainer(\"content\");\n@@ -58,10 +62,10 @@ public ParametersWizardAttrStep(final ParametersWizardPanel.ParametersForm model\n         schema = new AjaxTextFieldPanel(\n                 \"schema\", getString(\"schema\"), new PropertyModel<>(modelObject.getParam(), \"schema\"));\n         schema.setRequired(true);\n+        schema.setReadOnly(mode != AjaxWizard.Mode.CREATE);\n         content.add(schema);\n \n-        LoadableDetachableModel<List<PlainSchemaTO>> loadableDetachableModel =\n-                new LoadableDetachableModel<List<PlainSchemaTO>>() {\n+        LoadableDetachableModel<List<PlainSchemaTO>> schemas = new LoadableDetachableModel<List<PlainSchemaTO>>() {\n \n             private static final long serialVersionUID = 7172461137064525667L;\n \n@@ -71,23 +75,21 @@ protected List<PlainSchemaTO> load() {\n             }\n         };\n \n-        ListView<PlainSchemaTO> listView = new ListView<PlainSchemaTO>(\"attrs\", loadableDetachableModel) {\n+        ListView<PlainSchemaTO> attrs = new ListView<PlainSchemaTO>(\"attrs\", schemas) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<PlainSchemaTO> item) {\n-                final Panel panel = getFieldPanel(\"panel\", modelObject.getParam(), item.getModelObject());\n-                item.add(panel);\n+                item.add(getFieldPanel(\"panel\", modelObject.getParam(), item.getModelObject()));\n             }\n         };\n-\n-        content.add(listView);\n+        content.add(attrs);\n     }\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private Panel getFieldPanel(final String id, final ConfParam param, final PlainSchemaTO plainSchemaTO) {\n-        final String valueHeaderName = getString(\"values\");\n+        String valueHeaderName = getString(\"values\");\n \n         final FieldPanel panel;\n         switch (plainSchemaTO.getType()) {"},{"sha":"2917c46ccbbff9462db8a930dddbc70ac8e91071","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -42,7 +42,7 @@ public ParametersWizardPanel(\n     @Override\n     protected WizardModel buildModelSteps(final ParametersForm modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new ParametersWizardSchemaStep(modelObject));\n-        wizardModel.add(new ParametersWizardAttrStep(modelObject));\n+        wizardModel.add(new ParametersWizardAttrStep(mode, modelObject));\n         return wizardModel;\n     }\n "},{"sha":"30483697c906911d01d4f21aa77b6189e6603c1b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":9,"deletions":50,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,34 +18,28 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.policy.PolicyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n-import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.RepeatingView;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -55,28 +49,6 @@ public class RealmDetails extends Panel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(RealmDetails.class);\n \n-    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.getPolicies(PolicyType.ACCOUNT).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n-        }\n-    };\n-\n-    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.getPolicies(PolicyType.PASSWORD).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getDescription));\n-        }\n-    };\n-\n     private final IModel<List<String>> logicActions = new LoadableDetachableModel<List<String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n@@ -98,6 +70,9 @@ protected List<String> load() {\n         }\n     };\n \n+    @SpringBean\n+    private RealmPolicyProvider realmPolicyProvider;\n+\n     private final WebMarkupContainer container;\n \n     public RealmDetails(final String id, final RealmTO realmTO) {\n@@ -130,25 +105,9 @@ public RealmDetails(\n         fullPath.setEnabled(false);\n         generics.add(fullPath);\n \n-        AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n-                \"accountPolicy\",\n-                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n-                new PropertyModel<>(realmTO, \"accountPolicy\"),\n-                false);\n-        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n-        accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n-        ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n-        container.add(accountPolicy);\n-\n-        AjaxDropDownChoicePanel<String> passwordPolicy = new AjaxDropDownChoicePanel<>(\n-                \"passwordPolicy\",\n-                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n-                new PropertyModel<>(realmTO, \"passwordPolicy\"),\n-                false);\n-        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n-        passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n-        ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n-        container.add(passwordPolicy);\n+        RepeatingView policies = new RepeatingView(\"policies\");\n+        realmPolicyProvider.add(realmTO, policies);\n+        container.add(policies);\n \n         AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                 setAllowMoveAll(true).setAllowOrder(true)."},{"sha":"c2df030ceb756b9ca6b9017508b68e49bd51608e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,7 +22,6 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -261,7 +260,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBatches() {\n-        return Collections.<ActionLink.ActionType>singletonList(ActionLink.ActionType.DELETE);\n+        return List.of(ActionLink.ActionType.DELETE);\n     }\n \n     public abstract static class Builder"},{"sha":"67b3056acfa54448eba986675f99cf5eb8cf6c0c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -112,8 +112,10 @@ protected List<IColumn<T, String>> getColumns() {\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"description\", this), \"description\", \"description\"));\n-        columns.add(new CollectionPropertyColumn<>(\n-                new StringResourceModel(\"usedByResources\", this), \"usedByResources\"));\n+        if (type != PolicyType.ACCESS && type != PolicyType.ATTR_RELEASE && type != PolicyType.AUTH) {\n+            columns.add(new CollectionPropertyColumn<>(\n+                    new StringResourceModel(\"usedByResources\", this), \"usedByResources\"));\n+        }\n         if (type != PolicyType.PULL && type != PolicyType.PUSH) {\n             columns.add(new CollectionPropertyColumn<>(\n                     new StringResourceModel(\"usedByRealms\", this), \"usedByRealms\"));"},{"sha":"be9bbe8f925b86ee5877d7161f69ff618c679426","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -135,7 +135,7 @@ public static class Configuration extends WizardStep {\n         private static final long serialVersionUID = -785981096328637758L;\n \n         public Configuration(final ReportletWrapper reportlet) {\n-            final LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<Serializable>() {\n+            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<Serializable>() {\n \n                 private static final long serialVersionUID = 2092144708018739371L;\n "},{"sha":"11a4c6bc529fe9fa176e8683c920bcf88fa73e25","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -76,9 +76,9 @@ private static class PolicyComparator implements Comparator<PolicyTO>, Serializa\n \n         @Override\n         public int compare(final PolicyTO left, final PolicyTO right) {\n-            return Optional.ofNullable(left).map(to -> Optional.ofNullable(right)\n-                .map(policyTO -> to.getDescription().compareTo(policyTO.getDescription())).orElse(1)).orElse(-1);\n+            return Optional.ofNullable(left).map(to -> Optional.ofNullable(right).\n+                    map(policyTO -> to.getDescription().compareTo(policyTO.getDescription())).orElse(1)).\n+                    orElse(-1);\n         }\n-\n     }\n }"},{"sha":"5a0e02c48d78acc6d918732a6c044b0698fa9ed6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskFilters.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n@@ -27,7 +26,6 @@\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -60,7 +58,7 @@ protected List<AnyTypeTO> load() {\n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n-                item.add(new Accordion(\"filters\", Collections.<ITab>singletonList(\n+                item.add(new Accordion(\"filters\", List.of(\n                         new AbstractTab(new StringResourceModel(\n                                 \"filters\", this, new Model<>(item.getModelObject()))) {\n "},{"sha":"46d68b0bbebd4a0320d7905a6c832f941c6720ad","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TemplatesTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -79,7 +79,7 @@ public TemplatesTogglePanel(final String targetId, final MarkupContainer contain\n         form = new Form<>(\"templatesForm\");\n         addInnerObject(form);\n \n-        final FieldPanel<String> type = new AjaxDropDownChoicePanel<>(\"type\", \"type\", typeModel, false).\n+        FieldPanel<String> type = new AjaxDropDownChoicePanel<>(\"type\", \"type\", typeModel, false).\n                 setChoices(anyTypes).\n                 setStyleSheet(\"form-control\").\n                 setRequired(true);"},{"sha":"40c4487a8d5159e80eb837df922a468293eb16cf","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -30,6 +28,7 @@\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;\n@@ -38,7 +37,6 @@\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.MarkupStream;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -62,7 +60,7 @@ public <T extends AnyTO> DerAttrs(\n         super(modelObject, AjaxWizard.Mode.CREATE, anyTypeClasses, whichDerAttrs);\n         setTitleModel(new ResourceModel(\"attributes.derived\"));\n \n-        add(new Accordion(\"derSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"derSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Derived Attributes\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -80,7 +78,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipDerSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                item.add(new Accordion(\"membershipDerSchemas\", List.of(new AbstractTab(\n                         new StringResourceModel(\n                                 \"attributes.membership.accordion\",\n                                 DerAttrs.this,"},{"sha":"ec0f11efddeaff977dc00fca7ea5ca1cf6642c16","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -30,7 +29,6 @@\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -63,7 +61,7 @@ protected List<AnyTypeTO> load() {\n         // ------------------------\n         // uDynMembershipCond\n         // ------------------------\n-        add(new Accordion(\"uDynMembershipCond\", Collections.<ITab>singletonList(\n+        add(new Accordion(\"uDynMembershipCond\", List.of(\n                 new AbstractTab(new ResourceModel(\"uDynMembershipCond\", \"Dynamic USER Membership Conditions\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -86,7 +84,7 @@ public Panel getPanel(final String panelId) {\n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n-                item.add(new Accordion(\"aDynMembershipCond\", Collections.<ITab>singletonList(\n+                item.add(new Accordion(\"aDynMembershipCond\", List.of(\n                         new AbstractTab(new StringResourceModel(\n                                 \"aDynMembershipCond\", this, new Model<AnyTypeTO>(item.getModelObject()))) {\n "},{"sha":"0a6c257ee0a5241d09823f87b91ba44937612414","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.List;\n import org.apache.syncope.client.ui.commons.wizards.any.PasswordPanel;\n-import java.util.Collections;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.ui.commons.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n@@ -79,9 +79,9 @@ public UserDetails(\n         // ------------------------\n         // Password\n         // ------------------------\n-        final Model<Integer> model = Model.of(-1);\n+        Model<Integer> model = Model.of(-1);\n \n-        final Accordion accordion = new Accordion(\"accordionPanel\", Collections.<ITab>singletonList(\n+        Accordion accordion = new Accordion(\"accordionPanel\", List.of(\n                 new AbstractTab(new ResourceModel(\"password.change\", \"Change password\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;"},{"sha":"2c819504a1623f60e4d190a4dbc9ff2f47e52eb3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":15,"deletions":21,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,6 @@\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -42,7 +41,6 @@\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -57,8 +55,6 @@ public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private final AjaxWizard.Mode mode;\n-\n     private final AnyWrapper<?> modelObject;\n \n     public <T extends AnyTO> VirAttrs(\n@@ -68,12 +64,11 @@ public <T extends AnyTO> VirAttrs(\n             final List<String> whichVirAttrs) {\n \n         super(modelObject, mode, anyTypeClasses, whichVirAttrs);\n-        this.mode = mode;\n         this.modelObject = modelObject;\n \n         setTitleModel(new ResourceModel(\"attributes.virtual\"));\n \n-        add(new Accordion(\"virSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"virSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Virtual Attributes\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -90,21 +85,20 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n-                final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipVirSchemas\",\n-                        Collections.<ITab>singletonList(new AbstractTab(new StringResourceModel(\n-                                \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n-\n-                            private static final long serialVersionUID = 1037272333056449378L;\n-\n-                            @Override\n-                            public WebMarkupContainer getPanel(final String panelId) {\n-                                return new VirAttrs.VirSchemas(\n-                                        panelId,\n-                                        membershipSchemas.get(membershipTO.getGroupKey()),\n-                                        new ListModel<>(getAttrsFromTO(membershipTO)));\n-                            }\n-                        }), Model.of(-1)).setOutputMarkupId(true));\n+                MembershipTO membTO = item.getModelObject();\n+                item.add(new Accordion(\"membershipVirSchemas\", List.of(new AbstractTab(\n+                        new StringResourceModel(\"attributes.membership.accordion\", VirAttrs.this, Model.of(membTO))) {\n+\n+                    private static final long serialVersionUID = 1037272333056449378L;\n+\n+                    @Override\n+                    public WebMarkupContainer getPanel(final String panelId) {\n+                        return new VirAttrs.VirSchemas(\n+                                panelId,\n+                                membershipSchemas.get(membTO.getGroupKey()),\n+                                new ListModel<>(getAttrsFromTO(membTO)));\n+                    }\n+                }), Model.of(-1)).setOutputMarkupId(true));\n             }\n         });\n     }"},{"sha":"f7295d804d3ee9a62b0ac5ce3fe106a933b9ec0e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/AbstractMappingPanel.java","status":"modified","additions":66,"deletions":24,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -58,10 +58,16 @@ public abstract class AbstractMappingPanel extends Panel {\n      */\n     protected final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n+    protected final Label connObjectKeyLabel;\n+\n     protected final Label passwordLabel;\n \n     protected final Label purposeLabel;\n \n+    protected final Label intAttrNameInfo;\n+\n+    protected final WebMarkupContainer mandatoryHeader;\n+\n     /**\n      * Add mapping button.\n      */\n@@ -83,7 +89,6 @@ public AbstractMappingPanel(\n             final JEXLTransformersTogglePanel jexlTransformers,\n             final IModel<List<ItemTO>> model,\n             final boolean addMappingBtnVisible,\n-            final boolean hidePurpose,\n             final MappingPurpose defaultPurpose) {\n \n         super(id);\n@@ -93,14 +98,22 @@ public AbstractMappingPanel(\n         mappingContainer.setOutputMarkupId(true);\n         add(mappingContainer);\n \n+        mappingContainer.add(new Label(\"itemTransformersLabel\", Model.of()).setVisible(itemTransformers != null));\n+\n+        mappingContainer.add(new Label(\"jexlTransformersLabel\", Model.of()).setVisible(jexlTransformers != null));\n+\n+        connObjectKeyLabel = new Label(\"connObjectKeyLabel\", new ResourceModel(\"connObjectKey\"));\n+        mappingContainer.add(connObjectKeyLabel);\n+\n         passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n         mappingContainer.add(passwordLabel);\n \n         purposeLabel = new Label(\"purposeLabel\", new ResourceModel(\"purpose\"));\n         mappingContainer.add(purposeLabel);\n \n-        mappingContainer.add(new Label(\"intAttrNameInfo\", Model.of()).add(new PopoverBehavior(\n-                Model.<String>of(),\n+        intAttrNameInfo = new Label(\"intAttrNameInfo\", Model.of());\n+        intAttrNameInfo.add(new PopoverBehavior(\n+                Model.of(),\n                 Model.of(getString(\"intAttrNameInfo.help\")\n                         + \"<code>groups[groupName].attribute</code>, \"\n                         + \"<code>users[userName].attribute</code>, \"\n@@ -116,9 +129,13 @@ public AbstractMappingPanel(\n             protected String createRelAttribute() {\n                 return \"intAttrNameInfo\";\n             }\n-        }));\n+        });\n+        mappingContainer.add(intAttrNameInfo);\n \n-        mappingContainer.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n+        mandatoryHeader = new WebMarkupContainer(\"mandatoryHeader\");\n+        mandatoryHeader.setOutputMarkupId(true);\n+        mandatoryHeader.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n+        mappingContainer.add(mandatoryHeader);\n \n         model.getObject().sort((left, right) -> {\n             int compared;\n@@ -141,17 +158,17 @@ protected String createRelAttribute() {\n             } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n                 compared = 1;\n             } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n-                && (right.getPurpose() == MappingPurpose.PULL\n-                || right.getPurpose() == MappingPurpose.NONE)) {\n+                    && (right.getPurpose() == MappingPurpose.PULL\n+                    || right.getPurpose() == MappingPurpose.NONE)) {\n                 compared = -1;\n             } else if (left.getPurpose() == MappingPurpose.PULL\n-                && right.getPurpose() == MappingPurpose.PROPAGATION) {\n+                    && right.getPurpose() == MappingPurpose.PROPAGATION) {\n                 compared = 1;\n             } else if (left.getPurpose() == MappingPurpose.PULL\n-                && right.getPurpose() == MappingPurpose.NONE) {\n+                    && right.getPurpose() == MappingPurpose.NONE) {\n                 compared = -1;\n             } else if (left.getPurpose() == MappingPurpose.NONE\n-                && right.getPurpose() != MappingPurpose.NONE) {\n+                    && right.getPurpose() != MappingPurpose.NONE) {\n                 compared = 1;\n             } else {\n                 compared = left.getIntAttrName().compareTo(right.getIntAttrName());\n@@ -201,15 +218,24 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 //--------------------------------\n                 // JEXL transformers\n                 // -------------------------------\n-                item.add(new JEXLTransformerWidget(\n-                        \"jexlTransformers\", itemTO, jexlTransformers).setRenderBodyOnly(true));\n+                if (jexlTransformers == null) {\n+                    item.add(new Label(\"jexlTransformers\").setVisible(false));\n+                } else {\n+                    item.add(new JEXLTransformerWidget(\n+                            \"jexlTransformers\", itemTO, jexlTransformers).setRenderBodyOnly(true));\n+                }\n                 // -------------------------------\n \n                 //--------------------------------\n                 // Mapping item transformers\n                 // -------------------------------\n-                item.add(new ItemTransformerWidget(\n-                        \"itemTransformers\", itemTO, itemTransformers).setRenderBodyOnly(true));\n+                if (itemTransformers == null) {\n+                    item.add(new Label(\"itemTransformers\").setVisible(false));\n+\n+                } else {\n+                    item.add(new ItemTransformerWidget(\n+                            \"itemTransformers\", itemTO, itemTransformers).setRenderBodyOnly(true));\n+                }\n                 // -------------------------------\n \n                 //--------------------------------\n@@ -337,9 +363,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     itemTO.setPassword(false);\n                 }\n \n-                if (hidePurpose) {\n-                    purpose.setVisible(false);\n-                }\n+                purpose.setVisible(!hidePurpose());\n+\n+                mandatory.setVisible(!hideMandatory());\n+\n+                connObjectKey.setVisible(!hideConnObjectKey());\n             }\n         };\n \n@@ -359,13 +387,34 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         addMappingBtn.setDefaultFormProcessing(false);\n         addMappingBtn.setEnabled(addMappingBtnVisible);\n         mappingContainer.add(addMappingBtn);\n+    }\n \n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+\n+        passwordLabel.setVisible(!hidePassword());\n+        purposeLabel.setVisible(!hidePurpose());\n+        mandatoryHeader.setVisible(!hideMandatory());\n+        connObjectKeyLabel.setVisible(!hideConnObjectKey());\n     }\n \n     protected boolean hidePassword() {\n         return true;\n     }\n \n+    protected boolean hidePurpose() {\n+        return false;\n+    }\n+\n+    protected boolean hideMandatory() {\n+        return false;\n+    }\n+\n+    protected boolean hideConnObjectKey() {\n+        return false;\n+    }\n+\n     protected abstract IModel<List<String>> getExtAttrNames();\n \n     /**\n@@ -375,13 +424,6 @@ protected boolean hidePassword() {\n      */\n     protected abstract void setAttrNames(AjaxTextFieldPanel toBeUpdated);\n \n-    @Override\n-    protected void onBeforeRender() {\n-        super.onBeforeRender();\n-        passwordLabel.setVisible(false);\n-        purposeLabel.setVisible(true);\n-    }\n-\n     /**\n      * Enable/Disable connObjectKey checkbox.\n      *"},{"sha":"ddd027af349d5186e6108bf6a35984ce1682fe16","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -40,7 +39,6 @@\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -113,7 +111,7 @@ public Details(final RoleWrapper modelObject) {\n             // ------------------------\n             // dynMembershipCond\n             // ------------------------\n-            add(new Accordion(\"dynMembershipCond\", Collections.<ITab>singletonList(\n+            add(new Accordion(\"dynMembershipCond\", List.of(\n                     new AbstractTab(new ResourceModel(\"dynMembershipCond\", \"Dynamic USER Membership Conditions\")) {\n \n                 private static final long serialVersionUID = 1037272333056449378L;"},{"sha":"8f9914e4c96e6cbbf4d5b36494be5d4e4488689a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,3 +18,6 @@ policy.account=Account\n policy.password=Password\n policy.pull=Pull\n policy.push=Push\n+policy.access=Access\n+policy.attrRelease=Attribute Release\n+policy.auth=Authentication"},{"sha":"1d36635e7759e909bcc13fd5bf6933516a1bfa98","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_it.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,3 +18,6 @@ policy.account=Account\n policy.password=Password\n policy.pull=Pull\n policy.push=Push\n+policy.access=Accesso\n+policy.attrRelease=Rilascio Attributi\n+policy.auth=Autenticazione"},{"sha":"c998c1a1f839243d043af6d2f1abc5083d9646bf","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_ja.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,3 +18,6 @@ policy.account=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\n policy.password=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\n policy.pull=\\u30d7\\u30eb\n policy.push=\\u30d7\\u30c3\\u30b7\\u30e5\n+policy.access=Access\n+policy.attrRelease=Attribute Release\n+policy.auth=Authentication"},{"sha":"8f9914e4c96e6cbbf4d5b36494be5d4e4488689a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_pt_BR.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,3 +18,6 @@ policy.account=Account\n policy.password=Password\n policy.pull=Pull\n policy.push=Push\n+policy.access=Access\n+policy.attrRelease=Attribute Release\n+policy.auth=Authentication"},{"sha":"6d42c42e7d954e84919c0fb9c19673fc02ce6cd3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_ru.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -19,3 +19,6 @@ policy.account=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u0443\\u0447\\u04\n policy.password=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u043f\\u0430\\u0440\\u043e\\u043b\\u0435\\u0439\n policy.pull=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u043f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u044f \\u0434\\u0430\\u043d\\u043d\\u044b\\u0445\n policy.push=Push\n+policy.access=Access\n+policy.attrRelease=Attribute Release\n+policy.auth=Authentication"},{"sha":"788dbfd4f998ec86a641b4acad2f1604a636369d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_fr_CA.properties","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -14,8 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-any.edit=Modifier param�tre ${key}\n-any.new=Nouveau param�tre\n+any.edit=Modifier param\\u00e8tre ${key}\n+any.new=Nouveau param\\u00e8tre\n values=Valeurs\n readonly=Lecture seulement\n-any.edit=Modifier param�tre\n+any.edit=Modifier param\\u00e8tre\n+tooLong=Value too long to be displayed"},{"sha":"13c074fc28e1674c3697c7e3b5d22cb99e17602d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -28,10 +28,7 @@\n         </div>\n       </div>\n       <div class=\"form-group\">\n-        <span wicket:id=\"accountPolicy\">[accountPolicy]</span>\n-      </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"passwordPolicy\">[passwordPolicy]</span>\n+        <span wicket:id=\"policies\">[policies]</span>\n       </div>\n       <div class=\"form-group form-palette\">\n         <div class=\"row\" wicket:id=\"actions\">[actions]</div>"},{"sha":"71cf88d0c1c205e3aad3156b47db717bb43266d7","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -19,3 +19,6 @@ accountPolicy=Account Policy\n passwordPolicy=Password Policy\n actions=Actions\n resources=Assigned resources\n+authPolicy=Authentication Policy\n+accessPolicy=Access Policy\n+attrReleasePolicy=Attribute Release Policy"},{"sha":"61d6e5862b88112d88b9c0990bfa21c7252b3402","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_fr_CA.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -14,8 +14,11 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-fullPath=Chemin d'acc�s\n+fullPath=Chemin d'acc\\u00e8s\n accountPolicy=Politique compte\n passwordPolicy=Politique mot de passe\n actions=Actions\n-resources=Ressources assign�es\n+resources=Ressources assign\\u00e9es\n+authPolicy=Authentication Policy\n+accessPolicy=Access Policy\n+attrReleasePolicy=Attribute Release Policy"},{"sha":"5c053cfe939ed18675e57c1f7fa79525b86d8f9a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_it.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -15,7 +15,10 @@\n # specific language governing permissions and limitations\n # under the License.\n fullPath=Percorso\n-accountPolicy=Account Policy\n-passwordPolicy=Password Policy\n+accountPolicy=Politica Account\n+passwordPolicy=Politica Password\n actions=Azioni\n resources=Risorse assegnate\n+authPolicy=Politica Autenticazione\n+accessPolicy=Politica Accesso\n+attrReleasePolicy=Politica Rilascio Attributi"},{"sha":"62242de5e6f61d6225598248398eeda924259f1b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ja.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -19,3 +19,6 @@ accountPolicy=\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u30dd\\u30ea\\u30b7\\u30fc\n passwordPolicy=\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u30dd\\u30ea\\u30b7\\u30fc\n actions=\\u30a2\\u30af\\u30b7\\u30e7\\u30f3\n resources=\\u5272\\u308a\\u5f53\\u3066\\u3089\\u308c\\u305f\\u30ea\\u30bd\\u30fc\\u30b9\n+authPolicy=Authentication Policy\n+accessPolicy=Access Policy\n+attrReleasePolicy=Attribute Release Policy"},{"sha":"7862d3e6bcfd9cbb6eed245eda03c6fe2ba14baf","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_pt_BR.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -19,3 +19,6 @@ accountPolicy=Pol\\u00edtica de Conta\n passwordPolicy=Pol\\u00edtica de Senha\n actions=Actions\n resources=Assigned resources\n+authPolicy=Authentication Policy\n+accessPolicy=Access Policy\n+attrReleasePolicy=Attribute Release Policy"},{"sha":"83d69a3f37dacd73ca64346a1557baa78ab057b6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ru.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,3 +20,6 @@ accountPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u0443\\u0447\\u043\n passwordPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u043f\\u0430\\u0440\\u043e\\u043b\\u0435\\u0439\n actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n resources=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u044b\n+authPolicy=Authentication Policy\n+accessPolicy=Access Policy\n+attrReleasePolicy=Attribute Release Policy"},{"sha":"229c27f64dc5fc335075ea53ff9f956173c674a0","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/wizards/mapping/AbstractMappingPanel.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.html?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -30,13 +30,13 @@\n               <span id=\"intAttrNameInfo\" wicket:id=\"intAttrNameInfo\" class=\"fas fa-info-circle\"></span>\n             </th>\n             <th><wicket:message key=\"extAttrName\"/></th>\n-            <th><i class=\"fas fa-redo-alt\"></i></th>\n-            <th><i class=\"fa fa-magic\"></i></th>\n-            <th>\n+            <th><i wicket:id=\"itemTransformersLabel\" class=\"fas fa-redo-alt\"></i></th>\n+            <th><i wicket:id=\"jexlTransformersLabel\" class=\"fa fa-magic\"></i></th>\n+            <th wicket:id=\"mandatoryHeader\">\n               <wicket:message key=\"mandatoryCondition\"/>\n               <span id=\"jexlInfo\" wicket:id=\"jexlInfo\" class=\"fas fa-info-circle\"></span>\n             </th>\n-            <th><wicket:message key=\"connObjectKey\"/></th>\n+            <th><label wicket:id=\"connObjectKeyLabel\"/></th>\n             <th><label wicket:id=\"passwordLabel\"/></th>\n             <th><label wicket:id=\"purposeLabel\"/></th>\n             <th></th>"},{"sha":"7ce5c433e7687e85feb206350585bc83d9373151","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -126,8 +126,7 @@ public PageReference getPageReference() {\n             wizardModel.add(new DerAttrs(modelObject, anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n         }\n         if (formLayoutInfo.isVirAttrs()) {\n-            wizardModel.add(new VirAttrs(\n-                    modelObject, mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+            wizardModel.add(new VirAttrs(modelObject, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n         }\n         if (formLayoutInfo.isResources()) {\n             wizardModel.add(new Resources(modelObject));"},{"sha":"952b8345cd36e768c8e47ca4c253839b8471aa97","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/DerAttrs.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -38,7 +37,6 @@\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.MarkupStream;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -62,7 +60,7 @@ public <T extends AnyTO> DerAttrs(\n         super(modelObject, anyTypeClasses, whichDerAttrs);\n         setTitleModel(new ResourceModel(\"attributes.derived\"));\n \n-        add(new Accordion(\"derSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"derSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Derived Attributes\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -80,7 +78,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipDerSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                item.add(new Accordion(\"membershipDerSchemas\", List.of(new AbstractTab(\n                         new StringResourceModel(\n                                 \"attributes.membership.accordion\",\n                                 DerAttrs.this,"},{"sha":"281ca922dbfd5a9695dfd29c6f14b1831e8e8055","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/PlainAttrs.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,10 +18,9 @@\n  */\n package org.apache.syncope.client.enduser.wizards.any;\n \n+import java.util.ArrayList;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n-import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -58,7 +57,6 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -106,7 +104,7 @@ public <T extends AnyTO> PlainAttrs(\n \n         setTitleModel(new ResourceModel(\"attributes.plain\"));\n \n-        add(new Accordion(\"plainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"plainSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Plain Attributes\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -119,12 +117,12 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n         add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", membershipTOs) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 1749643897846L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipPlainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+                item.add(new Accordion(\"membershipPlainSchemas\", List.of(new AbstractTab(\n                         new StringResourceModel(\n                                 \"attributes.membership.accordion\",\n                                 PlainAttrs.this,"},{"sha":"fdc6cccb4b94eb60d0a5976926fa324ffc92ff2e","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/UserDetails.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FUserDetails.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,7 +20,6 @@\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthBehavior;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.password.strength.PasswordStrengthConfig;\n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -110,9 +109,9 @@ public UserDetails(\n         // ------------------------\n         // Password\n         // ------------------------\n-        final Model<Integer> model = Model.of(-1);\n+        Model<Integer> model = Model.of(-1);\n \n-        final Accordion accordion = new Accordion(\"accordionPanel\", Collections.<ITab>singletonList(\n+        Accordion accordion = new Accordion(\"accordionPanel\", List.of(\n                 new AbstractTab(new ResourceModel(\"password.change\", \"Change password\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;"},{"sha":"86c55b29028ad71626ee9044427997a2486ed535","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/VirAttrs.java","status":"modified","additions":16,"deletions":27,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FVirAttrs.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -32,7 +31,6 @@\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.Attr;\n@@ -41,7 +39,6 @@\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -56,23 +53,16 @@ public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private final AjaxWizard.Mode mode;\n-\n-    private final AnyWrapper<?> modelObject;\n-\n     public <T extends AnyTO> VirAttrs(\n             final AnyWrapper<T> modelObject,\n-            final AjaxWizard.Mode mode,\n             final List<String> anyTypeClasses,\n             final Map<String, CustomizationOption> whichVirAttrs) {\n \n         super(modelObject, anyTypeClasses, whichVirAttrs);\n-        this.mode = mode;\n-        this.modelObject = modelObject;\n \n         setTitleModel(new ResourceModel(\"attributes.virtual\"));\n \n-        add(new Accordion(\"virSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"virSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Virtual Attributes\")) {\n \n             private static final long serialVersionUID = 1037272333056449378L;\n@@ -89,22 +79,21 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n-                final MembershipTO membershipTO = item.getModelObject();\n-                item.add(new Accordion(\"membershipVirSchemas\",\n-                        Collections.<ITab>singletonList(new AbstractTab(new StringResourceModel(\n-                                \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n-\n-                            private static final long serialVersionUID = 1037272333056449378L;\n-\n-                            @Override\n-                            public WebMarkupContainer getPanel(final String panelId) {\n-                                return new VirAttrs.VirSchemas(\n-                                        panelId,\n-                                        membershipTO.getGroupName(),\n-                                        membershipSchemas.get(membershipTO.getGroupKey()),\n-                                        new ListModel<>(getAttrsFromTO(membershipTO)));\n-                            }\n-                        }), Model.of(-1)).setOutputMarkupId(true));\n+                MembershipTO membTO = item.getModelObject();\n+                item.add(new Accordion(\"membershipVirSchemas\", List.of(new AbstractTab(\n+                        new StringResourceModel(\"attributes.membership.accordion\", VirAttrs.this, Model.of(membTO))) {\n+\n+                    private static final long serialVersionUID = 1037272333056449378L;\n+\n+                    @Override\n+                    public WebMarkupContainer getPanel(final String panelId) {\n+                        return new VirAttrs.VirSchemas(\n+                                panelId,\n+                                membTO.getGroupName(),\n+                                membershipSchemas.get(membTO.getGroupKey()),\n+                                new ListModel<>(getAttrsFromTO(membTO)));\n+                    }\n+                }), Model.of(-1)).setOutputMarkupId(true));\n             }\n         });\n     }"},{"sha":"146cfcd7bb43e59190916a8bcde3972be4950f36","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/DuoMfaAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FDuoMfaAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-public class DuoMfaAuthModuleConf extends AbstractAuthModuleConf {\n+public class DuoMfaAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -2883257599439312426L;\n "},{"sha":"ef5f05b43ff876e115bce4f8aedb95e50da59ed9","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/GoogleMfaAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FGoogleMfaAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-public class GoogleMfaAuthModuleConf extends AbstractAuthModuleConf {\n+public class GoogleMfaAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -7883257599139312426L;\n "},{"sha":"023ef1cbed0ee4243cf446c21a77746b12c76b61","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JDBCAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-public class JDBCAuthModuleConf extends AbstractAuthModuleConf {\n+public class JDBCAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = 8383233437907219385L;\n "},{"sha":"8768226a47f69a4da76e3cef434f8d413e7a5f94","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JaasAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJaasAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-public class JaasAuthModuleConf extends AbstractAuthModuleConf {\n+public class JaasAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -7775771400318503131L;\n "},{"sha":"6ab33eb39efa3eacfcb919cf9fe2c4a20b6e3515","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/LDAPAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-public class LDAPAuthModuleConf extends AbstractAuthModuleConf {\n+public class LDAPAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n "},{"sha":"5e5607ae044ec42431a4b30dbb2d7e35a3044aca","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/OIDCAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FOIDCAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,7 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-public class OIDCAuthModuleConf extends AbstractAuthModuleConf {\n+public class OIDCAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n "},{"sha":"4d94b1519ac4f7a68f7bf5082ba11527cfc25fcb","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/RadiusAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FRadiusAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-public class RadiusAuthModuleConf extends AbstractAuthModuleConf {\n+public class RadiusAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -2235771400318503131L;\n "},{"sha":"f1489f9cbfa69c641c66b10374ea2079acdc5b8b","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SAML2IdPAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSAML2IdPAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n-public class SAML2IdPAuthModuleConf extends AbstractAuthModuleConf {\n+public class SAML2IdPAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n "},{"sha":"f9c8a253a24f9665c7270641b35dd5cef380931e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/StaticAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FStaticAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,7 +21,7 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-public class StaticAuthModuleConf extends AbstractAuthModuleConf {\n+public class StaticAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -7775771400318503131L;\n "},{"sha":"f61834bf698b1580e1268429aa76647f97060645","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/SyncopeAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FSyncopeAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.common.lib.SyncopeConstants;\n \n-public class SyncopeAuthModuleConf extends AbstractAuthModuleConf {\n+public class SyncopeAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -3334329948161152222L;\n "},{"sha":"b355ac3a759de6de284552b9740b48313c384df1","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/U2FAuthModuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FU2FAuthModuleConf.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-public class U2FAuthModuleConf extends AbstractAuthModuleConf {\n+public class U2FAuthModuleConf implements AuthModuleConf {\n \n     private static final long serialVersionUID = -1235771400318503131L;\n "},{"sha":"9c7bffed071cf7d44a2b6a90bb2c8d1537056b0f","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -34,7 +34,7 @@\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n @JsonPropertyOrder(value = { \"_class\", \"key\", \"description\" })\n @Schema(\n-        subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class, PullPolicyTO.class },\n+        subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class, ProvisioningPolicyTO.class },\n         discriminatorProperty = \"_class\")\n public abstract class PolicyTO implements EntityTO {\n "},{"sha":"5dd01226b27de0803977324ff43e7539e54ec950","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/ProvisioningPolicyTO.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -18,13 +18,17 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Optional;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n \n-@Schema(allOf = { PolicyTO.class })\n+@Schema(allOf = { PolicyTO.class },\n+        subTypes = { PullPolicyTO.class, PushPolicyTO.class },\n+        discriminatorProperty = \"_class\")\n public abstract class ProvisioningPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -3786048942148269602L;\n@@ -33,6 +37,14 @@ public abstract class ProvisioningPolicyTO extends PolicyTO {\n \n     private final Map<String, String> correlationRules = new HashMap<>();\n \n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", required = true, example = \"org.apache.syncope.common.lib.policy.ProvisioningPolicyTO\")\n+    @Override\n+    public String getDiscriminator() {\n+        return getClass().getName();\n+    }\n+\n     public ConflictResolutionAction getConflictResolutionAction() {\n         return Optional.ofNullable(conflictResolutionAction).orElse(ConflictResolutionAction.IGNORE);\n     }"},{"sha":"ec9cb051aebd4486398780108c47aa1ab14a54ec","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AccessTokenTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -57,8 +57,8 @@ public Date getExpirationTime() {\n         return Optional.ofNullable(expirationTime).map(time -> new Date(time.getTime())).orElse(null);\n     }\n \n-    public void setExpirationTime(final Date expiryTime) {\n-        this.expirationTime = Optional.ofNullable(expiryTime).map(time -> new Date(time.getTime())).orElse(null);\n+    public void setExpirationTime(final Date expirationTime) {\n+        this.expirationTime = Optional.ofNullable(expirationTime).map(time -> new Date(time.getTime())).orElse(null);\n     }\n \n     public String getOwner() {"},{"sha":"f582cc92f305bcef26de9f22e6c3964d8c6d4925","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAccessTokenDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAccessTokenDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAccessTokenDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAccessTokenDAO.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -78,15 +78,15 @@ public int count() {\n     private static String toOrderByStatement(final List<OrderByClause> orderByClauses) {\n         StringBuilder statement = new StringBuilder();\n \n-        for (OrderByClause clause : orderByClauses) {\n+        orderByClauses.forEach(clause -> {\n             String field = clause.getField().trim();\n             if (ReflectionUtils.findField(JPAAccessToken.class, field) != null) {\n                 statement.append(\"e.\").append(field).append(' ').append(clause.getDirection().name());\n             }\n-        }\n+        });\n \n         if (statement.length() == 0) {\n-            statement.append(\"ORDER BY e.expiryTime DESC\");\n+            statement.append(\" ORDER BY e.expirationTime DESC\");\n         } else {\n             statement.insert(0, \"ORDER BY \");\n         }"},{"sha":"d624ffd11ec645341c060bdbc4989288e6279d2e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -314,13 +314,15 @@ public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n             if (!(policy instanceof AuthPolicy)\n                     && !(policy instanceof AccessPolicy)\n                     && !(policy instanceof AttrReleasePolicy)) {\n-                for (ExternalResource resource : resourceDAO.findByPolicy(policy)) {\n-                    policyTO.getUsedByResources().add(resource.getKey());\n-                }\n-            }\n-            for (Realm realm : realmDAO.findByPolicy(policy)) {\n-                policyTO.getUsedByRealms().add(realm.getFullPath());\n+\n+                policyTO.getUsedByResources().addAll(\n+                        resourceDAO.findByPolicy(policy).stream().\n+                                map(ExternalResource::getKey).collect(Collectors.toList()));\n             }\n+\n+            policyTO.getUsedByRealms().addAll(\n+                    realmDAO.findByPolicy(policy).stream().\n+                            map(Realm::getFullPath).collect(Collectors.toList()));\n         }\n \n         return policyTO;"},{"sha":"4bc8775a4d1c95d4476e02995acf6f42b03ddcb1","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/JWTAuthenticationProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FJWTAuthenticationProvider.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -42,8 +42,8 @@ public Authentication authenticate(final Authentication authentication) throws A\n         JWTClaimsSet claims = jwtAuthentication.getClaims();\n         long referenceTime = System.currentTimeMillis();\n \n-        Date expiryTime = claims.getExpirationTime();\n-        if (expiryTime != null && expiryTime.getTime() < referenceTime) {\n+        Date expirationTime = claims.getExpirationTime();\n+        if (expirationTime != null && expirationTime.getTime() < referenceTime) {\n             dataAccessor.removeExpired(claims.getJWTID());\n             throw new CredentialsExpiredException(\"JWT is expired\");\n         }"},{"sha":"22a059e10143deddbe9e40e7bd123c93b840d830","filename":"docker/sra/src/main/resources/application.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,8 +21,11 @@ spring.main.banner-mode=log\n server.port=8080\n \n spring.cloud.gateway.metrics.enabled=true\n+ \n+management.security.enabled=true\n+management.endpoint.gateway.enabled=true\n+management.endpoints.web.exposure.include=health,loggers,metrics,prometheus,gateway\n+management.endpoint.health.show-details=always\n management.endpoint.metrics.enabled=true\n-management.endpoint.prometheus.enabled=true\n-management.metrics.export.prometheus.enabled=true\n \n service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}"},{"sha":"faeb8bceee29bd2739e569656520196e861ec99d","filename":"docker/wa/pom.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fwa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fwa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fpom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -140,6 +140,13 @@ under the License.\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n+      <resource>\n+        <directory>${basedir}/../../wa/starter/src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>wa.properties</include>\n+        </includes>\n+      </resource>\n     </resources>\n   </build>\n "},{"sha":"b0d2e59a69cefdf91eeca4350ca72320478f4c7e","filename":"docker/wa/src/main/resources/application.properties","status":"modified","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -26,15 +26,15 @@ server.servlet.encoding.force=true\n \n server.servlet.contextPath=/syncope-wa\n \n-spring.web.resources.static-locations=classpath:/thymeleaf/static,classpath:/syncope/static,classpath:/static\n+server.servlet.session.timeout=300\n+server.servlet.session.cookie.http-only=true\n+server.servlet.session.tracking-modes=COOKIE\n \n-management.endpoints.web.exposure.include=health,loggers,refresh,registeredServices\n-management.endpoint.health.show-details=always\n+spring.web.resources.static-locations=classpath:/thymeleaf/static,classpath:/syncope/static,classpath:/static\n \n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-management.endpoint.registeredServices.enabled=true\n+cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n+management.endpoints.enabled-by-default=true\n+management.endpoints.web.exposure.include=*\n \n # Cache service definitions for 5 minutes\n cas.service-registry.cache.duration=PT5M\n@@ -43,10 +43,14 @@ cas.service-registry.cache.duration=PT5M\n cas.service-registry.schedule.repeat-interval=PT5M\n cas.service-registry.schedule.start-delay=PT30S\n \n+cas.events.core.enabled=false\n+\n ##\n # Allow configuration classes to override bean definitions from Spring Boot\n #\n spring.main.allow-bean-definition-overriding=true\n spring.main.lazy-initialization=false\n \n service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}\n+\n+version=${syncope.version}"},{"sha":"4665cc3512235a38803c6e147b0ead2832a890c4","filename":"docker/wa/src/main/resources/wa.properties","status":"removed","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/77e396f7a48f3f27fd2e16974979c676a4a59110/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/77e396f7a48f3f27fd2e16974979c676a4a59110/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fwa%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=77e396f7a48f3f27fd2e16974979c676a4a59110","patch":"@@ -1,69 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-\n-useGZIPCompression=true\n-\n-# Conf directories\n-conf.directory=${conf.directory}\n-cas.standalone.configurationDirectory=${conf.directory}\n-\n-cas.server.name=http://localhost:8080\n-cas.server.prefix=${cas.server.name}/syncope-wa\n-cas.server.scope=syncope.org\n-\n-cas.tgc.secure=false\n-cas.logout.follow-service-redirects=true\n-\n-cas.authn.saml-idp.core.entity-id=${cas.server.name}/syncope-wa/saml\n-cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}/saml\n-\n-cas.authn.oidc.core.issuer=${cas.server.name}/syncope-wa/oidc/\n-cas.authn.oidc.discovery.id-token-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n-cas.authn.oidc.discovery.user-info-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n-cas.authn.oauth.user-profile-view-type=FLAT\n-\n-# Disable access to the login endpoint\n-# if no target application is specified.\n-cas.sso.allow-missing-service-parameter=true\n-\n-# Disable the acceptable usage policy\n-# by default for now.\n-cas.acceptable-usage-policy.core.enabled=false\n-\n-management.endpoints.web.exposure.include=health,loggers,refresh\n-management.endpoint.health.show-details=always\n-\n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-\n-cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n-\n-spring.security.user.name=${anonymousUser}\n-spring.security.user.password=${anonymousKey}\n-\n-springdoc.show-actuator=true\n-springdoc.model-and-view-allowed=true\n-springdoc.writer-with-default-pretty-printer=true\n-springdoc.swagger-ui.displayRequestDuration=true\n-\n-cas.authn.mfa.web-authn.allowed-origins=http://localhost:8080\n-cas.authn.mfa.web-authn.application-id=https://localhost:8443\n-cas.authn.mfa.web-authn.relying-party-name=Syncope \n-cas.authn.mfa.web-authn.relying-party-id=syncope.apache.org"},{"sha":"b3c211b1c4d25a7fcbd44979a2be0197c1f7ee5a","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/mapping/OIDCProviderMappingPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FOIDCProviderMappingPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.OIDCC4UIProviderTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n@@ -46,18 +45,22 @@ public OIDCProviderMappingPanel(\n         super(id,\n                 mapItemTransformers,\n                 jexlTransformers,\n-                new ListModel<ItemTO>(opTO.getItems()),\n-                true,\n+                new ListModel<>(opTO.getItems()),\n                 true,\n                 MappingPurpose.NONE);\n \n         setOutputMarkupId(true);\n     }\n \n+    @Override\n+    protected boolean hidePurpose() {\n+        return true;\n+    }\n+\n     @Override\n     protected void onBeforeRender() {\n         super.onBeforeRender();\n-        purposeLabel.setVisible(false);\n+        intAttrNameInfo.setVisible(false);\n     }\n \n     @Override"},{"sha":"efde6339b6ceb26d3d1a9a7363dd497dbcd70e48","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/mapping/SAML2IdPMappingPanel.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FSAML2IdPMappingPanel.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.SAML2SP4UIIdPTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n@@ -46,18 +45,22 @@ public SAML2IdPMappingPanel(\n         super(id,\n                 mapItemTransformers,\n                 jexlTransformers,\n-                new ListModel<ItemTO>(idpTO.getItems()),\n-                true,\n+                new ListModel<>(idpTO.getItems()),\n                 true,\n                 MappingPurpose.NONE);\n \n         setOutputMarkupId(true);\n     }\n \n+    @Override\n+    protected boolean hidePurpose() {\n+        return true;\n+    }\n+\n     @Override\n     protected void onBeforeRender() {\n         super.onBeforeRender();\n-        purposeLabel.setVisible(false);\n+        intAttrNameInfo.setVisible(false);\n     }\n \n     @Override"},{"sha":"cd4dc0b4436398fcd5f835532aac06cceb9fd833","filename":"fit/core-reference/pom.xml","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -96,12 +96,6 @@ under the License.\n       <type>war</type>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.client.idm</groupId>\n-      <artifactId>syncope-client-idm-lib</artifactId>\n-      <version>${project.version}</version>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n       <artifactId>syncope-ext-self-keymaster-client</artifactId>\n@@ -110,7 +104,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.am</groupId>\n-      <artifactId>syncope-client-am-lib</artifactId>\n+      <artifactId>syncope-client-am-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n@@ -119,16 +113,6 @@ under the License.\n       <artifactId>syncope-client-idm-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n-      <exclusions>\n-        <exclusion>\n-          <groupId>cglib</groupId>\n-          <artifactId>cglib</artifactId>\n-        </exclusion>\n-        <exclusion>\n-          <groupId>org.ow2.asm</groupId>\n-          <artifactId>asm-util</artifactId>\n-        </exclusion>\n-      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.client.idrepo</groupId>"},{"sha":"8e7c2c612841493d8ddcccd9d1ef5abe59d51fd8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -25,8 +25,11 @@\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n import java.util.List;\n import java.util.Locale;\n+import org.apache.syncope.client.console.SyncopeAMConsoleContext;\n import org.apache.syncope.client.console.SyncopeIdMConsoleContext;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.console.commons.IdRepoPolicyTabProvider;\n+import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n@@ -100,6 +103,11 @@ public PreviewUtils previewUtils() {\n         public UserFormFinalizerUtils userFormFinalizerUtils() {\n             return new UserFormFinalizerUtils();\n         }\n+\n+        @Bean\n+        public PolicyTabProvider idRepoPolicyTabProvider() {\n+            return new IdRepoPolicyTabProvider();\n+        }\n     }\n \n     @BeforeAll\n@@ -109,6 +117,7 @@ public static void setUp() {\n         AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n         ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n         ctx.register(SyncopeWebApplication.class);\n+        ctx.register(SyncopeAMConsoleContext.class);\n         ctx.register(SyncopeIdMConsoleContext.class);\n         ctx.refresh();\n "},{"sha":"f206261e1f26f8916d9fa511eb67945dd7eec56c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":27,"deletions":31,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -41,11 +41,10 @@ public void login() {\n         TESTER.assertRenderedPage(Policies.class);\n     }\n \n-    private static void createAccountPolicy(final String description) {\n+    private static void createAccountPolicy(String description) {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n-                Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n@@ -99,11 +98,10 @@ private static void createAccountPolicy(final String description) {\n         assertNotNull(component);\n     }\n \n-    private static void createPasswordPolicy(final String description) {\n+    private static void createPasswordPolicy(String description) {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n-                Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n@@ -150,11 +148,10 @@ private static void createPasswordPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n-    private static void createPullPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+    private static void createPullPolicy(String description) {\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:5:link\");\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n-                Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n@@ -196,7 +193,7 @@ private static void createPullPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n-    private static void deleteAccountPolicy(final String description) {\n+    private static void deleteAccountPolicy(String description) {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n@@ -221,7 +218,7 @@ private static void deleteAccountPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n-    private static void deletePasswordPolicy(final String description) {\n+    private static void deletePasswordPolicy(String description) {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n@@ -246,8 +243,8 @@ private static void deletePasswordPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n-    private static void deletePullPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+    private static void deletePullPolicy(String description) {\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:5:link\");\n         Component component = findComponentByProp(\"description\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n@@ -279,14 +276,14 @@ public void read() {\n \n     @Test\n     public void createDeleteAccountPolicy() {\n-        final String description = \"My Test Account Policy\";\n+        String description = \"My Test Account Policy\";\n         createAccountPolicy(description);\n         deleteAccountPolicy(description);\n     }\n \n     @Test\n     public void cloneDeleteAccountPolicy() {\n-        final String description = \"My Test Account Policy to be cloned\";\n+        String description = \"My Test Account Policy to be cloned\";\n         createAccountPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -330,14 +327,14 @@ public void cloneDeleteAccountPolicy() {\n \n     @Test\n     public void createDeletePasswordPolicy() {\n-        final String description = \"My Test Password Policy\";\n+        String description = \"My Test Password Policy\";\n         createPasswordPolicy(description);\n         deletePasswordPolicy(description);\n     }\n \n     @Test\n     public void cloneDeletePasswordPolicy() {\n-        final String description = \"My Test Password Policy to be cloned\";\n+        String description = \"My Test Password Policy to be cloned\";\n         createPasswordPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -381,14 +378,14 @@ public void cloneDeletePasswordPolicy() {\n \n     @Test\n     public void createDeletePullPolicy() {\n-        final String description = \"My Test Pull Policy\";\n+        String description = \"My Test Pull Policy\";\n         createPullPolicy(description);\n         deletePullPolicy(description);\n     }\n \n     @Test\n     public void cloneDeletePullPolicy() {\n-        final String description = \"My Test Pull Policy to be cloned\";\n+        String description = \"My Test Pull Policy to be cloned\";\n         createPullPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -432,7 +429,7 @@ public void cloneDeletePullPolicy() {\n \n     @Test\n     public void createUpdateDeleteAccountPolicy() {\n-        final String description = \"Account Policy To Be Updated\";\n+        String description = \"Account Policy To Be Updated\";\n         createAccountPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -526,15 +523,15 @@ private static void composeDefaultAccountPolicy(final String policyDescription)\n \n     @Test\n     public void createComposeDeleteAccountPolicy() {\n-        final String description = \"Account Policy To Be Composed\";\n+        String description = \"Account Policy To Be Composed\";\n         createAccountPolicy(description);\n         composeDefaultAccountPolicy(description);\n         deleteAccountPolicy(description);\n     }\n \n     @Test\n     public void createUpdateDeletePasswordPolicy() {\n-        final String description = \"Password Policy To Be Updated\";\n+        String description = \"Password Policy To Be Updated\";\n         createPasswordPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -589,7 +586,7 @@ public void createUpdateDeletePasswordPolicy() {\n \n     @Test\n     public void createComposeDeletePasswordPolicy() {\n-        final String description = \"Password Policy To Be Composed\";\n+        String description = \"Password Policy To Be Composed\";\n         createPasswordPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -634,7 +631,7 @@ public void createComposeDeletePasswordPolicy() {\n \n     @Test\n     public void createUpdateDeletePullPolicy() {\n-        final String description = \"Pull Policy To Be Updated\";\n+        String description = \"Pull Policy To Be Updated\";\n         createPullPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -689,7 +686,7 @@ public void createUpdateDeletePullPolicy() {\n \n     @Test\n     public void createComposeDeletePullPolicy() {\n-        final String description = \"Pull Policy To Be Composed\";\n+        String description = \"Pull Policy To Be Composed\";\n         createPullPolicy(description);\n \n         Component component = findComponentByProp(\"description\",\n@@ -738,7 +735,7 @@ public void createComposeDeletePullPolicy() {\n \n     @Test\n     public void issueSYNCOPE1030() {\n-        final String description = \"SYNCOPE-1030\";\n+        String description = \"SYNCOPE-1030\";\n         // Create account policy\n         createAccountPolicy(description);\n         composeDefaultAccountPolicy(description);\n@@ -753,13 +750,12 @@ public void issueSYNCOPE1030() {\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         // set new account policy\n-        TESTER.assertLabel(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n-                + \"accountPolicy:field-label\", \"Account Policy\");\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n+                + \"policies:1:field-label\", \"Account Policy\");\n \n         FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n-        formTester.select(\"view:details:container:accountPolicy:dropDownChoiceField\", 0);\n+        formTester.select(\"view:details:container:policies:1:dropDownChoiceField\", 0);\n         formTester.submit(\"buttons:finish\");\n \n         assertSuccessMessage();"},{"sha":"8b4df014022578fa05d76e9295923c884b01bb0f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -41,7 +41,7 @@ public void login() {\n     @Test\n     public void read() {\n         TESTER.assertLabel(\n-                \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+                \"body:content:body:container:content:tabbedPanel:panel:container:policies:1:field-label\",\n                 \"Account Policy\");\n     }\n \n@@ -83,7 +83,7 @@ public void create() {\n         TESTER.cleanupFeedbackMessages();\n \n         TESTER.assertLabel(\n-                \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+                \"body:content:body:container:content:tabbedPanel:panel:container:policies:1:field-label\",\n                 \"Account Policy\");\n \n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");"},{"sha":"4cf189cdc30123e120d0d4b292e5a23dcc9debac","filename":"fit/wa-reference/src/main/resources/wa.properties","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -21,22 +21,22 @@ useGZIPCompression=true\n \n # Conf directories\n conf.directory=${conf.directory}\n-cas.standalone.configurationDirectory=${conf.directory}\n+cas.standalone.configuration-directory=${conf.directory}\n \n cas.server.name=http://localhost:9080\n cas.server.prefix=${cas.server.name}/syncope-wa\n cas.server.scope=syncope.org\n-cas.authn.syncope.url=http://localhost:9080/syncope/rest/\n \n cas.tgc.secure=false\n cas.logout.follow-service-redirects=true\n \n-cas.authn.saml-idp.core.entity-id=http://localhost:9080/saml\n+cas.authn.saml-idp.core.entity-id=${cas.server.name}/syncope-wa/saml\n cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}/saml\n \n-cas.authn.oidc.core.issuer=http://localhost:9080/syncope-wa/oidc/\n+cas.authn.oidc.core.issuer=${cas.server.name}/syncope-wa/oidc/\n cas.authn.oidc.discovery.id-token-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n cas.authn.oidc.discovery.user-info-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n+cas.authn.oauth.user-profile-view-type=FLAT\n \n # Disable access to the login endpoint\n # if no target application is specified.\n@@ -46,15 +46,6 @@ cas.sso.allow-missing-service-parameter=true\n # by default for now.\n cas.acceptable-usage-policy.core.enabled=false\n \n-management.endpoints.web.exposure.include=health,loggers,refresh\n-management.endpoint.health.show-details=always\n-\n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-\n-cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n-\n spring.security.user.name=${anonymousUser}\n spring.security.user.password=${anonymousKey}\n \n@@ -63,7 +54,9 @@ springdoc.model-and-view-allowed=true\n springdoc.writer-with-default-pretty-printer=true\n springdoc.swagger-ui.displayRequestDuration=true\n \n-cas.authn.mfa.web-authn.allowed-origins=http://localhost:9080\n-cas.authn.mfa.web-authn.application-id=https://localhost:9090\n+cas.authn.mfa.web-authn.allowed-origins=${cas.server.name}\n+cas.authn.mfa.web-authn.application-id=https://localhost:8443\n cas.authn.mfa.web-authn.relying-party-name=Syncope \n cas.authn.mfa.web-authn.relying-party-id=syncope.apache.org\n+\n+cas.authn.syncope.url=${cas.server.name}/syncope/rest/"},{"sha":"803f0f51abdf16f539d71ad69b8c7ac6f6c8b30b","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -168,7 +168,8 @@ protected void sso(final String baseURL, final String username, final String pas\n         assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());\n \n         // 2. click on the SAML 2.0 IdP\n-        get = new HttpGet(baseURL + SAML2SP4UIConstants.URL_CONTEXT + \"/login?idp=http%3A//localhost%3A9080/saml\");\n+        get = new HttpGet(baseURL + SAML2SP4UIConstants.URL_CONTEXT \n+                + \"/login?idp=http%3A//localhost%3A9080/syncope-wa/saml\");\n         response = httpclient.execute(get, context);\n \n         // 2a. post SAML request"},{"sha":"8e46fc5d45954ffab734288dc2149058ace6ca91","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -474,6 +474,7 @@ under the License.\n     <chartjs.version>1.0.2</chartjs.version>\n \n     <wicket.version>9.2.0</wicket.version>\n+    <wicketstuff.version>9.2.0</wicketstuff.version>\n     <wicket-jqueryui.version>9.2.1</wicket-jqueryui.version>\n     <wicket-bootstrap.version>5.0.3</wicket-bootstrap.version>\n     <wicket-spring-boot.version>3.0.4</wicket-spring-boot.version>\n@@ -1758,6 +1759,11 @@ under the License.\n         <artifactId>wicket-native-websocket-javax</artifactId>\n         <version>${wicket.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.wicketstuff</groupId>\n+        <artifactId>wicketstuff-editable-grid</artifactId>\n+        <version>${wicketstuff.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>com.googlecode.wicket-jquery-ui</groupId>\n         <artifactId>wicket-jquery-ui</artifactId>"},{"sha":"844b6e3bbeddd7b6c5e673d7d2653432ca186602","filename":"wa/starter/src/main/resources/application.properties","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -32,13 +32,9 @@ server.servlet.session.tracking-modes=COOKIE\n \n spring.web.resources.static-locations=classpath:/thymeleaf/static,classpath:/syncope/static,classpath:/static\n \n-management.endpoints.web.exposure.include=health,loggers,refresh,registeredServices\n-management.endpoint.health.show-details=always\n-\n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-management.endpoint.registeredServices.enabled=true\n+cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n+management.endpoints.enabled-by-default=true\n+management.endpoints.web.exposure.include=*\n \n # Cache service definitions for 5 minutes\n cas.service-registry.cache.duration=PT5M"},{"sha":"738f9c2b6b31cce4a4f22587df9a7fe5ace9c92a","filename":"wa/starter/src/main/resources/wa.properties","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -46,15 +46,6 @@ cas.sso.allow-missing-service-parameter=true\n # by default for now.\n cas.acceptable-usage-policy.core.enabled=false\n \n-management.endpoints.web.exposure.include=health,loggers,refresh\n-management.endpoint.health.show-details=always\n-\n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-\n-cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n-\n spring.security.user.name=${anonymousUser}\n spring.security.user.password=${anonymousKey}\n \n@@ -63,7 +54,9 @@ springdoc.model-and-view-allowed=true\n springdoc.writer-with-default-pretty-printer=true\n springdoc.swagger-ui.displayRequestDuration=true\n \n-cas.authn.mfa.web-authn.allowed-origins=http://localhost:8080\n+cas.authn.mfa.web-authn.allowed-origins=${cas.server.name}\n cas.authn.mfa.web-authn.application-id=https://localhost:8443\n cas.authn.mfa.web-authn.relying-party-name=Syncope \n cas.authn.mfa.web-authn.relying-party-id=syncope.apache.org\n+\n+cas.authn.syncope.url=${cas.server.name}/syncope/rest/"},{"sha":"fffeac62c1e8eaea5daaf4baf4c57b6ef04aad05","filename":"wa/starter/src/test/resources/debug/application-debug.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cb62fbcc1f1d93d2fa089e9b5dca1619a5884623/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fapplication-debug.properties?ref=cb62fbcc1f1d93d2fa089e9b5dca1619a5884623","patch":"@@ -15,3 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n #debug=true\n+\n+cas.authn.syncope.url=http://localhost:9081/syncope/rest/"},{"sha":"3814f6ab5106955bb68d3289a731a2d8248cc469","filename":"wa/starter/src/test/resources/debug/wa.properties","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/77e396f7a48f3f27fd2e16974979c676a4a59110/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/77e396f7a48f3f27fd2e16974979c676a4a59110/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fwa.properties?ref=77e396f7a48f3f27fd2e16974979c676a4a59110","patch":"@@ -1,70 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-anonymousUser=${anonymousUser}\n-anonymousKey=${anonymousKey}\n-\n-useGZIPCompression=true\n-\n-# Conf directories\n-conf.directory=${conf.directory}\n-cas.standalone.configurationDirectory=${conf.directory}\n-\n-cas.server.name=http://localhost:8080\n-cas.server.prefix=${cas.server.name}/syncope-wa\n-cas.server.scope=syncope.org\n-cas.authn.syncope.url=http://localhost:9081/syncope/rest/\n-\n-cas.tgc.secure=false\n-cas.logout.follow-service-redirects=true\n-\n-cas.authn.saml-idp.core.entity-id=${cas.server.name}/syncope-wa/saml\n-cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}/saml\n-\n-cas.authn.oidc.core.issuer=${cas.server.name}/syncope-wa/oidc/\n-cas.authn.oidc.discovery.id-token-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n-cas.authn.oidc.discovery.user-info-signing-alg-values-supported=RS256,RS384,RS512,PS256,PS384,PS512,ES256,ES384,ES512,HS256,HS384,HS512\n-cas.authn.oauth.user-profile-view-type=FLAT\n-\n-# Disable access to the login endpoint\n-# if no target application is specified.\n-cas.sso.allow-missing-service-parameter=true\n-\n-# Disable the acceptable usage policy\n-# by default for now.\n-cas.acceptable-usage-policy.core.enabled=false\n-\n-management.endpoints.web.exposure.include=health,loggers,refresh\n-management.endpoint.health.show-details=always\n-\n-management.endpoint.health.enabled=true\n-management.endpoint.loggers.enabled=true\n-management.endpoint.refresh.enabled=true\n-\n-cas.monitor.endpoints.endpoint.defaults.access=AUTHENTICATED\n-\n-spring.security.user.name=${anonymousUser}\n-spring.security.user.password=${anonymousKey}\n-\n-springdoc.show-actuator=true\n-springdoc.model-and-view-allowed=true\n-springdoc.writer-with-default-pretty-printer=true\n-springdoc.swagger-ui.displayRequestDuration=true\n-\n-cas.authn.mfa.web-authn.allowed-origins=http://localhost:8080\n-cas.authn.mfa.web-authn.application-id=https://localhost:8443\n-cas.authn.mfa.web-authn.relying-party-name=Syncope \n-cas.authn.mfa.web-authn.relying-party-id=syncope.apache.org"}]}