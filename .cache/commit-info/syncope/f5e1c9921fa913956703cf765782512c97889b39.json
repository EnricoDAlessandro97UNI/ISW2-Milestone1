{"sha":"f5e1c9921fa913956703cf765782512c97889b39","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1ZTFjOTkyMWZhOTEzOTU2NzAzY2Y3NjU3ODI1MTJjOTc4ODliMzk=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-02T15:30:13Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-02T15:30:13Z"},"message":"[SYNCOPE-471] fixed providing some improvement and integration tests for matching/unmatching rules about sync tasks\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607399 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"73e47a6b4b9b5c9a68b8773317bc51c6356fc409","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/73e47a6b4b9b5c9a68b8773317bc51c6356fc409"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f5e1c9921fa913956703cf765782512c97889b39","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5e1c9921fa913956703cf765782512c97889b39","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5e1c9921fa913956703cf765782512c97889b39","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5e1c9921fa913956703cf765782512c97889b39/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1d48ef53c4f79d9c2dcdb37e8adbee58a56174c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a1d48ef53c4f79d9c2dcdb37e8adbee58a56174c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a1d48ef53c4f79d9c2dcdb37e8adbee58a56174c"}],"stats":{"total":576,"additions":311,"deletions":265},"files":[{"sha":"07e2c542f39985d47fe55c07e5a745439d563c25","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSyncTask.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -29,6 +29,7 @@\n import javax.persistence.MappedSuperclass;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.validation.entity.AbstractSyncTaskCheck;\n@@ -68,12 +69,14 @@ public abstract class AbstractSyncTask extends SchedTask {\n     /**\n      * @see UnmatchingRule\n      */\n+    @NotNull\n     @Enumerated(EnumType.STRING)\n     protected UnmatchingRule unmatchingRule;\n \n     /**\n      * @see MatchingRule\n      */\n+    @NotNull\n     @Enumerated(EnumType.STRING)\n     protected MatchingRule matchingRule;\n \n@@ -130,13 +133,17 @@ public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = getBooleanAsInteger(syncStatus);\n     }\n \n-    public abstract UnmatchingRule getUnmatchingRule();\n+    public UnmatchingRule getUnmatchingRule() {\n+        return this.unmatchingRule;\n+    }\n \n     public void setUnmatchingRule(final UnmatchingRule unmatchigRule) {\n         this.unmatchingRule = unmatchigRule;\n     }\n \n-    public abstract MatchingRule getMatchingRule();\n+    public MatchingRule getMatchingRule() {\n+        return this.matchingRule;\n+    }\n \n     public void setMatchingRule(final MatchingRule matchigRule) {\n         this.matchingRule = matchigRule;"},{"sha":"a0c1abaed3ba317d295c2f85392c694e5f8e4333","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PushTask.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -19,19 +19,13 @@\n package org.apache.syncope.core.persistence.beans;\n \n import javax.persistence.Entity;\n-import org.apache.syncope.common.types.MatchingRule;\n-import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.sync.impl.PushJob;\n \n @Entity\n public class PushTask extends AbstractSyncTask {\n \n     private static final long serialVersionUID = -4141057723006682564L;\n \n-    private static final UnmatchingRule DEF_UNMATCHIG_RULE = UnmatchingRule.ASSIGN;\n-\n-    private static final MatchingRule DEF_MATCHIG_RULE = MatchingRule.UPDATE;\n-\n     private String userFilter;\n \n     private String roleFilter;\n@@ -58,14 +52,4 @@ public String getRoleFilter() {\n     public void setRoleFilter(final String roleFilter) {\n         this.roleFilter = roleFilter;\n     }\n-\n-    @Override\n-    public UnmatchingRule getUnmatchingRule() {\n-        return this.unmatchingRule == null ? DEF_UNMATCHIG_RULE : unmatchingRule;\n-    }\n-\n-    @Override\n-    public MatchingRule getMatchingRule() {\n-        return this.matchingRule == null ? DEF_MATCHIG_RULE : this.matchingRule;\n-    }\n }"},{"sha":"4ad7c29132efabace3ac45b0678ed32aeefbf2d3","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -25,8 +25,6 @@\n import javax.validation.constraints.Min;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.MatchingRule;\n-import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n import org.apache.syncope.core.util.POJOHelper;\n \n@@ -35,10 +33,6 @@ public class SyncTask extends AbstractSyncTask {\n \n     private static final long serialVersionUID = -4141057723006682563L;\n \n-    private static final UnmatchingRule DEF_UNMATCHIG_RULE = UnmatchingRule.PROVISION;\n-\n-    private static final MatchingRule DEF_MATCHIG_RULE = MatchingRule.UPDATE;\n-\n     @Lob\n     private String userTemplate;\n \n@@ -84,14 +78,4 @@ public boolean isFullReconciliation() {\n     public void setFullReconciliation(final boolean fullReconciliation) {\n         this.fullReconciliation = getBooleanAsInteger(fullReconciliation);\n     }\n-\n-    @Override\n-    public UnmatchingRule getUnmatchingRule() {\n-        return this.unmatchingRule == null ? DEF_UNMATCHIG_RULE : unmatchingRule;\n-    }\n-\n-    @Override\n-    public MatchingRule getMatchingRule() {\n-        return this.matchingRule == null ? DEF_MATCHIG_RULE : this.matchingRule;\n-    }\n }"},{"sha":"c182fe3338f4d339cbe399ce636ca2f01157f286","filename":"core/src/main/java/org/apache/syncope/core/propagation/Connector.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -129,9 +129,8 @@ void delete(PropagationMode propagationMode, ObjectClass objectClass,\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n-    ConnectorObject getObject(PropagationMode propagationMode,\n-            ResourceOperation operationType, ObjectClass objectClass, Uid uid,\n-            OperationOptions options);\n+    ConnectorObject getObject(PropagationMode propagationMode, ResourceOperation operationType, ObjectClass objectClass,\n+            Uid uid, OperationOptions options);\n \n     /**\n      * Search for remote objects."},{"sha":"fcd7110a9981ff27e9cd4d0ee925bf0174139673","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -375,7 +375,7 @@ public List<PropagationTask> getRoleUpdateTaskIds(final WorkflowResult<Long> wfR\n                 Collections.<MembershipMod>emptySet());\n     }\n \n-    protected List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n+    public List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n             final String password, final boolean changePwd, final Boolean enable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated,\n             final PropagationByResource propByRes, final Collection<String> noPropResourceNames,"},{"sha":"965546faabef568007fc936e5c73d3a19f0ca54c","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":27,"deletions":14,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -35,6 +35,8 @@\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.to.AbstractSyncTaskTO;\n import org.apache.syncope.common.to.PushTaskTO;\n+import org.apache.syncope.common.types.MatchingRule;\n+import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.init.JobInstanceLoader;\n import org.apache.syncope.core.persistence.beans.AbstractSyncTask;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n@@ -68,7 +70,8 @@ public class TaskDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(TaskDataBinder.class);\n \n-    private static final String[] IGNORE_TASK_PROPERTIES = { \"executions\", \"resource\" };\n+    private static final String[] IGNORE_TASK_PROPERTIES = {\n+        \"executions\", \"resource\", \"matchingRule\", \"unmatchingRule\" };\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = { \"id\", \"task\" };\n \n@@ -105,10 +108,22 @@ private void fill(final AbstractSyncTask task, final AbstractSyncTaskTO taskTO)\n             pushTask.setUserFilter(pushTaskTO.getUserFilter());\n             pushTask.setRoleFilter(pushTaskTO.getRoleFilter());\n \n+            pushTask.setMatchingRule(pushTaskTO.getMatchingRule() == null\n+                    ? MatchingRule.LINK : pushTaskTO.getMatchingRule());\n+\n+            pushTask.setUnmatchingRule(pushTaskTO.getUnmatchingRule() == null\n+                    ? UnmatchingRule.ASSIGN : pushTaskTO.getUnmatchingRule());\n+\n         } else if (task instanceof SyncTask && taskTO instanceof SyncTaskTO) {\n             final SyncTask syncTask = (SyncTask) task;\n             final SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n \n+            syncTask.setMatchingRule(syncTaskTO.getMatchingRule() == null\n+                    ? MatchingRule.UPDATE : syncTaskTO.getMatchingRule());\n+\n+            syncTask.setUnmatchingRule(syncTaskTO.getUnmatchingRule() == null\n+                    ? UnmatchingRule.PROVISION : syncTaskTO.getUnmatchingRule());\n+\n             // 1. validate JEXL expressions in user and role templates\n             if (syncTaskTO.getUserTemplate() != null) {\n                 UserTO template = syncTaskTO.getUserTemplate();\n@@ -155,8 +170,6 @@ private void fill(final AbstractSyncTask task, final AbstractSyncTaskTO taskTO)\n         task.setPerformUpdate(taskTO.isPerformUpdate());\n         task.setPerformDelete(taskTO.isPerformDelete());\n         task.setSyncStatus(taskTO.isSyncStatus());\n-        task.setMatchingRule(taskTO.getMatchingRule());\n-        task.setUnmatchingRule(taskTO.getUnmatchingRule());\n         task.getActionsClassNames().clear();\n         task.getActionsClassNames().addAll(taskTO.getActionsClassNames());\n     }\n@@ -254,17 +267,9 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtil ta\n         BeanUtils.copyProperties(task, taskTO, IGNORE_TASK_PROPERTIES);\n \n         TaskExec latestExec = taskExecDAO.findLatestStarted(task);\n-        taskTO.setLatestExecStatus(latestExec == null\n-                ? \"\"\n-                : latestExec.getStatus());\n-\n-        taskTO.setStartDate(latestExec == null\n-                ? null\n-                : latestExec.getStartDate());\n-\n-        taskTO.setEndDate(latestExec == null\n-                ? null\n-                : latestExec.getEndDate());\n+        taskTO.setLatestExecStatus(latestExec == null ? \"\" : latestExec.getStatus());\n+        taskTO.setStartDate(latestExec == null ? null : latestExec.getStartDate());\n+        taskTO.setEndDate(latestExec == null ? null : latestExec.getEndDate());\n \n         for (TaskExec execution : task.getExecs()) {\n             taskTO.getExecutions().add(getTaskExecTO(execution));\n@@ -298,6 +303,10 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtil ta\n                 ((SyncTaskTO) taskTO).setName(((SyncTask) task).getName());\n                 ((SyncTaskTO) taskTO).setDescription(((SyncTask) task).getDescription());\n                 ((SyncTaskTO) taskTO).setResource(((SyncTask) task).getResource().getName());\n+                ((SyncTaskTO) taskTO).setMatchingRule(((SyncTask) task).getMatchingRule() == null\n+                        ? MatchingRule.UPDATE : ((SyncTask) task).getMatchingRule());\n+                ((SyncTaskTO) taskTO).setUnmatchingRule(((SyncTask) task).getUnmatchingRule() == null\n+                        ? UnmatchingRule.PROVISION : ((SyncTask) task).getUnmatchingRule());\n                 break;\n \n             case PUSH:\n@@ -309,6 +318,10 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtil ta\n                 ((PushTaskTO) taskTO).setName(((PushTask) task).getName());\n                 ((PushTaskTO) taskTO).setDescription(((PushTask) task).getDescription());\n                 ((PushTaskTO) taskTO).setResource(((PushTask) task).getResource().getName());\n+                ((PushTaskTO) taskTO).setMatchingRule(((PushTask) task).getMatchingRule() == null\n+                        ? MatchingRule.LINK : ((PushTask) task).getMatchingRule());\n+                ((PushTaskTO) taskTO).setUnmatchingRule(((PushTask) task).getUnmatchingRule() == null\n+                        ? UnmatchingRule.ASSIGN : ((PushTask) task).getUnmatchingRule());\n                 break;\n \n             case NOTIFICATION:"},{"sha":"c2564ebafe2ad4a460c6ee0b5287cf95ac9f4cf8","filename":"core/src/main/java/org/apache/syncope/core/sync/DefaultPushActions.java","status":"modified","additions":20,"deletions":33,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultPushActions.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -19,11 +19,8 @@\n package org.apache.syncope.core.sync;\n \n import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n \n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n-import org.identityconnectors.framework.common.objects.Attribute;\n import org.quartz.JobExecutionException;\n \n /**\n@@ -36,76 +33,66 @@ public void beforeAll(final SyncProfile<?, ?> profile) throws JobExecutionExcept\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeAssign(\n+    public <T extends AbstractAttributable> T beforeAssign(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUpdate(\n+    public <T extends AbstractAttributable> T beforeUpdate(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> void after(\n+    public <T extends AbstractAttributable> T beforeProvision(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n-            final T subject,\n-            SyncResult result) throws JobExecutionException {\n+            final T subject) throws JobExecutionException {\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeProvision(\n+    public <T extends AbstractAttributable> T beforeLink(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeLink(\n+    public <T extends AbstractAttributable> T beforeUnlink(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUnlink(\n+    public <T extends AbstractAttributable> T beforeUnassign(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUnassign(\n+    public <T extends AbstractAttributable> T beforeDeprovision(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeDeprovision(\n+    public <T extends AbstractAttributable> T beforeDelete(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException {\n-        return delta;\n+        return subject;\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeDelete(\n+    public <T extends AbstractAttributable> void after(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n-            final T subject) throws JobExecutionException {\n-        return delta;\n+            final T subject,\n+            SyncResult result) throws JobExecutionException {\n     }\n \n     @Override"},{"sha":"4ab45adc6a796dae2eb23a5cf93e0b4af4edb619","filename":"core/src/main/java/org/apache/syncope/core/sync/PushActions.java","status":"modified","additions":16,"deletions":34,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -34,126 +34,108 @@ public interface PushActions extends AbstractSyncActions<AbstractSyncopeResultHa\n      * Action to be executed before to assign (link & provision) a synchronized user / role to the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeAssign(\n+    <T extends AbstractAttributable> T beforeAssign(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to provision a synchronized user / role to the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeProvision(\n+    <T extends AbstractAttributable> T beforeProvision(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to update a synchronized user / role on the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be updated.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUpdate(\n+    <T extends AbstractAttributable> T beforeUpdate(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to link a synchronized user / role to the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeLink(\n+    <T extends AbstractAttributable> T beforeLink(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unlink a synchronized user / role from the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUnlink(\n+    <T extends AbstractAttributable> T beforeUnlink(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unassign a synchronized user / role from the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeUnassign(\n+    <T extends AbstractAttributable> T beforeUnassign(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unassign a synchronized user / role from the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeDeprovision(\n+    <T extends AbstractAttributable> T beforeDeprovision(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before delete a synchronized user / role locally and from the resource.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info to be pushed out (accountId, attributes).\n      * @param subject user / role to be created.\n-     * @return info to be pushed out (accountId, attributes).\n+     * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> beforeDelete(\n+    <T extends AbstractAttributable> T beforeDelete(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed after each local user / role synchronization.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta info pushed out (accountId, attributes)\n      * @param subject synchronized user / role.\n      * @param result operation result.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributable> void after(\n             final SyncProfile<?, ?> profile,\n-            final Map.Entry<String, Set<Attribute>> delta,\n             final T subject,\n             final SyncResult result) throws JobExecutionException;\n }"},{"sha":"a34e634e178ec0775d69a7612c7352f0b2cc7682","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":160,"deletions":46,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -18,25 +18,34 @@\n  */\n package org.apache.syncope.core.sync.impl;\n \n+import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n import java.util.ArrayList;\n-import java.util.Map;\n+import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.apache.syncope.common.mod.AttributeMod;\n+import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n+import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.types.UnmatchingRule;\n+import org.apache.syncope.core.persistence.beans.AbstractMapping;\n+import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n+import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.PushTask;\n+import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.sync.PushActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.MappingUtil;\n-import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.quartz.JobExecutionException;\n import org.springframework.transaction.annotation.Transactional;\n@@ -45,27 +54,21 @@ public abstract class AbstractSubjectPushResultHandler extends AbstractSyncopeRe\n \n     protected abstract String getName(final AbstractSubject subject);\n \n+    protected abstract AbstractMapping getMapping();\n+\n     protected abstract AbstractSubjectTO getSubjectTO(final long id);\n \n     protected abstract AbstractSubject getSubject(final long id);\n \n-    protected abstract AbstractSubject deprovision(final AbstractSubject sbj, final SyncResult result);\n-\n-    protected abstract AbstractSubject provision(\n-            final AbstractSubject sbj, final Boolean enabled, final SyncResult result);\n+    protected abstract AbstractSubject deprovision(final AbstractSubject sbj);\n \n-    protected abstract AbstractSubject link(final AbstractSubject sbj, final Boolean unlink, final SyncResult result);\n+    protected abstract AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled);\n \n-    protected abstract AbstractSubject unassign(final AbstractSubject sbj, final SyncResult result);\n+    protected abstract AbstractSubject link(final AbstractSubject sbj, final Boolean unlink);\n \n-    protected abstract AbstractSubject assign(final AbstractSubject sbj, Boolean enabled, final SyncResult result);\n+    protected abstract AbstractSubject unassign(final AbstractSubject sbj);\n \n-    protected abstract AbstractSubject update(\n-            final AbstractSubject sbj,\n-            final String accountId,\n-            final Set<Attribute> attributes,\n-            final ConnectorObject beforeObj,\n-            final SyncResult result);\n+    protected abstract AbstractSubject assign(final AbstractSubject sbj, Boolean enabled);\n \n     protected abstract ConnectorObject getRemoteObject(final String accountId);\n \n@@ -110,20 +113,14 @@ protected final void doHandle(final AbstractSubject subject)\n         ConnectorObject beforeObj = null;\n         String operation = null;\n \n-        Map.Entry<String, Set<Attribute>> values = MappingUtil.prepareAttributes(\n-                attrUtil, // attributable util\n-                toBeHandled, // attributable (user or role)\n-                null, // current password if decode is possible; generate otherwise\n-                true, // propagate password (if required)\n-                null, // no vir attrs to be removed\n-                null, // propagate current vir attr values\n-                null, // no membership vir attrs to be removed\n-                null, // propagate current membership vir attr values\n-                enabled, // propagate status (suspended or not) if required\n-                profile.getSyncTask().getResource()); // target external resource\n-\n         // Try to read remote object (user / group) BEFORE any actual operation\n-        beforeObj = getRemoteObject(values.getKey());\n+\n+        final String accountId = MappingUtil.getAccountIdValue(\n+                subject, profile.getSyncTask().getResource(), getMapping().getAccountIdItem());\n+\n+        beforeObj = getRemoteObject(accountId);\n+\n+        Boolean status = profile.getSyncTask().isSyncStatus() ? enabled : null;\n \n         if (profile.isDryRun()) {\n             if (beforeObj == null) {\n@@ -141,21 +138,39 @@ protected final void doHandle(final AbstractSubject subject)\n                     switch (profile.getSyncTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeAssign(this.getProfile(), values, toBeHandled);\n+                                action.beforeAssign(this.getProfile(), toBeHandled);\n                             }\n-                            assign(toBeHandled, enabled, result);\n+\n+                            if (!profile.getSyncTask().isPerformCreate()) {\n+                                LOG.debug(\"PushTask not configured for create\");\n+                            } else {\n+                                assign(toBeHandled, status);\n+                            }\n+\n                             break;\n                         case PROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeProvision(this.getProfile(), values, toBeHandled);\n+                                action.beforeProvision(this.getProfile(), toBeHandled);\n+                            }\n+\n+                            if (!profile.getSyncTask().isPerformCreate()) {\n+                                LOG.debug(\"PushTask not configured for create\");\n+                            } else {\n+                                provision(toBeHandled, status);\n                             }\n-                            provision(toBeHandled, enabled, result);\n+\n                             break;\n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), values, toBeHandled);\n+                                action.beforeUnlink(this.getProfile(), toBeHandled);\n+                            }\n+\n+                            if (!profile.getSyncTask().isPerformUpdate()) {\n+                                LOG.debug(\"PushTask not configured for update\");\n+                            } else {\n+                                link(toBeHandled, true);\n                             }\n-                            link(toBeHandled, true, result);\n+\n                             break;\n                         default:\n                         // do nothing\n@@ -168,46 +183,75 @@ protected final void doHandle(final AbstractSubject subject)\n                     switch (profile.getSyncTask().getMatchingRule()) {\n                         case UPDATE:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUpdate(this.getProfile(), values, toBeHandled);\n+                                action.beforeUpdate(this.getProfile(), toBeHandled);\n                             }\n-                            update(toBeHandled, values.getKey(), values.getValue(), beforeObj, result);\n+                            if (!profile.getSyncTask().isPerformUpdate()) {\n+                                LOG.debug(\"PushTask not configured for update\");\n+                            } else {\n+                                update(toBeHandled, status);\n+                            }\n+\n                             break;\n                         case DEPROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeDeprovision(this.getProfile(), values, toBeHandled);\n+                                action.beforeDeprovision(this.getProfile(), toBeHandled);\n                             }\n-                            deprovision(toBeHandled, result);\n+\n+                            if (!profile.getSyncTask().isPerformDelete()) {\n+                                LOG.debug(\"PushTask not configured for delete\");\n+                            } else {\n+                                deprovision(toBeHandled);\n+                            }\n+\n                             break;\n                         case UNASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnassign(this.getProfile(), values, toBeHandled);\n+                                action.beforeUnassign(this.getProfile(), toBeHandled);\n                             }\n-                            unassign(toBeHandled, result);\n+\n+                            if (!profile.getSyncTask().isPerformDelete()) {\n+                                LOG.debug(\"PushTask not configured for delete\");\n+                            } else {\n+                                unassign(toBeHandled);\n+                            }\n+\n                             break;\n                         case LINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeLink(this.getProfile(), values, toBeHandled);\n+                                action.beforeLink(this.getProfile(), toBeHandled);\n                             }\n-                            link(toBeHandled, false, result);\n+\n+                            if (!profile.getSyncTask().isPerformUpdate()) {\n+                                LOG.debug(\"PushTask not configured for update\");\n+                            } else {\n+                                link(toBeHandled, false);\n+                            }\n+\n                             break;\n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), values, toBeHandled);\n+                                action.beforeUnlink(this.getProfile(), toBeHandled);\n                             }\n-                            link(toBeHandled, true, result);\n+\n+                            if (!profile.getSyncTask().isPerformUpdate()) {\n+                                LOG.debug(\"PushTask not configured for update\");\n+                            } else {\n+                                link(toBeHandled, true);\n+                            }\n+\n                             break;\n                         default:\n                         // do nothing\n                     }\n                 }\n \n                 for (PushActions action : profile.getActions()) {\n-                    action.after(this.getProfile(), values, toBeHandled, result);\n+                    action.after(this.getProfile(), toBeHandled, result);\n                 }\n \n                 result.setStatus(SyncResult.Status.SUCCESS);\n                 resultStatus = AuditElements.Result.SUCCESS;\n-                output = getRemoteObject(values.getKey());\n+                output = getRemoteObject(accountId);\n             } catch (Exception e) {\n                 result.setStatus(SyncResult.Status.FAILURE);\n                 result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n@@ -260,4 +304,74 @@ private ResourceOperation getResourceOperation(final MatchingRule rule) {\n                 return ResourceOperation.NONE;\n         }\n     }\n+\n+    protected AbstractSubject update(final AbstractSubject sbj, final Boolean enabled) {\n+\n+        final Set<MembershipMod> membsToAdd = new HashSet<MembershipMod>();\n+        final Set<String> vattrToBeRemoved = new HashSet<String>();\n+        final Set<String> membVattrToBeRemoved = new HashSet<String>();\n+        final Set<AttributeMod> vattrToBeUpdated = new HashSet<AttributeMod>();\n+\n+        // Search for all mapped vattrs\n+        final AbstractMapping umapping = getMapping();\n+        for (AbstractMappingItem mappingItem : umapping.getItems()) {\n+            if (mappingItem.getIntMappingType() == IntMappingType.UserVirtualSchema) {\n+                vattrToBeRemoved.add(mappingItem.getIntAttrName());\n+            } else if (mappingItem.getIntMappingType() == IntMappingType.MembershipVirtualSchema) {\n+                membVattrToBeRemoved.add(mappingItem.getIntAttrName());\n+            }\n+        }\n+\n+        // Search for all user's vattrs and:\n+        // 1. add mapped vattrs not owned by the user to the set of vattrs to be removed\n+        // 2. add all vattrs owned by the user to the set of vattrs to be update\n+        for (AbstractVirAttr vattr : sbj.getVirAttrs()) {\n+            vattrToBeRemoved.remove(vattr.getSchema().getName());\n+            final AttributeMod mod = new AttributeMod();\n+            mod.setSchema(vattr.getSchema().getName());\n+            mod.getValuesToBeAdded().addAll(vattr.getValues());\n+            vattrToBeUpdated.add(mod);\n+        }\n+\n+        final boolean changepwd;\n+\n+        if (sbj instanceof SyncopeUser) {\n+            changepwd = true;\n+\n+            // Search for memberships\n+            for (Membership membership : SyncopeUser.class.cast(sbj).getMemberships()) {\n+                final MembershipMod membershipMod = new MembershipMod();\n+                membershipMod.setId(membership.getId());\n+                membershipMod.setRole(membership.getSyncopeRole().getId());\n+\n+                for (AbstractVirAttr vattr : membership.getVirAttrs()) {\n+                    membVattrToBeRemoved.remove(vattr.getSchema().getName());\n+                    final AttributeMod mod = new AttributeMod();\n+                    mod.setSchema(vattr.getSchema().getName());\n+                    mod.getValuesToBeAdded().addAll(vattr.getValues());\n+                    membershipMod.getVirAttrsToUpdate().add(mod);\n+                }\n+\n+                membsToAdd.add(membershipMod);\n+            }\n+\n+            if (!membsToAdd.isEmpty()) {\n+                membsToAdd.iterator().next().getVirAttrsToRemove().addAll(membVattrToBeRemoved);\n+            }\n+        } else {\n+            changepwd = false;\n+        }\n+\n+        final List<String> noPropResources = new ArrayList<String>(sbj.getResourceNames());\n+        noPropResources.remove(profile.getSyncTask().getResource().getName());\n+\n+        final PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.add(ResourceOperation.CREATE, profile.getSyncTask().getResource().getName());\n+\n+        taskExecutor.execute(propagationManager.getUpdateTaskIds(\n+                sbj, null, changepwd, enabled, vattrToBeRemoved, vattrToBeUpdated, propByRes, noPropResources,\n+                membsToAdd));\n+\n+        return userDataBinder.getUserFromId(sbj.getId());\n+    }\n }"},{"sha":"54b7e3fad7a7a4d6374bd69ce3077d1868d5f522","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectSyncResultHandler.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -97,17 +97,16 @@ public boolean handle(final SyncDelta delta) {\n \n     protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n+        if (!profile.getSyncTask().isPerformCreate()) {\n+            LOG.debug(\"SyncTask not configured for create\");\n+            return Collections.<SyncResult>emptyList();\n+        }\n \n         final AbstractSubjectTO subjectTO =\n                 connObjectUtil.getSubjectTO(delta.getObject(), profile.getSyncTask(), attrUtil);\n \n         subjectTO.getResources().add(profile.getSyncTask().getResource().getName());\n \n-        if (!profile.getSyncTask().isPerformCreate()) {\n-            LOG.debug(\"SyncTask not configured for create\");\n-            return Collections.<SyncResult>emptyList();\n-        }\n-\n         final SyncResult result = new SyncResult();\n         result.setOperation(ResourceOperation.CREATE);\n         result.setSubjectType(attrUtil.getType());\n@@ -135,7 +134,6 @@ protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil\n \n     protected List<SyncResult> create(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n-\n         if (!profile.getSyncTask().isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.<SyncResult>emptyList();"},{"sha":"adf7c8d8438002284ba544589ec26869a115f71e","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncopeResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -40,7 +40,7 @@\n      * Logger.\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSyncopeResultHandler.class);\n-\n+    \n     /**\n      * User data binder.\n      */"},{"sha":"f154ac06649980a3afbe7c17034412387ee92404","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/PushJob.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -124,26 +124,22 @@ protected String executeWithSecurityContext(\n                         uhandler.handle(localUser);\n                     } catch (Exception e) {\n                         LOG.warn(\"Failure pushing user '{}' on '{}'\", localUser, pushTask.getResource(), e);\n-                        if (!continueOnError()) {\n-                            throw new JobExecutionException(\"While pushing users on connector\", e);\n-                        }\n+                        throw new JobExecutionException(\"While pushing users on connector\", e);\n                     }\n                 }\n             }\n         }\n \n         if (rMapping != null) {\n-            final List<SyncopeRole> localRoles = getRoles(authorizations, pushTask, PAGE_SIZE);\n+            final List<SyncopeRole> localRoles = getRoles(authorizations, pushTask);\n \n             for (SyncopeRole localRole : localRoles) {\n                 try {\n                     // role propagation\n                     rhandler.handle(localRole);\n                 } catch (Exception e) {\n                     LOG.warn(\"Failure pushing role '{}' on '{}'\", localRole, pushTask.getResource(), e);\n-                    if (!continueOnError()) {\n-                        throw new JobExecutionException(\"While pushing roles on connector\", e);\n-                    }\n+                    throw new JobExecutionException(\"While pushing roles on connector\", e);\n                 }\n             }\n         }\n@@ -161,10 +157,6 @@ protected String executeWithSecurityContext(\n         return result;\n     }\n \n-    protected boolean continueOnError() {\n-        return true;\n-    }\n-\n     private List<SyncopeUser> getUsers(final Set<Long> authorizations, final PushTask pushTask, final int page) {\n         final String filter = pushTask.getUserFilter();\n         if (StringUtils.isBlank(filter)) {\n@@ -176,7 +168,7 @@ private List<SyncopeUser> getUsers(final Set<Long> authorizations, final PushTas\n         }\n     }\n \n-    private List<SyncopeRole> getRoles(final Set<Long> authorizations, final PushTask pushTask, final int page) {\n+    private List<SyncopeRole> getRoles(final Set<Long> authorizations, final PushTask pushTask) {\n         final String filter = pushTask.getRoleFilter();\n         if (StringUtils.isBlank(filter)) {\n             return roleDAO.findAll();"},{"sha":"6c861d43ad5aa9f917db61fbf191438133aed9c9","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RolePushResultHandler.java","status":"modified","additions":13,"deletions":35,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -20,29 +20,25 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.ResourceOperation;\n+import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.propagation.TimeoutException;\n-import org.apache.syncope.core.propagation.impl.AbstractPropagationTaskExecutor;\n-import org.apache.syncope.core.sync.SyncResult;\n-import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n \n public class RolePushResultHandler extends AbstractSubjectPushResultHandler {\n \n     @Override\n-    protected AbstractSubject deprovision(final AbstractSubject sbj, final SyncResult result) {\n+    protected AbstractSubject deprovision(final AbstractSubject sbj) {\n         final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj));\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n@@ -54,7 +50,7 @@ protected AbstractSubject deprovision(final AbstractSubject sbj, final SyncResul\n     }\n \n     @Override\n-    protected AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled, final SyncResult result) {\n+    protected AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled) {\n         final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj));\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n@@ -73,8 +69,7 @@ protected AbstractSubject provision(final AbstractSubject sbj, final Boolean ena\n     }\n \n     @Override\n-    protected AbstractSubject link(\n-            final AbstractSubject sbj, final Boolean unlink, final SyncResult result) {\n+    protected AbstractSubject link(final AbstractSubject sbj, final Boolean unlink) {\n \n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(sbj.getId());\n@@ -91,43 +86,21 @@ protected AbstractSubject link(\n     }\n \n     @Override\n-    protected AbstractSubject unassign(final AbstractSubject sbj, final SyncResult result) {\n+    protected AbstractSubject unassign(final AbstractSubject sbj) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(sbj.getId());\n         roleMod.getResourcesToRemove().add(profile.getSyncTask().getResource().getName());\n         rwfAdapter.update(roleMod);\n-        return deprovision(sbj, result);\n+        return deprovision(sbj);\n     }\n \n     @Override\n-    protected AbstractSubject assign(final AbstractSubject sbj, final Boolean enabled, final SyncResult result) {\n+    protected AbstractSubject assign(final AbstractSubject sbj, final Boolean enabled) {\n         final RoleMod roleMod = new RoleMod();\n         roleMod.setId(sbj.getId());\n         roleMod.getResourcesToAdd().add(profile.getSyncTask().getResource().getName());\n         rwfAdapter.update(roleMod);\n-        return provision(sbj, enabled, result);\n-    }\n-\n-    @Override\n-    protected AbstractSubject update(\n-            final AbstractSubject sbj,\n-            final String accountId,\n-            final Set<Attribute> attributes,\n-            final ConnectorObject beforeObj,\n-            final SyncResult result) {\n-\n-        AbstractPropagationTaskExecutor.createOrUpdate(\n-                ObjectClass.GROUP,\n-                accountId,\n-                attributes,\n-                profile.getSyncTask().getResource().getName(),\n-                profile.getSyncTask().getResource().getPropagationMode(),\n-                beforeObj,\n-                profile.getConnector(),\n-                new HashSet<String>(),\n-                connObjectUtil);\n-\n-        return userDataBinder.getUserFromId(sbj.getId());\n+        return provision(sbj, enabled);\n     }\n \n     @Override\n@@ -176,4 +149,9 @@ protected ConnectorObject getRemoteObject(final String accountId) {\n         }\n         return obj;\n     }\n+\n+    @Override\n+    protected AbstractMapping getMapping() {\n+        return profile.getSyncTask().getResource().getRmapping();\n+    }\n }"},{"sha":"4637692d20cac608b4b9bc9259192db0cdd51753","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/UserPushResultHandler.java","status":"modified","additions":13,"deletions":35,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserPushResultHandler.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -20,29 +20,25 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.ResourceOperation;\n+import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.propagation.TimeoutException;\n-import org.apache.syncope.core.propagation.impl.AbstractPropagationTaskExecutor;\n-import org.apache.syncope.core.sync.SyncResult;\n-import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n \n public class UserPushResultHandler extends AbstractSubjectPushResultHandler {\n \n     @Override\n-    protected AbstractSubject deprovision(final AbstractSubject sbj, final SyncResult result) {\n+    protected AbstractSubject deprovision(final AbstractSubject sbj) {\n         final UserTO before = userDataBinder.getUserTO(sbj.getId());\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n@@ -55,7 +51,7 @@ protected AbstractSubject deprovision(final AbstractSubject sbj, final SyncResul\n     }\n \n     @Override\n-    protected AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled, final SyncResult result) {\n+    protected AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled) {\n         final UserTO before = userDataBinder.getUserTO(sbj.getId());\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n@@ -77,8 +73,7 @@ protected AbstractSubject provision(final AbstractSubject sbj, final Boolean ena\n     }\n \n     @Override\n-    protected AbstractSubject link(\n-            final AbstractSubject sbj, final Boolean unlink, final SyncResult result) {\n+    protected AbstractSubject link(final AbstractSubject sbj, final Boolean unlink) {\n \n         final UserMod userMod = new UserMod();\n         userMod.setId(sbj.getId());\n@@ -95,43 +90,21 @@ protected AbstractSubject link(\n     }\n \n     @Override\n-    protected AbstractSubject unassign(final AbstractSubject sbj, final SyncResult result) {\n+    protected AbstractSubject unassign(final AbstractSubject sbj) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(sbj.getId());\n         userMod.getResourcesToRemove().add(profile.getSyncTask().getResource().getName());\n         uwfAdapter.update(userMod);\n-        return deprovision(sbj, result);\n+        return deprovision(sbj);\n     }\n \n     @Override\n-    protected AbstractSubject assign(final AbstractSubject sbj, final Boolean enabled, final SyncResult result) {\n+    protected AbstractSubject assign(final AbstractSubject sbj, final Boolean enabled) {\n         final UserMod userMod = new UserMod();\n         userMod.setId(sbj.getId());\n         userMod.getResourcesToAdd().add(profile.getSyncTask().getResource().getName());\n         uwfAdapter.update(userMod);\n-        return provision(sbj, enabled, result);\n-    }\n-\n-    @Override\n-    protected AbstractSubject update(\n-            final AbstractSubject sbj,\n-            final String accountId,\n-            final Set<Attribute> attributes,\n-            final ConnectorObject beforeObj,\n-            final SyncResult result) {\n-\n-        AbstractPropagationTaskExecutor.createOrUpdate(\n-                ObjectClass.ACCOUNT,\n-                accountId,\n-                attributes,\n-                profile.getSyncTask().getResource().getName(),\n-                profile.getSyncTask().getResource().getPropagationMode(),\n-                beforeObj,\n-                profile.getConnector(),\n-                new HashSet<String>(),\n-                connObjectUtil);\n-\n-        return userDataBinder.getUserFromId(sbj.getId());\n+        return provision(sbj, enabled);\n     }\n \n     @Override\n@@ -179,4 +152,9 @@ protected ConnectorObject getRemoteObject(final String accountId) {\n         }\n         return obj;\n     }\n+\n+    @Override\n+    protected AbstractMapping getMapping() {\n+        return profile.getSyncTask().getResource().getUmapping();\n+    }\n }"},{"sha":"b739ed141fe1c363732e064e659befac57d42aa3","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -67,7 +67,7 @@ public void findAll() {\n         assertEquals(4, taskDAO.findAll(PropagationTask.class).size());\n         assertEquals(1, taskDAO.findAll(NotificationTask.class).size());\n         assertEquals(1, taskDAO.findAll(SchedTask.class).size());\n-        assertEquals(7, taskDAO.findAll(SyncTask.class).size());\n+        assertEquals(9, taskDAO.findAll(SyncTask.class).size());\n         assertEquals(11, taskDAO.findAll(PushTask.class).size());\n     }\n "},{"sha":"886422d16b5ce3c2c7e009543d41e50bedfe5d61","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -298,7 +298,7 @@ public void deal() {\n     }\n \n     @Test\n-    public void sync() {\n+    public void sync() throws Exception {\n         removeTestUsers();\n \n         // -----------------------------\n@@ -318,6 +318,7 @@ public void sync() {\n \n         inUserTO = createUser(inUserTO);\n         assertNotNull(inUserTO);\n+        assertFalse(inUserTO.getResources().contains(RESOURCE_NAME_CSV));\n \n         // -----------------------------\n         try {\n@@ -335,17 +336,25 @@ public void sync() {\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttrMap().get(\"email\").getValues().get(0));\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttrMap().get(\"userId\").getValues().get(0));\n             assertTrue(Integer.valueOf(userTO.getAttrMap().get(\"fullname\").getValues().get(0)) <= 10);\n+            assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n+            assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n+            \n+            // Matching --> Update (no link)\n+            assertFalse(userTO.getResources().contains(RESOURCE_NAME_CSV));\n \n             // check for user template\n             userTO = readUser(\"test7\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_OTHER\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n-            assertEquals(2, userTO.getResources().size());\n+            assertEquals(3, userTO.getResources().size());\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n             assertEquals(1, userTO.getMemberships().size());\n             assertTrue(userTO.getMemberships().get(0).getAttrMap().containsKey(\"subscriptionDate\"));\n \n+            // Unmatching --> Assign (link)\n+            assertTrue(userTO.getResources().contains(RESOURCE_NAME_CSV));\n+\n             userTO = readUser(\"test8\");\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_8\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n@@ -368,6 +377,15 @@ public void sync() {\n \n             // SYNCOPE-317\n             execSyncTask(SYNC_TASK_ID, 50, false);\n+\n+            final Set<Long> pushTaskIds = new HashSet<Long>();\n+            pushTaskIds.add(25L);\n+            pushTaskIds.add(26L);\n+            \n+            execSyncTasks(pushTaskIds, 50, false);\n+            // Matching --> UNLINK\n+            assertFalse(readUser(\"test9\").getResources().contains(RESOURCE_NAME_CSV));\n+            assertFalse(readUser(\"test7\").getResources().contains(RESOURCE_NAME_CSV));\n         } finally {\n             removeTestUsers();\n         }"},{"sha":"4a39e60b5f90078d86a38c855bf2083a8ba61c73","filename":"core/src/test/java/org/apache/syncope/core/sync/SyncTaskTest.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -22,6 +22,8 @@\n import static org.junit.Assert.assertNotNull;\n \n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.MatchingRule;\n+import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.dao.AbstractDAOTest;\n@@ -51,6 +53,8 @@ public void saveSyncTask() {\n         task.setDescription(\"SyncTask description\");\n         task.setUserTemplate(new UserTO());\n         task.setCronExpression(\"BLA BLA\");\n+        task.setMatchingRule(MatchingRule.UPDATE);\n+        task.setUnmatchingRule(UnmatchingRule.PROVISION);\n \n         // this save() fails because of an invalid Cron Expression\n         InvalidEntityException exception = null;\n@@ -105,6 +109,8 @@ public void issueSYNCOPE144() {\n         task.setName(\"issueSYNCOPE144\");\n         task.setDescription(\"issueSYNCOPE144 Description\");\n         task.getActionsClassNames().add(TestSyncActions.class.getName());\n+        task.setMatchingRule(MatchingRule.UPDATE);\n+        task.setUnmatchingRule(UnmatchingRule.PROVISION);\n \n         task = taskDAO.save(task);\n         assertNotNull(task);"},{"sha":"2112b8307eab617dc1c289bf7dff5d2e654bbf1f","filename":"core/src/test/resources/content.xml","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5e1c9921fa913956703cf765782512c97889b39/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=f5e1c9921fa913956703cf765782512c97889b39","patch":"@@ -879,9 +879,9 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" id=\"3\" propagationMode=\"TWO_PHASES\" propagationOperation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"SyncTask\" id=\"4\" name=\"CSV Task\" resource_name=\"resource-csv\"\n+  <Task DTYPE=\"SyncTask\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\"\n         userTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"password\":null,\"status\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"attributes\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}],\"derivedAttributes\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[null]}],\"virtualAttributes\":[],\"resources\":[\"resource-testdb\"],\"propagationStatuses\":[],\"memberships\":[{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"roleId\":8,\"roleName\":null,\"attributes\":[{\"schema\":\"subscriptionDate\",\"readonly\":false,\"values\":[\"&apos;2009-08-18T16:33:12.203+0200&apos;\"]}],\"derivedAttributes\":[],\"virtualAttributes\":[]}]}'\n         roleTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"name\":null,\"parent\":0,\"userOwner\":null,\"roleOwner\":null,\"inheritOwner\":false,\"inheritTemplates\":false,\"inheritAttrs\":false,\"inheritDerAttrs\":false,\"inheritVirAttrs\":false,\"inheritPasswordPolicy\":false,\"inheritAccountPolicy\":false,\"passwordPolicy\":null,\"accountPolicy\":null,\"attributes\":[],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[],\"propagationStatuses\":[],\"entitlements\":[],\"rAttrTemplates\":[],\"rDerAttrTemplates\":[],\"rVirAttrTemplates\":[],\"mAttrTemplates\":[],\"mDerAttrTemplates\":[],\"mVirAttrTemplates\":[]}'/>\n   <SyncTask_actionsClassNames SyncTask_id=\"4\" element=\"org.apache.syncope.core.sync.TestSyncActions\"/>\n@@ -892,26 +892,26 @@ under the License.\n   <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"\n         userTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"password\":null,\"status\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"attributes\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[],\"propagationStatuses\":[],\"memberships\":[]}'\n         roleTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"name\":null,\"parent\":0,\"userOwner\":null,\"roleOwner\":null,\"inheritOwner\":false,\"inheritTemplates\":false,\"inheritAttrs\":false,\"inheritDerAttrs\":false,\"inheritVirAttrs\":false,\"inheritPasswordPolicy\":false,\"inheritAccountPolicy\":false,\"passwordPolicy\":null,\"accountPolicy\":null,\"attributes\":[],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[],\"propagationStatuses\":[],\"entitlements\":[],\"rAttrTemplates\":[],\"rDerAttrTemplates\":[],\"rVirAttrTemplates\":[],\"mAttrTemplates\":[],\"mDerAttrTemplates\":[],\"mVirAttrTemplates\":[]}'/>\n   <Task DTYPE=\"NotificationTask\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n   <Task DTYPE=\"SyncTask\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"SyncTask\" id=\"10\" name=\"TestDB Sync Task\" resource_name=\"resource-db-sync\"\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"SyncTask\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"\n         userTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"password\":null,\"status\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"attributes\":[],\"derivedAttributes\":[],\"virtualAttributes\":[{\"schema\":\"virtualReadOnly\",\"readonly\":false,\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"propagationStatuses\":[],\"memberships\":[]}'\n         roleTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"name\":null,\"parent\":8,\"userOwner\":null,\"roleOwner\":null,\"inheritOwner\":false,\"inheritTemplates\":false,\"inheritAttrs\":false,\"inheritDerAttrs\":false,\"inheritVirAttrs\":false,\"inheritPasswordPolicy\":false,\"inheritAccountPolicy\":false,\"passwordPolicy\":null,\"accountPolicy\":null,\"attributes\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"&apos;true&apos;\"]}],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[],\"propagationStatuses\":[],\"entitlements\":[],\"rAttrTemplates\":[\"show\"],\"rDerAttrTemplates\":[],\"rVirAttrTemplates\":[],\"mAttrTemplates\":[],\"mDerAttrTemplates\":[],\"mVirAttrTemplates\":[]}'/>\n   <SyncTask_actionsClassNames SyncTask_id=\"11\" element=\"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\"/>\n   <Task DTYPE=\"SyncTask\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n         performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"PushTask\" id=\"13\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n         jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" \n@@ -958,9 +958,15 @@ under the License.\n         userFilter=\"username==_NO_ONE_\" roleFilter=\"name==citizen\"/>\n   <Task DTYPE=\"SyncTask\" id=\"24\" name=\"CSV Task 2\" resource_name=\"resource-csv\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"\n         userTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"password\":null,\"status\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"attributes\":[{\"schema\":\"firstname\",\"readonly\":false,\"values\":[\"\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]}],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[\"resource-testdb\"],\"propagationStatuses\":[],\"memberships\":[]}'\n         roleTemplate='{\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"id\":0,\"name\":null,\"parent\":0,\"userOwner\":null,\"roleOwner\":null,\"inheritOwner\":false,\"inheritTemplates\":false,\"inheritAttrs\":false,\"inheritDerAttrs\":false,\"inheritVirAttrs\":false,\"inheritPasswordPolicy\":false,\"inheritAccountPolicy\":false,\"passwordPolicy\":null,\"accountPolicy\":null,\"attributes\":[],\"derivedAttributes\":[],\"virtualAttributes\":[],\"resources\":[],\"propagationStatuses\":[],\"entitlements\":[],\"rAttrTemplates\":[],\"rDerAttrTemplates\":[],\"rVirAttrTemplates\":[],\"mAttrTemplates\":[],\"mDerAttrTemplates\":[],\"mVirAttrTemplates\":[]}'/>\n+  <Task DTYPE=\"SyncTask\" id=\"25\" name=\"CSV (unlink matching; ignore unmatching)\" resource_name=\"resource-csv\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\"/>\n+  <Task DTYPE=\"SyncTask\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>\n       \n   <Notification id=\"1\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                 userAbout=\"fullname==*o*;fullname==*i*\""}]}