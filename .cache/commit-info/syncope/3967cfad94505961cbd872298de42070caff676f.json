{"sha":"3967cfad94505961cbd872298de42070caff676f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM5NjdjZmFkOTQ1MDU5NjFjYmQ4NzIyOThkZTQyMDcwY2FmZjY3NmY=","commit":{"author":{"name":"fmartelli","email":"fmartelli@apache.org","date":"2015-01-30T15:28:12Z"},"committer":{"name":"fmartelli","email":"fmartelli@apache.org","date":"2015-01-30T15:28:12Z"},"message":"[SYNCOPE-633] added MariaDB support","tree":{"sha":"4dfb329f53e20bf909601b50d3d780b49d380310","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4dfb329f53e20bf909601b50d3d780b49d380310"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3967cfad94505961cbd872298de42070caff676f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3967cfad94505961cbd872298de42070caff676f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3967cfad94505961cbd872298de42070caff676f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3967cfad94505961cbd872298de42070caff676f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"9aa765b2519b4c565c5d2dca21afe8d7093fdf91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9aa765b2519b4c565c5d2dca21afe8d7093fdf91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9aa765b2519b4c565c5d2dca21afe8d7093fdf91"}],"stats":{"total":281,"additions":277,"deletions":4},"files":[{"sha":"3fa0e26bd5dc27ef5c9774cc623edc2a7eadf460","filename":"core/pom.xml","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3967cfad94505961cbd872298de42070caff676f/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3967cfad94505961cbd872298de42070caff676f/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=3967cfad94505961cbd872298de42070caff676f","patch":"@@ -691,6 +691,7 @@ under the License.\n           <exclude>oracle/**</exclude>\n           <exclude>postgres/**</exclude>\n           <exclude>mysql/**</exclude>\n+          <exclude>mariadb/**</exclude>\n           <exclude>sqlserver/**</exclude>\n           <exclude>jboss/**</exclude>\n           <exclude>weblogic/**</exclude>\n@@ -1154,6 +1155,43 @@ under the License.\n       </build>\n     </profile>\n \n+    <profile>\n+      <id>mariadb-it</id>\n+\n+      <properties>\n+        <jdbcdriver.groupId>org.mariadb.jdbc</jdbcdriver.groupId>\n+        <jdbcdriver.artifactId>mariadb-java-client</jdbcdriver.artifactId>\n+        <jdbcdriver.version>1.1.7</jdbcdriver.version>\n+      </properties>\n+\n+      <dependencies>\n+        <dependency>\n+          <groupId>${jdbcdriver.groupId}</groupId>\n+          <artifactId>${jdbcdriver.artifactId}</artifactId>\n+          <version>${jdbcdriver.version}</version>\n+          <scope>test</scope>\n+        </dependency>\n+      </dependencies>\n+      \n+      <build>\n+        <defaultGoal>clean verify</defaultGoal>\n+\n+        <testResources>\n+          <testResource>\n+            <directory>src/test/resources</directory>\n+            <filtering>true</filtering>\n+            <excludes>\n+              <exclude>persistence.properties</exclude>\n+            </excludes>\n+          </testResource>\n+          <testResource>\n+            <directory>src/test/resources/mariadb</directory>\n+            <filtering>true</filtering>\n+          </testResource>\n+        </testResources>\n+      </build>\n+    </profile>\n+\n     <profile>\n       <id>glassfish-it</id>\n "},{"sha":"ebb8e59702733989df95b2792d20d08f8b775dd6","filename":"core/src/main/resources/quartz/tables_mariadb.sql","status":"added","additions":206,"deletions":0,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mariadb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mariadb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fquartz%2Ftables_mariadb.sql?ref=3967cfad94505961cbd872298de42070caff676f","patch":"@@ -0,0 +1,206 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+--\n+-- Quartz seems to work best with the driver mm.mysql-2.0.7-bin.jar\n+--\n+-- PLEASE consider using mysql with innodb tables to avoid locking issues\n+--\n+-- In your Quartz properties file, you'll need to set \n+-- org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+--\n+\n+BEGIN;\n+DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;\n+DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;\n+DROP TABLE IF EXISTS QRTZ_LOCKS;\n+DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_TRIGGERS;\n+DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;\n+DROP TABLE IF EXISTS QRTZ_CALENDARS;\n+COMMIT;\n+\n+\n+BEGIN;\n+CREATE TABLE QRTZ_JOB_DETAILS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    JOB_NAME  VARCHAR(200) NOT NULL,\n+    JOB_GROUP VARCHAR(200) NOT NULL,\n+    DESCRIPTION VARCHAR(250) NULL,\n+    JOB_CLASS_NAME   VARCHAR(250) NOT NULL,\n+    IS_DURABLE VARCHAR(1) NOT NULL,\n+    IS_NONCONCURRENT VARCHAR(1) NOT NULL,\n+    IS_UPDATE_DATA VARCHAR(1) NOT NULL,\n+    REQUESTS_RECOVERY VARCHAR(1) NOT NULL,\n+    JOB_DATA BLOB NULL,\n+    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_TRIGGERS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    JOB_NAME  VARCHAR(200) NOT NULL,\n+    JOB_GROUP VARCHAR(200) NOT NULL,\n+    DESCRIPTION VARCHAR(250) NULL,\n+    NEXT_FIRE_TIME BIGINT(13) NULL,\n+    PREV_FIRE_TIME BIGINT(13) NULL,\n+    PRIORITY INTEGER NULL,\n+    TRIGGER_STATE VARCHAR(16) NOT NULL,\n+    TRIGGER_TYPE VARCHAR(8) NOT NULL,\n+    START_TIME BIGINT(13) NOT NULL,\n+    END_TIME BIGINT(13) NULL,\n+    CALENDAR_NAME VARCHAR(200) NULL,\n+    MISFIRE_INSTR SMALLINT(2) NULL,\n+    JOB_DATA BLOB NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)\n+        REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_SIMPLE_TRIGGERS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    REPEAT_COUNT BIGINT(7) NOT NULL,\n+    REPEAT_INTERVAL BIGINT(12) NOT NULL,\n+    TIMES_TRIGGERED BIGINT(10) NOT NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_CRON_TRIGGERS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    CRON_EXPRESSION VARCHAR(200) NOT NULL,\n+    TIME_ZONE_ID VARCHAR(80),\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_SIMPROP_TRIGGERS\n+  (          \n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    STR_PROP_1 VARCHAR(512) NULL,\n+    STR_PROP_2 VARCHAR(512) NULL,\n+    STR_PROP_3 VARCHAR(512) NULL,\n+    INT_PROP_1 INT NULL,\n+    INT_PROP_2 INT NULL,\n+    LONG_PROP_1 BIGINT NULL,\n+    LONG_PROP_2 BIGINT NULL,\n+    DEC_PROP_1 NUMERIC(13,4) NULL,\n+    DEC_PROP_2 NUMERIC(13,4) NULL,\n+    BOOL_PROP_1 VARCHAR(1) NULL,\n+    BOOL_PROP_2 VARCHAR(1) NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) \n+    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_BLOB_TRIGGERS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    BLOB_DATA BLOB NULL,\n+    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),\n+    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_CALENDARS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    CALENDAR_NAME  VARCHAR(200) NOT NULL,\n+    CALENDAR BLOB NOT NULL,\n+    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    TRIGGER_GROUP  VARCHAR(200) NOT NULL, \n+    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_FIRED_TRIGGERS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    ENTRY_ID VARCHAR(95) NOT NULL,\n+    TRIGGER_NAME VARCHAR(200) NOT NULL,\n+    TRIGGER_GROUP VARCHAR(200) NOT NULL,\n+    INSTANCE_NAME VARCHAR(200) NOT NULL,\n+    FIRED_TIME BIGINT(13) NOT NULL,\n+    SCHED_TIME BIGINT(13) NOT NULL,\n+    PRIORITY INTEGER NOT NULL,\n+    STATE VARCHAR(16) NOT NULL,\n+    JOB_NAME VARCHAR(200) NULL,\n+    JOB_GROUP VARCHAR(200) NULL,\n+    IS_NONCONCURRENT VARCHAR(1) NULL,\n+    REQUESTS_RECOVERY VARCHAR(1) NULL,\n+    PRIMARY KEY (SCHED_NAME,ENTRY_ID)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_SCHEDULER_STATE\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    INSTANCE_NAME VARCHAR(200) NOT NULL,\n+    LAST_CHECKIN_TIME BIGINT(13) NOT NULL,\n+    CHECKIN_INTERVAL BIGINT(13) NOT NULL,\n+    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)\n+);\n+COMMIT;\n+\n+BEGIN;\n+CREATE TABLE QRTZ_LOCKS\n+  (\n+    SCHED_NAME VARCHAR(120) NOT NULL,\n+    LOCK_NAME  VARCHAR(40) NOT NULL, \n+    PRIMARY KEY (SCHED_NAME,LOCK_NAME)\n+);\n+COMMIT;"},{"sha":"d81afb7cb0df7225d50284e75554bd5a1fc706f8","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=3967cfad94505961cbd872298de42070caff676f","patch":"@@ -195,19 +195,19 @@ public void issueSYNCOPE629() throws IOException {\n             assertFalse(configExport.isEmpty());\n             assertTrue(configExport.length() > 1000);\n \n-            String[] result = StringUtils.substringsBetween(configExport, \"<RATTRTEMPLATE\", \"/>\");\n+            String[] result = StringUtils.substringsBetween(configExport.toUpperCase(), \"<RATTRTEMPLATE\", \"/>\");\n             boolean rattrExists = false;\n             for (String entry : result) {\n-                if (entry.contains(roleKey.getName())) {\n+                if (entry.contains(roleKey.getName().toUpperCase())) {\n                     rattrExists = true;\n                 }\n             }\n             assertTrue(rattrExists);\n \n-            result = StringUtils.substringsBetween(configExport, \"<MATTRTEMPLATE\", \"/>\");\n+            result = StringUtils.substringsBetween(configExport.toUpperCase(), \"<MATTRTEMPLATE\", \"/>\");\n             boolean mattrExists = false;\n             for (String entry : result) {\n-                if (entry.contains(membershipKey.getName())) {\n+                if (entry.contains(membershipKey.getName().toUpperCase())) {\n                     mattrExists = true;\n                 }\n             }"},{"sha":"8713629abd42bb215ef25b4c6c69220dab55af9f","filename":"core/src/test/resources/mariadb/persistence.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Ftest%2Fresources%2Fmariadb%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3967cfad94505961cbd872298de42070caff676f/core%2Fsrc%2Ftest%2Fresources%2Fmariadb%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmariadb%2Fpersistence.properties?ref=3967cfad94505961cbd872298de42070caff676f","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+jpa.driverClassName=org.mariadb.jdbc.Driver\n+jpa.url=jdbc:mariadb://localhost:3306/syncope?characterEncoding=UTF-8\n+jpa.username=syncope\n+jpa.password=syncope\n+jpa.dialect=org.apache.openjpa.jdbc.sql.MariaDBDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n+quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.scheduler.idleWaitTime=5000\n+quartz.sql=tables_mariadb.sql\n+audit.sql=audit.sql\n+database.schema="},{"sha":"2d3f6c9126164aedb8bfbf18908e7c9322ebb044","filename":"pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3967cfad94505961cbd872298de42070caff676f/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3967cfad94505961cbd872298de42070caff676f/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=3967cfad94505961cbd872298de42070caff676f","patch":"@@ -1410,6 +1410,7 @@ under the License.\n             <exclude>**/.*</exclude>\n             <exclude>**/deb/control/conffiles</exclude>\n             <exclude>**/deb/control/control</exclude>\n+            <exclude>**/*.lst</exclude>\n           </excludes>\n         </configuration>\n         <executions>"}]}