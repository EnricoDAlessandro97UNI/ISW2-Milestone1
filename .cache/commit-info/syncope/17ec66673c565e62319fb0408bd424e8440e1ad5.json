{"sha":"17ec66673c565e62319fb0408bd424e8440e1ad5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE3ZWM2NjY3M2M1NjVlNjIzMTlmYjA0MDhiZDQyNGU4NDQwZTFhZDU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-22T11:18:21Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-22T11:18:21Z"},"message":"Enhancing Schema visualization\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1459722 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"982a712c1264de6a67891b97670818ea4cc8634f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/982a712c1264de6a67891b97670818ea4cc8634f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/17ec66673c565e62319fb0408bd424e8440e1ad5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17ec66673c565e62319fb0408bd424e8440e1ad5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17ec66673c565e62319fb0408bd424e8440e1ad5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17ec66673c565e62319fb0408bd424e8440e1ad5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"972812f69d456c13320e02618c03f0f7a77c0dd7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/972812f69d456c13320e02618c03f0f7a77c0dd7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/972812f69d456c13320e02618c03f0f7a77c0dd7"}],"stats":{"total":42,"additions":34,"deletions":8},"files":[{"sha":"66a2bf4d3327f585ad400cf8b9167b4a408ef9e8","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":33,"deletions":7,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17ec66673c565e62319fb0408bd424e8440e1ad5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17ec66673c565e62319fb0408bd424e8440e1ad5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=17ec66673c565e62319fb0408bd424e8440e1ad5","patch":"@@ -28,6 +28,7 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n@@ -178,7 +179,6 @@ private <T extends AbstractSchemaModalPage> List<IColumn> getColumns(\n             final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n             if (clazzField != null) {\n                 if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n-\n                     columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(field)) {\n \n                         private static final long serialVersionUID = 8263694778917279290L;\n@@ -190,13 +190,32 @@ public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item,\n                             BeanWrapper bwi = new BeanWrapperImpl(model.getObject());\n                             Object obj = bwi.getPropertyValue(field);\n \n-                            Label empty = new Label(componentId, \" \");\n-                            empty.add(new AttributeModifier(\"class\", new Model<String>(obj.toString())));\n-                            item.add(empty);\n+                            item.add(new Label(componentId, \"\"));\n+                            item.add(new AttributeModifier(\"class\", new Model<String>(obj.toString())));\n+                        }\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            return \"small_fixedsize\";\n                         }\n                     });\n                 } else {\n-                    columns.add(new PropertyColumn(new ResourceModel(field), field, field));\n+                    IColumn column = new PropertyColumn(new ResourceModel(field), field, field) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"name\".equals(field)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n                 }\n             }\n         }\n@@ -413,9 +432,16 @@ private void setup() {\n             editSchemaWin.setMarkupId(\"editSchemaWin\");\n             add(editSchemaWin);\n \n+            WebMarkupContainer schemaWrapContainer = new WebMarkupContainer(\"schemaWrapContainer\");\n+            schemaWrapContainer.setOutputMarkupId(true);\n+            if (schemaType != SchemaType.VIRTUAL) {\n+                schemaWrapContainer.add(new AttributeModifier(\"style\", \"width:auto;\"));\n+            }\n+            add(schemaWrapContainer);\n+\n             WebMarkupContainer schemaContainer = new WebMarkupContainer(\"schemaContainer\");\n             schemaContainer.setOutputMarkupId(true);\n-            add(schemaContainer);\n+            schemaWrapContainer.add(schemaContainer);\n             setWindowClosedCallback(editSchemaWin, schemaContainer);\n \n             final String paginatorRowsKey = PAGINATOR_ROWS_KEYS.get(\n@@ -429,7 +455,7 @@ private void setup() {\n             table.setOutputMarkupId(true);\n             schemaContainer.add(table);\n \n-            add(getPaginatorForm(schemaContainer, table, \"paginatorForm\", this, paginatorRowsKey));\n+            schemaWrapContainer.add(getPaginatorForm(schemaContainer, table, \"paginatorForm\", this, paginatorRowsKey));\n \n             add(getCreateSchemaLink(editSchemaWin, attrType, schemaType, \"createSchemaLink\"));\n         }"},{"sha":"582193129135c86f93eb7e8ae73e110fd292ac3e","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema$SchemaTypePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17ec66673c565e62319fb0408bd424e8440e1ad5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17ec66673c565e62319fb0408bd424e8440e1ad5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html?ref=17ec66673c565e62319fb0408bd424e8440e1ad5","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div id=\"users-contain\" class=\"ui-widget\">\n+    <div wicket:id=\"schemaWrapContainer\" id=\"users-contain\" class=\"ui-widget\">\n       <span wicket:id=\"schemaContainer\">\n         <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"datatable\"/>\n       </span>"}]}