{"sha":"a9c2624546887787a6e0389e4bbb1fff5f14f612","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE5YzI2MjQ1NDY4ODc3ODdhNmUwMzg5ZTRiYmIxZmZmNWYxNGY2MTI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-22T11:06:25Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-22T11:06:25Z"},"message":"[SYNCOPE-156] fix provision and attribute mapping management + binary attributes default preview provided","tree":{"sha":"135a3a5c5708f2be21063751f567e62dde6fe82c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/135a3a5c5708f2be21063751f567e62dde6fe82c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a9c2624546887787a6e0389e4bbb1fff5f14f612","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9c2624546887787a6e0389e4bbb1fff5f14f612","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9c2624546887787a6e0389e4bbb1fff5f14f612","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9c2624546887787a6e0389e4bbb1fff5f14f612/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6e41db3b9fbd23f750e21d245fb97736b0b0aa91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6e41db3b9fbd23f750e21d245fb97736b0b0aa91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6e41db3b9fbd23f750e21d245fb97736b0b0aa91"}],"stats":{"total":317,"additions":203,"deletions":114},"files":[{"sha":"ae2661dffc0b38f6bf59d0b8d0dc44f1af2d5b0e","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"modified","additions":19,"deletions":23,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -25,8 +25,7 @@\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.util.crypt.Base64;\n+import org.apache.syncope.client.console.wicket.markup.html.form.preview.DefaultPreviewer;\n import org.springframework.util.Assert;\n \n public final class PreviewUtils {\n@@ -51,30 +50,27 @@ private PreviewUtils() {\n                 getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n     }\n \n-    public Component getPreviewer(final String mimeType, final String file)\n-            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n-\n-        Class<? extends AbstractBinaryPreviewer> previewer = StringUtils.isBlank(file)\n-                ? null\n-                : classPathScanImplementationLookup.getPreviewerClass(mimeType);\n-\n-        return previewer == null\n-                ? null\n-                : getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n-                newInstance(new Object[] { \"previewer\", mimeType, Base64.decodeBase64(file) }).\n-                preview();\n+    public AbstractBinaryPreviewer getDefaultPreviewer(final String mimeType) {\n+        return new DefaultPreviewer(\"previewer\", mimeType);\n     }\n \n-    public Component getPreviewer(final String mimeType, final byte[] file)\n-            throws InstantiationException, IllegalAccessException, InvocationTargetException {\n+    public AbstractBinaryPreviewer getPreviewer(final String mimeType) {\n+\n+        if (StringUtils.isBlank(mimeType)) {\n+            return null;\n+        }\n \n-        Class<? extends AbstractBinaryPreviewer> previewer = classPathScanImplementationLookup.getPreviewerClass(\n-                mimeType);\n+        final Class<? extends AbstractBinaryPreviewer> previewer\n+                = classPathScanImplementationLookup.getPreviewerClass(mimeType);\n \n-        return previewer == null\n-                ? null\n-                : getConstructorIfAvailable(previewer, String.class, String.class, byte[].class).\n-                newInstance(new Object[] { \"previewer\", mimeType, file }).\n-                preview();\n+        try {\n+            return previewer == null\n+                    ? null\n+                    : getConstructorIfAvailable(previewer, String.class, String.class).\n+                    newInstance(new Object[] { \"previewer\", mimeType });\n+        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException \n+                | InvocationTargetException ex) {\n+            return null;\n+        }\n     }\n }"},{"sha":"5ec7e58b922a78da1c447dd4b5f86cd5b5dbdad7","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -86,7 +86,8 @@ public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String m\n         Class<? extends AbstractBinaryPreviewer> previewer = null;\n         for (Class<? extends AbstractBinaryPreviewer> candidate : previewers) {\n             LOG.debug(\"Evaluating previewer class {} for MIME type {}\", candidate.getName(), mimeType);\n-            if (ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n+            if (candidate.isAnnotationPresent(BinaryPreview.class)\n+                    && ArrayUtils.contains(candidate.getAnnotation(BinaryPreview.class).mimeTypes(), mimeType)) {\n                 LOG.debug(\"Found existing previewer for MIME type {}: {}\", mimeType, candidate.getName());\n                 previewer = candidate;\n             }"},{"sha":"6f25bdd62a5dce963df82c6c6f6b5fbfe8de7178","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":18,"deletions":10,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -25,8 +25,8 @@\n import java.util.Comparator;\n import java.util.List;\n import java.util.Set;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n@@ -310,8 +310,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                         intAttrNames.setChoices(Collections.<String>emptyList());\n \n-                        target.add(intMappingTypes.getField());\n-                        target.add(intAttrNames.getField());\n+                        target.add(intMappingTypes);\n+                        target.add(intAttrNames);\n                     }\n                 });\n                 item.add(entitiesPanel);\n@@ -445,15 +445,23 @@ private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfPr\n         connInstanceTO.getConf().addAll(conf);\n \n         // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n-        return CollectionUtils.collect(connRestClient.buildObjectClassInfo(connInstanceTO, true),\n-                new Transformer<ConnIdObjectClassTO, String>() {\n+        ConnIdObjectClassTO clazz = IterableUtils.find(\n+                connRestClient.buildObjectClassInfo(connInstanceTO, true), new Predicate<ConnIdObjectClassTO>() {\n \n             @Override\n-            public String transform(final ConnIdObjectClassTO input) {\n-                return input.getType();\n+            public boolean evaluate(final ConnIdObjectClassTO object) {\n+                return object.getType().equalsIgnoreCase(ResourceMappingPanel.this.provisionTO.getObjectClass());\n             }\n-        },\n-                new ArrayList<String>());\n+        });\n+\n+        return clazz == null ? new ArrayList<String>()\n+                : IterableUtils.toList(IterableUtils.filteredIterable(clazz.getAttributes(), new Predicate<String>() {\n+                    @Override\n+                    public boolean evaluate(final String object) {\n+                        return !(\"__NAME__\".equals(object) || \"__ENABLE__\".equals(object) \n+                                || \"__PASSWORD__\".equals(object));\n+                    }\n+                }));\n     }\n \n     private void setEnabled() {"},{"sha":"31c3ef774b5737e5b862f3a7734f63f50558d4c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":70,"deletions":28,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -18,22 +18,29 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import static de.agilecoders.wicket.jquery.JQuery.$;\n+\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.BootstrapFileInputField;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileInputConfig;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileinputJsReference;\n+import de.agilecoders.wicket.jquery.JQuery;\n+import de.agilecoders.wicket.jquery.function.IFunction;\n import java.io.ByteArrayInputStream;\n-import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n@@ -44,6 +51,7 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.resource.ContentDisposition;\n import org.apache.wicket.util.crypt.Base64;\n@@ -63,18 +71,47 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final Fragment emptyFragment;\n \n+    private final BootstrapFileInputField fileUpload;\n+\n     private final transient PreviewUtils previewUtils = PreviewUtils.getInstance();\n \n+    private final AbstractBinaryPreviewer previewer;\n+\n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType) {\n         super(id, name, model);\n         this.mimeType = mimeType;\n \n+        previewer = previewUtils.getPreviewer(mimeType);\n+\n         uploadForm = new StatelessForm<>(\"uploadForm\");\n         uploadForm.setMultiPart(true);\n         uploadForm.setMaxSize(Bytes.megabytes(4));\n         add(uploadForm);\n \n-        container = new WebMarkupContainer(\"previewContainer\");\n+        container = new WebMarkupContainer(\"previewContainer\") {\n+\n+            private static final long serialVersionUID = 2628490926588791229L;\n+\n+            @Override\n+            public void renderHead(final IHeaderResponse response) {\n+                if (previewer == null) {\n+                    FileinputJsReference.INSTANCE.renderHead(response);\n+                    final JQuery fileinputJS = $(fileUpload).chain(new IFunction() {\n+\n+                        private static final long serialVersionUID = -2285418135375523652L;\n+\n+                        @Override\n+                        public String build() {\n+                            return \"fileinput({\"\n+                                    + \"'showRemove':false, \"\n+                                    + \"'showUpload':false, \"\n+                                    + \"'previewFileType':'any'})\";\n+                        }\n+                    });\n+                    response.render(OnDomReadyHeaderItem.forScript(fileinputJS.get()));\n+                }\n+            }\n+        };\n         container.setOutputMarkupId(true);\n \n         emptyFragment = new Fragment(\"panelPreview\", \"emptyFragment\", container);\n@@ -111,9 +148,11 @@ public void onClick() {\n \n         FileInputConfig config = new FileInputConfig();\n         config.showUpload(false);\n+        config.showRemove(false);\n+        config.showPreview(false);\n \n-        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-        final BootstrapFileInputField fileUpload = new BootstrapFileInputField(\"fileUpload\", new Model(), config);\n+        fileUpload = new BootstrapFileInputField(\"fileUpload\",\n+                new ListModel<FileUpload>(new ArrayList<FileUpload>()), config);\n         fileUpload.setOutputMarkupId(true);\n \n         fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n@@ -124,28 +163,25 @@ public void onClick() {\n             protected void onSubmit(final AjaxRequestTarget target) {\n                 final FileUpload uploadedFile = fileUpload.getFileUpload();\n                 if (uploadedFile != null) {\n-                    try {\n-                        final byte[] uploadedBytes = uploadedFile.getBytes();\n-                        final String uploaded = new String(\n-                                Base64.encodeBase64(uploadedBytes),\n-                                SyncopeConstants.DEFAULT_CHARSET);\n-                        field.setModelObject(uploaded);\n-                        target.add(field);\n-\n-                        Component panelPreview = previewUtils.getPreviewer(mimeType, uploadedBytes);\n-                        if (panelPreview != null) {\n-                            changePreviewer(panelPreview);\n-                        }\n-\n+                    final byte[] uploadedBytes = uploadedFile.getBytes();\n+                    final String uploaded = new String(\n+                            Base64.encodeBase64(uploadedBytes),\n+                            SyncopeConstants.DEFAULT_CHARSET);\n+                    field.setModelObject(uploaded);\n+                    target.add(field);\n+\n+                    if (previewer == null) {\n+                        container.addOrReplace(emptyFragment);\n+                    } else {\n+                        final Component panelPreview = previewer.preview(uploadedBytes);\n+                        changePreviewer(panelPreview);\n                         fileUpload.setModelObject(null);\n                         uploadForm.addOrReplace(fileUpload);\n-                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n-                        target.add(uploadForm);\n-                    } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n-                        error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n-                        LOG.error(\"While saving uploaded file\", e);\n                     }\n+\n+                    downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+\n+                    target.add(container);\n                 }\n             }\n         });\n@@ -198,14 +234,20 @@ public BinaryFieldPanel clone() {\n     @Override\n     public FieldPanel<String> setNewModel(final IModel<String> model) {\n         field.setModel(model);\n-        try {\n-            Component panelPreview = previewUtils.getPreviewer(mimeType, model.getObject());\n+\n+        if (StringUtils.isNotBlank(model.getObject())) {\n+            final Component panelPreview;\n+            if (previewer == null) {\n+                panelPreview = previewUtils.getDefaultPreviewer(mimeType);\n+            } else {\n+                panelPreview = previewer.preview(model.getObject());\n+            }\n+\n             if (panelPreview != null) {\n                 changePreviewer(panelPreview);\n             }\n-        } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n-            LOG.error(\"While loading saved file\", e);\n         }\n+\n         downloadLink.setEnabled(StringUtils.isNotBlank(model.getObject()));\n         uploadForm.addOrReplace(downloadLink);\n         return this;"},{"sha":"97bb2f3f3e59f77d99f08b095f61a21c4cb0e912","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/AbstractBinaryPreviewer.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FAbstractBinaryPreviewer.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.util.crypt.Base64;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -34,13 +35,14 @@ public abstract class AbstractBinaryPreviewer extends Panel {\n \n     protected final String mimeType;\n \n-    protected final byte[] uploadedBytes;\n-\n-    public AbstractBinaryPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n+    public AbstractBinaryPreviewer(final String id, final String mimeType) {\n         super(id);\n         this.mimeType = mimeType;\n-        this.uploadedBytes = uploadedBytes;\n     }\n \n-    public abstract Component preview();\n+    public Component preview(final String uploaded) {\n+        return preview(Base64.decodeBase64(uploaded));\n+    }\n+\n+    public abstract Component preview(final byte[] uploadedBytes);\n }"},{"sha":"f7b38311cd6e5abb5e7f7d8fb3d36c862b029094","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryCertPreviewer.java","status":"modified","additions":14,"deletions":6,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryCertPreviewer.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -19,12 +19,15 @@\n package org.apache.syncope.client.console.wicket.markup.html.form.preview;\n \n import java.io.ByteArrayInputStream;\n+import java.security.cert.CertificateException;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;\n+import javax.naming.InvalidNameException;\n import javax.naming.ldap.LdapName;\n import javax.naming.ldap.Rdn;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;\n@@ -35,13 +38,18 @@ public class BinaryCertPreviewer extends AbstractBinaryPreviewer {\n \n     private static final long serialVersionUID = -5843835939538055110L;\n \n-    public BinaryCertPreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n-        super(id, mimeType, uploadedBytes);\n+    public BinaryCertPreviewer(final String id, final String mimeType) {\n+        super(id, mimeType);\n     }\n \n     @Override\n-    public Component preview() {\n+    public Component preview(final byte[] uploadedBytes) {\n         final Label commonNameLabel = new Label(\"certCommonName\", new Model<String>());\n+        if (uploadedBytes.length == 0) {\n+            LOG.info(\"Enpty certificate\");\n+            return commonNameLabel;\n+        }\n+\n         final ByteArrayInputStream certificateStream = new ByteArrayInputStream(uploadedBytes);\n         try {\n             final X509Certificate certificate = (X509Certificate) CertificateFactory.getInstance(\"X.509\").\n@@ -59,12 +67,12 @@ public Component preview() {\n                 }\n             }\n             commonNameLabel.setDefaultModelObject(commonNameBuilder.toString());\n-        } catch (Exception e) {\n+        } catch (CertificateException | InvalidNameException e) {\n             LOG.error(\"Error evaluating certificate file\", e);\n-            throw new IllegalArgumentException(\"Error evaluating certificate file\", e);\n+            commonNameLabel.setDefaultModelObject(getString(Constants.ERROR));\n         } finally {\n             IOUtils.closeQuietly(certificateStream);\n         }\n-        return this.add(commonNameLabel);\n+        return this.addOrReplace(commonNameLabel);\n     }\n }"},{"sha":"dc198ea70af550595bb570f2db11e7d2b2c9a91c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryImagePreviewer.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryImagePreviewer.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -30,14 +30,14 @@ public class BinaryImagePreviewer extends AbstractBinaryPreviewer {\n \n     private static final long serialVersionUID = 3338812359368457349L;\n \n-    private static final int IMG_SIZE = 230;\n+    private static final int IMG_SIZE = 300;\n \n-    public BinaryImagePreviewer(final String id, final String mimeType, final byte[] uploadedBytes) {\n-        super(id, mimeType, uploadedBytes);\n+    public BinaryImagePreviewer(final String id, final String mimeType) {\n+        super(id, mimeType);\n     }\n \n     @Override\n-    public Component preview() {\n+    public Component preview(final byte[] uploadedBytes) {\n         return this.add(new NonCachingImage(\"previewImage\", new ThumbnailImageResource(new DynamicImageResource() {\n \n             private static final long serialVersionUID = 923201517955737928L;"},{"sha":"4d60aabd7c3b398bd333f111ff027ba4e775645b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":41,"deletions":9,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -28,16 +28,19 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -78,11 +81,11 @@ public String transform(final AnyTypeTO anyTypeTO) {\n                         }\n                     }, res), new Predicate<String>() {\n \n-                        @Override\n-                        public boolean evaluate(final String key) {\n-                            return !currentlyAdded.contains(key);\n-                        }\n-                    });\n+                @Override\n+                public boolean evaluate(final String key) {\n+                    return !currentlyAdded.contains(key);\n+                }\n+            });\n \n             return res;\n         }\n@@ -95,19 +98,48 @@ private final class ObjectType extends WizardStep {\n \n         private static final long serialVersionUID = 1L;\n \n+        private static final String ACCOUNT = \"__ACCOUNT__\";\n+\n+        private static final String GROUP = \"__GROUP__\";\n+\n         /**\n          * Construct.\n          */\n         ObjectType(final ProvisionTO item) {\n             super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n                     new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<ProvisionTO>(item));\n \n-            add(new AjaxDropDownChoicePanel<String>(\"type\", \"type\", new PropertyModel<String>(item, \"anyType\"), false).\n+            final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+            container.setOutputMarkupId(true);\n+            add(container);\n+\n+            final FieldPanel<String> type = new AjaxDropDownChoicePanel<String>(\n+                    \"type\", \"type\", new PropertyModel<String>(item, \"anyType\"), false).\n                     setChoices(anyTypes).\n                     setStyleSheet(\"form-control\").\n-                    setRequired(true));\n+                    setRequired(true);\n+            container.add(type);\n+\n+            final FormComponent<String> clazz = new TextField<String>(\n+                    \"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true);\n+\n+            container.add(clazz);\n \n-            add(new TextField<String>(\"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n+            type.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    if (AnyTypeKind.USER.name().equals(type.getModelObject())) {\n+                        clazz.setModelObject(ACCOUNT);\n+                        target.add(container);\n+                    } else if (AnyTypeKind.GROUP.name().equals(type.getModelObject())) {\n+                        clazz.setModelObject(GROUP);\n+                        target.add(container);\n+                    }\n+                }\n+            });\n         }\n     }\n \n@@ -216,6 +248,6 @@ protected void onCancelInternal(final ProvisionTO modelObject) {\n \n     @Override\n     protected void onApplyInternal(final ProvisionTO modelObject) {\n-        // do nothing\n+        this.resourceTO.getProvisions().add(modelObject);\n     }\n }"},{"sha":"d9a1d56d6eb84101ea9e0fb687eeb543f42cdfc3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.html","status":"modified","additions":19,"deletions":21,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.html?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -26,27 +26,25 @@\n       </wicket:enclosure>\n       <fieldset class=\"input-group\">\n         <input style=\"display: none;\" wicket:id=\"textField\"/>\n-        <span style=\"margin-right: 20px;\">\n-          <div style=\"display: table-cell;\">\n-            <form wicket:id=\"uploadForm\" encType=\"multipart/form-data\" method=\"post\" accept-charset=\"UTF-8\">\n-              <input wicket:id=\"fileUpload\" type=\"file\"/>\n-              <div style=\"top: -25px; left: 100%; position: relative; vertical-align: middle;\">\n-                <!--<a href=\"#\" wicket:id=\"uploadLink\"><i title=\"upload\" alt=\"file upload icon\" class=\"glyphicon glyphicon-upload\"></i></a>-->\n-                <a href=\"#\" wicket:id=\"downloadLink\"><i title=\"download\" alt=\"file download icon\" class=\"glyphicon glyphicon-download\"></i></a>\n-                <a href=\"#\" wicket:id=\"resetLink\"><i title=\"remove value\" alt=\"remove value icon\" class=\"glyphicon glyphicon-remove\"></i></a>\n-                <span wicket:id=\"preview\"/>\n-              </div>\n-              <span wicket:id=\"previewContainer\">\n-                <span wicket:id=\"panelPreview\">[panelPreview]</span>\n-                <wicket:fragment wicket:id=\"previewFragment\">\n-                  <div wicket:id = \"previewer\" class=\"ui-widget-content ui-corner-all\"></div>\n-                </wicket:fragment>\n-                <wicket:fragment wicket:id=\"emptyFragment\">\n-                </wicket:fragment>\n-              </span>\n-            </form>\n-          </div>\n-        </span>\n+        <div>\n+          <form wicket:id=\"uploadForm\" encType=\"multipart/form-data\" method=\"post\" accept-charset=\"UTF-8\">\n+            <span wicket:id=\"previewContainer\">\n+              <span wicket:id=\"panelPreview\">[panelPreview]</span>\n+              <wicket:fragment wicket:id=\"previewFragment\">\n+                <div wicket:id = \"previewer\" class=\"ui-widget-content ui-corner-all form-group\"></div>\n+              </wicket:fragment>\n+              <wicket:fragment wicket:id=\"emptyFragment\">\n+              </wicket:fragment>\n+            </span>\n+            <input wicket:id=\"fileUpload\" type=\"file\"/>\n+            <div>\n+              <!--<a href=\"#\" wicket:id=\"uploadLink\"><i title=\"upload\" alt=\"file upload icon\" class=\"glyphicon glyphicon-upload\"></i></a>-->\n+              <a href=\"#\" wicket:id=\"downloadLink\"><i title=\"download\" alt=\"file download icon\" class=\"glyphicon glyphicon-download\"></i></a>\n+              <a href=\"#\" wicket:id=\"resetLink\"><i title=\"remove value\" alt=\"remove value icon\" class=\"glyphicon glyphicon-remove\"></i></a>\n+              <span wicket:id=\"preview\"/>\n+            </div>\n+          </form>\n+        </div>\n       </fieldset>\n     </wicket:extend>\n   </body>"},{"sha":"16921943937e0f73c9970c3777dd602708a2f945","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType.html","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9c2624546887787a6e0389e4bbb1fff5f14f612/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html?ref=a9c2624546887787a6e0389e4bbb1fff5f14f612","patch":"@@ -20,13 +20,15 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel >\n-      <div class=\"form-group\">\n-        <label>Object Type</label>\n-        <span wicket:id=\"type\"/>\n-      </div>\n-      <div class=\"form-group\">\n-        <label>Object Class</label>\n-        <input type=\"text\" placeholder=\"Object Class ...\" class=\"form-control\"  wicket:id=\"class\">\n+      <div wicket:id=\"container\">\n+        <div class=\"form-group\">\n+          <label>Object Type</label>\n+          <span wicket:id=\"type\"/>\n+        </div>\n+        <div class=\"form-group\">\n+          <label>Object Class</label>\n+          <input type=\"text\" placeholder=\"Object Class ...\" class=\"form-control\"  wicket:id=\"class\">\n+        </div>\n       </div>\n     </wicket:panel>\n   </body>"}]}