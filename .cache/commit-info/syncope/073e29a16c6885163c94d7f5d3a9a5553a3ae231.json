{"sha":"073e29a16c6885163c94d7f5d3a9a5553a3ae231","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA3M2UyOWExNmM2ODg1MTYzYzk0ZDdmNWQzYTlhNTU1M2EzYWUyMzE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-27T16:32:11Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-27T16:32:11Z"},"message":"[SYNCOPE-734] Hide activity indicator on datatable component","tree":{"sha":"ad2a804d41279af07965028b7eb2a361a4bbde36","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ad2a804d41279af07965028b7eb2a361a4bbde36"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/073e29a16c6885163c94d7f5d3a9a5553a3ae231","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/073e29a16c6885163c94d7f5d3a9a5553a3ae231","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/073e29a16c6885163c94d7f5d3a9a5553a3ae231","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/073e29a16c6885163c94d7f5d3a9a5553a3ae231/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"e66dcf424284efc7404c6bf76b5e7b7a3b6239f9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e66dcf424284efc7404c6bf76b5e7b7a3b6239f9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e66dcf424284efc7404c6bf76b5e7b7a3b6239f9"}],"stats":{"total":306,"additions":48,"deletions":258},"files":[{"sha":"4fb363093cd2aa2714654a13a2977aae7239c38f","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"removed","additions":0,"deletions":253,"changes":253,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e66dcf424284efc7404c6bf76b5e7b7a3b6239f9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e66dcf424284efc7404c6bf76b5e7b7a3b6239f9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=e66dcf424284efc7404c6bf76b5e7b7a3b6239f9","patch":"@@ -1,253 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.pages;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.status.AbstractStatusBeanProvider;\n-import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n-import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.commons.status.StatusUtils;\n-import org.apache.syncope.client.console.panels.ActionDataTablePanel;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public class ProvisioningModalPage<T extends AnyTO> extends AbstractStatusModalPage {\n-\n-    private static final long serialVersionUID = -4285220460543213901L;\n-\n-    private static final int ROWS_PER_PAGE = 10;\n-\n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n-\n-    private final ResourceTO resourceTO;\n-\n-    private final AnyTypeKind anyTypeKind;\n-\n-    private final StatusUtils statusUtils;\n-\n-    private final String realm = \"/\";\n-\n-    public ProvisioningModalPage(\n-            final BaseModal<?> modal,\n-            final PageReference pageRef,\n-            final ResourceTO resourceTO,\n-            final AnyTypeKind anyTypeKind) {\n-\n-        super(modal, pageRef);\n-\n-        this.resourceTO = resourceTO;\n-        this.anyTypeKind = anyTypeKind;\n-\n-        statusUtils = new StatusUtils(anyTypeKind == AnyTypeKind.USER ? userRestClient : groupRestClient);\n-\n-        add(new Label(\"displayName\", StringUtils.EMPTY));\n-\n-        final List<IColumn<StatusBean, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"key\", this).setDefaultValue(\"Attributable key\"),\n-                \"attributableKey\", \"attributableKey\"));\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"name\", this).setDefaultValue(\"Attributable name\"),\n-                \"attributableName\", \"attributableName\"));\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"resourceName\", this).setDefaultValue(\"Resource name\"),\n-                \"resourceName\", \"resourceName\"));\n-        columns.add(new PropertyColumn<StatusBean, String>(\n-                new StringResourceModel(\"connObjectLink\", this).setDefaultValue(\"ConnObjectLink\"),\n-                \"connObjectLink\", \"connObjectLink\"));\n-        columns.add(new AbstractColumn<StatusBean, String>(\n-                new StringResourceModel(\"status\", this).setDefaultValue(StringUtils.EMPTY)) {\n-\n-                    private static final long serialVersionUID = -3503023501954863131L;\n-\n-                    @Override\n-                    public String getCssClass() {\n-                        return \"action\";\n-                    }\n-\n-                    @Override\n-                    public void populateItem(\n-                            final Item<ICellPopulator<StatusBean>> cellItem,\n-                            final String componentId,\n-                            final IModel<StatusBean> model) {\n-                                cellItem.\n-                                add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-                            }\n-                });\n-\n-        final ActionDataTablePanel<StatusBean, String> table = new ActionDataTablePanel<>(\n-                \"resourceDatatable\",\n-                columns,\n-                (ISortableDataProvider<StatusBean, String>) new StatusBeanProvider(),\n-                ROWS_PER_PAGE,\n-                pageRef);\n-\n-        final String pageId = \"Resources\";\n-\n-        table.addAction(new ActionLink<Serializable>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                try {\n-                    bulkAssociationAction(target, ResourceDeassociationAction.UNLINK, table, columns);\n-                } catch (Exception e) {\n-                    LOG.error(\"Error unlinkink resources\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    modal.getFeedbackPanel().refresh(target);\n-                }\n-            }\n-        }, ActionLink.ActionType.UNLINK, pageId);\n-\n-        table.addAction(new ActionLink<Serializable>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                try {\n-                    bulkAssociationAction(target, ResourceDeassociationAction.DEPROVISION, table, columns);\n-                } catch (Exception e) {\n-                    LOG.error(\"Error de-provisioning user\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    modal.getFeedbackPanel().refresh(target);\n-                }\n-            }\n-        }, ActionLink.ActionType.DEPROVISION, pageId);\n-\n-        table.addAction(new ActionLink<Serializable>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                try {\n-                    bulkAssociationAction(target, ResourceDeassociationAction.UNASSIGN, table, columns);\n-                } catch (Exception e) {\n-                    LOG.error(\"Error unassigning resources\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    modal.getFeedbackPanel().refresh(target);\n-                }\n-            }\n-        }, ActionLink.ActionType.UNASSIGN, pageId);\n-\n-        table.addCancelButton(modal);\n-\n-        add(table);\n-    }\n-\n-    private class StatusBeanProvider extends AbstractStatusBeanProvider {\n-\n-        private static final long serialVersionUID = 4287357360778016173L;\n-\n-        StatusBeanProvider() {\n-            super(\"connObjectLink\");\n-        }\n-\n-        @SuppressWarnings(\"unchecked\")\n-        @Override\n-        public List<StatusBean> getStatusBeans() {\n-            final String fiql = SyncopeClient.getUserSearchConditionBuilder().hasResources(resourceTO.getKey()).query();\n-\n-            final List<T> subjects = new ArrayList<>();\n-            if (anyTypeKind == AnyTypeKind.USER) {\n-                subjects.addAll((List<T>) userRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.USER.toString()));\n-            } else {\n-                subjects.addAll((List<T>) groupRestClient.search(\n-                        realm, fiql, 1, ROWS_PER_PAGE, new SortParam<>(\"key\", true), AnyTypeKind.GROUP.toString()));\n-            }\n-\n-            final List<ConnObjectWrapper> connObjects = statusUtils.getConnectorObjects(\n-                    (List<AnyTO>) subjects, Collections.<String>singleton(resourceTO.getKey()));\n-\n-            final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n-            final LinkedHashMap<String, StatusBean> initialStatusBeanMap = new LinkedHashMap<>(connObjects.size());\n-\n-            for (ConnObjectWrapper entry : connObjects) {\n-                StatusBean statusBean = statusUtils.getStatusBean(entry.getAny(),\n-                        entry.getResourceName(),\n-                        entry.getConnObjectTO(),\n-                        anyTypeKind == AnyTypeKind.GROUP);\n-\n-                initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n-                statusBeans.add(statusBean);\n-            }\n-\n-            return statusBeans;\n-        }\n-    }\n-\n-    private void bulkAssociationAction(\n-            final AjaxRequestTarget target,\n-            final ResourceDeassociationAction action,\n-            final ActionDataTablePanel<StatusBean, String> table,\n-            final List<IColumn<StatusBean, String>> columns) {\n-\n-        List<StatusBean> beans = new ArrayList<>(table.getModelObject());\n-        List<Long> anyKeys = new ArrayList<>();\n-        for (StatusBean bean : beans) {\n-            anyKeys.add(bean.getAnyKey());\n-        }\n-\n-        if (beans.isEmpty()) {\n-            modal.close(target);\n-        } else {\n-            BulkActionResult res = resourceRestClient.bulkAssociationAction(\n-                    resourceTO.getKey(), anyTypeKind.name(), action, anyKeys);\n-\n-            ((BasePage) pageRef.getPage()).setModalResult(true);\n-\n-            target.add(modal.setContent(\n-                    new BulkActionResultModalPage<>(modal, pageRef, beans, columns, res, \"anyKey\")));\n-        }\n-    }\n-}"},{"sha":"eb4421ab59bbd2d08e38007d581ba4c7b5355213","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=073e29a16c6885163c94d7f5d3a9a5553a3ae231","patch":"@@ -22,6 +22,7 @@\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.commons.ActionTableCheckGroup;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n@@ -32,7 +33,6 @@\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n@@ -75,7 +75,7 @@ public boolean isCheckable(final T element) {\n                 return isElementEnabled(element);\n             }\n         };\n-        group.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+        group.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n "},{"sha":"e1dba176674d5160d0283d0c911467238db5b6c2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=073e29a16c6885163c94d7f5d3a9a5553a3ae231","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel.EventDataWrapper;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.pages.BulkActionModalPage;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n@@ -33,7 +34,6 @@\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -96,13 +96,12 @@ public void onClose(final AjaxRequestTarget target) {\n         fragment.add(bulkActionForm);\n \n         group = new CheckGroup<>(\"checkgroup\", model);\n-        group.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+        group.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                // triggers AJAX form submit\n             }\n         });\n         bulkActionForm.add(group);"},{"sha":"db9680ee191bc6e591a1bff79e39ce2f3cc7fdf6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/IndicatorAjaxFormChoiceComponentUpdatingBehavior.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/073e29a16c6885163c94d7f5d3a9a5553a3ae231/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxFormChoiceComponentUpdatingBehavior.java?ref=073e29a16c6885163c94d7f5d3a9a5553a3ae231","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.form;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n+\n+public abstract class IndicatorAjaxFormChoiceComponentUpdatingBehavior\n+        extends AjaxFormChoiceComponentUpdatingBehavior implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = -5144403874783384604L;\n+\n+    private final String indicator;\n+\n+    public IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n+        this(StringUtils.EMPTY);\n+    }\n+\n+    public IndicatorAjaxFormChoiceComponentUpdatingBehavior(final String indicator) {\n+        this.indicator = indicator;\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return indicator;\n+    }\n+}"}]}