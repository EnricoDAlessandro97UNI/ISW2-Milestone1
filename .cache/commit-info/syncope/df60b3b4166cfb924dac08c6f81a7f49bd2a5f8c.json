{"sha":"df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmNjBiM2I0MTY2Y2ZiOTI0ZGFjMDhjNmY4MWE3ZjQ5YmQyYTVmOGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-10T14:03:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-10T14:03:09Z"},"message":"Improving REST update methods signature thanks to CXF-6447","tree":{"sha":"633346e6fe0413600587265bad9dcb43124eba5f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/633346e6fe0413600587265bad9dcb43124eba5f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6239afa23516938740b5be9ef791bb724ffd1252","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6239afa23516938740b5be9ef791bb724ffd1252","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6239afa23516938740b5be9ef791bb724ffd1252"}],"stats":{"total":522,"additions":258,"deletions":264},"files":[{"sha":"8dab310d3d1cde6b1fe3eaadebf4662b3a18cf4e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -85,7 +85,7 @@ public void update(final ConnInstanceTO connectorTO) {\n         Set<ConnConfProperty> filteredConf = filterProperties(connectorTO.getConfiguration());\n         connectorTO.getConfiguration().clear();\n         connectorTO.getConfiguration().addAll(filteredConf);\n-        getService(ConnectorService.class).update(connectorTO.getKey(), connectorTO);\n+        getService(ConnectorService.class).update(connectorTO);\n     }\n \n     public ConnInstanceTO delete(final Long id) {"},{"sha":"b4b848c4e386c6ee5424f0c696e078699e2753b3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -98,7 +98,7 @@ public GroupTO update(final String etag, final GroupMod groupMod) {\n         GroupTO result;\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n-            result = service.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n+            result = service.update(groupMod).readEntity(GroupTO.class);\n             resetClient(GroupService.class);\n         }\n         return result;"},{"sha":"ac2eb031cf565be6f1b9949400fb40a596c746a8","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -41,7 +41,7 @@ public void create(final NotificationTO notificationTO) {\n     }\n \n     public void update(final NotificationTO notificationTO) {\n-        getService(NotificationService.class).update(notificationTO.getKey(), notificationTO);\n+        getService(NotificationService.class).update(notificationTO);\n     }\n \n     public void delete(final Long key) {"},{"sha":"e58f734fe654f857a9eb0e5c25765b801de10577","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -62,7 +62,7 @@ public <T extends AbstractPolicyTO> void createPolicy(final T policy) {\n     }\n \n     public <T extends AbstractPolicyTO> void updatePolicy(final T policy) {\n-        getService(PolicyService.class).update(policy.getKey(), policy);\n+        getService(PolicyService.class).update(policy);\n     }\n \n     public void delete(final Long id, final Class<? extends AbstractPolicyTO> policyClass) {"},{"sha":"05af975a6304d384d7159522eea7e7466c35fda2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -77,7 +77,7 @@ public void create(final ReportTO reportTO) {\n     }\n \n     public void update(final ReportTO reportTO) {\n-        getService(ReportService.class).update(reportTO.getKey(), reportTO);\n+        getService(ReportService.class).update(reportTO);\n     }\n \n     /**"},{"sha":"15bf7aaeab2b3cc201aaae13918102ece18a8d6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -69,7 +69,7 @@ public ResourceTO read(final String name) {\n     }\n \n     public void update(final ResourceTO resourceTO) {\n-        getService(ResourceService.class).update(resourceTO.getKey(), resourceTO);\n+        getService(ResourceService.class).update(resourceTO);\n     }\n \n     public void delete(final String name) {"},{"sha":"6b9f2440cdb5da263afcdb55b64b7f75a880c375","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -153,7 +153,7 @@ public PlainSchemaTO readPlainSchema(final String name) {\n     }\n \n     public void updatePlainSchema(final PlainSchemaTO schemaTO) {\n-        getService(SchemaService.class).update(SchemaType.PLAIN, schemaTO.getKey(), schemaTO);\n+        getService(SchemaService.class).update(SchemaType.PLAIN, schemaTO);\n     }\n \n     public PlainSchemaTO deletePlainSchema(final String name) {\n@@ -177,7 +177,7 @@ public DerSchemaTO readDerSchema(final String name) {\n     }\n \n     public void updateVirSchema(final VirSchemaTO schemaTO) {\n-        getService(SchemaService.class).update(SchemaType.VIRTUAL, schemaTO.getKey(), schemaTO);\n+        getService(SchemaService.class).update(SchemaType.VIRTUAL, schemaTO);\n     }\n \n     public DerSchemaTO deleteDerSchema(final String name) {\n@@ -191,7 +191,7 @@ public void createVirSchema(final VirSchemaTO schemaTO) {\n     }\n \n     public void updateDerSchema(final DerSchemaTO schemaTO) {\n-        getService(SchemaService.class).update(SchemaType.DERIVED, schemaTO.getKey(), schemaTO);\n+        getService(SchemaService.class).update(SchemaType.DERIVED, schemaTO);\n     }\n \n     public VirSchemaTO deleteVirSchema(final String name) {"},{"sha":"2fd07e0c52d265a15aeb72cc7d7a72fb06048d18","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SecurityQuestionRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -37,11 +37,11 @@ public void create(final SecurityQuestionTO securityQuestionTO) {\n     }\n \n     public void update(final SecurityQuestionTO securityQuestionTO) {\n-        getService(SecurityQuestionService.class).update(securityQuestionTO.getKey(), securityQuestionTO);\n+        getService(SecurityQuestionService.class).update(securityQuestionTO);\n     }\n \n-    public void delete(final Long securityQuestionId) {\n-        getService(SecurityQuestionService.class).delete(securityQuestionId);\n+    public void delete(final Long securityQuestionKey) {\n+        getService(SecurityQuestionService.class).delete(securityQuestionKey);\n     }\n \n     public SecurityQuestionTO readByUser(final String username) {"},{"sha":"32236a9b7065e781c5312001842077c03b351bec","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -131,11 +131,11 @@ public void createSchedTask(final SchedTaskTO taskTO) {\n     }\n \n     public void updateSchedTask(final SchedTaskTO taskTO) {\n-        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n+        getService(TaskService.class).update(taskTO);\n     }\n \n     public void updateSyncTask(final SyncTaskTO taskTO) {\n-        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n+        getService(TaskService.class).update(taskTO);\n     }\n \n     public BulkActionResult bulkAction(final BulkAction action) {"},{"sha":"f517c4cc906d0325d95651ce91db0b97da19a0c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -73,7 +73,7 @@ public UserTO update(final String etag, final UserMod userMod) {\n         UserTO result;\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n-            result = service.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n+            result = service.update(userMod).readEntity(UserTO.class);\n             resetClient(UserService.class);\n         }\n         return result;"},{"sha":"96686729bd324504e5f9121305feda2d59424ceb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserSelfRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserSelfRestClient.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -52,7 +52,7 @@ public void create(final UserTO userTO, final boolean storePassword) {\n     }\n \n     public void update(final UserMod userMod) {\n-        getService(UserSelfService.class).update(userMod.getKey(), userMod);\n+        getService(UserSelfService.class).update(userMod);\n     }\n \n     public void delete() {"},{"sha":"0fbd6aa1325737caa45699a080631cb38f10832e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/AnyMod.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FAnyMod.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.HashSet;\n import java.util.Set;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n@@ -60,6 +61,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"2c5fcb43a98b227ccea0e8fe70bff2153602da08","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractPolicyTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -62,6 +63,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"afd6e6be6471eef833a26c4e05adb67341a690b5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractSchemaTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n@@ -38,6 +39,7 @@ public String getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final String key) {\n         this.key = key;\n     }"},{"sha":"21e665b832ef4d9d7aeaae238b0fb838f153cc33","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractTaskTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -23,6 +23,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -47,6 +48,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"508d2cb8d331d837738b21a595604848b6d12d4b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -21,6 +21,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -45,6 +46,7 @@ public String getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final String key) {\n         this.key = key;\n     }"},{"sha":"a5a7104605145073a7a5b14f1aa25e6a583eaf38","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -21,6 +21,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -44,6 +45,7 @@ public String getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final String key) {\n         this.key = key;\n     }"},{"sha":"21115705ed4dcff096a9695c44efaf317fcd01b5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -26,6 +26,7 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -71,6 +72,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"01f70d07d8a0be3cde86f8d94d6b18e082bf4ab4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -24,6 +24,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -91,6 +92,7 @@ public Long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final Long key) {\n         this.key = key;\n     }"},{"sha":"faef389a47b4a46ae6636f79a2af47dabd5d332b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -68,6 +69,7 @@ public String getFullPath() {\n         return fullPath;\n     }\n \n+    @PathParam(\"fullPath\")\n     public void setFullPath(final String fullPath) {\n         this.fullPath = fullPath;\n     }"},{"sha":"533f8d115bb4ac5f0529df0c92204ecb81122ff8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -22,6 +22,7 @@\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -54,6 +55,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"79d33a14de5fe92d0aaf21e56be5d25f047c4c7c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -24,6 +24,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -98,6 +99,7 @@ public String getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final String key) {\n         this.key = key;\n     }"},{"sha":"fab8a063e485bddae9cabbd1c45a00e20de7691c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -23,6 +23,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -49,6 +50,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"83a8c55192a6d01d120210cd0a386b6bbdef8251","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SecurityQuestionTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -36,6 +37,7 @@ public long getKey() {\n         return key;\n     }\n \n+    @PathParam(\"key\")\n     public void setKey(final long key) {\n         this.key = key;\n     }"},{"sha":"93167cb9c3753d511ec05c81cd2e305b3900e5e5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -100,7 +100,6 @@\n     /**\n      * Updates any object matching the provided key.\n      *\n-     * @param key key of any object to be updated\n      * @param anyMod modification to be applied to any object matching the provided key\n      * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n      * - {@link AnyTO} as <tt>Entity</tt>\n@@ -114,7 +113,7 @@\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response update(@NotNull @PathParam(\"key\") Long key, @NotNull MOD anyMod);\n+    Response update(@NotNull MOD anyMod);\n \n     /**\n      * Deletes any object matching provided key."},{"sha":"18bf1c4318862892929b14dade9bedac4242a196","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -78,13 +78,12 @@ public interface AnyTypeClassService extends JAXRSService {\n     /**\n      * Updates the anyTypeClass matching the provided key.\n      *\n-     * @param key anyTypeClass key to be updated\n      * @param anyTypeClassTO anyTypeClass to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") String key, @NotNull AnyTypeClassTO anyTypeClassTO);\n+    void update(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n      * Deletes the anyTypeClass matching the provided key."},{"sha":"c4a8c02c775f2cf0709747e12b672c9605751def","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -78,13 +78,12 @@ public interface AnyTypeService extends JAXRSService {\n     /**\n      * Updates the anyType matching the provided key.\n      *\n-     * @param key anyType key to be updated\n      * @param anyTypeTO anyType to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") String key, @NotNull AnyTypeTO anyTypeTO);\n+    void update(@NotNull AnyTypeTO anyTypeTO);\n \n     /**\n      * Deletes the anyType matching the provided key."},{"sha":"2518a7402762a39a7be8a809631ac3b62c1d35c8","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -154,13 +154,12 @@ List<ConnIdObjectClass> getSupportedObjectClasses(\n     /**\n      * Updates the connector instance matching the provided key.\n      *\n-     * @param key connector instance key to be updated\n      * @param connInstanceTO connector instance to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") Long key, @NotNull ConnInstanceTO connInstanceTO);\n+    void update(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Deletes the connector instance matching the provided key."},{"sha":"ae33d5a49900f257585a074f5ce16ad8d36dfbd5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -44,13 +44,13 @@ public interface NotificationService extends JAXRSService {\n     /**\n      * Returns notification with matching id.\n      *\n-     * @param notificationKey key of notification to be read\n+     * @param key key of notification to be read\n      * @return notification with matching key\n      */\n     @GET\n-    @Path(\"{notificationKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    NotificationTO read(@NotNull @PathParam(\"notificationKey\") Long notificationKey);\n+    NotificationTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Returns a list of all notifications.\n@@ -78,20 +78,19 @@ public interface NotificationService extends JAXRSService {\n     /**\n      * Updates the notification matching the given key.\n      *\n-     * @param notificationKey key of notification to be updated\n      * @param notificationTO notification to be stored\n      */\n     @PUT\n-    @Path(\"{notificationKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"notificationKey\") Long notificationKey, @NotNull NotificationTO notificationTO);\n+    void update(@NotNull NotificationTO notificationTO);\n \n     /**\n      * Deletes the notification matching the given key.\n      *\n-     * @param notificationKey key for notification to be deleted\n+     * @param key key for notification to be deleted\n      */\n     @DELETE\n-    @Path(\"{notificationKey}\")\n-    void delete(@NotNull @PathParam(\"notificationKey\") Long notificationKey);\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n }"},{"sha":"980da9f545348a4846875a76e9a77507a394ff46","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -46,14 +46,14 @@ public interface PolicyService extends JAXRSService {\n     /**\n      * Returns the policy matching the given key.\n      *\n-     * @param policyKey key of requested policy\n+     * @param key key of requested policy\n      * @param <T> response type (extending PolicyTO)\n      * @return policy with matching id\n      */\n     @GET\n-    @Path(\"{policyKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractPolicyTO> T read(@NotNull @PathParam(\"policyKey\") Long policyKey);\n+    <T extends AbstractPolicyTO> T read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Returns a list of policies of the matching type.\n@@ -83,23 +83,22 @@ public interface PolicyService extends JAXRSService {\n     /**\n      * Updates policy matching the given key.\n      *\n-     * @param policyKey key of policy to be updated\n      * @param policyTO Policy to replace existing policy\n      * @param <T> response type (extending PolicyTO)\n      */\n     @PUT\n-    @Path(\"{policyKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractPolicyTO> void update(@NotNull @PathParam(\"policyKey\") Long policyKey, @NotNull T policyTO);\n+    <T extends AbstractPolicyTO> void update(@NotNull T policyTO);\n \n     /**\n      * Delete policy matching the given key.\n      *\n-     * @param policyKey key of policy to be deleted\n+     * @param key key of policy to be deleted\n      * @param <T> response type (extending PolicyTO)\n      */\n     @DELETE\n-    @Path(\"{policyKey}\")\n-    <T extends AbstractPolicyTO> void delete(@NotNull @PathParam(\"policyKey\") Long policyKey);\n+    @Path(\"{key}\")\n+    <T extends AbstractPolicyTO> void delete(@NotNull @PathParam(\"key\") Long key);\n \n }"},{"sha":"74b233314559db94ea282806fed36dfb931afcd8","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -80,13 +80,12 @@ public interface RealmService extends JAXRSService {\n     /**\n      * Updates the realm under the given path.\n      *\n-     * @param fullPath full path of the realm\n      * @param realmTO realm to be stored\n      */\n     @PUT\n     @Path(\"{fullPath:.*}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"fullPath\") String fullPath, @NotNull RealmTO realmTO);\n+    void update(@NotNull RealmTO realmTO);\n \n     /**\n      * Deletes the notification matching the given key."},{"sha":"b5ce7ec9af968729a13d84c956cff78b40f0dca3","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -64,13 +64,13 @@ public interface ReportService extends JAXRSService {\n     /**\n      * Returns report with matching key.\n      *\n-     * @param reportKey key of report to be read\n+     * @param key key of report to be read\n      * @return report with matching key\n      */\n     @GET\n-    @Path(\"{reportKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ReportTO read(@NotNull @PathParam(\"reportKey\") Long reportKey);\n+    ReportTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Returns report execution with matching key.\n@@ -109,22 +109,21 @@ public interface ReportService extends JAXRSService {\n     /**\n      * Updates report with matching key.\n      *\n-     * @param reportKey id for report to be updated\n      * @param reportTO report to be stored\n      */\n     @PUT\n-    @Path(\"{reportKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"reportKey\") Long reportKey, ReportTO reportTO);\n+    void update(@NotNull ReportTO reportTO);\n \n     /**\n      * Deletes report with matching key.\n      *\n-     * @param reportKey Deletes report with matching key\n+     * @param key Deletes report with matching key\n      */\n     @DELETE\n-    @Path(\"{reportKey}\")\n-    void delete(@NotNull @PathParam(\"reportKey\") Long reportKey);\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Deletes report execution with matching key.\n@@ -138,13 +137,13 @@ public interface ReportService extends JAXRSService {\n     /**\n      * Executes the report with matching key.\n      *\n-     * @param reportKey key of report to be executed\n+     * @param key key of report to be executed\n      * @return report execution result\n      */\n     @POST\n-    @Path(\"{reportKey}/execute\")\n+    @Path(\"{key}/execute\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    ReportExecTO execute(@NotNull @PathParam(\"reportKey\") Long reportKey);\n+    ReportExecTO execute(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Exports the report execution with matching key in the requested format.\n@@ -173,10 +172,10 @@ Response exportExecutionResult(@NotNull @PathParam(\"executionKey\") Long executio\n     /**\n      * Executes an action on an existing report's job.\n      *\n-     * @param reportKey report key\n+     * @param key report key\n      * @param action\n      */\n     @POST\n-    @Path(\"{reportKey}\")\n-    void actionJob(@PathParam(\"reportKey\") Long reportKey, @QueryParam(\"action\") JobAction action);\n+    @Path(\"{key}\")\n+    void actionJob(@PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"cac91326e9c3e9fdc006d87a5ad11f5838cce401","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -98,13 +98,12 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n     /**\n      * Updates the resource matching the given name.\n      *\n-     * @param key name of resource to be updated\n      * @param resourceTO resource to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") String key, @NotNull ResourceTO resourceTO);\n+    void update(@NotNull ResourceTO resourceTO);\n \n     /**\n      * Deletes the resource matching the given name."},{"sha":"d6afa1f0373eb70ea4dbc037f878a527942eba77","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -78,13 +78,12 @@ public interface RoleService extends JAXRSService {\n     /**\n      * Updates the role matching the provided key.\n      *\n-     * @param key role key to be updated\n      * @param roleTO role to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"key\") Long key, @NotNull RoleTO roleTO);\n+    void update(@NotNull RoleTO roleTO);\n \n     /**\n      * Deletes the role matching the provided key."},{"sha":"68f0f43e217d58688ad7d909bde25e2425868856","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":11,"deletions":16,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -23,6 +23,7 @@\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n+import javax.ws.rs.MatrixParam;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n@@ -43,18 +44,18 @@\n public interface SchemaService extends JAXRSService {\n \n     /**\n-     * Returns schema matching the given kind, type and name.\n+     * Returns schema matching the given type and key.\n      *\n      * @param <T> actual SchemaTO\n      * @param type type for schemas to be read\n-     * @param schemaKey name of schema to be read\n+     * @param key name of schema to be read\n      * @return schema matching the given kind, type and name\n      */\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractSchemaTO> T read(\n-            @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String schemaKey);\n+            @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a list of schemas with matching kind and type.\n@@ -65,7 +66,7 @@ <T extends AbstractSchemaTO> T read(\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> List<T> list(@NotNull @PathParam(\"type\") SchemaType type);\n+    <T extends AbstractSchemaTO> List<T> list(@NotNull @MatrixParam(\"type\") SchemaType type);\n \n     /**\n      * Creates a new schema.\n@@ -80,33 +81,27 @@ <T extends AbstractSchemaTO> T read(\n     })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> Response create(\n-            @NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);\n+    <T extends AbstractSchemaTO> Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);\n \n     /**\n-     * Updates the schema matching the given kind, type and name.\n+     * Updates the schema matching the given type and key.\n      *\n      * @param <T> actual SchemaTO\n      * @param type type for schemas to be updated\n-     * @param schemaKey name of schema to be updated\n      * @param schemaTO updated schema to be stored\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> void update(\n-            @NotNull @PathParam(\"type\") SchemaType type,\n-            @NotNull @PathParam(\"key\") String schemaKey, @NotNull T schemaTO);\n+    <T extends AbstractSchemaTO> void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);\n \n     /**\n-     * Deletes the schema matching the given kind, type and name.\n+     * Deletes the schema matching the given type and key.\n      *\n      * @param type type for schema to be deleted\n-     * @param schemaKey name of schema to be deleted\n+     * @param key name of schema to be deleted\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(\n-            @NotNull @PathParam(\"type\") SchemaType type,\n-            @NotNull @PathParam(\"key\") String schemaKey);\n+    void delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"f0dcf278f8601ff8fe4c3891b2b27570c15d6275","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -51,15 +51,15 @@ public interface SecurityQuestionService extends JAXRSService {\n     List<SecurityQuestionTO> list();\n \n     /**\n-     * Returns security question with matching id.\n+     * Returns security question with matching key.\n      *\n-     * @param securityQuestionId security question id to be read\n-     * @return security question with matching id\n+     * @param key security question key to be read\n+     * @return security question with matching key\n      */\n     @GET\n-    @Path(\"{securityQuestionId}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    SecurityQuestionTO read(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId);\n+    SecurityQuestionTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Creates a new security question.\n@@ -76,25 +76,23 @@ public interface SecurityQuestionService extends JAXRSService {\n     Response create(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n-     * Updates the security question matching the provided id.\n+     * Updates the security question matching the provided key.\n      *\n-     * @param securityQuestionId security question id to be updated\n      * @param securityQuestionTO security question to be stored\n      */\n     @PUT\n-    @Path(\"{securityQuestionId}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId,\n-            @NotNull SecurityQuestionTO securityQuestionTO);\n+    void update(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n-     * Deletes the security question matching the provided id.\n+     * Deletes the security question matching the provided key.\n      *\n-     * @param securityQuestionId security question id to be deleted\n+     * @param key security question key to be deleted\n      */\n     @DELETE\n-    @Path(\"{securityQuestionId}\")\n-    void delete(@NotNull @PathParam(\"securityQuestionId\") Long securityQuestionId);\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Ask for security question configured for the user matching the given username, if any."},{"sha":"5e39b2a56dcd0cd88a743481ad141cc1a70f1baa","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -58,14 +58,14 @@ public interface TaskService extends JAXRSService {\n     /**\n      * Returns the task matching the given key.\n      *\n-     * @param taskKey key of task to be read\n+     * @param key key of task to be read\n      * @param <T> type of taskTO\n      * @return task with matching id\n      */\n     @GET\n-    @Path(\"{taskKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractTaskTO> T read(@NotNull @PathParam(\"taskKey\") Long taskKey);\n+    <T extends AbstractTaskTO> T read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Returns the task execution with the given id.\n@@ -109,22 +109,21 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n     /**\n      * Updates the task matching the provided key.\n      *\n-     * @param taskKey key of task to be updated\n      * @param taskTO updated task to be stored\n      */\n     @PUT\n-    @Path(\"{taskKey}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void update(@NotNull @PathParam(\"taskKey\") Long taskKey, @NotNull AbstractTaskTO taskTO);\n+    void update(@NotNull AbstractTaskTO taskTO);\n \n     /**\n      * Deletes the task matching the provided key.\n      *\n-     * @param taskKey key of task to be deleted\n+     * @param key key of task to be deleted\n      */\n     @DELETE\n-    @Path(\"{taskKey}\")\n-    void delete(@NotNull @PathParam(\"taskKey\") Long taskKey);\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n      * Deletes the task execution matching the provided key.\n@@ -138,14 +137,14 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n     /**\n      * Executes the task matching the given id.\n      *\n-     * @param taskKey key of task to be executed\n+     * @param key key of task to be executed\n      * @param dryRun if true, task will only be simulated\n      * @return execution report for the task matching the given id\n      */\n     @POST\n-    @Path(\"{taskKey}/execute\")\n+    @Path(\"{key}/execute\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    TaskExecTO execute(@NotNull @PathParam(\"taskKey\") Long taskKey,\n+    TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n             @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\n \n     /**\n@@ -185,10 +184,10 @@ TaskExecTO execute(@NotNull @PathParam(\"taskKey\") Long taskKey,\n     /**\n      * Executes an action on an existing task's job.\n      *\n-     * @param taskKey task key\n+     * @param key task key\n      * @param action\n      */\n     @POST\n-    @Path(\"{taskKey}\")\n-    void actionJob(@PathParam(\"taskKey\") Long taskKey, @QueryParam(\"action\") JobAction action);\n+    @Path(\"{key}\")\n+    void actionJob(@PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"dd2fe7e491337761318a28c0107c7aa482778771","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -25,7 +25,6 @@\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n@@ -74,19 +73,18 @@ Response create(@NotNull UserTO userTO,\n     /**\n      * Self-updates user.\n      *\n-     * @param userKey id of user to be updated\n-     * @param userMod modification to be applied to user matching the provided userKey\n+     * @param userMod modification to be applied to user matching the provided key\n      * @return <tt>Response</tt> object featuring the updated user - {@link UserTO} as <tt>Entity</tt>\n      */\n     @Descriptions({\n         @Description(target = DocTarget.RESPONSE,\n                 value = \"Featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n     })\n     @POST\n-    @Path(\"{userKey}\")\n+    @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response update(@NotNull @PathParam(\"userKey\") Long userKey, @NotNull UserMod userMod);\n+    Response update(@NotNull UserMod userMod);\n \n     /**\n      * Self-deletes user."},{"sha":"93afe01965e246d5e45b0031724828fe511933ec","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -107,12 +107,11 @@ public Response create(final TO anyTO) {\n     }\n \n     @Override\n-    public Response update(final Long key, final MOD anyMod) {\n-        TO any = getAnyLogic().read(key);\n+    public Response update(final MOD anyMod) {\n+        TO any = getAnyLogic().read(anyMod.getKey());\n \n         checkETag(any.getETagValue());\n \n-        anyMod.setKey(key);\n         TO updated = getAnyLogic().update(anyMod);\n         return modificationResponse(updated);\n     }"},{"sha":"54a546a4ef9bfe32e0471ec9476bc29bbfa9f1f1","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeClassServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -54,8 +54,7 @@ public Response create(final AnyTypeClassTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final String key, final AnyTypeClassTO anyTypeTO) {\n-        anyTypeTO.setKey(key);\n+    public void update(final AnyTypeClassTO anyTypeTO) {\n         logic.update(anyTypeTO);\n     }\n "},{"sha":"5f0e8ecd564b89d5ca5ddb3705e203289ab1d5b6","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -54,8 +54,7 @@ public Response create(final AnyTypeTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final String key, final AnyTypeTO anyTypeTO) {\n-        anyTypeTO.setKey(key);\n+    public void update(final AnyTypeTO anyTypeTO) {\n         logic.update(anyTypeTO);\n     }\n "},{"sha":"6725bf9f7058e883b973e27ad1957e4535adfedc","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -112,8 +112,7 @@ public ConnInstanceTO readByResource(final String resourceName) {\n     }\n \n     @Override\n-    public void update(final Long key, final ConnInstanceTO connInstanceTO) {\n-        connInstanceTO.setKey(key);\n+    public void update(final ConnInstanceTO connInstanceTO) {\n         logic.update(connInstanceTO);\n     }\n "},{"sha":"dbd3461b4050bed5f41fb113fa4509c5aaa97c94","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/NotificationServiceImpl.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -44,8 +44,8 @@ public Response create(final NotificationTO notificationTO) {\n     }\n \n     @Override\n-    public NotificationTO read(final Long notificationKey) {\n-        return logic.read(notificationKey);\n+    public NotificationTO read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -54,13 +54,12 @@ public List<NotificationTO> list() {\n     }\n \n     @Override\n-    public void update(final Long notificationKey, final NotificationTO notificationTO) {\n-        notificationTO.setKey(notificationKey);\n+    public void update(final NotificationTO notificationTO) {\n         logic.update(notificationTO);\n     }\n \n     @Override\n-    public void delete(final Long notificationKey) {\n-        logic.delete(notificationKey);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n }"},{"sha":"ecec0196ba13c51cdfd5d210059428d47c256bcf","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -48,8 +48,8 @@ public <T extends AbstractPolicyTO> Response create(final T policyTO) {\n     }\n \n     @Override\n-    public void delete(final Long policyKey) {\n-        logic.delete(policyKey);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n \n     @Override\n@@ -58,14 +58,12 @@ public <T extends AbstractPolicyTO> List<T> list(final PolicyType type) {\n     }\n \n     @Override\n-    public <T extends AbstractPolicyTO> T read(final Long policyKey) {\n-        return logic.read(policyKey);\n+    public <T extends AbstractPolicyTO> T read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n-    public <T extends AbstractPolicyTO> void update(final Long policyKey, final T policyTO) {\n-        policyTO.setKey(policyKey);\n-\n+    public <T extends AbstractPolicyTO> void update(final T policyTO) {\n         switch (policyTO.getType()) {\n             case ACCOUNT:\n                 logic.update((AccountPolicyTO) policyTO);"},{"sha":"0485c1d51db29280c14c9696f77582c31b19da5b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RealmServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRealmServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -56,8 +56,8 @@ public Response create(final String parentPath, final RealmTO realmTO) {\n     }\n \n     @Override\n-    public void update(final String fullPath, final RealmTO realmTO) {\n-        realmTO.setFullPath(StringUtils.prependIfMissing(fullPath, SyncopeConstants.ROOT_REALM));\n+    public void update(final RealmTO realmTO) {\n+        realmTO.setFullPath(StringUtils.prependIfMissing(realmTO.getFullPath(), SyncopeConstants.ROOT_REALM));\n         logic.update(realmTO);\n     }\n "},{"sha":"9fa3d99f806ef992cd3ae85913f71ee78d5b22be","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -57,8 +57,7 @@ public Response create(final ReportTO reportTO) {\n     }\n \n     @Override\n-    public void update(final Long reportKey, final ReportTO reportTO) {\n-        reportTO.setKey(reportKey);\n+    public void update(final ReportTO reportTO) {\n         logic.update(reportTO);\n     }\n \n@@ -80,8 +79,8 @@ public List<ReportletConfClass> getReportletConfClasses() {\n     }\n \n     @Override\n-    public ReportTO read(final Long reportKey) {\n-        return logic.read(reportKey);\n+    public ReportTO read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -108,13 +107,13 @@ public void write(final OutputStream os) throws IOException {\n     }\n \n     @Override\n-    public ReportExecTO execute(final Long reportKey) {\n-        return logic.execute(reportKey);\n+    public ReportExecTO execute(final Long key) {\n+        return logic.execute(key);\n     }\n \n     @Override\n-    public void delete(final Long reportKey) {\n-        logic.delete(reportKey);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n \n     @Override\n@@ -128,7 +127,7 @@ public List<ReportExecTO> listJobs(final JobStatusType type) {\n     }\n \n     @Override\n-    public void actionJob(final Long reportKey, final JobAction action) {\n-        logic.actionJob(reportKey, action);\n+    public void actionJob(final Long key, final JobAction action) {\n+        logic.actionJob(key, action);\n     }\n }"},{"sha":"ae7c42697ced0a45076a8502f50b8368b9a12cef","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -67,8 +67,7 @@ public Response create(final ResourceTO resourceTO) {\n     }\n \n     @Override\n-    public void update(final String key, final ResourceTO resourceTO) {\n-        resourceTO.setKey(key);\n+    public void update(final ResourceTO resourceTO) {\n         logic.update(resourceTO);\n     }\n "},{"sha":"006767c8fcc03f7873641c1d6c388fbf053db8a3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -54,8 +54,7 @@ public Response create(final RoleTO roleTO) {\n     }\n \n     @Override\n-    public void update(final Long roleKey, final RoleTO roleTO) {\n-        roleTO.setKey(roleKey);\n+    public void update(final RoleTO roleTO) {\n         logic.update(roleTO);\n     }\n "},{"sha":"e846a9531f91b417c3588114cbfdf3a61f6ff1f5","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -46,8 +46,8 @@ public <T extends AbstractSchemaTO> Response create(final SchemaType schemaType,\n     }\n \n     @Override\n-    public void delete(final SchemaType schemaType, final String schemaKey) {\n-        logic.delete(schemaType, schemaKey);\n+    public void delete(final SchemaType schemaType, final String key) {\n+        logic.delete(schemaType, key);\n     }\n \n     @Override\n@@ -56,15 +56,12 @@ public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n     }\n \n     @Override\n-    public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final String schemaKey) {\n-        return logic.read(schemaType, schemaKey);\n+    public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final String key) {\n+        return logic.read(schemaType, key);\n     }\n \n     @Override\n-    public <T extends AbstractSchemaTO> void update(\n-            final SchemaType schemaType, final String schemaKey, final T schemaTO) {\n-\n-        schemaTO.setKey(schemaKey);\n+    public <T extends AbstractSchemaTO> void update(final SchemaType schemaType, final T schemaTO) {\n         logic.update(schemaType, schemaTO);\n     }\n }"},{"sha":"37cc4552cddc9dde77ed13c7374bf9500869b858","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SecurityQuestionServiceImpl.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -40,8 +40,8 @@ public List<SecurityQuestionTO> list() {\n     }\n \n     @Override\n-    public SecurityQuestionTO read(final Long securityQuestionId) {\n-        return logic.read(securityQuestionId);\n+    public SecurityQuestionTO read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -55,14 +55,13 @@ public Response create(final SecurityQuestionTO securityQuestionTO) {\n     }\n \n     @Override\n-    public void update(final Long securityQuestionId, final SecurityQuestionTO securityQuestionTO) {\n-        securityQuestionTO.setKey(securityQuestionId);\n+    public void update(final SecurityQuestionTO securityQuestionTO) {\n         logic.update(securityQuestionTO);\n     }\n \n     @Override\n-    public void delete(final Long securityQuestionId) {\n-        logic.delete(securityQuestionId);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n \n     @Override"},{"sha":"5fb19e297bfeea57736b4df8c17dfcf292377cdf","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":23,"deletions":24,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -64,8 +64,8 @@ public <T extends SchedTaskTO> Response create(final T taskTO) {\n     }\n \n     @Override\n-    public void delete(final Long taskKey) {\n-        logic.delete(taskKey);\n+    public void delete(final Long key) {\n+        logic.delete(key);\n     }\n \n     @Override\n@@ -74,8 +74,8 @@ public void deleteExecution(final Long executionKey) {\n     }\n \n     @Override\n-    public TaskExecTO execute(final Long taskKey, final boolean dryRun) {\n-        return logic.execute(taskKey, dryRun);\n+    public TaskExecTO execute(final Long key, final boolean dryRun) {\n+        return logic.execute(key, dryRun);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -93,8 +93,8 @@ public <T extends AbstractTaskTO> PagedResult<T> list(final TaskType taskType, f\n     }\n \n     @Override\n-    public <T extends AbstractTaskTO> T read(final Long taskKey) {\n-        return logic.read(taskKey);\n+    public <T extends AbstractTaskTO> T read(final Long key) {\n+        return logic.read(key);\n     }\n \n     @Override\n@@ -110,8 +110,7 @@ public void report(final Long executionKey, final ReportExecTO reportExec) {\n     }\n \n     @Override\n-    public void update(final Long taskKey, final AbstractTaskTO taskTO) {\n-        taskTO.setKey(taskKey);\n+    public void update(final AbstractTaskTO taskTO) {\n         if (taskTO instanceof SyncTaskTO) {\n             logic.updateSync((SyncTaskTO) taskTO);\n         } else if (taskTO instanceof SchedTaskTO) {\n@@ -127,38 +126,38 @@ public BulkActionResult bulk(final BulkAction bulkAction) {\n \n         switch (bulkAction.getOperation()) {\n             case DELETE:\n-                for (String taskKey : bulkAction.getTargets()) {\n+                for (String key : bulkAction.getTargets()) {\n                     try {\n                         result.getResults().put(\n-                                String.valueOf(logic.delete(Long.valueOf(taskKey)).getKey()),\n+                                String.valueOf(logic.delete(Long.valueOf(key)).getKey()),\n                                 BulkActionResult.Status.SUCCESS);\n                     } catch (Exception e) {\n-                        LOG.error(\"Error performing delete for task {}\", taskKey, e);\n-                        result.getResults().put(taskKey, BulkActionResult.Status.FAILURE);\n+                        LOG.error(\"Error performing delete for task {}\", key, e);\n+                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n                     }\n                 }\n                 break;\n \n             case DRYRUN:\n-                for (String taskKey : bulkAction.getTargets()) {\n+                for (String key : bulkAction.getTargets()) {\n                     try {\n-                        logic.execute(Long.valueOf(taskKey), true);\n-                        result.getResults().put(taskKey, BulkActionResult.Status.SUCCESS);\n+                        logic.execute(Long.valueOf(key), true);\n+                        result.getResults().put(key, BulkActionResult.Status.SUCCESS);\n                     } catch (Exception e) {\n-                        LOG.error(\"Error performing dryrun for task {}\", taskKey, e);\n-                        result.getResults().put(taskKey, BulkActionResult.Status.FAILURE);\n+                        LOG.error(\"Error performing dryrun for task {}\", key, e);\n+                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n                     }\n                 }\n                 break;\n \n             case EXECUTE:\n-                for (String taskKey : bulkAction.getTargets()) {\n+                for (String key : bulkAction.getTargets()) {\n                     try {\n-                        logic.execute(Long.valueOf(taskKey), false);\n-                        result.getResults().put(taskKey, BulkActionResult.Status.SUCCESS);\n+                        logic.execute(Long.valueOf(key), false);\n+                        result.getResults().put(key, BulkActionResult.Status.SUCCESS);\n                     } catch (Exception e) {\n-                        LOG.error(\"Error performing execute for task {}\", taskKey, e);\n-                        result.getResults().put(taskKey, BulkActionResult.Status.FAILURE);\n+                        LOG.error(\"Error performing execute for task {}\", key, e);\n+                        result.getResults().put(key, BulkActionResult.Status.FAILURE);\n                     }\n                 }\n                 break;\n@@ -175,7 +174,7 @@ public List<TaskExecTO> listJobs(final JobStatusType type) {\n     }\n \n     @Override\n-    public void actionJob(final Long taskKey, final JobAction action) {\n-        logic.actionJob(taskKey, action);\n+    public void actionJob(final Long key, final JobAction action) {\n+        logic.actionJob(key, action);\n     }\n }"},{"sha":"18013d29987d0fe8a42e14aef4585515dd88cc7f","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -63,8 +63,7 @@ public Response read() {\n     }\n \n     @Override\n-    public Response update(final Long userKey, final UserMod userMod) {\n-        userMod.setKey(userKey);\n+    public Response update(final UserMod userMod) {\n         UserTO updated = logic.updateSelf(userMod);\n         return modificationResponse(updated);\n     }"},{"sha":"77e4c50e577b33e7a10d8507da112da68013d3e5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -292,7 +292,7 @@ protected UserTO readUser(final String username) {\n     }\n \n     protected UserTO updateUser(final UserMod userMod) {\n-        return userService.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n+        return userService.update(userMod).readEntity(UserTO.class);\n     }\n \n     protected UserTO deleteUser(final Long key) {\n@@ -342,7 +342,7 @@ protected AnyObjectTO createAnyObject(final AnyObjectTO anyObjectTO) {\n     }\n \n     protected AnyObjectTO updateAnyObject(final AnyObjectMod anyObjectMod) {\n-        return anyObjectService.update(anyObjectMod.getKey(), anyObjectMod).readEntity(AnyObjectTO.class);\n+        return anyObjectService.update(anyObjectMod).readEntity(AnyObjectTO.class);\n     }\n \n     protected AnyObjectTO deleteAnyObject(final Long key) {\n@@ -361,7 +361,7 @@ protected GroupTO createGroup(final GroupTO groupTO) {\n     }\n \n     protected GroupTO updateGroup(final GroupMod groupMod) {\n-        return groupService.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n+        return groupService.update(groupMod).readEntity(GroupTO.class);\n     }\n \n     protected GroupTO deleteGroup(final Long key) {"},{"sha":"557f4b36bebef0edbe366f94fb3c13d06a8c8473","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeClassITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeClassITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -72,7 +72,7 @@ public void crud() {\n         assertTrue(newClass.getVirSchemas().isEmpty());\n \n         newClass.getDerSchemas().add(\"cn\");\n-        anyTypeClassService.update(newClass.getKey(), newClass);\n+        anyTypeClassService.update(newClass);\n \n         newClass = anyTypeClassService.read(newClass.getKey());\n         assertNotNull(newClass);"},{"sha":"9fdc1e45cc8925d2f8099c0433d069e6ddbbad71","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -85,7 +85,7 @@ public void crud() {\n         assertTrue(newType.getClasses().contains(\"csv\"));\n \n         newType.getClasses().remove(\"generic membership\");\n-        anyTypeService.update(newType.getKey(), newType);\n+        anyTypeService.update(newType);\n \n         newType = anyTypeService.read(newType.getKey());\n         assertNotNull(newType);\n@@ -154,7 +154,7 @@ public void deleteTypeClass() {\n         assertNotNull(other);\n \n         other.getClasses().add(newClass.getKey());\n-        anyTypeService.update(other.getKey(), other);\n+        anyTypeService.update(other);\n \n         other = anyTypeService.read(other.getKey());\n         assertNotNull(other);"},{"sha":"a7564013fc302e0af9d06f13275087ae55095952","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AuthenticationITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -152,7 +152,7 @@ public void testUserSchemaAuthorization() {\n \n         // 5. update the schema create above (as user) - failure\n         try {\n-            schemaService2.update(SchemaType.PLAIN, schemaName, schemaTO);\n+            schemaService2.update(SchemaType.PLAIN, schemaTO);\n             fail(\"Schemaupdate as user should not work\");\n         } catch (AccessControlException e) {\n             // CXF Service will throw this exception"},{"sha":"60842b96c8dcf2f69611a5885708bc52bae8d824","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -172,8 +172,8 @@ public void create() {\n         assertEquals(Integer.valueOf(15), actual.getConnRequestTimeout());\n         assertEquals(connectorTO.getCapabilities(), actual.getCapabilities());\n         assertNotNull(actual.getPoolConf());\n-        assertEquals(1534, actual.getPoolConf().getMaxObjects().intValue());\n-        assertEquals(10, actual.getPoolConf().getMaxIdle().intValue());\n+        assertEquals(1534, actual.getPoolConf().getMaxObjects(), 0);\n+        assertEquals(10, actual.getPoolConf().getMaxIdle(), 0);\n \n         Throwable t = null;\n \n@@ -182,7 +182,7 @@ public void create() {\n         actual.getPoolConf().setMaxObjects(null);\n \n         try {\n-            connectorService.update(actual.getKey(), actual);\n+            connectorService.update(actual);\n             actual = connectorService.read(actual.getKey());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"update failed\", e);\n@@ -255,7 +255,7 @@ public void update() {\n         // set connector configuration\n         connectorTO.getConfiguration().addAll(conf);\n \n-        connectorService.update(connectorTO.getKey(), connectorTO);\n+        connectorService.update(connectorTO);\n         ConnInstanceTO actual = connectorService.read(connectorTO.getKey());\n \n         assertNotNull(actual);\n@@ -348,7 +348,7 @@ public void issueSYNCOPE10() {\n         // ----------------------------------\n         connInstanceTO.getCapabilities().add(ConnectorCapability.AUTHENTICATE);\n \n-        connectorService.update(connInstanceTO.getKey(), connInstanceTO);\n+        connectorService.update(connInstanceTO);\n         ConnInstanceTO actual = connectorService.read(connInstanceTO.getKey());\n         assertNotNull(actual);\n         assertTrue(connInstanceTO.getCapabilities().contains(ConnectorCapability.AUTHENTICATE));\n@@ -732,7 +732,7 @@ public void issueSYNCOPE605() {\n         assertTrue(connectorInstanceTO.getCapabilities().isEmpty());\n \n         connectorInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n-        connectorService.update(connectorInstanceTO.getKey(), connectorInstanceTO);\n+        connectorService.update(connectorInstanceTO);\n \n         ConnInstanceTO updatedCapabilities = connectorService.read(connectorInstanceTO.getKey());\n         assertNotNull(updatedCapabilities.getCapabilities());"},{"sha":"210b5154ff7766586e37e3fa8505d170e07411f7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/DerSchemaITCase.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDerSchemaITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -94,17 +94,15 @@ public void update() {\n         try {\n             schema.setExpression(\"mderived_sx + '.' + mderived_dx\");\n \n-            schemaService.update(SchemaType.DERIVED,\n-                    schema.getKey(), schema);\n+            schemaService.update(SchemaType.DERIVED, schema);\n \n             schema = schemaService.read(SchemaType.DERIVED, \"mderiveddata\");\n             assertNotNull(schema);\n             assertEquals(\"mderived_sx + '.' + mderived_dx\", schema.getExpression());\n         } finally {\n             // Set updated back to make test re-runnable\n             schema.setExpression(\"mderived_sx + '-' + mderived_dx\");\n-            schemaService.update(SchemaType.DERIVED,\n-                    schema.getKey(), schema);\n+            schemaService.update(SchemaType.DERIVED, schema);\n         }\n     }\n "},{"sha":"855f25b4bf5bc7e1fd2917ad7e0f9d5b540c88c3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -272,7 +272,7 @@ public void updateAsGroupOwner() {\n         GroupService groupService2 = clientFactory.create(\"verdi\", ADMIN_PWD).getService(GroupService.class);\n \n         try {\n-            groupService2.update(groupMod.getKey(), groupMod);\n+            groupService2.update(groupMod);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.UNAUTHORIZED, e.getType().getResponseStatus());\n@@ -283,7 +283,7 @@ public void updateAsGroupOwner() {\n         // 4. update as puccini, owner of group 6 - success\n         GroupService groupService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(GroupService.class);\n \n-        groupTO = groupService3.update(groupMod.getKey(), groupMod).readEntity(GroupTO.class);\n+        groupTO = groupService3.update(groupMod).readEntity(GroupTO.class);\n         assertEquals(\"Director\", groupTO.getName());\n \n         // issue SYNCOPE-15\n@@ -531,7 +531,7 @@ public void createWithMandatorySchema() {\n         String typeClassName = type.getClasses().get(0);\n         AnyTypeClassTO typeClass = anyTypeClassService.read(typeClassName);\n         typeClass.getPlainSchemas().add(badge.getKey());\n-        anyTypeClassService.update(typeClassName, typeClass);\n+        anyTypeClassService.update(typeClass);\n         typeClass = anyTypeClassService.read(typeClassName);\n         assertTrue(typeClass.getPlainSchemas().contains(badge.getKey()));\n \n@@ -556,7 +556,7 @@ public void createWithMandatorySchema() {\n         } finally {\n             // restore the original group class\n             typeClass.getPlainSchemas().remove(badge.getKey());\n-            anyTypeClassService.update(typeClassName, typeClass);\n+            anyTypeClassService.update(typeClass);\n             typeClass = anyTypeClassService.read(typeClassName);\n             assertFalse(typeClass.getPlainSchemas().contains(badge.getKey()));\n         }\n@@ -595,9 +595,10 @@ public void noContent() throws IOException {\n         assertNotNull(group);\n \n         GroupMod groupMod = new GroupMod();\n+        groupMod.setKey(group.getKey());\n         groupMod.getPlainAttrsToUpdate().add(attrMod(\"badge\", \"xxxxxxxxxx\"));\n \n-        response = noContentService.update(group.getKey(), groupMod);\n+        response = noContentService.update(groupMod);\n         assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n@@ -705,7 +706,7 @@ public void dynMembership() {\n         GroupMod mod = new GroupMod();\n         mod.setKey(group.getKey());\n         mod.setUDynMembershipCond(\"cool==false\");\n-        groupService.update(mod.getKey(), mod);\n+        groupService.update(mod);\n \n         assertTrue(userService.read(4L).getDynGroups().isEmpty());\n     }"},{"sha":"09f40f91f74db1487cc26f1e41244f4e3a247cb5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/NotificationITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -93,7 +93,7 @@ public void update() {\n         NotificationTO notificationTO = notificationService.read(10L);\n         notificationTO.setRecipients(SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n \n-        notificationService.update(notificationTO.getKey(), notificationTO);\n+        notificationService.update(notificationTO);\n         NotificationTO actual = notificationService.read(notificationTO.getKey());\n         assertNotNull(actual);\n         assertEquals(actual, notificationTO);"},{"sha":"feb041a743b9914cdf2cc778b3aee276c5f256c9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PlainSchemaITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPlainSchemaITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -184,13 +184,13 @@ public void update() {\n         PlainSchemaTO schemaTO = schemaService.read(SchemaType.PLAIN, \"icon\");\n         assertNotNull(schemaTO);\n \n-        schemaService.update(SchemaType.PLAIN, schemaTO.getKey(), schemaTO);\n+        schemaService.update(SchemaType.PLAIN, schemaTO);\n         PlainSchemaTO updatedTO = schemaService.read(SchemaType.PLAIN, \"icon\");\n         assertEquals(schemaTO, updatedTO);\n \n         updatedTO.setType(AttrSchemaType.Date);\n         try {\n-            schemaService.update(SchemaType.PLAIN, schemaTO.getKey(), updatedTO);\n+            schemaService.update(SchemaType.PLAIN, updatedTO);\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n@@ -220,7 +220,7 @@ public void issue258() {\n \n         schemaTO.setType(AttrSchemaType.Long);\n         try {\n-            schemaService.update(SchemaType.PLAIN, schemaTO.getKey(), schemaTO);\n+            schemaService.update(SchemaType.PLAIN, schemaTO);\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n@@ -253,7 +253,7 @@ public void issue259() {\n \n         UserMod userMod = AnyOperations.diff(newUserTO, userTO);\n \n-        userTO = userService.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n+        userTO = userService.update(userMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n     }\n \n@@ -278,7 +278,7 @@ public void issue260() {\n \n         schemaTO.setUniqueConstraint(false);\n         try {\n-            schemaService.update(SchemaType.PLAIN, schemaTO.getKey(), schemaTO);\n+            schemaService.update(SchemaType.PLAIN, schemaTO);\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());"},{"sha":"3684f35f68e28d636c18a90942a5e5c66a033bfa","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PolicyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -141,7 +141,7 @@ public void update() {\n         policy.setSpecification(policySpec);\n \n         // update new password policy\n-        policyService.update(policy.getKey(), policy);\n+        policyService.update(policy);\n         policy = policyService.read(policy.getKey());\n \n         assertNotNull(policy);"},{"sha":"fe2c0a59acb77e4f36883936ca45276ede8598e1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/RealmITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -91,15 +91,15 @@ public void createUpdate() {\n         // 2. update setting policies\n         actual.setAccountPolicy(6L);\n         actual.setPasswordPolicy(4L);\n-        realmService.update(actual.getFullPath(), actual);\n+        realmService.update(actual);\n \n         actual = getRealm(actual.getFullPath());\n         assertNotNull(actual.getAccountPolicy());\n         assertNotNull(actual.getPasswordPolicy());\n \n         // 3. update changing parent\n         actual.setParent(getRealm(\"/odd\").getKey());\n-        realmService.update(actual.getFullPath(), actual);\n+        realmService.update(actual);\n \n         actual = getRealm(\"/odd/last\");\n         assertNotNull(actual);"},{"sha":"d02b72621089e0c80a04a99e61890a8ba1c04551","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ReportITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -116,7 +116,7 @@ public void update() {\n \n         report.getReportletConfs().add(new UserReportletConf(\"last\"));\n \n-        reportService.update(report.getKey(), report);\n+        reportService.update(report);\n         ReportTO updated = reportService.read(report.getKey());\n         assertNotNull(updated);\n         assertEquals(3, updated.getReportletConfs().size());"},{"sha":"c0e17905dfc263b05d91ae38ebfbe0ab4ab19bb3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ResourceITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -329,7 +329,7 @@ public void updateWithException() {\n         try {\n             ResourceTO resourceTO = new ResourceTO();\n             resourceTO.setKey(\"resourcenotfound\");\n-            resourceService.update(resourceTO.getKey(), resourceTO);\n+            resourceService.update(resourceTO);\n \n             fail();\n         } catch (SyncopeClientException e) {\n@@ -378,7 +378,7 @@ public void update() {\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setConnObjectKeyItem(item);\n \n-        resourceService.update(resourceTO.getKey(), resourceTO);\n+        resourceService.update(resourceTO);\n         ResourceTO actual = resourceService.read(resourceTO.getKey());\n         assertNotNull(actual);\n \n@@ -408,7 +408,7 @@ public void updateResetSyncToken() {\n         resourceService.create(pre);\n \n         pre.getProvision(AnyTypeKind.USER.name()).setSyncToken(null);\n-        resourceService.update(pre.getKey(), pre);\n+        resourceService.update(pre);\n         ResourceTO actual = resourceService.read(pre.getKey());\n         // check that the synctoken has been reset\n         assertNull(actual.getProvision(AnyTypeKind.USER.name()).getSyncToken());\n@@ -511,7 +511,7 @@ public void issueSYNCOPE360() {\n         assertNotNull(resource.getProvision(AnyTypeKind.USER.name()).getMapping());\n \n         resource.getProvision(AnyTypeKind.USER.name()).setMapping(null);\n-        resourceService.update(name, resource);\n+        resourceService.update(resource);\n \n         resource = resourceService.read(name);\n         assertNotNull(resource);"},{"sha":"81b0796e09e4d1fcd05aceb19b02952a1de80720","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/RoleITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRoleITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -95,7 +95,7 @@ public void update() {\n         role.getEntitlements().add(Entitlement.WORKFLOW_TASK_LIST);\n         role.getRealms().add(\"/even/two\");\n \n-        roleService.update(role.getKey(), role);\n+        roleService.update(role);\n \n         actual = roleService.read(role.getKey());\n         assertTrue(actual.getEntitlements().contains(Entitlement.WORKFLOW_TASK_LIST));\n@@ -133,7 +133,7 @@ public void dynMembership() {\n         assertTrue(userService.read(4L).getDynRoles().contains(role.getKey()));\n \n         role.setDynMembershipCond(\"cool==false\");\n-        roleService.update(role.getKey(), role);\n+        roleService.update(role);\n \n         assertTrue(userService.read(4L).getDynGroups().isEmpty());\n     }"},{"sha":"b65aa72537702a6ca68b9e1227d0628cc64d9773","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SchedTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -74,7 +74,7 @@ public void update() {\n         taskMod.setKey(5);\n         taskMod.setCronExpression(null);\n \n-        taskService.update(taskMod.getKey(), taskMod);\n+        taskService.update(taskMod);\n         SchedTaskTO actual = taskService.read(taskMod.getKey());\n         assertNotNull(actual);\n         assertEquals(task.getKey(), actual.getKey());"},{"sha":"36214c9f60c457cc7fcbba92efab9139914dc2f5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SecurityQuestionITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSecurityQuestionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSecurityQuestionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSecurityQuestionITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -72,7 +72,7 @@ public void update() {\n         SecurityQuestionTO securityQuestionTO = securityQuestionService.read(1L);\n         securityQuestionTO.setContent(\"What is your favorite color?\");\n \n-        securityQuestionService.update(securityQuestionTO.getKey(), securityQuestionTO);\n+        securityQuestionService.update(securityQuestionTO);\n         SecurityQuestionTO actual = securityQuestionService.read(securityQuestionTO.getKey());\n         assertNotNull(actual);\n         assertEquals(actual, securityQuestionTO);"},{"sha":"f6d2e57925ac15573cc4a0742209de38ed747101","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -78,7 +78,7 @@ public class SyncTaskITCase extends AbstractTaskITCase {\n     public static void testSyncActionsSetup() {\n         SyncTaskTO syncTask = taskService.read(SYNC_TASK_ID);\n         syncTask.getActionsClassNames().add(TestSyncActions.class.getName());\n-        taskService.update(SYNC_TASK_ID, syncTask);\n+        taskService.update(syncTask);\n     }\n \n     @Test\n@@ -362,7 +362,7 @@ public void reconcileFromScriptedSQL() {\n         assertNotNull(provision);\n \n         provision.setSyncToken(null);\n-        resourceService.update(resource.getKey(), resource);\n+        resourceService.update(resource);\n \n         // 1. create printer on external resource\n         AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"sync\");\n@@ -449,7 +449,7 @@ public void issueSYNCOPE68() {\n \n             task.getTemplates().put(AnyTypeKind.USER.name(), template);\n \n-            taskService.update(task.getKey(), task);\n+            taskService.update(task);\n             SyncTaskTO actual = taskService.read(task.getKey());\n             assertNotNull(actual);\n             assertEquals(task.getKey(), actual.getKey());\n@@ -514,7 +514,7 @@ public void issueSYNCOPE258() {\n         }\n         item.setJavaRule(TestSyncRule.class.getName());\n \n-        policyService.update(policyTO.getKey(), policyTO);\n+        policyService.update(policyTO);\n         // -----------------------------\n \n         SyncTaskTO task = new SyncTaskTO();\n@@ -548,7 +548,7 @@ public void issueSYNCOPE258() {\n         userMod.getPlainAttrsToRemove().add(\"email\");\n         userMod.getPlainAttrsToUpdate().add(attrMod(\"email\", \"s258@apache.org\"));\n \n-        userService.update(userMod.getKey(), userMod);\n+        userService.update(userMod);\n \n         execProvisioningTask(actual.getKey(), 50, false);\n \n@@ -622,7 +622,7 @@ public void issueSYNCOPE307() {\n \n         task.getTemplates().put(AnyTypeKind.USER.name(), template);\n \n-        taskService.update(task.getKey(), task);\n+        taskService.update(task);\n         execProvisioningTask(task.getKey(), 50, false);\n \n         // check for sync policy\n@@ -736,7 +736,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         ConnConfProperty property = resourceConnector.getConfigurationMap().get(\"retrievePasswordsWithSearch\");\n         property.getValues().clear();\n         property.getValues().add(Boolean.TRUE);\n-        connectorService.update(ldapResource.getConnector(), resourceConnector);\n+        connectorService.update(resourceConnector);\n \n         // 6. Sync the user from the resource\n         SyncTaskTO syncTask = new SyncTaskTO();\n@@ -771,7 +771,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         taskService.delete(syncTask.getKey());\n         property.getValues().clear();\n         property.getValues().add(Boolean.FALSE);\n-        connectorService.update(ldapResource.getConnector(), resourceConnector);\n+        connectorService.update(resourceConnector);\n         deleteUser(updatedUser.getKey());\n     }\n }"},{"sha":"10b07bf6fe52ad856ba5605a2d1abe427de868e2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":21,"deletions":18,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -617,7 +617,7 @@ public void updateInvalidPassword() {\n         userMod.setKey(userTO.getKey());\n         userMod.setPassword(\"pass\");\n \n-        userService.update(userMod.getKey(), userMod);\n+        userService.update(userMod);\n     }\n \n     @Test(expected = SyncopeClientException.class)\n@@ -632,7 +632,7 @@ public void updateSamePassword() {\n         userMod.setKey(userTO.getKey());\n         userMod.setPassword(\"password123\");\n \n-        userService.update(userMod.getKey(), userMod);\n+        userService.update(userMod);\n     }\n \n     @Test\n@@ -1145,9 +1145,10 @@ public void noContent() throws IOException {\n         assertNotNull(user);\n \n         UserMod userMod = new UserMod();\n+        userMod.setKey(user.getKey());\n         userMod.setPassword(\"password321\");\n \n-        response = noContentService.update(user.getKey(), userMod);\n+        response = noContentService.update(userMod);\n         assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n         assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n         assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n@@ -1577,7 +1578,7 @@ public void issueSYNCOPE354() {\n                 item.setExtAttrName(\"uniqueMember\");\n             }\n         }\n-        resourceService.update(ldap.getKey(), ldap);\n+        resourceService.update(ldap);\n \n         // 1. create group with LDAP resource\n         GroupTO groupTO = new GroupTO();\n@@ -1625,7 +1626,7 @@ public void issueSYNCOPE354() {\n                 item.setExtAttrName(\"description\");\n             }\n         }\n-        resourceService.update(ldap.getKey(), ldap);\n+        resourceService.update(ldap);\n     }\n \n     @Test\n@@ -2026,8 +2027,9 @@ public void issueSYNCOPE426() {\n         assertNotNull(userTO);\n \n         UserMod userMod = new UserMod();\n+        userMod.setKey(userTO.getKey());\n         userMod.setPassword(\"anotherPassword123\");\n-        userTO = userService.update(userTO.getKey(), userMod).readEntity(UserTO.class);\n+        userTO = userService.update(userMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n     }\n \n@@ -2041,9 +2043,10 @@ public void issueSYNCOPE435() {\n \n         // 2. try to update user by subscribing a resource - works but propagation is not even attempted\n         UserMod userMod = new UserMod();\n+        userMod.setKey(userTO.getKey());\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_WS1);\n \n-        userTO = userService.update(userTO.getKey(), userMod).readEntity(UserTO.class);\n+        userTO = userService.update(userMod).readEntity(UserTO.class);\n         assertEquals(Collections.singleton(RESOURCE_NAME_WS1), userTO.getResources());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getFailureReason().\n@@ -2064,15 +2067,15 @@ public void ifMatch() {\n         UserMod userMod = new UserMod();\n         userMod.setKey(userTO.getKey());\n         userMod.setUsername(userTO.getUsername() + \"XX\");\n-        userTO = userService.update(userMod.getKey(), userMod).readEntity(UserTO.class);\n+        userTO = userService.update(userMod).readEntity(UserTO.class);\n         assertTrue(userTO.getUsername().endsWith(\"XX\"));\n         EntityTag etag1 = adminClient.getLatestEntityTag(userService);\n         assertFalse(etag.getValue().equals(etag1.getValue()));\n \n         UserService ifMatchService = adminClient.ifMatch(UserService.class, etag);\n         userMod.setUsername(userTO.getUsername() + \"YY\");\n         try {\n-            ifMatchService.update(userMod.getKey(), userMod);\n+            ifMatchService.update(userMod);\n             fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.ConcurrentModification, e.getType());\n@@ -2106,7 +2109,7 @@ public void issueSYNCOPE454() throws NamingException {\n         userMod.setPwdPropRequest(new StatusMod());\n         userMod.getPlainAttrsToUpdate().add(attrMod(\"surname\", \"surname2\"));\n \n-        userService.update(userTO.getKey(), userMod);\n+        userService.update(userMod);\n \n         // 5. try (and succeed again) to perform simple LDAP binding: password has not changed\n         assertNotNull(getLdapRemoteObject(\n@@ -2145,7 +2148,7 @@ public void issueSYNCOPE493() {\n \n         ws1.getProvision(AnyTypeKind.USER.name()).setMapping(ws1NewUMapping);\n \n-        resourceService.update(RESOURCE_NAME_WS1, ws1);\n+        resourceService.update(ws1);\n         ResourceTO newWs1 = resourceService.read(ws1.getKey());\n         assertNotNull(newWs1);\n \n@@ -2182,7 +2185,7 @@ public void issueSYNCOPE493() {\n \n         newWs1.getProvision(AnyTypeKind.USER.name()).setMapping(ws1NewUMapping);\n \n-        resourceService.update(RESOURCE_NAME_WS1, newWs1);\n+        resourceService.update(newWs1);\n     }\n \n     @Test\n@@ -2198,7 +2201,7 @@ public void issueSYNCOPE505DB() throws Exception {\n         ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().add(DBPasswordPropagationActions.class.getName());\n-        resourceService.update(RESOURCE_NAME_TESTDB, resourceTO);\n+        resourceService.update(resourceTO);\n \n         // 3. Add a db resource to the User\n         UserMod userMod = new UserMod();\n@@ -2224,7 +2227,7 @@ public void issueSYNCOPE505DB() throws Exception {\n         resourceTO = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().remove(DBPasswordPropagationActions.class.getName());\n-        resourceService.update(RESOURCE_NAME_TESTDB, resourceTO);\n+        resourceService.update(resourceTO);\n     }\n \n     @Test\n@@ -2241,7 +2244,7 @@ public void issueSYNCOPE505LDAP() throws Exception {\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().add(LDAPPasswordPropagationActions.class.getName());\n         resourceTO.setRandomPwdIfNotProvided(false);\n-        resourceService.update(RESOURCE_NAME_LDAP, resourceTO);\n+        resourceService.update(resourceTO);\n \n         // 3. Add a resource to the User\n         UserMod userMod = new UserMod();\n@@ -2271,7 +2274,7 @@ public void issueSYNCOPE505LDAP() throws Exception {\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().remove(LDAPPasswordPropagationActions.class.getName());\n         resourceTO.setRandomPwdIfNotProvided(true);\n-        resourceService.update(RESOURCE_NAME_LDAP, resourceTO);\n+        resourceService.update(resourceTO);\n     }\n \n     @Test\n@@ -2360,7 +2363,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(csv);\n         try {\n             csv.setPasswordPolicy(8L);\n-            resourceService.update(RESOURCE_NAME_CSV, csv);\n+            resourceService.update(csv);\n             csv = resourceService.read(RESOURCE_NAME_CSV);\n \n             userTO = getUniqueSampleTO(\"syncope391@syncope.apache.org\");\n@@ -2379,7 +2382,7 @@ public void issueSYNCOPE391() {\n         } finally {\n             // resource csv with null password policy\n             csv.setPasswordPolicy(null);\n-            resourceService.update(RESOURCE_NAME_CSV, csv);\n+            resourceService.update(csv);\n         }\n     }\n "},{"sha":"2944cdcb517c049c0246fd4d1df3dd9acc83a8bf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserSelfITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -148,10 +148,11 @@ public void updateWithoutApproval() {\n \n         // 2. self-update (username) - works\n         UserMod userMod = new UserMod();\n+        userMod.setKey(created.getKey());\n         userMod.setUsername(created.getUsername() + \"XX\");\n \n         SyncopeClient authClient = clientFactory.create(created.getUsername(), \"password123\");\n-        UserTO updated = authClient.getService(UserSelfService.class).update(created.getKey(), userMod).\n+        UserTO updated = authClient.getService(UserSelfService.class).update(userMod).\n                 readEntity(UserTO.class);\n         assertNotNull(updated);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers(syncopeService)\n@@ -170,6 +171,7 @@ public void updateWithApproval() {\n \n         // 2. self-update (username + memberships + resource) - works but needs approval\n         UserMod userMod = new UserMod();\n+        userMod.setKey(created.getKey());\n         userMod.setUsername(created.getUsername() + \"XX\");\n         userMod.getMembershipsToAdd().add(7L);\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n@@ -180,7 +182,7 @@ public void updateWithApproval() {\n         userMod.setPwdPropRequest(statusMod);\n \n         SyncopeClient authClient = clientFactory.create(created.getUsername(), \"password123\");\n-        UserTO updated = authClient.getService(UserSelfService.class).update(created.getKey(), userMod).\n+        UserTO updated = authClient.getService(UserSelfService.class).update(userMod).\n                 readEntity(UserTO.class);\n         assertNotNull(updated);\n         assertEquals(\"updateApproval\", updated.getStatus());"},{"sha":"3fc1b980387a40eb2f77cc1e8a8abd940ebab8a9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","patch":"@@ -281,7 +281,7 @@ public void issueSYNCOPE397() {\n                 }\n             }\n \n-            resourceService.update(csv.getKey(), csv);\n+            resourceService.update(csv);\n             csv = resourceService.read(RESOURCE_NAME_CSV);\n             assertNotNull(csv.getProvisions().get(0).getMapping());\n \n@@ -337,7 +337,7 @@ public void issueSYNCOPE397() {\n         } finally {\n             // restore mapping of resource-csv\n             csv.getProvisions().get(0).setMapping(origMapping);\n-            resourceService.update(csv.getKey(), csv);\n+            resourceService.update(csv);\n         }\n     }\n \n@@ -376,7 +376,7 @@ public void issueSYNCOPE442() {\n             }\n         }\n \n-        connectorService.update(connInstanceBean.getKey(), connInstanceBean);\n+        connectorService.update(connInstanceBean);\n \n         UserMod userMod = new UserMod();\n         userMod.setKey(actual.getKey());\n@@ -421,7 +421,7 @@ public void issueSYNCOPE442() {\n             }\n         }\n \n-        connectorService.update(connInstanceBean.getKey(), connInstanceBean);\n+        connectorService.update(connInstanceBean);\n         // ----------------------------------------\n \n         actual = userService.read(actual.getKey());"}]}