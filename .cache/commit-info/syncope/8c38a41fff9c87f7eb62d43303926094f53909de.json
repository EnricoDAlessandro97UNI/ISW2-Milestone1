{"sha":"8c38a41fff9c87f7eb62d43303926094f53909de","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjMzhhNDFmZmY5Yzg3ZjdlYjYyZDQzMzAzOTI2MDk0ZjUzOTA5ZGU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-02-19T08:35:29Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-02-19T08:35:29Z"},"message":"[SYNCOPE-645] Provide a validator for resource user mapping","tree":{"sha":"d4da6e3bcbb2c4521c69172da8de319feaba1e67","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d4da6e3bcbb2c4521c69172da8de319feaba1e67"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8c38a41fff9c87f7eb62d43303926094f53909de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8c38a41fff9c87f7eb62d43303926094f53909de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8c38a41fff9c87f7eb62d43303926094f53909de","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8c38a41fff9c87f7eb62d43303926094f53909de/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"d01ed120bbf99c92bdbeece7986ccf466785f5de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d01ed120bbf99c92bdbeece7986ccf466785f5de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d01ed120bbf99c92bdbeece7986ccf466785f5de"}],"stats":{"total":35,"additions":35,"deletions":0},"files":[{"sha":"124033d2281d9557ebee95e270048552cbd72a2b","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c38a41fff9c87f7eb62d43303926094f53909de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c38a41fff9c87f7eb62d43303926094f53909de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=8c38a41fff9c87f7eb62d43303926094f53909de","patch":"@@ -20,11 +20,13 @@\n \n import javax.validation.ConstraintValidatorContext;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.propagation.PropagationActions;\n+import org.apache.syncope.core.persistence.beans.user.UMapping;\n \n public class ExternalResourceValidator extends AbstractValidator<ExternalResourceCheck, ExternalResource> {\n \n@@ -74,6 +76,16 @@ private boolean isValid(final AbstractMapping mapping, final ConstraintValidator\n             return false;\n         }\n \n+        final AbstractMappingItem accountId = mapping.getAccountIdItem();\n+        if (mapping instanceof UMapping \n+                && AttributableType.ROLE == accountId.getIntMappingType().getAttributableType()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping,\n+                            \"Role attribute as accountId is not permitted\")).\n+                    addNode(\"attributableType\").addConstraintViolation();\n+            return false;\n+        }\n+\n         boolean isValid = true;\n \n         int passwords = 0;"},{"sha":"b5a752790eebf9c45c7d1440c2b24ae6bcd3343f","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8c38a41fff9c87f7eb62d43303926094f53909de/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8c38a41fff9c87f7eb62d43303926094f53909de/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=8c38a41fff9c87f7eb62d43303926094f53909de","patch":"@@ -263,4 +263,27 @@ public void issueSYNCOPE418() {\n             assertTrue(e.hasViolation(EntityViolationType.InvalidName));\n         }\n     }\n+\n+    @Test(expected = InvalidEntityException.class)\n+    public void issueSYNCOPE645() {\n+        ExternalResource resource = new ExternalResource();\n+        resource.setName(\"ws-target-resource-basic-save-invalid\");\n+\n+        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+        resource.setConnector(connector);\n+\n+        UMapping mapping = new UMapping();\n+        resource.setUmapping(mapping);\n+\n+        final UMappingItem item = new UMappingItem();\n+        item.setIntAttrName(\"icon\");\n+        item.setExtAttrName(\"icon\");\n+        item.setIntMappingType(IntMappingType.RoleSchema);\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.setAccountIdItem(item);\n+\n+        // save the resource\n+        ExternalResource actual = resourceDAO.save(resource);\n+        assertNotNull(actual);\n+    }\n }"}]}