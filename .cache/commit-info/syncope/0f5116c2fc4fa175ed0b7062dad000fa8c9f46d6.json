{"sha":"0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmNTExNmMyZmM0ZmExNzVlZDBiNzA2MmRhZDAwMGZhOGM5ZjQ2ZDY=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-07-05T08:17:16Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-07-05T08:17:16Z"},"message":"SYNCOPE-1149 - Adding @Ignore'd test for this feature","tree":{"sha":"c50522bace802e96f283ced63c785cf701e4618f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c50522bace802e96f283ced63c785cf701e4618f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"bbf5b514b92cf37109e1a168a189014f1c570356","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bbf5b514b92cf37109e1a168a189014f1c570356","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bbf5b514b92cf37109e1a168a189014f1c570356"}],"stats":{"total":114,"additions":112,"deletions":2},"files":[{"sha":"a98038275f580b5c1ce82c2486b0021077d65219","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/CustomJWTSSOProvider.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCustomJWTSSOProvider.java?ref=0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm;\n+import org.apache.cxf.rs.security.jose.jws.HmacJwsSignatureVerifier;\n+import org.apache.cxf.rs.security.jose.jws.JwsHeaders;\n+import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n+import org.apache.cxf.rs.security.jose.jws.JwsVerificationSignature;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.spring.security.JWTSSOProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+/**\n+ * Custom implementation for internal JWT validation.\n+ */\n+public class CustomJWTSSOProvider implements JWTSSOProvider {\n+\n+    private String jwtIssuer = \"custom-issuer\";\n+\n+    private final JwsSignatureVerifier delegate;\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    public CustomJWTSSOProvider() {\n+        String customKey = \"12345678910987654321\";\n+        delegate = new HmacJwsSignatureVerifier(customKey.getBytes(), SignatureAlgorithm.HS512);\n+    }\n+\n+    @Override\n+    public String getIssuer() {\n+        return jwtIssuer;\n+    }\n+\n+    @Override\n+    public SignatureAlgorithm getAlgorithm() {\n+        return delegate.getAlgorithm();\n+    }\n+\n+    @Override\n+    public boolean verify(final JwsHeaders headers, final String unsignedText, final byte[] signature) {\n+        return delegate.verify(headers, unsignedText, signature);\n+    }\n+\n+    @Override\n+    public JwsVerificationSignature createJwsVerificationSignature(final JwsHeaders headers) {\n+        return delegate.createJwsVerificationSignature(headers);\n+    }\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public User resolve(final String jwtSubject) {\n+        return userDAO.findByUsername(jwtSubject);\n+    }\n+\n+}"},{"sha":"3ea271536b117ecb3e4392ffa38a642bc78ed333","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.fit.core.reference;\n \n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n@@ -78,6 +77,7 @@ public class ITImplementationLookup implements ImplementationLookup {\n         {\n             Set<String> classNames = new HashSet<>();\n             classNames.add(SyncopeJWTSSOProvider.class.getName());\n+            classNames.add(CustomJWTSSOProvider.class.getName());\n             put(Type.JWT_SSO_PROVIDER, classNames);\n \n             classNames = new HashSet<>();\n@@ -230,7 +230,10 @@ public Set<String> getClassNames(final Type type) {\n \n     @Override\n     public Set<Class<?>> getJWTSSOProviderClasses() {\n-        return Collections.<Class<?>>singleton(SyncopeJWTSSOProvider.class);\n+        Set<Class<?>> classNames = new HashSet<>();\n+        classNames.add(SyncopeJWTSSOProvider.class);\n+        classNames.add(CustomJWTSSOProvider.class);\n+        return classNames;\n     }\n \n     @Override"},{"sha":"f520391295e2e5be2485c0de35648e7db51cb075","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/JWTITCase.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java?ref=0f5116c2fc4fa175ed0b7062dad000fa8c9f46d6","patch":"@@ -383,4 +383,36 @@ public void unknownId() throws ParseException {\n         }\n     }\n \n+    @Test\n+    @org.junit.Ignore\n+    public void thirdPartyToken() throws ParseException {\n+        // Create a new token\n+        Date now = new Date();\n+\n+        Calendar expiry = Calendar.getInstance();\n+        expiry.setTime(now);\n+        expiry.add(Calendar.MINUTE, 5);\n+\n+        JwtClaims jwtClaims = new JwtClaims();\n+        jwtClaims.setTokenId(UUID.randomUUID().toString());\n+        jwtClaims.setSubject(ADMIN_UNAME);\n+        jwtClaims.setIssuedAt(now.getTime());\n+        jwtClaims.setIssuer(\"custom-issuer\");\n+        jwtClaims.setExpiryTime(expiry.getTime().getTime());\n+        jwtClaims.setNotBefore(now.getTime());\n+\n+        JwsHeaders jwsHeaders = new JwsHeaders(JoseType.JWT, SignatureAlgorithm.HS512);\n+        JwtToken jwtToken = new JwtToken(jwsHeaders, jwtClaims);\n+        JwsJwtCompactProducer producer = new JwsJwtCompactProducer(jwtToken);\n+\n+        String customKey = \"12345678910987654321\";\n+\n+        JwsSignatureProvider jwsSignatureProvider =\n+                new HmacJwsSignatureProvider(customKey.getBytes(), SignatureAlgorithm.HS512);\n+        String signed = producer.signWith(jwsSignatureProvider);\n+\n+        SyncopeClient jwtClient = clientFactory.create(signed);\n+        UserSelfService jwtUserSelfService = jwtClient.getService(UserSelfService.class);\n+        jwtUserSelfService.read();\n+    }\n }"}]}