{"sha":"eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmViNGNiNDQ4NTRmYjE3OThlM2Q1ZmNiNzdmOGJkZDg0NjI5ODAzZDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-07T13:00:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-07T13:00:51Z"},"message":"Minor fix","tree":{"sha":"c5049408b6d631a301a6abc66a89ca384914cf49","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c5049408b6d631a301a6abc66a89ca384914cf49"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfcac4bbd4a8007ee2df3bf4c61e667c2d1215b2"}],"stats":{"total":48,"additions":24,"deletions":24},"files":[{"sha":"07a80b6f6f044aeabf8ede658ce2f9e08716a51d","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","patch":"@@ -138,24 +138,24 @@ protected void init() {\n             throw new WicketRuntimeException(\"Could not read \" + CONSOLE_PROPERTIES, e);\n         }\n         version = props.getProperty(\"version\");\n-        Args.notNull(version, \"<version> not set\");\n+        Args.notNull(version, \"<version>\");\n         site = props.getProperty(\"site\");\n-        Args.notNull(site, \"<site> not set\");\n+        Args.notNull(site, \"<site>\");\n         anonymousUser = props.getProperty(\"anonymousUser\");\n-        Args.notNull(anonymousUser, \"<anonymousUser> not set\");\n+        Args.notNull(anonymousUser, \"<anonymousUser>\");\n         anonymousKey = props.getProperty(\"anonymousKey\");\n-        Args.notNull(anonymousKey, \"<anonymousKey> not set\");\n+        Args.notNull(anonymousKey, \"<anonymousKey>\");\n \n         String scheme = props.getProperty(\"scheme\");\n-        Args.notNull(scheme, \"<scheme> not set\");\n+        Args.notNull(scheme, \"<scheme>\");\n         String host = props.getProperty(\"host\");\n-        Args.notNull(host, \"<host> not set\");\n+        Args.notNull(host, \"<host>\");\n         String port = props.getProperty(\"port\");\n-        Args.notNull(port, \"<port> not set\");\n+        Args.notNull(port, \"<port>\");\n         String rootPath = props.getProperty(\"rootPath\");\n-        Args.notNull(rootPath, \"<rootPath> not set\");\n+        Args.notNull(rootPath, \"<rootPath>\");\n         String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n-        Args.notNull(rootPath, \"<useGZIPCompression> not set\");\n+        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n \n         clientFactory = new SyncopeClientFactoryBean().\n                 setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath).\n@@ -197,14 +197,14 @@ protected void init() {\n         mountPage(\"/login\", getSignInPageClass());\n \n         activitiModelerDirectory = props.getProperty(\"activitiModelerDirectory\");\n-        Args.notNull(activitiModelerDirectory, \"<activitiModelerDirectory> not set\");\n+        Args.notNull(activitiModelerDirectory, \"<activitiModelerDirectory>\");\n \n         try {\n             reconciliationReportKey = props.getProperty(\"reconciliationReportKey\");\n         } catch (NumberFormatException e) {\n             LOG.error(\"While parsing reconciliationReportKey\", e);\n         }\n-        Args.notNull(reconciliationReportKey, \"<reconciliationReportKey> not set\");\n+        Args.notNull(reconciliationReportKey, \"<reconciliationReportKey>\");\n \n         mountResource(\"/\" + ACTIVITI_MODELER_CONTEXT, new ResourceReference(ACTIVITI_MODELER_CONTEXT) {\n "},{"sha":"55375bccaca492df511c4370d8952d199c3bb5d8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/eb4cb44854fb1798e3d5fcb77f8bdd84629803d8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=eb4cb44854fb1798e3d5fcb77f8bdd84629803d8","patch":"@@ -105,35 +105,35 @@ protected void init() {\n             throw new WicketRuntimeException(\"Could not read \" + ENDUSER_PROPERTIES, e);\n         }\n         version = props.getProperty(\"version\");\n-        Args.notNull(version, \"<version> not set\");\n+        Args.notNull(version, \"<version>\");\n         site = props.getProperty(\"site\");\n-        Args.notNull(site, \"<site> not set\");\n+        Args.notNull(site, \"<site>\");\n         license = props.getProperty(\"license\");\n-        Args.notNull(license, \"<license> not set\");\n+        Args.notNull(license, \"<license>\");\n         domain = props.getProperty(\"domain\", SyncopeConstants.MASTER_DOMAIN);\n         adminUser = props.getProperty(\"adminUser\");\n-        Args.notNull(adminUser, \"<adminUser> not set\");\n+        Args.notNull(adminUser, \"<adminUser>\");\n         anonymousUser = props.getProperty(\"anonymousUser\");\n-        Args.notNull(anonymousUser, \"<anonymousUser> not set\");\n+        Args.notNull(anonymousUser, \"<anonymousUser>\");\n         anonymousKey = props.getProperty(\"anonymousKey\");\n-        Args.notNull(anonymousKey, \"<anonymousKey> not set\");\n+        Args.notNull(anonymousKey, \"<anonymousKey>\");\n \n         captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n-        Args.notNull(captchaEnabled, \"<captcha> not set\");\n+        Args.notNull(captchaEnabled, \"<captcha>\");\n \n         xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n-        Args.notNull(xsrfEnabled, \"<xsrf> not set\");\n+        Args.notNull(xsrfEnabled, \"<xsrf>\");\n \n         String scheme = props.getProperty(\"scheme\");\n-        Args.notNull(scheme, \"<scheme> not set\");\n+        Args.notNull(scheme, \"<scheme>\");\n         String host = props.getProperty(\"host\");\n-        Args.notNull(host, \"<host> not set\");\n+        Args.notNull(host, \"<host>\");\n         String port = props.getProperty(\"port\");\n-        Args.notNull(port, \"<port> not set\");\n+        Args.notNull(port, \"<port>\");\n         String rootPath = props.getProperty(\"rootPath\");\n-        Args.notNull(rootPath, \"<rootPath> not set\");\n+        Args.notNull(rootPath, \"<rootPath>\");\n         String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n-        Args.notNull(rootPath, \"<useGZIPCompression> not set\");\n+        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n \n         clientFactory = new SyncopeClientFactoryBean().\n                 setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath)."}]}