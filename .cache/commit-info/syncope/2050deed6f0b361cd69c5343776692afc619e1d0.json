{"sha":"2050deed6f0b361cd69c5343776692afc619e1d0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIwNTBkZWVkNmYwYjM2MWNkNjljNTM0Mzc3NjY5MmFmYzYxOWUxZDA=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T15:31:40Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-01T15:31:40Z"},"message":"sonar - fix 7 unconfirmed casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332700 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f81f8c2ad1c21accc0c3c7ab2f05521905ac290e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f81f8c2ad1c21accc0c3c7ab2f05521905ac290e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2050deed6f0b361cd69c5343776692afc619e1d0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2050deed6f0b361cd69c5343776692afc619e1d0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2050deed6f0b361cd69c5343776692afc619e1d0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2050deed6f0b361cd69c5343776692afc619e1d0/comments","author":null,"committer":null,"parents":[{"sha":"98649493b44e9a94c14c6f7eebaa7f3c5c7aa11a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/98649493b44e9a94c14c6f7eebaa7f3c5c7aa11a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/98649493b44e9a94c14c6f7eebaa7f3c5c7aa11a"}],"stats":{"total":25,"additions":19,"deletions":6},"files":[{"sha":"a8d691944394d7ba3c277d326b9f6d735358f3bb","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2050deed6f0b361cd69c5343776692afc619e1d0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2050deed6f0b361cd69c5343776692afc619e1d0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=2050deed6f0b361cd69c5343776692afc619e1d0","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n+import java.io.InvalidClassException;\n import javassist.NotFoundException;\n import org.apache.commons.lang.StringUtils;\n import org.quartz.Scheduler;\n@@ -61,20 +62,14 @@ public class TaskDataBinder {\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(TaskDataBinder.class);\n-\n     private static final String[] IGNORE_TASK_PROPERTIES = {\"executions\", \"resource\", \"user\"};\n-\n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\"id\", \"task\"};\n-\n     @Autowired\n     private TaskExecDAO taskExecDAO;\n-\n     @Autowired\n     private ResourceDAO resourceDAO;\n-\n     @Autowired\n     private SchedulerFactoryBean scheduler;\n-\n     @Autowired\n     private JexlUtil jexlUtil;\n \n@@ -147,6 +142,9 @@ public SchedTask createSchedTask(final SchedTaskTO taskTO, final TaskUtil taskUt\n                 break;\n \n             case SYNC:\n+                if (!(taskTO instanceof SyncTaskTO)) {\n+                    throw new ClassCastException(\"taskUtil is type SyncTask but taskTO is not SyncTaskTO: \" + taskTO.getClass().getName());\n+                }\n                 SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n \n                 ExternalResource resource = resourceDAO.find(syncTaskTO.getResource());\n@@ -167,6 +165,13 @@ public void updateSchedTask(final SchedTask task, final SchedTaskTO taskTO, fina\n         task.setCronExpression(taskTO.getCronExpression());\n \n         if (taskUtil == TaskUtil.SYNC) {\n+            if (!(task instanceof SyncTask)) {\n+                throw new ClassCastException(\"taskUtil is type SyncTask but task is not SyncTask: \" + task.getClass().getName());\n+            }\n+            if (!(taskTO instanceof SyncTaskTO)) {\n+                throw new ClassCastException(\"taskUtil is type SyncTask but taskTO is not SyncTaskTO: \" + taskTO.getClass().getName());\n+            }\n+\n             fill((SyncTask) task, (SyncTaskTO) taskTO);\n         }\n     }\n@@ -209,6 +214,10 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n \n         switch (taskUtil) {\n             case PROPAGATION:\n+                if (!(task instanceof PropagationTask)) {\n+                    throw new ClassCastException(\"taskUtil is type Propagation but task is not PropagationTask: \" + task.getClass().getName());\n+                }\n+\n                 ((PropagationTaskTO) taskTO).setResource(((PropagationTask) task).getResource().getName());\n                 if (((PropagationTask) task).getSyncopeUser() != null) {\n                     ((PropagationTaskTO) taskTO).setUser(((PropagationTask) task).getSyncopeUser().getId());\n@@ -222,6 +231,10 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n             case SYNC:\n                 setExecTime((SchedTaskTO) taskTO, task);\n \n+                if (!(task instanceof SyncTask)) {\n+                    throw new ClassCastException(\"taskUtil is type Sync but task is not SyncTask: \" + task.getClass().getName());\n+                }\n+\n                 ((SyncTaskTO) taskTO).setResource(((SyncTask) task).getResource().getName());\n                 break;\n "}]}