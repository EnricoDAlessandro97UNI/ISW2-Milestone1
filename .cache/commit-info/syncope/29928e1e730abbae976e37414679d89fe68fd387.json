{"sha":"29928e1e730abbae976e37414679d89fe68fd387","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI5OTI4ZTFlNzMwYWJiYWU5NzZlMzc0MTQ2NzlkODlmZTY4ZmQzODc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-10T07:40:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-10T07:40:42Z"},"message":"Cum grano salis (still struggling with Travis CI failure on VirAttrITCase#issueSYNCOPE453","tree":{"sha":"736e7ec54a977114ac9352c6634e680bdfbd0338","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/736e7ec54a977114ac9352c6634e680bdfbd0338"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/29928e1e730abbae976e37414679d89fe68fd387","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/29928e1e730abbae976e37414679d89fe68fd387","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/29928e1e730abbae976e37414679d89fe68fd387","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/29928e1e730abbae976e37414679d89fe68fd387/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"feaea691565fca7819e65866524c5a97e9f948c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/feaea691565fca7819e65866524c5a97e9f948c9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/feaea691565fca7819e65866524c5a97e9f948c9"}],"stats":{"total":227,"additions":115,"deletions":112},"files":[{"sha":"bd888bd2b4353adac914f0323ca6542989a2013f","filename":".travis.yml","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29928e1e730abbae976e37414679d89fe68fd387/.travis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29928e1e730abbae976e37414679d89fe68fd387/.travis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.travis.yml?ref=29928e1e730abbae976e37414679d89fe68fd387","patch":"@@ -26,7 +26,8 @@ script:\n   #invoker.streamLogs: we cannot access to log files through Travis web ui, so display everything in the console\n   - mvn --show-version --quiet clean install -Dinvoker.streamLogs=true\n after_failure:\n-  - cat fit/core-reference/target/log/* fit/core/reference/target/failsafe-reports/org.apache.syncope.fit.core.VirAttrITCase-output.txt\n+  - cat fit/core-reference/target/log/*\n+  - cat fit/core/reference/target/failsafe-reports/org.apache.syncope.fit.*-output.txt\n notifications:\n   email:\n     - dev@syncope.apache.org"},{"sha":"b67ae4e8a3a8efc74609efa7963526c9f0c73e00","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":113,"deletions":111,"changes":224,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29928e1e730abbae976e37414679d89fe68fd387/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29928e1e730abbae976e37414679d89fe68fd387/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=29928e1e730abbae976e37414679d89fe68fd387","patch":"@@ -22,7 +22,6 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n \n import java.util.Locale;\n import java.util.Map;\n@@ -31,7 +30,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.common.lib.patch.GroupPatch;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n@@ -450,127 +449,130 @@ public void issueSYNCOPE436() {\n \n     @Test\n     public void issueSYNCOPE453() {\n-        final String resourceName = \"issueSYNCOPE453-Res-\" + getUUIDString();\n-        final String groupName = \"issueSYNCOPE453-Group-\" + getUUIDString();\n-\n-        // -------------------------------------------\n-        // Create a resource ad-hoc\n-        // -------------------------------------------\n-        ResourceTO resourceTO = new ResourceTO();\n-\n-        resourceTO.setKey(resourceName);\n-        resourceTO.setConnector(107L);\n-\n-        ProvisionTO provisionTO = new ProvisionTO();\n-        provisionTO.setAnyType(AnyTypeKind.USER.name());\n-        provisionTO.setObjectClass(ObjectClass.ACCOUNT_NAME);\n-        resourceTO.getProvisions().add(provisionTO);\n-\n-        MappingTO mapping = new MappingTO();\n-        provisionTO.setMapping(mapping);\n-\n-        MappingItemTO item = new MappingItemTO();\n-        item.setIntAttrName(\"aLong\");\n-        item.setIntMappingType(IntMappingType.UserPlainSchema);\n-        item.setExtAttrName(\"ID\");\n-        item.setPurpose(MappingPurpose.PROPAGATION);\n-        item.setConnObjectKey(true);\n-        mapping.setConnObjectKeyItem(item);\n-\n-        item = new MappingItemTO();\n-        item.setExtAttrName(\"USERNAME\");\n-        item.setIntAttrName(\"username\");\n-        item.setIntMappingType(IntMappingType.Username);\n-        item.setPurpose(MappingPurpose.PROPAGATION);\n-        mapping.getItems().add(item);\n-\n-        item = new MappingItemTO();\n-        item.setExtAttrName(\"EMAIL\");\n-        item.setIntAttrName(\"rvirtualdata\");\n-        item.setIntMappingType(IntMappingType.GroupVirtualSchema);\n-        item.setPurpose(MappingPurpose.PROPAGATION);\n-        mapping.getItems().add(item);\n-\n-        assertNotNull(getObject(\n-                resourceService.create(resourceTO).getLocation(), ResourceService.class, ResourceTO.class));\n-        // -------------------------------------------\n-\n-        // -------------------------------------------\n-        // Create a VirAttrITCase ad-hoc\n-        // -------------------------------------------\n-        GroupTO groupTO = new GroupTO();\n-        groupTO.setName(groupName);\n-        groupTO.setRealm(\"/\");\n-        groupTO.getResources().add(RESOURCE_NAME_LDAP);\n-        groupTO = createGroup(groupTO).getAny();\n-\n-        String rvirtualdata = \"ml@group.it\";\n-\n-        int i = 0;\n-        int maxit = 5;\n-\n-        // wait for group propagation on LDAP\n-        do {\n+        String resourceName = \"issueSYNCOPE453-Res-\" + getUUIDString();\n+        Long groupKey = null;\n+        String groupName = \"issueSYNCOPE453-Group-\" + getUUIDString();\n+\n+        try {\n+            // -------------------------------------------\n+            // Create a resource ad-hoc\n+            // -------------------------------------------\n+            ResourceTO resourceTO = new ResourceTO();\n+\n+            resourceTO.setKey(resourceName);\n+            resourceTO.setConnector(107L);\n+\n+            ProvisionTO provisionTO = new ProvisionTO();\n+            provisionTO.setAnyType(AnyTypeKind.USER.name());\n+            provisionTO.setObjectClass(ObjectClass.ACCOUNT_NAME);\n+            resourceTO.getProvisions().add(provisionTO);\n+\n+            MappingTO mapping = new MappingTO();\n+            provisionTO.setMapping(mapping);\n+\n+            MappingItemTO item = new MappingItemTO();\n+            item.setIntAttrName(\"aLong\");\n+            item.setIntMappingType(IntMappingType.UserPlainSchema);\n+            item.setExtAttrName(\"ID\");\n+            item.setPurpose(MappingPurpose.PROPAGATION);\n+            item.setConnObjectKey(true);\n+            mapping.setConnObjectKeyItem(item);\n+\n+            item = new MappingItemTO();\n+            item.setExtAttrName(\"USERNAME\");\n+            item.setIntAttrName(\"username\");\n+            item.setIntMappingType(IntMappingType.Username);\n+            item.setPurpose(MappingPurpose.PROPAGATION);\n+            mapping.getItems().add(item);\n+\n+            item = new MappingItemTO();\n+            item.setExtAttrName(\"EMAIL\");\n+            item.setIntAttrName(\"rvirtualdata\");\n+            item.setIntMappingType(IntMappingType.GroupVirtualSchema);\n+            item.setPurpose(MappingPurpose.PROPAGATION);\n+            mapping.getItems().add(item);\n+\n+            assertNotNull(getObject(\n+                    resourceService.create(resourceTO).getLocation(), ResourceService.class, ResourceTO.class));\n+            // -------------------------------------------\n+            // -------------------------------------------\n+            // Create a VirAttrITCase ad-hoc\n+            // -------------------------------------------\n+            VirSchemaTO rvirtualdata;\n             try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException e) {\n-            }\n+                rvirtualdata = schemaService.read(SchemaType.VIRTUAL, \"rvirtualdata\");\n+            } catch (SyncopeClientException e) {\n+                LOG.warn(\"rvirtualdata not found, re-creating\", e);\n \n-            GroupPatch patch = new GroupPatch();\n-            patch.setKey(groupTO.getKey());\n-            rvirtualdata = i + rvirtualdata;\n-            patch.getVirAttrs().add(attrTO(\"rvirtualdata\", rvirtualdata));\n+                rvirtualdata = new VirSchemaTO();\n+                rvirtualdata.setKey(\"rvirtualdata\");\n+                rvirtualdata.setExtAttrName(\"businessCategory\");\n+                rvirtualdata.setProvision(20);\n \n-            LOG.info(\"Updating \" + groupName + \" with \" + rvirtualdata);\n-            groupTO = updateGroup(patch).getAny();\n-            assertNotNull(groupTO);\n-            LOG.info(\"Updated \" + groupName + \" now has virAttrs \" + groupTO.getVirAttrs());\n+                rvirtualdata = createSchema(SchemaType.VIRTUAL, rvirtualdata);\n+            }\n+            assertNotNull(rvirtualdata);\n \n-            i++;\n-        } while (groupTO.getVirAttrs().isEmpty() && i < maxit);\n-        if (i == 5) {\n-            fail(\"Timeout when propagating \" + groupName + \" to LDAP\");\n-        }\n+            if (!\"minimal group\".equals(rvirtualdata.getAnyTypeClass())) {\n+                LOG.warn(\"rvirtualdata not in minimal group, restoring\");\n \n-        assertEquals(1, groupTO.getVirAttrs().size());\n-        assertEquals(rvirtualdata, groupTO.getVirAttrs().iterator().next().getValues().get(0));\n-        // -------------------------------------------\n+                AnyTypeClassTO minimalGroup = anyTypeClassService.read(\"minimal group\");\n+                minimalGroup.getVirSchemas().add(rvirtualdata.getKey());\n+                anyTypeClassService.update(minimalGroup);\n \n-        // -------------------------------------------\n-        // Create new user\n-        // -------------------------------------------\n-        UserTO userTO = UserITCase.getUniqueSampleTO(\"syncope453@syncope.apache.org\");\n-        userTO.getPlainAttrs().add(attrTO(\"aLong\", \"123\"));\n-        userTO.getResources().clear();\n-        userTO.getResources().add(resourceName);\n-        userTO.getVirAttrs().clear();\n-        userTO.getDerAttrs().clear();\n-        userTO.getMemberships().clear();\n+                rvirtualdata = schemaService.read(SchemaType.VIRTUAL, rvirtualdata.getKey());\n+                assertEquals(\"minimal group\", rvirtualdata.getAnyTypeClass());\n+            }\n \n-        userTO.getMemberships().add(new MembershipTO.Builder().group(groupTO.getKey()).build());\n+            GroupTO groupTO = new GroupTO();\n+            groupTO.setName(groupName);\n+            groupTO.setRealm(\"/\");\n+            groupTO.getVirAttrs().add(attrTO(rvirtualdata.getKey(), \"ml@group.it\"));\n+            groupTO.getResources().add(RESOURCE_NAME_LDAP);\n+            groupTO = createGroup(groupTO).getAny();\n+            groupKey = groupTO.getKey();\n+            assertEquals(1, groupTO.getVirAttrs().size());\n+            assertEquals(\"ml@group.it\", groupTO.getVirAttrs().iterator().next().getValues().get(0));\n+            // -------------------------------------------\n+\n+            // -------------------------------------------\n+            // Create new user\n+            // -------------------------------------------\n+            UserTO userTO = UserITCase.getUniqueSampleTO(\"syncope453@syncope.apache.org\");\n+            userTO.getPlainAttrs().add(attrTO(\"aLong\", \"123\"));\n+            userTO.getResources().clear();\n+            userTO.getResources().add(resourceName);\n+            userTO.getVirAttrs().clear();\n+            userTO.getDerAttrs().clear();\n+            userTO.getMemberships().clear();\n \n-        ProvisioningResult<UserTO> result = createUser(userTO);\n-        assertEquals(2, result.getPropagationStatuses().size());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(1).getStatus());\n-        userTO = result.getAny();\n+            userTO.getMemberships().add(new MembershipTO.Builder().group(groupTO.getKey()).build());\n \n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+            ProvisioningResult<UserTO> result = createUser(userTO);\n+            assertEquals(2, result.getPropagationStatuses().size());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, result.getPropagationStatuses().get(1).getStatus());\n+            userTO = result.getAny();\n \n-        Map<String, Object> actuals = jdbcTemplate.queryForMap(\n-                \"SELECT id, surname, email FROM testsync WHERE id=?\",\n-                new Object[] { Integer.parseInt(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0)) });\n+            JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n-        assertEquals(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());\n-        assertEquals(rvirtualdata, actuals.get(\"email\"));\n-        // -------------------------------------------\n+            Map<String, Object> actuals = jdbcTemplate.queryForMap(\n+                    \"SELECT id, surname, email FROM testsync WHERE id=?\",\n+                    new Object[] { Integer.parseInt(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0)) });\n \n-        // -------------------------------------------\n-        // Delete resource and group ad-hoc\n-        // -------------------------------------------\n-        resourceService.delete(resourceName);\n-        groupService.delete(groupTO.getKey());\n-        // -------------------------------------------\n+            assertEquals(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());\n+            assertEquals(\"ml@group.it\", actuals.get(\"email\"));\n+            // -------------------------------------------\n+        } finally {\n+            // -------------------------------------------\n+            // Delete resource and group ad-hoc\n+            // -------------------------------------------\n+            resourceService.delete(resourceName);\n+            if (groupKey != null) {\n+                groupService.delete(groupKey);\n+            }\n+            // -------------------------------------------\n+        }\n     }\n \n     @Test"}]}