{"sha":"4c90ea872d43831e4ee593cb7b39306232b477cf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjOTBlYTg3MmQ0MzgzMWU0ZWU1OTNjYjdiMzkzMDYyMzJiNDc3Y2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-24T16:27:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-24T16:27:31Z"},"message":"[SYNCOPE-671] Fix provided","tree":{"sha":"ab09e7503efa2f6d233035474ac72a2374797b83","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ab09e7503efa2f6d233035474ac72a2374797b83"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4c90ea872d43831e4ee593cb7b39306232b477cf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c90ea872d43831e4ee593cb7b39306232b477cf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c90ea872d43831e4ee593cb7b39306232b477cf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c90ea872d43831e4ee593cb7b39306232b477cf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"15cca152d4abdfa42fe31a5f00f9c848cf31548b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15cca152d4abdfa42fe31a5f00f9c848cf31548b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/15cca152d4abdfa42fe31a5f00f9c848cf31548b"}],"stats":{"total":27,"additions":25,"deletions":2},"files":[{"sha":"dc5fdd28bca3837d74198ad2bbed9599b3850beb","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c90ea872d43831e4ee593cb7b39306232b477cf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c90ea872d43831e4ee593cb7b39306232b477cf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=4c90ea872d43831e4ee593cb7b39306232b477cf","patch":"@@ -20,6 +20,7 @@\n \n import java.lang.reflect.Method;\n import java.security.AccessControlException;\n+import java.util.AbstractMap;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -401,7 +402,14 @@ public void confirmPasswordReset(final String token, final String password) {\n \n         uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n+        UserMod userMod = new UserMod();\n+        userMod.setId(user.getId());\n+        userMod.setPassword(password);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                        new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, null), null, \"confirmPasswordReset\"),\n+                true, null);\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n         try {"},{"sha":"57a7a6e5ebd5967ef3f2f57a6653d940bea973de","filename":"core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c90ea872d43831e4ee593cb7b39306232b477cf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c90ea872d43831e4ee593cb7b39306232b477cf/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java?ref=4c90ea872d43831e4ee593cb7b39306232b477cf","patch":"@@ -20,6 +20,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n@@ -53,6 +54,7 @@\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class UserSelfTestITCase extends AbstractTest {\n@@ -93,7 +95,7 @@ public void createAndApprove() {\n         membership.setRoleId(3L);\n         userTO.getMemberships().add(membership);\n         userTO.getResources().add(RESOURCE_NAME_TESTDB);\n-        \n+\n         SyncopeClient anonClient = clientFactory.createAnonymous();\n         userTO = anonClient.getService(UserSelfService.class).\n                 create(userTO, true).\n@@ -256,8 +258,15 @@ public void passwordReset() {\n         UserTO user = UserTestITCase.getUniqueSampleTO(\"pwdReset@syncope.apache.org\");\n         user.setSecurityQuestion(1L);\n         user.setSecurityAnswer(\"Rossi\");\n+        user.getResources().add(RESOURCE_NAME_TESTDB);\n         createUser(user);\n \n+        // verify propagation (including password) on external db\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String pwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n+                user.getUsername());\n+        assertTrue(StringUtils.isNotBlank(pwdOnResource));\n+\n         // 2. verify that new user is able to authenticate\n         SyncopeClient authClient = clientFactory.create(user.getUsername(), \"password123\");\n         UserTO read = authClient.getService(UserSelfService.class).read();\n@@ -292,6 +301,12 @@ public void passwordReset() {\n         read = authClient.getService(UserSelfService.class).read();\n         assertNotNull(read);\n         assertNull(read.getToken());\n+\n+        // 7. verify that password was changed on external resource\n+        String newPwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n+                user.getUsername());\n+        assertTrue(StringUtils.isNotBlank(newPwdOnResource));\n+        assertNotEquals(pwdOnResource, newPwdOnResource);\n     }\n \n     @Test"}]}