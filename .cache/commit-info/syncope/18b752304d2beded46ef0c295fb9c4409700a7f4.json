{"sha":"18b752304d2beded46ef0c295fb9c4409700a7f4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE4Yjc1MjMwNGQyYmVkZWQ0NmVmMGMyOTVmYjljNDQwOTcwMGE3ZjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-08-29T09:09:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-08-29T09:09:22Z"},"message":"Merge from 1_2_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1621266 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0fbae005783a2e05e8b33ca758c190bba426de4b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0fbae005783a2e05e8b33ca758c190bba426de4b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/18b752304d2beded46ef0c295fb9c4409700a7f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18b752304d2beded46ef0c295fb9c4409700a7f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/18b752304d2beded46ef0c295fb9c4409700a7f4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18b752304d2beded46ef0c295fb9c4409700a7f4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"01e7676d01fb2e3ede9c8bfabc2a2bea7ecef120","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01e7676d01fb2e3ede9c8bfabc2a2bea7ecef120","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01e7676d01fb2e3ede9c8bfabc2a2bea7ecef120"},{"sha":"dd57980082ea5fb13c982eef2ba141b437c14117","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd57980082ea5fb13c982eef2ba141b437c14117","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd57980082ea5fb13c982eef2ba141b437c14117"}],"stats":{"total":77,"additions":35,"deletions":42},"files":[{"sha":"92e75643a10ac8bb99f5341e5d8fc2bfcdd98cfc","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -49,8 +49,6 @@\n \n /**\n  * Start and stop an embedded ApacheDS instance alongside with Servlet Context.\n- *\n- * @see http://svn.apache.org/repos/asf/directory/documentation/samples/trunk/embedded-sample/\n  */\n public class ApacheDSStartStopListener implements ServletContextListener {\n \n@@ -200,9 +198,9 @@ private void initDirectoryService(final ServletContext servletContext, final Fil\n     public void contextInitialized(final ServletContextEvent sce) {\n         File workDir = (File) sce.getServletContext().getAttribute(\"javax.servlet.context.tempdir\");\n         workDir = new File(workDir, \"server-work\");\n-        \n+\n         final boolean loadDefaultContent = !workDir.exists();\n-        \n+\n         if (loadDefaultContent && !workDir.mkdirs()) {\n             throw new RuntimeException(\"Could not create \" + workDir.getAbsolutePath());\n         }"},{"sha":"42b28ddac808b1b7e1b5e4f9446584c88576627f","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/LdifURLLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -38,7 +38,7 @@\n /**\n  * Support for commands to load an LDIF from an URL into a DirContext.\n  *\n- * @see org.apache.directory.server.protocol.shared.store.LdifFileLoader\n+ * Inspired from <tt>org.apache.directory.server.protocol.shared.store.LdifFileLoader</tt>.\n  */\n public class LdifURLLoader {\n "},{"sha":"2e6aa013bf626957094c9fed3ad8f71f5094ec6b","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -224,21 +224,21 @@ public boolean isSelfRegistrationAllowed() {\n      *\n      * @param subjectType user / role\n      * @return whether Activiti workflow is enabled for given attributable type\n-     * @see WorkflowService#getOptions(org.apache.syncope.common.types.AttributableType)\n+     * @see WorkflowService#getOptions(org.apache.syncope.common.types.SubjectType)\n      */\n     public boolean isActivitiEnabledFor(final SubjectType subjectType) {\n         Response options = getService(WorkflowService.class).getOptions(subjectType);\n \n         boolean result;\n         switch (subjectType) {\n+            case ROLE:\n+                result = Boolean.valueOf(options.getHeaderString(RESTHeaders.ACTIVITI_ROLE_ENABLED));\n+                break;\n+\n             case USER:\n             default:\n                 result = Boolean.valueOf(options.getHeaderString(RESTHeaders.ACTIVITI_USER_ENABLED));\n                 break;\n-\n-            case ROLE:\n-                result = Boolean.valueOf(options.getHeaderString(RESTHeaders.ACTIVITI_ROLE_ENABLED));\n-                break;\n         }\n \n         return result;"},{"sha":"20789ba99c2a6fb436a2c1533c287e3464d0f9c1","filename":"console/src/main/java/org/apache/syncope/console/resources/WorkflowDefGETResource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefGETResource.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -29,8 +29,7 @@\n /**\n  * Mirror REST resource for obtaining user workflow definition in JSON (used by Activiti Modeler).\n  *\n- * @see org.apache.syncope.common.services.WorkflowService#exportDefinition(\n- * org.apache.syncope.common.types.AttributableType)\n+ * @see org.apache.syncope.common.services.WorkflowService#exportDefinition(org.apache.syncope.common.types.SubjectType)\n  */\n public class WorkflowDefGETResource extends AbstractResource {\n "},{"sha":"604160d3efecc9370962b83163c2f4b8fd4b454c","filename":"console/src/main/java/org/apache/syncope/console/resources/WorkflowDefPUTResource.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -33,9 +33,8 @@\n /**\n  * Mirror REST resource for putting user workflow definition in JSON (used by Activiti Modeler).\n  *\n- * @seeorg.apache.syncope.common.services.WorkflowService#importDefinition(\n- * org.apache.syncope.common.types.AttributableType,\n- * java.lang.String)\n+ * @see org.apache.syncope.common.services.WorkflowService#importDefinition(\n+ * org.apache.syncope.common.types.SubjectType, java.lang.String)\n  */\n public class WorkflowDefPUTResource extends AbstractResource {\n "},{"sha":"0f0ce75b89220ba87646a65c0382915692885517","filename":"core-upgrader/src/main/java/org/apache/syncope/upgrader/util/GuardedStringConverter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FGuardedStringConverter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FGuardedStringConverter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FGuardedStringConverter.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -36,7 +36,7 @@\n  * Help in XStream serialization of GuardedString by (de)serializing instances using the default Encryptor (which works\n  * consistently across class loading) instead of a random Encryptor instance.\n  *\n- * @see XMLSerializer\n+ * @see XMLDeserializer\n  * @see GuardedString\n  */\n public class GuardedStringConverter implements Converter {\n@@ -125,4 +125,4 @@ public Object unmarshal(final HierarchicalStreamReader reader, final Unmarshalli\n     public boolean canConvert(final Class type) {\n         return type.equals(GuardedString.class);\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"d404958185607087035774b5ae9861187ff54944","filename":"core-upgrader/src/main/java/org/apache/syncope/upgrader/util/XMLDeserializer.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FXMLDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FXMLDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core-upgrader%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fupgrader%2Futil%2FXMLDeserializer.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -25,9 +25,8 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * Helper class for deserialization of configuration objects, empowering XStream.\n- *\n- * @see http://xstream.codehaus.org/\n+ * Helper class for deserialization of configuration objects, empowering\n+ * <a href=\"http://xstream.codehaus.org\">XStream</a>.\n  */\n public final class XMLDeserializer {\n \n@@ -49,4 +48,4 @@ public static <T extends Object> T deserialize(final String serialized) {\n \n     private XMLDeserializer() {\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"0c2192b46886b855d48c780dd5613f0d65db3ce6","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractDerAttr.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -41,7 +41,6 @@ public Long getId() {\n     }\n \n     /**\n-     * @see http://commons.apache.org/jexl/reference/index.html\n      * @param attributes the set of attributes against which evaluate this derived attribute\n      * @return the value of this derived attribute\n      */"},{"sha":"a4df015a0278f373cb981e01c2d86a50b6609f2e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractExec.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -67,7 +67,6 @@ public String getMessage() {\n     /**\n      * Set a message for this execution, taking care of replacing every null character with newline.\n      *\n-     * @see https://issues.apache.org/jira/browse/SYNCOPE-214\n      * @param message the message to set for this execution\n      */\n     public void setMessage(String message) {"},{"sha":"18de0efd7164f787ef039b181a9bed1804fb5cd4","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -51,7 +51,7 @@ public class PropagationTask extends Task {\n     private PropagationMode propagationMode;\n \n     /**\n-     * @see PropagationOperation\n+     * @see ResourceOperation\n      */\n     @Enumerated(EnumType.STRING)\n     private ResourceOperation propagationOperation;"},{"sha":"1e2616d7185b91310a3825e503352f93f7c7f88e","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/TaskExecDAOImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -85,16 +85,15 @@ public TaskExec save(final TaskExec execution) {\n     }\n \n     /**\n-     * This method has an explicit Transactional annotation because it is called by AbstractJob.\n-     *\n-     * @see AbstractJob\n+     * This method has an explicit Transactional annotation because it is called by\n+     * {@link org.apache.syncope.core.quartz.AbstractTaskJob#execute(org.quartz.JobExecutionContext) }.\n      *\n      * @param taskId task id\n      * @param execution task execution\n      * @throws InvalidEntityException if any bean validation fails\n      */\n     @Override\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public void saveAndAdd(final Long taskId, final TaskExec execution) throws InvalidEntityException {\n         Task task = taskDAO.find(taskId);\n         task.addExec(execution);"},{"sha":"387b10722c6413c653f4f69cd1c755dfaa565345","filename":"core/src/main/java/org/apache/syncope/core/sync/AbstractSyncActions.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FAbstractSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FAbstractSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FAbstractSyncActions.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -27,15 +27,15 @@\n     /**\n      * Action to be executed before to start the synchronization task execution.\n      *\n-     * @param handler synchronization handler being executed.\n-     * @throws JobExecutionException in case of generic failure.\n+     * @param profile sync profile\n+     * @throws JobExecutionException in case of generic failure\n      */\n     void beforeAll(final SyncProfile<?, ?> profile) throws JobExecutionException;\n \n     /**\n      * Action to be executed after the synchronization task completion.\n      *\n-     * @param handler synchronization handler being executed.\n+     * @param profile sync profile\n      * @param results synchronization result\n      * @throws JobExecutionException in case of generic failure\n      */"},{"sha":"f150e6d352acb4796e1334a9be22187a7f45f3db","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -119,7 +119,8 @@ protected String getGroupMembershipAttrName(final Connector connector) {\n \n     /**\n      * Keep track of members of the role being updated <b>before</b> actual update takes place. This is not needed on\n-     * <ul> <li>beforeProvision() - because the synchronizing role does not exist yet on Syncope</li> <li>beforeDelete() -\n+     * <ul> <li>beforeProvision() - because the synchronizing role does not exist yet on Syncope</li> <li>beforeDelete()\n+     * -\n      * because role delete cascades as membership removal for all users involved</li> </ul>\n      *\n      * {@inheritDoc}\n@@ -177,8 +178,8 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n      *\n      * @param delta representing the synchronizing role\n      * @param connector associated to the current resource\n-     * @return value of attribute returned by getGroupMembershipAttrName()\n-     * @see getGroupMembershipAttrName()\n+     * @return value of attribute returned by\n+     * {@link #getGroupMembershipAttrName(org.apache.syncope.core.propagation.Connector) }\n      */\n     protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector connector) {\n         List<Object> result = Collections.<Object>emptyList();\n@@ -256,13 +257,14 @@ protected void userUpdate(final UserMod userMod, final String resourceName) {\n     /**\n      * Synchronize Syncope memberships with the situation read on the external resource's group.\n      *\n-     * @param handler syncope sync result handler\n+     * @param profile sync profile\n      * @param delta representing the synchronizing role\n      * @param roleTO role after modification performed by the handler\n      * @throws JobExecutionException if anything goes wrong\n      */\n     protected void synchronizeMemberships(\n             final SyncProfile<?, ?> profile, final SyncDelta delta, final RoleTO roleTO) throws JobExecutionException {\n+\n         final AbstractSyncTask task = profile.getSyncTask();\n         final ExternalResource resource = task.getResource();\n         final Connector connector = profile.getConnector();"},{"sha":"ae4f7dd2be7baeccfa0e88fc17e8eaa7e4b5f2c7","filename":"core/src/main/java/org/apache/syncope/core/util/SpringVelocityResourceLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSpringVelocityResourceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSpringVelocityResourceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSpringVelocityResourceLoader.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -29,7 +29,7 @@\n \n /**\n  * Velocity ResourceLoader adapter that loads via a Spring ResourceLoader.\n- * Similar to {@link org.springframework.ui.velocity.SpringResourceLoader} but more integrated with\n+ * Similar to <tt>org.springframework.ui.velocity.SpringResourceLoader</tt> but more integrated with\n  * {@link VelocityEngineFactoryBean}.\n  */\n public class SpringVelocityResourceLoader extends ResourceLoader {"},{"sha":"105bf44be41ce27e8f9bf17060c10a66289c4584","filename":"core/src/main/java/org/apache/syncope/core/util/VelocityEngineFactoryBean.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVelocityEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVelocityEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVelocityEngineFactoryBean.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -28,10 +28,8 @@\n import org.springframework.core.io.ResourceLoader;\n \n /**\n- * Similar to Spring's equivalent, does not implement {@link org.springframework.context.ResourceLoaderAware} thus\n- * allowing custom injection.\n- *\n- * @see org.springframework.ui.velocity.VelocityEngineFactoryBean\n+ * Similar to Spring's equivalent (<tt>org.springframework.ui.velocity.VelocityEngineFactoryBean</tt>), does not\n+ * implement {@link org.springframework.context.ResourceLoaderAware} thus allowing custom injection.\n  */\n public class VelocityEngineFactoryBean implements FactoryBean<VelocityEngine>, InitializingBean {\n "},{"sha":"10b9a6c076498b22cfff3f006a301a97d6dbb26e","filename":"core/src/main/java/org/apache/syncope/core/util/VirAttrCache.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FVirAttrCache.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -56,13 +56,14 @@ public VirAttrCache(final int ttl, final int maxCacheSize) {\n      * @param type user or role\n      * @param id user or role id\n      * @param schemaName virtual attribute name\n-     * @param values virtual attribute values\n+     * @param value virtual attribute values\n      */\n     public void put(\n             final AttributableType type,\n             final Long id,\n             final String schemaName,\n             final VirAttrCacheValue value) {\n+\n         synchronized (cache) {\n             // this operations (retrieve cache space and put entry on) have to be thread safe.\n             if (this.cache.size() >= this.maxCacheSize) {"},{"sha":"2178b368a7ebf0c92857aabeda5a1a3ccddf97d5","filename":"core/src/main/java/org/apache/syncope/core/util/jexl/JexlUtil.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18b752304d2beded46ef0c295fb9c4409700a7f4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java?ref=18b752304d2beded46ef0c295fb9c4409700a7f4","patch":"@@ -45,7 +45,7 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * @see http://commons.apache.org/jexl/reference/index.html\n+ * JEXL <a href=\"http://commons.apache.org/jexl/reference/index.html\">reference</a> is available.\n  */\n public final class JexlUtil {\n "}]}