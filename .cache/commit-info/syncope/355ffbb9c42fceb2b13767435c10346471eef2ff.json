{"sha":"355ffbb9c42fceb2b13767435c10346471eef2ff","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM1NWZmYmI5YzQyZmNlYjJiMTM3Njc0MzVjMTAzNDY0NzFlZWYyZmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-15T14:43:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-15T14:43:40Z"},"message":"[SYNCOPE-744] Small fix to reconciliation widget","tree":{"sha":"d616f7c9c28b028d12a8c6153702d1d6b29b5594","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d616f7c9c28b028d12a8c6153702d1d6b29b5594"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/355ffbb9c42fceb2b13767435c10346471eef2ff","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/355ffbb9c42fceb2b13767435c10346471eef2ff","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/355ffbb9c42fceb2b13767435c10346471eef2ff","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/355ffbb9c42fceb2b13767435c10346471eef2ff/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f85e2d8d3f6e0a17c175db1efa8280ec5e679939","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f85e2d8d3f6e0a17c175db1efa8280ec5e679939","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f85e2d8d3f6e0a17c175db1efa8280ec5e679939"}],"stats":{"total":15,"additions":9,"deletions":6},"files":[{"sha":"8693f39c29bbdc0aa39645324f69146638b9c39e","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/355ffbb9c42fceb2b13767435c10346471eef2ff/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/355ffbb9c42fceb2b13767435c10346471eef2ff/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=355ffbb9c42fceb2b13767435c10346471eef2ff","patch":"@@ -100,6 +100,8 @@ public class ReconciliationWidget extends BaseWidget {\n \n     private static final int ROWS = 10;\n \n+    private final Long reconciliationReportKey;\n+\n     private final BaseModal<Any> detailsModal = new BaseModal<>(\"detailsModal\");\n \n     private final PageReference pageRef;\n@@ -121,12 +123,14 @@ public ReconciliationWidget(final String id, final PageReference pageRef) {\n         overlay.setVisible(false);\n         add(overlay);\n \n+        this.reconciliationReportKey = SyncopeConsoleApplication.get().getReconciliationReportKey();\n+\n         ReportTO reconciliationReport = null;\n         try {\n-            reconciliationReport = restClient.read(SyncopeConsoleApplication.get().getReconciliationReportKey());\n+            reconciliationReport = restClient.read(reconciliationReportKey);\n         } catch (Exception e) {\n             LOG.error(\"Could not fetch the expected reconciliation report with key {}, aborting\",\n-                    SyncopeConsoleApplication.get().getReconciliationReportKey(), e);\n+                    reconciliationReportKey, e);\n         }\n \n         Fragment reportResult = reconciliationReport == null || reconciliationReport.getExecutions().isEmpty()\n@@ -157,7 +161,7 @@ protected void onConnect(final ConnectedMessage message) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    restClient.startExecution(SyncopeConsoleApplication.get().getReconciliationReportKey(), null);\n+                    restClient.startExecution(reconciliationReportKey, null);\n \n                     overlay.setVisible(true);\n                     target.add(ReconciliationWidget.this);\n@@ -243,7 +247,7 @@ private Pair<List<ProgressBean>, ReconciliationReport> parseReconciliationReport\n \n             @Override\n             public boolean evaluate(final ExecTO exec) {\n-                return exec.getRefKey() == SyncopeConsoleApplication.get().getReconciliationReportKey();\n+                return reconciliationReportKey.equals(exec.getRefKey());\n             }\n         });\n         if (exec == null) {\n@@ -513,8 +517,7 @@ public boolean evaluate(final JobTO jobTO) {\n                             }\n                         });\n                         if (reportJobTO != null && !reportJobTO.isRunning()) {\n-                            LOG.debug(\"Report {} is not running\",\n-                                    SyncopeConsoleApplication.get().getReconciliationReportKey());\n+                            LOG.debug(\"Report {} is not running\", reconciliationReportKey);\n \n                             WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(application);\n                             WebSocketPushBroadcaster broadcaster ="}]}