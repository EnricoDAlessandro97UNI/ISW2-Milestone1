{"sha":"144c756d854ff21499483254577c1fdfeeece1e0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0NGM3NTZkODU0ZmYyMTQ5OTQ4MzI1NDU3N2MxZmRmZWVlY2UxZTA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T16:01:05Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T16:01:05Z"},"message":"Fixes #88\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246868 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"48b3f52a403aa080af0ef3df0c8fb8546f3558ce","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/48b3f52a403aa080af0ef3df0c8fb8546f3558ce"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/144c756d854ff21499483254577c1fdfeeece1e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/144c756d854ff21499483254577c1fdfeeece1e0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/144c756d854ff21499483254577c1fdfeeece1e0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/144c756d854ff21499483254577c1fdfeeece1e0/comments","author":null,"committer":null,"parents":[{"sha":"c2f9e9c133877c40ef838a81e1e9c9e35e7f4857","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c2f9e9c133877c40ef838a81e1e9c9e35e7f4857","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c2f9e9c133877c40ef838a81e1e9c9e35e7f4857"}],"stats":{"total":164,"additions":141,"deletions":23},"files":[{"sha":"d6c82f22bf085e193ddfa461c2a3de412084a2b5","filename":"client/src/main/java/org/syncope/types/CipherAlgorithm.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FCipherAlgorithm.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -0,0 +1,33 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.types;\n+\n+public enum CipherAlgorithm {\n+\n+    MD5(\"MD5\"),\n+    SHA1(\"SHA-1\"),\n+    SHA256(\"SHA-256\"),\n+    AES(\"AES\");\n+\n+    final private String algorithm;\n+\n+    CipherAlgorithm(String algorithm) {\n+        this.algorithm = algorithm;\n+    }\n+\n+    public final String getAlgorithm() {\n+        return algorithm;\n+    }\n+}"},{"sha":"373df4511fa00f43995b3053a1bcf49aace626ea","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":65,"deletions":10,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -14,24 +14,29 @@\n  */\n package org.syncope.core.persistence.beans.user;\n \n+import static javax.persistence.EnumType.STRING;\n+\n import java.security.MessageDigest;\n-import java.security.NoSuchAlgorithmException;\n import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n+import javax.crypto.Cipher;\n+import javax.crypto.spec.SecretKeySpec;\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.Enumerated;\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n import javax.validation.Valid;\n+import org.apache.commons.codec.binary.Base64;\n import org.apache.commons.lang.RandomStringUtils;\n import org.hibernate.annotations.Cache;\n import org.hibernate.annotations.CacheConcurrencyStrategy;\n@@ -41,11 +46,25 @@\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.syncope.types.CipherAlgorithm;\n \n @Entity\n @Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)\n public class SyncopeUser extends AbstractAttributable {\n \n+    private static SecretKeySpec keySpec;\n+\n+    static {\n+        try {\n+\n+            keySpec = new SecretKeySpec(\n+                    \"1abcdefghilmnopqrstuvz2!\".getBytes(\"UTF8\"), \"AES\");\n+\n+        } catch (Exception e) {\n+            LOG.error(\"Error during key specification\", e);\n+        }\n+    }\n+\n     @Id\n     private Long id;\n \n@@ -72,6 +91,10 @@ public class SyncopeUser extends AbstractAttributable {\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date tokenExpireTime;\n \n+    @Column(nullable = true)\n+    @Enumerated(STRING)\n+    CipherAlgorithm cipherAlgorithm;\n+\n     public SyncopeUser() {\n         memberships = new ArrayList<Membership>();\n         attributes = new ArrayList<UAttr>();\n@@ -162,25 +185,49 @@ public String getPassword() {\n      * TODO: password policies.\n      * @param password the password to be set\n      */\n-    public void setPassword(final String password) {\n-        if (password == null) {\n-            this.password = null;\n-        } else {\n-            try {\n-                MessageDigest algorithm = MessageDigest.getInstance(\"MD5\");\n+    public void setPassword(\n+            final String password, final CipherAlgorithm cipherAlgoritm) {\n+\n+        try {\n+            if (cipherAlgoritm == null\n+                    || cipherAlgoritm == CipherAlgorithm.AES) {\n+\n+                final byte[] cleartext = password.getBytes(\"UTF8\");\n+\n+                final Cipher cipher = Cipher.getInstance(\n+                        CipherAlgorithm.AES.getAlgorithm());\n+\n+                cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n+\n+                byte[] encoded = cipher.doFinal(cleartext);\n+\n+                this.password = new String(\n+                        Base64.encodeBase64(encoded));\n+\n+            } else {\n+\n+                MessageDigest algorithm = MessageDigest.getInstance(\n+                        cipherAlgoritm.getAlgorithm());\n+\n                 algorithm.reset();\n                 algorithm.update(password.getBytes());\n \n-                byte[] messageDigest = algorithm.digest();\n+                byte messageDigest[] = algorithm.digest();\n+\n                 StringBuilder hexString = new StringBuilder();\n                 for (int i = 0; i < messageDigest.length; i++) {\n                     hexString.append(\n                             Integer.toHexString(0xFF & messageDigest[i]));\n                 }\n+\n                 this.password = hexString.toString();\n-            } catch (NoSuchAlgorithmException e) {\n-                LOG.error(\"Could not find MD5 algorithm\", e);\n             }\n+\n+            this.cipherAlgorithm = cipherAlgoritm;\n+\n+        } catch (Throwable t) {\n+            LOG.error(\"Could not encode password\", t);\n+            this.password = null;\n         }\n     }\n \n@@ -274,4 +321,12 @@ public boolean checkToken(final String token) {\n         return this.token != null && this.token.equals(token)\n                 && tokenExpireTime.after(new Date());\n     }\n+\n+    public CipherAlgorithm getCipherAlgoritm() {\n+        return cipherAlgorithm;\n+    }\n+\n+    public void setCipherAlgoritm(CipherAlgorithm cipherAlgoritm) {\n+        this.cipherAlgorithm = cipherAlgoritm;\n+    }\n }"},{"sha":"b5a2b3b3dd810b85ce386bb68fa462574b22eaef","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -179,7 +179,7 @@ public ModelAndView verifyPassword(@PathVariable(\"userId\") Long userId,\n         SyncopeUser user = getUserFromId(userId);\n \n         SyncopeUser passwordUser = new SyncopeUser();\n-        passwordUser.setPassword(password);\n+        passwordUser.setPassword(password, user.getCipherAlgoritm());\n \n         return new ModelAndView().addObject(user.getPassword().\n                 equalsIgnoreCase(passwordUser.getPassword()));"},{"sha":"b6f1126ef5537443c25a38492051c665108d82f3","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -43,6 +43,7 @@\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.AttrDAO;\n import org.syncope.core.persistence.dao.AttrValueDAO;\n+import org.syncope.core.persistence.dao.ConfDAO;\n import org.syncope.core.persistence.dao.DerAttrDAO;\n import org.syncope.core.persistence.dao.DerSchemaDAO;\n import org.syncope.core.persistence.dao.MembershipDAO;\n@@ -63,6 +64,9 @@ public abstract class AbstractAttributableDataBinder {\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n \n+    @Autowired\n+    protected ConfDAO confDAO;\n+\n     @Autowired\n     protected RoleDAO roleDAO;\n "},{"sha":"4ba4482182164d9ed47cdbefc2d4cc44342742d5","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":18,"deletions":4,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -43,6 +43,7 @@\n import org.syncope.core.persistence.beans.user.UAttr;\n import org.syncope.core.persistence.beans.user.UDerAttr;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n+import org.syncope.types.CipherAlgorithm;\n import org.syncope.types.ResourceOperationType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n@@ -52,7 +53,6 @@ public class UserDataBinder extends AbstractAttributableDataBinder {\n     public enum CheckinResultAction {\n \n         CREATE, OVERWRITE, REJECT\n-\n     }\n \n     public class CheckInResult {\n@@ -132,7 +132,7 @@ public void empty(final SyncopeUser user) {\n         }\n         user.getTargetResources().clear();\n \n-        user.setPassword(null);\n+        user.setPassword(null, getCipherAlgoritm());\n     }\n \n     public void create(final SyncopeUser user, final UserTO userTO)\n@@ -151,7 +151,7 @@ public void create(final SyncopeUser user, final UserTO userTO)\n \n             invalidPassword.addElement(\"Null password\");\n         } else {\n-            user.setPassword(userTO.getPassword());\n+            user.setPassword(userTO.getPassword(), getCipherAlgoritm());\n         }\n \n         if (!invalidPassword.getElements().isEmpty()) {\n@@ -201,7 +201,7 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n \n         // password\n         if (userMod.getPassword() != null) {\n-            user.setPassword(userMod.getPassword());\n+            user.setPassword(userMod.getPassword(), getCipherAlgoritm());\n         }\n \n         // attributes, derived attributes and resources\n@@ -363,4 +363,18 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n \n         return userTO;\n     }\n+\n+    private CipherAlgorithm getCipherAlgoritm() {\n+        CipherAlgorithm cipherAlgoritm;\n+\n+        try {\n+            cipherAlgoritm = CipherAlgorithm.valueOf(\n+                    confDAO.find(\"password.cipher.algorithm\").getValue());\n+        } catch (Exception e) {\n+            LOG.error(\"Cipher algorithm nof found. Let's use AES\", e);\n+            cipherAlgoritm = CipherAlgorithm.AES;\n+        }\n+\n+        return cipherAlgoritm;\n+    }\n }"},{"sha":"bf8b82a75fc6b4f2f50ae9c8d336f730fd84fe1a","filename":"core/src/main/java/org/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -25,6 +25,7 @@\n import org.springframework.security.core.userdetails.UsernameNotFoundException;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.types.CipherAlgorithm;\n \n @Configurable\n public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n@@ -76,9 +77,12 @@ public Authentication authenticate(final Authentication authentication)\n \n         boolean authenticated;\n         SyncopeUser passwordUser = new SyncopeUser();\n-        passwordUser.setPassword(\n-                authentication.getCredentials().toString());\n+\n         if (adminUser.equals(authentication.getPrincipal())) {\n+            passwordUser.setPassword(\n+                    authentication.getCredentials().toString(),\n+                    CipherAlgorithm.MD5);\n+\n             authenticated = adminMD5Password.equalsIgnoreCase(\n                     passwordUser.getPassword());\n         } else {\n@@ -96,6 +100,10 @@ public Authentication authenticate(final Authentication authentication)\n                         \"Could not find any user with id \" + id);\n             }\n \n+            passwordUser.setPassword(\n+                    authentication.getCredentials().toString(),\n+                    user.getCipherAlgoritm());\n+\n             authenticated = user.getPassword().equalsIgnoreCase(\n                     passwordUser.getPassword());\n         }"},{"sha":"38a591a787454d796578fe0110cfe690b655c1fe","filename":"core/src/main/resources/content.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -42,6 +42,7 @@\n     <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n     <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n     <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n \n     <USchema name=\"surname\" type=\"String\" virtual=\"0\"\n                 mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>"},{"sha":"76857b4c3cd340e9ab0aca806a0a9d41a611c9e2","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -25,6 +25,7 @@\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n import org.syncope.core.util.EntitlementUtil;\n+import org.syncope.types.CipherAlgorithm;\n \n @Transactional\n public class UserTest extends AbstractTest {\n@@ -105,7 +106,7 @@ public final void findById() {\n     @Test\n     public final void save() {\n         SyncopeUser user = new SyncopeUser();\n-        user.setPassword(\"password\");\n+        user.setPassword(\"password\", CipherAlgorithm.SHA256);\n \n         user = userDAO.save(user);\n "},{"sha":"db1e79d7d4a626818320739de9a10ff017a299a8","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -42,6 +42,7 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.workflow.Constants;\n+import org.syncope.types.CipherAlgorithm;\n import org.syncope.types.SyncopeClientExceptionType;\n \n public class UserTestITCase extends AbstractTest {\n@@ -614,7 +615,7 @@ public final void update() {\n                 userMod, UserTO.class);\n \n         SyncopeUser passwordTestUser = new SyncopeUser();\n-        passwordTestUser.setPassword(\"newPassword\");\n+        passwordTestUser.setPassword(\"newPassword\", CipherAlgorithm.MD5);\n         assertEquals(passwordTestUser.getPassword(),\n                 userTO.getPassword());\n "},{"sha":"cb098f07694eaaa5330908f2a5e4c82c53ac1e96","filename":"core/src/test/resources/content.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/144c756d854ff21499483254577c1fdfeeece1e0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=144c756d854ff21499483254577c1fdfeeece1e0","patch":"@@ -42,11 +42,12 @@\n     <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n     <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n     <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"password.cipher.algorithm\" value=\"MD5\"/>\n                           \n-    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n+    <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n+    <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>"}]}