{"sha":"4c1884bfee4ab2fba7c428768c43da2ebdba961a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjMTg4NGJmZWU0YWIyZmJhN2M0Mjg3NjhjNDNkYTJlYmRiYTk2MWE=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-01-29T13:56:46Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-01-29T13:56:46Z"},"message":"merged from the branch: made more robust in respect of external resource returned values\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439894 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"292e209f0e60de65b4f8dcdf5d8e0027e438cbd2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/292e209f0e60de65b4f8dcdf5d8e0027e438cbd2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4c1884bfee4ab2fba7c428768c43da2ebdba961a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c1884bfee4ab2fba7c428768c43da2ebdba961a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c1884bfee4ab2fba7c428768c43da2ebdba961a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c1884bfee4ab2fba7c428768c43da2ebdba961a/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"7fbf6d3420b9d0bf694a5087f5702bc4f6e86e91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7fbf6d3420b9d0bf694a5087f5702bc4f6e86e91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7fbf6d3420b9d0bf694a5087f5702bc4f6e86e91"}],"stats":{"total":28,"additions":20,"deletions":8},"files":[{"sha":"79989c0b6040607a008dc7eb34481562ed872c69","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c1884bfee4ab2fba7c428768c43da2ebdba961a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c1884bfee4ab2fba7c428768c43da2ebdba961a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=4c1884bfee4ab2fba7c428768c43da2ebdba961a","patch":"@@ -248,6 +248,7 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                 case Username:\n                     if (attributableTO instanceof UserTO) {\n                         ((UserTO) attributableTO).setUsername(attribute == null || attribute.getValue().isEmpty()\n+                                || attribute.getValue().get(0) == null\n                                 ? null\n                                 : attribute.getValue().get(0).toString());\n                     }\n@@ -256,18 +257,23 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                 case RoleName:\n                     if (attributableTO instanceof RoleTO) {\n                         ((RoleTO) attributableTO).setName(attribute == null || attribute.getValue().isEmpty()\n+                                || attribute.getValue().get(0) == null\n                                 ? null\n                                 : attribute.getValue().get(0).toString());\n                     }\n                     break;\n \n                 case RoleOwnerSchema:\n-                    if (attributableTO instanceof RoleTO && attribute != null && !attribute.getValue().isEmpty()) {\n+                    if (attributableTO instanceof RoleTO && attribute != null) {\n                         // using a special attribute (with schema \"\", that will be ignored) for carrying the\n                         // RoleOwnerSchema value\n                         attributeTO = new AttributeTO();\n-                        attributeTO.setSchema(\"\");\n-                        attributeTO.addValue(attribute.getValue().get(0).toString());\n+                        attributeTO.setSchema(StringUtils.EMPTY);\n+                        if (attribute.getValue().isEmpty() || attribute.getValue().get(0) == null) {\n+                            attributeTO.addValue(StringUtils.EMPTY);\n+                        } else {\n+                            attributeTO.addValue(attribute.getValue().get(0).toString());\n+                        }\n \n                         ((RoleTO) attributableTO).addAttribute(attributeTO);\n                     }\n@@ -282,7 +288,9 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             ? Collections.emptyList()\n                             : attribute.getValue()) {\n \n-                        attributeTO.addValue(value.toString());\n+                        if (value != null) {\n+                            attributeTO.addValue(value.toString());\n+                        }\n                     }\n \n                     attributableTO.addAttribute(attributeTO);\n@@ -304,7 +312,9 @@ private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(fin\n                             ? Collections.emptyList()\n                             : attribute.getValue()) {\n \n-                        attributeTO.addValue(value.toString());\n+                        if (value != null) {\n+                            attributeTO.addValue(value.toString());\n+                        }\n                     }\n \n                     attributableTO.addVirtualAttribute(attributeTO);"},{"sha":"63393e3720ed2e46073d7d74259a1cf1aaf5ab9b","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c1884bfee4ab2fba7c428768c43da2ebdba961a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c1884bfee4ab2fba7c428768c43da2ebdba961a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=4c1884bfee4ab2fba7c428768c43da2ebdba961a","patch":"@@ -24,6 +24,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.RoleMod;\n@@ -351,7 +352,8 @@ private List<Long> findByAttributableSearch(final ConnectorObject connObj, final\n             AttributeCond.Type type;\n             String expression = null;\n \n-            if (value == null || value.getValue() == null || value.getValue().isEmpty()) {\n+            if (value == null || value.getValue() == null || value.getValue().isEmpty()\n+                    || (value.getValue().size() == 1 && value.getValue().get(0) == null)) {\n                 type = AttributeCond.Type.ISNULL;\n             } else {\n                 type = AttributeCond.Type.EQ;\n@@ -505,7 +507,7 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n                 }\n                 if (AttributableType.ROLE == attrUtil.getType()) {\n                     WorkflowResult<Long> created = rwfAdapter.create((RoleTO) subjectTO);\n-                    AttributeTO roleOwner = subjectTO.getAttributeMap().get(\"\");\n+                    AttributeTO roleOwner = subjectTO.getAttributeMap().get(StringUtils.EMPTY);\n                     if (roleOwner != null) {\n                         roleOwnerMap.put(created.getResult(), roleOwner.getValues().iterator().next());\n                     }\n@@ -597,7 +599,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                             WorkflowResult<Long> updated = rwfAdapter.update((RoleMod) mod);\n                             String roleOwner = null;\n                             for (AttributeMod attrMod : mod.getAttributesToBeUpdated()) {\n-                                if (\"\".equals(attrMod.getSchema())) {\n+                                if (attrMod.getSchema().isEmpty()) {\n                                     roleOwner = attrMod.getValuesToBeAdded().iterator().next();\n                                 }\n                             }"}]}